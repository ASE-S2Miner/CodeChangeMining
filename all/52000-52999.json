[{"original_method":"public void putAll(final Iterable<Map.Entry<String,String>> entries) {\n        for (Map.Entry<String,String> e : entries)\n            put(e.getKey(), e.getValue());\n    }","id":52000,"modified_method":"public synchronized void putAll(final Iterable<Map.Entry<String,String>> entries) {\n        final boolean onHold = mHoldingChanges;\n        if (!onHold)\n            holdChanges();\n        for (Map.Entry<String,String> e : entries)\n            put(e.getKey(), e.getValue());\n        if (!onHold)\n            releaseChanges();\n    }","commit_id":"8e3c2010d2a0e1e0f4312c17b8f45c9b0d88c8f8","url":"https://github.com/VUE/VUE"},{"original_method":"/** @return a flat collection of key-value pairs -- modifications to the collection will modify the map */\n    public Collection<Map.Entry<String,Object>> entries() {\n        return mData.entries();\n    }","id":52001,"modified_method":"/** @return a flat collection of key-value pairs -- modifications to the collection will modify the map */\n    public Collection<Map.Entry<Key,Object>> entries() {\n        return mData.entries();\n    }","commit_id":"8e3c2010d2a0e1e0f4312c17b8f45c9b0d88c8f8","url":"https://github.com/VUE/VUE"},{"original_method":"/** @return the first value found for the given key */\n    // todo performance: impl could be faster\n    public synchronized Object getFirst(String key) {\n        Object o = mData.get(key);\n        if (o instanceof Collection) {\n            Collection bag = (Collection) o;\n            if (bag.size() == 0)\n                return null;\n            else if (bag instanceof List)\n                return ((List)bag).get(0);\n            else\n                return Iterators.get(bag.iterator(), 0);\n        }\n        else\n            return o;\n        //return super.get(k);\n    }","id":52002,"modified_method":"/** @return the first value found for the given key */\n    public synchronized Object getFirst(String key) {\n        return getFirst(Key.instance(key));\n    }","commit_id":"8e3c2010d2a0e1e0f4312c17b8f45c9b0d88c8f8","url":"https://github.com/VUE/VUE"},{"original_method":"public String getFirstValue(String key) {\n        final Object o = getFirst(key);\n        return o == null ? null : o.toString();\n    }","id":52003,"modified_method":"/** @return first value found for key as a string */\n    public String getFirstString(String key) {\n        final Object o = getFirst(key);\n        return o == null ? null : o.toString();\n    }","commit_id":"8e3c2010d2a0e1e0f4312c17b8f45c9b0d88c8f8","url":"https://github.com/VUE/VUE"},{"original_method":"public synchronized void put(final String key, final Object value)\n    {\n        if (mData.put(key, value)) {\n            if (mHoldingChanges)\n                mChanges++;\n            else if (mTableModel != null)\n                mTableModel.reload();\n        }\n        //else mData.put(key, new RepeatValue(value));\n    }","id":52004,"modified_method":"/** add the given key/value pair */\n    public synchronized void put(final String key, final Object value)\n    {\n        final Object internalKey = Key.instance(key);\n        \n        if (DEBUG.DATA) Log.debug(\"put \" + internalKey + \" \" + Util.tags(value));\n        \n        if (mData.put(internalKey, value))\n            markChange();\n    }","commit_id":"8e3c2010d2a0e1e0f4312c17b8f45c9b0d88c8f8","url":"https://github.com/VUE/VUE"},{"original_method":"private void buildCaches() {\n    Iterable<? extends ZipEntry> entries = CollectionUtil.asIterable(myZipFile.entries());\n\n    for (ZipEntry entry : entries) {\n      if (entry.isDirectory()) {\n        String name = entry.getName();\n        if (name.endsWith(\"/\")) {\n          name = name.substring(0, name.length() - 1);\n        }\n\n        //directry having a '.' in its name can't contain classes.\n        // See http://youtrack.jetbrains.net/issue/MPS-7012 for details \n        if (name.contains(\".\")) continue;\n\n        String pack = name.replace('/', '.');\n        buildPackageCaches(pack);\n      } else {\n        String name = entry.getName();\n\n        if (!name.endsWith(MPSExtentions.DOT_CLASSFILE)) continue;\n\n        int packEnd = name.lastIndexOf('/');\n        String pack;\n        String className;\n        if (packEnd == -1) {\n          pack = \"\";\n          className = name.substring(0, name.length() - MPSExtentions.DOT_CLASSFILE.length());\n        } else {\n          pack = packEnd > 0 ? name.substring(0, packEnd).replace('/', '.') : name;\n          className = name.substring(packEnd + 1, name.length() - \".class\".length());\n        }\n\n        buildPackageCaches(pack);\n        myCache.addClass(pack, className);\n\n        if (pack.length() > 0) {\n          myEntries.put(pack + \".\" + className, entry);\n        } else {\n          myEntries.put(className, entry);\n        }\n      }\n    }\n  }","id":52005,"modified_method":"private void buildCaches() {\n    Enumeration<? extends ZipEntry> entries = myZipFile.entries();\n\n    while (entries.hasMoreElements()) {\n      ZipEntry entry = entries.nextElement();\n      if (entry.isDirectory()) {\n        String name = entry.getName();\n        if (name.endsWith(\"/\")) {\n          name = name.substring(0, name.length() - 1);\n        }\n\n        //directry having a '.' in its name can't contain classes.\n        // See http://youtrack.jetbrains.net/issue/MPS-7012 for details \n        if (name.contains(\".\")) continue;\n\n        String pack = name.replace('/', '.');\n        buildPackageCaches(pack);\n      } else {\n        String name = entry.getName();\n\n        if (!name.endsWith(MPSExtentions.DOT_CLASSFILE)) continue;\n\n        int packEnd = name.lastIndexOf('/');\n        String pack;\n        String className;\n        if (packEnd == -1) {\n          pack = \"\";\n          className = name.substring(0, name.length() - MPSExtentions.DOT_CLASSFILE.length());\n        } else {\n          pack = packEnd > 0 ? name.substring(0, packEnd).replace('/', '.') : name;\n          className = name.substring(packEnd + 1, name.length() - \".class\".length());\n        }\n\n        buildPackageCaches(pack);\n        myCache.addClass(pack, className);\n\n        if (pack.length() > 0) {\n          myEntries.put(pack + \".\" + className, entry);\n        } else {\n          myEntries.put(className, entry);\n        }\n      }\n    }\n  }","commit_id":"d76d6c9566db2a095edd1ffd37b674d42fb2280a","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void buildCaches() {\n    Iterable<? extends ZipEntry> entries = CollectionUtil.asIterable(myZipFile.entries());\n\n    for (ZipEntry entry : entries) {\n      if (entry.isDirectory()) {\n        String name = entry.getName();\n        if (name.endsWith(\"/\")) {\n          name = name.substring(0, name.length() - 1);\n        }\n\n        buildDirectoryCaches(name);\n      } else {\n        String name = entry.getName();\n\n        int packEnd = name.lastIndexOf('/');\n        String dir;\n        String fileName;\n        if (packEnd == -1) {\n          dir = \"\";\n          fileName = name;\n        } else {\n          dir = packEnd > 0 ? name.substring(0, packEnd) : name;\n          fileName = name.substring(packEnd + 1);\n        }\n\n        buildDirectoryCaches(dir);\n        getFilesFor(dir).add(fileName);\n\n        if (dir.length() > 0) {\n          myEntries.put(dir + \"/\" + fileName, entry);\n        } else {\n          myEntries.put(fileName, entry);\n        }\n      }\n    }\n  }","id":52006,"modified_method":"private void buildCaches() {\n    Enumeration<? extends ZipEntry> entries = myZipFile.entries();\n\n    while (entries.hasMoreElements()){\n      ZipEntry entry = entries.nextElement();\n      if (entry.isDirectory()) {\n        String name = entry.getName();\n        if (name.endsWith(\"/\")) {\n          name = name.substring(0, name.length() - 1);\n        }\n\n        buildDirectoryCaches(name);\n      } else {\n        String name = entry.getName();\n\n        int packEnd = name.lastIndexOf('/');\n        String dir;\n        String fileName;\n        if (packEnd == -1) {\n          dir = \"\";\n          fileName = name;\n        } else {\n          dir = packEnd > 0 ? name.substring(0, packEnd) : name;\n          fileName = name.substring(packEnd + 1);\n        }\n\n        buildDirectoryCaches(dir);\n        getFilesFor(dir).add(fileName);\n\n        if (dir.length() > 0) {\n          myEntries.put(dir + \"/\" + fileName, entry);\n        } else {\n          myEntries.put(fileName, entry);\n        }\n      }\n    }\n  }","commit_id":"d76d6c9566db2a095edd1ffd37b674d42fb2280a","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void addAndRemoveVisibleChildren(Set<SNode> removedNodes, Set<SNode> addedNodes) {\n    if (getTree() == null) return;\n    DefaultTreeModel treeModel = (DefaultTreeModel) getTree().getModel();\n    for (SNode removed : removedNodes) {\n      SNodeTreeNode node = (SNodeTreeNode) myTreeNode.findDescendantWith(removed);\n      if (node == null) continue;\n      treeModel.removeNodeFromParent(node);\n    }\n\n    outer:\n    for (SNode added : addedNodes) {\n      if (added.isDeleted()) continue;\n      if (added.getParent() == null) continue;\n      SNodeTreeNode parent = (SNodeTreeNode) myTreeNode.findDescendantWith(added.getParent());\n      if (parent == null) continue;\n      if (!parent.isInitialized()) continue;\n      SNode parentNode = parent.getSNode();\n      int indexof = parentNode.getChildren().indexOf(added);\n      for (Object childO : CollectionUtil.asIterable(parent.children())) {\n        if (childO instanceof SNodeTreeNode) {\n          SNodeTreeNode child = (SNodeTreeNode) childO;\n          SNode childNode = child.getSNode();\n          int index = parentNode.getChildren().indexOf(childNode);\n          if (index > indexof) { // insert added before it\n            SNodeTreeNode newTreeNode = new SNodeTreeNode(added, added.getRole_(), getOperationContext());\n            treeModel.insertNodeInto(newTreeNode,\n              parent, treeModel.getIndexOfChild(parent, child));\n            continue outer;\n          }\n        }\n      }\n      treeModel.insertNodeInto(new SNodeTreeNode(added, added.getRole_(), getOperationContext()), parent, parent.getChildCount());\n    }\n  }","id":52007,"modified_method":"public void addAndRemoveVisibleChildren(Set<SNode> removedNodes, Set<SNode> addedNodes) {\n    if (getTree() == null) return;\n    DefaultTreeModel treeModel = (DefaultTreeModel) getTree().getModel();\n    for (SNode removed : removedNodes) {\n      SNodeTreeNode node = (SNodeTreeNode) myTreeNode.findDescendantWith(removed);\n      if (node == null) continue;\n      treeModel.removeNodeFromParent(node);\n    }\n\n    for (SNode added : addedNodes) {\n      if (added.isDeleted()) continue;\n      if (added.getParent() == null) continue;\n      SNodeTreeNode parent = (SNodeTreeNode) myTreeNode.findDescendantWith(added.getParent());\n      if (parent == null) continue;\n      if (!parent.isInitialized()) continue;\n      SNode parentNode = parent.getSNode();\n      int indexof = parentNode.getChildren().indexOf(added);\n      Enumeration children = parent.children();\n      while(children.hasMoreElements()){\n        Object childO = children.nextElement();\n        if (!(childO instanceof SNodeTreeNode)) continue;\n        SNodeTreeNode child = (SNodeTreeNode) childO;\n        SNode childNode = child.getSNode();\n        int index = parentNode.getChildren().indexOf(childNode);\n        if (index <= indexof) continue;\n        SNodeTreeNode newTreeNode = new SNodeTreeNode(added, added.getRole_(), getOperationContext());\n        treeModel.insertNodeInto(newTreeNode,\n          parent, treeModel.getIndexOfChild(parent, child));\n        break;\n      }\n      treeModel.insertNodeInto(new SNodeTreeNode(added, added.getRole_(), getOperationContext()), parent, parent.getChildCount());\n    }\n  }","commit_id":"d76d6c9566db2a095edd1ffd37b674d42fb2280a","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Test\n    public void test_SimpleComponent_factory_configuration()\n    {\n        test_factory_configuration( \"FactoryConfigurationComponent\" );\n    }","id":52008,"modified_method":"@Test\n    public void test_SimpleComponent_factory_configuration()\n    {\n        final String factoryPid = \"FactoryConfigurationComponent\";\n\n        deleteFactoryConfigurations( factoryPid );\n        delay();\n\n        // one single component exists without configuration\n        final Component[] noConfigurations = findComponentsByName( factoryPid );\n        TestCase.assertNotNull( noConfigurations );\n        TestCase.assertEquals( 1, noConfigurations.length );\n        TestCase.assertEquals( Component.STATE_DISABLED, noConfigurations[0].getState() );\n        TestCase.assertTrue( SimpleComponent.INSTANCES.isEmpty() );\n\n        // enable the component, configuration required, hence unsatisfied\n        noConfigurations[0].enable();\n        delay();\n\n        final Component[] enabledNoConfigs = findComponentsByName( factoryPid );\n        TestCase.assertNotNull( enabledNoConfigs );\n        TestCase.assertEquals( 1, enabledNoConfigs.length );\n        TestCase.assertEquals( Component.STATE_UNSATISFIED, enabledNoConfigs[0].getState() );\n        TestCase.assertTrue( SimpleComponent.INSTANCES.isEmpty() );\n\n        // create two factory configurations expecting two components\n        final String pid0 = createFactoryConfiguration( factoryPid );\n        final String pid1 = createFactoryConfiguration( factoryPid );\n        delay();\n\n        // expect two components, only first is active, second is disabled\n        final Component[] twoConfigs = findComponentsByName( factoryPid );\n        TestCase.assertNotNull( twoConfigs );\n        TestCase.assertEquals( 2, twoConfigs.length );\n        TestCase.assertEquals( Component.STATE_ACTIVE, twoConfigs[0].getState() );\n        TestCase.assertEquals( Component.STATE_DISABLED, twoConfigs[1].getState() );\n        TestCase.assertEquals( 1, SimpleComponent.INSTANCES.size() );\n        TestCase.assertTrue( SimpleComponent.INSTANCES.containsKey( twoConfigs[0].getId() ) );\n        TestCase.assertFalse( SimpleComponent.INSTANCES.containsKey( twoConfigs[1].getId() ) );\n\n        // enable second component\n        twoConfigs[1].enable();\n        delay();\n\n        // ensure both components active\n        TestCase.assertEquals( Component.STATE_ACTIVE, twoConfigs[0].getState() );\n        TestCase.assertEquals( Component.STATE_ACTIVE, twoConfigs[1].getState() );\n        TestCase.assertEquals( 2, SimpleComponent.INSTANCES.size() );\n        TestCase.assertTrue( SimpleComponent.INSTANCES.containsKey( twoConfigs[0].getId() ) );\n        TestCase.assertTrue( SimpleComponent.INSTANCES.containsKey( twoConfigs[1].getId() ) );\n\n        // delete a configuration\n        deleteConfig( pid0 );\n        delay();\n\n        // expect one component\n        final Component[] oneConfig = findComponentsByName( factoryPid );\n        TestCase.assertNotNull( oneConfig );\n        TestCase.assertEquals( 1, oneConfig.length );\n        TestCase.assertEquals( Component.STATE_ACTIVE, oneConfig[0].getState() );\n        TestCase.assertEquals( 1, SimpleComponent.INSTANCES.size() );\n        TestCase.assertFalse( SimpleComponent.INSTANCES.containsKey( twoConfigs[0].getId() ) );\n        TestCase.assertTrue( SimpleComponent.INSTANCES.containsKey( twoConfigs[1].getId() ) );\n\n        // delete second configuration\n        deleteConfig( pid1 );\n        delay();\n\n        // expect a single unsatisifed component\n        final Component[] configsDeleted = findComponentsByName( factoryPid );\n        TestCase.assertNotNull( configsDeleted );\n        TestCase.assertEquals( 1, configsDeleted.length );\n        TestCase.assertEquals( Component.STATE_UNSATISFIED, configsDeleted[0].getState() );\n        TestCase.assertEquals( 0, SimpleComponent.INSTANCES.size() );\n        TestCase.assertFalse( SimpleComponent.INSTANCES.containsKey( twoConfigs[0].getId() ) );\n        TestCase.assertFalse( SimpleComponent.INSTANCES.containsKey( twoConfigs[1].getId() ) );\n    }","commit_id":"2e885428c88db45be7d485449b8874ee2b039f69","url":"https://github.com/apache/felix"},{"original_method":"@Configuration\n    public static Option[] configuration()\n    {\n        return options(\n            provision(\n                scanDir( \"target\" ).filter( \"*.jar\" ),\n                mavenBundle( \"org.ops4j.pax.swissbox\", \"pax-swissbox-tinybundles\", \"1.0.0\" ),\n                mavenBundle( \"org.apache.felix\", \"org.apache.felix.configadmin\", \"1.0.10\" )\n             )\n//             , PaxRunnerOptions.vmOption( \"-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=30303\" )\n        );\n    }","id":52009,"modified_method":"@Configuration\n    public static Option[] configuration()\n    {\n        final Option[] base = options(\n            provision(\n                CoreOptions.bundle( new File(\"target/scr.jar\").toURI().toString() ),\n                mavenBundle( \"org.ops4j.pax.swissbox\", \"pax-swissbox-tinybundles\", \"1.0.0\" ),\n                mavenBundle( \"org.apache.felix\", \"org.apache.felix.configadmin\", \"1.0.10\" )\n             )\n        );\n        final Option vmOption = ( paxRunnerVmOption != null ) ? PaxRunnerOptions.vmOption( paxRunnerVmOption ) : null;\n        return OptionUtils.combine( base, vmOption );\n    }","commit_id":"2e885428c88db45be7d485449b8874ee2b039f69","url":"https://github.com/apache/felix"},{"original_method":"public List getExtensions() {\n    return ImmutableList.of(\n        PropertyDefinition.build(CoreProperties.CPD_CROSS_RPOJECT)\n            .defaultValue(CoreProperties.CPD_CROSS_RPOJECT_DEFAULT_VALUE + \"\")\n            .name(\"Cross project duplication detection\")\n            .description(\"SonarQube supports the detection of cross project duplications. Activating this property will slightly increase each Sonar analysis time.\")\n            .qualifiers(Qualifiers.PROJECT, Qualifiers.MODULE)\n            .global(true)\n            .category(CoreProperties.CATEGORY_DUPLICATIONS)\n            .type(PropertyType.BOOLEAN)\n            .build(),\n        PropertyDefinition.build(CoreProperties.CPD_SKIP_PROPERTY)\n            .defaultValue(\"false\")\n            .name(\"Skip\")\n            .description(\"Disable detection of duplications\")\n            .global(false)\n            .category(CoreProperties.CATEGORY_DUPLICATIONS)\n            .type(PropertyType.BOOLEAN)\n            .build(),\n        PropertyDefinition.build(CoreProperties.CPD_EXCLUSIONS)\n            .defaultValue(\"\")\n            .name(\"Duplication exclusions\")\n            .description(\"Patterns used to exclude some source files from the duplication detection mechanism. \" +\n                \"See the \\\"Exclusions\\\" category to know how to use wildcards to specify this property.\")\n            .qualifiers(Qualifiers.PROJECT, Qualifiers.MODULE)\n            .global(true)\n            .category(CoreProperties.CATEGORY_DUPLICATIONS)\n            .multiValues(true)\n            .build(),\n\n        CpdSensor.class,\n        SumDuplicationsDecorator.class,\n        DuplicationDensityDecorator.class,\n        IndexFactory.class,\n        SonarEngine.class,\n        SonarBridgeEngine.class);\n  }","id":52010,"modified_method":"public List getExtensions() {\n    return ImmutableList.of(\n        PropertyDefinition.builder(CoreProperties.CPD_CROSS_RPOJECT)\n            .defaultValue(CoreProperties.CPD_CROSS_RPOJECT_DEFAULT_VALUE + \"\")\n            .name(\"Cross project duplication detection\")\n            .description(\"SonarQube supports the detection of cross project duplications. Activating this property will slightly increase each Sonar analysis time.\")\n            .onQualifiers(Qualifiers.PROJECT, Qualifiers.MODULE)\n            .category(CoreProperties.CATEGORY_DUPLICATIONS)\n            .type(PropertyType.BOOLEAN)\n            .build(),\n        PropertyDefinition.builder(CoreProperties.CPD_SKIP_PROPERTY)\n            .defaultValue(\"false\")\n            .name(\"Skip\")\n            .description(\"Disable detection of duplications\")\n            .hidden()\n            .category(CoreProperties.CATEGORY_DUPLICATIONS)\n            .type(PropertyType.BOOLEAN)\n            .build(),\n        PropertyDefinition.builder(CoreProperties.CPD_EXCLUSIONS)\n            .defaultValue(\"\")\n            .name(\"Duplication exclusions\")\n            .description(\"Patterns used to exclude some source files from the duplication detection mechanism. \" +\n                \"See the \\\"Exclusions\\\" category to know how to use wildcards to specify this property.\")\n            .onQualifiers(Qualifiers.PROJECT, Qualifiers.MODULE)\n            .category(CoreProperties.CATEGORY_DUPLICATIONS)\n            .multiValues(true)\n            .build(),\n\n        CpdSensor.class,\n        SumDuplicationsDecorator.class,\n        DuplicationDensityDecorator.class,\n        IndexFactory.class,\n        SonarEngine.class,\n        SonarBridgeEngine.class);\n  }","commit_id":"06540015b3cdbc63e0aa1776e4afea67004d5425","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * @since 3.6\n   */\n  public static Builder build(String key) {\n    return new Builder(key);\n  }","id":52011,"modified_method":"/**\n   * @since 3.6\n   */\n  public static Builder builder(String key) {\n    return new Builder(key);\n  }","commit_id":"06540015b3cdbc63e0aa1776e4afea67004d5425","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * @since 3.6\n   */\n  static PropertyDefinition create(Property annotation) {\n    List<String> qualifiers = newArrayList();\n    if (annotation.project()) {\n      qualifiers.add(Qualifiers.PROJECT);\n    }\n    if (annotation.module()) {\n      qualifiers.add(Qualifiers.MODULE);\n    }\n    return PropertyDefinition.build(annotation.key())\n        .name(annotation.name())\n        .defaultValue(annotation.defaultValue())\n        .description(annotation.description())\n        .global(annotation.global())\n        .qualifiers(qualifiers)\n        .category(annotation.category())\n        .type(annotation.type())\n        .options(annotation.options())\n        .multiValues(annotation.multiValues())\n        .propertySetKey(annotation.propertySetKey())\n        .fields(PropertyFieldDefinition.create(annotation.fields()))\n        .deprecatedKey(annotation.deprecatedKey())\n        .index(annotation.index())\n        .build();\n  }","id":52012,"modified_method":"/**\n   * @since 3.6\n   */\n  static PropertyDefinition create(Property annotation) {\n    Builder builder = PropertyDefinition.builder(annotation.key())\n      .name(annotation.name())\n      .defaultValue(annotation.defaultValue())\n      .description(annotation.description())\n      .category(annotation.category())\n      .type(annotation.type())\n      .options(Arrays.asList(annotation.options()))\n      .multiValues(annotation.multiValues())\n      .propertySetKey(annotation.propertySetKey())\n      .fields(PropertyFieldDefinition.create(annotation.fields()))\n      .deprecatedKey(annotation.deprecatedKey())\n      .index(annotation.index());\n    List<String> qualifiers = newArrayList();\n    if (annotation.project()) {\n      qualifiers.add(Qualifiers.PROJECT);\n    }\n    if (annotation.module()) {\n      qualifiers.add(Qualifiers.MODULE);\n    }\n    if (annotation.global()) {\n      builder.onQualifiers(qualifiers);\n    } else {\n      builder.onlyOnQualifiers(qualifiers);\n    }\n    return builder.build();\n  }","commit_id":"06540015b3cdbc63e0aa1776e4afea67004d5425","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public Builder fields(PropertyFieldDefinition... fields) {\n      this.fields.addAll(ImmutableList.copyOf(fields));\n      return this;\n    }","id":52013,"modified_method":"public Builder fields(PropertyFieldDefinition first, PropertyFieldDefinition... rest) {\n      this.fields.addAll(Lists.asList(first, rest));\n      return this;\n    }","commit_id":"06540015b3cdbc63e0aa1776e4afea67004d5425","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public Builder options(String... options) {\n      this.options.addAll(ImmutableList.copyOf(options));\n      return this;\n    }","id":52014,"modified_method":"public Builder options(String first, String... rest) {\n      this.options.addAll(Lists.asList(first, rest));\n      return this;\n    }","commit_id":"06540015b3cdbc63e0aa1776e4afea67004d5425","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public Builder qualifiers(String... qualifiers) {\n      this.qualifiers.addAll(newArrayList(qualifiers));\n      return this;\n    }","id":52015,"modified_method":"public Builder onQualifiers(String first, String... rest) {\n      this.qualifiers = Lists.asList(first, rest);\n      this.global = true;\n      return this;\n    }","commit_id":"06540015b3cdbc63e0aa1776e4afea67004d5425","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private Builder(String key) {\n      this.key = key;\n      this.name = \"\";\n      this.description = \"\";\n      this.defaultValue = \"\";\n      this.category = \"\";\n      this.subcategory = \"default\";\n      this.propertySetKey = \"\";\n      this.deprecatedKey = \"\";\n      this.global = true;\n      this.type = PropertyType.STRING;\n      this.qualifiers = newArrayList();\n      this.options = newArrayList();\n      this.fields = newArrayList();\n      this.index = 999;\n    }","id":52016,"modified_method":"private Builder(String key) {\n      this.key = key;\n      this.name = \"\";\n      this.description = \"\";\n      this.defaultValue = \"\";\n      this.category = \"\";\n      this.subcategory = \"default\";\n      this.propertySetKey = \"\";\n      this.deprecatedKey = \"\";\n      this.global = true;\n      this.type = PropertyType.STRING;\n      this.qualifiers = newArrayList();\n      this.options = newArrayList();\n      this.fields = newArrayList();\n      this.hidden = false;\n      this.index = 999;\n    }","commit_id":"06540015b3cdbc63e0aa1776e4afea67004d5425","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public Builder qualifiers(List<String> qualifiers) {\n      this.qualifiers.addAll(qualifiers);\n      return this;\n    }","id":52017,"modified_method":"public Builder onQualifiers(List<String> qualifiers) {\n      this.qualifiers = ImmutableList.copyOf(qualifiers);\n      this.global = true;\n      return this;\n    }","commit_id":"06540015b3cdbc63e0aa1776e4afea67004d5425","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public PropertyDefinition build() {\n      Preconditions.checkArgument(!Strings.isNullOrEmpty(key), \"Key must be set\");\n      fixType(key, type);\n      return new PropertyDefinition(this);\n    }","id":52018,"modified_method":"public PropertyDefinition build() {\n      Preconditions.checkArgument(!Strings.isNullOrEmpty(key), \"Key must be set\");\n      fixType(key, type);\n      Preconditions.checkArgument(!hidden || qualifiers.isEmpty(), \"Cannot be hidden and defining qualifiers on which to display\");\n      if (hidden) {\n        global = false;\n      }\n      return new PropertyDefinition(this);\n    }","commit_id":"06540015b3cdbc63e0aa1776e4afea67004d5425","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_validate_single_select_list() {\n    PropertyDefinition def = PropertyDefinition.build(\"foo\").name(\"foo\").type(PropertyType.SINGLE_SELECT_LIST).options(\"de\", \"en\").build();\n\n    assertThat(def.validate(null).isValid()).isTrue();\n    assertThat(def.validate(\"\").isValid()).isTrue();\n    assertThat(def.validate(\"   \").isValid()).isTrue();\n    assertThat(def.validate(\"de\").isValid()).isTrue();\n    assertThat(def.validate(\"en\").isValid()).isTrue();\n\n    assertThat(def.validate(\"fr\").isValid()).isFalse();\n    assertThat(def.validate(\"fr\").getErrorKey()).isEqualTo(\"notInOptions\");\n  }","id":52019,"modified_method":"@Test\n  public void should_validate_single_select_list() {\n    PropertyDefinition def = PropertyDefinition.builder(\"foo\").name(\"foo\").type(PropertyType.SINGLE_SELECT_LIST).options(\"de\", \"en\").build();\n\n    assertThat(def.validate(null).isValid()).isTrue();\n    assertThat(def.validate(\"\").isValid()).isTrue();\n    assertThat(def.validate(\"   \").isValid()).isTrue();\n    assertThat(def.validate(\"de\").isValid()).isTrue();\n    assertThat(def.validate(\"en\").isValid()).isTrue();\n\n    assertThat(def.validate(\"fr\").isValid()).isFalse();\n    assertThat(def.validate(\"fr\").getErrorKey()).isEqualTo(\"notInOptions\");\n  }","commit_id":"06540015b3cdbc63e0aa1776e4afea67004d5425","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_create_property() {\n    PropertyDefinition def = PropertyDefinition.build(\"hello\")\n        .name(\"Hello\")\n        .defaultValue(\"world\")\n        .category(\"categ\")\n        .options(\"de\", \"en\")\n        .description(\"desc\")\n        .type(PropertyType.FLOAT)\n        .global(false)\n        .qualifiers(Qualifiers.FILE, Qualifiers.CLASS)\n        .multiValues(true)\n        .propertySetKey(\"set\")\n        .build();\n\n    assertThat(def.key()).isEqualTo(\"hello\");\n    assertThat(def.name()).isEqualTo(\"Hello\");\n    assertThat(def.defaultValue()).isEqualTo(\"world\");\n    assertThat(def.category()).isEqualTo(\"categ\");\n    assertThat(def.options()).containsOnly(\"de\", \"en\");\n    assertThat(def.description()).isEqualTo(\"desc\");\n    assertThat(def.type()).isEqualTo(PropertyType.FLOAT);\n    assertThat(def.global()).isFalse();\n    assertThat(def.qualifiers()).containsOnly(Qualifiers.FILE, Qualifiers.CLASS);\n    assertThat(def.multiValues()).isTrue();\n    assertThat(def.propertySetKey()).isEqualTo(\"set\");\n    assertThat(def.fields()).isEmpty();\n  }","id":52020,"modified_method":"@Test\n  public void should_create_property() {\n    PropertyDefinition def = PropertyDefinition.builder(\"hello\")\n        .name(\"Hello\")\n        .defaultValue(\"world\")\n        .category(\"categ\")\n        .options(\"de\", \"en\")\n        .description(\"desc\")\n        .type(PropertyType.FLOAT)\n        .onlyOnQualifiers(Qualifiers.FILE, Qualifiers.CLASS)\n        .multiValues(true)\n        .propertySetKey(\"set\")\n        .build();\n\n    assertThat(def.key()).isEqualTo(\"hello\");\n    assertThat(def.name()).isEqualTo(\"Hello\");\n    assertThat(def.defaultValue()).isEqualTo(\"world\");\n    assertThat(def.category()).isEqualTo(\"categ\");\n    assertThat(def.options()).containsOnly(\"de\", \"en\");\n    assertThat(def.description()).isEqualTo(\"desc\");\n    assertThat(def.type()).isEqualTo(PropertyType.FLOAT);\n    assertThat(def.global()).isFalse();\n    assertThat(def.qualifiers()).containsOnly(Qualifiers.FILE, Qualifiers.CLASS);\n    assertThat(def.multiValues()).isTrue();\n    assertThat(def.propertySetKey()).isEqualTo(\"set\");\n    assertThat(def.fields()).isEmpty();\n  }","commit_id":"06540015b3cdbc63e0aa1776e4afea67004d5425","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_validate_integer() {\n    PropertyDefinition def = PropertyDefinition.build(\"foo\").name(\"foo\").type(PropertyType.INTEGER).build();\n\n    assertThat(def.validate(null).isValid()).isTrue();\n    assertThat(def.validate(\"\").isValid()).isTrue();\n    assertThat(def.validate(\"   \").isValid()).isTrue();\n    assertThat(def.validate(\"123456\").isValid()).isTrue();\n\n    assertThat(def.validate(\"foo\").isValid()).isFalse();\n    assertThat(def.validate(\"foo\").getErrorKey()).isEqualTo(\"notInteger\");\n  }","id":52021,"modified_method":"@Test\n  public void should_validate_integer() {\n    PropertyDefinition def = PropertyDefinition.builder(\"foo\").name(\"foo\").type(PropertyType.INTEGER).build();\n\n    assertThat(def.validate(null).isValid()).isTrue();\n    assertThat(def.validate(\"\").isValid()).isTrue();\n    assertThat(def.validate(\"   \").isValid()).isTrue();\n    assertThat(def.validate(\"123456\").isValid()).isTrue();\n\n    assertThat(def.validate(\"foo\").isValid()).isFalse();\n    assertThat(def.validate(\"foo\").getErrorKey()).isEqualTo(\"notInteger\");\n  }","commit_id":"06540015b3cdbc63e0aa1776e4afea67004d5425","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_auto_detect_password_type() {\n    PropertyDefinition def = PropertyDefinition.build(\"scm.password.secured\").name(\"SCM password\").build();\n\n    assertThat(def.key()).isEqualTo(\"scm.password.secured\");\n    assertThat(def.type()).isEqualTo(PropertyType.PASSWORD);\n  }","id":52022,"modified_method":"@Test\n  public void should_auto_detect_password_type() {\n    PropertyDefinition def = PropertyDefinition.builder(\"scm.password.secured\").name(\"SCM password\").build();\n\n    assertThat(def.key()).isEqualTo(\"scm.password.secured\");\n    assertThat(def.type()).isEqualTo(PropertyType.PASSWORD);\n  }","commit_id":"06540015b3cdbc63e0aa1776e4afea67004d5425","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_validate_float() {\n    PropertyDefinition def = PropertyDefinition.build(\"foo\").name(\"foo\").type(PropertyType.FLOAT).build();\n\n    assertThat(def.validate(null).isValid()).isTrue();\n    assertThat(def.validate(\"\").isValid()).isTrue();\n    assertThat(def.validate(\"   \").isValid()).isTrue();\n    assertThat(def.validate(\"123456\").isValid()).isTrue();\n    assertThat(def.validate(\"3.14\").isValid()).isTrue();\n\n    assertThat(def.validate(\"foo\").isValid()).isFalse();\n    assertThat(def.validate(\"foo\").getErrorKey()).isEqualTo(\"notFloat\");\n  }","id":52023,"modified_method":"@Test\n  public void should_validate_float() {\n    PropertyDefinition def = PropertyDefinition.builder(\"foo\").name(\"foo\").type(PropertyType.FLOAT).build();\n\n    assertThat(def.validate(null).isValid()).isTrue();\n    assertThat(def.validate(\"\").isValid()).isTrue();\n    assertThat(def.validate(\"   \").isValid()).isTrue();\n    assertThat(def.validate(\"123456\").isValid()).isTrue();\n    assertThat(def.validate(\"3.14\").isValid()).isTrue();\n\n    assertThat(def.validate(\"foo\").isValid()).isFalse();\n    assertThat(def.validate(\"foo\").getErrorKey()).isEqualTo(\"notFloat\");\n  }","commit_id":"06540015b3cdbc63e0aa1776e4afea67004d5425","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_support_property_sets() {\n    PropertyDefinition def = PropertyDefinition.build(\"hello\")\n        .name(\"Hello\")\n        .fields(\n            PropertyFieldDefinition.build(\"first\").name(\"First\").description(\"Description\").options(\"A\", \"B\").build(),\n            PropertyFieldDefinition.build(\"second\").name(\"Second\").type(PropertyType.INTEGER).indicativeSize(5).build()\n        )\n        .build();\n\n    assertThat(def.fields()).hasSize(2);\n    assertThat(def.fields().get(0).key()).isEqualTo(\"first\");\n    assertThat(def.fields().get(0).name()).isEqualTo(\"First\");\n    assertThat(def.fields().get(0).description()).isEqualTo(\"Description\");\n    assertThat(def.fields().get(0).type()).isEqualTo(PropertyType.STRING);\n    assertThat(def.fields().get(0).options()).containsOnly(\"A\", \"B\");\n    assertThat(def.fields().get(0).indicativeSize()).isEqualTo(20);\n    assertThat(def.fields().get(1).key()).isEqualTo(\"second\");\n    assertThat(def.fields().get(1).name()).isEqualTo(\"Second\");\n    assertThat(def.fields().get(1).type()).isEqualTo(PropertyType.INTEGER);\n    assertThat(def.fields().get(1).options()).isEmpty();\n    assertThat(def.fields().get(1).indicativeSize()).isEqualTo(5);\n  }","id":52024,"modified_method":"@Test\n  public void should_support_property_sets() {\n    PropertyDefinition def = PropertyDefinition.builder(\"hello\")\n        .name(\"Hello\")\n        .fields(\n            PropertyFieldDefinition.build(\"first\").name(\"First\").description(\"Description\").options(\"A\", \"B\").build(),\n            PropertyFieldDefinition.build(\"second\").name(\"Second\").type(PropertyType.INTEGER).indicativeSize(5).build()\n        )\n        .build();\n\n    assertThat(def.fields()).hasSize(2);\n    assertThat(def.fields().get(0).key()).isEqualTo(\"first\");\n    assertThat(def.fields().get(0).name()).isEqualTo(\"First\");\n    assertThat(def.fields().get(0).description()).isEqualTo(\"Description\");\n    assertThat(def.fields().get(0).type()).isEqualTo(PropertyType.STRING);\n    assertThat(def.fields().get(0).options()).containsOnly(\"A\", \"B\");\n    assertThat(def.fields().get(0).indicativeSize()).isEqualTo(20);\n    assertThat(def.fields().get(1).key()).isEqualTo(\"second\");\n    assertThat(def.fields().get(1).name()).isEqualTo(\"Second\");\n    assertThat(def.fields().get(1).type()).isEqualTo(PropertyType.INTEGER);\n    assertThat(def.fields().get(1).options()).isEmpty();\n    assertThat(def.fields().get(1).indicativeSize()).isEqualTo(5);\n  }","commit_id":"06540015b3cdbc63e0aa1776e4afea67004d5425","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_validate_string() {\n    PropertyDefinition def = PropertyDefinition.build(\"foo\").name(\"foo\").type(PropertyType.STRING).build();\n\n    assertThat(def.validate(null).isValid()).isTrue();\n    assertThat(def.validate(\"\").isValid()).isTrue();\n    assertThat(def.validate(\"   \").isValid()).isTrue();\n    assertThat(def.validate(\"foo\").isValid()).isTrue();\n  }","id":52025,"modified_method":"@Test\n  public void should_validate_string() {\n    PropertyDefinition def = PropertyDefinition.builder(\"foo\").name(\"foo\").type(PropertyType.STRING).build();\n\n    assertThat(def.validate(null).isValid()).isTrue();\n    assertThat(def.validate(\"\").isValid()).isTrue();\n    assertThat(def.validate(\"   \").isValid()).isTrue();\n    assertThat(def.validate(\"foo\").isValid()).isTrue();\n  }","commit_id":"06540015b3cdbc63e0aa1776e4afea67004d5425","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_auto_detect_license_type() {\n    PropertyDefinition def = PropertyDefinition.build(\"views.license.secured\").name(\"Views license\").build();\n\n    assertThat(def.key()).isEqualTo(\"views.license.secured\");\n    assertThat(def.type()).isEqualTo(PropertyType.LICENSE);\n  }","id":52026,"modified_method":"@Test\n  public void should_auto_detect_license_type() {\n    PropertyDefinition def = PropertyDefinition.builder(\"views.license.secured\").name(\"Views license\").build();\n\n    assertThat(def.key()).isEqualTo(\"views.license.secured\");\n    assertThat(def.type()).isEqualTo(PropertyType.LICENSE);\n  }","commit_id":"06540015b3cdbc63e0aa1776e4afea67004d5425","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_validate_boolean() {\n    PropertyDefinition def = PropertyDefinition.build(\"foo\").name(\"foo\").type(PropertyType.BOOLEAN).build();\n\n    assertThat(def.validate(null).isValid()).isTrue();\n    assertThat(def.validate(\"\").isValid()).isTrue();\n    assertThat(def.validate(\"   \").isValid()).isTrue();\n    assertThat(def.validate(\"true\").isValid()).isTrue();\n    assertThat(def.validate(\"false\").isValid()).isTrue();\n\n    assertThat(def.validate(\"foo\").isValid()).isFalse();\n    assertThat(def.validate(\"foo\").getErrorKey()).isEqualTo(\"notBoolean\");\n  }","id":52027,"modified_method":"@Test\n  public void should_validate_boolean() {\n    PropertyDefinition def = PropertyDefinition.builder(\"foo\").name(\"foo\").type(PropertyType.BOOLEAN).build();\n\n    assertThat(def.validate(null).isValid()).isTrue();\n    assertThat(def.validate(\"\").isValid()).isTrue();\n    assertThat(def.validate(\"   \").isValid()).isTrue();\n    assertThat(def.validate(\"true\").isValid()).isTrue();\n    assertThat(def.validate(\"false\").isValid()).isTrue();\n\n    assertThat(def.validate(\"foo\").isValid()).isFalse();\n    assertThat(def.validate(\"foo\").getErrorKey()).isEqualTo(\"notBoolean\");\n  }","commit_id":"06540015b3cdbc63e0aa1776e4afea67004d5425","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_create_property_with_default_values() {\n    PropertyDefinition def = PropertyDefinition.build(\"hello\")\n        .name(\"Hello\")\n        .build();\n\n    assertThat(def.key()).isEqualTo(\"hello\");\n    assertThat(def.name()).isEqualTo(\"Hello\");\n    assertThat(def.defaultValue()).isEmpty();\n    assertThat(def.category()).isEmpty();\n    assertThat(def.options()).isEmpty();\n    assertThat(def.description()).isEmpty();\n    assertThat(def.type()).isEqualTo(PropertyType.STRING);\n    assertThat(def.global()).isTrue();\n    assertThat(def.qualifiers()).isEmpty();\n    assertThat(def.multiValues()).isFalse();\n    assertThat(def.propertySetKey()).isEmpty();\n    assertThat(def.fields()).isEmpty();\n  }","id":52028,"modified_method":"@Test\n  public void should_create_property_with_default_values() {\n    PropertyDefinition def = PropertyDefinition.builder(\"hello\")\n        .name(\"Hello\")\n        .build();\n\n    assertThat(def.key()).isEqualTo(\"hello\");\n    assertThat(def.name()).isEqualTo(\"Hello\");\n    assertThat(def.defaultValue()).isEmpty();\n    assertThat(def.category()).isEmpty();\n    assertThat(def.options()).isEmpty();\n    assertThat(def.description()).isEmpty();\n    assertThat(def.type()).isEqualTo(PropertyType.STRING);\n    assertThat(def.global()).isTrue();\n    assertThat(def.qualifiers()).isEmpty();\n    assertThat(def.multiValues()).isFalse();\n    assertThat(def.propertySetKey()).isEmpty();\n    assertThat(def.fields()).isEmpty();\n  }","commit_id":"06540015b3cdbc63e0aa1776e4afea67004d5425","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_group_by_subcategory() {\n    PropertyDefinitions def = new PropertyDefinitions(\n        PropertyDefinition.build(\"global1\").name(\"Global1\").category(\"catGlobal1\").subcategory(\"sub1\").global(true).build(),\n        PropertyDefinition.build(\"global2\").name(\"Global2\").category(\"catGlobal1\").subcategory(\"sub2\").global(true).build(),\n        PropertyDefinition.build(\"global3\").name(\"Global3\").category(\"catGlobal1\").global(true).build(),\n        PropertyDefinition.build(\"global4\").name(\"Global4\").category(\"catGlobal2\").global(true).build()\n        );\n\n    assertThat(def.getPropertiesByCategory(null).get(\"catGlobal1\").keySet()).containsOnly(\"default\", \"sub1\", \"sub2\");\n    assertThat(def.getPropertiesByCategory(null).get(\"catGlobal2\").keySet()).containsOnly(\"default\");\n  }","id":52029,"modified_method":"@Test\n  public void should_group_by_subcategory() {\n    PropertyDefinitions def = new PropertyDefinitions(\n        PropertyDefinition.builder(\"global1\").name(\"Global1\").category(\"catGlobal1\").subcategory(\"sub1\").build(),\n        PropertyDefinition.builder(\"global2\").name(\"Global2\").category(\"catGlobal1\").subcategory(\"sub2\").build(),\n        PropertyDefinition.builder(\"global3\").name(\"Global3\").category(\"catGlobal1\").build(),\n        PropertyDefinition.builder(\"global4\").name(\"Global4\").category(\"catGlobal2\").build()\n        );\n\n    assertThat(def.getPropertiesByCategory(null).get(\"catGlobal1\").keySet()).containsOnly(\"default\", \"sub1\", \"sub2\");\n    assertThat(def.getPropertiesByCategory(null).get(\"catGlobal2\").keySet()).containsOnly(\"default\");\n  }","commit_id":"06540015b3cdbc63e0aa1776e4afea67004d5425","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_inspect_plugin_objects() {\n    PropertyDefinitions def = new PropertyDefinitions(\n        PropertyDefinition.build(\"foo\").name(\"Foo\").build(),\n        PropertyDefinition.build(\"one\").name(\"One\").build(),\n        PropertyDefinition.build(\"two\").name(\"Two\").defaultValue(\"2\").build()\n        );\n\n    assertProperties(def);\n  }","id":52030,"modified_method":"@Test\n  public void should_inspect_plugin_objects() {\n    PropertyDefinitions def = new PropertyDefinitions(\n        PropertyDefinition.builder(\"foo\").name(\"Foo\").build(),\n        PropertyDefinition.builder(\"one\").name(\"One\").build(),\n        PropertyDefinition.builder(\"two\").name(\"Two\").defaultValue(\"2\").build()\n        );\n\n    assertProperties(def);\n  }","commit_id":"06540015b3cdbc63e0aa1776e4afea67004d5425","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_group_by_category() {\n    PropertyDefinitions def = new PropertyDefinitions(\n        PropertyDefinition.build(\"global1\").name(\"Global1\").category(\"catGlobal1\").global(true).build(),\n        PropertyDefinition.build(\"global2\").name(\"Global2\").category(\"catGlobal1\").global(true).build(),\n        PropertyDefinition.build(\"global3\").name(\"Global3\").category(\"catGlobal2\").global(true).build(),\n        PropertyDefinition.build(\"project\").name(\"Project\").category(\"catProject\").global(false).qualifiers(Qualifiers.PROJECT).build(),\n        PropertyDefinition.build(\"module\").name(\"Module\").category(\"catModule\").global(false).qualifiers(Qualifiers.MODULE).build(),\n        PropertyDefinition.build(\"view\").name(\"View\").category(\"catView\").global(false).qualifiers(Qualifiers.VIEW).build()\n        );\n\n    assertThat(def.getPropertiesByCategory(null).keySet()).containsOnly(\"catGlobal1\", \"catGlobal2\");\n    assertThat(def.getPropertiesByCategory(Qualifiers.PROJECT).keySet()).containsOnly(\"catProject\");\n    assertThat(def.getPropertiesByCategory(Qualifiers.MODULE).keySet()).containsOnly(\"catModule\");\n    assertThat(def.getPropertiesByCategory(Qualifiers.VIEW).keySet()).containsOnly(\"catView\");\n    assertThat(def.getPropertiesByCategory(\"Unkown\").keySet()).isEmpty();\n  }","id":52031,"modified_method":"@Test\n  public void should_group_by_category() {\n    PropertyDefinitions def = new PropertyDefinitions(\n        PropertyDefinition.builder(\"global1\").name(\"Global1\").category(\"catGlobal1\").build(),\n        PropertyDefinition.builder(\"global2\").name(\"Global2\").category(\"catGlobal1\").build(),\n        PropertyDefinition.builder(\"global3\").name(\"Global3\").category(\"catGlobal2\").build(),\n        PropertyDefinition.builder(\"project\").name(\"Project\").category(\"catProject\").onlyOnQualifiers(Qualifiers.PROJECT).build(),\n        PropertyDefinition.builder(\"module\").name(\"Module\").category(\"catModule\").onlyOnQualifiers(Qualifiers.MODULE).build(),\n        PropertyDefinition.builder(\"view\").name(\"View\").category(\"catView\").onlyOnQualifiers(Qualifiers.VIEW).build()\n        );\n\n    assertThat(def.getPropertiesByCategory(null).keySet()).containsOnly(\"catGlobal1\", \"catGlobal2\");\n    assertThat(def.getPropertiesByCategory(Qualifiers.PROJECT).keySet()).containsOnly(\"catProject\");\n    assertThat(def.getPropertiesByCategory(Qualifiers.MODULE).keySet()).containsOnly(\"catModule\");\n    assertThat(def.getPropertiesByCategory(Qualifiers.VIEW).keySet()).containsOnly(\"catView\");\n    assertThat(def.getPropertiesByCategory(\"Unkown\").keySet()).isEmpty();\n  }","commit_id":"06540015b3cdbc63e0aa1776e4afea67004d5425","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void test_default_category() {\n    PropertyDefinitions def = new PropertyDefinitions();\n    def.addComponent(PropertyDefinition.build(\"inCateg\").name(\"In Categ\").category(\"categ\").build(), \"default\");\n    def.addComponent(PropertyDefinition.build(\"noCateg\").name(\"No categ\").build(), \"default\");\n\n    assertThat(def.getCategory(\"inCateg\")).isEqualTo(\"categ\");\n    assertThat(def.getCategory(\"noCateg\")).isEqualTo(\"default\");\n  }","id":52032,"modified_method":"@Test\n  public void test_default_category() {\n    PropertyDefinitions def = new PropertyDefinitions();\n    def.addComponent(PropertyDefinition.builder(\"inCateg\").name(\"In Categ\").category(\"categ\").build(), \"default\");\n    def.addComponent(PropertyDefinition.builder(\"noCateg\").name(\"No categ\").build(), \"default\");\n\n    assertThat(def.getCategory(\"inCateg\")).isEqualTo(\"categ\");\n    assertThat(def.getCategory(\"noCateg\")).isEqualTo(\"default\");\n  }","commit_id":"06540015b3cdbc63e0aa1776e4afea67004d5425","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void test_categories() {\n    PropertyDefinitions def = new PropertyDefinitions(\n        PropertyDefinition.build(\"inCateg\").name(\"In Categ\").category(\"categ\").build(),\n        PropertyDefinition.build(\"noCateg\").name(\"No categ\").build()\n        );\n\n    assertThat(def.getCategory(\"inCateg\")).isEqualTo(\"categ\");\n    assertThat(def.getCategory(\"noCateg\")).isEmpty();\n  }","id":52033,"modified_method":"@Test\n  public void test_categories() {\n    PropertyDefinitions def = new PropertyDefinitions(\n        PropertyDefinition.builder(\"inCateg\").name(\"In Categ\").category(\"categ\").build(),\n        PropertyDefinition.builder(\"noCateg\").name(\"No categ\").build()\n        );\n\n    assertThat(def.getCategory(\"inCateg\")).isEqualTo(\"categ\");\n    assertThat(def.getCategory(\"noCateg\")).isEmpty();\n  }","commit_id":"06540015b3cdbc63e0aa1776e4afea67004d5425","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Configuration\n    public static Option[] configure() {\n        return options(\n                // install log service using pax runners profile abstraction (there are more profiles, like DS)\n                logProfile(),\n\n                // this is how you set the default log level when using pax logging (logProfile)\n                systemProperty(\"org.ops4j.pax.logging.DefaultServiceLog.level\").value(\"INFO\"),\n\n                // lets deploy the bundles we need\n                mavenBundleAsInProject(\"org.apache.camel\", \"camel-core\"),\n                wrappedBundle(mavenBundleAsInProject(\"commons-logging\", \"commons-logging\")),\n\n                felix(), equinox());\n    }","id":52034,"modified_method":"@Configuration\n    public static Option[] configure() {\n        Option[] options = options(\n            // install log service using pax runners profile abstraction (there are more profiles, like DS)\n            logProfile(),\n    \n            // this is how you set the default log level when using pax logging (logProfile)\n            systemProperty(\"org.ops4j.pax.logging.DefaultServiceLog.level\").value(\"DEBUG\"),\n    \n            // lets deploy the bundles we need\n            mavenBundleAsInProject(\"org.apache.camel\", \"camel-core\"),\n            \n            felix(), equinox());\n\n        // use config generated by the Maven plugin (until PAXEXAM-62/64 get resolved)\n        if (OSGiIntegrationTest.class.getClassLoader().getResource(\"META-INF/maven/paxexam-config.args\") != null) {\n            options = OptionUtils.combine(options, mavenConfiguration());\n        }\n        \n        return options;\n    }","commit_id":"a3e36dea01ccf43cdf8a9bb94b93b6aa32057c57","url":"https://github.com/apache/camel"},{"original_method":"public static void main (String[] argv) {\r\n\t\tnew AngleApplication(new com.badlogic.gdx.tests.VertexBufferObjectShaderTest(), \"Angle Test\", 480, 320, false);\r\n\t}","id":52035,"modified_method":"public static void main (String[] argv) {\r\n\t\tnew AngleApplication(new com.badlogic.gdx.tests.MeshShaderTest(), \"Angle Test\", 480, 320, false);\r\n\t}","commit_id":"d555a6abd1a539702e854ff3d5ce3d82b1a93a1b","url":"https://github.com/libgdx/libgdx"},{"original_method":"AngleTexture (FileHandle file, TextureFilter minFilter, TextureFilter maxFilter, TextureWrap uWrap, TextureWrap vWrap,\r\n\t\tboolean managed) {\r\n\t\tthis.isManaged = managed;\r\n\t\tthis.isMipMapped = TextureFilter.isMipMap(minFilter);\r\n\r\n\t\tif (!isMipMapped && file.path().endsWith(\".png\")) {\r\n\t\t\t// Fast path.\r\n\t\t\tloadPNG(file);\r\n\t\t} else {\r\n\t\t\tBufferedImage image = (BufferedImage)Gdx.graphics.newPixmap(file).getNativePixmap();\r\n\t\t\tloadMipMap(image);\r\n\t\t}\r\n\t\tbind();\r\n\t\tGL20 gl = Gdx.graphics.getGL20();\r\n\t\tgl.glTexParameteri(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, getTextureFilter(minFilter));\r\n\t\tgl.glTexParameteri(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, getTextureFilter(maxFilter));\r\n\t\tgl.glTexParameteri(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_WRAP_S, getTextureWrap(uWrap));\r\n\t\tgl.glTexParameteri(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_WRAP_T, getTextureWrap(vWrap));\r\n\t\ttextures++;\r\n\t}","id":52036,"modified_method":"AngleTexture (FileHandle file, TextureFilter minFilter, TextureFilter maxFilter, TextureWrap uWrap, TextureWrap vWrap,\r\n\t\tboolean managed) {\r\n\t\tthis.isManaged = managed;\r\n\t\tthis.isMipMapped = TextureFilter.isMipMap(minFilter);\r\n\r\n\t\tBufferedImage image = (BufferedImage)Gdx.graphics.newPixmap(file).getNativePixmap();\r\n\t\tloadMipMap(image);\r\n\r\n\t\tbind();\r\n\t\tGL20 gl = Gdx.graphics.getGL20();\r\n\t\tgl.glTexParameteri(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, getTextureFilter(minFilter));\r\n\t\tgl.glTexParameteri(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, getTextureFilter(maxFilter));\r\n\t\tgl.glTexParameteri(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_WRAP_S, getTextureWrap(uWrap));\r\n\t\tgl.glTexParameteri(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_WRAP_T, getTextureWrap(vWrap));\r\n\t\ttextures++;\r\n\t}","commit_id":"d555a6abd1a539702e854ff3d5ce3d82b1a93a1b","url":"https://github.com/libgdx/libgdx"},{"original_method":"private void ensureBufferSize (int size) {\r\n\t\tif (buffer == null || buffer.capacity() < size) {\r\n\t\t\tbuffer = BufferUtils.newByteBuffer(size);\r\n\t\t\tByteBuffer temp = buffer.slice();\r\n\t\t\ttemp.order(ByteOrder.LITTLE_ENDIAN);\r\n\t\t\tintBuffer = temp.asIntBuffer();\r\n\t\t} else {\r\n\t\t\tbuffer.clear();\r\n\t\t\tintBuffer.clear();\r\n\t\t}\r\n\t}","id":52037,"modified_method":"private void ensureBufferSize (int size) {\r\n\t\tif (buffer == null || buffer.capacity() < size) {\r\n\t\t\tbuffer = BufferUtils.newByteBuffer(size);\r\n\t\t\tByteBuffer temp = buffer.slice();\r\n\t\t\ttemp.order(ByteOrder.BIG_ENDIAN);\r\n\t\t\tintBuffer = temp.asIntBuffer();\r\n\t\t} else {\r\n\t\t\tbuffer.clear();\r\n\t\t\tintBuffer.clear();\r\n\t\t}\r\n\t}","commit_id":"d555a6abd1a539702e854ff3d5ce3d82b1a93a1b","url":"https://github.com/libgdx/libgdx"},{"original_method":"private void loadPNG (FileHandle file) {\r\n\t\ttry {\r\n\t\t\tpngDecoder.decodeHeader(file.read());\r\n\t\t\ttexWidth = pngDecoder.getWidth();\r\n\t\t\ttexHeight = pngDecoder.getHeight();\r\n\t\t\tint stride = texWidth * 4;\r\n\t\t\tensureBufferSize(stride * texHeight);\r\n\r\n\t\t\tFormat pngFormat = pngDecoder.decideTextureFormat(PNGDecoder.Format.RGBA);\r\n\t\t\tint glFormat, glInternalFormat;\r\n\t\t\tswitch (pngFormat) {\r\n\t\t\tcase ALPHA:\r\n\t\t\t\tglFormat = GL10.GL_ALPHA;\r\n\t\t\t\tglInternalFormat = GL10.GL_ALPHA;\r\n\t\t\t\tbreak;\r\n\t\t\tcase LUMINANCE:\r\n\t\t\t\tglFormat = GL10.GL_LUMINANCE;\r\n\t\t\t\tglInternalFormat = GL10.GL_LUMINANCE;\r\n\t\t\t\tbreak;\r\n\t\t\tcase LUMINANCE_ALPHA:\r\n\t\t\t\tglFormat = GL10.GL_LUMINANCE_ALPHA;\r\n\t\t\t\tglInternalFormat = GL10.GL_LUMINANCE_ALPHA;\r\n\t\t\t\tbreak;\r\n\t\t\tcase RGB:\r\n\t\t\t\tglFormat = GL10.GL_RGB;\r\n\t\t\t\tglInternalFormat = GL10.GL_RGB;\r\n\t\t\t\tbreak;\r\n\t\t\tcase RGBA:\r\n\t\t\t\tglFormat = GL10.GL_RGBA;\r\n\t\t\t\tglInternalFormat = GL10.GL_RGBA;\r\n\t\t\t\tbreak;\r\n// case BGRA:\r\n// glFormat = GL10.GL_BGRA;\r\n// glInternalFormat = GL10.GL_BGRA;\r\n// break;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new UnsupportedOperationException(\"PNG format not handled: \" + pngFormat);\r\n\t\t\t}\r\n\t\t\tpngDecoder.decode(buffer, stride, pngFormat);\r\n\t\t\tbuffer.flip();\r\n\r\n\t\t\tGL20 gl = Gdx.graphics.getGL20();\r\n\t\t\tIntBuffer buffer = BufferUtils.newIntBuffer(1);\r\n\t\t\tgl.glGenTextures(1, buffer);\r\n\t\t\ttextureID = buffer.get(0);\r\n\t\t\tgl.glBindTexture(GL10.GL_TEXTURE_2D, textureID);\r\n\t\t\tgl.glTexImage2D(GL10.GL_TEXTURE_2D, 0, glInternalFormat, texWidth, texHeight, 0, glFormat, GL10.GL_UNSIGNED_BYTE, buffer);\r\n\t\t} catch (IOException ex) {\r\n\t\t\tthrow new GdxRuntimeException(\"Error loading image file: \" + file, ex);\r\n\t\t}\r\n\t}","id":52038,"modified_method":"private void loadPNG (FileHandle file) {\r\n\t\ttry {\r\n\t\t\tpngDecoder.decodeHeader(file.read());\r\n\t\t\ttexWidth = pngDecoder.getWidth();\r\n\t\t\ttexHeight = pngDecoder.getHeight();\r\n\t\t\tint stride = texWidth * 4;\r\n\t\t\tensureBufferSize(stride * texHeight);\r\n\r\n\t\t\tFormat pngFormat = pngDecoder.decideTextureFormat(PNGDecoder.Format.BGRA);\r\n\t\t\tint glFormat, glInternalFormat;\r\n\t\t\tswitch (pngFormat) {\r\n\t\t\tcase ALPHA:\r\n\t\t\t\tglFormat = GL10.GL_ALPHA;\r\n\t\t\t\tglInternalFormat = GL10.GL_ALPHA;\r\n\t\t\t\tbreak;\r\n\t\t\tcase LUMINANCE:\r\n\t\t\t\tglFormat = GL10.GL_LUMINANCE;\r\n\t\t\t\tglInternalFormat = GL10.GL_LUMINANCE;\r\n\t\t\t\tbreak;\r\n\t\t\tcase LUMINANCE_ALPHA:\r\n\t\t\t\tglFormat = GL10.GL_LUMINANCE_ALPHA;\r\n\t\t\t\tglInternalFormat = GL10.GL_LUMINANCE_ALPHA;\r\n\t\t\t\tbreak;\r\n\t\t\tcase RGB:\r\n\t\t\t\tglFormat = GL10.GL_RGB;\r\n\t\t\t\tglInternalFormat = GL10.GL_RGB;\r\n\t\t\t\tbreak;\r\n\t\t\tcase RGBA:\r\n\t\t\t\tglFormat = GL10.GL_RGBA;\r\n\t\t\t\tglInternalFormat = GL10.GL_RGBA;\r\n\t\t\t\tbreak;\r\n// case BGRA:\r\n// glFormat = GL10.GL_BGRA;\r\n// glInternalFormat = GL10.GL_BGRA;\r\n// break;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new UnsupportedOperationException(\"PNG format not handled: \" + pngFormat);\r\n\t\t\t}\r\n\t\t\tpngDecoder.decode(buffer, stride, pngFormat);\r\n\t\t\tbuffer.flip();\r\n\r\n\t\t\tGL20 gl = Gdx.graphics.getGL20();\r\n\t\t\tIntBuffer buffer = BufferUtils.newIntBuffer(1);\r\n\t\t\tgl.glGenTextures(1, buffer);\r\n\t\t\ttextureID = buffer.get(0);\r\n\t\t\tgl.glBindTexture(GL10.GL_TEXTURE_2D, textureID);\r\n\t\t\tgl.glTexImage2D(GL10.GL_TEXTURE_2D, 0, glInternalFormat, texWidth, texHeight, 0, glFormat, GL10.GL_UNSIGNED_BYTE, buffer);\r\n\t\t} catch (IOException ex) {\r\n\t\t\tthrow new GdxRuntimeException(\"Error loading image file: \" + file, ex);\r\n\t\t}\r\n\t}","commit_id":"d555a6abd1a539702e854ff3d5ce3d82b1a93a1b","url":"https://github.com/libgdx/libgdx"},{"original_method":"private ByteBuffer toByteBuffer (BufferedImage image) {\r\n\t\tint width = image.getWidth();\r\n\t\tint height = image.getHeight();\r\n\t\tensureBufferSize(width * height * 4);\r\n\r\n\t\tRaster raster = image.getRaster();\r\n\t\tif (image.getType() == BufferedImage.TYPE_INT_ARGB)\r\n\t\t\tintBuffer.put(((DataBufferInt)raster.getDataBuffer()).getData(), 0, width * height);\r\n\t\telse {\r\n\t\t\t// Same as image.getRGB() without allocating a large int[].\r\n\t\t\tColorModel colorModel = image.getColorModel();\r\n\t\t\tObject data = raster.getDataElements(0, 0, null);\r\n\t\t\tfor (int y = 0; y < height; y++)\r\n\t\t\t\tfor (int x = 0; x < width; x++)\r\n\t\t\t\t\tintBuffer.put(colorModel.getRGB(raster.getDataElements(x, y, data)));\r\n\t\t}\r\n\r\n\t\tbuffer.limit(intBuffer.position() * 4);\r\n\t\treturn buffer;\r\n\t}","id":52039,"modified_method":"private ByteBuffer toByteBuffer (BufferedImage image) {\r\n\t\tint width = image.getWidth();\r\n\t\tint height = image.getHeight();\r\n\t\tensureBufferSize(width * height * 4);\r\n\r\n\t\tRaster raster = image.getRaster();\r\n\t\tif (image.getType() == BufferedImage.TYPE_INT_ARGB ||\r\n\t\t\timage.getType() == BufferedImage.TYPE_INT_ARGB_PRE) {\r\n\t\t\tint[] pixels = ((DataBufferInt)raster.getDataBuffer()).getData();\r\n\t\t\tfor(int i = 0; i < pixels.length; i++) {\r\n\t\t\t\tint col = pixels[i];\r\n\t\t\t\tcol = ((col & 0xffffff) << 8) |\r\n\t\t\t\t      ((col & 0xff000000) >>> 24);\r\n\t\t\t\tpixels[i] = col;\r\n\t\t\t}\r\n\t\t\tintBuffer.put(pixels, 0, width * height);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Same as image.getRGB() without allocating a large int[].\r\n\t\t\tColorModel colorModel = image.getColorModel();\r\n\t\t\tObject data = raster.getDataElements(0, 0, null);\r\n\t\t\tfor (int y = 0; y < height; y++)\r\n\t\t\t\tfor (int x = 0; x < width; x++) {\r\n\t\t\t\t\tint col = colorModel.getRGB(raster.getDataElements(x, y, data));\r\n\t\t\t\t\tcol = ((col & 0xffffff) << 8) |\r\n\t\t\t\t      \t  ((col & 0xff000000) >>> 24);\r\n\t\t\t\t\tintBuffer.put(col);\r\n\t\t\t\t}\r\n\t\t}\r\n\r\n\t\tbuffer.limit(intBuffer.position() * 4);\r\n\t\treturn buffer;\r\n\t}","commit_id":"d555a6abd1a539702e854ff3d5ce3d82b1a93a1b","url":"https://github.com/libgdx/libgdx"},{"original_method":"@Override\r\n\tpublic void create() {\r\n\t\tString vertexShader = \"attribute vec4 a_position;    \\n\"\r\n\t\t\t\t+ \"attribute vec4 a_color;\\n\" + \"attribute vec2 a_texCoords;\\n\"\r\n\t\t\t\t+ \"uniform mat4 u_worldView;\\n\" + \"varying vec4 v_color;\"\r\n\t\t\t\t+ \"varying vec2 v_texCoords;\"\r\n\t\t\t\t+ \"void main()                  \\n\"\r\n\t\t\t\t+ \"{                            \\n\"\r\n\t\t\t\t+ \"   v_color = vec4(a_color.x, a_color.y, a_color.z, 1); \\n\"\r\n\t\t\t\t+ \"   v_texCoords = a_texCoords; \\n\"\r\n\t\t\t\t+ \"   gl_Position =  u_worldView * a_position;  \\n\"\r\n\t\t\t\t+ \"}                            \\n\";\r\n\t\tString fragmentShader = \"precision mediump float;\\n\"\r\n\t\t\t\t+ \"varying vec4 v_color;\\n\"\r\n\t\t\t\t+ \"varying vec2 v_texCoords;\\n\"\r\n\t\t\t\t+ \"uniform sampler2D u_texture;\\n\"\r\n\t\t\t\t+ \"void main()                                  \\n\"\r\n\t\t\t\t+ \"{                                            \\n\"\r\n\t\t\t\t+ \"  gl_FragColor = v_color * texture2D(u_texture, v_texCoords);\\n\"\r\n\t\t\t\t+ \"}\";\r\n\r\n\t\tshader = new ShaderProgram(vertexShader, fragmentShader);\r\n\t\tif (shader.isCompiled() == false) {\r\n\t\t\tGdx.app.log(\"ShaderTest\", shader.getLog());\r\n\t\t\tSystem.exit(0);\r\n\t\t}\r\n\r\n\t\tmesh = new Mesh(true, 3, 3, new VertexAttribute(Usage.Position, 3,\r\n\t\t\t\t\"a_position\"), new VertexAttribute(Usage.Color, 4, \"a_color\"),\r\n\t\t\t\tnew VertexAttribute(Usage.TextureCoordinates, 2, \"a_texCoords\"));\r\n\r\n\t\tmesh.setVertices(new float[] { -0.5f, -0.5f, 0, 1, 0, 0, 1, 0, 0, 0.5f,\r\n\t\t\t\t-0.5f, 0, 0, 1, 0, 1, 1, 0, 0, 0.5f, 0, 0, 0, 1, 1, 0.5f, 1 });\r\n\t\tmesh.setIndices(new short[] { 0, 1, 2 });\r\n\r\n\t\ttexture = Gdx.graphics.newTexture(Gdx.files.getFileHandle(\r\n\t\t\t\t\"data/badlogic.jpg\", FileType.Internal), TextureFilter.MipMap,\r\n\t\t\t\tTextureFilter.Linear, TextureWrap.ClampToEdge,\r\n\t\t\t\tTextureWrap.ClampToEdge);\r\n\r\n\t\tspriteBatch = new SpriteBatch();\r\n\t\t// font = Gdx.graphics.newFont(\"Arial\", 12, FontStyle.Plain);\r\n\t}","id":52040,"modified_method":"@Override\r\n\tpublic void create() {\r\n\t\tString vertexShader = \"attribute vec4 a_position;    \\n\"\r\n\t\t\t\t+ \"attribute vec4 a_color;\\n\" + \"attribute vec2 a_texCoords;\\n\"\r\n\t\t\t\t+ \"uniform mat4 u_worldView;\\n\" + \"varying vec4 v_color;\"\r\n\t\t\t\t+ \"varying vec2 v_texCoords;\"\r\n\t\t\t\t+ \"void main()                  \\n\"\r\n\t\t\t\t+ \"{                            \\n\"\r\n\t\t\t\t+ \"   v_color = vec4(1, 1, 1, 1); \\n\"\r\n\t\t\t\t+ \"   v_texCoords = a_texCoords; \\n\"\r\n\t\t\t\t+ \"   gl_Position =  u_worldView * a_position;  \\n\"\r\n\t\t\t\t+ \"}                            \\n\";\r\n\t\tString fragmentShader = \"precision mediump float;\\n\"\r\n\t\t\t\t+ \"varying vec4 v_color;\\n\"\r\n\t\t\t\t+ \"varying vec2 v_texCoords;\\n\"\r\n\t\t\t\t+ \"uniform sampler2D u_texture;\\n\"\r\n\t\t\t\t+ \"void main()                                  \\n\"\r\n\t\t\t\t+ \"{                                            \\n\"\r\n\t\t\t\t+ \"  gl_FragColor = v_color * texture2D(u_texture, v_texCoords);\\n\"\r\n\t\t\t\t+ \"}\";\r\n\r\n\t\tshader = new ShaderProgram(vertexShader, fragmentShader);\r\n\t\tif (shader.isCompiled() == false) {\r\n\t\t\tGdx.app.log(\"ShaderTest\", shader.getLog());\r\n\t\t\tSystem.exit(0);\r\n\t\t}\r\n\r\n\t\tmesh = new Mesh(true, 4, 6, new VertexAttribute(Usage.Position, 3,\r\n\t\t\t\t\"a_position\"), new VertexAttribute(Usage.Color, 4, \"a_color\"),\r\n\t\t\t\tnew VertexAttribute(Usage.TextureCoordinates, 2, \"a_texCoords\"));\r\n\r\n\t\tmesh.setVertices(new float[] { -0.5f, -0.5f, 0, 1, 1, 1, 1, 0, 1,\r\n\t\t\t\t\t\t\t\t\t\t0.5f, -0.5f, 0, 1, 1, 1, 1, 1, 1,\r\n\t\t\t\t\t\t\t\t\t\t0.5f,  0.5f, 0, 1, 1, 1, 1, 1, 0,\r\n\t\t\t\t\t\t\t\t\t   -0.5f,  0.5f, 0, 1, 1, 1, 1, 0, 0});\r\n\t\tmesh.setIndices(new short[] { 0, 1, 2, 2, 3, 0 });\r\n\r\n\r\n\t\tPixmap pixmap = Gdx.graphics.newPixmap(2, 1, Format.RGBA8888);\r\n//\t\tpixmap.drawPixel(0, 0, 0xffff0000);\r\n//\t\tpixmap.drawPixel(1, 0, 0xff00ff00);\r\n//\t\tpixmap.drawPixel(0, 1, 0xff0000ff);\r\n//\t\tpixmap.drawPixel(0, 0, 0xffff00ff);\r\n//\t\tpixmap.drawPixel(1, 0, 0xffffff00);\r\n//\t\ttexture = Gdx.graphics.newUnmanagedTexture(pixmap, TextureFilter.Nearest, TextureFilter.Nearest, TextureWrap.ClampToEdge, TextureWrap.ClampToEdge);\r\n\t\ttexture = Gdx.graphics.newTexture(Gdx.files.getFileHandle(\r\n\t\t\t\t\"data/bobrgb888-32x32.png\", FileType.Internal), TextureFilter.MipMap,\r\n\t\t\t\tTextureFilter.Linear, TextureWrap.ClampToEdge,\r\n\t\t\t\tTextureWrap.ClampToEdge);\r\n\r\n\t\tspriteBatch = new SpriteBatch();\r\n\t\t// font = Gdx.graphics.newFont(\"Arial\", 12, FontStyle.Plain);\r\n\t}","commit_id":"d555a6abd1a539702e854ff3d5ce3d82b1a93a1b","url":"https://github.com/libgdx/libgdx"},{"original_method":"@Override\r\n\tpublic void render() {\r\n\t\tangle += Gdx.graphics.getDeltaTime() * 45;\r\n\t\tmatrix.setToRotation(axis, angle);\r\n\r\n\t\tGdx.graphics.getGL20().glViewport(0, 0, Gdx.graphics.getWidth(),\r\n\t\t\t\tGdx.graphics.getHeight());\r\n\t\tGdx.graphics.getGL20().glClearColor(0.2f, 0.2f, 0.2f, 1);\r\n\t\tGdx.graphics.getGL20().glClear(GL20.GL_COLOR_BUFFER_BIT);\r\n\t\tGdx.graphics.getGL20().glEnable(GL20.GL_TEXTURE_2D);\r\n\t\ttexture.bind();\r\n\t\tshader.begin();\r\n\t\tshader.setUniformMatrix(\"u_worldView\", matrix);\r\n\t\tshader.setUniformi(\"u_texture\", 0);\r\n\t\tmesh.render(shader, GL10.GL_TRIANGLES);\r\n\t\tshader.end();\r\n\r\n\t\tspriteBatch.begin();\r\n\t\t// spriteBatch.drawText(font, \"This is a test\", 100, 100, Color.RED);\r\n\t\tspriteBatch.end();\r\n\t}","id":52041,"modified_method":"@Override\r\n\tpublic void render() {\r\n\t\tangle += Gdx.graphics.getDeltaTime() * 45;\r\n\t\tmatrix.setToRotation(axis, angle);\r\n\r\n\t\tGdx.graphics.getGL20().glViewport(0, 0, Gdx.graphics.getWidth(),\r\n\t\t\t\tGdx.graphics.getHeight());\r\n\t\tGdx.graphics.getGL20().glClearColor(0.2f, 0.2f, 0.2f, 1);\r\n\t\tGdx.graphics.getGL20().glClear(GL20.GL_COLOR_BUFFER_BIT);\r\n\t\tGdx.graphics.getGL20().glEnable(GL20.GL_TEXTURE_2D);\r\n\t\tGdx.graphics.getGL20().glEnable(GL10.GL_BLEND);\r\n\t\tGdx.graphics.getGL20().glBlendFunc(GL10.GL_SRC_ALPHA, GL10.GL_ONE_MINUS_SRC_ALPHA);\r\n\t\ttexture.bind();\r\n\t\tshader.begin();\r\n\t\tshader.setUniformMatrix(\"u_worldView\", matrix);\r\n\t\tshader.setUniformi(\"u_texture\", 0);\r\n\t\tmesh.render(shader, GL10.GL_TRIANGLES);\r\n\t\tshader.end();\r\n\r\n\t\tspriteBatch.begin();\r\n\t\t// spriteBatch.drawText(font, \"This is a test\", 100, 100, Color.RED);\r\n\t\tspriteBatch.end();\r\n\t}","commit_id":"d555a6abd1a539702e854ff3d5ce3d82b1a93a1b","url":"https://github.com/libgdx/libgdx"},{"original_method":"public ColorDescriptor(final Color color) {\n    super(color.getRGB());\n    myColor = color;\n  }","id":52042,"modified_method":"public ColorDescriptor(final Color color) {\n    super(color != null ? color.getRGB() : 0);\n    myColor = color;\n  }","commit_id":"5740a81b0416e925eed699699b3759a6e4d1918f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public String toString() {\n    if (mySwingColor != null) {\n      return mySwingColor;\n    }\n    if (mySystemColor != null) {\n      return mySystemColor;\n    }\n    if (myAWTColor != null) {\n      return myAWTColor;\n    }\n    return \"[\" + getRed() + \",\" + getGreen() + \",\" + getBlue() + \"]\";\n  }","id":52043,"modified_method":"public String toString() {\n    if (mySwingColor != null) {\n      return mySwingColor;\n    }\n    if (mySystemColor != null) {\n      return mySystemColor;\n    }\n    if (myAWTColor != null) {\n      return myAWTColor;\n    }\n    if (myColor != null) {\n      return \"[\" + getRed() + \",\" + getGreen() + \",\" + getBlue() + \"]\";\n    }\n    return \"null\";\n  }","commit_id":"5740a81b0416e925eed699699b3759a6e4d1918f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void generatePushValue(final GeneratorAdapter generator, final Object value) {\n    ColorDescriptor descriptor = (ColorDescriptor) value;\n    if (descriptor.getColor() != null) {\n      generator.newInstance(ourColorType);\n      generator.dup();\n      generator.push(descriptor.getColor().getRGB());\n      generator.invokeConstructor(ourColorType, ourInitMethod);\n    }\n    else if (descriptor.getSwingColor() != null) {\n      generator.push(descriptor.getSwingColor());\n      generator.invokeStatic(ourUIManagerType, ourGetColorMethod);\n    }\n    else if (descriptor.getSystemColor() != null) {\n      generator.getStatic(ourSystemColorType, descriptor.getSystemColor(), ourSystemColorType);\n    }\n    else if (descriptor.getAWTColor() != null) {\n      generator.getStatic(ourColorType, descriptor.getAWTColor(), ourColorType);\n    }\n    else {\n      throw new IllegalStateException(\"Unknown color type\");\n    }\n  }","id":52044,"modified_method":"public void generatePushValue(final GeneratorAdapter generator, final Object value) {\n    ColorDescriptor descriptor = (ColorDescriptor) value;\n    if (descriptor.getColor() != null) {\n      generator.newInstance(ourColorType);\n      generator.dup();\n      generator.push(descriptor.getColor().getRGB());\n      generator.invokeConstructor(ourColorType, ourInitMethod);\n    }\n    else if (descriptor.getSwingColor() != null) {\n      generator.push(descriptor.getSwingColor());\n      generator.invokeStatic(ourUIManagerType, ourGetColorMethod);\n    }\n    else if (descriptor.getSystemColor() != null) {\n      generator.getStatic(ourSystemColorType, descriptor.getSystemColor(), ourSystemColorType);\n    }\n    else if (descriptor.getAWTColor() != null) {\n      generator.getStatic(ourColorType, descriptor.getAWTColor(), ourColorType);\n    }\n    else if (descriptor.isColorSet()) {\n      throw new IllegalStateException(\"Unknown color type\");\n    }\n  }","commit_id":"5740a81b0416e925eed699699b3759a6e4d1918f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void generateSetupCodeForComponent(final LwComponent component,\n                                             final HashMap<LwComponent, String> component2TempVariable,\n                                             final TObjectIntHashMap<String> class2variableIndex,\n                                             final HashMap<String, LwComponent> id2component,\n                                             final Module module,\n                                             final PsiClass aClass) throws CodeGenerationException{\n    id2component.put(component.getId(), component);\n    GlobalSearchScope globalSearchScope = module.getModuleWithDependenciesAndLibrariesScope(false);\n\n    final LwContainer parent = component.getParent();\n\n    final String variable = getVariable(component, component2TempVariable, class2variableIndex, aClass);\n    final String componentClass = component instanceof LwNestedForm\n                                  ? getNestedFormClass(module, (LwNestedForm) component)\n                                  : myLayoutSourceGenerator.mapComponentClass(component.getComponentClassName());\n\n    final String binding = component.getBinding();\n    if (binding != null) {\n      myBuffer.append(binding);\n    }\n    else {\n      myBuffer.append(\"final \");\n      myBuffer.append(componentClass);\n      myBuffer.append(\" \");\n      myBuffer.append(variable);\n    }\n    myBuffer.append('=');\n    startConstructor(componentClass);\n    endConstructor(); // will finish the line\n\n    if (component instanceof LwContainer) {\n      getComponentLayoutGenerator(component).generateContainerLayout((LwContainer) component, this, variable);\n    }\n\n    // introspected properties\n    final LwIntrospectedProperty[] introspectedProperties = component.getAssignedIntrospectedProperties();\n\n    // see SCR #35990\n    Arrays.sort(introspectedProperties, new Comparator<LwIntrospectedProperty>() {\n      public int compare(LwIntrospectedProperty p1, LwIntrospectedProperty p2) {\n        return p1.getName().compareTo(p2.getName());\n      }\n    });\n\n    for (final LwIntrospectedProperty property : introspectedProperties) {\n      if (property instanceof LwIntroComponentProperty) {\n        // component properties are processed in second pass\n        continue;\n      }\n\n      Object value = component.getPropertyValue(property);\n\n      //noinspection HardCodedStringLiteral\n      final boolean isTextWithMnemonicProperty =\n        \"text\".equals(property.getName()) &&\n        (isAssignableFrom(AbstractButton.class.getName(), componentClass, globalSearchScope) ||\n         isAssignableFrom(JLabel.class.getName(), componentClass, globalSearchScope));\n\n      // handle resource bundles\n      if (property instanceof LwRbIntroStringProperty) {\n        final StringDescriptor descriptor = (StringDescriptor)value;\n        if (descriptor.getValue() == null) {\n          if (isTextWithMnemonicProperty) {\n            startStaticMethodCall(SupportCode.class, \"setTextFromBundle\");\n            pushVar(variable);\n            push(descriptor.getBundleName());\n            push(descriptor.getKey());\n            endMethod();\n          }\n          else {\n            startMethodCall(variable, property.getWriteMethodName());\n            push(descriptor);\n            endMethod();\n          }\n\n          continue;\n        }\n        else {\n          value = descriptor.getValue();\n        }\n      }\n\n      SupportCode.TextWithMnemonic textWithMnemonic = null;\n      if (isTextWithMnemonicProperty) {\n        textWithMnemonic = SupportCode.parseText((String)value);\n        value = textWithMnemonic.myText;\n      }\n\n      startMethodCall(variable, property.getWriteMethodName());\n\n\n      final String propertyClass = property.getPropertyClassName();\n      if (propertyClass.equals(Dimension.class.getName())) {\n        newDimension((Dimension)value);\n      }\n      else if (propertyClass.equals(Integer.class.getName())) {\n        push(((Integer)value).intValue());\n      }\n      else if (propertyClass.equals(Double.class.getName())) {\n        push(((Double)value).doubleValue());\n      }\n      else if (propertyClass.equals(Boolean.class.getName())) {\n        push(((Boolean)value).booleanValue());\n      }\n      else if (propertyClass.equals(Rectangle.class.getName())) {\n        newRectangle((Rectangle)value);\n      }\n      else if (propertyClass.equals(Insets.class.getName())) {\n        newInsets((Insets)value);\n      }\n      else if (propertyClass.equals(String.class.getName())) {\n        push((String)value);\n      }\n      else if (propertyClass.equals(Color.class.getName())) {\n        pushColor((ColorDescriptor) value);\n      }\n      else if (propertyClass.equals(Font.class.getName())) {\n        pushFont((FontDescriptor) value);\n      }\n      else if (propertyClass.equals(Icon.class.getName())) {\n        pushIcon((IconDescriptor) value);\n      }\n      else {\n        //noinspection HardCodedStringLiteral\n        throw new RuntimeException(\"unexpected property class: \" + propertyClass);\n      }\n\n      endMethod();\n\n      // special handling of mnemonics\n\n      if (!isTextWithMnemonicProperty) {\n        continue;\n      }\n\n      if (textWithMnemonic.myMnemonicIndex == -1) {\n        continue;\n      }\n\n      if (isAssignableFrom(AbstractButton.class.getName(), componentClass, globalSearchScope)) {\n        startMethodCall(variable, \"setMnemonic\");\n        push(textWithMnemonic.getMnemonicChar());\n        endMethod();\n\n        startStaticMethodCall(SupportCode.class, \"setDisplayedMnemonicIndex\");\n        pushVar(variable);\n        push(textWithMnemonic.myMnemonicIndex);\n        endMethod();\n      }\n      else if (isAssignableFrom(JLabel.class.getName(), componentClass, globalSearchScope)) {\n        startMethodCall(variable, \"setDisplayedMnemonic\");\n        push(textWithMnemonic.getMnemonicChar());\n        endMethod();\n\n        startStaticMethodCall(SupportCode.class, \"setDisplayedMnemonicIndex\");\n        pushVar(variable);\n        push(textWithMnemonic.myMnemonicIndex);\n        endMethod();\n      }\n    }\n\n    // add component to parent\n    if (!(component.getParent() instanceof LwRootContainer)) {\n\n      final String parentVariable = getVariable(parent, component2TempVariable, class2variableIndex, aClass);\n      String componentVar = variable;\n      if (component instanceof LwNestedForm) {\n        componentVar = variable + \".\" + AsmCodeGenerator.GET_ROOT_COMPONENT_METHOD_NAME + \"()\";\n      }\n      getComponentLayoutGenerator(component.getParent()).generateComponentLayout(component, this, componentVar, parentVariable);\n    }\n\n    if (component instanceof LwContainer) {\n      final LwContainer container = (LwContainer)component;\n\n      // border\n\n      final BorderType borderType = container.getBorderType();\n      final StringDescriptor borderTitle = container.getBorderTitle();\n      final String borderFactoryMethodName = borderType.getBorderFactoryMethodName();\n\n      final boolean borderNone = borderType.equals(BorderType.NONE);\n      if (!borderNone || borderTitle != null) {\n        startMethodCall(variable, \"setBorder\");\n\n\n        startStaticMethodCall(BorderFactory.class, \"createTitledBorder\");\n\n        if (!borderNone) {\n          startStaticMethodCall(BorderFactory.class, borderFactoryMethodName);\n          endMethod();\n        }\n\n        push(borderTitle);\n\n        endMethod(); // createTitledBorder\n\n        endMethod(); // setBorder\n      }\n\n      for (int i = 0; i < container.getComponentCount(); i++) {\n        generateSetupCodeForComponent((LwComponent)container.getComponent(i), component2TempVariable, class2variableIndex, id2component,\n                                      module, aClass);\n      }\n    }\n  }","id":52045,"modified_method":"private void generateSetupCodeForComponent(final LwComponent component,\n                                             final HashMap<LwComponent, String> component2TempVariable,\n                                             final TObjectIntHashMap<String> class2variableIndex,\n                                             final HashMap<String, LwComponent> id2component,\n                                             final Module module,\n                                             final PsiClass aClass) throws CodeGenerationException{\n    id2component.put(component.getId(), component);\n    GlobalSearchScope globalSearchScope = module.getModuleWithDependenciesAndLibrariesScope(false);\n\n    final LwContainer parent = component.getParent();\n\n    final String variable = getVariable(component, component2TempVariable, class2variableIndex, aClass);\n    final String componentClass = component instanceof LwNestedForm\n                                  ? getNestedFormClass(module, (LwNestedForm) component)\n                                  : myLayoutSourceGenerator.mapComponentClass(component.getComponentClassName());\n\n    final String binding = component.getBinding();\n    if (binding != null) {\n      myBuffer.append(binding);\n    }\n    else {\n      myBuffer.append(\"final \");\n      myBuffer.append(componentClass);\n      myBuffer.append(\" \");\n      myBuffer.append(variable);\n    }\n    myBuffer.append('=');\n    startConstructor(componentClass);\n    endConstructor(); // will finish the line\n\n    if (component instanceof LwContainer) {\n      getComponentLayoutGenerator(component).generateContainerLayout((LwContainer) component, this, variable);\n    }\n\n    // introspected properties\n    final LwIntrospectedProperty[] introspectedProperties = component.getAssignedIntrospectedProperties();\n\n    // see SCR #35990\n    Arrays.sort(introspectedProperties, new Comparator<LwIntrospectedProperty>() {\n      public int compare(LwIntrospectedProperty p1, LwIntrospectedProperty p2) {\n        return p1.getName().compareTo(p2.getName());\n      }\n    });\n\n    for (final LwIntrospectedProperty property : introspectedProperties) {\n      if (property instanceof LwIntroComponentProperty) {\n        // component properties are processed in second pass\n        continue;\n      }\n\n      Object value = component.getPropertyValue(property);\n\n      //noinspection HardCodedStringLiteral\n      final boolean isTextWithMnemonicProperty =\n        \"text\".equals(property.getName()) &&\n        (isAssignableFrom(AbstractButton.class.getName(), componentClass, globalSearchScope) ||\n         isAssignableFrom(JLabel.class.getName(), componentClass, globalSearchScope));\n\n      // handle resource bundles\n      if (property instanceof LwRbIntroStringProperty) {\n        final StringDescriptor descriptor = (StringDescriptor)value;\n        if (descriptor.getValue() == null) {\n          if (isTextWithMnemonicProperty) {\n            startStaticMethodCall(SupportCode.class, \"setTextFromBundle\");\n            pushVar(variable);\n            push(descriptor.getBundleName());\n            push(descriptor.getKey());\n            endMethod();\n          }\n          else {\n            startMethodCall(variable, property.getWriteMethodName());\n            push(descriptor);\n            endMethod();\n          }\n\n          continue;\n        }\n        else {\n          value = descriptor.getValue();\n        }\n      }\n\n      SupportCode.TextWithMnemonic textWithMnemonic = null;\n      if (isTextWithMnemonicProperty) {\n        textWithMnemonic = SupportCode.parseText((String)value);\n        value = textWithMnemonic.myText;\n      }\n\n\n      final String propertyClass = property.getPropertyClassName();\n      if (propertyClass.equals(Color.class.getName())) {\n        ColorDescriptor descriptor = (ColorDescriptor) value;\n        if (!descriptor.isColorSet()) continue;\n      }\n\n      startMethodCall(variable, property.getWriteMethodName());\n\n      if (propertyClass.equals(Dimension.class.getName())) {\n        newDimension((Dimension)value);\n      }\n      else if (propertyClass.equals(Integer.class.getName())) {\n        push(((Integer)value).intValue());\n      }\n      else if (propertyClass.equals(Double.class.getName())) {\n        push(((Double)value).doubleValue());\n      }\n      else if (propertyClass.equals(Boolean.class.getName())) {\n        push(((Boolean)value).booleanValue());\n      }\n      else if (propertyClass.equals(Rectangle.class.getName())) {\n        newRectangle((Rectangle)value);\n      }\n      else if (propertyClass.equals(Insets.class.getName())) {\n        newInsets((Insets)value);\n      }\n      else if (propertyClass.equals(String.class.getName())) {\n        push((String)value);\n      }\n      else if (propertyClass.equals(Color.class.getName())) {\n        pushColor((ColorDescriptor) value);\n      }\n      else if (propertyClass.equals(Font.class.getName())) {\n        pushFont((FontDescriptor) value);\n      }\n      else if (propertyClass.equals(Icon.class.getName())) {\n        pushIcon((IconDescriptor) value);\n      }\n      else {\n        //noinspection HardCodedStringLiteral\n        throw new RuntimeException(\"unexpected property class: \" + propertyClass);\n      }\n\n      endMethod();\n\n      // special handling of mnemonics\n\n      if (!isTextWithMnemonicProperty) {\n        continue;\n      }\n\n      if (textWithMnemonic.myMnemonicIndex == -1) {\n        continue;\n      }\n\n      if (isAssignableFrom(AbstractButton.class.getName(), componentClass, globalSearchScope)) {\n        startMethodCall(variable, \"setMnemonic\");\n        push(textWithMnemonic.getMnemonicChar());\n        endMethod();\n\n        startStaticMethodCall(SupportCode.class, \"setDisplayedMnemonicIndex\");\n        pushVar(variable);\n        push(textWithMnemonic.myMnemonicIndex);\n        endMethod();\n      }\n      else if (isAssignableFrom(JLabel.class.getName(), componentClass, globalSearchScope)) {\n        startMethodCall(variable, \"setDisplayedMnemonic\");\n        push(textWithMnemonic.getMnemonicChar());\n        endMethod();\n\n        startStaticMethodCall(SupportCode.class, \"setDisplayedMnemonicIndex\");\n        pushVar(variable);\n        push(textWithMnemonic.myMnemonicIndex);\n        endMethod();\n      }\n    }\n\n    // add component to parent\n    if (!(component.getParent() instanceof LwRootContainer)) {\n\n      final String parentVariable = getVariable(parent, component2TempVariable, class2variableIndex, aClass);\n      String componentVar = variable;\n      if (component instanceof LwNestedForm) {\n        componentVar = variable + \".\" + AsmCodeGenerator.GET_ROOT_COMPONENT_METHOD_NAME + \"()\";\n      }\n      getComponentLayoutGenerator(component.getParent()).generateComponentLayout(component, this, componentVar, parentVariable);\n    }\n\n    if (component instanceof LwContainer) {\n      final LwContainer container = (LwContainer)component;\n\n      // border\n\n      final BorderType borderType = container.getBorderType();\n      final StringDescriptor borderTitle = container.getBorderTitle();\n      final String borderFactoryMethodName = borderType.getBorderFactoryMethodName();\n\n      final boolean borderNone = borderType.equals(BorderType.NONE);\n      if (!borderNone || borderTitle != null) {\n        startMethodCall(variable, \"setBorder\");\n\n\n        startStaticMethodCall(BorderFactory.class, \"createTitledBorder\");\n\n        if (!borderNone) {\n          startStaticMethodCall(BorderFactory.class, borderFactoryMethodName);\n          endMethod();\n        }\n\n        push(borderTitle);\n\n        endMethod(); // createTitledBorder\n\n        endMethod(); // setBorder\n      }\n\n      for (int i = 0; i < container.getComponentCount(); i++) {\n        generateSetupCodeForComponent((LwComponent)container.getComponent(i), component2TempVariable, class2variableIndex, id2component,\n                                      module, aClass);\n      }\n    }\n  }","commit_id":"5740a81b0416e925eed699699b3759a6e4d1918f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override protected void setValueImpl(final RadComponent component, final Object value) throws Exception {\n    ColorDescriptor colorDescriptor = (ColorDescriptor) value;\n    component.getDelegee().putClientProperty(CLIENT_PROPERTY_KEY_PREFIX + getName(), colorDescriptor);\n    if (colorDescriptor != null) {\n      super.setValueImpl(component, colorDescriptor.getResolvedColor());\n    }\n  }","id":52046,"modified_method":"@Override protected void setValueImpl(final RadComponent component, final Object value) throws Exception {\n    ColorDescriptor colorDescriptor = (ColorDescriptor) value;\n    component.getDelegee().putClientProperty(CLIENT_PROPERTY_KEY_PREFIX + getName(), colorDescriptor);\n    if (colorDescriptor != null && colorDescriptor.isColorSet()) {\n      super.setValueImpl(component, colorDescriptor.getResolvedColor());\n    }\n  }","commit_id":"5740a81b0416e925eed699699b3759a6e4d1918f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Object read(Element element) throws Exception {\n    Attribute attr = element.getAttribute(UIFormXmlConstants.ATTRIBUTE_COLOR);\n    if (attr != null) {\n      return new ColorDescriptor(new Color(attr.getIntValue()));\n    }\n    String swingColor = element.getAttributeValue(UIFormXmlConstants.ATTRIBUTE_SWING_COLOR);\n    if (swingColor != null) {\n      return ColorDescriptor.fromSwingColor(swingColor);\n    }\n    String systemColor = element.getAttributeValue(UIFormXmlConstants.ATTRIBUTE_SYSTEM_COLOR);\n    if (systemColor != null) {\n      return ColorDescriptor.fromSystemColor(systemColor);\n    }\n    String awtColor = element.getAttributeValue(UIFormXmlConstants.ATTRIBUTE_AWT_COLOR);\n    if (awtColor != null) {\n      return ColorDescriptor.fromAWTColor(awtColor);\n    }\n    return null;\n  }","id":52047,"modified_method":"public Object read(Element element) throws Exception {\n    Attribute attr = element.getAttribute(UIFormXmlConstants.ATTRIBUTE_COLOR);\n    if (attr != null) {\n      return new ColorDescriptor(new Color(attr.getIntValue()));\n    }\n    String swingColor = element.getAttributeValue(UIFormXmlConstants.ATTRIBUTE_SWING_COLOR);\n    if (swingColor != null) {\n      return ColorDescriptor.fromSwingColor(swingColor);\n    }\n    String systemColor = element.getAttributeValue(UIFormXmlConstants.ATTRIBUTE_SYSTEM_COLOR);\n    if (systemColor != null) {\n      return ColorDescriptor.fromSystemColor(systemColor);\n    }\n    String awtColor = element.getAttributeValue(UIFormXmlConstants.ATTRIBUTE_AWT_COLOR);\n    if (awtColor != null) {\n      return ColorDescriptor.fromAWTColor(awtColor);\n    }\n    return new ColorDescriptor(null);\n  }","commit_id":"5740a81b0416e925eed699699b3759a6e4d1918f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private IgnoreSelectedChangesAction(boolean shortcut) {\n      super(shortcut);\n      getTemplatePresentation().setText(\"Ignore\");\n      getTemplatePresentation().setIcon(AllIcons.Diff.Remove);\n      copyShortcutFrom(ActionManager.getInstance().getAction(\"Diff.IgnoreRightSide\"));\n    }","id":52048,"modified_method":"private IgnoreSelectedChangesAction(boolean shortcut) {\n      super(shortcut);\n      getTemplatePresentation().setText(\"Ignore\");\n      getTemplatePresentation().setIcon(AllIcons.Diff.Remove);\n      setShortcutSet(new CompositeShortcutSet(ActionManager.getInstance().getAction(\"Diff.IgnoreRightSide\").getShortcutSet(),\n                                              ActionManager.getInstance().getAction(\"Diff.ApplyLeftSide\").getShortcutSet()));\n    }","commit_id":"7383820fe781690e641224fa85b7a81024570230","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public NextOccurenceAction() {\n      copyFrom(ActionManager.getInstance().getAction(IdeActions.ACTION_NEXT_OCCURENCE));\n      copyShortcutFrom(ActionManager.getInstance().getAction(IdeActions.ACTION_FIND_NEXT));\n    }","id":52049,"modified_method":"public NextOccurenceAction() {\n      copyFrom(ActionManager.getInstance().getAction(IdeActions.ACTION_NEXT_OCCURENCE));\n      ArrayList<Shortcut> shortcuts = new ArrayList<Shortcut>();\n      shortcuts.addAll(Arrays.asList(ActionManager.getInstance().getAction(IdeActions.ACTION_FIND_NEXT).getShortcutSet().getShortcuts()));\n      shortcuts.addAll(Arrays.asList(ActionManager.getInstance().getAction(IdeActions.ACTION_EDITOR_MOVE_CARET_DOWN).getShortcutSet().getShortcuts()));\n\n      registerCustomShortcutSet(\n        new CustomShortcutSet(shortcuts.toArray(new Shortcut[shortcuts.size()])),\n        mySearchField);\n    }","commit_id":"6181caf0177aab3b3725b6c7b199fdab15e6fb1d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public EditorSearchComponent(final Editor editor, final Project project) {\n    super(new BorderLayout(0, 0));\n\n    GRADIENT_C1 = getBackground();\n    GRADIENT_C2 = new Color(GRADIENT_C1.getRed() - 0x18, GRADIENT_C1.getGreen() - 0x18, GRADIENT_C1.getBlue() - 0x18);\n    \n    myProject = project;\n    myEditor = editor;\n\n    JPanel leadPanel = new NonOpaquePanel(new FlowLayout(FlowLayout.LEFT, 5, 0));\n    add(leadPanel, BorderLayout.WEST);\n\n    mySearchField = new JTextField();\n    mySearchField.putClientProperty(\"AuxEditorComponent\", Boolean.TRUE);\n    leadPanel.add(mySearchField);\n\n    myDefaultBackground = mySearchField.getBackground();\n    mySearchField.setColumns(25);\n\n    setSmallerFont(mySearchField);\n\n    DefaultActionGroup group = new DefaultActionGroup(\"search bar\", false);\n    group.add(new ShowHistoryAction());\n    group.add(new PrevOccurenceAction());\n    group.add(new NextOccurenceAction());\n\n    final ActionToolbar tb = ActionManager.getInstance().createActionToolbar(\"SearchBar\", group, true);\n    tb.setLayoutPolicy(ActionToolbar.NOWRAP_LAYOUT_POLICY);\n    myToolbarComponent = tb.getComponent();\n    myToolbarComponent.setBorder(null);\n    myToolbarComponent.setOpaque(false);\n    leadPanel.add(myToolbarComponent);\n\n    final JCheckBox cbMatchCase = new NonFocusableCheckBox(\"Case sensitive\");\n    final JCheckBox cbWholeWords = new NonFocusableCheckBox(\"Match whole words only\");\n    final JCheckBox cbRegexp = new NonFocusableCheckBox(\"Regex\");\n\n    leadPanel.add(cbMatchCase);\n    leadPanel.add(cbWholeWords);\n    leadPanel.add(cbRegexp);\n\n    cbMatchCase.setSelected(isCaseSensitive());\n    cbWholeWords.setSelected(isWholeWords());\n    cbRegexp.setSelected(isRegexp());\n\n    cbMatchCase.setMnemonic('C');\n    cbWholeWords.setMnemonic('M');\n    cbRegexp.setMnemonic('R');\n\n    setSmallerFontAndOpaque(cbWholeWords);\n    setSmallerFontAndOpaque(cbMatchCase);\n    setSmallerFontAndOpaque(cbRegexp);\n\n    cbMatchCase.addActionListener(new ActionListener() {\n      public void actionPerformed(final ActionEvent e) {\n        final boolean b = cbMatchCase.isSelected();\n        FindManager.getInstance(myProject).getFindInFileModel().setCaseSensitive(b);\n        FindSettings.getInstance().setLocalCaseSensitive(b);\n        updateResults();\n      }\n    });\n\n    cbWholeWords.addActionListener(new ActionListener() {\n      public void actionPerformed(final ActionEvent e) {\n        final boolean b = cbWholeWords.isSelected();\n        FindManager.getInstance(myProject).getFindInFileModel().setWholeWordsOnly(b);\n        FindSettings.getInstance().setLocalWholeWordsOnly(b);\n        updateResults();\n      }\n    });\n\n    cbRegexp.addActionListener(new ActionListener() {\n      public void actionPerformed(final ActionEvent e) {\n        final boolean b = cbRegexp.isSelected();\n        cbWholeWords.setEnabled(!b);\n        FindManager.getInstance(myProject).getFindInFileModel().setRegularExpressions(b);\n        updateResults();\n      }\n    });\n\n    JPanel tailPanel = new NonOpaquePanel(new BorderLayout(5, 0));\n    add(tailPanel, BorderLayout.EAST);\n\n    myMatchInfoLabel = new JLabel();\n    setSmallerFontAndOpaque(myMatchInfoLabel);\n\n    JLabel closeLabel = new JLabel(\" \", IconLoader.getIcon(\"/actions/cross.png\"), JLabel.RIGHT);\n    closeLabel.addMouseListener(new MouseAdapter() {\n      public void mousePressed(final MouseEvent e) {\n        close();\n      }\n    });\n\n    closeLabel.setToolTipText(\"Close search bar (Escape)\");\n    \n    tailPanel.add(closeLabel, BorderLayout.EAST);\n    tailPanel.add(myMatchInfoLabel, BorderLayout.WEST);\n\n    mySearchField.getDocument().addDocumentListener(new DocumentAdapter() {\n      protected void textChanged(final DocumentEvent e) {\n        updateResults();\n      }\n    });\n\n    mySearchField.registerKeyboardAction(new ActionListener() {\n      public void actionPerformed(final ActionEvent e) {\n        close();\n      }\n    }, KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_FOCUSED);\n\n    mySearchField.registerKeyboardAction(new ActionListener() {\n      public void actionPerformed(final ActionEvent e) {\n        if (\"\".equals(mySearchField.getText())) {\n          close();\n        }\n        else {\n          myEditor.getContentComponent().requestFocus();\n          addCurrentTextToRecents();\n        }\n      }\n    }, KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), JComponent.WHEN_FOCUSED);\n\n    mySearchField.registerKeyboardAction(new ActionListener() {\n      public void actionPerformed(final ActionEvent e) {\n        searchForward();\n      }\n    }, KeyStroke.getKeyStroke(KeyEvent.VK_DOWN, 0), JComponent.WHEN_FOCUSED);\n\n    mySearchField.registerKeyboardAction(new ActionListener() {\n      public void actionPerformed(final ActionEvent e) {\n        searchBackward();\n      }\n    }, KeyStroke.getKeyStroke(KeyEvent.VK_UP, 0), JComponent.WHEN_FOCUSED);\n\n    final String initialText = myEditor.getSelectionModel().getSelectedText();\n\n    SwingUtilities.invokeLater(new Runnable() {\n      public void run() {\n        mySearchField.setText(initialText != null && initialText.indexOf('\\n') < 0 ? initialText : \"\");\n      }\n    });\n\n    new VariantsCompletionAction(); // It registers a shortcut set automatically on construction\n  }","id":52050,"modified_method":"public EditorSearchComponent(final Editor editor, final Project project) {\n    super(new BorderLayout(0, 0));\n\n    GRADIENT_C1 = getBackground();\n    GRADIENT_C2 = new Color(GRADIENT_C1.getRed() - 0x18, GRADIENT_C1.getGreen() - 0x18, GRADIENT_C1.getBlue() - 0x18);\n    \n    myProject = project;\n    myEditor = editor;\n\n    JPanel leadPanel = new NonOpaquePanel(new FlowLayout(FlowLayout.LEFT, 5, 0));\n    add(leadPanel, BorderLayout.WEST);\n\n    mySearchField = new JTextField();\n    mySearchField.putClientProperty(\"AuxEditorComponent\", Boolean.TRUE);\n    leadPanel.add(mySearchField);\n\n    myDefaultBackground = mySearchField.getBackground();\n    mySearchField.setColumns(25);\n\n    setSmallerFont(mySearchField);\n\n    DefaultActionGroup group = new DefaultActionGroup(\"search bar\", false);\n    group.add(new ShowHistoryAction());\n    group.add(new PrevOccurenceAction());\n    group.add(new NextOccurenceAction());\n\n    final ActionToolbar tb = ActionManager.getInstance().createActionToolbar(\"SearchBar\", group, true);\n    tb.setLayoutPolicy(ActionToolbar.NOWRAP_LAYOUT_POLICY);\n    myToolbarComponent = tb.getComponent();\n    myToolbarComponent.setBorder(null);\n    myToolbarComponent.setOpaque(false);\n    leadPanel.add(myToolbarComponent);\n\n    final JCheckBox cbMatchCase = new NonFocusableCheckBox(\"Case sensitive\");\n    final JCheckBox cbWholeWords = new NonFocusableCheckBox(\"Match whole words only\");\n    final JCheckBox cbRegexp = new NonFocusableCheckBox(\"Regex\");\n\n    leadPanel.add(cbMatchCase);\n    leadPanel.add(cbWholeWords);\n    leadPanel.add(cbRegexp);\n\n    cbMatchCase.setSelected(isCaseSensitive());\n    cbWholeWords.setSelected(isWholeWords());\n    cbRegexp.setSelected(isRegexp());\n\n    cbMatchCase.setMnemonic('C');\n    cbWholeWords.setMnemonic('M');\n    cbRegexp.setMnemonic('R');\n\n    setSmallerFontAndOpaque(cbWholeWords);\n    setSmallerFontAndOpaque(cbMatchCase);\n    setSmallerFontAndOpaque(cbRegexp);\n\n    cbMatchCase.addActionListener(new ActionListener() {\n      public void actionPerformed(final ActionEvent e) {\n        final boolean b = cbMatchCase.isSelected();\n        FindManager.getInstance(myProject).getFindInFileModel().setCaseSensitive(b);\n        FindSettings.getInstance().setLocalCaseSensitive(b);\n        updateResults();\n      }\n    });\n\n    cbWholeWords.addActionListener(new ActionListener() {\n      public void actionPerformed(final ActionEvent e) {\n        final boolean b = cbWholeWords.isSelected();\n        FindManager.getInstance(myProject).getFindInFileModel().setWholeWordsOnly(b);\n        FindSettings.getInstance().setLocalWholeWordsOnly(b);\n        updateResults();\n      }\n    });\n\n    cbRegexp.addActionListener(new ActionListener() {\n      public void actionPerformed(final ActionEvent e) {\n        final boolean b = cbRegexp.isSelected();\n        cbWholeWords.setEnabled(!b);\n        FindManager.getInstance(myProject).getFindInFileModel().setRegularExpressions(b);\n        updateResults();\n      }\n    });\n\n    JPanel tailPanel = new NonOpaquePanel(new BorderLayout(5, 0));\n    add(tailPanel, BorderLayout.EAST);\n\n    myMatchInfoLabel = new JLabel();\n    setSmallerFontAndOpaque(myMatchInfoLabel);\n\n    JLabel closeLabel = new JLabel(\" \", IconLoader.getIcon(\"/actions/cross.png\"), JLabel.RIGHT);\n    closeLabel.addMouseListener(new MouseAdapter() {\n      public void mousePressed(final MouseEvent e) {\n        close();\n      }\n    });\n\n    closeLabel.setToolTipText(\"Close search bar (Escape)\");\n    \n    tailPanel.add(closeLabel, BorderLayout.EAST);\n    tailPanel.add(myMatchInfoLabel, BorderLayout.WEST);\n\n    mySearchField.getDocument().addDocumentListener(new DocumentAdapter() {\n      protected void textChanged(final DocumentEvent e) {\n        updateResults();\n      }\n    });\n\n    mySearchField.registerKeyboardAction(new ActionListener() {\n      public void actionPerformed(final ActionEvent e) {\n        close();\n      }\n    }, KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_FOCUSED);\n\n    mySearchField.registerKeyboardAction(new ActionListener() {\n      public void actionPerformed(final ActionEvent e) {\n        if (\"\".equals(mySearchField.getText())) {\n          close();\n        }\n        else {\n          myEditor.getContentComponent().requestFocus();\n          addCurrentTextToRecents();\n        }\n      }\n    }, KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), JComponent.WHEN_FOCUSED);\n\n    final String initialText = myEditor.getSelectionModel().getSelectedText();\n\n    SwingUtilities.invokeLater(new Runnable() {\n      public void run() {\n        mySearchField.setText(initialText != null && initialText.indexOf('\\n') < 0 ? initialText : \"\");\n      }\n    });\n\n    new VariantsCompletionAction(); // It registers a shortcut set automatically on construction\n  }","commit_id":"6181caf0177aab3b3725b6c7b199fdab15e6fb1d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public PrevOccurenceAction() {\n      copyFrom(ActionManager.getInstance().getAction(IdeActions.ACTION_PREVIOUS_OCCURENCE));\n      copyShortcutFrom(ActionManager.getInstance().getAction(IdeActions.ACTION_FIND_PREVIOUS));\n    }","id":52051,"modified_method":"public PrevOccurenceAction() {\n      copyFrom(ActionManager.getInstance().getAction(IdeActions.ACTION_PREVIOUS_OCCURENCE));\n\n      ArrayList<Shortcut> shortcuts = new ArrayList<Shortcut>();\n      shortcuts.addAll(Arrays.asList(ActionManager.getInstance().getAction(IdeActions.ACTION_FIND_PREVIOUS).getShortcutSet().getShortcuts()));\n      shortcuts.addAll(Arrays.asList(ActionManager.getInstance().getAction(IdeActions.ACTION_EDITOR_MOVE_CARET_UP).getShortcutSet().getShortcuts()));\n\n      registerCustomShortcutSet(\n        new CustomShortcutSet(shortcuts.toArray(new Shortcut[shortcuts.size()])),\n        mySearchField);\n    }","commit_id":"6181caf0177aab3b3725b6c7b199fdab15e6fb1d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public GenerationPartitioner(Collection<TemplateModule> generators) {\n    myGenerators = generators;\n    myPriorityMap = new HashMap<TemplateMappingConfiguration, Map<TemplateMappingConfiguration, PriorityData>>();\n    myCoherentMappings = new ArrayList<CoherentSetData>();\n    myConflictingRules = new HashSet<TemplateMappingPriorityRule>();\n\n    myModulesMap = new HashMap<SModuleReference, TemplateModule>(myGenerators.size());\n    myModelMap = new HashMap<SModelReference, TemplateModel>();\n    for (TemplateModule module : myGenerators) {\n      myModulesMap.put(module.getReference(), module);\n      for (TemplateModel model : module.getModels()) {\n        myModelMap.put(model.getSModelReference(), model);\n      }\n    }\n\n  }","id":52052,"modified_method":"public GenerationPartitioner(Collection<TemplateModule> generators) {\n    myGenerators = generators;\n    myPriorityMap = new PriorityMap();\n    myCoherentMappings = new ArrayList<CoherentSetData>();\n    myConflictingRules = new HashSet<TemplateMappingPriorityRule>();\n\n    myModulesMap = new HashMap<SModuleReference, TemplateModule>(myGenerators.size());\n    myModelMap = new HashMap<SModelReference, TemplateModel>();\n    for (TemplateModule module : myGenerators) {\n      myModulesMap.put(module.getReference(), module);\n      for (TemplateModel model : module.getModels()) {\n        myModelMap.put(model.getSModelReference(), model);\n      }\n    }\n\n  }","commit_id":"0d44a7f3a9978caed7fcde61714c91f558627c13","url":"https://github.com/JetBrains/MPS"},{"original_method":"private Collection<TemplateMappingConfiguration> getMappingsFromRef(MappingConfig_AbstractRef mappingRef, TemplateModule refGenerator,\n      String sourceGeneratorID) {\n    if (mappingRef instanceof MappingConfig_RefAllGlobal) {\n      return new ArrayList<TemplateMappingConfiguration>(myPriorityMap.keySet());\n    }\n\n    if (mappingRef instanceof MappingConfig_RefAllLocal) {\n      List<TemplateMappingConfiguration> mappingConf = new ArrayList<TemplateMappingConfiguration>();\n      for (TemplateModel templateModel : refGenerator.getModels()) {\n        for (TemplateMappingConfiguration n : templateModel.getConfigurations()) {\n          mappingConf.add(n);\n        }\n      }\n      return mappingConf;\n    }\n\n    if (mappingRef instanceof MappingConfig_RefSet) {\n      List<TemplateMappingConfiguration> result = new ArrayList<TemplateMappingConfiguration>();\n      MappingConfig_RefSet refSet = ((MappingConfig_RefSet) mappingRef);\n      for (MappingConfig_AbstractRef simpleRef : refSet.getMappingConfigs()) {\n        result.addAll(getMappingsFromRef(simpleRef, refGenerator, sourceGeneratorID));\n      }\n      return result;\n    }\n\n    if (mappingRef instanceof MappingConfig_ExternalRef) {\n      SModuleReference generatorRef = ((MappingConfig_ExternalRef) mappingRef).getGenerator();\n      if (generatorRef != null) {\n        SModuleReference genRef = generatorRef;\n        TemplateModule newRefGenerator = myModulesMap.get(genRef);\n        if (newRefGenerator != null) {\n          return getMappingsFromRef(((MappingConfig_ExternalRef) mappingRef).getMappingConfig(), newRefGenerator, sourceGeneratorID);\n        } else {\n          // generator is not in the plan - just ignore\n          // LOG.error(\"couldn't get generator by uid: '\" + genRef + \"'\");\n        }\n      }\n      return Collections.emptyList();\n    }\n\n    if (mappingRef instanceof MappingConfig_SimpleRef) {\n      String modelUID = ((MappingConfig_SimpleRef) mappingRef).getModelUID();\n      String nodeID = ((MappingConfig_SimpleRef) mappingRef).getNodeID();\n      if (modelUID != null && nodeID != null) {\n        SModelReference reference = PersistenceFacade.getInstance().createModelReference(modelUID);\n        TemplateModel refModel = myModelMap.get(reference);\n\n        if (refModel != null) {\n          if (nodeID.equals(\"*\")) {\n            return refModel.getConfigurations();\n          } else {\n            SNodeReference node = new jetbrains.mps.smodel.SNodePointer(reference, PersistenceFacade.getInstance().createNodeId(nodeID));\n            for (TemplateMappingConfiguration m : refModel.getConfigurations()) {\n              if (node != null && node.equals(m.getMappingNode())) {\n                return Collections.singletonList(m);\n              }\n            }\n            LOG.warn(\n                \"couldn't get node by id: '\" + nodeID + \"' in model \" + modelUID + \" while loading priority rules for generator: \" + sourceGeneratorID);\n          }\n        } else {\n          LOG.warn(\n              \"couldn't get model by uid: '\" + modelUID + \"' in generator \" + refGenerator.getAlias() + \" while loading priority rules for generator: \" + sourceGeneratorID);\n        }\n      }\n      return Collections.emptyList();\n    }\n\n    return Collections.emptyList();\n  }","id":52053,"modified_method":"private Collection<TemplateMappingConfiguration> getMappingsFromRef(MappingConfig_AbstractRef mappingRef, TemplateModule refGenerator,\n      String sourceGeneratorID) {\n    if (mappingRef instanceof MappingConfig_RefAllGlobal) {\n      return new ArrayList<TemplateMappingConfiguration>(myPriorityMap.keys());\n    }\n\n    if (mappingRef instanceof MappingConfig_RefAllLocal) {\n      List<TemplateMappingConfiguration> mappingConf = new ArrayList<TemplateMappingConfiguration>();\n      for (TemplateModel templateModel : refGenerator.getModels()) {\n        for (TemplateMappingConfiguration n : templateModel.getConfigurations()) {\n          mappingConf.add(n);\n        }\n      }\n      return mappingConf;\n    }\n\n    if (mappingRef instanceof MappingConfig_RefSet) {\n      List<TemplateMappingConfiguration> result = new ArrayList<TemplateMappingConfiguration>();\n      MappingConfig_RefSet refSet = ((MappingConfig_RefSet) mappingRef);\n      for (MappingConfig_AbstractRef simpleRef : refSet.getMappingConfigs()) {\n        result.addAll(getMappingsFromRef(simpleRef, refGenerator, sourceGeneratorID));\n      }\n      return result;\n    }\n\n    if (mappingRef instanceof MappingConfig_ExternalRef) {\n      SModuleReference generatorRef = ((MappingConfig_ExternalRef) mappingRef).getGenerator();\n      if (generatorRef != null) {\n        SModuleReference genRef = generatorRef;\n        TemplateModule newRefGenerator = myModulesMap.get(genRef);\n        if (newRefGenerator != null) {\n          return getMappingsFromRef(((MappingConfig_ExternalRef) mappingRef).getMappingConfig(), newRefGenerator, sourceGeneratorID);\n        } else {\n          // generator is not in the plan - just ignore\n          // LOG.error(\"couldn't get generator by uid: '\" + genRef + \"'\");\n        }\n      }\n      return Collections.emptyList();\n    }\n\n    if (mappingRef instanceof MappingConfig_SimpleRef) {\n      String modelUID = ((MappingConfig_SimpleRef) mappingRef).getModelUID();\n      String nodeID = ((MappingConfig_SimpleRef) mappingRef).getNodeID();\n      if (modelUID != null && nodeID != null) {\n        SModelReference reference = PersistenceFacade.getInstance().createModelReference(modelUID);\n        TemplateModel refModel = myModelMap.get(reference);\n\n        if (refModel != null) {\n          if (nodeID.equals(\"*\")) {\n            return refModel.getConfigurations();\n          } else {\n            SNodeReference node = new jetbrains.mps.smodel.SNodePointer(reference, PersistenceFacade.getInstance().createNodeId(nodeID));\n            for (TemplateMappingConfiguration m : refModel.getConfigurations()) {\n              if (node != null && node.equals(m.getMappingNode())) {\n                return Collections.singletonList(m);\n              }\n            }\n            LOG.warn(\n                \"couldn't get node by id: '\" + nodeID + \"' in model \" + modelUID + \" while loading priority rules for generator: \" + sourceGeneratorID);\n          }\n        } else {\n          LOG.warn(\n              \"couldn't get model by uid: '\" + modelUID + \"' in generator \" + refGenerator.getAlias() + \" while loading priority rules for generator: \" + sourceGeneratorID);\n        }\n      }\n      return Collections.emptyList();\n    }\n\n    return Collections.emptyList();\n  }","commit_id":"0d44a7f3a9978caed7fcde61714c91f558627c13","url":"https://github.com/JetBrains/MPS"},{"original_method":"public List<List<TemplateMappingConfiguration>> createMappingSets() {\n    for (TemplateModule generator : myGenerators) {\n      for (TemplateModel model : generator.getModels()) {\n        for (TemplateMappingConfiguration m : model.getConfigurations()) {\n          myPriorityMap.put(m, new HashMap<TemplateMappingConfiguration, PriorityData>());\n        }\n      }\n    }\n\n    // get priority mapping rules from generators and build 'priority map'\n    loadRules();\n\n    // solve\n    return new PartitioningSolver(myPriorityMap, myCoherentMappings, myConflictingRules).solve();\n  }","id":52054,"modified_method":"public List<List<TemplateMappingConfiguration>> createMappingSets() {\n    for (TemplateModule generator : myGenerators) {\n      for (TemplateModel model : generator.getModels()) {\n        myPriorityMap.prepare(model.getConfigurations());\n      }\n    }\n\n    // get priority mapping rules from generators and build 'priority map'\n    loadRules();\n\n    // solve\n    return new PartitioningSolver(myPriorityMap, myCoherentMappings, myConflictingRules).solve();\n  }","commit_id":"0d44a7f3a9978caed7fcde61714c91f558627c13","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void processRule(MappingPriorityRule rule, TemplateModule generator) {\n    MappingConfig_AbstractRef left = rule.getLeft();\n    MappingConfig_AbstractRef right = rule.getRight();\n    if (left == null || right == null) return;\n\n    Collection<TemplateMappingConfiguration> hiPrio = getMappingsFromRef(left, generator, generator.getAlias());\n    Collection<TemplateMappingConfiguration> loPrio = getMappingsFromRef(right, generator, generator.getAlias());\n    if (rule.getType() == RuleType.STRICTLY_TOGETHER) {\n      Set<TemplateMappingConfiguration> coherentMappings = new HashSet<TemplateMappingConfiguration>(loPrio);\n      coherentMappings.addAll(hiPrio);\n      myCoherentMappings.add(new CoherentSetData(coherentMappings, rule));\n\n    } else {\n\n      // swap\n      if (rule.getType() == RuleType.STRICTLY_AFTER || rule.getType() == RuleType.AFTER_OR_TOGETHER) {\n        Collection<TemplateMappingConfiguration> temp = hiPrio;\n        hiPrio = loPrio;\n        loPrio = temp;\n      }\n\n      // map: lo-pri mapping -> {hi-pri mapping, .... , hi-pri mapping }\n      loPrio = CollectionUtil.subtract(loPrio, hiPrio);\n      boolean isStrict = rule.getType() == RuleType.STRICTLY_BEFORE || rule.getType() == RuleType.STRICTLY_AFTER;\n\n      for (TemplateMappingConfiguration lesserPriMapping : loPrio) {\n        Map<TemplateMappingConfiguration, PriorityData> grtPriMappingsFromMap = myPriorityMap.get(lesserPriMapping);\n\n        for (TemplateMappingConfiguration grtPriMapping : hiPrio) {\n          if (!grtPriMappingsFromMap.containsKey(grtPriMapping)) {\n            grtPriMappingsFromMap.put(grtPriMapping, new PriorityData(isStrict, rule));\n          } else {\n            PriorityData priorityData = grtPriMappingsFromMap.get(grtPriMapping);\n            if (isStrict) priorityData.myStrict = true;\n            priorityData.myCauseRules.add(rule);\n          }\n        }\n      }\n    }\n  }","id":52055,"modified_method":"private void processRule(MappingPriorityRule rule, TemplateModule generator) {\n    MappingConfig_AbstractRef left = rule.getLeft();\n    MappingConfig_AbstractRef right = rule.getRight();\n    if (left == null || right == null) return;\n\n    Collection<TemplateMappingConfiguration> hiPrio = getMappingsFromRef(left, generator, generator.getAlias());\n    Collection<TemplateMappingConfiguration> loPrio = getMappingsFromRef(right, generator, generator.getAlias());\n    if (rule.getType() == RuleType.STRICTLY_TOGETHER) {\n      Set<TemplateMappingConfiguration> coherentMappings = new HashSet<TemplateMappingConfiguration>(loPrio);\n      coherentMappings.addAll(hiPrio);\n      myCoherentMappings.add(new CoherentSetData(coherentMappings, rule));\n\n    } else {\n\n      // swap\n      if (rule.getType() == RuleType.STRICTLY_AFTER || rule.getType() == RuleType.AFTER_OR_TOGETHER) {\n        Collection<TemplateMappingConfiguration> temp = hiPrio;\n        hiPrio = loPrio;\n        loPrio = temp;\n      }\n\n      // map: lo-pri mapping -> {hi-pri mapping, .... , hi-pri mapping }\n      loPrio = CollectionUtil.subtract(loPrio, hiPrio);\n      boolean isStrict = rule.getType() == RuleType.STRICTLY_BEFORE || rule.getType() == RuleType.STRICTLY_AFTER;\n\n      for (TemplateMappingConfiguration lesserPriMapping : loPrio) {\n        for (TemplateMappingConfiguration grtPriMapping : hiPrio) {\n          PriorityData priorityData = myPriorityMap.priorityData(lesserPriMapping, grtPriMapping);\n          if (priorityData == null) {\n            myPriorityMap.put(lesserPriMapping, grtPriMapping, new PriorityData(isStrict, rule));\n          } else {\n            if (isStrict) priorityData.myStrict = true;\n            priorityData.myCauseRules.add(rule);\n          }\n        }\n      }\n    }\n  }","commit_id":"0d44a7f3a9978caed7fcde61714c91f558627c13","url":"https://github.com/JetBrains/MPS"},{"original_method":"List<List<TemplateMappingConfiguration>> solve() {\n    // early error detection\n    for (TemplateMappingConfiguration mapping : myPriorityMap.keySet()) {\n      checkSelfLocking(mapping);\n    }\n\n    // process coherent mappings\n    PriorityMapUtil.joinIntersectingCoherentMappings(myCoherentMappings);\n    PriorityMapUtil.makeLockedByAllCoherentIfLockedByOne(myCoherentMappings, myPriorityMap);\n    PriorityMapUtil.makeLocksEqualsForCoherentMappings(myCoherentMappings, myPriorityMap, myConflictingRules);\n\n    // remove 'weak' priorities\n    boolean need_more_passes = true;\n    while (need_more_passes) {\n      need_more_passes = false;\n      iterate_all_mappings:\n      for (TemplateMappingConfiguration lockedMapping : myPriorityMap.keySet()) {\n        while (true) {\n          List<TemplateMappingConfiguration> weakLockMappings = PriorityMapUtil.getWeakLockMappingsForLockedMapping(lockedMapping, myPriorityMap);\n          if (weakLockMappings.isEmpty()) break;\n          for (TemplateMappingConfiguration weakLockMapping : weakLockMappings) {\n            // remove 'weak' dependency but don't allow locked-lockedMapping to go before weak-lock lockedMapping\n            PriorityMapUtil.replaceWeakLock(lockedMapping, weakLockMapping, myPriorityMap);\n            checkSelfLocking(lockedMapping);\n//          // if locked-mapping is strict lock for other mappings,\n//          // then weak-lock-mapping should be strict lock for them as well.\n//          List<TemplateMappingConfiguration> lockedMappings_1 = PriorityMapUtil.getStrictLockedMappingsForLockMapping(lockedMapping, myPriorityMap);\n//          for (TemplateMappingConfiguration lockedMapping_1 : lockedMappings_1) {\n//            Map<TemplateMappingConfiguration, PriorityData> locks_1 = myPriorityMap.get(lockedMapping_1);\n//            PriorityData priorityDataToApply = locks_1.get(lockedMapping);\n//            PriorityMapUtil.addLock(lockedMapping_1, weakLockMapping, priorityDataToApply, myPriorityMap);\n//            checkSelfLocking(lockedMapping_1);\n//          }\n\n            // if locked-lockedMapping is a lock for other mappings,\n            // then weak-lock-lockedMapping should be a lock for them as well.\n            List<TemplateMappingConfiguration> lockedMappings_1 = PriorityMapUtil.getLockedMappingsForLockMapping(lockedMapping, myPriorityMap);\n            for (TemplateMappingConfiguration lockedMapping_1 : lockedMappings_1) {\n              Map<TemplateMappingConfiguration, PriorityData> locks_1 = myPriorityMap.get(lockedMapping_1);\n              PriorityData priorityDataToApply = locks_1.get(lockedMapping);\n              boolean newLockAdded = PriorityMapUtil.addLock(lockedMapping_1, weakLockMapping, priorityDataToApply, myPriorityMap);\n              checkSelfLocking(lockedMapping_1);\n              if (newLockAdded) {\n                // if new lock is a weak lock, then better start all over again (weak locks cleaning)\n                PriorityData priorityData = myPriorityMap.get(lockedMapping_1).get(weakLockMapping);\n                // checkSelfLocking may removed it, check if not null\n                if (priorityData != null && priorityData.isWeak()) {\n                  need_more_passes = true;\n                  break iterate_all_mappings;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    // paranoid check\n    for (Map<TemplateMappingConfiguration, PriorityData> locks : myPriorityMap.values()) {\n      for (PriorityData priorityData : locks.values()) {\n        if (!priorityData.isStrict()) {\n          throw new RuntimeException(\"Unexpected weak priority\");\n        }\n      }\n    }\n\n    // create mappings partitioning\n    List<List<TemplateMappingConfiguration>> mappingSets = createMappingSets();\n    // if the priority map is still not empty, then there are some conflicting rules\n    for (Map<TemplateMappingConfiguration, PriorityData> grtPriMappings : myPriorityMap.values()) {\n      for (PriorityData priorityData : grtPriMappings.values()) {\n        myConflictingRules.addAll(priorityData.myCauseRules);\n      }\n    }\n    return mappingSets;\n  }","id":52056,"modified_method":"List<List<TemplateMappingConfiguration>> solve() {\n    // early error detection\n    for (TemplateMappingConfiguration mapping : myPriorityMap.keys()) {\n      checkSelfLocking(mapping);\n    }\n\n    // process coherent mappings\n    PriorityMapUtil.joinIntersectingCoherentMappings(myCoherentMappings);\n    myPriorityMap.makeLockedByAllCoherentIfLockedByOne(myCoherentMappings);\n    myPriorityMap.makeLocksEqualsForCoherentMappings(myCoherentMappings, myConflictingRules);\n\n    // remove 'weak' priorities\n    boolean need_more_passes = true;\n    while (need_more_passes) {\n      need_more_passes = false;\n      iterate_all_mappings:\n      for (TemplateMappingConfiguration lockedMapping : myPriorityMap.keys()) {\n        while (true) {\n          List<TemplateMappingConfiguration> weakLockMappings = myPriorityMap.getWeakLockMappingsForLockedMapping(lockedMapping);\n          if (weakLockMappings.isEmpty()) break;\n          for (TemplateMappingConfiguration weakLockMapping : weakLockMappings) {\n            // remove 'weak' dependency but don't allow locked-lockedMapping to go before weak-lock lockedMapping\n            myPriorityMap.replaceWeakLock(lockedMapping, weakLockMapping);\n            checkSelfLocking(lockedMapping);\n//          // if locked-mapping is strict lock for other mappings,\n//          // then weak-lock-mapping should be strict lock for them as well.\n//          List<TemplateMappingConfiguration> lockedMappings_1 = PriorityMapUtil.getStrictLockedMappingsForLockMapping(lockedMapping, myPriorityMap);\n//          for (TemplateMappingConfiguration lockedMapping_1 : lockedMappings_1) {\n//            Map<TemplateMappingConfiguration, PriorityData> locks_1 = myPriorityMap.get(lockedMapping_1);\n//            PriorityData priorityDataToApply = locks_1.get(lockedMapping);\n//            PriorityMapUtil.addLock(lockedMapping_1, weakLockMapping, priorityDataToApply, myPriorityMap);\n//            checkSelfLocking(lockedMapping_1);\n//          }\n\n            // if locked-lockedMapping is a lock for other mappings,\n            // then weak-lock-lockedMapping should be a lock for them as well.\n            List<TemplateMappingConfiguration> lockedMappings_1 = myPriorityMap.getLockedMappingsForLockMapping(lockedMapping);\n            for (TemplateMappingConfiguration lockedMapping_1 : lockedMappings_1) {\n              PriorityData priorityDataToApply = myPriorityMap.priorityData(lockedMapping_1, lockedMapping);\n              boolean newLockAdded = myPriorityMap.addLock(lockedMapping_1, weakLockMapping, priorityDataToApply);\n              checkSelfLocking(lockedMapping_1);\n              if (newLockAdded) {\n                // if new lock is a weak lock, then better start all over again (weak locks cleaning)\n                PriorityData priorityData = myPriorityMap.priorityData(lockedMapping_1, weakLockMapping);\n                // checkSelfLocking may removed it, check if not null\n                if (priorityData != null && priorityData.isWeak()) {\n                  need_more_passes = true;\n                  break iterate_all_mappings;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    // paranoid check\n    for (PriorityData priorityData : myPriorityMap.priorityData()) {\n      if (!priorityData.isStrict()) {\n        throw new RuntimeException(\"Unexpected weak priority\");\n      }\n    }\n\n    // create mappings partitioning\n    List<List<TemplateMappingConfiguration>> mappingSets = createMappingSets();\n    // if the priority map is still not empty, then there are some conflicting rules\n    for (PriorityData priorityData : myPriorityMap.priorityData()) {\n      myConflictingRules.addAll(priorityData.myCauseRules);\n    }\n    return mappingSets;\n  }","commit_id":"0d44a7f3a9978caed7fcde61714c91f558627c13","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void checkSelfLocking(TemplateMappingConfiguration mapping) {\n    Map<TemplateMappingConfiguration, PriorityData> locks = myPriorityMap.get(mapping);\n    PriorityData priorityData = locks.get(mapping);\n    if (priorityData != null) {\n      if (priorityData.isStrict()) {\n        // error\n        myConflictingRules.addAll(priorityData.myCauseRules);\n      }\n      locks.remove(mapping);\n    }\n  }","id":52057,"modified_method":"private void checkSelfLocking(TemplateMappingConfiguration mapping) {\n    PriorityData priorityData = myPriorityMap.priorityData(mapping, mapping);\n    if (priorityData != null) {\n      if (priorityData.isStrict()) {\n        // error\n        myConflictingRules.addAll(priorityData.myCauseRules);\n      }\n      myPriorityMap.removeSelfLock(mapping);\n    }\n  }","commit_id":"0d44a7f3a9978caed7fcde61714c91f558627c13","url":"https://github.com/JetBrains/MPS"},{"original_method":"public PartitioningSolver(Map<TemplateMappingConfiguration, Map<TemplateMappingConfiguration, PriorityData>> priorityMap, List<CoherentSetData> coherentMappings, Set<TemplateMappingPriorityRule> conflictingRules) {\n    myPriorityMap = priorityMap;\n    myCoherentMappings = coherentMappings;\n    myConflictingRules = conflictingRules;\n  }","id":52058,"modified_method":"public PartitioningSolver(PriorityMap priorityMap, List<CoherentSetData> coherentMappings, Set<TemplateMappingPriorityRule> conflictingRules) {\n    myPriorityMap = priorityMap;\n    myCoherentMappings = coherentMappings;\n    myConflictingRules = conflictingRules;\n  }","commit_id":"0d44a7f3a9978caed7fcde61714c91f558627c13","url":"https://github.com/JetBrains/MPS"},{"original_method":"private List<TemplateMappingConfiguration> createMappingSet(boolean topPriorityGroup) {\n    // add all not-locking-mappinds to set\n    List<TemplateMappingConfiguration> mappingSet = new ArrayList<TemplateMappingConfiguration>();\n    for (TemplateMappingConfiguration mapping : myPriorityMap.keySet()) {\n      if (mapping.isTopPriority() != topPriorityGroup) continue;\n      if (!PriorityMapUtil.isLockingMapping(mapping, myPriorityMap)) {\n        mappingSet.add(mapping);\n      }\n    }\n    for (TemplateMappingConfiguration mapping : mappingSet) {\n      myPriorityMap.remove(mapping);\n    }\n    return mappingSet;\n  }","id":52059,"modified_method":"private List<TemplateMappingConfiguration> createMappingSet(boolean topPriorityGroup) {\n    // add all not-locking-mappinds to set\n    List<TemplateMappingConfiguration> mappingSet = new ArrayList<TemplateMappingConfiguration>();\n    for (TemplateMappingConfiguration mapping : myPriorityMap.keys()) {\n      if (mapping.isTopPriority() != topPriorityGroup) continue;\n      if (!myPriorityMap.isLockingMapping(mapping)) {\n        mappingSet.add(mapping);\n      }\n    }\n    myPriorityMap.removeKeys(mappingSet);\n    return mappingSet;\n  }","commit_id":"0d44a7f3a9978caed7fcde61714c91f558627c13","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void joinIntersectingCoherentMappings(List<CoherentSetData> coherentMappings) {\n    Map<TemplateMappingConfiguration, CoherentSetData> myMappingToSet = new HashMap<TemplateMappingConfiguration, CoherentSetData>();\n    boolean executeOneMore = true;\n\n    outer:\n    while(executeOneMore) {\n      executeOneMore = false;\n      myMappingToSet.clear();\n      for(CoherentSetData data : coherentMappings) {\n        for (TemplateMappingConfiguration mapping : data.myMappings) {\n          CoherentSetData original = myMappingToSet.get(mapping);\n          if(original != null && original != data) {\n            // merge sets\n            original.myMappings.addAll(data.myMappings);\n            original.myCauseRules.addAll(data.myCauseRules);\n            coherentMappings.remove(data);\n            executeOneMore = true;\n            continue outer;\n          }\n          myMappingToSet.put(mapping, data);\n        }\n      }\n    }\n  }","id":52060,"modified_method":"public static void joinIntersectingCoherentMappings(List<CoherentSetData> coherentMappings) {\n    Map<TemplateMappingConfiguration, CoherentSetData> myMappingToSet = new HashMap<TemplateMappingConfiguration, CoherentSetData>();\n    boolean executeOneMore = true;\n\n    outer:\n    while(executeOneMore) {\n      executeOneMore = false;\n      myMappingToSet.clear();\n      for(CoherentSetData data : coherentMappings) {\n        for (TemplateMappingConfiguration mapping : data.myMappings) {\n          CoherentSetData original = myMappingToSet.get(mapping);\n          if(original != null && original != data) {\n            // merge sets\n            original.merge(data);\n            coherentMappings.remove(data);\n            executeOneMore = true;\n            continue outer;\n          }\n          myMappingToSet.put(mapping, data);\n        }\n      }\n    }\n  }","commit_id":"0d44a7f3a9978caed7fcde61714c91f558627c13","url":"https://github.com/JetBrains/MPS"},{"original_method":"private Collection<TemplateMappingConfiguration> getMappingsFromRef(MappingConfig_AbstractRef mappingRef, TemplateModule refGenerator,\n      String sourceGeneratorID) {\n    if (mappingRef instanceof MappingConfig_RefAllGlobal) {\n      return new ArrayList<TemplateMappingConfiguration>(myPriorityMap.keySet());\n    }\n\n    if (mappingRef instanceof MappingConfig_RefAllLocal) {\n      List<TemplateMappingConfiguration> mappingConf = new ArrayList<TemplateMappingConfiguration>();\n      for (TemplateModel templateModel : refGenerator.getModels()) {\n        for (TemplateMappingConfiguration n : templateModel.getConfigurations()) {\n          mappingConf.add(n);\n        }\n      }\n      return mappingConf;\n    }\n\n    if (mappingRef instanceof MappingConfig_RefSet) {\n      List<TemplateMappingConfiguration> result = new ArrayList<TemplateMappingConfiguration>();\n      MappingConfig_RefSet refSet = ((MappingConfig_RefSet) mappingRef);\n      for (MappingConfig_AbstractRef simpleRef : refSet.getMappingConfigs()) {\n        result.addAll(getMappingsFromRef(simpleRef, refGenerator, sourceGeneratorID));\n      }\n      return result;\n    }\n\n    if (mappingRef instanceof MappingConfig_ExternalRef) {\n      SModuleReference generatorRef = ((MappingConfig_ExternalRef) mappingRef).getGenerator();\n      if (generatorRef != null) {\n        SModuleReference genRef = generatorRef;\n        TemplateModule newRefGenerator = myModulesMap.get(genRef);\n        if (newRefGenerator != null) {\n          return getMappingsFromRef(((MappingConfig_ExternalRef) mappingRef).getMappingConfig(), newRefGenerator, sourceGeneratorID);\n        } else {\n          // generator is not in the plan - just ignore\n          // LOG.error(\"couldn't get generator by uid: '\" + genRef + \"'\");\n        }\n      }\n      return Collections.emptyList();\n    }\n\n    if (mappingRef instanceof MappingConfig_SimpleRef) {\n      String modelUID = ((MappingConfig_SimpleRef) mappingRef).getModelUID();\n      String nodeID = ((MappingConfig_SimpleRef) mappingRef).getNodeID();\n      if (modelUID != null && nodeID != null) {\n        SModelReference reference = PersistenceFacade.getInstance().createModelReference(modelUID);\n        TemplateModel refModel = myModelMap.get(reference);\n\n        if (refModel != null) {\n          if (nodeID.equals(\"*\")) {\n            return refModel.getConfigurations();\n          } else {\n            SNodeReference node = new jetbrains.mps.smodel.SNodePointer(reference, PersistenceFacade.getInstance().createNodeId(nodeID));\n            for (TemplateMappingConfiguration m : refModel.getConfigurations()) {\n              if (node != null && node.equals(m.getMappingNode())) {\n                return Collections.singletonList(m);\n              }\n            }\n            LOG.warn(\n                \"couldn't get node by id: '\" + nodeID + \"' in model \" + modelUID + \" while loading priority rules for generator: \" + sourceGeneratorID);\n          }\n        } else {\n          LOG.warn(\n              \"couldn't get model by uid: '\" + modelUID + \"' in generator \" + refGenerator.getAlias() + \" while loading priority rules for generator: \" + sourceGeneratorID);\n        }\n      }\n      return Collections.emptyList();\n    }\n\n    return Collections.emptyList();\n  }","id":52061,"modified_method":"private Collection<TemplateMappingConfiguration> getMappingsFromRef(MappingConfig_AbstractRef mappingRef, TemplateModule refGenerator,\n      String sourceGeneratorID) {\n    if (mappingRef instanceof MappingConfig_RefAllGlobal) {\n      return new ArrayList<TemplateMappingConfiguration>(myPriorityMap.keys());\n    }\n\n    if (mappingRef instanceof MappingConfig_RefAllLocal) {\n      List<TemplateMappingConfiguration> mappingConf = new ArrayList<TemplateMappingConfiguration>();\n      for (TemplateModel templateModel : refGenerator.getModels()) {\n        for (TemplateMappingConfiguration n : templateModel.getConfigurations()) {\n          mappingConf.add(n);\n        }\n      }\n      return mappingConf;\n    }\n\n    if (mappingRef instanceof MappingConfig_RefSet) {\n      List<TemplateMappingConfiguration> result = new ArrayList<TemplateMappingConfiguration>();\n      MappingConfig_RefSet refSet = ((MappingConfig_RefSet) mappingRef);\n      for (MappingConfig_AbstractRef simpleRef : refSet.getMappingConfigs()) {\n        result.addAll(getMappingsFromRef(simpleRef, refGenerator, sourceGeneratorID));\n      }\n      return result;\n    }\n\n    if (mappingRef instanceof MappingConfig_ExternalRef) {\n      SModuleReference generatorRef = ((MappingConfig_ExternalRef) mappingRef).getGenerator();\n      if (generatorRef != null) {\n        SModuleReference genRef = generatorRef;\n        TemplateModule newRefGenerator = myModulesMap.get(genRef);\n        if (newRefGenerator != null) {\n          return getMappingsFromRef(((MappingConfig_ExternalRef) mappingRef).getMappingConfig(), newRefGenerator, sourceGeneratorID);\n        } else {\n          // generator is not in the plan - just ignore\n          // LOG.error(\"couldn't get generator by uid: '\" + genRef + \"'\");\n        }\n      }\n      return Collections.emptyList();\n    }\n\n    if (mappingRef instanceof MappingConfig_SimpleRef) {\n      String modelUID = ((MappingConfig_SimpleRef) mappingRef).getModelUID();\n      String nodeID = ((MappingConfig_SimpleRef) mappingRef).getNodeID();\n      if (modelUID != null && nodeID != null) {\n        SModelReference reference = PersistenceFacade.getInstance().createModelReference(modelUID);\n        TemplateModel refModel = myModelMap.get(reference);\n\n        if (refModel != null) {\n          if (nodeID.equals(\"*\")) {\n            return refModel.getConfigurations();\n          } else {\n            SNodeReference node = new jetbrains.mps.smodel.SNodePointer(reference, PersistenceFacade.getInstance().createNodeId(nodeID));\n            for (TemplateMappingConfiguration m : refModel.getConfigurations()) {\n              if (node != null && node.equals(m.getMappingNode())) {\n                return Collections.singletonList(m);\n              }\n            }\n            LOG.warn(\n                \"couldn't get node by id: '\" + nodeID + \"' in model \" + modelUID + \" while loading priority rules for generator: \" + sourceGeneratorID);\n          }\n        } else {\n          LOG.warn(\n              \"couldn't get model by uid: '\" + modelUID + \"' in generator \" + refGenerator.getAlias() + \" while loading priority rules for generator: \" + sourceGeneratorID);\n        }\n      }\n      return Collections.emptyList();\n    }\n\n    return Collections.emptyList();\n  }","commit_id":"be7ea305c211116e0606c8dfe87b1ae1ca3f40a6","url":"https://github.com/JetBrains/MPS"},{"original_method":"public List<List<TemplateMappingConfiguration>> createMappingSets() {\n    for (TemplateModule generator : myGenerators) {\n      for (TemplateModel model : generator.getModels()) {\n        for (TemplateMappingConfiguration m : model.getConfigurations()) {\n          myPriorityMap.put(m, new HashMap<TemplateMappingConfiguration, PriorityData>());\n        }\n      }\n    }\n\n    // get priority mapping rules from generators and build 'priority map'\n    loadRules();\n\n    // solve\n    return new PartitioningSolver(myPriorityMap, myCoherentMappings, myConflictingRules).solve();\n  }","id":52062,"modified_method":"public List<List<TemplateMappingConfiguration>> createMappingSets() {\n    for (TemplateModule generator : myGenerators) {\n      for (TemplateModel model : generator.getModels()) {\n        myPriorityMap.prepare(model.getConfigurations());\n      }\n    }\n\n    // get priority mapping rules from generators and build 'priority map'\n    loadRules();\n\n    // solve\n    return new PartitioningSolver(myPriorityMap, myCoherentMappings, myConflictingRules).solve();\n  }","commit_id":"be7ea305c211116e0606c8dfe87b1ae1ca3f40a6","url":"https://github.com/JetBrains/MPS"},{"original_method":"public GenerationPartitioner(Collection<TemplateModule> generators) {\n    myGenerators = generators;\n    myPriorityMap = new HashMap<TemplateMappingConfiguration, Map<TemplateMappingConfiguration, PriorityData>>();\n    myCoherentMappings = new ArrayList<CoherentSetData>();\n    myConflictingRules = new HashSet<TemplateMappingPriorityRule>();\n\n    myModulesMap = new HashMap<SModuleReference, TemplateModule>(myGenerators.size());\n    myModelMap = new HashMap<SModelReference, TemplateModel>();\n    for (TemplateModule module : myGenerators) {\n      myModulesMap.put(module.getReference(), module);\n      for (TemplateModel model : module.getModels()) {\n        myModelMap.put(model.getSModelReference(), model);\n      }\n    }\n\n  }","id":52063,"modified_method":"public GenerationPartitioner(Collection<TemplateModule> generators) {\n    myGenerators = generators;\n    myPriorityMap = new PriorityMap();\n    myCoherentMappings = new ArrayList<CoherentSetData>();\n    myConflictingRules = new HashSet<TemplateMappingPriorityRule>();\n\n    myModulesMap = new HashMap<SModuleReference, TemplateModule>(myGenerators.size());\n    myModelMap = new HashMap<SModelReference, TemplateModel>();\n    for (TemplateModule module : myGenerators) {\n      myModulesMap.put(module.getReference(), module);\n      for (TemplateModel model : module.getModels()) {\n        myModelMap.put(model.getSModelReference(), model);\n      }\n    }\n\n  }","commit_id":"be7ea305c211116e0606c8dfe87b1ae1ca3f40a6","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void processRule(MappingPriorityRule rule, TemplateModule generator) {\n    MappingConfig_AbstractRef left = rule.getLeft();\n    MappingConfig_AbstractRef right = rule.getRight();\n    if (left == null || right == null) return;\n\n    Collection<TemplateMappingConfiguration> hiPrio = getMappingsFromRef(left, generator, generator.getAlias());\n    Collection<TemplateMappingConfiguration> loPrio = getMappingsFromRef(right, generator, generator.getAlias());\n    if (rule.getType() == RuleType.STRICTLY_TOGETHER) {\n      Set<TemplateMappingConfiguration> coherentMappings = new HashSet<TemplateMappingConfiguration>(loPrio);\n      coherentMappings.addAll(hiPrio);\n      myCoherentMappings.add(new CoherentSetData(coherentMappings, rule));\n\n    } else {\n\n      // swap\n      if (rule.getType() == RuleType.STRICTLY_AFTER || rule.getType() == RuleType.AFTER_OR_TOGETHER) {\n        Collection<TemplateMappingConfiguration> temp = hiPrio;\n        hiPrio = loPrio;\n        loPrio = temp;\n      }\n\n      // map: lo-pri mapping -> {hi-pri mapping, .... , hi-pri mapping }\n      loPrio = CollectionUtil.subtract(loPrio, hiPrio);\n      boolean isStrict = rule.getType() == RuleType.STRICTLY_BEFORE || rule.getType() == RuleType.STRICTLY_AFTER;\n\n      for (TemplateMappingConfiguration lesserPriMapping : loPrio) {\n        Map<TemplateMappingConfiguration, PriorityData> grtPriMappingsFromMap = myPriorityMap.get(lesserPriMapping);\n\n        for (TemplateMappingConfiguration grtPriMapping : hiPrio) {\n          if (!grtPriMappingsFromMap.containsKey(grtPriMapping)) {\n            grtPriMappingsFromMap.put(grtPriMapping, new PriorityData(isStrict, rule));\n          } else {\n            PriorityData priorityData = grtPriMappingsFromMap.get(grtPriMapping);\n            if (isStrict) priorityData.myStrict = true;\n            priorityData.myCauseRules.add(rule);\n          }\n        }\n      }\n    }\n  }","id":52064,"modified_method":"private void processRule(MappingPriorityRule rule, TemplateModule generator) {\n    MappingConfig_AbstractRef left = rule.getLeft();\n    MappingConfig_AbstractRef right = rule.getRight();\n    if (left == null || right == null) return;\n\n    Collection<TemplateMappingConfiguration> hiPrio = getMappingsFromRef(left, generator, generator.getAlias());\n    Collection<TemplateMappingConfiguration> loPrio = getMappingsFromRef(right, generator, generator.getAlias());\n    if (rule.getType() == RuleType.STRICTLY_TOGETHER) {\n      Set<TemplateMappingConfiguration> coherentMappings = new HashSet<TemplateMappingConfiguration>(loPrio);\n      coherentMappings.addAll(hiPrio);\n      myCoherentMappings.add(new CoherentSetData(coherentMappings, rule));\n\n    } else {\n\n      // swap\n      if (rule.getType() == RuleType.STRICTLY_AFTER || rule.getType() == RuleType.AFTER_OR_TOGETHER) {\n        Collection<TemplateMappingConfiguration> temp = hiPrio;\n        hiPrio = loPrio;\n        loPrio = temp;\n      }\n\n      // map: lo-pri mapping -> {hi-pri mapping, .... , hi-pri mapping }\n      loPrio = CollectionUtil.subtract(loPrio, hiPrio);\n      boolean isStrict = rule.getType() == RuleType.STRICTLY_BEFORE || rule.getType() == RuleType.STRICTLY_AFTER;\n\n      for (TemplateMappingConfiguration lesserPriMapping : loPrio) {\n        for (TemplateMappingConfiguration grtPriMapping : hiPrio) {\n          PriorityData priorityData = myPriorityMap.priorityData(lesserPriMapping, grtPriMapping);\n          if (priorityData == null) {\n            myPriorityMap.put(lesserPriMapping, grtPriMapping, new PriorityData(isStrict, rule));\n          } else {\n            if (isStrict) priorityData.myStrict = true;\n            priorityData.myCauseRules.add(rule);\n          }\n        }\n      }\n    }\n  }","commit_id":"be7ea305c211116e0606c8dfe87b1ae1ca3f40a6","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void checkSelfLocking(TemplateMappingConfiguration mapping) {\n    Map<TemplateMappingConfiguration, PriorityData> locks = myPriorityMap.get(mapping);\n    PriorityData priorityData = locks.get(mapping);\n    if (priorityData != null) {\n      if (priorityData.isStrict()) {\n        // error\n        myConflictingRules.addAll(priorityData.myCauseRules);\n      }\n      locks.remove(mapping);\n    }\n  }","id":52065,"modified_method":"private void checkSelfLocking(TemplateMappingConfiguration mapping) {\n    PriorityData priorityData = myPriorityMap.priorityData(mapping, mapping);\n    if (priorityData != null) {\n      if (priorityData.isStrict()) {\n        // error\n        myConflictingRules.addAll(priorityData.myCauseRules);\n      }\n      myPriorityMap.removeSelfLock(mapping);\n    }\n  }","commit_id":"be7ea305c211116e0606c8dfe87b1ae1ca3f40a6","url":"https://github.com/JetBrains/MPS"},{"original_method":"List<List<TemplateMappingConfiguration>> solve() {\n    // early error detection\n    for (TemplateMappingConfiguration mapping : myPriorityMap.keySet()) {\n      checkSelfLocking(mapping);\n    }\n\n    // process coherent mappings\n    PriorityMapUtil.joinIntersectingCoherentMappings(myCoherentMappings);\n    PriorityMapUtil.makeLockedByAllCoherentIfLockedByOne(myCoherentMappings, myPriorityMap);\n    PriorityMapUtil.makeLocksEqualsForCoherentMappings(myCoherentMappings, myPriorityMap, myConflictingRules);\n\n    // remove 'weak' priorities\n    boolean need_more_passes = true;\n    while (need_more_passes) {\n      need_more_passes = false;\n      iterate_all_mappings:\n      for (TemplateMappingConfiguration lockedMapping : myPriorityMap.keySet()) {\n        while (true) {\n          List<TemplateMappingConfiguration> weakLockMappings = PriorityMapUtil.getWeakLockMappingsForLockedMapping(lockedMapping, myPriorityMap);\n          if (weakLockMappings.isEmpty()) break;\n          for (TemplateMappingConfiguration weakLockMapping : weakLockMappings) {\n            // remove 'weak' dependency but don't allow locked-lockedMapping to go before weak-lock lockedMapping\n            PriorityMapUtil.replaceWeakLock(lockedMapping, weakLockMapping, myPriorityMap);\n            checkSelfLocking(lockedMapping);\n//          // if locked-mapping is strict lock for other mappings,\n//          // then weak-lock-mapping should be strict lock for them as well.\n//          List<TemplateMappingConfiguration> lockedMappings_1 = PriorityMapUtil.getStrictLockedMappingsForLockMapping(lockedMapping, myPriorityMap);\n//          for (TemplateMappingConfiguration lockedMapping_1 : lockedMappings_1) {\n//            Map<TemplateMappingConfiguration, PriorityData> locks_1 = myPriorityMap.get(lockedMapping_1);\n//            PriorityData priorityDataToApply = locks_1.get(lockedMapping);\n//            PriorityMapUtil.addLock(lockedMapping_1, weakLockMapping, priorityDataToApply, myPriorityMap);\n//            checkSelfLocking(lockedMapping_1);\n//          }\n\n            // if locked-lockedMapping is a lock for other mappings,\n            // then weak-lock-lockedMapping should be a lock for them as well.\n            List<TemplateMappingConfiguration> lockedMappings_1 = PriorityMapUtil.getLockedMappingsForLockMapping(lockedMapping, myPriorityMap);\n            for (TemplateMappingConfiguration lockedMapping_1 : lockedMappings_1) {\n              Map<TemplateMappingConfiguration, PriorityData> locks_1 = myPriorityMap.get(lockedMapping_1);\n              PriorityData priorityDataToApply = locks_1.get(lockedMapping);\n              boolean newLockAdded = PriorityMapUtil.addLock(lockedMapping_1, weakLockMapping, priorityDataToApply, myPriorityMap);\n              checkSelfLocking(lockedMapping_1);\n              if (newLockAdded) {\n                // if new lock is a weak lock, then better start all over again (weak locks cleaning)\n                PriorityData priorityData = myPriorityMap.get(lockedMapping_1).get(weakLockMapping);\n                // checkSelfLocking may removed it, check if not null\n                if (priorityData != null && priorityData.isWeak()) {\n                  need_more_passes = true;\n                  break iterate_all_mappings;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    // paranoid check\n    for (Map<TemplateMappingConfiguration, PriorityData> locks : myPriorityMap.values()) {\n      for (PriorityData priorityData : locks.values()) {\n        if (!priorityData.isStrict()) {\n          throw new RuntimeException(\"Unexpected weak priority\");\n        }\n      }\n    }\n\n    // create mappings partitioning\n    List<List<TemplateMappingConfiguration>> mappingSets = createMappingSets();\n    // if the priority map is still not empty, then there are some conflicting rules\n    for (Map<TemplateMappingConfiguration, PriorityData> grtPriMappings : myPriorityMap.values()) {\n      for (PriorityData priorityData : grtPriMappings.values()) {\n        myConflictingRules.addAll(priorityData.myCauseRules);\n      }\n    }\n    return mappingSets;\n  }","id":52066,"modified_method":"List<List<TemplateMappingConfiguration>> solve() {\n    // early error detection\n    for (TemplateMappingConfiguration mapping : myPriorityMap.keys()) {\n      checkSelfLocking(mapping);\n    }\n\n    // process coherent mappings\n    PriorityMapUtil.joinIntersectingCoherentMappings(myCoherentMappings);\n    myPriorityMap.makeLockedByAllCoherentIfLockedByOne(myCoherentMappings);\n    myPriorityMap.makeLocksEqualsForCoherentMappings(myCoherentMappings, myConflictingRules);\n\n    // remove 'weak' priorities\n    boolean need_more_passes = true;\n    while (need_more_passes) {\n      need_more_passes = false;\n      iterate_all_mappings:\n      for (TemplateMappingConfiguration lockedMapping : myPriorityMap.keys()) {\n        while (true) {\n          List<TemplateMappingConfiguration> weakLockMappings = myPriorityMap.getWeakLockMappingsForLockedMapping(lockedMapping);\n          if (weakLockMappings.isEmpty()) break;\n          for (TemplateMappingConfiguration weakLockMapping : weakLockMappings) {\n            // remove 'weak' dependency but don't allow locked-lockedMapping to go before weak-lock lockedMapping\n            myPriorityMap.replaceWeakLock(lockedMapping, weakLockMapping);\n            checkSelfLocking(lockedMapping);\n//          // if locked-mapping is strict lock for other mappings,\n//          // then weak-lock-mapping should be strict lock for them as well.\n//          List<TemplateMappingConfiguration> lockedMappings_1 = PriorityMapUtil.getStrictLockedMappingsForLockMapping(lockedMapping, myPriorityMap);\n//          for (TemplateMappingConfiguration lockedMapping_1 : lockedMappings_1) {\n//            Map<TemplateMappingConfiguration, PriorityData> locks_1 = myPriorityMap.get(lockedMapping_1);\n//            PriorityData priorityDataToApply = locks_1.get(lockedMapping);\n//            PriorityMapUtil.addLock(lockedMapping_1, weakLockMapping, priorityDataToApply, myPriorityMap);\n//            checkSelfLocking(lockedMapping_1);\n//          }\n\n            // if locked-lockedMapping is a lock for other mappings,\n            // then weak-lock-lockedMapping should be a lock for them as well.\n            List<TemplateMappingConfiguration> lockedMappings_1 = myPriorityMap.getLockedMappingsForLockMapping(lockedMapping);\n            for (TemplateMappingConfiguration lockedMapping_1 : lockedMappings_1) {\n              PriorityData priorityDataToApply = myPriorityMap.priorityData(lockedMapping_1, lockedMapping);\n              boolean newLockAdded = myPriorityMap.addLock(lockedMapping_1, weakLockMapping, priorityDataToApply);\n              checkSelfLocking(lockedMapping_1);\n              if (newLockAdded) {\n                // if new lock is a weak lock, then better start all over again (weak locks cleaning)\n                PriorityData priorityData = myPriorityMap.priorityData(lockedMapping_1, weakLockMapping);\n                // checkSelfLocking may removed it, check if not null\n                if (priorityData != null && priorityData.isWeak()) {\n                  need_more_passes = true;\n                  break iterate_all_mappings;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    // paranoid check\n    for (PriorityData priorityData : myPriorityMap.priorityData()) {\n      if (!priorityData.isStrict()) {\n        throw new RuntimeException(\"Unexpected weak priority\");\n      }\n    }\n\n    // create mappings partitioning\n    List<List<TemplateMappingConfiguration>> mappingSets = createMappingSets();\n    // if the priority map is still not empty, then there are some conflicting rules\n    for (PriorityData priorityData : myPriorityMap.priorityData()) {\n      myConflictingRules.addAll(priorityData.myCauseRules);\n    }\n    return mappingSets;\n  }","commit_id":"be7ea305c211116e0606c8dfe87b1ae1ca3f40a6","url":"https://github.com/JetBrains/MPS"},{"original_method":"public PartitioningSolver(Map<TemplateMappingConfiguration, Map<TemplateMappingConfiguration, PriorityData>> priorityMap, List<CoherentSetData> coherentMappings, Set<TemplateMappingPriorityRule> conflictingRules) {\n    myPriorityMap = priorityMap;\n    myCoherentMappings = coherentMappings;\n    myConflictingRules = conflictingRules;\n  }","id":52067,"modified_method":"public PartitioningSolver(PriorityMap priorityMap, List<CoherentSetData> coherentMappings, Set<TemplateMappingPriorityRule> conflictingRules) {\n    myPriorityMap = priorityMap;\n    myCoherentMappings = coherentMappings;\n    myConflictingRules = conflictingRules;\n  }","commit_id":"be7ea305c211116e0606c8dfe87b1ae1ca3f40a6","url":"https://github.com/JetBrains/MPS"},{"original_method":"private List<TemplateMappingConfiguration> createMappingSet(boolean topPriorityGroup) {\n    // add all not-locking-mappinds to set\n    List<TemplateMappingConfiguration> mappingSet = new ArrayList<TemplateMappingConfiguration>();\n    for (TemplateMappingConfiguration mapping : myPriorityMap.keySet()) {\n      if (mapping.isTopPriority() != topPriorityGroup) continue;\n      if (!PriorityMapUtil.isLockingMapping(mapping, myPriorityMap)) {\n        mappingSet.add(mapping);\n      }\n    }\n    for (TemplateMappingConfiguration mapping : mappingSet) {\n      myPriorityMap.remove(mapping);\n    }\n    return mappingSet;\n  }","id":52068,"modified_method":"private List<TemplateMappingConfiguration> createMappingSet(boolean topPriorityGroup) {\n    // add all not-locking-mappinds to set\n    List<TemplateMappingConfiguration> mappingSet = new ArrayList<TemplateMappingConfiguration>();\n    for (TemplateMappingConfiguration mapping : myPriorityMap.keys()) {\n      if (mapping.isTopPriority() != topPriorityGroup) continue;\n      if (!myPriorityMap.isLockingMapping(mapping)) {\n        mappingSet.add(mapping);\n      }\n    }\n    myPriorityMap.removeKeys(mappingSet);\n    return mappingSet;\n  }","commit_id":"be7ea305c211116e0606c8dfe87b1ae1ca3f40a6","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void joinIntersectingCoherentMappings(List<CoherentSetData> coherentMappings) {\n    Map<TemplateMappingConfiguration, CoherentSetData> myMappingToSet = new HashMap<TemplateMappingConfiguration, CoherentSetData>();\n    boolean executeOneMore = true;\n\n    outer:\n    while(executeOneMore) {\n      executeOneMore = false;\n      myMappingToSet.clear();\n      for(CoherentSetData data : coherentMappings) {\n        for (TemplateMappingConfiguration mapping : data.myMappings) {\n          CoherentSetData original = myMappingToSet.get(mapping);\n          if(original != null && original != data) {\n            // merge sets\n            original.myMappings.addAll(data.myMappings);\n            original.myCauseRules.addAll(data.myCauseRules);\n            coherentMappings.remove(data);\n            executeOneMore = true;\n            continue outer;\n          }\n          myMappingToSet.put(mapping, data);\n        }\n      }\n    }\n  }","id":52069,"modified_method":"public static void joinIntersectingCoherentMappings(List<CoherentSetData> coherentMappings) {\n    Map<TemplateMappingConfiguration, CoherentSetData> myMappingToSet = new HashMap<TemplateMappingConfiguration, CoherentSetData>();\n    boolean executeOneMore = true;\n\n    outer:\n    while(executeOneMore) {\n      executeOneMore = false;\n      myMappingToSet.clear();\n      for(CoherentSetData data : coherentMappings) {\n        for (TemplateMappingConfiguration mapping : data.myMappings) {\n          CoherentSetData original = myMappingToSet.get(mapping);\n          if(original != null && original != data) {\n            // merge sets\n            original.merge(data);\n            coherentMappings.remove(data);\n            executeOneMore = true;\n            continue outer;\n          }\n          myMappingToSet.put(mapping, data);\n        }\n      }\n    }\n  }","commit_id":"be7ea305c211116e0606c8dfe87b1ae1ca3f40a6","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static void parseMethodParameter(ImmutableMap.Builder<String, String> parameters, String param)\n    {\n        param = param.replaceFirst(\"@param\", StringUtils.EMPTY).trim();\n        int descriptionIndex = param.indexOf(\" \");\n        String paramName = param.substring(0, descriptionIndex).trim();\n        String description = param.substring(descriptionIndex).trim();\n\n        parameters.put(paramName, description);\n    }","id":52070,"modified_method":"private static void parseMethodParameter(Map<String, String> parameters, String param)\n    {\n        param = param.replaceFirst(\"@param\", StringUtils.EMPTY).trim();\n        int descriptionIndex = param.indexOf(\" \");\n        String paramName = param.substring(0, descriptionIndex).trim();\n        String description = param.substring(descriptionIndex).trim();\n\n        parameters.put(paramName, description);\n    }","commit_id":"d069e3cc6f8cdbb64b8d8b782ae47297863c4195","url":"https://github.com/mulesoft/mule"},{"original_method":"static Map<String, ExecutableElement> getMethodsAnnotatedWith(TypeElement typeElement, Class<? extends Annotation> annotation)\n    {\n        ImmutableMap.Builder<String, ExecutableElement> fields = ImmutableMap.builder();\n\n        for (ExecutableElement executableElement : ElementFilter.methodsIn(typeElement.getEnclosedElements()))\n        {\n            if (executableElement.getAnnotation(annotation) != null)\n            {\n                fields.put(executableElement.getSimpleName().toString(), executableElement);\n            }\n        }\n\n        return fields.build();\n    }","id":52071,"modified_method":"static Map<String, ExecutableElement> getMethodsAnnotatedWith(TypeElement typeElement, Class<? extends Annotation> annotation)\n    {\n        ImmutableMap.Builder<String, ExecutableElement> methods = ImmutableMap.builder();\n\n        for (ExecutableElement executableElement : ElementFilter.methodsIn(typeElement.getEnclosedElements()))\n        {\n            if (executableElement.getAnnotation(annotation) != null)\n            {\n                methods.put(executableElement.getSimpleName().toString(), executableElement);\n            }\n        }\n\n        return methods.build();\n    }","commit_id":"d069e3cc6f8cdbb64b8d8b782ae47297863c4195","url":"https://github.com/mulesoft/mule"},{"original_method":"static MethodDocumentation getMethodDocumentation(ProcessingEnvironment processingEnv, Element element)\n    {\n        final StringBuilder parsedComment = new StringBuilder();\n        final ImmutableMap.Builder<String, String> parameters = ImmutableMap.builder();\n        parseJavaDoc(processingEnv, element, new JavadocParseHandler()\n        {\n            @Override\n            void onParam(String param)\n            {\n                parseMethodParameter(parameters, param);\n            }\n\n            @Override\n            void onBodyLine(String bodyLine)\n            {\n                parsedComment.append(bodyLine).append('\\n');\n            }\n        });\n\n        return new MethodDocumentation(stripTags(parsedComment.toString()), parameters.build());\n    }","id":52072,"modified_method":"static MethodDocumentation getMethodDocumentation(ProcessingEnvironment processingEnv, Element element)\n    {\n        final StringBuilder parsedComment = new StringBuilder();\n        final Map<String, String> parameters = new HashMap<>();\n        parseJavaDoc(processingEnv, element, new JavadocParseHandler()\n        {\n            @Override\n            void onParam(String param)\n            {\n                parseMethodParameter(parameters, param);\n            }\n\n            @Override\n            void onBodyLine(String bodyLine)\n            {\n                parsedComment.append(bodyLine).append('\\n');\n            }\n        });\n\n\n        parseOperationParameterGroups(processingEnv, (MethodSymbol) element, parameters);\n\n\n        return new MethodDocumentation(stripTags(parsedComment.toString()), parameters);\n    }","commit_id":"d069e3cc6f8cdbb64b8d8b782ae47297863c4195","url":"https://github.com/mulesoft/mule"},{"original_method":"/**\n     * Validates that {@code value} is empty. The definition of empty depends on\n     * the type of {@code value}. If it's a {@link String} it will check that it is not blank.\n     * If it's a {@link Collection}, array or {@link Map} it will check that it's not empty. No other types\n     * are supported, an {@link IllegalArgumentException} will be thrown if any other type is supplied\n     *\n     * @param value   the value to check\n     * @param options the {@link ValidationOptions}\n     * @param event   the current {@link MuleEvent}\n     * @param event   the current {@link MuleEvent\n     * @throws IllegalArgumentException if {@code value} is something other than a {@link String},{@link Collection} or {@link Map}\n     */\n    @Operation\n    public void isEmpty(Object value, @ParameterGroup ValidationOptions options, MuleEvent event) throws Exception\n    {\n        ValidationContext context = createContext(options, event);\n        validateWith(new EmptyValidator(value, context), context, event);\n    }","id":52073,"modified_method":"/**\n     * Validates that {@code value} is empty. The definition of empty depends on\n     * the type of {@code value}. If it's a {@link String} it will check that it is not blank.\n     * If it's a {@link Collection}, array or {@link Map} it will check that it's not empty. No other types\n     * are supported, an {@link IllegalArgumentException} will be thrown if any other type is supplied\n     *\n     * @param value   the value to check\n     * @param options the {@link ValidationOptions}\n     * @param event   the current {@link MuleEvent}\n     * @throws IllegalArgumentException if {@code value} is something other than a {@link String},{@link Collection} or {@link Map}\n     */\n    @Operation\n    public void isEmpty(Object value, @ParameterGroup ValidationOptions options, MuleEvent event) throws Exception\n    {\n        ValidationContext context = createContext(options, event);\n        validateWith(new EmptyValidator(value, context), context, event);\n    }","commit_id":"d069e3cc6f8cdbb64b8d8b782ae47297863c4195","url":"https://github.com/mulesoft/mule"},{"original_method":"private void applyPostProcessors(Construct construct)\n    {\n        final DescribingContext context = new ImmutableDescribingContext(construct.getRootConstruct());\n\n        for (DescriberPostProcessor postProcessor : postProcessors)\n        {\n            postProcessor.postProcess(context);\n        }\n    }","id":52074,"modified_method":"private void applyPostProcessors(DescribingContext describingContext)\n    {\n        for (DescriberPostProcessor postProcessor : postProcessors)\n        {\n            postProcessor.postProcess(describingContext);\n        }\n    }","commit_id":"d069e3cc6f8cdbb64b8d8b782ae47297863c4195","url":"https://github.com/mulesoft/mule"},{"original_method":"/**\n     * {@inheritDoc}\n     */\n    @Override\n    public Extension createFrom(Construct construct)\n    {\n        applyPostProcessors(construct);\n        return toExtension(construct.getRootConstruct().getDeclaration());\n    }","id":52075,"modified_method":"/**\n     * {@inheritDoc}\n     */\n    @Override\n    public Extension createFrom(Construct construct)\n    {\n        return createFrom(construct, new ImmutableDescribingContext(construct.getRootConstruct()));\n    }","commit_id":"d069e3cc6f8cdbb64b8d8b782ae47297863c4195","url":"https://github.com/mulesoft/mule"},{"original_method":"private Extension parseExtension(TypeElement extensionElement)\n    {\n        Class<?> extensionClass = getClass(extensionElement);\n        Describer describer = new AnnotationsBasedDescriber(extensionClass);\n\n        DescribingContext context = new ImmutableDescribingContext(describer.describe().getRootConstruct());\n        context.getCustomParameters().put(SchemaDocumenterPostProcessor.EXTENSION_ELEMENT, extensionElement);\n        context.getCustomParameters().put(SchemaDocumenterPostProcessor.PROCESSING_ENVIRONMENT, processingEnv);\n\n        extractXmlCapability(extensionClass, context);\n\n        return extensionFactory.createFrom(context.getDeclarationConstruct());\n    }","id":52076,"modified_method":"private Extension parseExtension(TypeElement extensionElement, RoundEnvironment roundEnvironment)\n    {\n        Class<?> extensionClass = AnnotationProcessorUtils.classFor(extensionElement, processingEnv);\n        Describer describer = new AnnotationsBasedDescriber(extensionClass);\n\n        DescribingContext context = new ImmutableDescribingContext(describer.describe().getRootConstruct());\n        context.getCustomParameters().put(EXTENSION_ELEMENT, extensionElement);\n        context.getCustomParameters().put(PROCESSING_ENVIRONMENT, processingEnv);\n        context.getCustomParameters().put(ROUND_ENVIRONMENT, roundEnvironment);\n\n        extractXmlCapability(extensionClass, context);\n\n        return extensionFactory.createFrom(context.getDeclarationConstruct(), context);\n    }","commit_id":"d069e3cc6f8cdbb64b8d8b782ae47297863c4195","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override\n    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)\n    {\n        log(\"Starting Resources generator for Extensions\");\n\n        ResourcesGenerator generator = new AnnotationProcessorResourceGenerator(processingEnv, new SPIServiceRegistry());\n        try\n        {\n            for (TypeElement extensionElement : findExtensions(roundEnv))\n            {\n                Extension extension = parseExtension(extensionElement);\n                generator.generateFor(extension);\n            }\n\n            generator.dumpAll();\n\n            return false;\n        }\n        catch (Exception e)\n        {\n            processingEnv.getMessager().printMessage(Diagnostic.Kind.ERROR,\n                                                     String.format(\"%s\\n%s\", e.getMessage(), ExceptionUtils.getFullStackTrace(e)));\n            throw e;\n        }\n    }","id":52077,"modified_method":"@Override\n    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)\n    {\n        log(\"Starting Resources generator for Extensions\");\n        ResourcesGenerator generator = new AnnotationProcessorResourceGenerator(processingEnv, new SPIServiceRegistry());\n        try\n        {\n            for (TypeElement extensionElement : findExtensions(roundEnv))\n            {\n                Extension extension = parseExtension(extensionElement, roundEnv);\n                generator.generateFor(extension);\n            }\n\n            generator.dumpAll();\n\n            return false;\n        }\n        catch (Exception e)\n        {\n            processingEnv.getMessager().printMessage(Diagnostic.Kind.ERROR,\n                                                     String.format(\"%s\\n%s\", e.getMessage(), ExceptionUtils.getFullStackTrace(e)));\n            throw e;\n        }\n    }","commit_id":"d069e3cc6f8cdbb64b8d8b782ae47297863c4195","url":"https://github.com/mulesoft/mule"},{"original_method":"private List<TypeElement> findExtensions(RoundEnvironment env)\n    {\n        return ImmutableList.copyOf(ElementFilter.typesIn(env.getElementsAnnotatedWith(org.mule.extension.annotations.Extension.class)));\n    }","id":52078,"modified_method":"private List<TypeElement> findExtensions(RoundEnvironment env)\n    {\n        return ImmutableList.copyOf(getTypeElementsAnnotatedWith(org.mule.extension.annotations.Extension.class, env));\n    }","commit_id":"d069e3cc6f8cdbb64b8d8b782ae47297863c4195","url":"https://github.com/mulesoft/mule"},{"original_method":"private void documentOperations(Declaration declaration, TypeElement extensionElement)\n    {\n        final Map<String, ExecutableElement> methods = getMethodsAnnotatedWith(extensionElement, Operation.class);\n\n        try\n        {\n            for (OperationDeclaration operation : declaration.getOperations())\n            {\n                ExecutableElement method = methods.get(operation.getName());\n\n                if (method == null)\n                {\n                    continue;\n                }\n\n                MethodDocumentation documentation = getMethodDocumentation(processingEnv, method);\n                operation.setDescription(documentation.getSummary());\n                documentOperationParameters(operation, documentation);\n            }\n        }\n        catch (Exception e)\n        {\n            throw new MuleRuntimeException(MessageFactory.createStaticMessage(\"Exception found while trying to document XSD schema\"), e);\n        }\n    }","id":52079,"modified_method":"private void documentOperations(Declaration declaration, RoundEnvironment roundEnvironment)\n    {\n        final Map<String, ExecutableElement> methods = getOperationMethods(roundEnvironment);\n\n        try\n        {\n            for (OperationDeclaration operation : declaration.getOperations())\n            {\n                ExecutableElement method = methods.get(operation.getName());\n\n                if (method == null)\n                {\n                    continue;\n                }\n\n                MethodDocumentation documentation = getMethodDocumentation(processingEnv, method);\n                operation.setDescription(documentation.getSummary());\n                documentOperationParameters(operation, documentation);\n            }\n        }\n        catch (Exception e)\n        {\n            throw new MuleRuntimeException(MessageFactory.createStaticMessage(\"Exception found while trying to document XSD schema\"), e);\n        }\n    }","commit_id":"d069e3cc6f8cdbb64b8d8b782ae47297863c4195","url":"https://github.com/mulesoft/mule"},{"original_method":"private void documentConfigurationParameters(Collection<ParameterDeclaration> parameters, TypeElement element)\n    {\n        final Map<String, VariableElement> fields = getFieldsAnnotatedWith(element, Parameter.class);\n        while (element != null && !Object.class.getName().equals(element.getQualifiedName().toString()))\n        {\n            for (ParameterDeclaration parameter : parameters)\n            {\n                VariableElement field = fields.get(parameter.getName());\n                if (field != null)\n                {\n                    parameter.setDescription(getJavaDocSummary(processingEnv, field));\n                }\n            }\n\n            element = (TypeElement) processingEnv.getTypeUtils().asElement(element.getSuperclass());\n        }\n    }","id":52080,"modified_method":"private void documentConfigurationParameters(Collection<ParameterDeclaration> parameters, final TypeElement element)\n    {\n        final Map<String, VariableElement> variableElements = getFieldsAnnotatedWith(element, Parameter.class);\n        TypeElement traversingElement = element;\n        while (traversingElement != null && !Object.class.getName().equals(traversingElement.getQualifiedName().toString()))\n        {\n            Class<?> declaringClass = AnnotationProcessorUtils.classFor(traversingElement, processingEnv);\n            for (ParameterDeclaration parameter : parameters)\n            {\n                Field field = IntrospectionUtils.getField(declaringClass, parameter);\n                if (field != null && variableElements.containsKey(field.getName()))\n                {\n                    parameter.setDescription(getJavaDocSummary(processingEnv, variableElements.get(field.getName())));\n                }\n            }\n\n            traversingElement = (TypeElement) processingEnv.getTypeUtils().asElement(traversingElement.getSuperclass());\n        }\n\n        for (VariableElement variableElement : getFieldsAnnotatedWith(element, ParameterGroup.class).values())\n        {\n            TypeElement typeElement = (TypeElement) processingEnv.getTypeUtils().asElement(variableElement.asType());\n            documentConfigurationParameters(parameters, typeElement);\n        }\n    }","commit_id":"d069e3cc6f8cdbb64b8d8b782ae47297863c4195","url":"https://github.com/mulesoft/mule"},{"original_method":"private void documentConfigurations(Declaration declaration, TypeElement extensionElement)\n    {\n        for (ConfigurationDeclaration configuration : declaration.getConfigurations())\n        {\n            documentConfigurationParameters(configuration.getParameters(), extensionElement);\n        }\n    }","id":52081,"modified_method":"private void documentConfigurations(Declaration declaration, TypeElement extensionElement, RoundEnvironment roundEnvironment)\n    {\n        if (declaration.getConfigurations().size() > 1)\n        {\n            for (TypeElement configurationElement : getTypeElementsAnnotatedWith(Configuration.class, roundEnvironment))\n            {\n                ConfigurationDeclaration configurationDeclaration = findMatchingConfiguration(declaration, configurationElement);\n                documentConfigurationParameters(configurationDeclaration.getParameters(), configurationElement);\n            }\n        }\n        else\n        {\n            documentConfigurationParameters(declaration.getConfigurations().get(0).getParameters(), extensionElement);\n        }\n    }","commit_id":"d069e3cc6f8cdbb64b8d8b782ae47297863c4195","url":"https://github.com/mulesoft/mule"},{"original_method":"void document(Declaration declaration, TypeElement extensionElement)\n    {\n        declaration.setDescription(getJavaDocSummary(processingEnv, extensionElement));\n        documentConfigurations(declaration, extensionElement);\n        documentOperations(declaration, extensionElement);\n    }","id":52082,"modified_method":"void document(Declaration declaration, TypeElement extensionElement, RoundEnvironment roundEnvironment)\n    {\n        declaration.setDescription(getJavaDocSummary(processingEnv, extensionElement));\n        documentConfigurations(declaration, extensionElement, roundEnvironment);\n        documentOperations(declaration, roundEnvironment);\n    }","commit_id":"d069e3cc6f8cdbb64b8d8b782ae47297863c4195","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override\n    public void postProcess(DescribingContext context)\n    {\n        ProcessingEnvironment processingEnv = getCheckedParameter(context, PROCESSING_ENVIRONMENT, ProcessingEnvironment.class);\n        TypeElement extensionElement = getCheckedParameter(context, EXTENSION_ELEMENT, TypeElement.class);\n\n        if (processingEnv == null || extensionElement == null)\n        {\n            logger.debug(\"processing environment or extension element not provided. Skipping\");\n            return;\n        }\n\n        new SchemaDocumenter(processingEnv).document(context.getDeclarationConstruct().getDeclaration(), extensionElement);\n    }","id":52083,"modified_method":"@Override\n    public void postProcess(DescribingContext context)\n    {\n        ProcessingEnvironment processingEnv = getCheckedParameter(context, PROCESSING_ENVIRONMENT, ProcessingEnvironment.class);\n        TypeElement extensionElement = getCheckedParameter(context, EXTENSION_ELEMENT, TypeElement.class);\n        RoundEnvironment roundEnvironment = getCheckedParameter(context, ROUND_ENVIRONMENT, RoundEnvironment.class);\n\n        if (processingEnv == null || extensionElement == null)\n        {\n            logger.debug(\"processing environment or extension element not provided. Skipping\");\n            return;\n        }\n\n        new SchemaDocumenter(processingEnv).document(context.getDeclarationConstruct().getDeclaration(), extensionElement, roundEnvironment);\n    }","commit_id":"d069e3cc6f8cdbb64b8d8b782ae47297863c4195","url":"https://github.com/mulesoft/mule"},{"original_method":"static void installFeatureConfigs(BundleContext bundleContext, Map<String, Resource> resources) throws IOException {\n        ServiceReference configAdminServiceReference = bundleContext.getServiceReference(ConfigurationAdmin.class.getName());\n        if (configAdminServiceReference != null) {\n            ConfigurationAdmin configAdmin = (ConfigurationAdmin) bundleContext.getService(configAdminServiceReference);\n            for (FeatureResource resource : filterFeatureResources(resources)) {\n                Map<String, Map<String, String>> configs = resource.getFeature().getConfigurations();\n                for (Map.Entry<String, Map<String, String>> entry : configs.entrySet()) {\n                    String pid = entry.getKey();\n                    if (!isConfigurationManaged(configAdmin, pid)) {\n                        applyConfiguration(configAdmin, pid, entry.getValue());\n                    }\n                }\n            }\n        }\n    }","id":52084,"modified_method":"static void installFeatureConfigs(BundleContext bundleContext, Map<String, Resource> resources) throws IOException {\n        ServiceReference configAdminServiceReference = bundleContext.getServiceReference(ConfigurationAdmin.class.getName());\n        if (configAdminServiceReference != null) {\n            ConfigurationAdmin configAdmin = (ConfigurationAdmin) bundleContext.getService(configAdminServiceReference);\n            for (FeatureResource resource : filterFeatureResources(resources)) {\n                for (ConfigInfo ci : resource.getFeature().getConfigurations()) {\n                    String pid = ci.getName();\n                    if (!isConfigurationManaged(configAdmin, pid)) {\n                        applyConfiguration(configAdmin, pid, ci.getProperties());\n                    }\n                }\n            }\n        }\n    }","commit_id":"d0e1fa071cb15af39b9c8cb78f644fd2f8943812","url":"https://github.com/fabric8io/fabric8"},{"original_method":"@Configuration\n    public Option[] config() {\n        return new Option[] {\n            junitBundles(),\n\n            systemProperty(\"project.version\").value(VERSION),\n            systemProperty(\"org.ops4j.pax.url.mvn.localRepository\").value(LOCAL_REPOSITORY),\n            systemProperty(\"karaf.etc\").value(\"src/test/resources\"),\n\n            // we need the boot delegation to allow the Spring/Blueprint XML parsing with JAXP to succeed\n            bootDelegationPackage(\"com.sun.*\"),\n\n            mavenBundle(\"org.ops4j.pax.logging\", \"pax-logging-api\").versionAsInProject(),\n            mavenBundle(\"org.ops4j.pax.url\", \"pax-url-aether\").versionAsInProject(),\n\n            mavenBundle(\"org.apache.felix\", \"org.apache.felix.fileinstall\").versionAsInProject(),\n            mavenBundle(\"org.apache.felix\", \"org.apache.felix.configadmin\").versionAsInProject(),\n            mavenBundle(\"org.apache.felix\", \"org.apache.felix.gogo.runtime\").versionAsInProject(),\n\n            mavenBundle(\"org.apache.karaf.jaas\", \"org.apache.karaf.jaas.boot\").versionAsInProject(),\n            mavenBundle(\"org.apache.karaf.jaas\", \"org.apache.karaf.jaas.config\").versionAsInProject(),\n            mavenBundle(\"org.apache.karaf.jaas\", \"org.apache.karaf.jaas.modules\").versionAsInProject(),\n\n            mavenBundle(\"org.apache.servicemix.bundles\", \"org.apache.servicemix.bundles.asm\").versionAsInProject(),\n            mavenBundle(\"org.apache.aries\", \"org.apache.aries.util\").versionAsInProject(),\n            mavenBundle(\"org.apache.aries.proxy\", \"org.apache.aries.proxy\").versionAsInProject(),\n            mavenBundle(\"org.apache.aries.blueprint\", \"org.apache.aries.blueprint.api\").versionAsInProject(),\n            mavenBundle(\"org.apache.aries.blueprint\", \"org.apache.aries.blueprint.core\").versionAsInProject(),\n            mavenBundle(\"org.apache.karaf.features\", \"org.apache.karaf.features.core\").versionAsInProject(),\n            mavenBundle(\"org.apache.mina\", \"mina-core\").versionAsInProject(),\n            mavenBundle(\"org.apache.sshd\", \"sshd-core\").versionAsInProject(),\n            mavenBundle(\"org.apache.karaf.shell\", \"org.apache.karaf.shell.console\").versionAsInProject(),\n            mavenBundle(\"org.apache.karaf.shell\", \"org.apache.karaf.shell.osgi\").versionAsInProject(),\n\n            mavenBundle(\"org.ow2.asm\", \"asm-all\").versionAsInProject(),\n            mavenBundle(\"commons-collections\", \"commons-collections\").versionAsInProject(),\n            mavenBundle(\"org.ops4j.base\", \"ops4j-base-lang\").versionAsInProject(),\n            mavenBundle(\"org.ops4j.base\", \"ops4j-base-net\").versionAsInProject(),\n            mavenBundle(\"org.ops4j.base\", \"ops4j-base-util-property\").versionAsInProject(),\n            mavenBundle(\"org.ops4j.pax.swissbox\", \"pax-swissbox-optional-jcl\").versionAsInProject(),\n            mavenBundle(\"org.ops4j.pax.swissbox\", \"pax-swissbox-property\").versionAsInProject(),\n\n            mavenBundle(\"io.fabric8\", \"common-util\").versionAsInProject(),\n            mavenBundle(\"io.fabric8.fab\", \"fab-osgi\").versionAsInProject()\n        };\n    }","id":52085,"modified_method":"@Configuration\n    public Option[] config() {\n        return new Option[] {\n            junitBundles(),\n\n            systemProperty(\"project.version\").value(VERSION),\n            systemProperty(\"org.ops4j.pax.url.mvn.localRepository\").value(LOCAL_REPOSITORY),\n            systemProperty(\"karaf.etc\").value(\"src/test/resources\"),\n\n            // we need the boot delegation to allow the Spring/Blueprint XML parsing with JAXP to succeed\n            bootDelegationPackage(\"com.sun.*\"),\n\n            mavenBundle(\"org.ops4j.pax.logging\", \"pax-logging-api\").versionAsInProject(),\n            mavenBundle(\"org.ops4j.pax.url\", \"pax-url-aether\").versionAsInProject(),\n\n            mavenBundle(\"org.apache.felix\", \"org.apache.felix.fileinstall\").versionAsInProject(),\n            mavenBundle(\"org.apache.felix\", \"org.apache.felix.configadmin\").versionAsInProject(),\n\n            mavenBundle(\"org.apache.karaf.jaas\", \"org.apache.karaf.jaas.boot\").versionAsInProject(),\n            mavenBundle(\"org.apache.karaf.jaas\", \"org.apache.karaf.jaas.config\").versionAsInProject(),\n            mavenBundle(\"org.apache.karaf.jaas\", \"org.apache.karaf.jaas.modules\").versionAsInProject(),\n\n            mavenBundle(\"org.apache.servicemix.bundles\", \"org.apache.servicemix.bundles.asm\").versionAsInProject(),\n            mavenBundle(\"org.apache.aries\", \"org.apache.aries.util\").versionAsInProject(),\n            mavenBundle(\"org.apache.aries.proxy\", \"org.apache.aries.proxy\").versionAsInProject(),\n            mavenBundle(\"org.apache.aries.blueprint\", \"org.apache.aries.blueprint.api\").versionAsInProject(),\n            mavenBundle(\"org.apache.aries.blueprint\", \"org.apache.aries.blueprint.core\").versionAsInProject(),\n            mavenBundle(\"org.apache.karaf.features\", \"org.apache.karaf.features.core\").versionAsInProject(),\n            mavenBundle(\"org.apache.mina\", \"mina-core\").versionAsInProject(),\n            mavenBundle(\"org.apache.sshd\", \"sshd-core\").versionAsInProject(),\n            mavenBundle(\"org.apache.karaf.shell\", \"org.apache.karaf.shell.console\").versionAsInProject(),\n            mavenBundle(\"org.apache.karaf.shell\", \"org.apache.karaf.shell.osgi\").versionAsInProject(),\n\n            mavenBundle(\"org.ow2.asm\", \"asm-all\").versionAsInProject(),\n            mavenBundle(\"commons-collections\", \"commons-collections\").versionAsInProject(),\n            mavenBundle(\"org.ops4j.base\", \"ops4j-base-lang\").versionAsInProject(),\n            mavenBundle(\"org.ops4j.base\", \"ops4j-base-net\").versionAsInProject(),\n            mavenBundle(\"org.ops4j.base\", \"ops4j-base-util-property\").versionAsInProject(),\n            mavenBundle(\"org.ops4j.pax.swissbox\", \"pax-swissbox-optional-jcl\").versionAsInProject(),\n            mavenBundle(\"org.ops4j.pax.swissbox\", \"pax-swissbox-property\").versionAsInProject(),\n\n            mavenBundle(\"io.fabric8\", \"common-util\").versionAsInProject(),\n            mavenBundle(\"io.fabric8.fab\", \"fab-osgi\").versionAsInProject()\n        };\n    }","commit_id":"d0e1fa071cb15af39b9c8cb78f644fd2f8943812","url":"https://github.com/fabric8io/fabric8"},{"original_method":"public PyClassStub deserialize(final DataInputStream dataStream, final StubElement parentStub,\n                                 final PersistentStringEnumerator nameStorage) throws IOException {\n    String name = DataInputOutputUtil.readNAME(dataStream, nameStorage);\n    int superClassCount = dataStream.readByte();\n    String[] superClasses = new String[superClassCount];\n    for(int i=0; i<superClassCount; i++) {\n      superClasses [i] = DataInputOutputUtil.readNAME(dataStream, nameStorage);\n    }\n    return new PyClassStubImpl(name, parentStub, superClasses);\n  }","id":52086,"modified_method":"public PyClassStub deserialize(final DataInputStream dataStream, final StubElement parentStub,\n                                 final PersistentStringEnumerator nameStorage) throws IOException {\n    String name = StringRef.toString(DataInputOutputUtil.readNAME(dataStream, nameStorage));\n    int superClassCount = dataStream.readByte();\n    String[] superClasses = new String[superClassCount];\n    for(int i=0; i<superClassCount; i++) {\n      superClasses[i] = StringRef.toString(DataInputOutputUtil.readNAME(dataStream, nameStorage));\n    }\n    return new PyClassStubImpl(name, parentStub, superClasses);\n  }","commit_id":"3be31bf7b2a60302002e18c75acde458667475d3","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public PyParameterStub deserialize(final DataInputStream dataStream, final StubElement parentStub,\n                                    final PersistentStringEnumerator nameStorage) throws IOException {\n    String name = DataInputOutputUtil.readNAME(dataStream, nameStorage);\n    boolean keyword = dataStream.readBoolean();\n    boolean positional = dataStream.readBoolean();\n    return new PyParameterStubImpl(name, positional, keyword, parentStub);\n  }","id":52087,"modified_method":"public PyParameterStub deserialize(final DataInputStream dataStream, final StubElement parentStub,\n                                    final PersistentStringEnumerator nameStorage) throws IOException {\n    String name = StringRef.toString(DataInputOutputUtil.readNAME(dataStream, nameStorage));\n    boolean keyword = dataStream.readBoolean();\n    boolean positional = dataStream.readBoolean();\n    return new PyParameterStubImpl(name, positional, keyword, parentStub);\n  }","commit_id":"3be31bf7b2a60302002e18c75acde458667475d3","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public PyFunctionStub deserialize(final DataInputStream dataStream, final StubElement parentStub,\n                                    final PersistentStringEnumerator nameStorage) throws IOException {\n    String name = DataInputOutputUtil.readNAME(dataStream, nameStorage);\n    return new PyFunctionStubImpl(name, parentStub);\n  }","id":52088,"modified_method":"public PyFunctionStub deserialize(final DataInputStream dataStream, final StubElement parentStub,\n                                    final PersistentStringEnumerator nameStorage) throws IOException {\n    String name = StringRef.toString(DataInputOutputUtil.readNAME(dataStream, nameStorage));\n    return new PyFunctionStubImpl(name, parentStub);\n  }","commit_id":"3be31bf7b2a60302002e18c75acde458667475d3","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public PyTargetExpressionStub deserialize(final DataInputStream dataStream, final StubElement parentStub, final PersistentStringEnumerator nameStorage)\n      throws IOException {\n    String name = DataInputOutputUtil.readNAME(dataStream, nameStorage);\n    return new PyTargetExpressionStubImpl(name, parentStub);\n  }","id":52089,"modified_method":"public PyTargetExpressionStub deserialize(final DataInputStream dataStream, final StubElement parentStub, final PersistentStringEnumerator nameStorage)\n      throws IOException {\n    String name = StringRef.toString(DataInputOutputUtil.readNAME(dataStream, nameStorage));\n    return new PyTargetExpressionStubImpl(name, parentStub);\n  }","commit_id":"3be31bf7b2a60302002e18c75acde458667475d3","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n\tpublic void postProcess(\n\t\t\tlong companyId, PortletRequest portletRequest, Settings settings)\n\t\tthrows PortalException {\n\n\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\tportletRequest);\n\n\t\tJournalWebRequestHelper journalWebRequestHelper =\n\t\t\tnew JournalWebRequestHelper(request);\n\n\t\tJournalGroupServiceConfiguration journalGroupServiceConfiguration =\n\t\t\tjournalWebRequestHelper.getJournalGroupServiceConfiguration();\n\n\t\tModifiableSettings modifiableSettings =\n\t\t\tsettings.getModifiableSettings();\n\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings, \"emailArticleAddedBody\",\n\t\t\tjournalGroupServiceConfiguration.emailArticleAddedBody());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings, \"emailArticleAddedSubject\",\n\t\t\tjournalGroupServiceConfiguration.emailArticleAddedSubject());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings,\n\t\t\t\"emailArticleApprovalDeniedBody\",\n\t\t\tjournalGroupServiceConfiguration.emailArticleApprovalDeniedBody());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings,\n\t\t\t\"emailArticleApprovalDeniedSubject\",\n\t\t\tjournalGroupServiceConfiguration.\n\t\t\t\temailArticleApprovalDeniedSubject());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings,\n\t\t\t\"emailArticleApprovalGrantedBody\",\n\t\t\tjournalGroupServiceConfiguration.emailArticleApprovalGrantedBody());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings,\n\t\t\t\"emailArticleApprovalGrantedSubject\",\n\t\t\tjournalGroupServiceConfiguration.\n\t\t\t\temailArticleApprovalGrantedSubject());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings,\n\t\t\t\"emailArticleApprovalRequestedBody\",\n\t\t\tjournalGroupServiceConfiguration.\n\t\t\t\temailArticleApprovalRequestedBody());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings,\n\t\t\t\"emailArticleApprovalRequestedSubject\",\n\t\t\tjournalGroupServiceConfiguration.\n\t\t\t\temailArticleApprovalRequestedSubject());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings,\n\t\t\t\"emailArticleMovedFromFolderBody\",\n\t\t\tjournalGroupServiceConfiguration.emailArticleMovedFromFolderBody());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings,\n\t\t\t\"emailArticleMovedFromFolderSubject\",\n\t\t\tjournalGroupServiceConfiguration.\n\t\t\t\temailArticleMovedFromFolderSubject());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings, \"emailArticleMovedToFolderBody\",\n\t\t\tjournalGroupServiceConfiguration.emailArticleMovedToFolderBody());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings,\n\t\t\t\"emailArticleMovedToFolderSubject\",\n\t\t\tjournalGroupServiceConfiguration.\n\t\t\t\temailArticleMovedToFolderSubject());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings, \"emailArticleReviewBody\",\n\t\t\tjournalGroupServiceConfiguration.emailArticleReviewBody());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings, \"emailArticleReviewSubject\",\n\t\t\tjournalGroupServiceConfiguration.emailArticleReviewSubject());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings, \"emailArticleUpdatedBody\",\n\t\t\tjournalGroupServiceConfiguration.emailArticleUpdatedBody());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings, \"emailArticleUpdatedSubject\",\n\t\t\tjournalGroupServiceConfiguration.emailArticleUpdatedSubject());\n\t}","id":52090,"modified_method":"@Override\n\tpublic void postProcess(\n\t\t\tlong companyId, PortletRequest portletRequest, Settings settings)\n\t\tthrows PortalException {\n\n\t\tModifiableSettings modifiableSettings =\n\t\t\tsettings.getModifiableSettings();\n\n\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\tportletRequest);\n\n\t\tJournalWebRequestHelper journalWebRequestHelper =\n\t\t\tnew JournalWebRequestHelper(request);\n\n\t\tJournalGroupServiceConfiguration journalGroupServiceConfiguration =\n\t\t\tjournalWebRequestHelper.getJournalGroupServiceConfiguration();\n\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings, \"emailArticleAddedBody\",\n\t\t\tjournalGroupServiceConfiguration.emailArticleAddedBody());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings, \"emailArticleAddedSubject\",\n\t\t\tjournalGroupServiceConfiguration.emailArticleAddedSubject());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings,\n\t\t\t\"emailArticleApprovalDeniedBody\",\n\t\t\tjournalGroupServiceConfiguration.emailArticleApprovalDeniedBody());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings,\n\t\t\t\"emailArticleApprovalDeniedSubject\",\n\t\t\tjournalGroupServiceConfiguration.\n\t\t\t\temailArticleApprovalDeniedSubject());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings,\n\t\t\t\"emailArticleApprovalGrantedBody\",\n\t\t\tjournalGroupServiceConfiguration.emailArticleApprovalGrantedBody());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings,\n\t\t\t\"emailArticleApprovalGrantedSubject\",\n\t\t\tjournalGroupServiceConfiguration.\n\t\t\t\temailArticleApprovalGrantedSubject());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings,\n\t\t\t\"emailArticleApprovalRequestedBody\",\n\t\t\tjournalGroupServiceConfiguration.\n\t\t\t\temailArticleApprovalRequestedBody());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings,\n\t\t\t\"emailArticleApprovalRequestedSubject\",\n\t\t\tjournalGroupServiceConfiguration.\n\t\t\t\temailArticleApprovalRequestedSubject());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings,\n\t\t\t\"emailArticleMovedFromFolderBody\",\n\t\t\tjournalGroupServiceConfiguration.emailArticleMovedFromFolderBody());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings,\n\t\t\t\"emailArticleMovedFromFolderSubject\",\n\t\t\tjournalGroupServiceConfiguration.\n\t\t\t\temailArticleMovedFromFolderSubject());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings, \"emailArticleMovedToFolderBody\",\n\t\t\tjournalGroupServiceConfiguration.emailArticleMovedToFolderBody());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings,\n\t\t\t\"emailArticleMovedToFolderSubject\",\n\t\t\tjournalGroupServiceConfiguration.\n\t\t\t\temailArticleMovedToFolderSubject());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings, \"emailArticleReviewBody\",\n\t\t\tjournalGroupServiceConfiguration.emailArticleReviewBody());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings, \"emailArticleReviewSubject\",\n\t\t\tjournalGroupServiceConfiguration.emailArticleReviewSubject());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings, \"emailArticleUpdatedBody\",\n\t\t\tjournalGroupServiceConfiguration.emailArticleUpdatedBody());\n\t\tremoveDefaultValue(\n\t\t\tportletRequest, modifiableSettings, \"emailArticleUpdatedSubject\",\n\t\t\tjournalGroupServiceConfiguration.emailArticleUpdatedSubject());\n\t}","commit_id":"bb679d659ffdd73d1b7a6a9bad315069ed22c33f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public JournalGroupServiceConfiguration\n\t\tgetJournalGroupServiceConfiguration() {\n\n\t\ttry {\n\t\t\tif (_journalGroupServiceConfiguration == null) {\n\t\t\t\tThemeDisplay themeDisplay = (ThemeDisplay)_request.getAttribute(\n\t\t\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\t\t\tPortletDisplay portletDisplay =\n\t\t\t\t\tthemeDisplay.getPortletDisplay();\n\n\t\t\t\tString portletResource = portletDisplay.getPortletResource();\n\n\t\t\t\tlong siteGroupId = themeDisplay.getSiteGroupId();\n\n\t\t\t\tJournalServiceComponentProvider journalWebComponentProvider =\n\t\t\t\t\tJournalServiceComponentProvider.\n\t\t\t\t\t\tgetJournalServiceComponentProvider();\n\n\t\t\t\tSettingsFactory settingsFactory =\n\t\t\t\t\tjournalWebComponentProvider.getSettingsFactory();\n\n\t\t\t\tif (Validator.isNotNull(portletResource)) {\n\t\t\t\t\t_journalGroupServiceConfiguration =\n\t\t\t\t\t\tsettingsFactory.getSettings(\n\t\t\t\t\t\t\tJournalGroupServiceConfiguration.class,\n\t\t\t\t\t\tnew ParameterMapSettingsLocator(\n\t\t\t\t\t\t\t_request.getParameterMap(),\n\t\t\t\t\t\t\tnew GroupServiceSettingsLocator(\n\t\t\t\t\t\t\t\tsiteGroupId, JournalConstants.SERVICE_NAME)));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t_journalGroupServiceConfiguration =\n\t\t\t\t\t\tsettingsFactory.getSettings(\n\t\t\t\t\t\t\tJournalGroupServiceConfiguration.class,\n\t\t\t\t\t\tnew GroupServiceSettingsLocator(\n\t\t\t\t\t\t\tsiteGroupId, JournalConstants.SERVICE_NAME));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn _journalGroupServiceConfiguration;\n\t\t}\n\t\tcatch (PortalException pe) {\n\t\t\tthrow new SystemException(pe);\n\t\t}\n\t}","id":52091,"modified_method":"public JournalGroupServiceConfiguration\n\t\tgetJournalGroupServiceConfiguration() {\n\n\t\ttry {\n\t\t\tif (_journalGroupServiceConfiguration == null) {\n\t\t\t\tThemeDisplay themeDisplay = (ThemeDisplay)_request.getAttribute(\n\t\t\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\t\t\tPortletDisplay portletDisplay =\n\t\t\t\t\tthemeDisplay.getPortletDisplay();\n\n\t\t\t\tJournalServiceComponentProvider journalWebComponentProvider =\n\t\t\t\t\tJournalServiceComponentProvider.\n\t\t\t\t\t\tgetJournalServiceComponentProvider();\n\n\t\t\t\tSettingsFactory settingsFactory =\n\t\t\t\t\tjournalWebComponentProvider.getSettingsFactory();\n\n\t\t\t\tif (Validator.isNotNull(portletDisplay.getPortletResource())) {\n\t\t\t\t\t_journalGroupServiceConfiguration =\n\t\t\t\t\t\tsettingsFactory.getSettings(\n\t\t\t\t\t\t\tJournalGroupServiceConfiguration.class,\n\t\t\t\t\t\tnew ParameterMapSettingsLocator(\n\t\t\t\t\t\t\t_request.getParameterMap(),\n\t\t\t\t\t\t\tnew GroupServiceSettingsLocator(\n\t\t\t\t\t\t\t\tthemeDisplay.getSiteGroupId(),\n\t\t\t\t\t\t\t\tJournalConstants.SERVICE_NAME)));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t_journalGroupServiceConfiguration =\n\t\t\t\t\t\tsettingsFactory.getSettings(\n\t\t\t\t\t\t\tJournalGroupServiceConfiguration.class,\n\t\t\t\t\t\t\tnew GroupServiceSettingsLocator(\n\t\t\t\t\t\t\t\tthemeDisplay.getSiteGroupId(),\n\t\t\t\t\t\t\t\tJournalConstants.SERVICE_NAME));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn _journalGroupServiceConfiguration;\n\t\t}\n\t\tcatch (PortalException pe) {\n\t\t\tthrow new SystemException(pe);\n\t\t}\n\t}","commit_id":"bb679d659ffdd73d1b7a6a9bad315069ed22c33f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _doPreparePortlet(HttpServletRequest request, Portlet portlet)\n\t\tthrows Exception {\n\n\t\tUser user = PortalUtil.getUser(request);\n\t\tLayout layout = (Layout)request.getAttribute(WebKeys.LAYOUT);\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong scopeGroupId = PortalUtil.getScopeGroupId(\n\t\t\trequest, portlet.getPortletId());\n\t\tlong siteGroupId = PortalUtil.getSiteGroupId(scopeGroupId);\n\n\t\tthemeDisplay.setScopeGroupId(scopeGroupId);\n\t\tthemeDisplay.setSiteGroupId(siteGroupId);\n\n\t\tif (user != null) {\n\t\t\tHttpSession session = request.getSession();\n\n\t\t\tInvokerPortletImpl.clearResponse(\n\t\t\t\tsession, layout.getPrimaryKey(), portlet.getPortletId(),\n\t\t\t\tLanguageUtil.getLanguageId(request));\n\t\t}\n\n\t\tprocessPublicRenderParameters(request, layout, portlet);\n\n\t\tif (themeDisplay.isLifecycleRender() ||\n\t\t\tthemeDisplay.isLifecycleResource()) {\n\n\t\t\tWindowState windowState = WindowStateFactory.getWindowState(\n\t\t\t\tParamUtil.getString(request, \"p_p_state\"));\n\n\t\t\tif (layout.isTypeControlPanel() &&\n\t\t\t\t((windowState == null) ||\n\t\t\t\t windowState.equals(WindowState.NORMAL) ||\n\t\t\t\t Validator.isNull(windowState.toString()))) {\n\n\t\t\t\twindowState = WindowState.MAXIMIZED;\n\t\t\t}\n\n\t\t\tPortletMode portletMode = PortletModeFactory.getPortletMode(\n\t\t\t\tParamUtil.getString(request, \"p_p_mode\"));\n\n\t\t\tPortalUtil.updateWindowState(\n\t\t\t\tportlet.getPortletId(), user, layout, windowState, request);\n\n\t\t\tPortalUtil.updatePortletMode(\n\t\t\t\tportlet.getPortletId(), user, layout, portletMode, request);\n\t\t}\n\t}","id":52092,"modified_method":"private void _doPreparePortlet(HttpServletRequest request, Portlet portlet)\n\t\tthrows Exception {\n\n\t\tUser user = PortalUtil.getUser(request);\n\t\tLayout layout = (Layout)request.getAttribute(WebKeys.LAYOUT);\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong scopeGroupId = PortalUtil.getScopeGroupId(\n\t\t\trequest, portlet.getPortletId());\n\n\t\tlong siteGroupId = 0;\n\n\t\tif (layout.isTypeControlPanel()) {\n\t\t\tsiteGroupId = PortalUtil.getSiteGroupId(scopeGroupId);\n\t\t}\n\t\telse {\n\t\t\tsiteGroupId = PortalUtil.getSiteGroupId(layout.getGroupId());\n\t\t}\n\n\t\tthemeDisplay.setScopeGroupId(scopeGroupId);\n\t\tthemeDisplay.setSiteGroupId(siteGroupId);\n\n\t\tif (user != null) {\n\t\t\tHttpSession session = request.getSession();\n\n\t\t\tInvokerPortletImpl.clearResponse(\n\t\t\t\tsession, layout.getPrimaryKey(), portlet.getPortletId(),\n\t\t\t\tLanguageUtil.getLanguageId(request));\n\t\t}\n\n\t\tprocessPublicRenderParameters(request, layout, portlet);\n\n\t\tif (themeDisplay.isLifecycleRender() ||\n\t\t\tthemeDisplay.isLifecycleResource()) {\n\n\t\t\tWindowState windowState = WindowStateFactory.getWindowState(\n\t\t\t\tParamUtil.getString(request, \"p_p_state\"));\n\n\t\t\tif (layout.isTypeControlPanel() &&\n\t\t\t\t((windowState == null) ||\n\t\t\t\t windowState.equals(WindowState.NORMAL) ||\n\t\t\t\t Validator.isNull(windowState.toString()))) {\n\n\t\t\t\twindowState = WindowState.MAXIMIZED;\n\t\t\t}\n\n\t\t\tPortletMode portletMode = PortletModeFactory.getPortletMode(\n\t\t\t\tParamUtil.getString(request, \"p_p_mode\"));\n\n\t\t\tPortalUtil.updateWindowState(\n\t\t\t\tportlet.getPortletId(), user, layout, windowState, request);\n\n\t\t\tPortalUtil.updatePortletMode(\n\t\t\t\tportlet.getPortletId(), user, layout, portletMode, request);\n\t\t}\n\t}","commit_id":"570232326d3c4e31c40a6cc1f0c6e1a40345857d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public ThemeDisplay initThemeDisplay(\n\t\t\tHttpServletRequest request, HttpServletResponse response)\n\t\tthrows Exception {\n\n\t\tHttpSession session = request.getSession();\n\n\t\t// Company\n\n\t\tCompany company = PortalUtil.getCompany(request);\n\n\t\tlong companyId = company.getCompanyId();\n\n\t\t// CDN host\n\n\t\tString cdnHost = PortalUtil.getCDNHost(request);\n\n\t\tString dynamicResourcesCDNHost = StringPool.BLANK;\n\n\t\tboolean cdnDynamicResourceEnabled =\n\t\t\tPortalUtil.isCDNDynamicResourcesEnabled(request);\n\n\t\tif (cdnDynamicResourceEnabled) {\n\t\t\tdynamicResourcesCDNHost = cdnHost;\n\t\t}\n\n\t\t// Portal URL\n\n\t\tString portalURL = PortalUtil.getPortalURL(request);\n\n\t\t// Paths\n\n\t\tString contextPath = PortalUtil.getPathContext();\n\t\tString friendlyURLPrivateGroupPath =\n\t\t\tPortalUtil.getPathFriendlyURLPrivateGroup();\n\t\tString friendlyURLPrivateUserPath =\n\t\t\tPortalUtil.getPathFriendlyURLPrivateUser();\n\t\tString friendlyURLPublicPath = PortalUtil.getPathFriendlyURLPublic();\n\t\tString imagePath = dynamicResourcesCDNHost.concat(\n\t\t\tPortalUtil.getPathImage());\n\t\tString mainPath = PortalUtil.getPathMain();\n\n\t\tString i18nPath = (String)request.getAttribute(WebKeys.I18N_PATH);\n\n\t\tif (Validator.isNotNull(i18nPath)) {\n\t\t\tif (Validator.isNotNull(contextPath)) {\n\t\t\t\tString i18nContextPath = contextPath.concat(i18nPath);\n\n\t\t\t\tfriendlyURLPrivateGroupPath = StringUtil.replaceFirst(\n\t\t\t\t\tfriendlyURLPrivateGroupPath, contextPath, i18nContextPath);\n\t\t\t\tfriendlyURLPrivateUserPath = StringUtil.replaceFirst(\n\t\t\t\t\tfriendlyURLPrivateUserPath, contextPath, i18nContextPath);\n\t\t\t\tfriendlyURLPublicPath = StringUtil.replaceFirst(\n\t\t\t\t\tfriendlyURLPublicPath, contextPath, i18nContextPath);\n\t\t\t\tmainPath = StringUtil.replaceFirst(\n\t\t\t\t\tmainPath, contextPath, i18nContextPath);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfriendlyURLPrivateGroupPath = i18nPath.concat(\n\t\t\t\t\tfriendlyURLPrivateGroupPath);\n\t\t\t\tfriendlyURLPrivateUserPath = i18nPath.concat(\n\t\t\t\t\tfriendlyURLPrivateUserPath);\n\t\t\t\tfriendlyURLPublicPath = i18nPath.concat(friendlyURLPublicPath);\n\t\t\t\tmainPath = i18nPath.concat(mainPath);\n\t\t\t}\n\t\t}\n\n\t\t// Company logo\n\n\t\tStringBundler sb = new StringBundler(5);\n\n\t\tsb.append(imagePath);\n\t\tsb.append(\"/company_logo?img_id=\");\n\t\tsb.append(company.getLogoId());\n\t\tsb.append(\"&t=\");\n\t\tsb.append(WebServerServletTokenUtil.getToken(company.getLogoId()));\n\n\t\tString companyLogo = sb.toString();\n\n\t\tint companyLogoHeight = 0;\n\t\tint companyLogoWidth = 0;\n\n\t\tImage companyLogoImage = null;\n\n\t\tif (company.getLogoId() > 0) {\n\t\t\tcompanyLogoImage = ImageLocalServiceUtil.getCompanyLogo(\n\t\t\t\tcompany.getLogoId());\n\t\t}\n\t\telse {\n\t\t\tcompanyLogoImage = ImageToolUtil.getDefaultCompanyLogo();\n\t\t}\n\n\t\tif (companyLogoImage != null) {\n\t\t\tcompanyLogoHeight = companyLogoImage.getHeight();\n\t\t\tcompanyLogoWidth = companyLogoImage.getWidth();\n\t\t}\n\n\t\tString realCompanyLogo = companyLogo;\n\t\tint realCompanyLogoHeight = companyLogoHeight;\n\t\tint realCompanyLogoWidth = companyLogoWidth;\n\n\t\t// User\n\n\t\tUser user = null;\n\n\t\ttry {\n\t\t\tuser = PortalUtil.initUser(request);\n\t\t}\n\t\tcatch (NoSuchUserException nsue) {\n\t\t\treturn null;\n\t\t}\n\n\t\tboolean signedIn = !user.isDefaultUser();\n\n\t\tif (PropsValues.BROWSER_CACHE_DISABLED ||\n\t\t\t(PropsValues.BROWSER_CACHE_SIGNED_IN_DISABLED && signedIn)) {\n\n\t\t\tresponse.setDateHeader(HttpHeaders.EXPIRES, 0);\n\t\t\tresponse.setHeader(\n\t\t\t\tHttpHeaders.CACHE_CONTROL,\n\t\t\t\tHttpHeaders.CACHE_CONTROL_NO_CACHE_VALUE);\n\t\t\tresponse.setHeader(\n\t\t\t\tHttpHeaders.PRAGMA, HttpHeaders.PRAGMA_NO_CACHE_VALUE);\n\t\t}\n\n\t\tUser realUser = user;\n\n\t\tLong realUserId = (Long)session.getAttribute(WebKeys.USER_ID);\n\n\t\tif (realUserId != null) {\n\t\t\tif (user.getUserId() != realUserId.longValue()) {\n\t\t\t\trealUser = UserLocalServiceUtil.getUserById(\n\t\t\t\t\trealUserId.longValue());\n\t\t\t}\n\t\t}\n\n\t\tString doAsUserId = ParamUtil.getString(request, \"doAsUserId\");\n\t\tString doAsUserLanguageId = ParamUtil.getString(\n\t\t\trequest, \"doAsUserLanguageId\");\n\t\tlong doAsGroupId = ParamUtil.getLong(request, \"doAsGroupId\");\n\n\t\tlong refererGroupId = ParamUtil.getLong(request, \"refererGroupId\");\n\n\t\tlong refererPlid = ParamUtil.getLong(request, \"refererPlid\");\n\n\t\tif (LayoutLocalServiceUtil.fetchLayout(refererPlid) == null) {\n\t\t\trefererPlid = 0;\n\t\t}\n\n\t\tString controlPanelCategory = ParamUtil.getString(\n\t\t\trequest, \"controlPanelCategory\");\n\n\t\t// Permission checker\n\n\t\tPermissionChecker permissionChecker =\n\t\t\tPermissionCheckerFactoryUtil.create(user);\n\n\t\tPermissionThreadLocal.setPermissionChecker(permissionChecker);\n\n\t\t// Cookie support\n\n\t\ttry {\n\n\t\t\t// LEP-4069\n\n\t\t\tCookieKeys.validateSupportCookie(request);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tCookieKeys.addSupportCookie(request, response);\n\t\t}\n\n\t\t// Time zone\n\n\t\tTimeZone timeZone = user.getTimeZone();\n\n\t\tif (timeZone == null) {\n\t\t\ttimeZone = company.getTimeZone();\n\t\t}\n\n\t\t// Layouts\n\n\t\tif (signedIn) {\n\t\t\tupdateUserLayouts(user);\n\t\t}\n\n\t\tLayout layout = null;\n\t\tList<Layout> layouts = null;\n\n\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\n\t\tboolean viewableSourceGroup = true;\n\n\t\tif (plid > 0) {\n\t\t\tlayout = LayoutLocalServiceUtil.getLayout(plid);\n\n\t\t\tlong sourceGroupId = ParamUtil.getLong(request, \"p_v_l_s_g_id\");\n\n\t\t\tif ((sourceGroupId > 0) && (sourceGroupId != layout.getGroupId())) {\n\t\t\t\tGroup sourceGroup = GroupLocalServiceUtil.getGroup(\n\t\t\t\t\tsourceGroupId);\n\n\t\t\t\tif (layout.isPublicLayout() ||\n\t\t\t\t\tSitesUtil.isUserGroupLayoutSetViewable(\n\t\t\t\t\t\tpermissionChecker, layout.getGroup())) {\n\n\t\t\t\t\tlayout = new VirtualLayout(layout, sourceGroup);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tviewableSourceGroup = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlong groupId = ParamUtil.getLong(request, \"groupId\");\n\t\t\tboolean privateLayout = ParamUtil.getBoolean(\n\t\t\t\trequest, \"privateLayout\");\n\t\t\tlong layoutId = ParamUtil.getLong(request, \"layoutId\");\n\n\t\t\tif ((groupId > 0) && (layoutId > 0)) {\n\t\t\t\tlayout = LayoutLocalServiceUtil.getLayout(\n\t\t\t\t\tgroupId, privateLayout, layoutId);\n\t\t\t}\n\t\t}\n\n\t\tString ppid = ParamUtil.getString(request, \"p_p_id\");\n\n\t\tBoolean redirectToDefaultLayout = (Boolean)request.getAttribute(\n\t\t\tWebKeys.REDIRECT_TO_DEFAULT_LAYOUT);\n\n\t\tif (redirectToDefaultLayout == null) {\n\t\t\tredirectToDefaultLayout = Boolean.FALSE;\n\t\t}\n\n\t\tif (layout != null) {\n\t\t\tGroup group = layout.getGroup();\n\n\t\t\tif (!signedIn && PropsValues.AUTH_FORWARD_BY_REDIRECT) {\n\t\t\t\trequest.setAttribute(WebKeys.REQUESTED_LAYOUT, layout);\n\t\t\t}\n\n\t\t\tif ((Validator.isNull(controlPanelCategory) ||\n\t\t\t\t controlPanelCategory.equals(PortletCategoryKeys.MY) ||\n\t\t\t\t controlPanelCategory.equals(PortletCategoryKeys.PORTLET)) &&\n\t\t\t\tValidator.isNotNull(ppid) &&\n\t\t\t\t(LiferayWindowState.isPopUp(request) ||\n\t\t\t\t LiferayWindowState.isExclusive(request))) {\n\n\t\t\t\tcontrolPanelCategory = PortletCategoryKeys.PORTLET;\n\t\t\t}\n\t\t\telse if (Validator.isNotNull(ppid)) {\n\t\t\t\tPortlet portlet = PortletLocalServiceUtil.getPortletById(\n\t\t\t\t\tcompanyId, ppid);\n\n\t\t\t\tString portletControlPanelEntryCategory =\n\t\t\t\t\tportlet.getControlPanelEntryCategory();\n\n\t\t\t\tif (!controlPanelCategory.startsWith(\n\t\t\t\t\t\tPortletCategoryKeys.CURRENT_SITE) &&\n\t\t\t\t\tportletControlPanelEntryCategory.startsWith(\n\t\t\t\t\t\tPortletCategoryKeys.SITE_ADMINISTRATION)) {\n\n\t\t\t\t\tportletControlPanelEntryCategory =\n\t\t\t\t\t\tPortletCategoryKeys.SITES;\n\t\t\t\t}\n\n\t\t\t\tif (!controlPanelCategory.startsWith(\n\t\t\t\t\t\tPortletCategoryKeys.CURRENT_SITE) &&\n\t\t\t\t\tValidator.isNotNull(portletControlPanelEntryCategory)) {\n\n\t\t\t\t\tcontrolPanelCategory = portletControlPanelEntryCategory;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tboolean viewableGroup = hasAccessPermission(\n\t\t\t\tpermissionChecker, layout, doAsGroupId, controlPanelCategory,\n\t\t\t\ttrue);\n\t\t\tboolean viewableStaging =\n\t\t\t\t!group.isControlPanel() &&\n\t\t\t\tGroupPermissionUtil.contains(\n\t\t\t\t\tpermissionChecker, group, ActionKeys.VIEW_STAGING);\n\n\t\t\tif (viewableStaging) {\n\t\t\t\tlayouts = LayoutLocalServiceUtil.getLayouts(\n\t\t\t\t\tlayout.getGroupId(), layout.isPrivateLayout(),\n\t\t\t\t\tLayoutConstants.DEFAULT_PARENT_LAYOUT_ID);\n\t\t\t}\n\t\t\telse if ((!viewableGroup || !viewableSourceGroup) &&\n\t\t\t\t\t group.isStagingGroup()) {\n\n\t\t\t\tlayout = null;\n\t\t\t}\n\t\t\telse if (!isLoginRequest(request) &&\n\t\t\t\t\t (!viewableGroup || !viewableSourceGroup ||\n\t\t\t\t\t  (!redirectToDefaultLayout &&\n\t\t\t\t\t   !hasAccessPermission(\n\t\t\t\t\t\t   permissionChecker, layout, doAsGroupId,\n\t\t\t\t\t\t   controlPanelCategory, false)))) {\n\n\t\t\t\tif (user.isDefaultUser() &&\n\t\t\t\t\tPropsValues.AUTH_LOGIN_PROMPT_ENABLED) {\n\n\t\t\t\t\tthrow new PrincipalException(\"User is not authenticated\");\n\t\t\t\t}\n\n\t\t\t\tsb = new StringBundler(6);\n\n\t\t\t\tsb.append(\"User \");\n\t\t\t\tsb.append(user.getUserId());\n\t\t\t\tsb.append(\" is not allowed to access the \");\n\t\t\t\tsb.append(layout.isPrivateLayout() ? \"private\": \"public\");\n\t\t\t\tsb.append(\" pages of group \");\n\t\t\t\tsb.append(layout.getGroupId());\n\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(sb.toString());\n\t\t\t\t}\n\n\t\t\t\tthrow new NoSuchLayoutException(sb.toString());\n\t\t\t}\n\t\t\telse if (isLoginRequest(request) && !viewableGroup) {\n\t\t\t\tlayout = null;\n\t\t\t}\n\t\t\telse if (group.isLayoutPrototype()) {\n\t\t\t\tlayouts = new ArrayList<Layout>();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlayouts = LayoutLocalServiceUtil.getLayouts(\n\t\t\t\t\tlayout.getGroupId(), layout.isPrivateLayout(),\n\t\t\t\t\tLayoutConstants.DEFAULT_PARENT_LAYOUT_ID);\n\n\t\t\t\tif (!group.isControlPanel()) {\n\t\t\t\t\tdoAsGroupId = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tList<Layout> unfilteredLayouts = layouts;\n\n\t\tif (layout == null) {\n\t\t\tObject[] defaultLayout = getDefaultLayout(request, user, signedIn);\n\n\t\t\tlayout = (Layout)defaultLayout[0];\n\t\t\tlayouts = (List<Layout>)defaultLayout[1];\n\n\t\t\trequest.setAttribute(WebKeys.LAYOUT_DEFAULT, Boolean.TRUE);\n\t\t}\n\n\t\tObject[] viewableLayouts = getViewableLayouts(\n\t\t\trequest, user, permissionChecker, layout, layouts, doAsGroupId,\n\t\t\tcontrolPanelCategory);\n\n\t\tString layoutSetLogo = null;\n\n\t\tlayout = (Layout)viewableLayouts[0];\n\t\tlayouts = (List<Layout>)viewableLayouts[1];\n\n\t\tGroup group = null;\n\n\t\tif (layout != null) {\n\t\t\tgroup = layout.getGroup();\n\n\t\t\tif (!group.isControlPanel()) {\n\t\t\t\trememberVisitedGroupIds(request, group.getGroupId());\n\t\t\t}\n\t\t}\n\n\t\tLayoutTypePortlet layoutTypePortlet = null;\n\n\t\tlayouts = mergeAdditionalLayouts(\n\t\t\trequest, user, permissionChecker, layout, layouts, doAsGroupId,\n\t\t\tcontrolPanelCategory);\n\n\t\tLayoutSet layoutSet = null;\n\n\t\tboolean hasCustomizeLayoutPermission = false;\n\t\tboolean hasDeleteLayoutPermission = false;\n\t\tboolean hasUpdateLayoutPermission = false;\n\n\t\tboolean customizedView = SessionParamUtil.getBoolean(\n\t\t\trequest, \"customized_view\", true);\n\n\t\tif (layout != null) {\n\t\t\tif (!layout.isTypeControlPanel()) {\n\t\t\t\thasCustomizeLayoutPermission = LayoutPermissionUtil.contains(\n\t\t\t\t\tpermissionChecker, layout, ActionKeys.CUSTOMIZE);\n\t\t\t\thasDeleteLayoutPermission = LayoutPermissionUtil.contains(\n\t\t\t\t\tpermissionChecker, layout, ActionKeys.DELETE);\n\t\t\t\thasUpdateLayoutPermission = LayoutPermissionUtil.contains(\n\t\t\t\t\tpermissionChecker, layout, ActionKeys.UPDATE);\n\t\t\t}\n\n\t\t\tlayoutSet = layout.getLayoutSet();\n\n\t\t\tif (company.isSiteLogo()) {\n\t\t\t\tlong logoId = 0;\n\n\t\t\t\tif (layoutSet.isLogo()) {\n\t\t\t\t\tlogoId = layoutSet.getLogoId();\n\n\t\t\t\t\tif (logoId == 0) {\n\t\t\t\t\t\tlogoId = layoutSet.getLiveLogoId();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tLayoutSet siblingLayoutSet =\n\t\t\t\t\t\tLayoutSetLocalServiceUtil.getLayoutSet(\n\t\t\t\t\t\t\tlayout.getGroupId(), !layout.isPrivateLayout());\n\n\t\t\t\t\tif (siblingLayoutSet.isLogo()) {\n\t\t\t\t\t\tlogoId = siblingLayoutSet.getLogoId();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (logoId > 0) {\n\t\t\t\t\tsb = new StringBundler(5);\n\n\t\t\t\t\tsb.append(imagePath);\n\t\t\t\t\tsb.append(\"/layout_set_logo?img_id=\");\n\t\t\t\t\tsb.append(logoId);\n\t\t\t\t\tsb.append(\"&t=\");\n\t\t\t\t\tsb.append(WebServerServletTokenUtil.getToken(logoId));\n\n\t\t\t\t\tlayoutSetLogo = sb.toString();\n\n\t\t\t\t\tImage layoutSetLogoImage =\n\t\t\t\t\t\tImageLocalServiceUtil.getCompanyLogo(logoId);\n\n\t\t\t\t\tcompanyLogo = layoutSetLogo;\n\t\t\t\t\tcompanyLogoHeight = layoutSetLogoImage.getHeight();\n\t\t\t\t\tcompanyLogoWidth = layoutSetLogoImage.getWidth();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplid = layout.getPlid();\n\n\t\t\t// Updates to shared layouts are not reflected until the next time\n\t\t\t// the user logs in because group layouts are cached in the session\n\n\t\t\tlayout = (Layout)layout.clone();\n\n\t\t\tlayoutTypePortlet = (LayoutTypePortlet)layout.getLayoutType();\n\n\t\t\tboolean customizable = layoutTypePortlet.isCustomizable();\n\n\t\t\tif (!customizable ||\n\t\t\t\tgroup.isLayoutPrototype() || group.isLayoutSetPrototype() ||\n\t\t\t\tgroup.isStagingGroup()) {\n\n\t\t\t\tcustomizedView = false;\n\t\t\t}\n\n\t\t\tlayoutTypePortlet.setCustomizedView(customizedView);\n\t\t\tlayoutTypePortlet.setUpdatePermission(hasUpdateLayoutPermission);\n\n\t\t\tif (signedIn && customizable && customizedView &&\n\t\t\t\thasCustomizeLayoutPermission) {\n\n\t\t\t\tPortalPreferences portalPreferences =\n\t\t\t\t\tPortletPreferencesFactoryUtil.getPortalPreferences(\n\t\t\t\t\t\tuser.getUserId(), true);\n\n\t\t\t\tlayoutTypePortlet.setPortalPreferences(portalPreferences);\n\t\t\t}\n\n\t\t\tLayoutClone layoutClone = LayoutCloneFactory.getInstance();\n\n\t\t\tif (layoutClone != null) {\n\t\t\t\tString typeSettings = layoutClone.get(request, plid);\n\n\t\t\t\tif (typeSettings != null) {\n\t\t\t\t\tUnicodeProperties typeSettingsProperties =\n\t\t\t\t\t\tnew UnicodeProperties(true);\n\n\t\t\t\t\ttypeSettingsProperties.load(typeSettings);\n\n\t\t\t\t\tString stateMax = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.STATE_MAX);\n\t\t\t\t\tString stateMin = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.STATE_MIN);\n\t\t\t\t\tString modeAbout = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.MODE_ABOUT);\n\t\t\t\t\tString modeConfig = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.MODE_CONFIG);\n\t\t\t\t\tString modeEdit = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.MODE_EDIT);\n\t\t\t\t\tString modeEditDefaults =\n\t\t\t\t\t\ttypeSettingsProperties.getProperty(\n\t\t\t\t\t\t\tLayoutTypePortletConstants.MODE_EDIT_DEFAULTS);\n\t\t\t\t\tString modeEditGuest = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.MODE_EDIT_GUEST);\n\t\t\t\t\tString modeHelp = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.MODE_HELP);\n\t\t\t\t\tString modePreview = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.MODE_PREVIEW);\n\t\t\t\t\tString modePrint = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.MODE_PRINT);\n\n\t\t\t\t\tlayoutTypePortlet.setStateMax(stateMax);\n\t\t\t\t\tlayoutTypePortlet.setStateMin(stateMin);\n\t\t\t\t\tlayoutTypePortlet.setModeAbout(modeAbout);\n\t\t\t\t\tlayoutTypePortlet.setModeConfig(modeConfig);\n\t\t\t\t\tlayoutTypePortlet.setModeEdit(modeEdit);\n\t\t\t\t\tlayoutTypePortlet.setModeEditDefaults(modeEditDefaults);\n\t\t\t\t\tlayoutTypePortlet.setModeEditGuest(modeEditGuest);\n\t\t\t\t\tlayoutTypePortlet.setModeHelp(modeHelp);\n\t\t\t\t\tlayoutTypePortlet.setModePreview(modePreview);\n\t\t\t\t\tlayoutTypePortlet.setModePrint(modePrint);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trequest.setAttribute(WebKeys.LAYOUT, layout);\n\t\t\trequest.setAttribute(WebKeys.LAYOUTS, layouts);\n\t\t}\n\n\t\t// Locale\n\n\t\tString i18nLanguageId = (String)request.getAttribute(\n\t\t\tWebKeys.I18N_LANGUAGE_ID);\n\n\t\tLocale locale = PortalUtil.getLocale(request, response, true);\n\n\t\t// Scope\n\n\t\tlong scopeGroupId = PortalUtil.getScopeGroupId(request);\n\n\t\tif ((scopeGroupId <= 0) && (doAsGroupId > 0)) {\n\t\t\tscopeGroupId = doAsGroupId;\n\t\t}\n\n\t\tlong siteGroupId = PortalUtil.getSiteGroupId(scopeGroupId);\n\n\t\t// Theme and color scheme\n\n\t\tTheme theme = null;\n\t\tColorScheme colorScheme = null;\n\n\t\tboolean wapTheme = BrowserSnifferUtil.isWap(request);\n\n\t\tif ((layout != null) && group.isControlPanel()) {\n\t\t\tString themeId = PrefsPropsUtil.getString(\n\t\t\t\tcompanyId, PropsKeys.CONTROL_PANEL_LAYOUT_REGULAR_THEME_ID);\n\t\t\tString colorSchemeId =\n\t\t\t\tColorSchemeFactoryUtil.getDefaultRegularColorSchemeId();\n\n\t\t\ttheme = ThemeLocalServiceUtil.getTheme(\n\t\t\t\tcompanyId, themeId, wapTheme);\n\t\t\tcolorScheme = ThemeLocalServiceUtil.getColorScheme(\n\t\t\t\tcompanyId, theme.getThemeId(), colorSchemeId, wapTheme);\n\n\t\t\tif (!wapTheme && theme.isWapTheme()) {\n\t\t\t\ttheme = ThemeLocalServiceUtil.getTheme(\n\t\t\t\t\tcompanyId,\n\t\t\t\t\tPropsValues.CONTROL_PANEL_LAYOUT_REGULAR_THEME_ID, false);\n\t\t\t\tcolorScheme = ThemeLocalServiceUtil.getColorScheme(\n\t\t\t\t\tcompanyId, theme.getThemeId(), colorSchemeId, false);\n\t\t\t}\n\n\t\t\trequest.setAttribute(WebKeys.THEME, theme);\n\t\t\trequest.setAttribute(WebKeys.COLOR_SCHEME, colorScheme);\n\t\t}\n\n\t\tboolean themeCssFastLoad = SessionParamUtil.getBoolean(\n\t\t\trequest, \"css_fast_load\", PropsValues.THEME_CSS_FAST_LOAD);\n\t\tboolean themeImagesFastLoad = SessionParamUtil.getBoolean(\n\t\t\trequest, \"images_fast_load\", PropsValues.THEME_IMAGES_FAST_LOAD);\n\n\t\tboolean themeJsBarebone = PropsValues.JAVASCRIPT_BAREBONE_ENABLED;\n\n\t\tif (themeJsBarebone) {\n\t\t\tif (signedIn) {\n\t\t\t\tthemeJsBarebone = false;\n\t\t\t}\n\t\t}\n\n\t\tboolean themeJsFastLoad = SessionParamUtil.getBoolean(\n\t\t\trequest, \"js_fast_load\", PropsValues.JAVASCRIPT_FAST_LOAD);\n\n\t\tString lifecycle = ParamUtil.getString(request, \"p_p_lifecycle\", \"0\");\n\n\t\tlifecycle = ParamUtil.getString(request, \"p_t_lifecycle\", lifecycle);\n\n\t\tboolean isolated = ParamUtil.getBoolean(request, \"p_p_isolated\");\n\n\t\tString facebookCanvasPageURL = (String)request.getAttribute(\n\t\t\tWebKeys.FACEBOOK_CANVAS_PAGE_URL);\n\n\t\tboolean widget = false;\n\n\t\tBoolean widgetObj = (Boolean)request.getAttribute(WebKeys.WIDGET);\n\n\t\tif (widgetObj != null) {\n\t\t\twidget = widgetObj.booleanValue();\n\t\t}\n\n\t\t// Theme display\n\n\t\tThemeDisplay themeDisplay = ThemeDisplayFactory.create();\n\n\t\tthemeDisplay.setRequest(request);\n\n\t\t// Set the CDN host, portal URL, and Facebook application ID first\n\t\t// because other methods (setLookAndFeel) depend on them being set\n\n\t\tthemeDisplay.setCDNHost(cdnHost);\n\t\tthemeDisplay.setCDNDynamicResourcesHost(dynamicResourcesCDNHost);\n\t\tthemeDisplay.setPortalURL(portalURL);\n\t\tthemeDisplay.setFacebookCanvasPageURL(facebookCanvasPageURL);\n\t\tthemeDisplay.setWidget(widget);\n\n\t\tthemeDisplay.setCompany(company);\n\t\tthemeDisplay.setCompanyLogo(companyLogo);\n\t\tthemeDisplay.setCompanyLogoHeight(companyLogoHeight);\n\t\tthemeDisplay.setCompanyLogoWidth(companyLogoWidth);\n\t\tthemeDisplay.setControlPanelCategory(controlPanelCategory);\n\t\tthemeDisplay.setDoAsGroupId(doAsGroupId);\n\t\tthemeDisplay.setDoAsUserId(doAsUserId);\n\t\tthemeDisplay.setDoAsUserLanguageId(doAsUserLanguageId);\n\t\tthemeDisplay.setI18nLanguageId(i18nLanguageId);\n\t\tthemeDisplay.setI18nPath(i18nPath);\n\t\tthemeDisplay.setIsolated(isolated);\n\t\tthemeDisplay.setLanguageId(LocaleUtil.toLanguageId(locale));\n\t\tthemeDisplay.setLayout(layout);\n\t\tthemeDisplay.setLayouts(layouts);\n\t\tthemeDisplay.setLayoutSet(layoutSet);\n\t\tthemeDisplay.setLayoutSetLogo(layoutSetLogo);\n\t\tthemeDisplay.setLayoutTypePortlet(layoutTypePortlet);\n\t\tthemeDisplay.setLifecycle(lifecycle);\n\t\tthemeDisplay.setLifecycleAction(lifecycle.equals(\"1\"));\n\t\tthemeDisplay.setLifecycleEvent(lifecycle.equals(\"3\"));\n\t\tthemeDisplay.setLifecycleRender(lifecycle.equals(\"0\"));\n\t\tthemeDisplay.setLifecycleResource(lifecycle.equals(\"2\"));\n\t\tthemeDisplay.setLocale(locale);\n\t\tthemeDisplay.setLookAndFeel(theme, colorScheme);\n\t\tthemeDisplay.setPathApplet(contextPath.concat(\"/applets\"));\n\t\tthemeDisplay.setPathCms(contextPath.concat(\"/cms\"));\n\t\tthemeDisplay.setPathContext(contextPath);\n\t\tthemeDisplay.setPathFlash(contextPath.concat(\"/flash\"));\n\t\tthemeDisplay.setPathFriendlyURLPrivateGroup(\n\t\t\tfriendlyURLPrivateGroupPath);\n\t\tthemeDisplay.setPathFriendlyURLPrivateUser(friendlyURLPrivateUserPath);\n\t\tthemeDisplay.setPathFriendlyURLPublic(friendlyURLPublicPath);\n\t\tthemeDisplay.setPathImage(imagePath);\n\t\tthemeDisplay.setPathJavaScript(contextPath.concat(\"/html/js\"));\n\t\tthemeDisplay.setPathMain(mainPath);\n\t\tthemeDisplay.setPathSound(contextPath.concat(\"/html/sound\"));\n\t\tthemeDisplay.setPermissionChecker(permissionChecker);\n\t\tthemeDisplay.setPlid(plid);\n\t\tthemeDisplay.setPpid(ppid);\n\t\tthemeDisplay.setRealCompanyLogo(realCompanyLogo);\n\t\tthemeDisplay.setRealCompanyLogoHeight(realCompanyLogoHeight);\n\t\tthemeDisplay.setRealCompanyLogoWidth(realCompanyLogoWidth);\n\t\tthemeDisplay.setRealUser(realUser);\n\t\tthemeDisplay.setRefererGroupId(refererGroupId);\n\t\tthemeDisplay.setRefererPlid(refererPlid);\n\t\tthemeDisplay.setScopeGroupId(scopeGroupId);\n\t\tthemeDisplay.setSecure(request.isSecure());\n\t\tthemeDisplay.setServerName(request.getServerName());\n\t\tthemeDisplay.setServerPort(request.getServerPort());\n\t\tthemeDisplay.setSignedIn(signedIn);\n\t\tthemeDisplay.setSiteDefaultLocale(\n\t\t\tPortalUtil.getSiteDefaultLocale(siteGroupId));\n\t\tthemeDisplay.setSiteGroupId(siteGroupId);\n\t\tthemeDisplay.setStateExclusive(LiferayWindowState.isExclusive(request));\n\t\tthemeDisplay.setStateMaximized(LiferayWindowState.isMaximized(request));\n\t\tthemeDisplay.setStatePopUp(LiferayWindowState.isPopUp(request));\n\t\tthemeDisplay.setThemeCssFastLoad(themeCssFastLoad);\n\t\tthemeDisplay.setThemeImagesFastLoad(themeImagesFastLoad);\n\t\tthemeDisplay.setThemeJsBarebone(themeJsBarebone);\n\t\tthemeDisplay.setThemeJsFastLoad(themeJsFastLoad);\n\t\tthemeDisplay.setTimeZone(timeZone);\n\t\tthemeDisplay.setUnfilteredLayouts(unfilteredLayouts);\n\t\tthemeDisplay.setUser(user);\n\n\t\t// Icons\n\n\t\tthemeDisplay.setShowAddContentIcon(false);\n\n\t\tboolean showControlPanelIcon = false;\n\n\t\tif (signedIn &&\n\t\t\tPortalPermissionUtil.contains(\n\t\t\t\tpermissionChecker, ActionKeys.VIEW_CONTROL_PANEL)) {\n\n\t\t\tshowControlPanelIcon = true;\n\t\t}\n\n\t\tthemeDisplay.setShowControlPanelIcon(showControlPanelIcon);\n\n\t\tthemeDisplay.setShowHomeIcon(true);\n\t\tthemeDisplay.setShowMyAccountIcon(signedIn);\n\t\tthemeDisplay.setShowPageSettingsIcon(hasDeleteLayoutPermission);\n\t\tthemeDisplay.setShowPortalIcon(true);\n\t\tthemeDisplay.setShowSignInIcon(!signedIn);\n\n\t\tboolean showSignOutIcon = signedIn;\n\n\t\tif (themeDisplay.isImpersonated()) {\n\t\t\tshowSignOutIcon = false;\n\t\t}\n\n\t\tthemeDisplay.setShowSignOutIcon(showSignOutIcon);\n\n\t\tthemeDisplay.setShowStagingIcon(false);\n\n\t\tboolean showSiteAdministrationIcon = false;\n\n\t\tif (signedIn &&\n\t\t\tGroupPermissionUtil.contains(\n\t\t\t\tpermissionChecker, group,\n\t\t\t\tActionKeys.VIEW_SITE_ADMINISTRATION)) {\n\n\t\t\tshowSiteAdministrationIcon = true;\n\t\t}\n\n\t\tthemeDisplay.setShowSiteAdministrationIcon(showSiteAdministrationIcon);\n\n\t\t// Session\n\n\t\tif (PropsValues.SESSION_ENABLE_URL_WITH_SESSION_ID &&\n\t\t\t!CookieKeys.hasSessionId(request)) {\n\n\t\t\tthemeDisplay.setAddSessionIdToURL(true);\n\t\t\tthemeDisplay.setSessionId(session.getId());\n\t\t}\n\n\t\t// URLs\n\n\t\tString urlControlPanel = friendlyURLPrivateGroupPath.concat(\n\t\t\tGroupConstants.CONTROL_PANEL_FRIENDLY_URL);\n\n\t\tif (Validator.isNotNull(doAsUserId)) {\n\t\t\turlControlPanel = HttpUtil.addParameter(\n\t\t\t\turlControlPanel, \"doAsUserId\", doAsUserId);\n\t\t}\n\n\t\tif (refererGroupId > 0) {\n\t\t\turlControlPanel = HttpUtil.addParameter(\n\t\t\t\turlControlPanel, \"refererGroupId\", refererGroupId);\n\t\t}\n\t\telse if (scopeGroupId > 0) {\n\t\t\tLayout refererLayout = LayoutLocalServiceUtil.fetchLayout(plid);\n\n\t\t\tif (refererLayout != null) {\n\t\t\t\tGroup refererLayoutGroup = refererLayout.getGroup();\n\n\t\t\t\tif (refererLayoutGroup.isUserGroup()) {\n\t\t\t\t\turlControlPanel = HttpUtil.addParameter(\n\t\t\t\t\t\turlControlPanel, \"refererGroupId\", scopeGroupId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (refererPlid > 0) {\n\t\t\turlControlPanel = HttpUtil.addParameter(\n\t\t\t\turlControlPanel, \"refererPlid\", refererPlid);\n\t\t}\n\t\telse if (plid > 0) {\n\t\t\turlControlPanel = HttpUtil.addParameter(\n\t\t\t\turlControlPanel, \"refererPlid\", plid);\n\t\t}\n\n\t\tif (themeDisplay.isAddSessionIdToURL()) {\n\t\t\turlControlPanel = PortalUtil.getURLWithSessionId(\n\t\t\t\turlControlPanel, session.getId());\n\t\t}\n\n\t\tthemeDisplay.setURLControlPanel(urlControlPanel);\n\n\t\tString currentURL = PortalUtil.getCurrentURL(request);\n\n\t\tthemeDisplay.setURLCurrent(currentURL);\n\n\t\tString urlHome = PortalUtil.getHomeURL(request);\n\n\t\tthemeDisplay.setURLHome(urlHome);\n\n\t\tString siteAdministrationURL = urlControlPanel;\n\n\t\tsiteAdministrationURL = HttpUtil.addParameter(\n\t\t\tsiteAdministrationURL, \"controlPanelCategory\",\n\t\t\tPortletCategoryKeys.CURRENT_SITE);\n\t\tsiteAdministrationURL = HttpUtil.addParameter(\n\t\t\tsiteAdministrationURL, \"doAsGroupId\", siteGroupId);\n\n\t\tthemeDisplay.setURLSiteAdministration(siteAdministrationURL);\n\n\t\tlong controlPanelPlid = PortalUtil.getControlPanelPlid(companyId);\n\n\t\tif (layout != null) {\n\t\t\tif (layout.isTypePortlet()) {\n\t\t\t\tboolean freeformLayout =\n\t\t\t\t\tlayoutTypePortlet.getLayoutTemplateId().equals(\"freeform\");\n\n\t\t\t\tthemeDisplay.setFreeformLayout(freeformLayout);\n\n\t\t\t\tif (hasUpdateLayoutPermission) {\n\t\t\t\t\tthemeDisplay.setShowAddContentIconPermission(true);\n\n\t\t\t\t\tif (!LiferayWindowState.isMaximized(request)) {\n\t\t\t\t\t\tthemeDisplay.setShowAddContentIcon(true);\n\t\t\t\t\t}\n\n\t\t\t\t\tthemeDisplay.setShowLayoutTemplatesIcon(true);\n\n\t\t\t\t\tif (!group.isUser()) {\n\t\t\t\t\t\tthemeDisplay.setShowPageCustomizationIcon(true);\n\t\t\t\t\t}\n\n\t\t\t\t\tthemeDisplay.setURLAddContent(\n\t\t\t\t\t\t\"Liferay.Dockbar.loadAddPanel();\");\n\t\t\t\t}\n\n\t\t\t\tif (hasCustomizeLayoutPermission && customizedView) {\n\t\t\t\t\tthemeDisplay.setShowAddContentIconPermission(true);\n\n\t\t\t\t\tif (!LiferayWindowState.isMaximized(request)) {\n\t\t\t\t\t\tthemeDisplay.setShowAddContentIcon(true);\n\t\t\t\t\t}\n\n\t\t\t\t\tthemeDisplay.setURLAddContent(\n\t\t\t\t\t\t\"Liferay.Dockbar.loadAddPanel();\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hasUpdateLayoutPermission) {\n\t\t\t\tthemeDisplay.setShowPageSettingsIcon(true);\n\n\t\t\t\tLiferayPortletURL pageSettingsURL = new PortletURLImpl(\n\t\t\t\t\trequest, PortletKeys.LAYOUTS_ADMIN, controlPanelPlid,\n\t\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\t\tpageSettingsURL.setDoAsGroupId(scopeGroupId);\n\t\t\t\tpageSettingsURL.setParameter(\n\t\t\t\t\t\"struts_action\", \"/layouts_admin/edit_layouts\");\n\n\t\t\t\tif (layout.isPrivateLayout()) {\n\t\t\t\t\tpageSettingsURL.setParameter(\"tabs1\", \"private-pages\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpageSettingsURL.setParameter(\"tabs1\", \"public-pages\");\n\t\t\t\t}\n\n\t\t\t\tpageSettingsURL.setParameter(\n\t\t\t\t\t\"groupId\", String.valueOf(scopeGroupId));\n\t\t\t\tpageSettingsURL.setParameter(\"selPlid\", String.valueOf(plid));\n\t\t\t\tpageSettingsURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\t\tif (PropsValues.DOCKBAR_ADMINISTRATIVE_LINKS_SHOW_IN_POP_UP) {\n\t\t\t\t\tpageSettingsURL.setControlPanelCategory(\n\t\t\t\t\t\tPortletCategoryKeys.PORTLET);\n\t\t\t\t\tpageSettingsURL.setParameter(\"closeRedirect\", currentURL);\n\t\t\t\t\tpageSettingsURL.setWindowState(LiferayWindowState.POP_UP);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpageSettingsURL.setParameter(\n\t\t\t\t\t\t\"redirect\", themeDisplay.getURLHome());\n\t\t\t\t\tpageSettingsURL.setPlid(plid);\n\t\t\t\t\tpageSettingsURL.setWindowState(WindowState.MAXIMIZED);\n\t\t\t\t}\n\n\t\t\t\tthemeDisplay.setURLPageSettings(pageSettingsURL);\n\n\t\t\t\tboolean site = group.isSite();\n\n\t\t\t\tif (!site && group.isStagingGroup()) {\n\t\t\t\t\tGroup liveGroup = group.getLiveGroup();\n\n\t\t\t\t\tsite = liveGroup.isSite();\n\t\t\t\t}\n\n\t\t\t\tif (site &&\n\t\t\t\t\tGroupPermissionUtil.contains(\n\t\t\t\t\t\tpermissionChecker, scopeGroupId,\n\t\t\t\t\t\tActionKeys.ASSIGN_MEMBERS)) {\n\n\t\t\t\t\tthemeDisplay.setShowManageSiteMembershipsIcon(true);\n\n\t\t\t\t\tLiferayPortletURL manageSiteMembershipsURL =\n\t\t\t\t\t\tnew PortletURLImpl(\n\t\t\t\t\t\t\trequest, PortletKeys.SITE_MEMBERSHIPS_ADMIN,\n\t\t\t\t\t\t\tcontrolPanelPlid, PortletRequest.RENDER_PHASE);\n\n\t\t\t\t\tmanageSiteMembershipsURL.setDoAsGroupId(scopeGroupId);\n\t\t\t\t\tmanageSiteMembershipsURL.setParameter(\n\t\t\t\t\t\t\"struts_action\", \"/sites_admin/edit_site_assignments\");\n\t\t\t\t\tmanageSiteMembershipsURL.setParameter(\n\t\t\t\t\t\t\"groupId\", String.valueOf(scopeGroupId));\n\t\t\t\t\tmanageSiteMembershipsURL.setParameter(\n\t\t\t\t\t\t\"selPlid\", String.valueOf(plid));\n\t\t\t\t\tmanageSiteMembershipsURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\t\t\tif (PropsValues.\n\t\t\t\t\t\t\tDOCKBAR_ADMINISTRATIVE_LINKS_SHOW_IN_POP_UP) {\n\n\t\t\t\t\t\tmanageSiteMembershipsURL.setControlPanelCategory(\n\t\t\t\t\t\t\tPortletCategoryKeys.PORTLET);\n\t\t\t\t\t\tmanageSiteMembershipsURL.setWindowState(\n\t\t\t\t\t\t\tLiferayWindowState.POP_UP);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmanageSiteMembershipsURL.setParameter(\n\t\t\t\t\t\t\t\"redirect\", themeDisplay.getURLHome());\n\t\t\t\t\t\tmanageSiteMembershipsURL.setParameter(\n\t\t\t\t\t\t\t\"showBackURL\", Boolean.FALSE.toString());\n\t\t\t\t\t\tmanageSiteMembershipsURL.setPlid(plid);\n\t\t\t\t\t\tmanageSiteMembershipsURL.setWindowState(\n\t\t\t\t\t\t\tWindowState.MAXIMIZED);\n\t\t\t\t\t}\n\n\t\t\t\t\tthemeDisplay.setURLManageSiteMemberships(\n\t\t\t\t\t\tmanageSiteMembershipsURL);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthemeDisplay.setShowManageSiteMembershipsIcon(false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tGroup scopeGroup = GroupLocalServiceUtil.getGroup(scopeGroupId);\n\n\t\t\tboolean hasAddLayoutGroupPermission = GroupPermissionUtil.contains(\n\t\t\t\tpermissionChecker, scopeGroup, ActionKeys.ADD_LAYOUT);\n\t\t\tboolean hasAddLayoutLayoutPermission =\n\t\t\t\t!layout.isTypeControlPanel() &&\n\t\t\t\tLayoutPermissionUtil.contains(\n\t\t\t\t\tpermissionChecker, layout, ActionKeys.ADD_LAYOUT);\n\t\t\tboolean hasManageLayoutsGroupPermission =\n\t\t\t\tGroupPermissionUtil.contains(\n\t\t\t\t\tpermissionChecker, scopeGroup, ActionKeys.MANAGE_LAYOUTS);\n\t\t\tboolean hasManageStagingPermission = GroupPermissionUtil.contains(\n\t\t\t\tpermissionChecker, scopeGroup, ActionKeys.MANAGE_STAGING);\n\t\t\tboolean hasPublishStagingPermission = GroupPermissionUtil.contains(\n\t\t\t\tpermissionChecker, scopeGroup, ActionKeys.PUBLISH_STAGING);\n\t\t\tboolean hasUpdateGroupPermission = GroupPermissionUtil.contains(\n\t\t\t\tpermissionChecker, scopeGroup, ActionKeys.UPDATE);\n\t\t\tboolean hasViewStagingPermission = GroupPermissionUtil.contains(\n\t\t\t\tpermissionChecker, scopeGroup, ActionKeys.VIEW_STAGING);\n\n\t\t\tif (!group.isControlPanel() && !group.isUser() &&\n\t\t\t\t!group.isUserGroup() && hasUpdateGroupPermission) {\n\n\t\t\t\tthemeDisplay.setShowSiteSettingsIcon(true);\n\n\t\t\t\tLiferayPortletURL siteSettingsURL = new PortletURLImpl(\n\t\t\t\t\trequest, PortletKeys.SITE_SETTINGS, controlPanelPlid,\n\t\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\t\tsiteSettingsURL.setDoAsGroupId(scopeGroupId);\n\t\t\t\tsiteSettingsURL.setParameter(\n\t\t\t\t\t\"struts_action\", \"/sites_admin/edit_site\");\n\t\t\t\tsiteSettingsURL.setParameter(\n\t\t\t\t\t\"groupId\", String.valueOf(scopeGroupId));\n\t\t\t\tsiteSettingsURL.setParameter(\n\t\t\t\t\t\"showBackURL\", Boolean.FALSE.toString());\n\t\t\t\tsiteSettingsURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\t\tif (PropsValues.DOCKBAR_ADMINISTRATIVE_LINKS_SHOW_IN_POP_UP) {\n\t\t\t\t\tsiteSettingsURL.setControlPanelCategory(\n\t\t\t\t\t\tPortletCategoryKeys.PORTLET);\n\t\t\t\t\tsiteSettingsURL.setParameter(\"closeRedirect\", currentURL);\n\t\t\t\t\tsiteSettingsURL.setWindowState(LiferayWindowState.POP_UP);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsiteSettingsURL.setParameter(\n\t\t\t\t\t\t\"redirect\", themeDisplay.getURLHome());\n\t\t\t\t\tsiteSettingsURL.setPlid(plid);\n\t\t\t\t\tsiteSettingsURL.setWindowState(\n\t\t\t\t\t\tLiferayWindowState.MAXIMIZED);\n\t\t\t\t}\n\n\t\t\t\tthemeDisplay.setURLSiteSettings(siteSettingsURL);\n\t\t\t}\n\n\t\t\tif (!group.isLayoutPrototype() &&\n\t\t\t\t(hasAddLayoutGroupPermission || hasAddLayoutLayoutPermission ||\n\t\t\t\t hasManageLayoutsGroupPermission || hasUpdateGroupPermission)) {\n\n\t\t\t\tthemeDisplay.setShowSiteMapSettingsIcon(true);\n\n\t\t\t\tLiferayPortletURL siteMapSettingsURL = new PortletURLImpl(\n\t\t\t\t\trequest, PortletKeys.LAYOUTS_ADMIN, controlPanelPlid,\n\t\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\t\tsiteMapSettingsURL.setDoAsGroupId(scopeGroupId);\n\t\t\t\tsiteMapSettingsURL.setParameter(\n\t\t\t\t\t\"struts_action\", \"/layouts_admin/edit_layouts\");\n\n\t\t\t\tif (layout.isPrivateLayout()) {\n\t\t\t\t\tsiteMapSettingsURL.setParameter(\"tabs1\", \"private-pages\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsiteMapSettingsURL.setParameter(\"tabs1\", \"public-pages\");\n\t\t\t\t}\n\n\t\t\t\tsiteMapSettingsURL.setParameter(\n\t\t\t\t\t\"groupId\", String.valueOf(scopeGroupId));\n\t\t\t\tsiteMapSettingsURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\t\tif (PropsValues.DOCKBAR_ADMINISTRATIVE_LINKS_SHOW_IN_POP_UP) {\n\t\t\t\t\tsiteMapSettingsURL.setControlPanelCategory(\n\t\t\t\t\t\tPortletCategoryKeys.PORTLET);\n\t\t\t\t\tsiteMapSettingsURL.setParameter(\n\t\t\t\t\t\t\"closeRedirect\", currentURL);\n\t\t\t\t\tsiteMapSettingsURL.setWindowState(\n\t\t\t\t\t\tLiferayWindowState.POP_UP);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsiteMapSettingsURL.setParameter(\n\t\t\t\t\t\t\"redirect\", themeDisplay.getURLHome());\n\t\t\t\t\tsiteMapSettingsURL.setPlid(plid);\n\t\t\t\t\tsiteMapSettingsURL.setWindowState(\n\t\t\t\t\t\tLiferayWindowState.MAXIMIZED);\n\t\t\t\t}\n\n\t\t\t\tthemeDisplay.setURLSiteMapSettings(siteMapSettingsURL);\n\t\t\t}\n\n\t\t\tif (group.hasStagingGroup() && !group.isStagingGroup()) {\n\t\t\t\tthemeDisplay.setShowAddContentIcon(false);\n\t\t\t\tthemeDisplay.setShowLayoutTemplatesIcon(false);\n\t\t\t\tthemeDisplay.setURLPublishToLive(null);\n\t\t\t}\n\n\t\t\tif (group.isControlPanel()) {\n\t\t\t\tthemeDisplay.setShowPageSettingsIcon(false);\n\t\t\t\tthemeDisplay.setURLPublishToLive(null);\n\t\t\t}\n\n\t\t\t// LEP-4987\n\n\t\t\tif (group.isStaged() || group.isStagingGroup()) {\n\t\t\t\tif (hasManageStagingPermission || hasPublishStagingPermission ||\n\t\t\t\t\thasUpdateLayoutPermission || hasViewStagingPermission) {\n\n\t\t\t\t\tthemeDisplay.setShowStagingIcon(true);\n\t\t\t\t}\n\n\t\t\t\tif (hasPublishStagingPermission) {\n\t\t\t\t\tPortletURL publishToLiveURL = new PortletURLImpl(\n\t\t\t\t\t\trequest, PortletKeys.LAYOUTS_ADMIN, plid,\n\t\t\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\t\t\tpublishToLiveURL.setParameter(\n\t\t\t\t\t\t\"struts_action\", \"/layouts_admin/publish_layouts\");\n\n\t\t\t\t\tif (layout.isPrivateLayout()) {\n\t\t\t\t\t\tpublishToLiveURL.setParameter(\"tabs1\", \"private-pages\");\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpublishToLiveURL.setParameter(\"tabs1\", \"public-pages\");\n\t\t\t\t\t}\n\n\t\t\t\t\tpublishToLiveURL.setParameter(\"pagesRedirect\", currentURL);\n\t\t\t\t\tpublishToLiveURL.setParameter(\n\t\t\t\t\t\t\"groupId\", String.valueOf(scopeGroupId));\n\t\t\t\t\tpublishToLiveURL.setParameter(\n\t\t\t\t\t\t\"selPlid\", String.valueOf(plid));\n\t\t\t\t\tpublishToLiveURL.setPortletMode(PortletMode.VIEW);\n\t\t\t\t\tpublishToLiveURL.setWindowState(\n\t\t\t\t\t\tLiferayWindowState.EXCLUSIVE);\n\n\t\t\t\t\tthemeDisplay.setURLPublishToLive(publishToLiveURL);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tPortlet myAccountPortlet = PortalUtil.getFirstMyAccountPortlet(\n\t\t\t\tthemeDisplay);\n\n\t\t\tif (myAccountPortlet != null) {\n\t\t\t\tPortletURLImpl myAccountURL = new PortletURLImpl(\n\t\t\t\t\trequest, myAccountPortlet.getPortletName(),\n\t\t\t\t\tcontrolPanelPlid, PortletRequest.RENDER_PHASE);\n\n\t\t\t\tif (scopeGroupId > 0) {\n\t\t\t\t\tmyAccountURL.setDoAsGroupId(scopeGroupId);\n\t\t\t\t}\n\n\t\t\t\tif (refererPlid > 0) {\n\t\t\t\t\tmyAccountURL.setRefererPlid(refererPlid);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmyAccountURL.setRefererPlid(plid);\n\t\t\t\t}\n\n\t\t\t\tmyAccountURL.setWindowState(WindowState.MAXIMIZED);\n\n\t\t\t\tthemeDisplay.setURLMyAccount(myAccountURL);\n\t\t\t}\n\t\t}\n\n\t\tif (!user.isActive() ||\n\t\t\t(PrefsPropsUtil.getBoolean(\n\t\t\t\tcompanyId, PropsKeys.TERMS_OF_USE_REQUIRED) &&\n\t\t\t !user.isAgreedToTermsOfUse())) {\n\n\t\t\tthemeDisplay.setShowAddContentIcon(false);\n\t\t\tthemeDisplay.setShowMyAccountIcon(false);\n\t\t\tthemeDisplay.setShowPageSettingsIcon(false);\n\t\t}\n\n\t\tif ((layout != null) && layout.isLayoutPrototypeLinkActive()) {\n\t\t\tthemeDisplay.setShowPageCustomizationIcon(false);\n\t\t}\n\n\t\tif (group.isLayoutPrototype()) {\n\t\t\tthemeDisplay.setShowHomeIcon(false);\n\t\t\tthemeDisplay.setShowManageSiteMembershipsIcon(false);\n\t\t\tthemeDisplay.setShowMyAccountIcon(false);\n\t\t\tthemeDisplay.setShowPageCustomizationIcon(false);\n\t\t\tthemeDisplay.setShowPageSettingsIcon(true);\n\t\t\tthemeDisplay.setShowPortalIcon(false);\n\t\t\tthemeDisplay.setShowSignInIcon(false);\n\t\t\tthemeDisplay.setShowSignOutIcon(false);\n\t\t\tthemeDisplay.setShowSiteAdministrationIcon(false);\n\t\t\tthemeDisplay.setShowSiteSettingsIcon(false);\n\t\t\tthemeDisplay.setShowStagingIcon(false);\n\t\t}\n\n\t\tif (group.isLayoutSetPrototype()) {\n\t\t\tthemeDisplay.setShowPageCustomizationIcon(false);\n\t\t\tthemeDisplay.setShowSiteSettingsIcon(false);\n\t\t}\n\n\t\tif (group.hasStagingGroup() && !group.isStagingGroup()) {\n\t\t\tthemeDisplay.setShowLayoutTemplatesIcon(false);\n\t\t\tthemeDisplay.setShowPageCustomizationIcon(false);\n\t\t\tthemeDisplay.setShowSiteMapSettingsIcon(false);\n\t\t\tthemeDisplay.setShowSiteSettingsIcon(false);\n\t\t}\n\n\t\tthemeDisplay.setURLPortal(portalURL.concat(contextPath));\n\n\t\tboolean secure = false;\n\n\t\tif (PropsValues.COMPANY_SECURITY_AUTH_REQUIRES_HTTPS ||\n\t\t\trequest.isSecure()) {\n\n\t\t\tsecure = true;\n\t\t}\n\n\t\tString securePortalURL = PortalUtil.getPortalURL(request, secure);\n\n\t\tString urlSignIn = securePortalURL.concat(mainPath).concat(\n\t\t\t_PATH_PORTAL_LOGIN);\n\n\t\tif (layout != null) {\n\t\t\turlSignIn = HttpUtil.addParameter(\n\t\t\t\turlSignIn, \"p_l_id\", layout.getPlid());\n\t\t}\n\n\t\tthemeDisplay.setURLSignIn(urlSignIn);\n\n\t\tthemeDisplay.setURLSignOut(mainPath.concat(_PATH_PORTAL_LOGOUT));\n\n\t\tPortletURL updateManagerURL = new PortletURLImpl(\n\t\t\trequest, PortletKeys.MARKETPLACE_STORE, controlPanelPlid,\n\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\tthemeDisplay.setURLUpdateManager(updateManagerURL);\n\n\t\t// Control Panel redirects\n\n\t\tif (group.isControlPanel() && Validator.isNotNull(ppid)) {\n\t\t\tboolean switchGroup = ParamUtil.getBoolean(request, \"switchGroup\");\n\n\t\t\tif (switchGroup &&\n\t\t\t\t!PortletPermissionUtil.hasControlPanelAccessPermission(\n\t\t\t\t\tpermissionChecker, scopeGroupId, ppid)) {\n\n\t\t\t\tString redirect = HttpUtil.removeParameter(\n\t\t\t\t\tcurrentURL, \"p_p_id\");\n\n\t\t\t\tresponse.sendRedirect(redirect);\n\t\t\t}\n\t\t}\n\t\telse if (group.isControlPanel() && Validator.isNull(ppid)) {\n\t\t\tif (controlPanelCategory.startsWith(\n\t\t\t\t\tPortletCategoryKeys.CURRENT_SITE)) {\n\n\t\t\t\tif (controlPanelCategory.indexOf(StringPool.PERIOD) == -1) {\n\t\t\t\t\tcontrolPanelCategory = StringUtil.replace(\n\t\t\t\t\t\tcontrolPanelCategory, PortletCategoryKeys.CURRENT_SITE,\n\t\t\t\t\t\tPortletCategoryKeys.SITE_ADMINISTRATION);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcontrolPanelCategory = StringUtil.replace(\n\t\t\t\t\t\tcontrolPanelCategory,\n\t\t\t\t\t\tPortletCategoryKeys.CURRENT_SITE + StringPool.PERIOD,\n\t\t\t\t\t\tPortletCategoryKeys.SITE_ADMINISTRATION);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (controlPanelCategory.equals(\n\t\t\t\t\tPortletCategoryKeys.SITE_ADMINISTRATION)) {\n\n\t\t\t\tPortlet firstPortlet =\n\t\t\t\t\tPortalUtil.getFirstSiteAdministrationPortlet(themeDisplay);\n\n\t\t\t\tString redirect = HttpUtil.setParameter(\n\t\t\t\t\tcurrentURL, \"p_p_id\", firstPortlet.getPortletId());\n\n\t\t\t\tresponse.sendRedirect(\n\t\t\t\t\tPortalUtil.getAbsoluteURL(request, redirect));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tList<Portlet> portlets = PortalUtil.getControlPanelPortlets(\n\t\t\t\t\tcontrolPanelCategory, themeDisplay);\n\n\t\t\t\tPortlet firstPortlet = null;\n\n\t\t\t\tfor (Portlet portlet : portlets) {\n\t\t\t\t\tif (PortletPermissionUtil.hasControlPanelAccessPermission(\n\t\t\t\t\t\t\tpermissionChecker, scopeGroupId, portlet)) {\n\n\t\t\t\t\t\tfirstPortlet = portlet;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ((firstPortlet == null) &&\n\t\t\t\t\tcontrolPanelCategory.startsWith(\n\t\t\t\t\t\tPortletCategoryKeys.SITE_ADMINISTRATION)) {\n\n\t\t\t\t\tfirstPortlet = PortalUtil.getFirstSiteAdministrationPortlet(\n\t\t\t\t\t\tthemeDisplay);\n\t\t\t\t}\n\n\t\t\t\tif (firstPortlet != null) {\n\t\t\t\t\tString redirect = HttpUtil.setParameter(\n\t\t\t\t\t\tcurrentURL, \"p_p_id\", firstPortlet.getPortletId());\n\n\t\t\t\t\tresponse.sendRedirect(\n\t\t\t\t\t\tPortalUtil.getAbsoluteURL(request, redirect));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn themeDisplay;\n\t}","id":52093,"modified_method":"public ThemeDisplay initThemeDisplay(\n\t\t\tHttpServletRequest request, HttpServletResponse response)\n\t\tthrows Exception {\n\n\t\tHttpSession session = request.getSession();\n\n\t\t// Company\n\n\t\tCompany company = PortalUtil.getCompany(request);\n\n\t\tlong companyId = company.getCompanyId();\n\n\t\t// CDN host\n\n\t\tString cdnHost = PortalUtil.getCDNHost(request);\n\n\t\tString dynamicResourcesCDNHost = StringPool.BLANK;\n\n\t\tboolean cdnDynamicResourceEnabled =\n\t\t\tPortalUtil.isCDNDynamicResourcesEnabled(request);\n\n\t\tif (cdnDynamicResourceEnabled) {\n\t\t\tdynamicResourcesCDNHost = cdnHost;\n\t\t}\n\n\t\t// Portal URL\n\n\t\tString portalURL = PortalUtil.getPortalURL(request);\n\n\t\t// Paths\n\n\t\tString contextPath = PortalUtil.getPathContext();\n\t\tString friendlyURLPrivateGroupPath =\n\t\t\tPortalUtil.getPathFriendlyURLPrivateGroup();\n\t\tString friendlyURLPrivateUserPath =\n\t\t\tPortalUtil.getPathFriendlyURLPrivateUser();\n\t\tString friendlyURLPublicPath = PortalUtil.getPathFriendlyURLPublic();\n\t\tString imagePath = dynamicResourcesCDNHost.concat(\n\t\t\tPortalUtil.getPathImage());\n\t\tString mainPath = PortalUtil.getPathMain();\n\n\t\tString i18nPath = (String)request.getAttribute(WebKeys.I18N_PATH);\n\n\t\tif (Validator.isNotNull(i18nPath)) {\n\t\t\tif (Validator.isNotNull(contextPath)) {\n\t\t\t\tString i18nContextPath = contextPath.concat(i18nPath);\n\n\t\t\t\tfriendlyURLPrivateGroupPath = StringUtil.replaceFirst(\n\t\t\t\t\tfriendlyURLPrivateGroupPath, contextPath, i18nContextPath);\n\t\t\t\tfriendlyURLPrivateUserPath = StringUtil.replaceFirst(\n\t\t\t\t\tfriendlyURLPrivateUserPath, contextPath, i18nContextPath);\n\t\t\t\tfriendlyURLPublicPath = StringUtil.replaceFirst(\n\t\t\t\t\tfriendlyURLPublicPath, contextPath, i18nContextPath);\n\t\t\t\tmainPath = StringUtil.replaceFirst(\n\t\t\t\t\tmainPath, contextPath, i18nContextPath);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfriendlyURLPrivateGroupPath = i18nPath.concat(\n\t\t\t\t\tfriendlyURLPrivateGroupPath);\n\t\t\t\tfriendlyURLPrivateUserPath = i18nPath.concat(\n\t\t\t\t\tfriendlyURLPrivateUserPath);\n\t\t\t\tfriendlyURLPublicPath = i18nPath.concat(friendlyURLPublicPath);\n\t\t\t\tmainPath = i18nPath.concat(mainPath);\n\t\t\t}\n\t\t}\n\n\t\t// Company logo\n\n\t\tStringBundler sb = new StringBundler(5);\n\n\t\tsb.append(imagePath);\n\t\tsb.append(\"/company_logo?img_id=\");\n\t\tsb.append(company.getLogoId());\n\t\tsb.append(\"&t=\");\n\t\tsb.append(WebServerServletTokenUtil.getToken(company.getLogoId()));\n\n\t\tString companyLogo = sb.toString();\n\n\t\tint companyLogoHeight = 0;\n\t\tint companyLogoWidth = 0;\n\n\t\tImage companyLogoImage = null;\n\n\t\tif (company.getLogoId() > 0) {\n\t\t\tcompanyLogoImage = ImageLocalServiceUtil.getCompanyLogo(\n\t\t\t\tcompany.getLogoId());\n\t\t}\n\t\telse {\n\t\t\tcompanyLogoImage = ImageToolUtil.getDefaultCompanyLogo();\n\t\t}\n\n\t\tif (companyLogoImage != null) {\n\t\t\tcompanyLogoHeight = companyLogoImage.getHeight();\n\t\t\tcompanyLogoWidth = companyLogoImage.getWidth();\n\t\t}\n\n\t\tString realCompanyLogo = companyLogo;\n\t\tint realCompanyLogoHeight = companyLogoHeight;\n\t\tint realCompanyLogoWidth = companyLogoWidth;\n\n\t\t// User\n\n\t\tUser user = null;\n\n\t\ttry {\n\t\t\tuser = PortalUtil.initUser(request);\n\t\t}\n\t\tcatch (NoSuchUserException nsue) {\n\t\t\treturn null;\n\t\t}\n\n\t\tboolean signedIn = !user.isDefaultUser();\n\n\t\tif (PropsValues.BROWSER_CACHE_DISABLED ||\n\t\t\t(PropsValues.BROWSER_CACHE_SIGNED_IN_DISABLED && signedIn)) {\n\n\t\t\tresponse.setDateHeader(HttpHeaders.EXPIRES, 0);\n\t\t\tresponse.setHeader(\n\t\t\t\tHttpHeaders.CACHE_CONTROL,\n\t\t\t\tHttpHeaders.CACHE_CONTROL_NO_CACHE_VALUE);\n\t\t\tresponse.setHeader(\n\t\t\t\tHttpHeaders.PRAGMA, HttpHeaders.PRAGMA_NO_CACHE_VALUE);\n\t\t}\n\n\t\tUser realUser = user;\n\n\t\tLong realUserId = (Long)session.getAttribute(WebKeys.USER_ID);\n\n\t\tif (realUserId != null) {\n\t\t\tif (user.getUserId() != realUserId.longValue()) {\n\t\t\t\trealUser = UserLocalServiceUtil.getUserById(\n\t\t\t\t\trealUserId.longValue());\n\t\t\t}\n\t\t}\n\n\t\tString doAsUserId = ParamUtil.getString(request, \"doAsUserId\");\n\t\tString doAsUserLanguageId = ParamUtil.getString(\n\t\t\trequest, \"doAsUserLanguageId\");\n\t\tlong doAsGroupId = ParamUtil.getLong(request, \"doAsGroupId\");\n\n\t\tlong refererGroupId = ParamUtil.getLong(request, \"refererGroupId\");\n\n\t\tlong refererPlid = ParamUtil.getLong(request, \"refererPlid\");\n\n\t\tif (LayoutLocalServiceUtil.fetchLayout(refererPlid) == null) {\n\t\t\trefererPlid = 0;\n\t\t}\n\n\t\tString controlPanelCategory = ParamUtil.getString(\n\t\t\trequest, \"controlPanelCategory\");\n\n\t\t// Permission checker\n\n\t\tPermissionChecker permissionChecker =\n\t\t\tPermissionCheckerFactoryUtil.create(user);\n\n\t\tPermissionThreadLocal.setPermissionChecker(permissionChecker);\n\n\t\t// Cookie support\n\n\t\ttry {\n\n\t\t\t// LEP-4069\n\n\t\t\tCookieKeys.validateSupportCookie(request);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tCookieKeys.addSupportCookie(request, response);\n\t\t}\n\n\t\t// Time zone\n\n\t\tTimeZone timeZone = user.getTimeZone();\n\n\t\tif (timeZone == null) {\n\t\t\ttimeZone = company.getTimeZone();\n\t\t}\n\n\t\t// Layouts\n\n\t\tif (signedIn) {\n\t\t\tupdateUserLayouts(user);\n\t\t}\n\n\t\tLayout layout = null;\n\t\tList<Layout> layouts = null;\n\n\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\n\t\tboolean viewableSourceGroup = true;\n\n\t\tif (plid > 0) {\n\t\t\tlayout = LayoutLocalServiceUtil.getLayout(plid);\n\n\t\t\tlong sourceGroupId = ParamUtil.getLong(request, \"p_v_l_s_g_id\");\n\n\t\t\tif ((sourceGroupId > 0) && (sourceGroupId != layout.getGroupId())) {\n\t\t\t\tGroup sourceGroup = GroupLocalServiceUtil.getGroup(\n\t\t\t\t\tsourceGroupId);\n\n\t\t\t\tif (layout.isPublicLayout() ||\n\t\t\t\t\tSitesUtil.isUserGroupLayoutSetViewable(\n\t\t\t\t\t\tpermissionChecker, layout.getGroup())) {\n\n\t\t\t\t\tlayout = new VirtualLayout(layout, sourceGroup);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tviewableSourceGroup = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlong groupId = ParamUtil.getLong(request, \"groupId\");\n\t\t\tboolean privateLayout = ParamUtil.getBoolean(\n\t\t\t\trequest, \"privateLayout\");\n\t\t\tlong layoutId = ParamUtil.getLong(request, \"layoutId\");\n\n\t\t\tif ((groupId > 0) && (layoutId > 0)) {\n\t\t\t\tlayout = LayoutLocalServiceUtil.getLayout(\n\t\t\t\t\tgroupId, privateLayout, layoutId);\n\t\t\t}\n\t\t}\n\n\t\tString ppid = ParamUtil.getString(request, \"p_p_id\");\n\n\t\tBoolean redirectToDefaultLayout = (Boolean)request.getAttribute(\n\t\t\tWebKeys.REDIRECT_TO_DEFAULT_LAYOUT);\n\n\t\tif (redirectToDefaultLayout == null) {\n\t\t\tredirectToDefaultLayout = Boolean.FALSE;\n\t\t}\n\n\t\tif (layout != null) {\n\t\t\tGroup group = layout.getGroup();\n\n\t\t\tif (!signedIn && PropsValues.AUTH_FORWARD_BY_REDIRECT) {\n\t\t\t\trequest.setAttribute(WebKeys.REQUESTED_LAYOUT, layout);\n\t\t\t}\n\n\t\t\tif ((Validator.isNull(controlPanelCategory) ||\n\t\t\t\t controlPanelCategory.equals(PortletCategoryKeys.MY) ||\n\t\t\t\t controlPanelCategory.equals(PortletCategoryKeys.PORTLET)) &&\n\t\t\t\tValidator.isNotNull(ppid) &&\n\t\t\t\t(LiferayWindowState.isPopUp(request) ||\n\t\t\t\t LiferayWindowState.isExclusive(request))) {\n\n\t\t\t\tcontrolPanelCategory = PortletCategoryKeys.PORTLET;\n\t\t\t}\n\t\t\telse if (Validator.isNotNull(ppid)) {\n\t\t\t\tPortlet portlet = PortletLocalServiceUtil.getPortletById(\n\t\t\t\t\tcompanyId, ppid);\n\n\t\t\t\tString portletControlPanelEntryCategory =\n\t\t\t\t\tportlet.getControlPanelEntryCategory();\n\n\t\t\t\tif (!controlPanelCategory.startsWith(\n\t\t\t\t\t\tPortletCategoryKeys.CURRENT_SITE) &&\n\t\t\t\t\tportletControlPanelEntryCategory.startsWith(\n\t\t\t\t\t\tPortletCategoryKeys.SITE_ADMINISTRATION)) {\n\n\t\t\t\t\tportletControlPanelEntryCategory =\n\t\t\t\t\t\tPortletCategoryKeys.SITES;\n\t\t\t\t}\n\n\t\t\t\tif (!controlPanelCategory.startsWith(\n\t\t\t\t\t\tPortletCategoryKeys.CURRENT_SITE) &&\n\t\t\t\t\tValidator.isNotNull(portletControlPanelEntryCategory)) {\n\n\t\t\t\t\tcontrolPanelCategory = portletControlPanelEntryCategory;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tboolean viewableGroup = hasAccessPermission(\n\t\t\t\tpermissionChecker, layout, doAsGroupId, controlPanelCategory,\n\t\t\t\ttrue);\n\t\t\tboolean viewableStaging =\n\t\t\t\t!group.isControlPanel() &&\n\t\t\t\tGroupPermissionUtil.contains(\n\t\t\t\t\tpermissionChecker, group, ActionKeys.VIEW_STAGING);\n\n\t\t\tif (viewableStaging) {\n\t\t\t\tlayouts = LayoutLocalServiceUtil.getLayouts(\n\t\t\t\t\tlayout.getGroupId(), layout.isPrivateLayout(),\n\t\t\t\t\tLayoutConstants.DEFAULT_PARENT_LAYOUT_ID);\n\t\t\t}\n\t\t\telse if ((!viewableGroup || !viewableSourceGroup) &&\n\t\t\t\t\t group.isStagingGroup()) {\n\n\t\t\t\tlayout = null;\n\t\t\t}\n\t\t\telse if (!isLoginRequest(request) &&\n\t\t\t\t\t (!viewableGroup || !viewableSourceGroup ||\n\t\t\t\t\t  (!redirectToDefaultLayout &&\n\t\t\t\t\t   !hasAccessPermission(\n\t\t\t\t\t\t   permissionChecker, layout, doAsGroupId,\n\t\t\t\t\t\t   controlPanelCategory, false)))) {\n\n\t\t\t\tif (user.isDefaultUser() &&\n\t\t\t\t\tPropsValues.AUTH_LOGIN_PROMPT_ENABLED) {\n\n\t\t\t\t\tthrow new PrincipalException(\"User is not authenticated\");\n\t\t\t\t}\n\n\t\t\t\tsb = new StringBundler(6);\n\n\t\t\t\tsb.append(\"User \");\n\t\t\t\tsb.append(user.getUserId());\n\t\t\t\tsb.append(\" is not allowed to access the \");\n\t\t\t\tsb.append(layout.isPrivateLayout() ? \"private\": \"public\");\n\t\t\t\tsb.append(\" pages of group \");\n\t\t\t\tsb.append(layout.getGroupId());\n\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(sb.toString());\n\t\t\t\t}\n\n\t\t\t\tthrow new NoSuchLayoutException(sb.toString());\n\t\t\t}\n\t\t\telse if (isLoginRequest(request) && !viewableGroup) {\n\t\t\t\tlayout = null;\n\t\t\t}\n\t\t\telse if (group.isLayoutPrototype()) {\n\t\t\t\tlayouts = new ArrayList<Layout>();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlayouts = LayoutLocalServiceUtil.getLayouts(\n\t\t\t\t\tlayout.getGroupId(), layout.isPrivateLayout(),\n\t\t\t\t\tLayoutConstants.DEFAULT_PARENT_LAYOUT_ID);\n\n\t\t\t\tif (!group.isControlPanel()) {\n\t\t\t\t\tdoAsGroupId = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tList<Layout> unfilteredLayouts = layouts;\n\n\t\tif (layout == null) {\n\t\t\tObject[] defaultLayout = getDefaultLayout(request, user, signedIn);\n\n\t\t\tlayout = (Layout)defaultLayout[0];\n\t\t\tlayouts = (List<Layout>)defaultLayout[1];\n\n\t\t\trequest.setAttribute(WebKeys.LAYOUT_DEFAULT, Boolean.TRUE);\n\t\t}\n\n\t\tObject[] viewableLayouts = getViewableLayouts(\n\t\t\trequest, user, permissionChecker, layout, layouts, doAsGroupId,\n\t\t\tcontrolPanelCategory);\n\n\t\tString layoutSetLogo = null;\n\n\t\tlayout = (Layout)viewableLayouts[0];\n\t\tlayouts = (List<Layout>)viewableLayouts[1];\n\n\t\tGroup group = null;\n\n\t\tif (layout != null) {\n\t\t\tgroup = layout.getGroup();\n\n\t\t\tif (!group.isControlPanel()) {\n\t\t\t\trememberVisitedGroupIds(request, group.getGroupId());\n\t\t\t}\n\t\t}\n\n\t\tLayoutTypePortlet layoutTypePortlet = null;\n\n\t\tlayouts = mergeAdditionalLayouts(\n\t\t\trequest, user, permissionChecker, layout, layouts, doAsGroupId,\n\t\t\tcontrolPanelCategory);\n\n\t\tLayoutSet layoutSet = null;\n\n\t\tboolean hasCustomizeLayoutPermission = false;\n\t\tboolean hasDeleteLayoutPermission = false;\n\t\tboolean hasUpdateLayoutPermission = false;\n\n\t\tboolean customizedView = SessionParamUtil.getBoolean(\n\t\t\trequest, \"customized_view\", true);\n\n\t\tif (layout != null) {\n\t\t\tif (!layout.isTypeControlPanel()) {\n\t\t\t\thasCustomizeLayoutPermission = LayoutPermissionUtil.contains(\n\t\t\t\t\tpermissionChecker, layout, ActionKeys.CUSTOMIZE);\n\t\t\t\thasDeleteLayoutPermission = LayoutPermissionUtil.contains(\n\t\t\t\t\tpermissionChecker, layout, ActionKeys.DELETE);\n\t\t\t\thasUpdateLayoutPermission = LayoutPermissionUtil.contains(\n\t\t\t\t\tpermissionChecker, layout, ActionKeys.UPDATE);\n\t\t\t}\n\n\t\t\tlayoutSet = layout.getLayoutSet();\n\n\t\t\tif (company.isSiteLogo()) {\n\t\t\t\tlong logoId = 0;\n\n\t\t\t\tif (layoutSet.isLogo()) {\n\t\t\t\t\tlogoId = layoutSet.getLogoId();\n\n\t\t\t\t\tif (logoId == 0) {\n\t\t\t\t\t\tlogoId = layoutSet.getLiveLogoId();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tLayoutSet siblingLayoutSet =\n\t\t\t\t\t\tLayoutSetLocalServiceUtil.getLayoutSet(\n\t\t\t\t\t\t\tlayout.getGroupId(), !layout.isPrivateLayout());\n\n\t\t\t\t\tif (siblingLayoutSet.isLogo()) {\n\t\t\t\t\t\tlogoId = siblingLayoutSet.getLogoId();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (logoId > 0) {\n\t\t\t\t\tsb = new StringBundler(5);\n\n\t\t\t\t\tsb.append(imagePath);\n\t\t\t\t\tsb.append(\"/layout_set_logo?img_id=\");\n\t\t\t\t\tsb.append(logoId);\n\t\t\t\t\tsb.append(\"&t=\");\n\t\t\t\t\tsb.append(WebServerServletTokenUtil.getToken(logoId));\n\n\t\t\t\t\tlayoutSetLogo = sb.toString();\n\n\t\t\t\t\tImage layoutSetLogoImage =\n\t\t\t\t\t\tImageLocalServiceUtil.getCompanyLogo(logoId);\n\n\t\t\t\t\tcompanyLogo = layoutSetLogo;\n\t\t\t\t\tcompanyLogoHeight = layoutSetLogoImage.getHeight();\n\t\t\t\t\tcompanyLogoWidth = layoutSetLogoImage.getWidth();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplid = layout.getPlid();\n\n\t\t\t// Updates to shared layouts are not reflected until the next time\n\t\t\t// the user logs in because group layouts are cached in the session\n\n\t\t\tlayout = (Layout)layout.clone();\n\n\t\t\tlayoutTypePortlet = (LayoutTypePortlet)layout.getLayoutType();\n\n\t\t\tboolean customizable = layoutTypePortlet.isCustomizable();\n\n\t\t\tif (!customizable ||\n\t\t\t\tgroup.isLayoutPrototype() || group.isLayoutSetPrototype() ||\n\t\t\t\tgroup.isStagingGroup()) {\n\n\t\t\t\tcustomizedView = false;\n\t\t\t}\n\n\t\t\tlayoutTypePortlet.setCustomizedView(customizedView);\n\t\t\tlayoutTypePortlet.setUpdatePermission(hasUpdateLayoutPermission);\n\n\t\t\tif (signedIn && customizable && customizedView &&\n\t\t\t\thasCustomizeLayoutPermission) {\n\n\t\t\t\tPortalPreferences portalPreferences =\n\t\t\t\t\tPortletPreferencesFactoryUtil.getPortalPreferences(\n\t\t\t\t\t\tuser.getUserId(), true);\n\n\t\t\t\tlayoutTypePortlet.setPortalPreferences(portalPreferences);\n\t\t\t}\n\n\t\t\tLayoutClone layoutClone = LayoutCloneFactory.getInstance();\n\n\t\t\tif (layoutClone != null) {\n\t\t\t\tString typeSettings = layoutClone.get(request, plid);\n\n\t\t\t\tif (typeSettings != null) {\n\t\t\t\t\tUnicodeProperties typeSettingsProperties =\n\t\t\t\t\t\tnew UnicodeProperties(true);\n\n\t\t\t\t\ttypeSettingsProperties.load(typeSettings);\n\n\t\t\t\t\tString stateMax = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.STATE_MAX);\n\t\t\t\t\tString stateMin = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.STATE_MIN);\n\t\t\t\t\tString modeAbout = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.MODE_ABOUT);\n\t\t\t\t\tString modeConfig = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.MODE_CONFIG);\n\t\t\t\t\tString modeEdit = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.MODE_EDIT);\n\t\t\t\t\tString modeEditDefaults =\n\t\t\t\t\t\ttypeSettingsProperties.getProperty(\n\t\t\t\t\t\t\tLayoutTypePortletConstants.MODE_EDIT_DEFAULTS);\n\t\t\t\t\tString modeEditGuest = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.MODE_EDIT_GUEST);\n\t\t\t\t\tString modeHelp = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.MODE_HELP);\n\t\t\t\t\tString modePreview = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.MODE_PREVIEW);\n\t\t\t\t\tString modePrint = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.MODE_PRINT);\n\n\t\t\t\t\tlayoutTypePortlet.setStateMax(stateMax);\n\t\t\t\t\tlayoutTypePortlet.setStateMin(stateMin);\n\t\t\t\t\tlayoutTypePortlet.setModeAbout(modeAbout);\n\t\t\t\t\tlayoutTypePortlet.setModeConfig(modeConfig);\n\t\t\t\t\tlayoutTypePortlet.setModeEdit(modeEdit);\n\t\t\t\t\tlayoutTypePortlet.setModeEditDefaults(modeEditDefaults);\n\t\t\t\t\tlayoutTypePortlet.setModeEditGuest(modeEditGuest);\n\t\t\t\t\tlayoutTypePortlet.setModeHelp(modeHelp);\n\t\t\t\t\tlayoutTypePortlet.setModePreview(modePreview);\n\t\t\t\t\tlayoutTypePortlet.setModePrint(modePrint);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trequest.setAttribute(WebKeys.LAYOUT, layout);\n\t\t\trequest.setAttribute(WebKeys.LAYOUTS, layouts);\n\t\t}\n\n\t\t// Locale\n\n\t\tString i18nLanguageId = (String)request.getAttribute(\n\t\t\tWebKeys.I18N_LANGUAGE_ID);\n\n\t\tLocale locale = PortalUtil.getLocale(request, response, true);\n\n\t\t// Scope\n\n\t\tlong scopeGroupId = PortalUtil.getScopeGroupId(request);\n\n\t\tif ((scopeGroupId <= 0) && (doAsGroupId > 0)) {\n\t\t\tscopeGroupId = doAsGroupId;\n\t\t}\n\n\t\tlong siteGroupId = 0;\n\n\t\tif (layout.isTypeControlPanel()) {\n\t\t\tsiteGroupId = PortalUtil.getSiteGroupId(scopeGroupId);\n\t\t}\n\t\telse {\n\t\t\tsiteGroupId = PortalUtil.getSiteGroupId(layout.getGroupId());\n\t\t}\n\n\t\t// Theme and color scheme\n\n\t\tTheme theme = null;\n\t\tColorScheme colorScheme = null;\n\n\t\tboolean wapTheme = BrowserSnifferUtil.isWap(request);\n\n\t\tif ((layout != null) && group.isControlPanel()) {\n\t\t\tString themeId = PrefsPropsUtil.getString(\n\t\t\t\tcompanyId, PropsKeys.CONTROL_PANEL_LAYOUT_REGULAR_THEME_ID);\n\t\t\tString colorSchemeId =\n\t\t\t\tColorSchemeFactoryUtil.getDefaultRegularColorSchemeId();\n\n\t\t\ttheme = ThemeLocalServiceUtil.getTheme(\n\t\t\t\tcompanyId, themeId, wapTheme);\n\t\t\tcolorScheme = ThemeLocalServiceUtil.getColorScheme(\n\t\t\t\tcompanyId, theme.getThemeId(), colorSchemeId, wapTheme);\n\n\t\t\tif (!wapTheme && theme.isWapTheme()) {\n\t\t\t\ttheme = ThemeLocalServiceUtil.getTheme(\n\t\t\t\t\tcompanyId,\n\t\t\t\t\tPropsValues.CONTROL_PANEL_LAYOUT_REGULAR_THEME_ID, false);\n\t\t\t\tcolorScheme = ThemeLocalServiceUtil.getColorScheme(\n\t\t\t\t\tcompanyId, theme.getThemeId(), colorSchemeId, false);\n\t\t\t}\n\n\t\t\trequest.setAttribute(WebKeys.THEME, theme);\n\t\t\trequest.setAttribute(WebKeys.COLOR_SCHEME, colorScheme);\n\t\t}\n\n\t\tboolean themeCssFastLoad = SessionParamUtil.getBoolean(\n\t\t\trequest, \"css_fast_load\", PropsValues.THEME_CSS_FAST_LOAD);\n\t\tboolean themeImagesFastLoad = SessionParamUtil.getBoolean(\n\t\t\trequest, \"images_fast_load\", PropsValues.THEME_IMAGES_FAST_LOAD);\n\n\t\tboolean themeJsBarebone = PropsValues.JAVASCRIPT_BAREBONE_ENABLED;\n\n\t\tif (themeJsBarebone) {\n\t\t\tif (signedIn) {\n\t\t\t\tthemeJsBarebone = false;\n\t\t\t}\n\t\t}\n\n\t\tboolean themeJsFastLoad = SessionParamUtil.getBoolean(\n\t\t\trequest, \"js_fast_load\", PropsValues.JAVASCRIPT_FAST_LOAD);\n\n\t\tString lifecycle = ParamUtil.getString(request, \"p_p_lifecycle\", \"0\");\n\n\t\tlifecycle = ParamUtil.getString(request, \"p_t_lifecycle\", lifecycle);\n\n\t\tboolean isolated = ParamUtil.getBoolean(request, \"p_p_isolated\");\n\n\t\tString facebookCanvasPageURL = (String)request.getAttribute(\n\t\t\tWebKeys.FACEBOOK_CANVAS_PAGE_URL);\n\n\t\tboolean widget = false;\n\n\t\tBoolean widgetObj = (Boolean)request.getAttribute(WebKeys.WIDGET);\n\n\t\tif (widgetObj != null) {\n\t\t\twidget = widgetObj.booleanValue();\n\t\t}\n\n\t\t// Theme display\n\n\t\tThemeDisplay themeDisplay = ThemeDisplayFactory.create();\n\n\t\tthemeDisplay.setRequest(request);\n\n\t\t// Set the CDN host, portal URL, and Facebook application ID first\n\t\t// because other methods (setLookAndFeel) depend on them being set\n\n\t\tthemeDisplay.setCDNHost(cdnHost);\n\t\tthemeDisplay.setCDNDynamicResourcesHost(dynamicResourcesCDNHost);\n\t\tthemeDisplay.setPortalURL(portalURL);\n\t\tthemeDisplay.setFacebookCanvasPageURL(facebookCanvasPageURL);\n\t\tthemeDisplay.setWidget(widget);\n\n\t\tthemeDisplay.setCompany(company);\n\t\tthemeDisplay.setCompanyLogo(companyLogo);\n\t\tthemeDisplay.setCompanyLogoHeight(companyLogoHeight);\n\t\tthemeDisplay.setCompanyLogoWidth(companyLogoWidth);\n\t\tthemeDisplay.setControlPanelCategory(controlPanelCategory);\n\t\tthemeDisplay.setDoAsGroupId(doAsGroupId);\n\t\tthemeDisplay.setDoAsUserId(doAsUserId);\n\t\tthemeDisplay.setDoAsUserLanguageId(doAsUserLanguageId);\n\t\tthemeDisplay.setI18nLanguageId(i18nLanguageId);\n\t\tthemeDisplay.setI18nPath(i18nPath);\n\t\tthemeDisplay.setIsolated(isolated);\n\t\tthemeDisplay.setLanguageId(LocaleUtil.toLanguageId(locale));\n\t\tthemeDisplay.setLayout(layout);\n\t\tthemeDisplay.setLayouts(layouts);\n\t\tthemeDisplay.setLayoutSet(layoutSet);\n\t\tthemeDisplay.setLayoutSetLogo(layoutSetLogo);\n\t\tthemeDisplay.setLayoutTypePortlet(layoutTypePortlet);\n\t\tthemeDisplay.setLifecycle(lifecycle);\n\t\tthemeDisplay.setLifecycleAction(lifecycle.equals(\"1\"));\n\t\tthemeDisplay.setLifecycleEvent(lifecycle.equals(\"3\"));\n\t\tthemeDisplay.setLifecycleRender(lifecycle.equals(\"0\"));\n\t\tthemeDisplay.setLifecycleResource(lifecycle.equals(\"2\"));\n\t\tthemeDisplay.setLocale(locale);\n\t\tthemeDisplay.setLookAndFeel(theme, colorScheme);\n\t\tthemeDisplay.setPathApplet(contextPath.concat(\"/applets\"));\n\t\tthemeDisplay.setPathCms(contextPath.concat(\"/cms\"));\n\t\tthemeDisplay.setPathContext(contextPath);\n\t\tthemeDisplay.setPathFlash(contextPath.concat(\"/flash\"));\n\t\tthemeDisplay.setPathFriendlyURLPrivateGroup(\n\t\t\tfriendlyURLPrivateGroupPath);\n\t\tthemeDisplay.setPathFriendlyURLPrivateUser(friendlyURLPrivateUserPath);\n\t\tthemeDisplay.setPathFriendlyURLPublic(friendlyURLPublicPath);\n\t\tthemeDisplay.setPathImage(imagePath);\n\t\tthemeDisplay.setPathJavaScript(contextPath.concat(\"/html/js\"));\n\t\tthemeDisplay.setPathMain(mainPath);\n\t\tthemeDisplay.setPathSound(contextPath.concat(\"/html/sound\"));\n\t\tthemeDisplay.setPermissionChecker(permissionChecker);\n\t\tthemeDisplay.setPlid(plid);\n\t\tthemeDisplay.setPpid(ppid);\n\t\tthemeDisplay.setRealCompanyLogo(realCompanyLogo);\n\t\tthemeDisplay.setRealCompanyLogoHeight(realCompanyLogoHeight);\n\t\tthemeDisplay.setRealCompanyLogoWidth(realCompanyLogoWidth);\n\t\tthemeDisplay.setRealUser(realUser);\n\t\tthemeDisplay.setRefererGroupId(refererGroupId);\n\t\tthemeDisplay.setRefererPlid(refererPlid);\n\t\tthemeDisplay.setScopeGroupId(scopeGroupId);\n\t\tthemeDisplay.setSecure(request.isSecure());\n\t\tthemeDisplay.setServerName(request.getServerName());\n\t\tthemeDisplay.setServerPort(request.getServerPort());\n\t\tthemeDisplay.setSignedIn(signedIn);\n\t\tthemeDisplay.setSiteDefaultLocale(\n\t\t\tPortalUtil.getSiteDefaultLocale(siteGroupId));\n\t\tthemeDisplay.setSiteGroupId(siteGroupId);\n\t\tthemeDisplay.setStateExclusive(LiferayWindowState.isExclusive(request));\n\t\tthemeDisplay.setStateMaximized(LiferayWindowState.isMaximized(request));\n\t\tthemeDisplay.setStatePopUp(LiferayWindowState.isPopUp(request));\n\t\tthemeDisplay.setThemeCssFastLoad(themeCssFastLoad);\n\t\tthemeDisplay.setThemeImagesFastLoad(themeImagesFastLoad);\n\t\tthemeDisplay.setThemeJsBarebone(themeJsBarebone);\n\t\tthemeDisplay.setThemeJsFastLoad(themeJsFastLoad);\n\t\tthemeDisplay.setTimeZone(timeZone);\n\t\tthemeDisplay.setUnfilteredLayouts(unfilteredLayouts);\n\t\tthemeDisplay.setUser(user);\n\n\t\t// Icons\n\n\t\tthemeDisplay.setShowAddContentIcon(false);\n\n\t\tboolean showControlPanelIcon = false;\n\n\t\tif (signedIn &&\n\t\t\tPortalPermissionUtil.contains(\n\t\t\t\tpermissionChecker, ActionKeys.VIEW_CONTROL_PANEL)) {\n\n\t\t\tshowControlPanelIcon = true;\n\t\t}\n\n\t\tthemeDisplay.setShowControlPanelIcon(showControlPanelIcon);\n\n\t\tthemeDisplay.setShowHomeIcon(true);\n\t\tthemeDisplay.setShowMyAccountIcon(signedIn);\n\t\tthemeDisplay.setShowPageSettingsIcon(hasDeleteLayoutPermission);\n\t\tthemeDisplay.setShowPortalIcon(true);\n\t\tthemeDisplay.setShowSignInIcon(!signedIn);\n\n\t\tboolean showSignOutIcon = signedIn;\n\n\t\tif (themeDisplay.isImpersonated()) {\n\t\t\tshowSignOutIcon = false;\n\t\t}\n\n\t\tthemeDisplay.setShowSignOutIcon(showSignOutIcon);\n\n\t\tthemeDisplay.setShowStagingIcon(false);\n\n\t\tboolean showSiteAdministrationIcon = false;\n\n\t\tif (signedIn &&\n\t\t\tGroupPermissionUtil.contains(\n\t\t\t\tpermissionChecker, group,\n\t\t\t\tActionKeys.VIEW_SITE_ADMINISTRATION)) {\n\n\t\t\tshowSiteAdministrationIcon = true;\n\t\t}\n\n\t\tthemeDisplay.setShowSiteAdministrationIcon(showSiteAdministrationIcon);\n\n\t\t// Session\n\n\t\tif (PropsValues.SESSION_ENABLE_URL_WITH_SESSION_ID &&\n\t\t\t!CookieKeys.hasSessionId(request)) {\n\n\t\t\tthemeDisplay.setAddSessionIdToURL(true);\n\t\t\tthemeDisplay.setSessionId(session.getId());\n\t\t}\n\n\t\t// URLs\n\n\t\tString urlControlPanel = friendlyURLPrivateGroupPath.concat(\n\t\t\tGroupConstants.CONTROL_PANEL_FRIENDLY_URL);\n\n\t\tif (Validator.isNotNull(doAsUserId)) {\n\t\t\turlControlPanel = HttpUtil.addParameter(\n\t\t\t\turlControlPanel, \"doAsUserId\", doAsUserId);\n\t\t}\n\n\t\tif (refererGroupId > 0) {\n\t\t\turlControlPanel = HttpUtil.addParameter(\n\t\t\t\turlControlPanel, \"refererGroupId\", refererGroupId);\n\t\t}\n\t\telse if (scopeGroupId > 0) {\n\t\t\tLayout refererLayout = LayoutLocalServiceUtil.fetchLayout(plid);\n\n\t\t\tif (refererLayout != null) {\n\t\t\t\tGroup refererLayoutGroup = refererLayout.getGroup();\n\n\t\t\t\tif (refererLayoutGroup.isUserGroup()) {\n\t\t\t\t\turlControlPanel = HttpUtil.addParameter(\n\t\t\t\t\t\turlControlPanel, \"refererGroupId\", scopeGroupId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (refererPlid > 0) {\n\t\t\turlControlPanel = HttpUtil.addParameter(\n\t\t\t\turlControlPanel, \"refererPlid\", refererPlid);\n\t\t}\n\t\telse if (plid > 0) {\n\t\t\turlControlPanel = HttpUtil.addParameter(\n\t\t\t\turlControlPanel, \"refererPlid\", plid);\n\t\t}\n\n\t\tif (themeDisplay.isAddSessionIdToURL()) {\n\t\t\turlControlPanel = PortalUtil.getURLWithSessionId(\n\t\t\t\turlControlPanel, session.getId());\n\t\t}\n\n\t\tthemeDisplay.setURLControlPanel(urlControlPanel);\n\n\t\tString currentURL = PortalUtil.getCurrentURL(request);\n\n\t\tthemeDisplay.setURLCurrent(currentURL);\n\n\t\tString urlHome = PortalUtil.getHomeURL(request);\n\n\t\tthemeDisplay.setURLHome(urlHome);\n\n\t\tString siteAdministrationURL = urlControlPanel;\n\n\t\tsiteAdministrationURL = HttpUtil.addParameter(\n\t\t\tsiteAdministrationURL, \"controlPanelCategory\",\n\t\t\tPortletCategoryKeys.CURRENT_SITE);\n\t\tsiteAdministrationURL = HttpUtil.addParameter(\n\t\t\tsiteAdministrationURL, \"doAsGroupId\", siteGroupId);\n\n\t\tthemeDisplay.setURLSiteAdministration(siteAdministrationURL);\n\n\t\tlong controlPanelPlid = PortalUtil.getControlPanelPlid(companyId);\n\n\t\tif (layout != null) {\n\t\t\tif (layout.isTypePortlet()) {\n\t\t\t\tboolean freeformLayout =\n\t\t\t\t\tlayoutTypePortlet.getLayoutTemplateId().equals(\"freeform\");\n\n\t\t\t\tthemeDisplay.setFreeformLayout(freeformLayout);\n\n\t\t\t\tif (hasUpdateLayoutPermission) {\n\t\t\t\t\tthemeDisplay.setShowAddContentIconPermission(true);\n\n\t\t\t\t\tif (!LiferayWindowState.isMaximized(request)) {\n\t\t\t\t\t\tthemeDisplay.setShowAddContentIcon(true);\n\t\t\t\t\t}\n\n\t\t\t\t\tthemeDisplay.setShowLayoutTemplatesIcon(true);\n\n\t\t\t\t\tif (!group.isUser()) {\n\t\t\t\t\t\tthemeDisplay.setShowPageCustomizationIcon(true);\n\t\t\t\t\t}\n\n\t\t\t\t\tthemeDisplay.setURLAddContent(\n\t\t\t\t\t\t\"Liferay.Dockbar.loadAddPanel();\");\n\t\t\t\t}\n\n\t\t\t\tif (hasCustomizeLayoutPermission && customizedView) {\n\t\t\t\t\tthemeDisplay.setShowAddContentIconPermission(true);\n\n\t\t\t\t\tif (!LiferayWindowState.isMaximized(request)) {\n\t\t\t\t\t\tthemeDisplay.setShowAddContentIcon(true);\n\t\t\t\t\t}\n\n\t\t\t\t\tthemeDisplay.setURLAddContent(\n\t\t\t\t\t\t\"Liferay.Dockbar.loadAddPanel();\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hasUpdateLayoutPermission) {\n\t\t\t\tthemeDisplay.setShowPageSettingsIcon(true);\n\n\t\t\t\tLiferayPortletURL pageSettingsURL = new PortletURLImpl(\n\t\t\t\t\trequest, PortletKeys.LAYOUTS_ADMIN, controlPanelPlid,\n\t\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\t\tpageSettingsURL.setDoAsGroupId(scopeGroupId);\n\t\t\t\tpageSettingsURL.setParameter(\n\t\t\t\t\t\"struts_action\", \"/layouts_admin/edit_layouts\");\n\n\t\t\t\tif (layout.isPrivateLayout()) {\n\t\t\t\t\tpageSettingsURL.setParameter(\"tabs1\", \"private-pages\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpageSettingsURL.setParameter(\"tabs1\", \"public-pages\");\n\t\t\t\t}\n\n\t\t\t\tpageSettingsURL.setParameter(\n\t\t\t\t\t\"groupId\", String.valueOf(scopeGroupId));\n\t\t\t\tpageSettingsURL.setParameter(\"selPlid\", String.valueOf(plid));\n\t\t\t\tpageSettingsURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\t\tif (PropsValues.DOCKBAR_ADMINISTRATIVE_LINKS_SHOW_IN_POP_UP) {\n\t\t\t\t\tpageSettingsURL.setControlPanelCategory(\n\t\t\t\t\t\tPortletCategoryKeys.PORTLET);\n\t\t\t\t\tpageSettingsURL.setParameter(\"closeRedirect\", currentURL);\n\t\t\t\t\tpageSettingsURL.setWindowState(LiferayWindowState.POP_UP);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpageSettingsURL.setParameter(\n\t\t\t\t\t\t\"redirect\", themeDisplay.getURLHome());\n\t\t\t\t\tpageSettingsURL.setPlid(plid);\n\t\t\t\t\tpageSettingsURL.setWindowState(WindowState.MAXIMIZED);\n\t\t\t\t}\n\n\t\t\t\tthemeDisplay.setURLPageSettings(pageSettingsURL);\n\n\t\t\t\tboolean site = group.isSite();\n\n\t\t\t\tif (!site && group.isStagingGroup()) {\n\t\t\t\t\tGroup liveGroup = group.getLiveGroup();\n\n\t\t\t\t\tsite = liveGroup.isSite();\n\t\t\t\t}\n\n\t\t\t\tif (site &&\n\t\t\t\t\tGroupPermissionUtil.contains(\n\t\t\t\t\t\tpermissionChecker, scopeGroupId,\n\t\t\t\t\t\tActionKeys.ASSIGN_MEMBERS)) {\n\n\t\t\t\t\tthemeDisplay.setShowManageSiteMembershipsIcon(true);\n\n\t\t\t\t\tLiferayPortletURL manageSiteMembershipsURL =\n\t\t\t\t\t\tnew PortletURLImpl(\n\t\t\t\t\t\t\trequest, PortletKeys.SITE_MEMBERSHIPS_ADMIN,\n\t\t\t\t\t\t\tcontrolPanelPlid, PortletRequest.RENDER_PHASE);\n\n\t\t\t\t\tmanageSiteMembershipsURL.setDoAsGroupId(scopeGroupId);\n\t\t\t\t\tmanageSiteMembershipsURL.setParameter(\n\t\t\t\t\t\t\"struts_action\", \"/sites_admin/edit_site_assignments\");\n\t\t\t\t\tmanageSiteMembershipsURL.setParameter(\n\t\t\t\t\t\t\"groupId\", String.valueOf(scopeGroupId));\n\t\t\t\t\tmanageSiteMembershipsURL.setParameter(\n\t\t\t\t\t\t\"selPlid\", String.valueOf(plid));\n\t\t\t\t\tmanageSiteMembershipsURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\t\t\tif (PropsValues.\n\t\t\t\t\t\t\tDOCKBAR_ADMINISTRATIVE_LINKS_SHOW_IN_POP_UP) {\n\n\t\t\t\t\t\tmanageSiteMembershipsURL.setControlPanelCategory(\n\t\t\t\t\t\t\tPortletCategoryKeys.PORTLET);\n\t\t\t\t\t\tmanageSiteMembershipsURL.setWindowState(\n\t\t\t\t\t\t\tLiferayWindowState.POP_UP);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmanageSiteMembershipsURL.setParameter(\n\t\t\t\t\t\t\t\"redirect\", themeDisplay.getURLHome());\n\t\t\t\t\t\tmanageSiteMembershipsURL.setParameter(\n\t\t\t\t\t\t\t\"showBackURL\", Boolean.FALSE.toString());\n\t\t\t\t\t\tmanageSiteMembershipsURL.setPlid(plid);\n\t\t\t\t\t\tmanageSiteMembershipsURL.setWindowState(\n\t\t\t\t\t\t\tWindowState.MAXIMIZED);\n\t\t\t\t\t}\n\n\t\t\t\t\tthemeDisplay.setURLManageSiteMemberships(\n\t\t\t\t\t\tmanageSiteMembershipsURL);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthemeDisplay.setShowManageSiteMembershipsIcon(false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tGroup scopeGroup = GroupLocalServiceUtil.getGroup(scopeGroupId);\n\n\t\t\tboolean hasAddLayoutGroupPermission = GroupPermissionUtil.contains(\n\t\t\t\tpermissionChecker, scopeGroup, ActionKeys.ADD_LAYOUT);\n\t\t\tboolean hasAddLayoutLayoutPermission =\n\t\t\t\t!layout.isTypeControlPanel() &&\n\t\t\t\tLayoutPermissionUtil.contains(\n\t\t\t\t\tpermissionChecker, layout, ActionKeys.ADD_LAYOUT);\n\t\t\tboolean hasManageLayoutsGroupPermission =\n\t\t\t\tGroupPermissionUtil.contains(\n\t\t\t\t\tpermissionChecker, scopeGroup, ActionKeys.MANAGE_LAYOUTS);\n\t\t\tboolean hasManageStagingPermission = GroupPermissionUtil.contains(\n\t\t\t\tpermissionChecker, scopeGroup, ActionKeys.MANAGE_STAGING);\n\t\t\tboolean hasPublishStagingPermission = GroupPermissionUtil.contains(\n\t\t\t\tpermissionChecker, scopeGroup, ActionKeys.PUBLISH_STAGING);\n\t\t\tboolean hasUpdateGroupPermission = GroupPermissionUtil.contains(\n\t\t\t\tpermissionChecker, scopeGroup, ActionKeys.UPDATE);\n\t\t\tboolean hasViewStagingPermission = GroupPermissionUtil.contains(\n\t\t\t\tpermissionChecker, scopeGroup, ActionKeys.VIEW_STAGING);\n\n\t\t\tif (!group.isControlPanel() && !group.isUser() &&\n\t\t\t\t!group.isUserGroup() && hasUpdateGroupPermission) {\n\n\t\t\t\tthemeDisplay.setShowSiteSettingsIcon(true);\n\n\t\t\t\tLiferayPortletURL siteSettingsURL = new PortletURLImpl(\n\t\t\t\t\trequest, PortletKeys.SITE_SETTINGS, controlPanelPlid,\n\t\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\t\tsiteSettingsURL.setDoAsGroupId(scopeGroupId);\n\t\t\t\tsiteSettingsURL.setParameter(\n\t\t\t\t\t\"struts_action\", \"/sites_admin/edit_site\");\n\t\t\t\tsiteSettingsURL.setParameter(\n\t\t\t\t\t\"groupId\", String.valueOf(scopeGroupId));\n\t\t\t\tsiteSettingsURL.setParameter(\n\t\t\t\t\t\"showBackURL\", Boolean.FALSE.toString());\n\t\t\t\tsiteSettingsURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\t\tif (PropsValues.DOCKBAR_ADMINISTRATIVE_LINKS_SHOW_IN_POP_UP) {\n\t\t\t\t\tsiteSettingsURL.setControlPanelCategory(\n\t\t\t\t\t\tPortletCategoryKeys.PORTLET);\n\t\t\t\t\tsiteSettingsURL.setParameter(\"closeRedirect\", currentURL);\n\t\t\t\t\tsiteSettingsURL.setWindowState(LiferayWindowState.POP_UP);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsiteSettingsURL.setParameter(\n\t\t\t\t\t\t\"redirect\", themeDisplay.getURLHome());\n\t\t\t\t\tsiteSettingsURL.setPlid(plid);\n\t\t\t\t\tsiteSettingsURL.setWindowState(\n\t\t\t\t\t\tLiferayWindowState.MAXIMIZED);\n\t\t\t\t}\n\n\t\t\t\tthemeDisplay.setURLSiteSettings(siteSettingsURL);\n\t\t\t}\n\n\t\t\tif (!group.isLayoutPrototype() &&\n\t\t\t\t(hasAddLayoutGroupPermission || hasAddLayoutLayoutPermission ||\n\t\t\t\t hasManageLayoutsGroupPermission || hasUpdateGroupPermission)) {\n\n\t\t\t\tthemeDisplay.setShowSiteMapSettingsIcon(true);\n\n\t\t\t\tLiferayPortletURL siteMapSettingsURL = new PortletURLImpl(\n\t\t\t\t\trequest, PortletKeys.LAYOUTS_ADMIN, controlPanelPlid,\n\t\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\t\tsiteMapSettingsURL.setDoAsGroupId(scopeGroupId);\n\t\t\t\tsiteMapSettingsURL.setParameter(\n\t\t\t\t\t\"struts_action\", \"/layouts_admin/edit_layouts\");\n\n\t\t\t\tif (layout.isPrivateLayout()) {\n\t\t\t\t\tsiteMapSettingsURL.setParameter(\"tabs1\", \"private-pages\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsiteMapSettingsURL.setParameter(\"tabs1\", \"public-pages\");\n\t\t\t\t}\n\n\t\t\t\tsiteMapSettingsURL.setParameter(\n\t\t\t\t\t\"groupId\", String.valueOf(scopeGroupId));\n\t\t\t\tsiteMapSettingsURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\t\tif (PropsValues.DOCKBAR_ADMINISTRATIVE_LINKS_SHOW_IN_POP_UP) {\n\t\t\t\t\tsiteMapSettingsURL.setControlPanelCategory(\n\t\t\t\t\t\tPortletCategoryKeys.PORTLET);\n\t\t\t\t\tsiteMapSettingsURL.setParameter(\n\t\t\t\t\t\t\"closeRedirect\", currentURL);\n\t\t\t\t\tsiteMapSettingsURL.setWindowState(\n\t\t\t\t\t\tLiferayWindowState.POP_UP);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsiteMapSettingsURL.setParameter(\n\t\t\t\t\t\t\"redirect\", themeDisplay.getURLHome());\n\t\t\t\t\tsiteMapSettingsURL.setPlid(plid);\n\t\t\t\t\tsiteMapSettingsURL.setWindowState(\n\t\t\t\t\t\tLiferayWindowState.MAXIMIZED);\n\t\t\t\t}\n\n\t\t\t\tthemeDisplay.setURLSiteMapSettings(siteMapSettingsURL);\n\t\t\t}\n\n\t\t\tif (group.hasStagingGroup() && !group.isStagingGroup()) {\n\t\t\t\tthemeDisplay.setShowAddContentIcon(false);\n\t\t\t\tthemeDisplay.setShowLayoutTemplatesIcon(false);\n\t\t\t\tthemeDisplay.setURLPublishToLive(null);\n\t\t\t}\n\n\t\t\tif (group.isControlPanel()) {\n\t\t\t\tthemeDisplay.setShowPageSettingsIcon(false);\n\t\t\t\tthemeDisplay.setURLPublishToLive(null);\n\t\t\t}\n\n\t\t\t// LEP-4987\n\n\t\t\tif (group.isStaged() || group.isStagingGroup()) {\n\t\t\t\tif (hasManageStagingPermission || hasPublishStagingPermission ||\n\t\t\t\t\thasUpdateLayoutPermission || hasViewStagingPermission) {\n\n\t\t\t\t\tthemeDisplay.setShowStagingIcon(true);\n\t\t\t\t}\n\n\t\t\t\tif (hasPublishStagingPermission) {\n\t\t\t\t\tPortletURL publishToLiveURL = new PortletURLImpl(\n\t\t\t\t\t\trequest, PortletKeys.LAYOUTS_ADMIN, plid,\n\t\t\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\t\t\tpublishToLiveURL.setParameter(\n\t\t\t\t\t\t\"struts_action\", \"/layouts_admin/publish_layouts\");\n\n\t\t\t\t\tif (layout.isPrivateLayout()) {\n\t\t\t\t\t\tpublishToLiveURL.setParameter(\"tabs1\", \"private-pages\");\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpublishToLiveURL.setParameter(\"tabs1\", \"public-pages\");\n\t\t\t\t\t}\n\n\t\t\t\t\tpublishToLiveURL.setParameter(\"pagesRedirect\", currentURL);\n\t\t\t\t\tpublishToLiveURL.setParameter(\n\t\t\t\t\t\t\"groupId\", String.valueOf(scopeGroupId));\n\t\t\t\t\tpublishToLiveURL.setParameter(\n\t\t\t\t\t\t\"selPlid\", String.valueOf(plid));\n\t\t\t\t\tpublishToLiveURL.setPortletMode(PortletMode.VIEW);\n\t\t\t\t\tpublishToLiveURL.setWindowState(\n\t\t\t\t\t\tLiferayWindowState.EXCLUSIVE);\n\n\t\t\t\t\tthemeDisplay.setURLPublishToLive(publishToLiveURL);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tPortlet myAccountPortlet = PortalUtil.getFirstMyAccountPortlet(\n\t\t\t\tthemeDisplay);\n\n\t\t\tif (myAccountPortlet != null) {\n\t\t\t\tPortletURLImpl myAccountURL = new PortletURLImpl(\n\t\t\t\t\trequest, myAccountPortlet.getPortletName(),\n\t\t\t\t\tcontrolPanelPlid, PortletRequest.RENDER_PHASE);\n\n\t\t\t\tif (scopeGroupId > 0) {\n\t\t\t\t\tmyAccountURL.setDoAsGroupId(scopeGroupId);\n\t\t\t\t}\n\n\t\t\t\tif (refererPlid > 0) {\n\t\t\t\t\tmyAccountURL.setRefererPlid(refererPlid);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmyAccountURL.setRefererPlid(plid);\n\t\t\t\t}\n\n\t\t\t\tmyAccountURL.setWindowState(WindowState.MAXIMIZED);\n\n\t\t\t\tthemeDisplay.setURLMyAccount(myAccountURL);\n\t\t\t}\n\t\t}\n\n\t\tif (!user.isActive() ||\n\t\t\t(PrefsPropsUtil.getBoolean(\n\t\t\t\tcompanyId, PropsKeys.TERMS_OF_USE_REQUIRED) &&\n\t\t\t !user.isAgreedToTermsOfUse())) {\n\n\t\t\tthemeDisplay.setShowAddContentIcon(false);\n\t\t\tthemeDisplay.setShowMyAccountIcon(false);\n\t\t\tthemeDisplay.setShowPageSettingsIcon(false);\n\t\t}\n\n\t\tif ((layout != null) && layout.isLayoutPrototypeLinkActive()) {\n\t\t\tthemeDisplay.setShowPageCustomizationIcon(false);\n\t\t}\n\n\t\tif (group.isLayoutPrototype()) {\n\t\t\tthemeDisplay.setShowHomeIcon(false);\n\t\t\tthemeDisplay.setShowManageSiteMembershipsIcon(false);\n\t\t\tthemeDisplay.setShowMyAccountIcon(false);\n\t\t\tthemeDisplay.setShowPageCustomizationIcon(false);\n\t\t\tthemeDisplay.setShowPageSettingsIcon(true);\n\t\t\tthemeDisplay.setShowPortalIcon(false);\n\t\t\tthemeDisplay.setShowSignInIcon(false);\n\t\t\tthemeDisplay.setShowSignOutIcon(false);\n\t\t\tthemeDisplay.setShowSiteAdministrationIcon(false);\n\t\t\tthemeDisplay.setShowSiteSettingsIcon(false);\n\t\t\tthemeDisplay.setShowStagingIcon(false);\n\t\t}\n\n\t\tif (group.isLayoutSetPrototype()) {\n\t\t\tthemeDisplay.setShowPageCustomizationIcon(false);\n\t\t\tthemeDisplay.setShowSiteSettingsIcon(false);\n\t\t}\n\n\t\tif (group.hasStagingGroup() && !group.isStagingGroup()) {\n\t\t\tthemeDisplay.setShowLayoutTemplatesIcon(false);\n\t\t\tthemeDisplay.setShowPageCustomizationIcon(false);\n\t\t\tthemeDisplay.setShowSiteMapSettingsIcon(false);\n\t\t\tthemeDisplay.setShowSiteSettingsIcon(false);\n\t\t}\n\n\t\tthemeDisplay.setURLPortal(portalURL.concat(contextPath));\n\n\t\tboolean secure = false;\n\n\t\tif (PropsValues.COMPANY_SECURITY_AUTH_REQUIRES_HTTPS ||\n\t\t\trequest.isSecure()) {\n\n\t\t\tsecure = true;\n\t\t}\n\n\t\tString securePortalURL = PortalUtil.getPortalURL(request, secure);\n\n\t\tString urlSignIn = securePortalURL.concat(mainPath).concat(\n\t\t\t_PATH_PORTAL_LOGIN);\n\n\t\tif (layout != null) {\n\t\t\turlSignIn = HttpUtil.addParameter(\n\t\t\t\turlSignIn, \"p_l_id\", layout.getPlid());\n\t\t}\n\n\t\tthemeDisplay.setURLSignIn(urlSignIn);\n\n\t\tthemeDisplay.setURLSignOut(mainPath.concat(_PATH_PORTAL_LOGOUT));\n\n\t\tPortletURL updateManagerURL = new PortletURLImpl(\n\t\t\trequest, PortletKeys.MARKETPLACE_STORE, controlPanelPlid,\n\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\tthemeDisplay.setURLUpdateManager(updateManagerURL);\n\n\t\t// Control Panel redirects\n\n\t\tif (group.isControlPanel() && Validator.isNotNull(ppid)) {\n\t\t\tboolean switchGroup = ParamUtil.getBoolean(request, \"switchGroup\");\n\n\t\t\tif (switchGroup &&\n\t\t\t\t!PortletPermissionUtil.hasControlPanelAccessPermission(\n\t\t\t\t\tpermissionChecker, scopeGroupId, ppid)) {\n\n\t\t\t\tString redirect = HttpUtil.removeParameter(\n\t\t\t\t\tcurrentURL, \"p_p_id\");\n\n\t\t\t\tresponse.sendRedirect(redirect);\n\t\t\t}\n\t\t}\n\t\telse if (group.isControlPanel() && Validator.isNull(ppid)) {\n\t\t\tif (controlPanelCategory.startsWith(\n\t\t\t\t\tPortletCategoryKeys.CURRENT_SITE)) {\n\n\t\t\t\tif (controlPanelCategory.indexOf(StringPool.PERIOD) == -1) {\n\t\t\t\t\tcontrolPanelCategory = StringUtil.replace(\n\t\t\t\t\t\tcontrolPanelCategory, PortletCategoryKeys.CURRENT_SITE,\n\t\t\t\t\t\tPortletCategoryKeys.SITE_ADMINISTRATION);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcontrolPanelCategory = StringUtil.replace(\n\t\t\t\t\t\tcontrolPanelCategory,\n\t\t\t\t\t\tPortletCategoryKeys.CURRENT_SITE + StringPool.PERIOD,\n\t\t\t\t\t\tPortletCategoryKeys.SITE_ADMINISTRATION);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (controlPanelCategory.equals(\n\t\t\t\t\tPortletCategoryKeys.SITE_ADMINISTRATION)) {\n\n\t\t\t\tPortlet firstPortlet =\n\t\t\t\t\tPortalUtil.getFirstSiteAdministrationPortlet(themeDisplay);\n\n\t\t\t\tString redirect = HttpUtil.setParameter(\n\t\t\t\t\tcurrentURL, \"p_p_id\", firstPortlet.getPortletId());\n\n\t\t\t\tresponse.sendRedirect(\n\t\t\t\t\tPortalUtil.getAbsoluteURL(request, redirect));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tList<Portlet> portlets = PortalUtil.getControlPanelPortlets(\n\t\t\t\t\tcontrolPanelCategory, themeDisplay);\n\n\t\t\t\tPortlet firstPortlet = null;\n\n\t\t\t\tfor (Portlet portlet : portlets) {\n\t\t\t\t\tif (PortletPermissionUtil.hasControlPanelAccessPermission(\n\t\t\t\t\t\t\tpermissionChecker, scopeGroupId, portlet)) {\n\n\t\t\t\t\t\tfirstPortlet = portlet;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ((firstPortlet == null) &&\n\t\t\t\t\tcontrolPanelCategory.startsWith(\n\t\t\t\t\t\tPortletCategoryKeys.SITE_ADMINISTRATION)) {\n\n\t\t\t\t\tfirstPortlet = PortalUtil.getFirstSiteAdministrationPortlet(\n\t\t\t\t\t\tthemeDisplay);\n\t\t\t\t}\n\n\t\t\t\tif (firstPortlet != null) {\n\t\t\t\t\tString redirect = HttpUtil.setParameter(\n\t\t\t\t\t\tcurrentURL, \"p_p_id\", firstPortlet.getPortletId());\n\n\t\t\t\t\tresponse.sendRedirect(\n\t\t\t\t\t\tPortalUtil.getAbsoluteURL(request, redirect));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn themeDisplay;\n\t}","commit_id":"221bc1c0dad10f10488710356dbf12e6ab7ba294","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private static void _getIndexableContent(StringBuilder sb, Element root)\n\t\tthrows Exception {\n\n\t\tfor (Element el : root.elements()) {\n\t\t\tString elType = el.attributeValue(\"type\", StringPool.BLANK);\n\n\t\t\tif (elType.equals(\"text\") || elType.equals(\"text_box\") ||\n\t\t\t\telType.equals(\"text_area\")) {\n\n\t\t\t\tElement dynamicContent = el.element(\"dynamic-content\");\n\n\t\t\t\tString text = dynamicContent.getText();\n\n\t\t\t\tsb.append(text);\n\t\t\t\tsb.append(StringPool.SPACE);\n\t\t\t}\n\t\t\telse if (el.getName().equals(\"static-content\")) {\n\t\t\t\tString text = el.getText();\n\n\t\t\t\tsb.append(text);\n\t\t\t\tsb.append(StringPool.SPACE);\n\t\t\t}\n\n\t\t\t_getIndexableContent(sb, el);\n\t\t}\n\t}","id":52094,"modified_method":"private static void _getIndexableContent(StringBuilder sb, Element root)\n\t\tthrows Exception {\n\n\t\tfor (Element el : root.elements()) {\n\t\t\tString elType = el.attributeValue(\"type\", StringPool.BLANK);\n\n\t\t\tif (elType.equals(\"text\") || elType.equals(\"text_box\") ||\n\t\t\t\telType.equals(\"text_area\")) {\n\n\t\t\t\tfor (Element dynamicContent : el.elements(\"dynamic-content\")) {\n\t\t\t\t\tString text = dynamicContent.getText();\n\n\t\t\t\t\tsb.append(text);\n\t\t\t\t\tsb.append(StringPool.SPACE);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (el.getName().equals(\"static-content\")) {\n\t\t\t\tString text = el.getText();\n\n\t\t\t\tsb.append(text);\n\t\t\t\tsb.append(StringPool.SPACE);\n\t\t\t}\n\n\t\t\t_getIndexableContent(sb, el);\n\t\t}\n\t}","commit_id":"4cf52d2ba807c0c585fe0f1ffc9960471764b513","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Document getArticleDocument(\n\t\tlong companyId, long groupId, String articleId, double version,\n\t\tString title, String description, String content, String type,\n\t\tDate displayDate, String[] tagsCategories, String[] tagsEntries,\n\t\tExpandoBridge expandoBridge) {\n\n\t\tif ((content != null) &&\n\t\t\t((content.indexOf(\"<dynamic-content>\") != -1) ||\n\t\t\t (content.indexOf(\"<static-content\") != -1))) {\n\n\t\t\tcontent = _getIndexableContent(content);\n\n\t\t\tcontent = StringUtil.replace(\n\t\t\t\tcontent, \"<![CDATA[\", StringPool.BLANK);\n\t\t\tcontent = StringUtil.replace(content, \"]]>\", StringPool.BLANK);\n\t\t}\n\n\t\tcontent = StringUtil.replace(content, \"&amp;\", \"&\");\n\t\tcontent = StringUtil.replace(content, \"&lt;\", \"<\");\n\t\tcontent = StringUtil.replace(content, \"&gt;\", \">\");\n\n\t\tcontent = HtmlUtil.extractText(content);\n\n\t\tDocument doc = new DocumentImpl();\n\n\t\tdoc.addUID(PORTLET_ID, articleId);\n\n\t\tdoc.addModifiedDate(displayDate);\n\n\t\tdoc.addKeyword(Field.COMPANY_ID, companyId);\n\t\tdoc.addKeyword(Field.PORTLET_ID, PORTLET_ID);\n\t\tdoc.addKeyword(Field.GROUP_ID, groupId);\n\n\t\tdoc.addText(Field.TITLE, title);\n\t\tdoc.addText(Field.CONTENT, content);\n\t\tdoc.addText(Field.DESCRIPTION, description);\n\t\tdoc.addKeyword(Field.TAGS_CATEGORIES, tagsCategories);\n\t\tdoc.addKeyword(Field.TAGS_ENTRIES, tagsEntries);\n\n\t\tdoc.addKeyword(Field.ENTRY_CLASS_NAME, JournalArticle.class.getName());\n\t\tdoc.addKeyword(Field.ENTRY_CLASS_PK, articleId);\n\t\tdoc.addKeyword(Field.VERSION, version);\n\t\tdoc.addKeyword(Field.TYPE, type);\n\n\t\tExpandoBridgeIndexerUtil.addAttributes(doc, expandoBridge);\n\n\t\treturn doc;\n\t}","id":52095,"modified_method":"public static Document getArticleDocument(\n\t\tlong companyId, long groupId, String articleId, double version,\n\t\tString title, String description, String content, String type,\n\t\tDate displayDate, String[] tagsCategories, String[] tagsEntries,\n\t\tExpandoBridge expandoBridge) {\n\n\t\tif ((content != null) &&\n\t\t\t((content.indexOf(\"<dynamic-content\") != -1) ||\n\t\t\t (content.indexOf(\"<static-content\") != -1))) {\n\n\t\t\tcontent = _getIndexableContent(content);\n\n\t\t\tcontent = StringUtil.replace(\n\t\t\t\tcontent, \"<![CDATA[\", StringPool.BLANK);\n\t\t\tcontent = StringUtil.replace(content, \"]]>\", StringPool.BLANK);\n\t\t}\n\n\t\tcontent = StringUtil.replace(content, \"&amp;\", \"&\");\n\t\tcontent = StringUtil.replace(content, \"&lt;\", \"<\");\n\t\tcontent = StringUtil.replace(content, \"&gt;\", \">\");\n\n\t\tcontent = HtmlUtil.extractText(content);\n\n\t\tDocument doc = new DocumentImpl();\n\n\t\tdoc.addUID(PORTLET_ID, articleId);\n\n\t\tdoc.addModifiedDate(displayDate);\n\n\t\tdoc.addKeyword(Field.COMPANY_ID, companyId);\n\t\tdoc.addKeyword(Field.PORTLET_ID, PORTLET_ID);\n\t\tdoc.addKeyword(Field.GROUP_ID, groupId);\n\n\t\tdoc.addText(Field.TITLE, title);\n\t\tdoc.addText(Field.CONTENT, content);\n\t\tdoc.addText(Field.DESCRIPTION, description);\n\t\tdoc.addKeyword(Field.TAGS_CATEGORIES, tagsCategories);\n\t\tdoc.addKeyword(Field.TAGS_ENTRIES, tagsEntries);\n\n\t\tdoc.addKeyword(Field.ENTRY_CLASS_NAME, JournalArticle.class.getName());\n\t\tdoc.addKeyword(Field.ENTRY_CLASS_PK, articleId);\n\t\tdoc.addKeyword(Field.VERSION, version);\n\t\tdoc.addKeyword(Field.TYPE, type);\n\n\t\tExpandoBridgeIndexerUtil.addAttributes(doc, expandoBridge);\n\n\t\treturn doc;\n\t}","commit_id":"4cf52d2ba807c0c585fe0f1ffc9960471764b513","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected static String getElementName(Element element) {\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tsb.append(element.attributeValue(\"name\"));\n\n\t\tElement parentElement = element.getParent();\n\n\t\twhile (true) {\n\t\t\tif ((parentElement == null) ||\n\t\t\t\tparentElement.getName().equals(\"root\")) {\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tsb.insert(\n\t\t\t\t0, parentElement.attributeValue(\"name\") + StringPool.SLASH);\n\n\t\t\tparentElement = parentElement.getParent();\n\t\t}\n\n\t\treturn sb.toString();\n\t}","id":52096,"modified_method":"protected static String getElementName(Element element) {\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tsb.append(element.attributeValue(\"name\"));\n\n\t\tElement parentElement = element.getParent();\n\n\t\twhile (true) {\n\t\t\tif ((parentElement == null) ||\n\t\t\t\tparentElement.getName().equals(\"root\")) {\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tsb.insert(\n\t\t\t\t0, parentElement.attributeValue(\"name\") + StringPool.SLASH);\n\n\t\t\tparentElement = parentElement.getParent();\n\t\t}\n\n\t\tString type = element.attributeValue(\"type\");\n\n\t\tif (Validator.equals(type, \"option\")) {\n\t\t\tsb.append(StringPool.SLASH);\n\n\t\t\tsb.append(element.attributeValue(\"value\"));\n\t\t}\n\n\t\treturn sb.toString();\n\t}","commit_id":"87b0eb080a955e850ccef148a56200712e29aaf8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected static Map<String, String> getElementMap(Element element) {\n\t\tMap<String, String> elementMap = new HashMap<String, String>();\n\n\t\t// Attributes\n\n\t\tfor (Attribute attribute : element.attributes()) {\n\t\t\telementMap.put(attribute.getName(), attribute.getValue());\n\t\t}\n\n\t\t// Metadata\n\n\t\tElement metadadataElement = element.element(\"meta-data\");\n\n\t\tif (metadadataElement == null) {\n\t\t\treturn elementMap;\n\t\t}\n\n\t\tList<Element> entryElements = metadadataElement.elements(\"entry\");\n\n\t\tfor (Element entryElement : entryElements) {\n\t\t\telementMap.put(\n\t\t\t\tentryElement.attributeValue(\"name\"), entryElement.getText());\n\t\t}\n\n\t\treturn elementMap;\n\t}","id":52097,"modified_method":"protected static Map<String, String> getElementMap(Element element) {\n\t\tMap<String, String> elementMap = new HashMap<String, String>();\n\n\t\t// Attributes\n\n\t\tfor (Attribute attribute : element.attributes()) {\n\t\t\telementMap.put(attribute.getName(), attribute.getValue());\n\t\t}\n\n\t\t// Metadata\n\n\t\tfor (Element metadadataElement : element.elements(\"meta-data\")) {\n\t\t\tString metadataLanguageId = metadadataElement.attributeValue(\n\t\t\t\t\"locale\");\n\n\t\t\tfor (Element entryElement : metadadataElement.elements(\"entry\")) {\n\t\t\t\tString entryName = entryElement.attributeValue(\"name\");\n\n\t\t\t\telementMap.put(\n\t\t\t\t\tentryName.concat(metadataLanguageId),\n\t\t\t\t\tentryElement.getText());\n\t\t\t}\n\t\t}\n\n\t\treturn elementMap;\n\t}","commit_id":"87b0eb080a955e850ccef148a56200712e29aaf8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void addNotificationRecipients(\n\t\t\tKaleoNotification kaleoNotification, Notification notification)\n\t\tthrows PortalException {\n\n\t\tList<KaleoNotificationRecipient> kaleoNotificationRecipients =\n\t\t\tkaleoNotificationRecipientLocalService.\n\t\t\t\tgetKaleoNotificationRecipients(\n\t\t\t\t\tkaleoNotification.getKaleoNotificationId());\n\n\t\tfor (KaleoNotificationRecipient kaleoNotificationRecipient :\n\t\t\t\tkaleoNotificationRecipients) {\n\n\t\t\tString recipientClassName =\n\t\t\t\tkaleoNotificationRecipient.getRecipientClassName();\n\n\t\t\tlong recipientClassPK =\n\t\t\t\tkaleoNotificationRecipient.getRecipientClassPK();\n\n\t\t\tRecipient recipient = null;\n\n\t\t\tif (recipientClassName.equals(RecipientType.ADDRESS.name())) {\n\t\t\t\trecipient = new AddressRecipient(\n\t\t\t\t\tkaleoNotificationRecipient.getAddress());\n\t\t\t}\n\t\t\telse if (recipientClassName.equals(\n\t\t\t\t\t\tRecipientType.ASSIGNEES.name())) {\n\n\t\t\t\trecipient = new AssigneesRecipient();\n\t\t\t}\n\t\t\telse if (recipientClassName.equals(Role.class.getName())) {\n\t\t\t\tRole role = _roleLocalService.fetchRole(recipientClassPK);\n\n\t\t\t\trecipient = new RoleRecipient(\n\t\t\t\t\trole.getName(), role.getTypeLabel());\n\t\t\t}\n\t\t\telse if (recipientClassName.equals(RecipientType.SCRIPT.name())) {\n\t\t\t\trecipient = new ScriptRecipient(\n\t\t\t\t\tkaleoNotificationRecipient.getRecipientScript(),\n\t\t\t\t\tkaleoNotificationRecipient.getRecipientScriptLanguage(),\n\t\t\t\t\tkaleoNotificationRecipient.\n\t\t\t\t\t\tgetRecipientScriptRequiredContexts());\n\t\t\t}\n\t\t\telse if (recipientClassName.equals(User.class.getName())) {\n\t\t\t\tif (recipientClassPK > 0) {\n\t\t\t\t\tUser user = _userLocalService.getUser(recipientClassPK);\n\n\t\t\t\t\trecipient = new UserRecipient(\n\t\t\t\t\t\tuser.getUserId(), user.getScreenName(),\n\t\t\t\t\t\tuser.getEmailAddress());\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\trecipient = new UserRecipient();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trecipient.setEmailRecipientType(\n\t\t\t\tkaleoNotificationRecipient.getEmailRecipientType());\n\n\t\t\tnotification.addRecipients(recipient);\n\t\t}\n\t}","id":52098,"modified_method":"protected void addNotificationRecipients(\n\t\t\tKaleoNotification kaleoNotification, Notification notification)\n\t\tthrows PortalException {\n\n\t\tList<KaleoNotificationRecipient> kaleoNotificationRecipients =\n\t\t\tkaleoNotificationRecipientLocalService.\n\t\t\t\tgetKaleoNotificationRecipients(\n\t\t\t\t\tkaleoNotification.getKaleoNotificationId());\n\n\t\tfor (KaleoNotificationRecipient kaleoNotificationRecipient :\n\t\t\t\tkaleoNotificationRecipients) {\n\n\t\t\tString recipientClassName =\n\t\t\t\tkaleoNotificationRecipient.getRecipientClassName();\n\n\t\t\tlong recipientClassPK =\n\t\t\t\tkaleoNotificationRecipient.getRecipientClassPK();\n\n\t\t\tRecipient recipient = null;\n\n\t\t\tif (recipientClassName.equals(RecipientType.ADDRESS.name())) {\n\t\t\t\trecipient = new AddressRecipient(\n\t\t\t\t\tkaleoNotificationRecipient.getAddress());\n\t\t\t}\n\t\t\telse if (recipientClassName.equals(\n\t\t\t\t\t\tRecipientType.ASSIGNEES.name())) {\n\n\t\t\t\trecipient = new AssigneesRecipient();\n\t\t\t}\n\t\t\telse if (recipientClassName.equals(Role.class.getName())) {\n\t\t\t\tRole role = _roleLocalService.fetchRole(recipientClassPK);\n\n\t\t\t\trecipient = new RoleRecipient(\n\t\t\t\t\trole.getName(), role.getTypeLabel());\n\t\t\t}\n\t\t\telse if (recipientClassName.equals(RecipientType.SCRIPT.name())) {\n\t\t\t\trecipient = new ScriptRecipient(\n\t\t\t\t\tkaleoNotificationRecipient.getRecipientScript(),\n\t\t\t\t\tkaleoNotificationRecipient.getRecipientScriptLanguage(),\n\t\t\t\t\tkaleoNotificationRecipient.\n\t\t\t\t\t\tgetRecipientScriptRequiredContexts());\n\t\t\t}\n\t\t\telse if (recipientClassName.equals(User.class.getName())) {\n\t\t\t\tif (recipientClassPK > 0) {\n\t\t\t\t\tUser user = _userLocalService.getUser(recipientClassPK);\n\n\t\t\t\t\trecipient = new UserRecipient(\n\t\t\t\t\t\tuser.getUserId(), user.getScreenName(),\n\t\t\t\t\t\tuser.getEmailAddress());\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\trecipient = new UserRecipient();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trecipient.setNotificationReceptionType(\n\t\t\t\tNotificationReceptionType.parse(\n\t\t\t\t\tkaleoNotificationRecipient.getReceiptionType()));\n\n\t\t\tnotification.addRecipients(recipient);\n\t\t}\n\t}","commit_id":"f010fd6ff9de95d42ec98bc1585b2c30454edd68","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void exportNotificationElement(\n\t\tElement notificationElement, Notification notification) {\n\n\t\taddTextElement(notificationElement, \"name\", notification.getName());\n\n\t\tif (Validator.isNotNull(notification.getDescription())) {\n\t\t\taddTextElement(\n\t\t\t\tnotificationElement, \"description\",\n\t\t\t\tnotification.getDescription());\n\t\t}\n\n\t\taddCDataElement(\n\t\t\tnotificationElement, \"template\", notification.getTemplate());\n\t\taddTextElement(\n\t\t\tnotificationElement, \"template-language\",\n\t\t\tnotification.getTemplateLanguage().getValue());\n\n\t\tSet<NotificationType> notificationTypes =\n\t\t\tnotification.getNotificationTypes();\n\n\t\tfor (NotificationType notificationType : notificationTypes) {\n\t\t\taddTextElement(\n\t\t\t\tnotificationElement, \"notification-type\",\n\t\t\t\tnotificationType.getValue());\n\t\t}\n\n\t\tMap<Integer, Set<Recipient>> recipientsMap =\n\t\t\tnotification.getRecipientsMap();\n\n\t\tfor (Map.Entry<Integer, Set<Recipient>> recipientsEntry :\n\t\t\t\trecipientsMap.entrySet()) {\n\n\t\t\tSet<Recipient> recipients = recipientsEntry.getValue();\n\t\t\tint emailRecipientType = recipientsEntry.getKey();\n\n\t\t\texportRecipientsElement(\n\t\t\t\tnotificationElement, recipients, emailRecipientType);\n\t\t}\n\n\t\taddTextElement(\n\t\t\tnotificationElement, \"execution-type\",\n\t\t\tnotification.getExecutionType().getValue());\n\t}","id":52099,"modified_method":"protected void exportNotificationElement(\n\t\tElement notificationElement, Notification notification) {\n\n\t\taddTextElement(notificationElement, \"name\", notification.getName());\n\n\t\tif (Validator.isNotNull(notification.getDescription())) {\n\t\t\taddTextElement(\n\t\t\t\tnotificationElement, \"description\",\n\t\t\t\tnotification.getDescription());\n\t\t}\n\n\t\taddCDataElement(\n\t\t\tnotificationElement, \"template\", notification.getTemplate());\n\t\taddTextElement(\n\t\t\tnotificationElement, \"template-language\",\n\t\t\tnotification.getTemplateLanguage().getValue());\n\n\t\tSet<NotificationType> notificationTypes =\n\t\t\tnotification.getNotificationTypes();\n\n\t\tfor (NotificationType notificationType : notificationTypes) {\n\t\t\taddTextElement(\n\t\t\t\tnotificationElement, \"notification-type\",\n\t\t\t\tnotificationType.getValue());\n\t\t}\n\n\t\tMap<NotificationReceptionType, Set<Recipient>> recipientsMap =\n\t\t\tnotification.getRecipientsMap();\n\n\t\tfor (Map.Entry<NotificationReceptionType, Set<Recipient>>\n\t\t\t\trecipientsEntry :\n\t\t\t\trecipientsMap.entrySet()) {\n\n\t\t\tSet<Recipient> recipients = recipientsEntry.getValue();\n\t\t\tNotificationReceptionType notificationReceptionType =\n\t\t\t\trecipientsEntry.getKey();\n\n\t\t\texportRecipientsElement(\n\t\t\t\tnotificationElement, recipients, notificationReceptionType);\n\t\t}\n\n\t\taddTextElement(\n\t\t\tnotificationElement, \"execution-type\",\n\t\t\tnotification.getExecutionType().getValue());\n\t}","commit_id":"f010fd6ff9de95d42ec98bc1585b2c30454edd68","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void exportRecipientsElement(\n\t\tElement notificationElement, Set<Recipient> recipients,\n\t\tint emailRecipientType) {\n\n\t\tif (recipients.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\tElement recipientsElement = null;\n\n\t\tif (emailRecipientType ==\n\t\t\t\tNotificationConstants.EMAIL_RECIPIENT_TYPE.BCC.type) {\n\n\t\t\trecipientsElement = notificationElement.addElement(\n\t\t\t\t\"bcc-recipients\");\n\t\t}\n\t\telse if (emailRecipientType ==\n\t\t\t\t\tNotificationConstants.EMAIL_RECIPIENT_TYPE.CC.type) {\n\n\t\t\trecipientsElement = notificationElement.addElement(\"cc-recipients\");\n\t\t}\n\t\telse {\n\t\t\trecipientsElement = notificationElement.addElement(\"recipients\");\n\t\t}\n\n\t\tElement rolesElement = null;\n\n\t\tfor (Recipient recipient : recipients) {\n\t\t\tRecipientType recipientType = recipient.getRecipientType();\n\n\t\t\tif (recipientType.equals(RecipientType.ADDRESS)) {\n\t\t\t\tAddressRecipient addressRecipient = (AddressRecipient)recipient;\n\n\t\t\t\taddTextElement(\n\t\t\t\t\trecipientsElement, \"address\",\n\t\t\t\t\taddressRecipient.getAddress());\n\t\t\t}\n\t\t\telse if (recipientType.equals(RecipientType.ASSIGNEES)) {\n\t\t\t\taddTextElement(recipientsElement, \"assignees\", null);\n\t\t\t}\n\t\t\telse if (recipientType.equals(RecipientType.ROLE)) {\n\t\t\t\tif (rolesElement == null) {\n\t\t\t\t\trolesElement = recipientsElement.addElement(\"roles\");\n\t\t\t\t}\n\n\t\t\t\tElement roleElement = rolesElement.addElement(\"role\");\n\n\t\t\t\tRoleRecipient roleRecipient = (RoleRecipient)recipient;\n\n\t\t\t\tpopulateRoleElement(\n\t\t\t\t\troleElement, roleRecipient.getRoleId(),\n\t\t\t\t\troleRecipient.getRoleType(), roleRecipient.getRoleName(),\n\t\t\t\t\troleRecipient.isAutoCreate());\n\t\t\t}\n\t\t\telse if (recipientType.equals(RecipientType.SCRIPT)) {\n\t\t\t\tElement scriptedRecipientElement = recipientsElement.addElement(\n\t\t\t\t\t\"scripted-recipient\");\n\n\t\t\t\tScriptRecipient scriptRecipient = (ScriptRecipient)recipient;\n\n\t\t\t\tScriptLanguage scriptLanguage =\n\t\t\t\t\tscriptRecipient.getScriptLanguage();\n\n\t\t\t\tpopulateScriptingElement(\n\t\t\t\t\tscriptedRecipientElement, scriptRecipient.getScript(),\n\t\t\t\t\tscriptLanguage.getValue(),\n\t\t\t\t\tscriptRecipient.getScriptRequiredContexts());\n\t\t\t}\n\t\t\telse if (recipientType.equals(RecipientType.USER)) {\n\t\t\t\tElement userElement = recipientsElement.addElement(\"user\");\n\n\t\t\t\tUserRecipient userRecipient = (UserRecipient)recipient;\n\n\t\t\t\tpopulateUserElement(\n\t\t\t\t\tuserElement, userRecipient.getUserId(),\n\t\t\t\t\tuserRecipient.getEmailAddress(),\n\t\t\t\t\tuserRecipient.getScreenName());\n\t\t\t}\n\t\t}\n\t}","id":52100,"modified_method":"protected void exportRecipientsElement(\n\t\tElement notificationElement, Set<Recipient> recipients,\n\t\tNotificationReceptionType notificationReceptionType) {\n\n\t\tif (recipients.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\tElement recipientsElement = notificationElement.addElement(\n\t\t\t\"recipients\");\n\n\t\trecipientsElement.addAttribute(\n\t\t\t\"receptionType\", notificationReceptionType.getValue());\n\n\t\tElement rolesElement = null;\n\n\t\tfor (Recipient recipient : recipients) {\n\t\t\tRecipientType recipientType = recipient.getRecipientType();\n\n\t\t\tif (recipientType.equals(RecipientType.ADDRESS)) {\n\t\t\t\tAddressRecipient addressRecipient = (AddressRecipient)recipient;\n\n\t\t\t\taddTextElement(\n\t\t\t\t\trecipientsElement, \"address\",\n\t\t\t\t\taddressRecipient.getAddress());\n\t\t\t}\n\t\t\telse if (recipientType.equals(RecipientType.ASSIGNEES)) {\n\t\t\t\taddTextElement(recipientsElement, \"assignees\", null);\n\t\t\t}\n\t\t\telse if (recipientType.equals(RecipientType.ROLE)) {\n\t\t\t\tif (rolesElement == null) {\n\t\t\t\t\trolesElement = recipientsElement.addElement(\"roles\");\n\t\t\t\t}\n\n\t\t\t\tElement roleElement = rolesElement.addElement(\"role\");\n\n\t\t\t\tRoleRecipient roleRecipient = (RoleRecipient)recipient;\n\n\t\t\t\tpopulateRoleElement(\n\t\t\t\t\troleElement, roleRecipient.getRoleId(),\n\t\t\t\t\troleRecipient.getRoleType(), roleRecipient.getRoleName(),\n\t\t\t\t\troleRecipient.isAutoCreate());\n\t\t\t}\n\t\t\telse if (recipientType.equals(RecipientType.SCRIPT)) {\n\t\t\t\tElement scriptedRecipientElement = recipientsElement.addElement(\n\t\t\t\t\t\"scripted-recipient\");\n\n\t\t\t\tScriptRecipient scriptRecipient = (ScriptRecipient)recipient;\n\n\t\t\t\tScriptLanguage scriptLanguage =\n\t\t\t\t\tscriptRecipient.getScriptLanguage();\n\n\t\t\t\tpopulateScriptingElement(\n\t\t\t\t\tscriptedRecipientElement, scriptRecipient.getScript(),\n\t\t\t\t\tscriptLanguage.getValue(),\n\t\t\t\t\tscriptRecipient.getScriptRequiredContexts());\n\t\t\t}\n\t\t\telse if (recipientType.equals(RecipientType.USER)) {\n\t\t\t\tElement userElement = recipientsElement.addElement(\"user\");\n\n\t\t\t\tUserRecipient userRecipient = (UserRecipient)recipient;\n\n\t\t\t\tpopulateUserElement(\n\t\t\t\t\tuserElement, userRecipient.getUserId(),\n\t\t\t\t\tuserRecipient.getEmailAddress(),\n\t\t\t\t\tuserRecipient.getScreenName());\n\t\t\t}\n\t\t}\n\t}","commit_id":"f010fd6ff9de95d42ec98bc1585b2c30454edd68","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void addRecipients(Recipient recipient) {\n\t\tSet<Recipient> recipients = _recipientsMap.get(\n\t\t\trecipient.getEmailRecipientType());\n\n\t\tif (recipients == null) {\n\t\t\trecipients = new HashSet<>();\n\t\t}\n\n\t\trecipients.add(recipient);\n\n\t\t_recipientsMap.put(recipient.getEmailRecipientType(), recipients);\n\t}","id":52101,"modified_method":"public void addRecipients(Recipient recipient) {\n\t\tSet<Recipient> recipients = _recipientsMap.get(\n\t\t\trecipient.getNotificationReceptionType());\n\n\t\tif (recipients == null) {\n\t\t\trecipients = new HashSet<>();\n\t\t}\n\n\t\trecipients.add(recipient);\n\n\t\t_recipientsMap.put(\n\t\t\trecipient.getNotificationReceptionType(), recipients);\n\t}","commit_id":"f010fd6ff9de95d42ec98bc1585b2c30454edd68","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public Map<Integer, Set<Recipient>> getRecipientsMap() {\n\t\treturn _recipientsMap;\n\t}","id":52102,"modified_method":"public Map<NotificationReceptionType, Set<Recipient>> getRecipientsMap() {\n\t\treturn _recipientsMap;\n\t}","commit_id":"f010fd6ff9de95d42ec98bc1585b2c30454edd68","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void parseRecipients(\n\t\tElement recipientsElement, Notification notification,\n\t\tint recipientType) {\n\n\t\tif (recipientsElement == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tList<Element> addressRecipientElements = recipientsElement.elements(\n\t\t\t\"address\");\n\n\t\tfor (Element addressRecipientElement : addressRecipientElements) {\n\t\t\tAddressRecipient addressRecipient = new AddressRecipient(\n\t\t\t\taddressRecipientElement.getText());\n\n\t\t\taddressRecipient.setEmailRecipientType(recipientType);\n\n\t\t\tnotification.addRecipients(addressRecipient);\n\t\t}\n\n\t\tElement assigneesRecipientElement = recipientsElement.element(\n\t\t\t\"assignees\");\n\n\t\tif (assigneesRecipientElement != null) {\n\t\t\tAssigneesRecipient assigneesRecipient = new AssigneesRecipient();\n\n\t\t\tassigneesRecipient.setEmailRecipientType(recipientType);\n\n\t\t\tnotification.addRecipients(assigneesRecipient);\n\t\t}\n\n\t\tElement rolesElement = recipientsElement.element(\"roles\");\n\n\t\tif (rolesElement != null) {\n\t\t\tList<Element> roleReceipientElements = rolesElement.elements(\n\t\t\t\t\"role\");\n\n\t\t\tfor (Element roleReceipientElement : roleReceipientElements) {\n\t\t\t\tlong roleId = GetterUtil.getLong(\n\t\t\t\t\troleReceipientElement.elementText(\"role-id\"));\n\t\t\t\tString roleType = roleReceipientElement.elementText(\n\t\t\t\t\t\"role-type\");\n\t\t\t\tString name = roleReceipientElement.elementText(\"name\");\n\n\t\t\t\tRoleRecipient roleRecipient = null;\n\n\t\t\t\tif (roleId > 0) {\n\t\t\t\t\troleRecipient = new RoleRecipient(roleId, roleType);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\troleRecipient = new RoleRecipient(name, roleType);\n\n\t\t\t\t\tboolean autoCreate = GetterUtil.getBoolean(\n\t\t\t\t\t\troleReceipientElement.elementText(\"auto-create\"), true);\n\n\t\t\t\t\troleRecipient.setAutoCreate(autoCreate);\n\t\t\t\t}\n\n\t\t\t\troleRecipient.setEmailRecipientType(recipientType);\n\n\t\t\t\tnotification.addRecipients(roleRecipient);\n\t\t\t}\n\t\t}\n\n\t\tList<Element> scriptedRecipientElements = recipientsElement.elements(\n\t\t\t\"scripted-recipient\");\n\n\t\tfor (Element scriptedRecipientElement : scriptedRecipientElements) {\n\t\t\tString script = scriptedRecipientElement.elementText(\"script\");\n\t\t\tString scriptLanguage = scriptedRecipientElement.elementText(\n\t\t\t\t\"script-language\");\n\t\t\tString scriptRequiredContexts =\n\t\t\t\tscriptedRecipientElement.elementText(\n\t\t\t\t\t\"script-required-contexts\");\n\n\t\t\tScriptRecipient scriptRecipient = new ScriptRecipient(\n\t\t\t\tscript, scriptLanguage, scriptRequiredContexts);\n\n\t\t\tscriptRecipient.setEmailRecipientType(recipientType);\n\n\t\t\tnotification.addRecipients(scriptRecipient);\n\t\t}\n\n\t\tList<Element> userRecipientElements = recipientsElement.elements(\n\t\t\t\"user\");\n\n\t\tfor (Element userRecipientElement : userRecipientElements) {\n\t\t\tlong userId = GetterUtil.getLong(\n\t\t\t\tuserRecipientElement.elementText(\"user-id\"));\n\t\t\tString screenName = userRecipientElement.elementText(\"screen-name\");\n\t\t\tString emailAddress = userRecipientElement.elementText(\n\t\t\t\t\"email-address\");\n\n\t\t\tUserRecipient userRecipient = new UserRecipient(\n\t\t\t\tuserId, screenName, emailAddress);\n\n\t\t\tuserRecipient.setEmailRecipientType(recipientType);\n\n\t\t\tnotification.addRecipients(userRecipient);\n\t\t}\n\t}","id":52103,"modified_method":"protected void parseRecipients(\n\t\tElement recipientsElement, Notification notification,\n\t\tNotificationReceptionType notificationReceptionType) {\n\n\t\tif (recipientsElement == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tList<Element> addressRecipientElements = recipientsElement.elements(\n\t\t\t\"address\");\n\n\t\tfor (Element addressRecipientElement : addressRecipientElements) {\n\t\t\tAddressRecipient addressRecipient = new AddressRecipient(\n\t\t\t\taddressRecipientElement.getText());\n\n\t\t\taddressRecipient.setNotificationReceptionType(\n\t\t\t\tnotificationReceptionType);\n\n\t\t\tnotification.addRecipients(addressRecipient);\n\t\t}\n\n\t\tElement assigneesRecipientElement = recipientsElement.element(\n\t\t\t\"assignees\");\n\n\t\tif (assigneesRecipientElement != null) {\n\t\t\tAssigneesRecipient assigneesRecipient = new AssigneesRecipient();\n\n\t\t\tassigneesRecipient.setNotificationReceptionType(\n\t\t\t\tnotificationReceptionType);\n\n\t\t\tnotification.addRecipients(assigneesRecipient);\n\t\t}\n\n\t\tElement rolesElement = recipientsElement.element(\"roles\");\n\n\t\tif (rolesElement != null) {\n\t\t\tList<Element> roleReceipientElements = rolesElement.elements(\n\t\t\t\t\"role\");\n\n\t\t\tfor (Element roleReceipientElement : roleReceipientElements) {\n\t\t\t\tlong roleId = GetterUtil.getLong(\n\t\t\t\t\troleReceipientElement.elementText(\"role-id\"));\n\t\t\t\tString roleType = roleReceipientElement.elementText(\n\t\t\t\t\t\"role-type\");\n\t\t\t\tString name = roleReceipientElement.elementText(\"name\");\n\n\t\t\t\tRoleRecipient roleRecipient = null;\n\n\t\t\t\tif (roleId > 0) {\n\t\t\t\t\troleRecipient = new RoleRecipient(roleId, roleType);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\troleRecipient = new RoleRecipient(name, roleType);\n\n\t\t\t\t\tboolean autoCreate = GetterUtil.getBoolean(\n\t\t\t\t\t\troleReceipientElement.elementText(\"auto-create\"), true);\n\n\t\t\t\t\troleRecipient.setAutoCreate(autoCreate);\n\t\t\t\t}\n\n\t\t\t\troleRecipient.setNotificationReceptionType(\n\t\t\t\t\tnotificationReceptionType);\n\n\t\t\t\tnotification.addRecipients(roleRecipient);\n\t\t\t}\n\t\t}\n\n\t\tList<Element> scriptedRecipientElements = recipientsElement.elements(\n\t\t\t\"scripted-recipient\");\n\n\t\tfor (Element scriptedRecipientElement : scriptedRecipientElements) {\n\t\t\tString script = scriptedRecipientElement.elementText(\"script\");\n\t\t\tString scriptLanguage = scriptedRecipientElement.elementText(\n\t\t\t\t\"script-language\");\n\t\t\tString scriptRequiredContexts =\n\t\t\t\tscriptedRecipientElement.elementText(\n\t\t\t\t\t\"script-required-contexts\");\n\n\t\t\tScriptRecipient scriptRecipient = new ScriptRecipient(\n\t\t\t\tscript, scriptLanguage, scriptRequiredContexts);\n\n\t\t\tscriptRecipient.setNotificationReceptionType(\n\t\t\t\tnotificationReceptionType);\n\n\t\t\tnotification.addRecipients(scriptRecipient);\n\t\t}\n\n\t\tList<Element> userRecipientElements = recipientsElement.elements(\n\t\t\t\"user\");\n\n\t\tfor (Element userRecipientElement : userRecipientElements) {\n\t\t\tlong userId = GetterUtil.getLong(\n\t\t\t\tuserRecipientElement.elementText(\"user-id\"));\n\t\t\tString screenName = userRecipientElement.elementText(\"screen-name\");\n\t\t\tString emailAddress = userRecipientElement.elementText(\n\t\t\t\t\"email-address\");\n\n\t\t\tUserRecipient userRecipient = new UserRecipient(\n\t\t\t\tuserId, screenName, emailAddress);\n\n\t\t\tuserRecipient.setNotificationReceptionType(\n\t\t\t\tnotificationReceptionType);\n\n\t\t\tnotification.addRecipients(userRecipient);\n\t\t}\n\t}","commit_id":"f010fd6ff9de95d42ec98bc1585b2c30454edd68","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void parseNotificationElements(\n\t\tList<Element> notificationElements,\n\t\tNotificationAware notificationAware) {\n\n\t\tif (notificationElements.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\tSet<Notification> notifications = new HashSet<>(\n\t\t\tnotificationElements.size());\n\n\t\tfor (Element notificationElement : notificationElements) {\n\t\t\tString name = notificationElement.elementText(\"name\");\n\t\t\tString description = notificationElement.elementText(\"description\");\n\t\t\tString executionType = notificationElement.elementText(\n\t\t\t\t\"execution-type\");\n\t\t\tString template = notificationElement.elementText(\"template\");\n\t\t\tString templateLanguage = notificationElement.elementText(\n\t\t\t\t\"template-language\");\n\n\t\t\tNotification notification = new Notification(\n\t\t\t\tname, description, executionType, template, templateLanguage);\n\n\t\t\tList<Element> notificationTypeElements =\n\t\t\t\tnotificationElement.elements(\"notification-type\");\n\n\t\t\tfor (Element notificationTypeElement : notificationTypeElements) {\n\t\t\t\tnotification.addNotificationType(\n\t\t\t\t\tnotificationTypeElement.getText());\n\t\t\t}\n\n\t\t\tElement bccRecipientsElement = notificationElement.element(\n\t\t\t\t\"bcc-recipients\");\n\n\t\t\tparseRecipients(\n\t\t\t\tbccRecipientsElement, notification,\n\t\t\t\tNotificationConstants.EMAIL_RECIPIENT_TYPE.BCC.type);\n\n\t\t\tElement ccRecipientsElement = notificationElement.element(\n\t\t\t\t\"cc-recipients\");\n\n\t\t\tparseRecipients(\n\t\t\t\tccRecipientsElement, notification,\n\t\t\t\tNotificationConstants.EMAIL_RECIPIENT_TYPE.CC.type);\n\n\t\t\tElement recipientsElement = notificationElement.element(\n\t\t\t\t\"recipients\");\n\n\t\t\tparseRecipients(\n\t\t\t\trecipientsElement, notification,\n\t\t\t\tNotificationConstants.EMAIL_RECIPIENT_TYPE.TO.type);\n\n\t\t\tnotifications.add(notification);\n\t\t}\n\n\t\tnotificationAware.setNotifications(notifications);\n\t}","id":52104,"modified_method":"protected void parseNotificationElements(\n\t\tList<Element> notificationElements,\n\t\tNotificationAware notificationAware) {\n\n\t\tif (notificationElements.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\tSet<Notification> notifications = new HashSet<>(\n\t\t\tnotificationElements.size());\n\n\t\tfor (Element notificationElement : notificationElements) {\n\t\t\tString name = notificationElement.elementText(\"name\");\n\t\t\tString description = notificationElement.elementText(\"description\");\n\t\t\tString executionType = notificationElement.elementText(\n\t\t\t\t\"execution-type\");\n\t\t\tString template = notificationElement.elementText(\"template\");\n\t\t\tString templateLanguage = notificationElement.elementText(\n\t\t\t\t\"template-language\");\n\n\t\t\tNotification notification = new Notification(\n\t\t\t\tname, description, executionType, template, templateLanguage);\n\n\t\t\tList<Element> notificationTypeElements =\n\t\t\t\tnotificationElement.elements(\"notification-type\");\n\n\t\t\tfor (Element notificationTypeElement : notificationTypeElements) {\n\t\t\t\tnotification.addNotificationType(\n\t\t\t\t\tnotificationTypeElement.getText());\n\t\t\t}\n\n\t\t\tList<Element> recipientsElements = notificationElement.elements(\n\t\t\t\t\"recipients\");\n\n\t\t\tfor (Element recipientsElement : recipientsElements) {\n\t\t\t\tparseRecipients(\n\t\t\t\t\trecipientsElement, notification,\n\t\t\t\t\tNotificationReceptionType.parse(\n\t\t\t\t\t\trecipientsElement.attributeValue(\"receptionType\")));\n\t\t\t}\n\n\t\t\tnotifications.add(notification);\n\t\t}\n\n\t\tnotificationAware.setNotifications(notifications);\n\t}","commit_id":"f010fd6ff9de95d42ec98bc1585b2c30454edd68","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"/**\n     * Postprocess the dataset and fix all merged references to point to the actual\n     * data.\n     */\n    public void fixReferences() {\n        for (Way w : sourceDataSet.getWays()) {\n            if (!conflicts.hasConflictForTheir(w) && objectsWithChildrenToMerge.contains(w.getPrimitiveId())) {\n                mergeNodeList(w);\n                fixIncomplete(w);\n            }\n        }\n        for (Relation r : sourceDataSet.getRelations()) {\n            if (!conflicts.hasConflictForTheir(r) && objectsWithChildrenToMerge.contains(r.getPrimitiveId())) {\n                mergeRelationMembers(r);\n            }\n        }\n        for (OsmPrimitive source: deletedObjectsToUnlink) {\n            OsmPrimitive target = getMergeTarget(source);\n            if (target == null)\n                throw new RuntimeException(tr(\"Missing merge target for object with id {0}\", source.getUniqueId()));\n            targetDataSet.unlinkReferencesToPrimitive(target);\n        }\n    }","id":52105,"modified_method":"/**\n     * Postprocess the dataset and fix all merged references to point to the actual\n     * data.\n     */\n    public void fixReferences() {\n        for (Way w : sourceDataSet.getWays()) {\n            if (!conflicts.hasConflictForTheir(w) && objectsWithChildrenToMerge.contains(w.getPrimitiveId())) {\n                mergeNodeList(w);\n                fixIncomplete(w);\n            }\n        }\n        for (Relation r : sourceDataSet.getRelations()) {\n            if (!conflicts.hasConflictForTheir(r) && objectsWithChildrenToMerge.contains(r.getPrimitiveId())) {\n                mergeRelationMembers(r);\n            }\n        }\n\n        deleteMarkedObjects();\n    }","commit_id":"27520ed60238b4bf372f08ac40361c8d4569e474","url":"https://github.com/openstreetmap/josm"},{"original_method":"/**\n     * Tries to merge a primitive <code>source<\/code> into an existing primitive with the same id.\n     *\n     * @param source  the source primitive which is to be merged into a target primitive\n     * @return true, if this method was able to merge <code>source<\/code> into a target object; false, otherwise\n     */\n    private boolean mergeById(OsmPrimitive source) {\n        OsmPrimitive target = targetDataSet.getPrimitiveById(source.getId(), source.getType());\n        // merge other into an existing primitive with the same id, if possible\n        //\n        if (target == null)\n            return false;\n        // found a corresponding target, remember it\n        mergedMap.put(source.getPrimitiveId(), target.getPrimitiveId());\n\n        if (target.getVersion() > source.getVersion())\n            // target.version > source.version => keep target version\n            return true;\n\n        if (target.isIncomplete() && !source.isIncomplete()) {\n            // target is incomplete, source completes it\n            // => merge source into target\n            //\n            target.mergeFrom(source);\n            objectsWithChildrenToMerge.add(source.getPrimitiveId());\n        } else if (!target.isIncomplete() && source.isIncomplete()) {\n            // target is complete and source is incomplete\n            // => keep target, it has more information already\n            //\n        } else if (target.isIncomplete() && source.isIncomplete()) {\n            // target and source are incomplete. Doesn't matter which one to\n            // take. We take target.\n            //\n        } else if (target.isDeleted() && ! source.isDeleted() && target.getVersion() == source.getVersion()) {\n            // same version, but target is deleted. Assume target takes precedence\n            // otherwise too many conflicts when refreshing from the server\n            // but, if source has a referrer that is not in the target dataset there is a conflict\n            // If target dataset refers to the deleted primitive, conflict will be added in fixReferences method\n            for (OsmPrimitive referrer: source.getReferrers()) {\n                if (targetDataSet.getPrimitiveById(referrer.getPrimitiveId()) == null) {\n                    conflicts.add(new Conflict<OsmPrimitive>(target, source, true));\n                    target.setDeleted(false);\n                    break;\n                }\n            }\n        } else if (target.isDeleted() != source.isDeleted()) {\n            // differences in deleted state have to be resolved manually. This can\n            // happen if one layer is merged onto another layer\n            //\n            conflicts.add(target,source);\n        } else if (! target.isModified() && source.isModified()) {\n            // target not modified. We can assume that source is the most recent version.\n            // clone it into target. But check first, whether source is deleted. if so,\n            // make sure that target is not referenced any more in myDataSet. If it is there\n            // is a conflict\n            if (source.isDeleted()) {\n                if (!target.getReferrers().isEmpty()) {\n                    conflicts.add(target, source);\n                }\n            } else {\n                target.mergeFrom(source);\n                objectsWithChildrenToMerge.add(source.getPrimitiveId());\n            }\n        } else if (! target.isModified() && !source.isModified() && target.getVersion() == source.getVersion()) {\n            // both not modified. Merge nevertheless.\n            // This helps when updating \"empty\" relations, see #4295\n            target.mergeFrom(source);\n            objectsWithChildrenToMerge.add(source.getPrimitiveId());\n        } else if (! target.isModified() && !source.isModified() && target.getVersion() < source.getVersion()) {\n            // my not modified but other is newer. clone other onto mine.\n            //\n            target.mergeFrom(source);\n            objectsWithChildrenToMerge.add(source.getPrimitiveId());\n        } else if (target.isModified() && ! source.isModified() && target.getVersion() == source.getVersion()) {\n            // target is same as source but target is modified\n            // => keep target and reset modified flag if target and source are semantically equal\n            if (target.hasEqualSemanticAttributes(source)) {\n                target.setModified(false);\n            }\n        } else if (! target.hasEqualSemanticAttributes(source)) {\n            // target is modified and is not semantically equal with source. Can't automatically\n            // resolve the differences\n            // =>  create a conflict\n            conflicts.add(target,source);\n        } else {\n            // clone from other. mergeFrom will mainly copy\n            // technical attributes like timestamp or user information. Semantic\n            // attributes should already be equal if we get here.\n            //\n            target.mergeFrom(source);\n            objectsWithChildrenToMerge.add(source.getPrimitiveId());\n        }\n        return true;\n    }","id":52106,"modified_method":"/**\n     * Tries to merge a primitive <code>source<\/code> into an existing primitive with the same id.\n     *\n     * @param source  the source primitive which is to be merged into a target primitive\n     * @return true, if this method was able to merge <code>source<\/code> into a target object; false, otherwise\n     */\n    private boolean mergeById(OsmPrimitive source) {\n        OsmPrimitive target = targetDataSet.getPrimitiveById(source.getId(), source.getType());\n        // merge other into an existing primitive with the same id, if possible\n        //\n        if (target == null)\n            return false;\n        // found a corresponding target, remember it\n        mergedMap.put(source.getPrimitiveId(), target.getPrimitiveId());\n\n        if (target.getVersion() > source.getVersion())\n            // target.version > source.version => keep target version\n            return true;\n\n        if (target.isIncomplete() && !source.isIncomplete()) {\n            // target is incomplete, source completes it\n            // => merge source into target\n            //\n            target.mergeFrom(source);\n            objectsWithChildrenToMerge.add(source.getPrimitiveId());\n        } else if (!target.isIncomplete() && source.isIncomplete()) {\n            // target is complete and source is incomplete\n            // => keep target, it has more information already\n            //\n        } else if (target.isIncomplete() && source.isIncomplete()) {\n            // target and source are incomplete. Doesn't matter which one to\n            // take. We take target.\n            //\n        } else if (target.isVisible() != source.isVisible() && target.getVersion() == source.getVersion())\n            // Same version, but different \"visible\" attribute. It indicates a serious problem in datasets.\n            // For example, datasets can be fetched from different OSM servers or badly hand-modified.\n            // We shouldn't merge that datasets.\n            throw new DataIntegrityProblemException(tr(\"Conflict in 'visible' attribute for object of type {0} with id {1}\",\n                    target.getType(), target.getId()));\n        else if (target.isDeleted() && ! source.isDeleted() && target.getVersion() == source.getVersion()) {\n            // same version, but target is deleted. Assume target takes precedence\n            // otherwise too many conflicts when refreshing from the server\n            // but, if source has a referrer that is not in the target dataset there is a conflict\n            // If target dataset refers to the deleted primitive, conflict will be added in fixReferences method\n            for (OsmPrimitive referrer: source.getReferrers()) {\n                if (targetDataSet.getPrimitiveById(referrer.getPrimitiveId()) == null) {\n                    conflicts.add(new Conflict<OsmPrimitive>(target, source, true));\n                    target.setDeleted(false);\n                    break;\n                }\n            }\n        } else if (! target.isModified() && source.isDeleted()) {\n            // target not modified. We can assume that source is the most recent version,\n            // so mark it to be deleted.\n            //\n            objectsToDelete.add(target);\n        } else if (! target.isModified() && source.isModified()) {\n            // target not modified. We can assume that source is the most recent version.\n            // clone it into target.\n            target.mergeFrom(source);\n            objectsWithChildrenToMerge.add(source.getPrimitiveId());\n        } else if (! target.isModified() && !source.isModified() && target.getVersion() == source.getVersion()) {\n            // both not modified. Merge nevertheless.\n            // This helps when updating \"empty\" relations, see #4295\n            target.mergeFrom(source);\n            objectsWithChildrenToMerge.add(source.getPrimitiveId());\n        } else if (! target.isModified() && !source.isModified() && target.getVersion() < source.getVersion()) {\n            // my not modified but other is newer. clone other onto mine.\n            //\n            target.mergeFrom(source);\n            objectsWithChildrenToMerge.add(source.getPrimitiveId());\n        } else if (target.isModified() && ! source.isModified() && target.getVersion() == source.getVersion()) {\n            // target is same as source but target is modified\n            // => keep target and reset modified flag if target and source are semantically equal\n            if (target.hasEqualSemanticAttributes(source)) {\n                target.setModified(false);\n            }\n        } else if (source.isDeleted() != target.isDeleted()) {\n            // target is modified and deleted state differs.\n            // this have to be resolved manually.\n            //\n            conflicts.add(target,source);\n        } else if (! target.hasEqualSemanticAttributes(source)) {\n            // target is modified and is not semantically equal with source. Can't automatically\n            // resolve the differences\n            // =>  create a conflict\n            conflicts.add(target,source);\n        } else {\n            // clone from other. mergeFrom will mainly copy\n            // technical attributes like timestamp or user information. Semantic\n            // attributes should already be equal if we get here.\n            //\n            target.mergeFrom(source);\n            objectsWithChildrenToMerge.add(source.getPrimitiveId());\n        }\n        return true;\n    }","commit_id":"27520ed60238b4bf372f08ac40361c8d4569e474","url":"https://github.com/openstreetmap/josm"},{"original_method":"/**\n     * constructor\n     *\n     * The visitor will merge <code>theirDataSet<\/code> onto <code>myDataSet<\/code>\n     *\n     * @param targetDataSet  dataset with my primitives. Must not be null.\n     * @param sourceDataSet dataset with their primitives. Ignored, if null.\n     * @throws IllegalArgumentException thrown if myDataSet is null\n     */\n    public DataSetMerger(DataSet targetDataSet, DataSet sourceDataSet) throws IllegalArgumentException {\n        CheckParameterUtil.ensureParameterNotNull(targetDataSet, \"targetDataSet\");\n        this.targetDataSet = targetDataSet;\n        this.sourceDataSet = sourceDataSet;\n        conflicts = new ConflictCollection();\n        mergedMap = new HashMap<PrimitiveId, PrimitiveId>();\n        objectsWithChildrenToMerge = new HashSet<PrimitiveId>();\n        deletedObjectsToUnlink = new HashSet<OsmPrimitive>();\n    }","id":52107,"modified_method":"/**\n     * constructor\n     *\n     * The visitor will merge <code>theirDataSet<\/code> onto <code>myDataSet<\/code>\n     *\n     * @param targetDataSet  dataset with my primitives. Must not be null.\n     * @param sourceDataSet dataset with their primitives. Ignored, if null.\n     * @throws IllegalArgumentException thrown if myDataSet is null\n     */\n    public DataSetMerger(DataSet targetDataSet, DataSet sourceDataSet) throws IllegalArgumentException {\n        CheckParameterUtil.ensureParameterNotNull(targetDataSet, \"targetDataSet\");\n        this.targetDataSet = targetDataSet;\n        this.sourceDataSet = sourceDataSet;\n        conflicts = new ConflictCollection();\n        mergedMap = new HashMap<PrimitiveId, PrimitiveId>();\n        objectsWithChildrenToMerge = new HashSet<PrimitiveId>();\n        objectsToDelete = new HashSet<OsmPrimitive>();\n    }","commit_id":"27520ed60238b4bf372f08ac40361c8d4569e474","url":"https://github.com/openstreetmap/josm"},{"original_method":"/**\n         * Read out the common attributes from atts and put them into this.current.\n         */\n        void readCommon(Attributes atts, PrimitiveData current) throws SAXException {\n            current.setId(getLong(atts, \"id\"));\n            if (current.getUniqueId() == 0) {\n                throwException(tr(\"Illegal object with ID=0.\"));\n            }\n\n            String time = atts.getValue(\"timestamp\");\n            if (time != null && time.length() != 0) {\n                current.setTimestamp(DateUtils.fromString(time));\n            }\n\n            // user attribute added in 0.4 API\n            String user = atts.getValue(\"user\");\n            // uid attribute added in 0.6 API\n            String uid = atts.getValue(\"uid\");\n            current.setUser(createUser(uid, user));\n\n            // visible attribute added in 0.4 API\n            String visible = atts.getValue(\"visible\");\n            if (visible != null) {\n                current.setVisible(Boolean.parseBoolean(visible));\n            }\n\n            String versionString = atts.getValue(\"version\");\n            int version = 0;\n            if (versionString != null) {\n                try {\n                    version = Integer.parseInt(versionString);\n                } catch(NumberFormatException e) {\n                    throwException(tr(\"Illegal value for attribute ''version'' on OSM primitive with ID {0}. Got {1}.\", Long.toString(current.getUniqueId()), versionString));\n                }\n                if (ds.getVersion().equals(\"0.6\")){\n                    if (version <= 0 && current.getUniqueId() > 0) {\n                        throwException(tr(\"Illegal value for attribute ''version'' on OSM primitive with ID {0}. Got {1}.\", Long.toString(current.getUniqueId()), versionString));\n                    } else if (version < 0 && current.getUniqueId() <= 0) {\n                        System.out.println(tr(\"WARNING: Normalizing value of attribute ''version'' of element {0} to {2}, API version is ''{3}''. Got {1}.\", current.getUniqueId(), version, 0, \"0.6\"));\n                        version = 0;\n                    }\n                } else if (ds.getVersion().equals(\"0.5\")) {\n                    if (version <= 0 && current.getUniqueId() > 0) {\n                        System.out.println(tr(\"WARNING: Normalizing value of attribute ''version'' of element {0} to {2}, API version is ''{3}''. Got {1}.\", current.getUniqueId(), version, 1, \"0.5\"));\n                        version = 1;\n                    } else if (version < 0 && current.getUniqueId() <= 0) {\n                        System.out.println(tr(\"WARNING: Normalizing value of attribute ''version'' of element {0} to {2}, API version is ''{3}''. Got {1}.\", current.getUniqueId(), version, 0, \"0.5\"));\n                        version = 0;\n                    }\n                } else {\n                    // should not happen. API version has been checked before\n                    throwException(tr(\"Unknown or unsupported API version. Got {0}.\", ds.getVersion()));\n                }\n            } else {\n                // version expected for OSM primitives with an id assigned by the server (id > 0), since API 0.6\n                //\n                if (current.getUniqueId() > 0 && ds.getVersion() != null && ds.getVersion().equals(\"0.6\")) {\n                    throwException(tr(\"Missing attribute ''version'' on OSM primitive with ID {0}.\", Long.toString(current.getUniqueId())));\n                } else if (current.getUniqueId() > 0 && ds.getVersion() != null && ds.getVersion().equals(\"0.5\")) {\n                    // default version in 0.5 files for existing primitives\n                    System.out.println(tr(\"WARNING: Normalizing value of attribute ''version'' of element {0} to {2}, API version is ''{3}''. Got {1}.\", current.getUniqueId(), version, 1, \"0.5\"));\n                    version= 1;\n                } else if (current.getUniqueId() <= 0 && ds.getVersion() != null && ds.getVersion().equals(\"0.5\")) {\n                    // default version in 0.5 files for new primitives, no warning necessary. This is\n                    // (was) legal in API 0.5\n                    version= 0;\n                }\n            }\n            current.setVersion(version);\n\n            String action = atts.getValue(\"action\");\n            if (action == null) {\n                // do nothing\n            } else if (action.equals(\"delete\")) {\n                current.setDeleted(true);\n                current.setModified(true);\n            } else if (action.equals(\"modify\")) {\n                current.setModified(true);\n            }\n\n            String v = atts.getValue(\"changeset\");\n            if (v == null) {\n                current.setChangesetId(0);\n            } else {\n                try {\n                    current.setChangesetId(Integer.parseInt(v));\n                } catch(NumberFormatException e) {\n                    if (current.getUniqueId() <= 0) {\n                        // for a new primitive we just log a warning\n                        System.out.println(tr(\"Illegal value for attribute ''changeset'' on new object {1}. Got {0}. Resetting to 0.\", v, current.getUniqueId()));\n                        current.setChangesetId(0);\n                    } else {\n                        // for an existing primitive this is a problem\n                        throwException(tr(\"Illegal value for attribute ''changeset''. Got {0}.\", v));\n                    }\n                }\n                if (current.getChangesetId() <=0) {\n                    if (current.getUniqueId() <= 0) {\n                        // for a new primitive we just log a warning\n                        System.out.println(tr(\"Illegal value for attribute ''changeset'' on new object {1}. Got {0}. Resetting to 0.\", v, current.getUniqueId()));\n                        current.setChangesetId(0);\n                    } else {\n                        // for an existing primitive this is a problem\n                        throwException(tr(\"Illegal value for attribute ''changeset''. Got {0}.\", v));\n                    }\n                }\n            }\n        }","id":52108,"modified_method":"/**\n         * Read out the common attributes from atts and put them into this.current.\n         */\n        void readCommon(Attributes atts, PrimitiveData current) throws SAXException {\n            current.setId(getLong(atts, \"id\"));\n            if (current.getUniqueId() == 0) {\n                throwException(tr(\"Illegal object with ID=0.\"));\n            }\n\n            String time = atts.getValue(\"timestamp\");\n            if (time != null && time.length() != 0) {\n                current.setTimestamp(DateUtils.fromString(time));\n            }\n\n            // user attribute added in 0.4 API\n            String user = atts.getValue(\"user\");\n            // uid attribute added in 0.6 API\n            String uid = atts.getValue(\"uid\");\n            current.setUser(createUser(uid, user));\n\n            // visible attribute added in 0.4 API\n            String visible = atts.getValue(\"visible\");\n            if (visible != null) {\n                current.setVisible(Boolean.parseBoolean(visible));\n            }\n\n            String versionString = atts.getValue(\"version\");\n            int version = 0;\n            if (versionString != null) {\n                try {\n                    version = Integer.parseInt(versionString);\n                } catch(NumberFormatException e) {\n                    throwException(tr(\"Illegal value for attribute ''version'' on OSM primitive with ID {0}. Got {1}.\", Long.toString(current.getUniqueId()), versionString));\n                }\n                if (ds.getVersion().equals(\"0.6\")){\n                    if (version <= 0 && current.getUniqueId() > 0) {\n                        throwException(tr(\"Illegal value for attribute ''version'' on OSM primitive with ID {0}. Got {1}.\", Long.toString(current.getUniqueId()), versionString));\n                    } else if (version < 0 && current.getUniqueId() <= 0) {\n                        System.out.println(tr(\"WARNING: Normalizing value of attribute ''version'' of element {0} to {2}, API version is ''{3}''. Got {1}.\", current.getUniqueId(), version, 0, \"0.6\"));\n                        version = 0;\n                    }\n                } else if (ds.getVersion().equals(\"0.5\")) {\n                    if (version <= 0 && current.getUniqueId() > 0) {\n                        System.out.println(tr(\"WARNING: Normalizing value of attribute ''version'' of element {0} to {2}, API version is ''{3}''. Got {1}.\", current.getUniqueId(), version, 1, \"0.5\"));\n                        version = 1;\n                    } else if (version < 0 && current.getUniqueId() <= 0) {\n                        System.out.println(tr(\"WARNING: Normalizing value of attribute ''version'' of element {0} to {2}, API version is ''{3}''. Got {1}.\", current.getUniqueId(), version, 0, \"0.5\"));\n                        version = 0;\n                    }\n                } else {\n                    // should not happen. API version has been checked before\n                    throwException(tr(\"Unknown or unsupported API version. Got {0}.\", ds.getVersion()));\n                }\n            } else {\n                // version expected for OSM primitives with an id assigned by the server (id > 0), since API 0.6\n                //\n                if (current.getUniqueId() > 0 && ds.getVersion() != null && ds.getVersion().equals(\"0.6\")) {\n                    throwException(tr(\"Missing attribute ''version'' on OSM primitive with ID {0}.\", Long.toString(current.getUniqueId())));\n                } else if (current.getUniqueId() > 0 && ds.getVersion() != null && ds.getVersion().equals(\"0.5\")) {\n                    // default version in 0.5 files for existing primitives\n                    System.out.println(tr(\"WARNING: Normalizing value of attribute ''version'' of element {0} to {2}, API version is ''{3}''. Got {1}.\", current.getUniqueId(), version, 1, \"0.5\"));\n                    version= 1;\n                } else if (current.getUniqueId() <= 0 && ds.getVersion() != null && ds.getVersion().equals(\"0.5\")) {\n                    // default version in 0.5 files for new primitives, no warning necessary. This is\n                    // (was) legal in API 0.5\n                    version= 0;\n                }\n            }\n            current.setVersion(version);\n\n            String action = atts.getValue(\"action\");\n            if (action == null) {\n                // do nothing\n            } else if (action.equals(\"delete\")) {\n                current.setDeleted(true);\n                current.setModified(current.isVisible());\n            } else if (action.equals(\"modify\")) {\n                current.setModified(true);\n            }\n\n            String v = atts.getValue(\"changeset\");\n            if (v == null) {\n                current.setChangesetId(0);\n            } else {\n                try {\n                    current.setChangesetId(Integer.parseInt(v));\n                } catch(NumberFormatException e) {\n                    if (current.getUniqueId() <= 0) {\n                        // for a new primitive we just log a warning\n                        System.out.println(tr(\"Illegal value for attribute ''changeset'' on new object {1}. Got {0}. Resetting to 0.\", v, current.getUniqueId()));\n                        current.setChangesetId(0);\n                    } else {\n                        // for an existing primitive this is a problem\n                        throwException(tr(\"Illegal value for attribute ''changeset''. Got {0}.\", v));\n                    }\n                }\n                if (current.getChangesetId() <=0) {\n                    if (current.getUniqueId() <= 0) {\n                        // for a new primitive we just log a warning\n                        System.out.println(tr(\"Illegal value for attribute ''changeset'' on new object {1}. Got {0}. Resetting to 0.\", v, current.getUniqueId()));\n                        current.setChangesetId(0);\n                    } else {\n                        // for an existing primitive this is a problem\n                        throwException(tr(\"Illegal value for attribute ''changeset''. Got {0}.\", v));\n                    }\n                }\n            }\n        }","commit_id":"27520ed60238b4bf372f08ac40361c8d4569e474","url":"https://github.com/openstreetmap/josm"},{"original_method":"/**\n     * Merges the relation members of a source relation onto the corresponding target relation.\n     * @param source the source relation\n     * @throws IllegalStateException thrown if there is no corresponding target relation\n     * @throws IllegalStateException thrown if there isn't a corresponding target object for one of the relation\n     * members in source\n     */\n    private void mergeRelationMembers(Relation source) throws IllegalStateException {\n        Relation target = (Relation) getMergeTarget(source);\n        if (target == null)\n            throw new IllegalStateException(tr(\"Missing merge target for relation with id {0}\", source.getUniqueId()));\n        LinkedList<RelationMember> newMembers = new LinkedList<RelationMember>();\n        for (RelationMember sourceMember : source.getMembers()) {\n            OsmPrimitive targetMember = getMergeTarget(sourceMember.getMember());\n            if (targetMember == null)\n                throw new IllegalStateException(tr(\"Missing merge target of type {0} with id {1}\", sourceMember.getType(), sourceMember.getUniqueId()));\n            if (! targetMember.isDeleted() && targetMember.isVisible()) {\n                RelationMember newMember = new RelationMember(sourceMember.getRole(), targetMember);\n                newMembers.add(newMember);\n            } else {\n                target.setModified(true);\n            }\n        }\n        target.setMembers(newMembers);\n    }","id":52109,"modified_method":"/**\n     * Merges the relation members of a source relation onto the corresponding target relation.\n     * @param source the source relation\n     * @throws IllegalStateException thrown if there is no corresponding target relation\n     * @throws IllegalStateException thrown if there isn't a corresponding target object for one of the relation\n     * members in source\n     */\n    private void mergeRelationMembers(Relation source) throws IllegalStateException {\n        Relation target = (Relation) getMergeTarget(source);\n        if (target == null)\n            throw new IllegalStateException(tr(\"Missing merge target for relation with id {0}\", source.getUniqueId()));\n        LinkedList<RelationMember> newMembers = new LinkedList<RelationMember>();\n        for (RelationMember sourceMember : source.getMembers()) {\n            OsmPrimitive targetMember = getMergeTarget(sourceMember.getMember());\n            if (targetMember == null)\n                throw new IllegalStateException(tr(\"Missing merge target of type {0} with id {1}\", sourceMember.getType(), sourceMember.getUniqueId()));\n            if (targetMember.isVisible()) {\n                RelationMember newMember = new RelationMember(sourceMember.getRole(), targetMember);\n                newMembers.add(newMember);\n            } else {\n                target.setModified(true);\n            }\n        }\n        target.setMembers(newMembers);\n    }","commit_id":"4d48394a23906b317d39b621d3cb2155490850db","url":"https://github.com/openstreetmap/josm"},{"original_method":"/**\n     * Tries to merge a primitive <code>source<\/code> into an existing primitive with the same id.\n     *\n     * @param source  the source primitive which is to be merged into a target primitive\n     * @return true, if this method was able to merge <code>source<\/code> into a target object; false, otherwise\n     */\n    private boolean mergeById(OsmPrimitive source) {\n        OsmPrimitive target = targetDataSet.getPrimitiveById(source.getId(), source.getType());\n        // merge other into an existing primitive with the same id, if possible\n        //\n        if (target == null)\n            return false;\n        // found a corresponding target, remember it\n        mergedMap.put(source.getUniqueId(), target.getUniqueId());\n\n        if (target.getVersion() > source.getVersion())\n            // target.version > source.version => keep target version\n            return true;\n        if (! target.isVisible() && source.isVisible()) {\n            // should not happen\n            //\n            logger.warning(tr(\"Target object with id {0} and version {1} is visible although \"\n                    + \"source object with lower version {2} is not visible. \"\n                    + \"Cannot deal with this inconsistency. Keeping target object. \",\n                    Long.toString(target.getId()),Long.toString(target.getVersion()), Long.toString(source.getVersion())\n            ));\n        } else if (target.isVisible() && ! source.isVisible()) {\n            // this is always a conflict because the user has to decide whether\n            // he wants to create a clone of its target primitive or whether he\n            // wants to purge the target from the local dataset. He can't keep it unchanged\n            // because it was deleted on the server.\n            //\n            conflicts.add(target,source);\n        } else if (target.isIncomplete() && !source.isIncomplete()) {\n            // target is incomplete, source completes it\n            // => merge source into target\n            //\n            target.mergeFrom(source);\n            objectsWithChildrenToMerge.add(source.getPrimitiveId());\n        } else if (!target.isIncomplete() && source.isIncomplete()) {\n            // target is complete and source is incomplete\n            // => keep target, it has more information already\n            //\n        } else if (target.isIncomplete() && source.isIncomplete()) {\n            // target and source are incomplete. Doesn't matter which one to\n            // take. We take target.\n            //\n        } else if (target.isDeleted() && ! source.isDeleted() && target.getVersion() == source.getVersion()) {\n            // same version, but target is deleted. Assume target takes precedence\n            // otherwise too many conflicts when refreshing from the server\n        } else if (target.isDeleted() != source.isDeleted()) {\n            // differences in deleted state have to be resolved manually. This can\n            // happen if one layer is merged onto another layer\n            //\n            conflicts.add(target,source);\n        } else if (! target.isModified() && source.isModified()) {\n            // target not modified. We can assume that source is the most recent version.\n            // clone it into target. But check first, whether source is deleted. if so,\n            // make sure that target is not referenced any more in myDataSet.\n            //\n            if (source.isDeleted()) {\n                deletedObjectsToUnlink.add(source);\n            }\n            target.mergeFrom(source);\n            objectsWithChildrenToMerge.add(source.getPrimitiveId());\n        } else if (! target.isModified() && !source.isModified() && target.getVersion() == source.getVersion()) {\n            // both not modified. Merge nevertheless.\n            // This helps when updating \"empty\" relations, see #4295\n            target.mergeFrom(source);\n            objectsWithChildrenToMerge.add(source.getPrimitiveId());\n        } else if (! target.isModified() && !source.isModified() && target.getVersion() < source.getVersion()) {\n            // my not modified but other is newer. clone other onto mine.\n            //\n            target.mergeFrom(source);\n            objectsWithChildrenToMerge.add(source.getPrimitiveId());\n        } else if (target.isModified() && ! source.isModified() && target.getVersion() == source.getVersion()) {\n            // target is same as source but target is modified\n            // => keep target and reset modified flag if target and source are semantically equal\n            if (target.hasEqualSemanticAttributes(source)) {\n                target.setModified(false);\n            }\n        } else if (! target.hasEqualSemanticAttributes(source)) {\n            // target is modified and is not semantically equal with source. Can't automatically\n            // resolve the differences\n            // =>  create a conflict\n            conflicts.add(target,source);\n        } else {\n            // clone from other, but keep the modified flag. mergeFrom will mainly copy\n            // technical attributes like timestamp or user information. Semantic\n            // attributes should already be equal if we get here.\n            //\n            target.mergeFrom(source);\n            target.setModified(true);\n            objectsWithChildrenToMerge.add(source.getPrimitiveId());\n        }\n        return true;\n    }","id":52110,"modified_method":"/**\n     * Tries to merge a primitive <code>source<\/code> into an existing primitive with the same id.\n     *\n     * @param source  the source primitive which is to be merged into a target primitive\n     * @return true, if this method was able to merge <code>source<\/code> into a target object; false, otherwise\n     */\n    private boolean mergeById(OsmPrimitive source) {\n        OsmPrimitive target = targetDataSet.getPrimitiveById(source.getId(), source.getType());\n        // merge other into an existing primitive with the same id, if possible\n        //\n        if (target == null)\n            return false;\n        // found a corresponding target, remember it\n        mergedMap.put(source.getUniqueId(), target.getUniqueId());\n\n        if (target.getVersion() > source.getVersion())\n            // target.version > source.version => keep target version\n            return true;\n        if (! target.isVisible() && source.isVisible()) {\n            // should not happen\n            // FIXME: this message does not make sense, source version can not be lower than\n            //        target version at this point\n            logger.warning(tr(\"Target object with id {0} and version {1} is visible although \"\n                    + \"source object with lower version {2} is not visible. \"\n                    + \"Cannot deal with this inconsistency. Keeping target object. \",\n                    Long.toString(target.getId()),Long.toString(target.getVersion()), Long.toString(source.getVersion())\n            ));\n        } else if (target.isVisible() && ! source.isVisible()) {\n            // this is always a conflict because the user has to decide whether\n            // he wants to create a clone of its target primitive or whether he\n            // wants to purge the target from the local dataset. He can't keep it unchanged\n            // because it was deleted on the server.\n            //\n            conflicts.add(target,source);\n        } else if (target.isIncomplete() && !source.isIncomplete()) {\n            // target is incomplete, source completes it\n            // => merge source into target\n            //\n            target.mergeFrom(source);\n            objectsWithChildrenToMerge.add(source.getPrimitiveId());\n        } else if (!target.isIncomplete() && source.isIncomplete()) {\n            // target is complete and source is incomplete\n            // => keep target, it has more information already\n            //\n        } else if (target.isIncomplete() && source.isIncomplete()) {\n            // target and source are incomplete. Doesn't matter which one to\n            // take. We take target.\n            //\n        } else if (target.isDeleted() && ! source.isDeleted() && target.getVersion() == source.getVersion()) {\n            // same version, but target is deleted. Assume target takes precedence\n            // otherwise too many conflicts when refreshing from the server\n            // but, if source has referrers there is a conflict\n            if (!source.getReferrers().isEmpty()) {\n                conflicts.add(target, source);\n            }\n        } else if (target.isDeleted() != source.isDeleted()) {\n            // differences in deleted state have to be resolved manually. This can\n            // happen if one layer is merged onto another layer\n            //\n            conflicts.add(target,source);\n        } else if (! target.isModified() && source.isModified()) {\n            // target not modified. We can assume that source is the most recent version.\n            // clone it into target. But check first, whether source is deleted. if so,\n            // make sure that target is not referenced any more in myDataSet. If it is there\n            // is a conflict\n            if (source.isDeleted()) {\n                if (!target.getReferrers().isEmpty()) {\n                    conflicts.add(target, source);\n                }\n            } else {\n                target.mergeFrom(source);\n                objectsWithChildrenToMerge.add(source.getPrimitiveId());\n            }\n        } else if (! target.isModified() && !source.isModified() && target.getVersion() == source.getVersion()) {\n            // both not modified. Merge nevertheless.\n            // This helps when updating \"empty\" relations, see #4295\n            target.mergeFrom(source);\n            objectsWithChildrenToMerge.add(source.getPrimitiveId());\n        } else if (! target.isModified() && !source.isModified() && target.getVersion() < source.getVersion()) {\n            // my not modified but other is newer. clone other onto mine.\n            //\n            target.mergeFrom(source);\n            objectsWithChildrenToMerge.add(source.getPrimitiveId());\n        } else if (target.isModified() && ! source.isModified() && target.getVersion() == source.getVersion()) {\n            // target is same as source but target is modified\n            // => keep target and reset modified flag if target and source are semantically equal\n            if (target.hasEqualSemanticAttributes(source)) {\n                target.setModified(false);\n            }\n        } else if (! target.hasEqualSemanticAttributes(source)) {\n            // target is modified and is not semantically equal with source. Can't automatically\n            // resolve the differences\n            // =>  create a conflict\n            conflicts.add(target,source);\n        } else {\n            // clone from other, but keep the modified flag. mergeFrom will mainly copy\n            // technical attributes like timestamp or user information. Semantic\n            // attributes should already be equal if we get here.\n            //\n            target.mergeFrom(source);\n            target.setModified(true);\n            objectsWithChildrenToMerge.add(source.getPrimitiveId());\n        }\n        return true;\n    }","commit_id":"4d48394a23906b317d39b621d3cb2155490850db","url":"https://github.com/openstreetmap/josm"},{"original_method":"/**\n     * Merges the node list of a source way onto its target way.\n     *\n     * @param source the source way\n     * @throws IllegalStateException thrown if no target way can be found for the source way\n     * @throws IllegalStateException thrown if there isn't a target node for one of the nodes in the source way\n     *\n     */\n    private void mergeNodeList(Way source) throws IllegalStateException {\n        Way target = (Way)getMergeTarget(source);\n        if (target == null)\n            throw new IllegalStateException(tr(\"Missing merge target for way with id {0}\", source.getUniqueId()));\n\n        List<Node> newNodes = new LinkedList<Node>();\n        for (Node sourceNode : source.getNodes()) {\n            Node targetNode = (Node)getMergeTarget(sourceNode);\n            if (targetNode != null) {\n                if (!targetNode.isDeleted() && targetNode.isVisible()) {\n                    newNodes.add(targetNode);\n                } else {\n                    target.setModified(true);\n                }\n            } else\n                throw new IllegalStateException(tr(\"Missing merge target for node with id {0}\", sourceNode.getUniqueId()));\n        }\n        target.setNodes(newNodes);\n    }","id":52111,"modified_method":"/**\n     * Merges the node list of a source way onto its target way.\n     *\n     * @param source the source way\n     * @throws IllegalStateException thrown if no target way can be found for the source way\n     * @throws IllegalStateException thrown if there isn't a target node for one of the nodes in the source way\n     *\n     */\n    private void mergeNodeList(Way source) throws IllegalStateException {\n        Way target = (Way)getMergeTarget(source);\n        if (target == null)\n            throw new IllegalStateException(tr(\"Missing merge target for way with id {0}\", source.getUniqueId()));\n\n        List<Node> newNodes = new LinkedList<Node>();\n        for (Node sourceNode : source.getNodes()) {\n            Node targetNode = (Node)getMergeTarget(sourceNode);\n            if (targetNode != null) {\n                if (targetNode.isVisible()) {\n                    newNodes.add(targetNode);\n                } else {\n                    target.setModified(true);\n                }\n            } else\n                throw new IllegalStateException(tr(\"Missing merge target for node with id {0}\", sourceNode.getUniqueId()));\n        }\n        target.setNodes(newNodes);\n    }","commit_id":"4d48394a23906b317d39b621d3cb2155490850db","url":"https://github.com/openstreetmap/josm"},{"original_method":"public boolean processDeclarations(@NotNull final PsiScopeProcessor processor, @NotNull final ResolveState state, final PsiElement lastParent,\n                                     @NotNull final PsiElement place) {\n    // import is per-file\n    if (place.getContainingFile() != getContainingFile()) {\n      return true;\n    }\n    if (isStarImport()) {\n      PyReferenceExpression expr = getImportSource();\n      if (expr != null) {\n        final PsiElement importedFile = ResolveImportUtil.resolveImportReference(expr);\n        if (importedFile != null) {\n          return importedFile.processDeclarations(processor, state, null, place);\n        }\n      }\n    }\n    else {\n      PyImportElement[] importElements = getImportElements();\n      for(PyImportElement element: importElements) {\n        if (!element.processDeclarations(processor, state, lastParent, place)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }","id":52112,"modified_method":"public boolean processDeclarations(@NotNull final PsiScopeProcessor processor, @NotNull final ResolveState state, final PsiElement lastParent,\n                                     @NotNull final PsiElement place) {\n    // import is per-file\n    if (place.getContainingFile() != getContainingFile()) {\n      return true;\n    }\n    if (isStarImport()) {\n      PyReferenceExpression expr = getImportSource();\n      if (expr != null) {\n        final PsiElement importedFile = PyReferenceExpressionImpl.turnDirIntoInit(ResolveImportUtil.resolveImportReference(expr));\n        if (importedFile != null) {\n          return importedFile.processDeclarations(processor, state, null, place);\n        }\n      }\n    }\n    else {\n      PyImportElement[] importElements = getImportElements();\n      for(PyImportElement element: importElements) {\n        if (!element.processDeclarations(processor, state, lastParent, place)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }","commit_id":"2dcc6d580ed303347804f837c7b7a6905932489d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * If argument is a PsiDirectory, turn it into a PsiFile that points to __init__.py in that directory.\n   * If there's no __init__.py there, null is returned, there's no point to resolve to a dir which is not a package.\n   * Alas, resolve() and multiResolve() can't return anything but a PyFile or PsiFileImpl.isPsiUpToDate() would fail.\n   * This is because isPsiUpToDate() relies on identity of objects returned by FileViewProvider.getPsi().\n   * If we ever need to exactly tell a dir from __init__.py, that logic has to change.\n   * @param target a resolve candidate.\n   * @return a PsiFile if target was a PsiDirectory, or null, or target unchanged.\n   */\n  @Nullable\n  private static PsiElement turnDirIntoInit(PsiElement target) {\n    if (target instanceof PsiDirectory) {\n      final PsiDirectory dir = (PsiDirectory)target;\n      final PsiFile file = dir.findFile(PyNames.INIT_DOT_PY);\n      if (file != null) {\n        file.putCopyableUserData(PyFile.KEY_IS_DIRECTORY, Boolean.TRUE);\n        return file; // ResolveImportUtil will extract directory part as needed, everyone else are better off with a file.\n      }\n      else return null; // dir without __init__.py does not resolve\n    }\n    else return target; // don't touch non-dirs\n  }","id":52113,"modified_method":"/**\n   * If argument is a PsiDirectory, turn it into a PsiFile that points to __init__.py in that directory.\n   * If there's no __init__.py there, null is returned, there's no point to resolve to a dir which is not a package.\n   * Alas, resolve() and multiResolve() can't return anything but a PyFile or PsiFileImpl.isPsiUpToDate() would fail.\n   * This is because isPsiUpToDate() relies on identity of objects returned by FileViewProvider.getPsi().\n   * If we ever need to exactly tell a dir from __init__.py, that logic has to change.\n   * @param target a resolve candidate.\n   * @return a PsiFile if target was a PsiDirectory, or null, or target unchanged.\n   */\n  @Nullable\n  public static PsiElement turnDirIntoInit(PsiElement target) {\n    if (target instanceof PsiDirectory) {\n      final PsiDirectory dir = (PsiDirectory)target;\n      final PsiFile file = dir.findFile(PyNames.INIT_DOT_PY);\n      if (file != null) {\n        file.putCopyableUserData(PyFile.KEY_IS_DIRECTORY, Boolean.TRUE);\n        return file; // ResolveImportUtil will extract directory part as needed, everyone else are better off with a file.\n      }\n      else return null; // dir without __init__.py does not resolve\n    }\n    else return target; // don't touch non-dirs\n  }","commit_id":"2dcc6d580ed303347804f837c7b7a6905932489d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Resolves a module reference in a general case.\n   * @param module_reference possibly qualified module reference.\n   * @param source_file where that reference resides; serves as PSI foothold to determine module, project, etc.\n   * @param import_is_absolute if false, try old python 2.x's \"relative first, absolute next\" approach.\n   * @param relative_level if > 0, step back from source_file and resolve from there (even if import_is_absolute is false!). \n   * @return\n   */\n  @Nullable\n  private static PsiElement resolveModule(\n    @NotNull PyReferenceExpression module_reference, PsiFile source_file, boolean import_is_absolute, int relative_level\n  ) {\n    PsiElement imported_from_module;\n\n    String qualified_name = PyResolveUtil.toPath(module_reference, \".\") + \"#\" + Integer.toString(relative_level);\n    Set<String> being_imported = ourBeingImported.get();\n    if (being_imported.contains(qualified_name)) return null; // break endless loop in import\n    try {\n      being_imported.add(qualified_name);\n      if (relative_level > 0) {\n        // \"from ...module import\"\n        imported_from_module = resolveModuleAt(stepBackFrom(source_file, relative_level), module_reference);\n      }\n      else { // \"from module import\"\n        if (import_is_absolute) imported_from_module = resolveModuleInRoots(module_reference, source_file);\n        else {\n          imported_from_module = resolveModuleAt(source_file.getContainingDirectory(), module_reference);\n          if (imported_from_module == null) imported_from_module = resolveModuleInRoots(module_reference, source_file);\n        }\n      }\n      if (imported_from_module instanceof PsiDirectory) {\n          PsiFile file = ((PsiDirectory)imported_from_module).findFile(PyNames.INIT_DOT_PY);\n          if (file != null) imported_from_module = file;\n      }\n      return imported_from_module;\n    }\n    finally {\n      being_imported.remove(qualified_name);\n    }\n  }","id":52114,"modified_method":"/**\n   * Resolves a module reference in a general case.\n   * @param module_reference possibly qualified module reference.\n   * @param source_file where that reference resides; serves as PSI foothold to determine module, project, etc.\n   * @param import_is_absolute if false, try old python 2.x's \"relative first, absolute next\" approach.\n   * @param relative_level if > 0, step back from source_file and resolve from there (even if import_is_absolute is false!). \n   * @return\n   */\n  @Nullable\n  private static PsiElement resolveModule(\n    @NotNull PyReferenceExpression module_reference, PsiFile source_file, boolean import_is_absolute, int relative_level\n  ) {\n    PsiElement imported_from_module;\n\n    String qualified_name = PyResolveUtil.toPath(module_reference, \".\") + \"#\" + Integer.toString(relative_level);\n    Set<String> being_imported = ourBeingImported.get();\n    if (being_imported.contains(qualified_name)) return null; // break endless loop in import\n    try {\n      being_imported.add(qualified_name);\n      if (relative_level > 0) {\n        // \"from ...module import\"\n        imported_from_module = resolveModuleAt(stepBackFrom(source_file, relative_level), module_reference);\n      }\n      else { // \"from module import\"\n        if (import_is_absolute) imported_from_module = resolveModuleInRoots(module_reference, source_file);\n        else {\n          imported_from_module = resolveModuleAt(source_file.getContainingDirectory(), module_reference);\n          if (imported_from_module == null) imported_from_module = resolveModuleInRoots(module_reference, source_file);\n        }\n      }\n      return imported_from_module;\n    }\n    finally {\n      being_imported.remove(qualified_name);\n    }\n  }","commit_id":"2dcc6d580ed303347804f837c7b7a6905932489d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean processDeclarations(@NotNull final PsiScopeProcessor processor, @NotNull final ResolveState state, final PsiElement lastParent,\n                                     @NotNull final PsiElement place) {\n    // import is per-file\n    if (place.getContainingFile() != getContainingFile()) {\n      return true;\n    }\n    if (isStarImport()) {\n      PyReferenceExpression expr = getImportSource();\n      if (expr != null) {\n        final PsiElement importedFile = ResolveImportUtil.resolveImportReference(expr);\n        if (importedFile != null) {\n          return importedFile.processDeclarations(processor, state, null, place);\n        }\n      }\n    }\n    else {\n      PyImportElement[] importElements = getImportElements();\n      for(PyImportElement element: importElements) {\n        if (!element.processDeclarations(processor, state, lastParent, place)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }","id":52115,"modified_method":"public boolean processDeclarations(@NotNull final PsiScopeProcessor processor, @NotNull final ResolveState state, final PsiElement lastParent,\n                                     @NotNull final PsiElement place) {\n    // import is per-file\n    if (place.getContainingFile() != getContainingFile()) {\n      return true;\n    }\n    if (isStarImport()) {\n      PyReferenceExpression expr = getImportSource();\n      if (expr != null) {\n        final PsiElement importedFile = PyReferenceExpressionImpl.turnDirIntoInit(ResolveImportUtil.resolveImportReference(expr));\n        if (importedFile != null) {\n          return importedFile.processDeclarations(processor, state, null, place);\n        }\n      }\n    }\n    else {\n      PyImportElement[] importElements = getImportElements();\n      for(PyImportElement element: importElements) {\n        if (!element.processDeclarations(processor, state, lastParent, place)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }","commit_id":"53a900586172f0b5bb604148039c02e1d42d726c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * If argument is a PsiDirectory, turn it into a PsiFile that points to __init__.py in that directory.\n   * If there's no __init__.py there, null is returned, there's no point to resolve to a dir which is not a package.\n   * Alas, resolve() and multiResolve() can't return anything but a PyFile or PsiFileImpl.isPsiUpToDate() would fail.\n   * This is because isPsiUpToDate() relies on identity of objects returned by FileViewProvider.getPsi().\n   * If we ever need to exactly tell a dir from __init__.py, that logic has to change.\n   * @param target a resolve candidate.\n   * @return a PsiFile if target was a PsiDirectory, or null, or target unchanged.\n   */\n  @Nullable\n  private static PsiElement turnDirIntoInit(PsiElement target) {\n    if (target instanceof PsiDirectory) {\n      final PsiDirectory dir = (PsiDirectory)target;\n      final PsiFile file = dir.findFile(PyNames.INIT_DOT_PY);\n      if (file != null) {\n        file.putCopyableUserData(PyFile.KEY_IS_DIRECTORY, Boolean.TRUE);\n        return file; // ResolveImportUtil will extract directory part as needed, everyone else are better off with a file.\n      }\n      else return null; // dir without __init__.py does not resolve\n    }\n    else return target; // don't touch non-dirs\n  }","id":52116,"modified_method":"/**\n   * If argument is a PsiDirectory, turn it into a PsiFile that points to __init__.py in that directory.\n   * If there's no __init__.py there, null is returned, there's no point to resolve to a dir which is not a package.\n   * Alas, resolve() and multiResolve() can't return anything but a PyFile or PsiFileImpl.isPsiUpToDate() would fail.\n   * This is because isPsiUpToDate() relies on identity of objects returned by FileViewProvider.getPsi().\n   * If we ever need to exactly tell a dir from __init__.py, that logic has to change.\n   * @param target a resolve candidate.\n   * @return a PsiFile if target was a PsiDirectory, or null, or target unchanged.\n   */\n  @Nullable\n  public static PsiElement turnDirIntoInit(PsiElement target) {\n    if (target instanceof PsiDirectory) {\n      final PsiDirectory dir = (PsiDirectory)target;\n      final PsiFile file = dir.findFile(PyNames.INIT_DOT_PY);\n      if (file != null) {\n        file.putCopyableUserData(PyFile.KEY_IS_DIRECTORY, Boolean.TRUE);\n        return file; // ResolveImportUtil will extract directory part as needed, everyone else are better off with a file.\n      }\n      else return null; // dir without __init__.py does not resolve\n    }\n    else return target; // don't touch non-dirs\n  }","commit_id":"53a900586172f0b5bb604148039c02e1d42d726c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Resolves a module reference in a general case.\n   * @param module_reference possibly qualified module reference.\n   * @param source_file where that reference resides; serves as PSI foothold to determine module, project, etc.\n   * @param import_is_absolute if false, try old python 2.x's \"relative first, absolute next\" approach.\n   * @param relative_level if > 0, step back from source_file and resolve from there (even if import_is_absolute is false!). \n   * @return\n   */\n  @Nullable\n  private static PsiElement resolveModule(\n    @NotNull PyReferenceExpression module_reference, PsiFile source_file, boolean import_is_absolute, int relative_level\n  ) {\n    PsiElement imported_from_module;\n\n    String qualified_name = PyResolveUtil.toPath(module_reference, \".\") + \"#\" + Integer.toString(relative_level);\n    Set<String> being_imported = ourBeingImported.get();\n    if (being_imported.contains(qualified_name)) return null; // break endless loop in import\n    try {\n      being_imported.add(qualified_name);\n      if (relative_level > 0) {\n        // \"from ...module import\"\n        imported_from_module = resolveModuleAt(stepBackFrom(source_file, relative_level), module_reference);\n      }\n      else { // \"from module import\"\n        if (import_is_absolute) imported_from_module = resolveModuleInRoots(module_reference, source_file);\n        else {\n          imported_from_module = resolveModuleAt(source_file.getContainingDirectory(), module_reference);\n          if (imported_from_module == null) imported_from_module = resolveModuleInRoots(module_reference, source_file);\n        }\n      }\n      if (imported_from_module instanceof PsiDirectory) {\n          PsiFile file = ((PsiDirectory)imported_from_module).findFile(PyNames.INIT_DOT_PY);\n          if (file != null) imported_from_module = file;\n      }\n      return imported_from_module;\n    }\n    finally {\n      being_imported.remove(qualified_name);\n    }\n  }","id":52117,"modified_method":"/**\n   * Resolves a module reference in a general case.\n   * @param module_reference possibly qualified module reference.\n   * @param source_file where that reference resides; serves as PSI foothold to determine module, project, etc.\n   * @param import_is_absolute if false, try old python 2.x's \"relative first, absolute next\" approach.\n   * @param relative_level if > 0, step back from source_file and resolve from there (even if import_is_absolute is false!). \n   * @return\n   */\n  @Nullable\n  private static PsiElement resolveModule(\n    @NotNull PyReferenceExpression module_reference, PsiFile source_file, boolean import_is_absolute, int relative_level\n  ) {\n    PsiElement imported_from_module;\n\n    String qualified_name = PyResolveUtil.toPath(module_reference, \".\") + \"#\" + Integer.toString(relative_level);\n    Set<String> being_imported = ourBeingImported.get();\n    if (being_imported.contains(qualified_name)) return null; // break endless loop in import\n    try {\n      being_imported.add(qualified_name);\n      if (relative_level > 0) {\n        // \"from ...module import\"\n        imported_from_module = resolveModuleAt(stepBackFrom(source_file, relative_level), module_reference);\n      }\n      else { // \"from module import\"\n        if (import_is_absolute) imported_from_module = resolveModuleInRoots(module_reference, source_file);\n        else {\n          imported_from_module = resolveModuleAt(source_file.getContainingDirectory(), module_reference);\n          if (imported_from_module == null) imported_from_module = resolveModuleInRoots(module_reference, source_file);\n        }\n      }\n      return imported_from_module;\n    }\n    finally {\n      being_imported.remove(qualified_name);\n    }\n  }","commit_id":"53a900586172f0b5bb604148039c02e1d42d726c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void processDot1DTpFdbTable(LinkableNode node, final OnmsVlan vlan, final SnmpVlanCollection snmpVlanColl, Date scanTime) {\n        if (LOG.isDebugEnabled()) {\n            if (snmpVlanColl.getDot1dFdbTable().size() > 0) {\n                LOG.debug(\"processDot1DTpFdbTable: Starting dot1dTpFdb table processing for {}/{}\", node.getNodeId(), str(node.getSnmpPrimaryIpAddr()));\n            } else {\n                LOG.debug(\"processDot1DTpFdbTable: Zero dot1dTpFdb table entries for {}/{}\", node.getNodeId(), str(node.getSnmpPrimaryIpAddr()));\n            }\n        }\n\n        for (final Dot1dTpFdbTableEntry dot1dfdbentry : snmpVlanColl.getDot1dFdbTable()) {\n            final String curMacAddress = dot1dfdbentry.getDot1dTpFdbAddress();\n            final int fdbport = dot1dfdbentry.getDot1dTpFdbPort();\n            final int curfdbstatus = dot1dfdbentry.getDot1dTpFdbStatus();\n\n            if (curMacAddress == null || curMacAddress.equals(\"000000000000\")) {\n                LOG.info(\"processDot1DTpFdbTable: Invalid MAC address {} on node {}. Skipping.\", curMacAddress, node.getNodeId());\n                continue;\n            }\n\n            LOG.debug(\"processDot1DTpFdbTable: Found valid MAC address {} on node {}\", curMacAddress, node.getNodeId());\n\n            if (fdbport == 0 || fdbport == -1) {\n                LOG.debug(\"processDot1DTpFdbTable: Invalid FDB port ({}) for MAC address {} on node {}. Skipping.\", fdbport, curMacAddress, node.getNodeId());\n                continue;\n            }\n\n            LOG.debug(\"processDot1DTpFdbTable: MAC address ({}) found on bridge port {} on node {}\", curMacAddress, fdbport, node.getNodeId());\n\n            if (curfdbstatus == SNMP_DOT1D_FDB_STATUS_LEARNED && vlan.getVlanId() != null) {\n                node.addBridgeForwardingTableEntry(fdbport, curMacAddress, vlan.getVlanId());\n                LOG.debug(\"processDot1DTpFdbTable: Found learned status on bridge port.\");\n            } else if (curfdbstatus == SNMP_DOT1D_FDB_STATUS_SELF) {\n            \tInteger ifIndex = node.getIfindexFromBridgePort(fdbport);\n            \tif (ifIndex == null)\n            \t\tifIndex = -1;\n                node.getMacIdentifiers().put(ifIndex,curMacAddress);\n                LOG.debug(\"processDot1DTpFdbTable: MAC address ({}) is used as port identifier.\", curMacAddress);\n            } else if (curfdbstatus == SNMP_DOT1D_FDB_STATUS_INVALID) {\n                LOG.debug(\"processDot1DTpFdbTable: Found 'INVALID' status. Skipping.\");\n            } else if (curfdbstatus == SNMP_DOT1D_FDB_STATUS_MGMT) {\n                node.addBridgeForwardingTableEntry(fdbport, curMacAddress, vlan.getVlanId());\n                LOG.debug(\"processDot1DTpFdbTable: Found 'MGMT' status. Saving.\");\n            } else if (curfdbstatus == SNMP_DOT1D_FDB_STATUS_OTHER) {\n                node.addBridgeForwardingTableEntry(fdbport, curMacAddress, vlan.getVlanId());\n                LOG.debug(\"processDot1DTpFdbTable: Found 'OTHER' status. Saving.\");\n            } else if (curfdbstatus == -1) {\n                LOG.warn(\"processDot1DTpFdbTable: Unable to determine status. Skipping.\");\n            }\n        }\n    }","id":52118,"modified_method":"protected void processDot1DTpFdbTable(LinkableNode node, final OnmsVlan vlan, final SnmpVlanCollection snmpVlanColl, Date scanTime) {\n        if (LOG.isDebugEnabled()) {\n            if (snmpVlanColl.getDot1dFdbTable().size() > 0) {\n                LOG.debug(\"processDot1DTpFdbTable: Starting dot1dTpFdb table processing for {}/{}\", node.getNodeId(), str(node.getSnmpPrimaryIpAddr()));\n            } else {\n                LOG.debug(\"processDot1DTpFdbTable: Zero dot1dTpFdb table entries for {}/{}\", node.getNodeId(), str(node.getSnmpPrimaryIpAddr()));\n            }\n        }\n\n        for (final Dot1dTpFdbTableEntry dot1dfdbentry : snmpVlanColl.getDot1dFdbTable()) {\n            final String curMacAddress = dot1dfdbentry.getDot1dTpFdbAddress();\n            final int fdbport = dot1dfdbentry.getDot1dTpFdbPort();\n            final int curfdbstatus = dot1dfdbentry.getDot1dTpFdbStatus();\n\n            if (curMacAddress == null || curMacAddress.equals(\"000000000000\")) {\n                LOG.info(\"processDot1DTpFdbTable: Invalid MAC address {} on node {}. Skipping.\", curMacAddress, node.getNodeId());\n                continue;\n            }\n\n            LOG.debug(\"processDot1DTpFdbTable: Found valid MAC address {} on node {}\", curMacAddress, node.getNodeId());\n\n            if (fdbport == 0 || fdbport == -1) {\n                LOG.debug(\"processDot1DTpFdbTable: Invalid FDB port ({}) for MAC address {} on node {}. Skipping.\", fdbport, curMacAddress, node.getNodeId());\n                continue;\n            }\n\n            LOG.debug(\"processDot1DTpFdbTable: MAC address ({}) found on bridge port {} on node {}\", curMacAddress, fdbport, node.getNodeId());\n\n            if (curfdbstatus == SNMP_DOT1D_FDB_STATUS_LEARNED && vlan.getVlanId() != null) {\n                node.addBridgeForwardingTableEntry(fdbport, curMacAddress);\n                LOG.debug(\"processDot1DTpFdbTable: Found learned status on bridge port.\");\n            } else if (curfdbstatus == SNMP_DOT1D_FDB_STATUS_SELF) {\n            \tInteger ifIndex = node.getIfindexFromBridgePort(fdbport);\n            \tif (ifIndex == null)\n            \t\tifIndex = -1;\n                node.getMacIdentifiers().put(ifIndex,curMacAddress);\n                LOG.debug(\"processDot1DTpFdbTable: MAC address ({}) is used as port identifier.\", curMacAddress);\n            } else if (curfdbstatus == SNMP_DOT1D_FDB_STATUS_INVALID) {\n                LOG.debug(\"processDot1DTpFdbTable: Found 'INVALID' status. Skipping.\");\n            } else if (curfdbstatus == SNMP_DOT1D_FDB_STATUS_MGMT) {\n                node.addBridgeForwardingTableEntry(fdbport, curMacAddress);\n                LOG.debug(\"processDot1DTpFdbTable: Found 'MGMT' status. Saving.\");\n            } else if (curfdbstatus == SNMP_DOT1D_FDB_STATUS_OTHER) {\n                node.addBridgeForwardingTableEntry(fdbport, curMacAddress);\n                LOG.debug(\"processDot1DTpFdbTable: Found 'OTHER' status. Saving.\");\n            } else if (curfdbstatus == -1) {\n                LOG.warn(\"processDot1DTpFdbTable: Unable to determine status. Skipping.\");\n            }\n        }\n    }","commit_id":"6b3c4a4b6a15bafc11b40c9707cdd0d23fa02ce9","url":"https://github.com/OpenNMS/opennms"},{"original_method":"protected void processQBridgeDot1dTpFdbTable(final LinkableNode node, final OnmsVlan vlan, final SnmpVlanCollection snmpVlanColl) {\n        if (LOG.isDebugEnabled()) {\n            if (snmpVlanColl.getQBridgeDot1dFdbTable().size() > 0) {\n                LOG.debug(\"processQBridgeDot1dTpFdbTable: Starting Q-BRIDGE-MIB dot1dTpFdb table processing for {}/{}\", node.getNodeId(), str(node.getSnmpPrimaryIpAddr()));\n            } else {\n                LOG.debug(\"processQBridgeDot1dTpFdbTable: Zero Q-BRIDGE-MIB dot1dTpFdb table entries for {}/{}\", node.getNodeId(), str(node.getSnmpPrimaryIpAddr()));\n            }\n        }\n\n        for (final QBridgeDot1dTpFdbTableEntry dot1dfdbentry : snmpVlanColl.getQBridgeDot1dFdbTable()) {\n            final String curMacAddress = dot1dfdbentry.getQBridgeDot1dTpFdbAddress();\n\n            if (curMacAddress == null || curMacAddress.equals(\"000000000000\")) {\n                LOG.info(\"processQBridgeDot1DTpFdbTable: Invalid MAC addres {} on node {}. Skipping.\", curMacAddress, node.getNodeId());\n                continue;\n            }\n\n            LOG.debug(\"processQBridgeDot1DTpFdbTable: Found MAC address {} on node {}\", curMacAddress, node.getNodeId());\n\n            final int fdbport = dot1dfdbentry.getQBridgeDot1dTpFdbPort();\n\n            if ( fdbport == -1) {\n                LOG.debug(\"processQBridgeDot1DTpFdbTable: Invalid FDB port ({}) for MAC address {} on node {}. Skipping.\", fdbport, curMacAddress, node.getNodeId());\n                continue;\n            } else if (fdbport == 0 ) {\n                LOG.debug(\"processQBridgeDot1DTpFdbTable: FDB port ({}) for MAC address {} on node {}. Saving generic port.\", fdbport, curMacAddress, node.getNodeId());\n            }\n\n            LOG.debug(\"processQBridgeDot1DTpFdbTable: Found bridge port {} on node {}.\", fdbport, node.getNodeId());\n\n            final int curfdbstatus = dot1dfdbentry.getQBridgeDot1dTpFdbStatus();\n\n            if (curfdbstatus == SNMP_DOT1D_FDB_STATUS_LEARNED) {\n                node.addBridgeForwardingTableEntry(fdbport, curMacAddress, vlan.getVlanId());\n                LOG.debug(\"processQBridgeDot1DTpFdbTable: Found learned status on bridge port.\");\n            } else if (curfdbstatus == SNMP_DOT1D_FDB_STATUS_SELF) {\n            \tInteger ifIndex = node.getIfindexFromBridgePort(fdbport);\n            \tif (ifIndex == null)\n            \t\tifIndex = -1;\n                node.getMacIdentifiers().put(ifIndex,curMacAddress);\n                LOG.debug(\"processQBridgeDot1DTpFdbTable: MAC address ({}) is used as port identifier.\", curMacAddress);\n            } else if (curfdbstatus == SNMP_DOT1D_FDB_STATUS_INVALID) {\n                LOG.debug(\"processQBridgeDot1DTpFdbTable: Found 'INVALID' status. Skipping.\");\n            } else if (curfdbstatus == SNMP_DOT1D_FDB_STATUS_MGMT) {\n                node.addBridgeForwardingTableEntry(fdbport, curMacAddress, vlan.getVlanId());\n                LOG.debug(\"processQBridgeDot1DTpFdbTable: Found 'MGMT' status. Saving.\");\n            } else if (curfdbstatus == SNMP_DOT1D_FDB_STATUS_OTHER) {\n                node.addBridgeForwardingTableEntry(fdbport, curMacAddress, vlan.getVlanId());\n               LOG.debug(\"processQBridgeDot1DTpFdbTable: Found 'OTHER' status. Saving.\");\n            } else if (curfdbstatus == -1) {\n                LOG.warn(\"processQBridgeDot1DTpFdbTable: Unable to determine status. Skipping.\");\n            }\n        }\n    }","id":52119,"modified_method":"protected void processQBridgeDot1dTpFdbTable(final LinkableNode node, final OnmsVlan vlan, final SnmpVlanCollection snmpVlanColl) {\n        if (LOG.isDebugEnabled()) {\n            if (snmpVlanColl.getQBridgeDot1dFdbTable().size() > 0) {\n                LOG.debug(\"processQBridgeDot1dTpFdbTable: Starting Q-BRIDGE-MIB dot1dTpFdb table processing for {}/{}\", node.getNodeId(), str(node.getSnmpPrimaryIpAddr()));\n            } else {\n                LOG.debug(\"processQBridgeDot1dTpFdbTable: Zero Q-BRIDGE-MIB dot1dTpFdb table entries for {}/{}\", node.getNodeId(), str(node.getSnmpPrimaryIpAddr()));\n            }\n        }\n\n        for (final QBridgeDot1dTpFdbTableEntry dot1dfdbentry : snmpVlanColl.getQBridgeDot1dFdbTable()) {\n            final String curMacAddress = dot1dfdbentry.getQBridgeDot1dTpFdbAddress();\n\n            if (curMacAddress == null || curMacAddress.equals(\"000000000000\")) {\n                LOG.info(\"processQBridgeDot1DTpFdbTable: Invalid MAC addres {} on node {}. Skipping.\", curMacAddress, node.getNodeId());\n                continue;\n            }\n\n            LOG.debug(\"processQBridgeDot1DTpFdbTable: Found MAC address {} on node {}\", curMacAddress, node.getNodeId());\n\n            final int fdbport = dot1dfdbentry.getQBridgeDot1dTpFdbPort();\n\n            if ( fdbport == -1) {\n                LOG.debug(\"processQBridgeDot1DTpFdbTable: Invalid FDB port ({}) for MAC address {} on node {}. Skipping.\", fdbport, curMacAddress, node.getNodeId());\n                continue;\n            } else if (fdbport == 0 ) {\n                LOG.debug(\"processQBridgeDot1DTpFdbTable: FDB port ({}) for MAC address {} on node {}. Saving generic port.\", fdbport, curMacAddress, node.getNodeId());\n            }\n\n            LOG.debug(\"processQBridgeDot1DTpFdbTable: Found bridge port {} on node {}.\", fdbport, node.getNodeId());\n\n            final int curfdbstatus = dot1dfdbentry.getQBridgeDot1dTpFdbStatus();\n\n            if (curfdbstatus == SNMP_DOT1D_FDB_STATUS_LEARNED) {\n                node.addBridgeForwardingTableEntry(fdbport, curMacAddress);\n                LOG.debug(\"processQBridgeDot1DTpFdbTable: Found learned status on bridge port.\");\n            } else if (curfdbstatus == SNMP_DOT1D_FDB_STATUS_SELF) {\n            \tInteger ifIndex = node.getIfindexFromBridgePort(fdbport);\n            \tif (ifIndex == null)\n            \t\tifIndex = -1;\n                node.getMacIdentifiers().put(ifIndex,curMacAddress);\n                LOG.debug(\"processQBridgeDot1DTpFdbTable: MAC address ({}) is used as port identifier.\", curMacAddress);\n            } else if (curfdbstatus == SNMP_DOT1D_FDB_STATUS_INVALID) {\n                LOG.debug(\"processQBridgeDot1DTpFdbTable: Found 'INVALID' status. Skipping.\");\n            } else if (curfdbstatus == SNMP_DOT1D_FDB_STATUS_MGMT) {\n                node.addBridgeForwardingTableEntry(fdbport, curMacAddress);\n                LOG.debug(\"processQBridgeDot1DTpFdbTable: Found 'MGMT' status. Saving.\");\n            } else if (curfdbstatus == SNMP_DOT1D_FDB_STATUS_OTHER) {\n                node.addBridgeForwardingTableEntry(fdbport, curMacAddress);\n               LOG.debug(\"processQBridgeDot1DTpFdbTable: Found 'OTHER' status. Saving.\");\n            } else if (curfdbstatus == -1) {\n                LOG.warn(\"processQBridgeDot1DTpFdbTable: Unable to determine status. Skipping.\");\n            }\n        }\n    }","commit_id":"6b3c4a4b6a15bafc11b40c9707cdd0d23fa02ce9","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void addBridgeForwardingTableEntry(final int bridgeport, final String macAddress,\n            final Integer vlan) {\n        Set<String> macs = new HashSet<String>();\n        if (m_portMacs.containsKey(bridgeport)) {\n            macs = m_portMacs.get(bridgeport);\n        }\n        macs.add(macAddress);\n\n        m_portMacs.put(bridgeport, macs);\n    }","id":52120,"modified_method":"public void addBridgeForwardingTableEntry(final int bridgeport, final String macAddress) {\n        Set<String> macs = new HashSet<String>();\n        if (m_portMacs.containsKey(bridgeport)) {\n            macs = m_portMacs.get(bridgeport);\n        }\n        macs.add(macAddress);\n\n        m_portMacs.put(bridgeport, macs);\n    }","commit_id":"6b3c4a4b6a15bafc11b40c9707cdd0d23fa02ce9","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public boolean fillInCommonPrefix(final boolean explicit) {\n    return new WriteCommandAction<Boolean>(myEditor.getProject()) {\n      protected void run(Result<Boolean> result) throws Throwable {\n        if (!explicit) {\n          setMergeCommand();\n        }\n        result.setResult(myLookup.fillInCommonPrefix(explicit));\n      }\n    }.execute().getResultObject().booleanValue();\n  }","id":52121,"modified_method":"public boolean fillInCommonPrefix(final boolean explicit) {\n    final Boolean aBoolean = new WriteCommandAction<Boolean>(myEditor.getProject()) {\n      protected void run(Result<Boolean> result) throws Throwable {\n        if (!explicit) {\n          setMergeCommand();\n        }\n        try {\n          result.setResult(myLookup.fillInCommonPrefix(explicit));\n        }\n        catch (Exception e) {\n          LOG.error(e);\n        }\n      }\n    }.execute().getResultObject();\n    return aBoolean.booleanValue();\n  }","commit_id":"6607d1adfcf6f740285f8ec0b6698dbaa5de6b98","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Object doTransform(Object src, String encoding) throws TransformerException\n    {\n        try {\n            Source sourceDoc = getXmlSource(src);\n            if (sourceDoc == null) return null;\n            \n            // If returnClass is not set, assume W3C DOM\n            // This is the original behaviour\n            ResultHolder holder = getResultHolder(returnClass);\n            if (holder == null) holder = getResultHolder(Document.class); \n\n            assert(holder != null);\n\n            Transformer idTransformer = TransformerFactory.newInstance().newTransformer();\n            idTransformer.setOutputProperty(OutputKeys.ENCODING,encoding);\n            idTransformer.transform(sourceDoc, holder.getResult());\n\n            Object result = holder.getResultObject();\n            return result;\n        } catch (Exception e) {\n            throw new TransformerException(this, e);\n        }\n    }","id":52122,"modified_method":"public Object doTransform(Object src, String encoding) throws TransformerException\n    {\n        try {\n            Source sourceDoc = getXmlSource(src);\n            if (sourceDoc == null) return null;\n            \n            // If returnClass is not set, assume W3C DOM\n            // This is the original behaviour\n            ResultHolder holder = getResultHolder(returnClass);\n            if (holder == null) holder = getResultHolder(Document.class);\n\n            Transformer idTransformer = TransformerFactory.newInstance().newTransformer();\n            idTransformer.setOutputProperty(OutputKeys.ENCODING,encoding);\n            idTransformer.transform(sourceDoc, holder.getResult());\n\n            return holder.getResultObject();\n        } catch (Exception e) {\n            throw new TransformerException(this, e);\n        }\n    }","commit_id":"fe28618b624261a66c57c0a241a4380b65ded88d","url":"https://github.com/mulesoft/mule"},{"original_method":"protected void deleteClassFile(final String className) throws IOException {\n    new WriteCommandAction(getProject()) {\n      @Override\n      protected void run(Result result) throws Throwable {\n        final CompilerModuleExtension extension = ModuleRootManager.getInstance(myModule).getModuleExtension(CompilerModuleExtension.class);\n        //noinspection ConstantConditions\n        extension.getCompilerOutputPath().findChild(className + \".class\").delete(this);\n      }\n    }.execute();\n  }","id":52123,"modified_method":"protected void deleteClassFile(final String className) throws IOException {\n    AccessToken token = WriteAction.start();\n    try {\n      if (useJps()) {\n        //noinspection ConstantConditions\n        touch(JavaPsiFacade.getInstance(getProject()).findClass(className).getContainingFile().getVirtualFile());\n      } else {\n        final CompilerModuleExtension extension = ModuleRootManager.getInstance(myModule).getModuleExtension(CompilerModuleExtension.class);\n        //noinspection ConstantConditions\n        extension.getCompilerOutputPath().findChild(className + \".class\").delete(this);\n      }\n    }\n    finally {\n      token.finish();\n    }\n  }","commit_id":"ad39ed8e523d1669958b780bc663301201622c92","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected Module addDependentModule() {\n    Module dep = new WriteCommandAction<Module>(getProject()) {\n      @Override\n      protected void run(Result<Module> result) throws Throwable {\n        final ModifiableModuleModel moduleModel = ModuleManager.getInstance(getProject()).getModifiableModel();\n        moduleModel.newModule(\"dependent/dependent.iml\", StdModuleTypes.JAVA);\n        moduleModel.commit();\n\n        final Module dep = ModuleManager.getInstance(getProject()).findModuleByName(\"dependent\");\n        final ModifiableRootModel model = ModuleRootManager.getInstance(dep).getModifiableModel();\n        model.addModuleOrderEntry(myModule);\n        final VirtualFile depRoot = myFixture.getTempDirFixture().getFile(\"dependent\");\n        final ContentEntry entry = model.addContentEntry(depRoot);\n        entry.addSourceFolder(depRoot, false);\n        model.setSdk(ModuleRootManager.getInstance(myModule).getSdk());\n\n        //model.getModuleExtension(CompilerModuleExtension.class).inheritCompilerOutputPath(true);\n\n        model.commit();\n        result.setResult(dep);\n      }\n    }.execute().getResultObject();\n    return dep;\n  }","id":52124,"modified_method":"protected Module addDependentModule() {\n    return new WriteCommandAction<Module>(getProject()) {\n      @Override\n      protected void run(Result<Module> result) throws Throwable {\n        final VirtualFile depRoot = myFixture.getTempDirFixture().findOrCreateDir(\"dependent\");\n\n        final ModifiableModuleModel moduleModel = ModuleManager.getInstance(getProject()).getModifiableModel();\n        String moduleName = moduleModel.newModule(depRoot.getPath() + \"/dependent.iml\", StdModuleTypes.JAVA).getName();\n        moduleModel.commit();\n\n        final Module dep = ModuleManager.getInstance(getProject()).findModuleByName(moduleName);\n        final ModifiableRootModel model = ModuleRootManager.getInstance(dep).getModifiableModel();\n        model.addModuleOrderEntry(myModule);\n        final ContentEntry entry = model.addContentEntry(depRoot);\n        entry.addSourceFolder(depRoot, false);\n        model.setSdk(ModuleRootManager.getInstance(myModule).getSdk());\n\n        model.commit();\n        result.setResult(dep);\n      }\n    }.execute().getResultObject();\n  }","commit_id":"ad39ed8e523d1669958b780bc663301201622c92","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected List<String> make() {\n    final Semaphore semaphore = new Semaphore();\n    semaphore.down();\n    final ErrorReportingCallback callback = new ErrorReportingCallback(semaphore);\n    UIUtil.invokeAndWaitIfNeeded(new Runnable() {\n      @Override\n      public void run() {\n        try {\n          CompilerManager.getInstance(getProject()).make(callback);\n        }\n        catch (Exception e) {\n          throw new RuntimeException(e);\n        }\n      }\n    });\n\n    //tests run in awt\n    while (!semaphore.waitFor(100)) {\n      if (SwingUtilities.isEventDispatchThread()) {\n        UIUtil.dispatchAllInvocationEvents();\n      }\n    }\n    callback.throwException();\n    return callback.getMessages();\n  }","id":52125,"modified_method":"protected List<String> make() {\n    final Semaphore semaphore = new Semaphore();\n    semaphore.down();\n    final ErrorReportingCallback callback = new ErrorReportingCallback(semaphore);\n    UIUtil.invokeAndWaitIfNeeded(new Runnable() {\n      @Override\n      public void run() {\n        try {\n          if (useJps()) {\n            getProject().save();\n            File ioFile = VfsUtil.virtualToIoFile(myModule.getModuleFile());\n            if (!ioFile.exists()) {\n              getProject().save();\n              assert ioFile.exists();\n            }\n          }\n          CompilerManager.getInstance(getProject()).make(callback);\n        }\n        catch (Exception e) {\n          throw new RuntimeException(e);\n        }\n      }\n    });\n\n    //tests run in awt\n    while (!semaphore.waitFor(100)) {\n      if (SwingUtilities.isEventDispatchThread()) {\n        UIUtil.dispatchAllInvocationEvents();\n      }\n    }\n    callback.throwException();\n    return callback.getMessages();\n  }","commit_id":"ad39ed8e523d1669958b780bc663301201622c92","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected static void touch(VirtualFile file) throws IOException {\n    file.setBinaryContent(file.contentsToByteArray(), file.getModificationStamp() + 1, file.getTimeStamp() + 1);\n  }","id":52126,"modified_method":"protected static void touch(VirtualFile file) throws IOException {\n    file.setBinaryContent(file.contentsToByteArray(), file.getModificationStamp() + 1, file.getTimeStamp() + 1);\n    File ioFile = VfsUtil.virtualToIoFile(file);\n    assert ioFile.setLastModified(ioFile.lastModified() - 100000);\n  }","commit_id":"ad39ed8e523d1669958b780bc663301201622c92","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected void setUp() throws Exception {\n    myMainOutput = new TempDirTestFixtureImpl();\n    myMainOutput.setUp();\n    super.setUp();\n    getProject().getComponent(GroovyCompilerLoader.class).projectOpened();\n    CompilerManagerImpl.testSetup();\n\n    new WriteCommandAction(getProject()) {\n      @Override\n      protected void run(Result result) throws Throwable {\n        CompilerProjectExtension.getInstance(getProject()).setCompilerOutputUrl(myMainOutput.findOrCreateDir(\"out\").getUrl());\n      }\n    }.execute();\n  }","id":52127,"modified_method":"@Override\n  protected void setUp() throws Exception {\n    myMainOutput = new TempDirTestFixtureImpl();\n    myMainOutput.setUp();\n    super.setUp();\n    getProject().getComponent(GroovyCompilerLoader.class).projectOpened();\n    CompilerManagerImpl.testSetup();\n\n    new WriteCommandAction(getProject()) {\n      @Override\n      protected void run(Result result) throws Throwable {\n        //noinspection ConstantConditions\n        CompilerProjectExtension.getInstance(getProject()).setCompilerOutputUrl(myMainOutput.findOrCreateDir(\"out\").getUrl());\n        if (useJps()) {\n          ApplicationManagerEx.getApplicationEx().doNotSave(false);\n          CompilerWorkspaceConfiguration.getInstance(getProject()).USE_COMPILE_SERVER = true;\n\n          JavaAwareProjectJdkTableImpl jdkTable = JavaAwareProjectJdkTableImpl.getInstanceEx();\n          Sdk internalJdk = jdkTable.getInternalJdk();\n          jdkTable.addJdk(internalJdk);\n          final ModifiableRootModel modifiableModel = ModuleRootManager.getInstance(myModule).getModifiableModel();\n          modifiableModel.setSdk(internalJdk);\n          modifiableModel.commit();\n        }\n      }\n    }.execute();\n  }","commit_id":"ad39ed8e523d1669958b780bc663301201622c92","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected void tearDown() throws Exception {\n    UIUtil.invokeAndWaitIfNeeded(new Runnable() {\n      @Override\n      public void run() {\n        try {\n          myMainOutput.tearDown();\n          myMainOutput = null;\n          GroovyCompilerTestCase.super.tearDown();\n        }\n        catch (Exception e) {\n          throw new RuntimeException(e);\n        }\n      }\n    });\n  }","id":52128,"modified_method":"@Override\n  protected void tearDown() throws Exception {\n    UIUtil.invokeAndWaitIfNeeded(new Runnable() {\n      @Override\n      public void run() {\n        try {\n          if (useJps()) {\n            CompilerWorkspaceConfiguration.getInstance(getProject()).USE_COMPILE_SERVER = false;\n            ApplicationManagerEx.getApplicationEx().doNotSave(true);\n            new WriteCommandAction(getProject()) {\n              @Override\n              protected void run(Result result) throws Throwable {\n                final JavaAwareProjectJdkTableImpl jdkTable = JavaAwareProjectJdkTableImpl.getInstanceEx();\n                jdkTable.removeJdk(jdkTable.getInternalJdk());\n              }\n            }.execute();\n            JpsServerManager.getInstance().shutdownServer();\n          }\n\n          myMainOutput.tearDown();\n          myMainOutput = null;\n          GroovyCompilerTestCase.super.tearDown();\n        }\n        catch (Exception e) {\n          throw new RuntimeException(e);\n        }\n      }\n    });\n  }","commit_id":"ad39ed8e523d1669958b780bc663301201622c92","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void collectNamespacePrefixes(Element element, Map prefixes) {\n\t\tString namespaceURI = element.getNamespaceURI();\n\t\tString prefix;\n\t\tif (namespaceURI != null && namespaceURI.length() > 0) {\n\t\t\tprefix = element.getPrefix();\n\t\t\tprefixes.put(prefix == null ? \"\" : prefix, namespaceURI);\n\t\t}\t\t\n\t\t//TODO : more complicated (see XQTS copynamespace-16)\n\t\tif (element instanceof org.exist.memtree.ElementImpl) {\n\t\t\tprefixes.putAll(((org.exist.memtree.ElementImpl)element).getNamespaceMap());\n\t\t}\t\t\n    }","id":52129,"modified_method":"public static void collectNamespacePrefixes(Element element, Map prefixes) {\n\t\tString namespaceURI = element.getNamespaceURI();\n\t\tif (namespaceURI != null && namespaceURI.length() > 0) {\n\t\t\tString prefix = element.getPrefix();\n\t\t\tprefixes.put(prefix == null ? \"\" : prefix, namespaceURI);\n\t\t}\t\t\n\t\tif (element instanceof org.exist.memtree.ElementImpl) {\n\t\t\tprefixes.putAll(((org.exist.memtree.ElementImpl)element).getNamespaceMap());\n\t\t}\t\t\n    }","commit_id":"1fabda2d316ebed24e73ea5ef0232909b7e2ae7c","url":"https://github.com/eXist-db/exist"},{"original_method":"public Sequence eval(Sequence[] args, Sequence contextSequence)\tthrows XPathException {\n        if (context.getProfiler().isEnabled()) {\n            context.getProfiler().start(this);       \n            context.getProfiler().message(this, Profiler.DEPENDENCIES, \"DEPENDENCIES\", Dependency.getDependenciesName(this.getDependencies()));\n            if (contextSequence != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT SEQUENCE\", contextSequence);\n        }\n        \n\t\tMap prefixes = new LinkedHashMap();\n\t\tNodeValue nodeValue = (NodeValue) args[0].itemAt(0);\t\t\n\t\tif (nodeValue.getImplementationType() == NodeValue.PERSISTENT_NODE) {\n\t\t\t//NodeProxy proxy = (NodeProxy) node;\n\t\t\tNode node = nodeValue.getNode();\n\t\t\tif (context.preserveNamespaces()) {\n\t\t\t\t//Horrible hacks to work-around bad in-scope NS\n\t\t\t\tif (node.getNodeType() == Node.ELEMENT_NODE && !context.inheritNamespaces()) {\n\t\t\t\t\tcollectNamespacePrefixes((ElementImpl)node, prefixes);\n\t\t\t\t} else {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tcollectNamespacePrefixes((ElementImpl)node, prefixes);\n\t\t\t\t\t\tnode = node.getParentNode();\n\t\t\t\t\t} while (node != null && node.getNodeType() == Node.ELEMENT_NODE);\t\t\t\t\n\t\t\t\t\t/*\n\t\t\t\t\tNodeSet ancestors = nodeValue.getAncestors(contextId, true);\n\t\t\t\t\tfor (Iterator i = ancestors.iterator(); i.hasNext(); ) {\n\t\t\t\t\t\tproxy = (NodeProxy) i.next();\n\t\t\t\t\t\tcollectNamespacePrefixes((ElementImpl)node, prefixes);\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (context.inheritNamespaces()) {\n\t\t\t\t\tnode = node.getParentNode();\n\t\t\t\t\tdo {\n\t\t\t\t\t\tcollectNamespacePrefixes((org.exist.memtree.ElementImpl)node, prefixes);\n\t\t\t\t\t\tnode = node.getParentNode();\n\t\t\t\t\t} while (node != null && node.getNodeType() == Node.ELEMENT_NODE);\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Add xmlNS to all in-memory constructs. /ljo\n\t        prefixes.put(\"xml\", Namespaces.XML_NS);\t\t\t\t\n\t\t} else { // In-memory node\n\t\t\t//NodeImpl nodeImpl = (NodeImpl) node;\n\t\t\tNode node = nodeValue.getNode();\t\t\t\n\t\t\tif (context.preserveNamespaces()) {\t\t\t\t\n\t\t\t\t//Horrible hacks to work-around bad in-scope NS\n\t\t\t\tif (node.getNodeType() == Node.ELEMENT_NODE && !context.inheritNamespaces()) {\n\t\t\t\t\tcollectNamespacePrefixes((org.exist.memtree.ElementImpl)node, prefixes);\n\t\t\t\t} else {\t\t\t\t\n\t\t\t\t\tdo {\n\t\t\t\t\t\tcollectNamespacePrefixes((org.exist.memtree.ElementImpl)node, prefixes);\n\t\t\t\t\t\tnode = node.getParentNode();\n\t\t\t\t\t} while (node != null && node.getNodeType() == Node.ELEMENT_NODE);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (context.inheritNamespaces()) {\n\t\t\t\t\tnode = node.getParentNode();\n\t\t\t\t\tdo {\n\t\t\t\t\t\tcollectNamespacePrefixes((org.exist.memtree.ElementImpl)node, prefixes);\n\t\t\t\t\t\tnode = node.getParentNode();\n\t\t\t\t\t} while (node != null && node.getNodeType() == Node.ELEMENT_NODE);\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t        // Add xmlNS to all in-memory constructs. /ljo\n\t        prefixes.put(\"xml\", Namespaces.XML_NS);\t\n\t\n\t\t}\n\n\t\tValueSequence result = new ValueSequence();\n\t\tString prefix;\n\t\tfor (Iterator i = prefixes.keySet().iterator(); i.hasNext(); ) {\n\t\t\tprefix = (String) i.next();\n\t\t\t//The predefined namespaces (e.g. \"exist\" for temporary nodes) could have been removed from the static context\n\t\t\tif (!(context.getURIForPrefix(prefix) == null && \n\t\t\t\t\t(\"exist\".equals(prefix) || \"xs\".equals(prefix) || \"xsi\".equals(prefix) ||\n\t\t\t\t\t\t\"wdt\".equals(prefix) || \"fn\".equals(prefix) || \"local\".equals(prefix))))\n\t\t\t\tresult.add(new StringValue(prefix)); \n\t\t}\n\t\t\n        if (context.getProfiler().isEnabled()) \n            context.getProfiler().end(this, \"\", result); \n        \n        return result;          \n\t}","id":52130,"modified_method":"public Sequence eval(Sequence[] args, Sequence contextSequence)\tthrows XPathException {\n        if (context.getProfiler().isEnabled()) {\n            context.getProfiler().start(this);       \n            context.getProfiler().message(this, Profiler.DEPENDENCIES, \"DEPENDENCIES\", Dependency.getDependenciesName(this.getDependencies()));\n            if (contextSequence != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT SEQUENCE\", contextSequence);\n        }\n        \n\t\tMap prefixes = new LinkedHashMap();\n\t\tNodeValue nodeValue = (NodeValue) args[0].itemAt(0);\t\t\n\t\tif (nodeValue.getImplementationType() == NodeValue.PERSISTENT_NODE) {\n\t\t\t//NodeProxy proxy = (NodeProxy) node;\n\t\t\tNode node = nodeValue.getNode();\n\t\t\tif (context.preserveNamespaces()) {\n\t\t\t\t//Horrible hacks to work-around bad in-scope NS : we reconstruct a NS context !\n\t\t\t\tif (context.inheritNamespaces()) {\n\t\t\t\t\t//Grab ancestors' NS\n\t\t\t\t\tdo {\n\t\t\t\t\t\tcollectNamespacePrefixes((ElementImpl)node, prefixes);\n\t\t\t\t\t\tnode = node.getParentNode();\n\t\t\t\t\t} while (node != null && node.getNodeType() == Node.ELEMENT_NODE);\t\t\t\t\n\t\t\t\t\t/*\n\t\t\t\t\tNodeSet ancestors = nodeValue.getAncestors(contextId, true);\n\t\t\t\t\tfor (Iterator i = ancestors.iterator(); i.hasNext(); ) {\n\t\t\t\t\t\tproxy = (NodeProxy) i.next();\n\t\t\t\t\t\tcollectNamespacePrefixes((ElementImpl)node, prefixes);\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t} else {\n\t\t\t\t\t//Grab self's NS\n\t\t\t\t\tif (node.getNodeType() == Node.ELEMENT_NODE)\n\t\t\t\t\t\tcollectNamespacePrefixes((ElementImpl)node, prefixes);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//untested : copied from below\n\t\t\t\tif (context.inheritNamespaces()) {\n\t\t\t\t\t//get the top-most ancestor\n\t\t\t\t\tdo {\n \t\t\t\t\t\tif (node.getParentNode() == null || node.getParentNode() instanceof DocumentImpl)\n\t\t\t\t\t\t\tcollectNamespacePrefixes((ElementImpl)node, prefixes);\n\t\t\t\t\t\tnode = node.getParentNode();\n\t\t\t\t\t} while (node != null && node.getNodeType() == Node.ELEMENT_NODE);\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Add xmlNS to all in-memory constructs. /ljo\n\t        prefixes.put(\"xml\", Namespaces.XML_NS);\t\t\t\t\n\t\t} else { // In-memory node\n\t\t\t//NodeImpl nodeImpl = (NodeImpl) node;\n\t\t\tNode node = nodeValue.getNode();\t\t\t\n\t\t\tif (context.preserveNamespaces()) {\t\t\t\t\n\t\t\t\t//Horrible hacks to work-around bad in-scope NS : we reconstruct a NS context !\n\t\t\t\tif (context.inheritNamespaces()) {\n\t\t\t\t\t//Grab ancestors' NS\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (node.getNodeType() == Node.ELEMENT_NODE)\n\t\t\t\t\t\t\tcollectNamespacePrefixes((org.exist.memtree.ElementImpl)node, prefixes);\n\t\t\t\t\t\tnode = node.getParentNode();\n\t\t\t\t\t} while (node != null && node.getNodeType() == Node.ELEMENT_NODE);\n\t\t\t\t} else {\n\t\t\t\t\t//Grab self's NS\n\t\t\t\t\tif (node.getNodeType() == Node.ELEMENT_NODE)\n\t\t\t\t\t\tcollectNamespacePrefixes((org.exist.memtree.ElementImpl)node, prefixes);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (context.inheritNamespaces()) {\n\t\t\t\t\t//get the top-most ancestor\n\t\t\t\t\tdo {\n \t\t\t\t\t\tif (node.getParentNode() == null || node.getParentNode() instanceof org.exist.memtree.DocumentImpl)\n\t\t\t\t\t\t\tcollectNamespacePrefixes((org.exist.memtree.ElementImpl)node, prefixes);\n\t\t\t\t\t\tnode = node.getParentNode();\n\t\t\t\t\t} while (node != null && node.getNodeType() == Node.ELEMENT_NODE);\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t        // Add xmlNS to all in-memory constructs. /ljo\n\t        prefixes.put(\"xml\", Namespaces.XML_NS);\t\n\t\n\t\t}\n\n\t\tValueSequence result = new ValueSequence();\n\t\tString prefix;\n\t\tfor (Iterator i = prefixes.keySet().iterator(); i.hasNext(); ) {\n\t\t\tprefix = (String) i.next();\n\t\t\t//The predefined namespaces (e.g. \"exist\" for temporary nodes) could have been removed from the static context\n\t\t\tif (!(context.getURIForPrefix(prefix) == null && \n\t\t\t\t\t(\"exist\".equals(prefix) || \"xs\".equals(prefix) || \"xsi\".equals(prefix) ||\n\t\t\t\t\t\t\"wdt\".equals(prefix) || \"fn\".equals(prefix) || \"local\".equals(prefix))))\n\t\t\t\tresult.add(new StringValue(prefix)); \n\t\t}\n\t\t\n        if (context.getProfiler().isEnabled()) \n            context.getProfiler().end(this, \"\", result); \n        \n        return result;          \n\t}","commit_id":"1fabda2d316ebed24e73ea5ef0232909b7e2ae7c","url":"https://github.com/eXist-db/exist"},{"original_method":"public static boolean nodeSubstituteActionsBuilder_Precondition_SNodeOperation_1196936366507(final IOperationContext operationContext, final NodeSubstitutePreconditionContext _context) {\n    SNode expression = _context.getParentNode();\n    return TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(expression, \"leftExpression\", true)), new QuotationClass_().createNode());\n  }","id":52131,"modified_method":"public static boolean nodeSubstituteActionsBuilder_Precondition_SNodeOperation_1196936366507(final IOperationContext operationContext, final NodeSubstitutePreconditionContext _context) {\n    SNode leftExpression = SLinkOperations.getTarget(_context.getParentNode(), \"operand\", true);\n    if(SNodeOperations.isInstanceOf(_context.getParentNode(), \"jetbrains.mps.bootstrap.smodelLanguage.structure.SNodeOperationExpression\")) {\n      leftExpression = SLinkOperations.getTarget(_context.getParentNode(), \"leftExpression\", true);\n    }\n    return TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(leftExpression), new QuotationClass_().createNode());\n  }","commit_id":"d0bdfe1db4a131afd0d8f66b4f45b3c970e7f334","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static List<INodeSubstituteAction> nodeSubstituteActionsBuilder_ActionsFactory_SNodeOperation_1196936340075(final IOperationContext operationContext, final NodeSubstituteActionsFactoryContext _context) {\n    List<INodeSubstituteAction> result = new ArrayList<INodeSubstituteAction>();\n    {\n      AbstractConceptDeclaration outputConcept = SModelUtil_new.findConceptDeclaration(\"jetbrains.mps.bootstrap.smodelLanguage.structure.Model_CreateNewNodeOperation\", operationContext.getScope());\n      SNode childConcept = (SNode)_context.getChildConcept();\n      if(SConceptOperations.isSuperConceptOf(childConcept, NameUtil.nodeFQName((SNode)BaseAdapter.fromAdapter(outputConcept)))) {\n        Calculable calc = new Calculable() {\n\n          public Object calculate() {\n            return SModelOperations.getNodesIncludingImported(SNodeOperations.getModel(_context.getParentNode()), operationContext.getScope(), \"jetbrains.mps.bootstrap.structureLanguage.structure.ConceptDeclaration\");\n          }\n\n        };\n        Iterable<SNode> queryResult = (Iterable)calc.calculate();\n        assert queryResult != null;\n        for(final SNode item : queryResult) {\n          result.add(new DefaultChildNodeSubstituteAction(outputConcept, item, _context.getParentNode(), _context.getCurrentTargetNode(), _context.getChildSetter(), operationContext.getScope()) {\n\n            public SNode createChildNode(Object parameterObject, SModel model, String pattern) {\n              SNode result = SModelOperations.createNewNode(model, \"jetbrains.mps.bootstrap.smodelLanguage.structure.Model_CreateNewNodeOperation\", null);\n              SLinkOperations.setTarget(result, \"concept\", (item), false);\n              return result;\n            }\n\n            public String getMatchingText(String pattern) {\n              return \"new node(\" + SPropertyOperations.getString((item), \"name\");\n            }\n\n          });\n        }\n      }\n    }\n    {\n      AbstractConceptDeclaration outputConcept = SModelUtil_new.findConceptDeclaration(\"jetbrains.mps.bootstrap.smodelLanguage.structure.Model_CreateNewNodeOperation\", operationContext.getScope());\n      SNode childConcept = (SNode)_context.getChildConcept();\n      if(SConceptOperations.isSuperConceptOf(childConcept, NameUtil.nodeFQName((SNode)BaseAdapter.fromAdapter(outputConcept)))) {\n        Calculable calc = new Calculable() {\n\n          public Object calculate() {\n            List<SNode> concepts = SModelOperations.getNodesIncludingImported(SNodeOperations.getModel(_context.getParentNode()), operationContext.getScope(), \"jetbrains.mps.bootstrap.structureLanguage.structure.ConceptDeclaration\");\n            return SequenceOperations.where(concepts, new zPredicate2(null, null));\n          }\n\n        };\n        Iterable<SNode> queryResult = (Iterable)calc.calculate();\n        assert queryResult != null;\n        for(final SNode item : queryResult) {\n          result.add(new DefaultChildNodeSubstituteAction(outputConcept, item, _context.getParentNode(), _context.getCurrentTargetNode(), _context.getChildSetter(), operationContext.getScope()) {\n\n            public SNode createChildNode(Object parameterObject, SModel model, String pattern) {\n              SNode result = SModelOperations.createNewNode(model, \"jetbrains.mps.bootstrap.smodelLanguage.structure.Model_CreateNewRootNodeOperation\", null);\n              SLinkOperations.setTarget(result, \"concept\", (item), false);\n              return result;\n            }\n\n            public String getMatchingText(String pattern) {\n              return \"new root node(\" + SPropertyOperations.getString((item), \"name\");\n            }\n\n          });\n        }\n      }\n    }\n    return result;\n  }","id":52132,"modified_method":"public static List<INodeSubstituteAction> nodeSubstituteActionsBuilder_ActionsFactory_SNodeOperation_1196936340075(final IOperationContext operationContext, final NodeSubstituteActionsFactoryContext _context) {\n    List<INodeSubstituteAction> result = new ArrayList<INodeSubstituteAction>();\n    {\n      AbstractConceptDeclaration outputConcept = SModelUtil_new.findConceptDeclaration(\"jetbrains.mps.bootstrap.smodelLanguage.structure.Model_CreateNewNodeOperation\", operationContext.getScope());\n      SNode childConcept = (SNode)_context.getChildConcept();\n      if(SConceptOperations.isSuperConceptOf(childConcept, NameUtil.nodeFQName((SNode)BaseAdapter.fromAdapter(outputConcept)))) {\n        Calculable calc = new Calculable() {\n\n          public Object calculate() {\n            return SModelOperations.getNodesIncludingImported(SNodeOperations.getModel(_context.getParentNode()), operationContext.getScope(), \"jetbrains.mps.bootstrap.structureLanguage.structure.ConceptDeclaration\");\n          }\n\n        };\n        Iterable<SNode> queryResult = (Iterable)calc.calculate();\n        assert queryResult != null;\n        for(final SNode item : queryResult) {\n          result.add(new DefaultChildNodeSubstituteAction(outputConcept, item, _context.getParentNode(), _context.getCurrentTargetNode(), _context.getChildSetter(), operationContext.getScope()) {\n\n            public SNode createChildNode(Object parameterObject, SModel model, String pattern) {\n              SNode result = SConceptOperations.createNewNode(\"jetbrains.mps.bootstrap.smodelLanguage.structure.Model_CreateNewNodeOperation\", null);\n              SLinkOperations.setTarget(result, \"concept\", (item), false);\n              return result;\n            }\n\n            public String getMatchingText(String pattern) {\n              return \"new node(\" + SPropertyOperations.getString((item), \"name\");\n            }\n\n          });\n        }\n      }\n    }\n    {\n      AbstractConceptDeclaration outputConcept = SModelUtil_new.findConceptDeclaration(\"jetbrains.mps.bootstrap.smodelLanguage.structure.Model_CreateNewNodeOperation\", operationContext.getScope());\n      SNode childConcept = (SNode)_context.getChildConcept();\n      if(SConceptOperations.isSuperConceptOf(childConcept, NameUtil.nodeFQName((SNode)BaseAdapter.fromAdapter(outputConcept)))) {\n        Calculable calc = new Calculable() {\n\n          public Object calculate() {\n            List<SNode> concepts = SModelOperations.getNodesIncludingImported(SNodeOperations.getModel(_context.getParentNode()), operationContext.getScope(), \"jetbrains.mps.bootstrap.structureLanguage.structure.ConceptDeclaration\");\n            return SequenceOperations.toList(SequenceOperations.where(concepts, new zPredicate2(null, null)));\n          }\n\n        };\n        Iterable<SNode> queryResult = (Iterable)calc.calculate();\n        assert queryResult != null;\n        for(final SNode item : queryResult) {\n          result.add(new DefaultChildNodeSubstituteAction(outputConcept, item, _context.getParentNode(), _context.getCurrentTargetNode(), _context.getChildSetter(), operationContext.getScope()) {\n\n            public SNode createChildNode(Object parameterObject, SModel model, String pattern) {\n              SNode result = SConceptOperations.createNewNode(\"jetbrains.mps.bootstrap.smodelLanguage.structure.Model_CreateNewRootNodeOperation\", null);\n              SLinkOperations.setTarget(result, \"concept\", (item), false);\n              return result;\n            }\n\n            public String getMatchingText(String pattern) {\n              return \"new root node(\" + SPropertyOperations.getString((item), \"name\");\n            }\n\n          });\n        }\n      }\n    }\n    return result;\n  }","commit_id":"d0bdfe1db4a131afd0d8f66b4f45b3c970e7f334","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static void writePaths(\n\t\t\tHttpServletResponse response, JSONArray cssPathsJSONArray,\n\t\t\tJSONArray javaScriptPathsJSONArray)\n\t\tthrows IOException {\n\n\t\tPrintWriter printWriter = response.getWriter();\n\n\t\tfor (int i = 0; i < cssPathsJSONArray.length(); i++) {\n\t\t\tString value = cssPathsJSONArray.getString(i);\n\n\t\t\tprintWriter.print(\"<link href=\\\"\");\n\t\t\tprintWriter.print(HtmlUtil.escape(value));\n\t\t\tprintWriter.println(\"\\\" rel=\\\"stylesheet\\\" type=\\\"text/css\\\" />\");\n\t\t}\n\n\t\tfor (int i = 0; i < javaScriptPathsJSONArray.length(); i++) {\n\t\t\tString value = javaScriptPathsJSONArray.getString(i);\n\n\t\t\tprintWriter.print(\"<script src=\\\"\");\n\t\t\tprintWriter.print(HtmlUtil.escape(value));\n\t\t\tprintWriter.println(\"\\\" type=\\\"text/javascript\\\"><\/script>\");\n\t\t}\n\t}","id":52133,"modified_method":"private static void writePaths(\n\t\t\tHttpServletResponse response, JSONArray cssPathsJSONArray,\n\t\t\tJSONArray javaScriptPathsJSONArray)\n\t\tthrows IOException {\n\n\t\tif ((cssPathsJSONArray.length() == 0) &&\n\t\t\t\t(javaScriptPathsJSONArray.length() == 0)) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tPrintWriter printWriter = response.getWriter();\n\n\t\tfor (int i = 0; i < cssPathsJSONArray.length(); i++) {\n\t\t\tString value = cssPathsJSONArray.getString(i);\n\n\t\t\tprintWriter.print(\"<link href=\\\"\");\n\t\t\tprintWriter.print(HtmlUtil.escape(value));\n\t\t\tprintWriter.println(\"\\\" rel=\\\"stylesheet\\\" type=\\\"text/css\\\" />\");\n\t\t}\n\n\t\tfor (int i = 0; i < javaScriptPathsJSONArray.length(); i++) {\n\t\t\tString value = javaScriptPathsJSONArray.getString(i);\n\n\t\t\tprintWriter.print(\"<script src=\\\"\");\n\t\t\tprintWriter.print(HtmlUtil.escape(value));\n\t\t\tprintWriter.println(\"\\\" type=\\\"text/javascript\\\"><\/script>\");\n\t\t}\n\t}","commit_id":"4d8847e78c998e56e95531842d37920321da9b42","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void writeFooterPaths(\n\t\t\tHttpServletResponse response, JSONObject jsonObject)\n\t\tthrows IOException {\n\n\t\tJSONArray footerCssPathsJSONArray = jsonObject.getJSONArray(\n\t\t\t\"footerCssPaths\");\n\t\tJSONArray footerJavaScriptPathsJSONArray = jsonObject.getJSONArray(\n\t\t\t\"footerJavaScriptPaths\");\n\n\t\tif ((footerCssPathsJSONArray.length() == 0) &&\n\t\t\t(footerJavaScriptPathsJSONArray.length() == 0)) {\n\n\t\t\treturn;\n\t\t}\n\n\t\twritePaths(\n\t\t\tresponse, footerCssPathsJSONArray, footerJavaScriptPathsJSONArray);\n\t}","id":52134,"modified_method":"public static void writeFooterPaths(\n\t\t\tHttpServletResponse response, JSONObject jsonObject)\n\t\tthrows IOException {\n\n\t\twritePaths(\n\t\t\tresponse, jsonObject.getJSONArray(\"footerCssPaths\"),\n\t\t\t\tjsonObject.getJSONArray(\"footerJavaScriptPaths\"));\n\t}","commit_id":"4d8847e78c998e56e95531842d37920321da9b42","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void writeHeaderPaths(\n\t\t\tHttpServletResponse response, JSONObject jsonObject)\n\t\tthrows IOException {\n\n\t\tJSONArray headerCssPathsJSONArray = jsonObject.getJSONArray(\n\t\t\t\"headerCssPaths\");\n\t\tJSONArray headerJavaScriptPathsJSONArray = jsonObject.getJSONArray(\n\t\t\t\"headerJavaScriptPaths\");\n\n\t\tif ((headerCssPathsJSONArray.length() == 0) &&\n\t\t\t(headerJavaScriptPathsJSONArray.length() == 0)) {\n\n\t\t\treturn;\n\t\t}\n\n\t\twritePaths(\n\t\t\tresponse, headerCssPathsJSONArray, headerJavaScriptPathsJSONArray);\n\t}","id":52135,"modified_method":"public static void writeHeaderPaths(\n\t\t\tHttpServletResponse response, JSONObject jsonObject)\n\t\tthrows IOException {\n\n\t\twritePaths(\n\t\t\t\tresponse, jsonObject.getJSONArray(\"headerCssPaths\"),\n\t\t\t\tjsonObject.getJSONArray(\"headerJavaScriptPaths\"));\n\t}","commit_id":"4d8847e78c998e56e95531842d37920321da9b42","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic String processPortlet(String portletId) throws Exception {\n\t\t_request.setAttribute(WebKeys.RENDER_PORTLET_RESOURCE, Boolean.TRUE);\n\n\t\tBufferCacheServletResponse bufferCacheServletResponse =\n\t\t\tnew BufferCacheServletResponse(_response);\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)_request.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tPortlet portlet = PortletLocalServiceUtil.getPortletById(\n\t\t\tthemeDisplay.getCompanyId(), portletId);\n\n\t\tJSONObject jsonObject = null;\n\n\t\tjsonObject = JSONFactoryUtil.createJSONObject();\n\n\t\tPortletJSONUtil.populatePortletJSONObject(\n\t\t\t_request, StringPool.BLANK, portlet, jsonObject);\n\n\t\ttry {\n\t\t\tPortletJSONUtil.writeHeaderPaths(_response, jsonObject);\n\n\t\t\tPortletContainerUtil.render(\n\t\t\t\t_request, bufferCacheServletResponse, portlet);\n\n\t\t\tPortletJSONUtil.writeFooterPaths(_response, jsonObject);\n\n\t\t\treturn bufferCacheServletResponse.getString();\n\t\t}\n\t\tfinally {\n\t\t\t_request.removeAttribute(WebKeys.RENDER_PORTLET_RESOURCE);\n\t\t}\n\t}","id":52136,"modified_method":"@Override\n\tpublic String processPortlet(String portletId) throws Exception {\n\t\t_request.setAttribute(WebKeys.RENDER_PORTLET_RESOURCE, Boolean.TRUE);\n\n\t\tBufferCacheServletResponse bufferCacheServletResponse =\n\t\t\tnew BufferCacheServletResponse(_response);\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)_request.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tPortlet portlet = PortletLocalServiceUtil.getPortletById(\n\t\t\tthemeDisplay.getCompanyId(), portletId);\n\n\t\tJSONObject jsonObject = JSONFactoryUtil.createJSONObject();\n\n\t\tPortletJSONUtil.populatePortletJSONObject(\n\t\t\t_request, StringPool.BLANK, portlet, jsonObject);\n\n\t\ttry {\n\t\t\tPortletJSONUtil.writeHeaderPaths(_response, jsonObject);\n\n\t\t\tPortletContainerUtil.render(\n\t\t\t\t_request, bufferCacheServletResponse, portlet);\n\n\t\t\tPortletJSONUtil.writeFooterPaths(_response, jsonObject);\n\n\t\t\treturn bufferCacheServletResponse.getString();\n\t\t}\n\t\tfinally {\n\t\t\t_request.removeAttribute(WebKeys.RENDER_PORTLET_RESOURCE);\n\t\t}\n\t}","commit_id":"4d8847e78c998e56e95531842d37920321da9b42","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n    public AggregatorFactory parse(String aggregationName, XContentParser parser, SearchContext context) throws IOException {\n    \n        ValuesSourceParser<ValuesSource.Numeric> vsParser = ValuesSourceParser.numeric(aggregationName, InternalPercentiles.TYPE, context)\n                .requiresSortedValues(true)\n                .build();\n    \n        double[] keys = null;\n        boolean keyed = true;\n        double compression = 100;\n    \n        XContentParser.Token token;\n        String currentFieldName = null;\n        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n            if (token == XContentParser.Token.FIELD_NAME) {\n                currentFieldName = parser.currentName();\n            } else if (vsParser.token(currentFieldName, token, parser)) {\n                continue;\n            } else if (token == XContentParser.Token.START_ARRAY) {\n                if (keysFieldName().equals(currentFieldName)) {\n                    DoubleArrayList values = new DoubleArrayList(10);\n                    while ((token = parser.nextToken()) != XContentParser.Token.END_ARRAY) {\n                        double value = parser.doubleValue();\n                        values.add(value);\n                    }\n                    keys = values.toArray();\n                    Arrays.sort(keys);\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else if (token == XContentParser.Token.VALUE_BOOLEAN) {\n                if (\"keyed\".equals(currentFieldName)) {\n                    keyed = parser.booleanValue();\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else if (token == XContentParser.Token.VALUE_NUMBER) {\n                if (\"compression\".equals(currentFieldName)) {\n                    compression = parser.doubleValue();\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else {\n                throw new SearchParseException(context, \"Unexpected token \" + token + \" in [\" + aggregationName + \"].\");\n            }\n        }\n        return buildFactory(context, aggregationName, vsParser.config(), keys, compression, keyed);\n    }","id":52137,"modified_method":"@Override\n    public AggregatorFactory parse(String aggregationName, XContentParser parser, SearchContext context) throws IOException {\n    \n        ValuesSourceParser<ValuesSource.Numeric> vsParser = ValuesSourceParser.numeric(aggregationName, InternalPercentiles.TYPE, context).build();\n    \n        double[] keys = null;\n        boolean keyed = true;\n        double compression = 100;\n    \n        XContentParser.Token token;\n        String currentFieldName = null;\n        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n            if (token == XContentParser.Token.FIELD_NAME) {\n                currentFieldName = parser.currentName();\n            } else if (vsParser.token(currentFieldName, token, parser)) {\n                continue;\n            } else if (token == XContentParser.Token.START_ARRAY) {\n                if (keysFieldName().equals(currentFieldName)) {\n                    DoubleArrayList values = new DoubleArrayList(10);\n                    while ((token = parser.nextToken()) != XContentParser.Token.END_ARRAY) {\n                        double value = parser.doubleValue();\n                        values.add(value);\n                    }\n                    keys = values.toArray();\n                    Arrays.sort(keys);\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else if (token == XContentParser.Token.VALUE_BOOLEAN) {\n                if (\"keyed\".equals(currentFieldName)) {\n                    keyed = parser.booleanValue();\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else if (token == XContentParser.Token.VALUE_NUMBER) {\n                if (\"compression\".equals(currentFieldName)) {\n                    compression = parser.doubleValue();\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else {\n                throw new SearchParseException(context, \"Unexpected token \" + token + \" in [\" + aggregationName + \"].\");\n            }\n        }\n        return buildFactory(context, aggregationName, vsParser.config(), keys, compression, keyed);\n    }","commit_id":"ded30e95de3a1e8f955da013e07efc1e6b0e7094","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public AggregatorFactory parse(String aggregationName, XContentParser parser, SearchContext context) throws IOException {\n\n        ValuesSourceParser vsParser = ValuesSourceParser.numeric(aggregationName, InternalDateHistogram.TYPE, context)\n                .targetValueType(ValueType.DATE)\n                .requiresSortedValues(true)\n                .formattable(true)\n                .build();\n\n        boolean keyed = false;\n        long minDocCount = 1;\n        ExtendedBounds extendedBounds = null;\n        InternalOrder order = (InternalOrder) Histogram.Order.KEY_ASC;\n        String interval = null;\n        boolean preZoneAdjustLargeInterval = false;\n        DateTimeZone preZone = DateTimeZone.UTC;\n        DateTimeZone postZone = DateTimeZone.UTC;\n        long preOffset = 0;\n        long postOffset = 0;\n\n        XContentParser.Token token;\n        String currentFieldName = null;\n        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n            if (token == XContentParser.Token.FIELD_NAME) {\n                currentFieldName = parser.currentName();\n            } else if (vsParser.token(currentFieldName, token, parser)) {\n                continue;\n            } else if (token == XContentParser.Token.VALUE_STRING) {\n                if (\"time_zone\".equals(currentFieldName) || \"timeZone\".equals(currentFieldName)) {\n                    preZone = DateMathParser.parseZone(parser.text());\n                } else if (\"pre_zone\".equals(currentFieldName) || \"preZone\".equals(currentFieldName)) {\n                    preZone = DateMathParser.parseZone(parser.text());\n                } else if (\"post_zone\".equals(currentFieldName) || \"postZone\".equals(currentFieldName)) {\n                    postZone = DateMathParser.parseZone(parser.text());\n                } else if (\"pre_offset\".equals(currentFieldName) || \"preOffset\".equals(currentFieldName)) {\n                    preOffset = parseOffset(parser.text());\n                } else if (\"post_offset\".equals(currentFieldName) || \"postOffset\".equals(currentFieldName)) {\n                    postOffset = parseOffset(parser.text());\n                } else if (\"interval\".equals(currentFieldName)) {\n                    interval = parser.text();\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else if (token == XContentParser.Token.VALUE_BOOLEAN) {\n                if (\"keyed\".equals(currentFieldName)) {\n                    keyed = parser.booleanValue();\n                } else if (\"pre_zone_adjust_large_interval\".equals(currentFieldName) || \"preZoneAdjustLargeInterval\".equals(currentFieldName)) {\n                    preZoneAdjustLargeInterval = parser.booleanValue();\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else if (token == XContentParser.Token.VALUE_NUMBER) {\n                if (\"min_doc_count\".equals(currentFieldName) || \"minDocCount\".equals(currentFieldName)) {\n                    minDocCount = parser.longValue();\n                } else if (\"time_zone\".equals(currentFieldName) || \"timeZone\".equals(currentFieldName)) {\n                    preZone = DateTimeZone.forOffsetHours(parser.intValue());\n                } else if (\"pre_zone\".equals(currentFieldName) || \"preZone\".equals(currentFieldName)) {\n                    preZone = DateTimeZone.forOffsetHours(parser.intValue());\n                } else if (\"post_zone\".equals(currentFieldName) || \"postZone\".equals(currentFieldName)) {\n                    postZone = DateTimeZone.forOffsetHours(parser.intValue());\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else if (token == XContentParser.Token.START_OBJECT) {\n                if (\"order\".equals(currentFieldName)) {\n                    while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n                        if (token == XContentParser.Token.FIELD_NAME) {\n                            currentFieldName = parser.currentName();\n                        } else if (token == XContentParser.Token.VALUE_STRING) {\n                            String dir = parser.text();\n                            boolean asc = \"asc\".equals(dir);\n                            order = resolveOrder(currentFieldName, asc);\n                            //TODO should we throw an error if the value is not \"asc\" or \"desc\"???\n                        }\n                    }\n                } else if (EXTENDED_BOUNDS.match(currentFieldName)) {\n                    extendedBounds = new ExtendedBounds();\n                    while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n                        if (token == XContentParser.Token.FIELD_NAME) {\n                            currentFieldName = parser.currentName();\n                        } else if (token == XContentParser.Token.VALUE_STRING) {\n                            if (\"min\".equals(currentFieldName)) {\n                                extendedBounds.minAsStr = parser.text();\n                            } else if (\"max\".equals(currentFieldName)) {\n                                extendedBounds.maxAsStr = parser.text();\n                            } else {\n                                throw new SearchParseException(context, \"Unknown extended_bounds key for a \" + token + \" in aggregation [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                            }\n                        } else if (token == XContentParser.Token.VALUE_NUMBER) {\n                            if (\"min\".equals(currentFieldName)) {\n                                extendedBounds.min = parser.longValue();\n                            } else if (\"max\".equals(currentFieldName)) {\n                                extendedBounds.max = parser.longValue();\n                            } else {\n                                throw new SearchParseException(context, \"Unknown extended_bounds key for a \" + token + \" in aggregation [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                            }\n                        } else {\n                            throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                        }\n                    }\n\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else {\n                throw new SearchParseException(context, \"Unexpected token \" + token + \" in [\" + aggregationName + \"].\");\n            }\n        }\n\n        if (interval == null) {\n            throw new SearchParseException(context, \"Missing required field [interval] for histogram aggregation [\" + aggregationName + \"]\");\n        }\n\n        TimeZoneRounding.Builder tzRoundingBuilder;\n        DateTimeUnit dateTimeUnit = dateFieldUnits.get(interval);\n        if (dateTimeUnit != null) {\n            tzRoundingBuilder = TimeZoneRounding.builder(dateTimeUnit);\n        } else {\n            // the interval is a time value?\n            tzRoundingBuilder = TimeZoneRounding.builder(TimeValue.parseTimeValue(interval, null));\n        }\n\n        Rounding rounding = tzRoundingBuilder\n                .preZone(preZone).postZone(postZone)\n                .preZoneAdjustLargeInterval(preZoneAdjustLargeInterval)\n                .preOffset(preOffset).postOffset(postOffset)\n                .build();\n\n        return new HistogramAggregator.Factory(aggregationName, vsParser.config(), rounding, order, keyed, minDocCount, extendedBounds, InternalDateHistogram.FACTORY);\n\n    }","id":52138,"modified_method":"@Override\n    public AggregatorFactory parse(String aggregationName, XContentParser parser, SearchContext context) throws IOException {\n\n        ValuesSourceParser vsParser = ValuesSourceParser.numeric(aggregationName, InternalDateHistogram.TYPE, context)\n                .targetValueType(ValueType.DATE)\n                .formattable(true)\n                .build();\n\n        boolean keyed = false;\n        long minDocCount = 1;\n        ExtendedBounds extendedBounds = null;\n        InternalOrder order = (InternalOrder) Histogram.Order.KEY_ASC;\n        String interval = null;\n        boolean preZoneAdjustLargeInterval = false;\n        DateTimeZone preZone = DateTimeZone.UTC;\n        DateTimeZone postZone = DateTimeZone.UTC;\n        long preOffset = 0;\n        long postOffset = 0;\n\n        XContentParser.Token token;\n        String currentFieldName = null;\n        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n            if (token == XContentParser.Token.FIELD_NAME) {\n                currentFieldName = parser.currentName();\n            } else if (vsParser.token(currentFieldName, token, parser)) {\n                continue;\n            } else if (token == XContentParser.Token.VALUE_STRING) {\n                if (\"time_zone\".equals(currentFieldName) || \"timeZone\".equals(currentFieldName)) {\n                    preZone = DateMathParser.parseZone(parser.text());\n                } else if (\"pre_zone\".equals(currentFieldName) || \"preZone\".equals(currentFieldName)) {\n                    preZone = DateMathParser.parseZone(parser.text());\n                } else if (\"post_zone\".equals(currentFieldName) || \"postZone\".equals(currentFieldName)) {\n                    postZone = DateMathParser.parseZone(parser.text());\n                } else if (\"pre_offset\".equals(currentFieldName) || \"preOffset\".equals(currentFieldName)) {\n                    preOffset = parseOffset(parser.text());\n                } else if (\"post_offset\".equals(currentFieldName) || \"postOffset\".equals(currentFieldName)) {\n                    postOffset = parseOffset(parser.text());\n                } else if (\"interval\".equals(currentFieldName)) {\n                    interval = parser.text();\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else if (token == XContentParser.Token.VALUE_BOOLEAN) {\n                if (\"keyed\".equals(currentFieldName)) {\n                    keyed = parser.booleanValue();\n                } else if (\"pre_zone_adjust_large_interval\".equals(currentFieldName) || \"preZoneAdjustLargeInterval\".equals(currentFieldName)) {\n                    preZoneAdjustLargeInterval = parser.booleanValue();\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else if (token == XContentParser.Token.VALUE_NUMBER) {\n                if (\"min_doc_count\".equals(currentFieldName) || \"minDocCount\".equals(currentFieldName)) {\n                    minDocCount = parser.longValue();\n                } else if (\"time_zone\".equals(currentFieldName) || \"timeZone\".equals(currentFieldName)) {\n                    preZone = DateTimeZone.forOffsetHours(parser.intValue());\n                } else if (\"pre_zone\".equals(currentFieldName) || \"preZone\".equals(currentFieldName)) {\n                    preZone = DateTimeZone.forOffsetHours(parser.intValue());\n                } else if (\"post_zone\".equals(currentFieldName) || \"postZone\".equals(currentFieldName)) {\n                    postZone = DateTimeZone.forOffsetHours(parser.intValue());\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else if (token == XContentParser.Token.START_OBJECT) {\n                if (\"order\".equals(currentFieldName)) {\n                    while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n                        if (token == XContentParser.Token.FIELD_NAME) {\n                            currentFieldName = parser.currentName();\n                        } else if (token == XContentParser.Token.VALUE_STRING) {\n                            String dir = parser.text();\n                            boolean asc = \"asc\".equals(dir);\n                            order = resolveOrder(currentFieldName, asc);\n                            //TODO should we throw an error if the value is not \"asc\" or \"desc\"???\n                        }\n                    }\n                } else if (EXTENDED_BOUNDS.match(currentFieldName)) {\n                    extendedBounds = new ExtendedBounds();\n                    while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n                        if (token == XContentParser.Token.FIELD_NAME) {\n                            currentFieldName = parser.currentName();\n                        } else if (token == XContentParser.Token.VALUE_STRING) {\n                            if (\"min\".equals(currentFieldName)) {\n                                extendedBounds.minAsStr = parser.text();\n                            } else if (\"max\".equals(currentFieldName)) {\n                                extendedBounds.maxAsStr = parser.text();\n                            } else {\n                                throw new SearchParseException(context, \"Unknown extended_bounds key for a \" + token + \" in aggregation [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                            }\n                        } else if (token == XContentParser.Token.VALUE_NUMBER) {\n                            if (\"min\".equals(currentFieldName)) {\n                                extendedBounds.min = parser.longValue();\n                            } else if (\"max\".equals(currentFieldName)) {\n                                extendedBounds.max = parser.longValue();\n                            } else {\n                                throw new SearchParseException(context, \"Unknown extended_bounds key for a \" + token + \" in aggregation [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                            }\n                        } else {\n                            throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                        }\n                    }\n\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else {\n                throw new SearchParseException(context, \"Unexpected token \" + token + \" in [\" + aggregationName + \"].\");\n            }\n        }\n\n        if (interval == null) {\n            throw new SearchParseException(context, \"Missing required field [interval] for histogram aggregation [\" + aggregationName + \"]\");\n        }\n\n        TimeZoneRounding.Builder tzRoundingBuilder;\n        DateTimeUnit dateTimeUnit = dateFieldUnits.get(interval);\n        if (dateTimeUnit != null) {\n            tzRoundingBuilder = TimeZoneRounding.builder(dateTimeUnit);\n        } else {\n            // the interval is a time value?\n            tzRoundingBuilder = TimeZoneRounding.builder(TimeValue.parseTimeValue(interval, null));\n        }\n\n        Rounding rounding = tzRoundingBuilder\n                .preZone(preZone).postZone(postZone)\n                .preZoneAdjustLargeInterval(preZoneAdjustLargeInterval)\n                .preOffset(preOffset).postOffset(postOffset)\n                .build();\n\n        return new HistogramAggregator.Factory(aggregationName, vsParser.config(), rounding, order, keyed, minDocCount, extendedBounds, InternalDateHistogram.FACTORY);\n\n    }","commit_id":"ded30e95de3a1e8f955da013e07efc1e6b0e7094","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public AggregatorFactory parse(String aggregationName, XContentParser parser, SearchContext context) throws IOException {\n\n        ValuesSourceParser<ValuesSource.Numeric> vsParser = ValuesSourceParser.numeric(aggregationName, InternalDateRange.TYPE, context)\n                .targetValueType(ValueType.DATE)\n                .requiresSortedValues(true)\n                .formattable(true)\n                .build();\n\n        List<RangeAggregator.Range> ranges = null;\n        boolean keyed = false;\n\n        XContentParser.Token token;\n        String currentFieldName = null;\n        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n            if (token == XContentParser.Token.FIELD_NAME) {\n                currentFieldName = parser.currentName();\n            } else if (vsParser.token(currentFieldName, token, parser)) {\n                continue;\n            } else if (token == XContentParser.Token.START_ARRAY) {\n                if (\"ranges\".equals(currentFieldName)) {\n                    ranges = new ArrayList<>();\n                    while ((token = parser.nextToken()) != XContentParser.Token.END_ARRAY) {\n                        double from = Double.NEGATIVE_INFINITY;\n                        String fromAsStr = null;\n                        double to = Double.POSITIVE_INFINITY;\n                        String toAsStr = null;\n                        String key = null;\n                        String toOrFromOrKey = null;\n                        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n                            if (token == XContentParser.Token.FIELD_NAME) {\n                                toOrFromOrKey = parser.currentName();\n                            } else if (token == XContentParser.Token.VALUE_NUMBER) {\n                                if (\"from\".equals(toOrFromOrKey)) {\n                                    from = parser.doubleValue();\n                                } else if (\"to\".equals(toOrFromOrKey)) {\n                                    to = parser.doubleValue();\n                                } else {\n                                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                                }\n                            } else if (token == XContentParser.Token.VALUE_STRING) {\n                                if (\"from\".equals(toOrFromOrKey)) {\n                                    fromAsStr = parser.text();\n                                } else if (\"to\".equals(toOrFromOrKey)) {\n                                    toAsStr = parser.text();\n                                } else if (\"key\".equals(toOrFromOrKey)) {\n                                    key = parser.text();\n                                } else {\n                                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                                }\n                            }\n                        }\n                        ranges.add(new RangeAggregator.Range(key, from, fromAsStr, to, toAsStr));\n                    }\n                }\n            } else if (token == XContentParser.Token.VALUE_BOOLEAN) {\n                if (\"keyed\".equals(currentFieldName)) {\n                    keyed = parser.booleanValue();\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else {\n                throw new SearchParseException(context, \"Unexpected token \" + token + \" in [\" + aggregationName + \"].\");\n            }\n        }\n\n        if (ranges == null) {\n            throw new SearchParseException(context, \"Missing [ranges] in ranges aggregator [\" + aggregationName + \"]\");\n        }\n\n        return new RangeAggregator.Factory(aggregationName, vsParser.config(), InternalDateRange.FACTORY, ranges, keyed);\n    }","id":52139,"modified_method":"@Override\n    public AggregatorFactory parse(String aggregationName, XContentParser parser, SearchContext context) throws IOException {\n\n        ValuesSourceParser<ValuesSource.Numeric> vsParser = ValuesSourceParser.numeric(aggregationName, InternalDateRange.TYPE, context)\n                .targetValueType(ValueType.DATE)\n                .formattable(true)\n                .build();\n\n        List<RangeAggregator.Range> ranges = null;\n        boolean keyed = false;\n\n        XContentParser.Token token;\n        String currentFieldName = null;\n        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n            if (token == XContentParser.Token.FIELD_NAME) {\n                currentFieldName = parser.currentName();\n            } else if (vsParser.token(currentFieldName, token, parser)) {\n                continue;\n            } else if (token == XContentParser.Token.START_ARRAY) {\n                if (\"ranges\".equals(currentFieldName)) {\n                    ranges = new ArrayList<>();\n                    while ((token = parser.nextToken()) != XContentParser.Token.END_ARRAY) {\n                        double from = Double.NEGATIVE_INFINITY;\n                        String fromAsStr = null;\n                        double to = Double.POSITIVE_INFINITY;\n                        String toAsStr = null;\n                        String key = null;\n                        String toOrFromOrKey = null;\n                        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n                            if (token == XContentParser.Token.FIELD_NAME) {\n                                toOrFromOrKey = parser.currentName();\n                            } else if (token == XContentParser.Token.VALUE_NUMBER) {\n                                if (\"from\".equals(toOrFromOrKey)) {\n                                    from = parser.doubleValue();\n                                } else if (\"to\".equals(toOrFromOrKey)) {\n                                    to = parser.doubleValue();\n                                } else {\n                                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                                }\n                            } else if (token == XContentParser.Token.VALUE_STRING) {\n                                if (\"from\".equals(toOrFromOrKey)) {\n                                    fromAsStr = parser.text();\n                                } else if (\"to\".equals(toOrFromOrKey)) {\n                                    toAsStr = parser.text();\n                                } else if (\"key\".equals(toOrFromOrKey)) {\n                                    key = parser.text();\n                                } else {\n                                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                                }\n                            }\n                        }\n                        ranges.add(new RangeAggregator.Range(key, from, fromAsStr, to, toAsStr));\n                    }\n                }\n            } else if (token == XContentParser.Token.VALUE_BOOLEAN) {\n                if (\"keyed\".equals(currentFieldName)) {\n                    keyed = parser.booleanValue();\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else {\n                throw new SearchParseException(context, \"Unexpected token \" + token + \" in [\" + aggregationName + \"].\");\n            }\n        }\n\n        if (ranges == null) {\n            throw new SearchParseException(context, \"Missing [ranges] in ranges aggregator [\" + aggregationName + \"]\");\n        }\n\n        return new RangeAggregator.Factory(aggregationName, vsParser.config(), InternalDateRange.FACTORY, ranges, keyed);\n    }","commit_id":"ded30e95de3a1e8f955da013e07efc1e6b0e7094","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public AggregatorFactory parse(String aggregationName, XContentParser parser, SearchContext context) throws IOException {\n\n        ValuesSourceParser<ValuesSource.GeoPoint> vsParser = ValuesSourceParser.geoPoint(aggregationName, InternalGeoDistance.TYPE, context)\n                .requiresSortedValues(true)\n                .build();\n\n        GeoPointParser geoPointParser = new GeoPointParser(aggregationName, InternalGeoDistance.TYPE, context, ORIGIN_FIELD);\n\n        List<RangeAggregator.Range> ranges = null;\n        DistanceUnit unit = DistanceUnit.DEFAULT;\n        GeoDistance distanceType = GeoDistance.DEFAULT;\n        boolean keyed = false;\n\n        XContentParser.Token token;\n        String currentFieldName = null;\n        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n            if (token == XContentParser.Token.FIELD_NAME) {\n                currentFieldName = parser.currentName();\n            } else if (vsParser.token(currentFieldName, token, parser)) {\n                continue;\n            } else if (geoPointParser.token(currentFieldName, token, parser)) {\n                continue;\n            } else if (token == XContentParser.Token.VALUE_STRING) {\n                if (\"unit\".equals(currentFieldName)) {\n                    unit = DistanceUnit.fromString(parser.text());\n                } else if (\"distance_type\".equals(currentFieldName) || \"distanceType\".equals(currentFieldName)) {\n                    distanceType = GeoDistance.fromString(parser.text());\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else if (token == XContentParser.Token.VALUE_BOOLEAN) {\n                if (\"keyed\".equals(currentFieldName)) {\n                    keyed = parser.booleanValue();\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else if (token == XContentParser.Token.START_ARRAY) {\n                if (\"ranges\".equals(currentFieldName)) {\n                    ranges = new ArrayList<>();\n                    while ((token = parser.nextToken()) != XContentParser.Token.END_ARRAY) {\n                        String fromAsStr = null;\n                        String toAsStr = null;\n                        double from = 0.0;\n                        double to = Double.POSITIVE_INFINITY;\n                        String key = null;\n                        String toOrFromOrKey = null;\n                        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n                            if (token == XContentParser.Token.FIELD_NAME) {\n                                toOrFromOrKey = parser.currentName();\n                            } else if (token == XContentParser.Token.VALUE_NUMBER) {\n                                if (\"from\".equals(toOrFromOrKey)) {\n                                    from = parser.doubleValue();\n                                } else if (\"to\".equals(toOrFromOrKey)) {\n                                    to = parser.doubleValue();\n                                }\n                            } else if (token == XContentParser.Token.VALUE_STRING) {\n                                if (\"key\".equals(toOrFromOrKey)) {\n                                    key = parser.text();\n                                } else if (\"from\".equals(toOrFromOrKey)) {\n                                    fromAsStr = parser.text();\n                                } else if (\"to\".equals(toOrFromOrKey)) {\n                                    toAsStr = parser.text();\n                                }\n                            }\n                        }\n                        ranges.add(new RangeAggregator.Range(key(key, from, to), from, fromAsStr, to, toAsStr));\n                    }\n                } else  {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else {\n                throw new SearchParseException(context, \"Unexpected token \" + token + \" in [\" + aggregationName + \"].\");\n            }\n        }\n\n        if (ranges == null) {\n            throw new SearchParseException(context, \"Missing [ranges] in geo_distance aggregator [\" + aggregationName + \"]\");\n        }\n\n        GeoPoint origin = geoPointParser.geoPoint();\n        if (origin == null) {\n            throw new SearchParseException(context, \"Missing [origin] in geo_distance aggregator [\" + aggregationName + \"]\");\n        }\n\n        return new GeoDistanceFactory(aggregationName, vsParser.config(), InternalGeoDistance.FACTORY, origin, unit, distanceType, ranges, keyed);\n    }","id":52140,"modified_method":"@Override\n    public AggregatorFactory parse(String aggregationName, XContentParser parser, SearchContext context) throws IOException {\n\n        ValuesSourceParser<ValuesSource.GeoPoint> vsParser = ValuesSourceParser.geoPoint(aggregationName, InternalGeoDistance.TYPE, context).build();\n\n        GeoPointParser geoPointParser = new GeoPointParser(aggregationName, InternalGeoDistance.TYPE, context, ORIGIN_FIELD);\n\n        List<RangeAggregator.Range> ranges = null;\n        DistanceUnit unit = DistanceUnit.DEFAULT;\n        GeoDistance distanceType = GeoDistance.DEFAULT;\n        boolean keyed = false;\n\n        XContentParser.Token token;\n        String currentFieldName = null;\n        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n            if (token == XContentParser.Token.FIELD_NAME) {\n                currentFieldName = parser.currentName();\n            } else if (vsParser.token(currentFieldName, token, parser)) {\n                continue;\n            } else if (geoPointParser.token(currentFieldName, token, parser)) {\n                continue;\n            } else if (token == XContentParser.Token.VALUE_STRING) {\n                if (\"unit\".equals(currentFieldName)) {\n                    unit = DistanceUnit.fromString(parser.text());\n                } else if (\"distance_type\".equals(currentFieldName) || \"distanceType\".equals(currentFieldName)) {\n                    distanceType = GeoDistance.fromString(parser.text());\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else if (token == XContentParser.Token.VALUE_BOOLEAN) {\n                if (\"keyed\".equals(currentFieldName)) {\n                    keyed = parser.booleanValue();\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else if (token == XContentParser.Token.START_ARRAY) {\n                if (\"ranges\".equals(currentFieldName)) {\n                    ranges = new ArrayList<>();\n                    while ((token = parser.nextToken()) != XContentParser.Token.END_ARRAY) {\n                        String fromAsStr = null;\n                        String toAsStr = null;\n                        double from = 0.0;\n                        double to = Double.POSITIVE_INFINITY;\n                        String key = null;\n                        String toOrFromOrKey = null;\n                        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n                            if (token == XContentParser.Token.FIELD_NAME) {\n                                toOrFromOrKey = parser.currentName();\n                            } else if (token == XContentParser.Token.VALUE_NUMBER) {\n                                if (\"from\".equals(toOrFromOrKey)) {\n                                    from = parser.doubleValue();\n                                } else if (\"to\".equals(toOrFromOrKey)) {\n                                    to = parser.doubleValue();\n                                }\n                            } else if (token == XContentParser.Token.VALUE_STRING) {\n                                if (\"key\".equals(toOrFromOrKey)) {\n                                    key = parser.text();\n                                } else if (\"from\".equals(toOrFromOrKey)) {\n                                    fromAsStr = parser.text();\n                                } else if (\"to\".equals(toOrFromOrKey)) {\n                                    toAsStr = parser.text();\n                                }\n                            }\n                        }\n                        ranges.add(new RangeAggregator.Range(key(key, from, to), from, fromAsStr, to, toAsStr));\n                    }\n                } else  {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else {\n                throw new SearchParseException(context, \"Unexpected token \" + token + \" in [\" + aggregationName + \"].\");\n            }\n        }\n\n        if (ranges == null) {\n            throw new SearchParseException(context, \"Missing [ranges] in geo_distance aggregator [\" + aggregationName + \"]\");\n        }\n\n        GeoPoint origin = geoPointParser.geoPoint();\n        if (origin == null) {\n            throw new SearchParseException(context, \"Missing [origin] in geo_distance aggregator [\" + aggregationName + \"]\");\n        }\n\n        return new GeoDistanceFactory(aggregationName, vsParser.config(), InternalGeoDistance.FACTORY, origin, unit, distanceType, ranges, keyed);\n    }","commit_id":"ded30e95de3a1e8f955da013e07efc1e6b0e7094","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public AggregatorFactory parse(String aggregationName, XContentParser parser, SearchContext context) throws IOException {\n\n        ValuesSourceParser vsParser = ValuesSourceParser.numeric(aggregationName, InternalHistogram.TYPE, context)\n                .requiresSortedValues(true)\n                .targetValueType(ValueType.NUMERIC)\n                .formattable(true)\n                .build();\n\n        boolean keyed = false;\n        long minDocCount = 1;\n        InternalOrder order = (InternalOrder) InternalOrder.KEY_ASC;\n        long interval = -1;\n        ExtendedBounds extendedBounds = null;\n        long preOffset = 0;\n        long postOffset = 0;\n\n        XContentParser.Token token;\n        String currentFieldName = null;\n        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n            if (token == XContentParser.Token.FIELD_NAME) {\n                currentFieldName = parser.currentName();\n            } else if (vsParser.token(currentFieldName, token, parser)) {\n                continue;\n            } else if (token.isValue()) {\n                if (\"interval\".equals(currentFieldName)) {\n                    interval = parser.longValue();\n                } else if (\"min_doc_count\".equals(currentFieldName) || \"minDocCount\".equals(currentFieldName)) {\n                    minDocCount = parser.longValue();\n                } else if (\"keyed\".equals(currentFieldName)) {\n                    keyed = parser.booleanValue();\n                } else if (\"pre_offset\".equals(currentFieldName) || \"preOffset\".equals(currentFieldName)) {\n                    preOffset = parser.longValue();\n                } else if (\"post_offset\".equals(currentFieldName) || \"postOffset\".equals(currentFieldName)) {\n                    postOffset = parser.longValue();\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in aggregation [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else if (token == XContentParser.Token.START_OBJECT) {\n                if (\"order\".equals(currentFieldName)) {\n                    while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n                        if (token == XContentParser.Token.FIELD_NAME) {\n                            currentFieldName = parser.currentName();\n                        } else if (token == XContentParser.Token.VALUE_STRING) {\n                            String dir = parser.text();\n                            boolean asc = \"asc\".equals(dir);\n                            if (!asc && !\"desc\".equals(dir)) {\n                                throw new SearchParseException(context, \"Unknown order direction [\" + dir + \"] in aggregation [\" + aggregationName + \"]. Should be either [asc] or [desc]\");\n                            }\n                            order = resolveOrder(currentFieldName, asc);\n                        }\n                    }\n                } else if (EXTENDED_BOUNDS.match(currentFieldName)) {\n                    extendedBounds = new ExtendedBounds();\n                    while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n                        if (token == XContentParser.Token.FIELD_NAME) {\n                            currentFieldName = parser.currentName();\n                        } else if (token.isValue()) {\n                            if (\"min\".equals(currentFieldName)) {\n                                extendedBounds.min = parser.longValue(true);\n                            } else if (\"max\".equals(currentFieldName)) {\n                                extendedBounds.max = parser.longValue(true);\n                            } else {\n                                throw new SearchParseException(context, \"Unknown extended_bounds key for a \" + token + \" in aggregation [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                            }\n                        }\n                    }\n\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in aggregation [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else {\n                throw new SearchParseException(context, \"Unexpected token \" + token + \" in aggregation [\" + aggregationName + \"].\");\n            }\n        }\n\n        if (interval < 0) {\n            throw new SearchParseException(context, \"Missing required field [interval] for histogram aggregation [\" + aggregationName + \"]\");\n        }\n        \n        Rounding rounding = new Rounding.Interval(interval);\n        if (preOffset != 0 || postOffset != 0) {\n            rounding = new Rounding.PrePostRounding((Rounding.Interval) rounding, preOffset, postOffset);\n        }\n\n        if (extendedBounds != null) {\n            // with numeric histogram, we can process here and fail fast if the bounds are invalid\n            extendedBounds.processAndValidate(aggregationName, context, ValueParser.RAW);\n        }\n\n        return new HistogramAggregator.Factory(aggregationName, vsParser.config(), rounding, order, keyed, minDocCount, extendedBounds, InternalHistogram.FACTORY);\n\n    }","id":52141,"modified_method":"@Override\n    public AggregatorFactory parse(String aggregationName, XContentParser parser, SearchContext context) throws IOException {\n\n        ValuesSourceParser vsParser = ValuesSourceParser.numeric(aggregationName, InternalHistogram.TYPE, context)\n                .targetValueType(ValueType.NUMERIC)\n                .formattable(true)\n                .build();\n\n        boolean keyed = false;\n        long minDocCount = 1;\n        InternalOrder order = (InternalOrder) InternalOrder.KEY_ASC;\n        long interval = -1;\n        ExtendedBounds extendedBounds = null;\n        long preOffset = 0;\n        long postOffset = 0;\n\n        XContentParser.Token token;\n        String currentFieldName = null;\n        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n            if (token == XContentParser.Token.FIELD_NAME) {\n                currentFieldName = parser.currentName();\n            } else if (vsParser.token(currentFieldName, token, parser)) {\n                continue;\n            } else if (token.isValue()) {\n                if (\"interval\".equals(currentFieldName)) {\n                    interval = parser.longValue();\n                } else if (\"min_doc_count\".equals(currentFieldName) || \"minDocCount\".equals(currentFieldName)) {\n                    minDocCount = parser.longValue();\n                } else if (\"keyed\".equals(currentFieldName)) {\n                    keyed = parser.booleanValue();\n                } else if (\"pre_offset\".equals(currentFieldName) || \"preOffset\".equals(currentFieldName)) {\n                    preOffset = parser.longValue();\n                } else if (\"post_offset\".equals(currentFieldName) || \"postOffset\".equals(currentFieldName)) {\n                    postOffset = parser.longValue();\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in aggregation [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else if (token == XContentParser.Token.START_OBJECT) {\n                if (\"order\".equals(currentFieldName)) {\n                    while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n                        if (token == XContentParser.Token.FIELD_NAME) {\n                            currentFieldName = parser.currentName();\n                        } else if (token == XContentParser.Token.VALUE_STRING) {\n                            String dir = parser.text();\n                            boolean asc = \"asc\".equals(dir);\n                            if (!asc && !\"desc\".equals(dir)) {\n                                throw new SearchParseException(context, \"Unknown order direction [\" + dir + \"] in aggregation [\" + aggregationName + \"]. Should be either [asc] or [desc]\");\n                            }\n                            order = resolveOrder(currentFieldName, asc);\n                        }\n                    }\n                } else if (EXTENDED_BOUNDS.match(currentFieldName)) {\n                    extendedBounds = new ExtendedBounds();\n                    while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n                        if (token == XContentParser.Token.FIELD_NAME) {\n                            currentFieldName = parser.currentName();\n                        } else if (token.isValue()) {\n                            if (\"min\".equals(currentFieldName)) {\n                                extendedBounds.min = parser.longValue(true);\n                            } else if (\"max\".equals(currentFieldName)) {\n                                extendedBounds.max = parser.longValue(true);\n                            } else {\n                                throw new SearchParseException(context, \"Unknown extended_bounds key for a \" + token + \" in aggregation [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                            }\n                        }\n                    }\n\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in aggregation [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else {\n                throw new SearchParseException(context, \"Unexpected token \" + token + \" in aggregation [\" + aggregationName + \"].\");\n            }\n        }\n\n        if (interval < 0) {\n            throw new SearchParseException(context, \"Missing required field [interval] for histogram aggregation [\" + aggregationName + \"]\");\n        }\n        \n        Rounding rounding = new Rounding.Interval(interval);\n        if (preOffset != 0 || postOffset != 0) {\n            rounding = new Rounding.PrePostRounding((Rounding.Interval) rounding, preOffset, postOffset);\n        }\n\n        if (extendedBounds != null) {\n            // with numeric histogram, we can process here and fail fast if the bounds are invalid\n            extendedBounds.processAndValidate(aggregationName, context, ValueParser.RAW);\n        }\n\n        return new HistogramAggregator.Factory(aggregationName, vsParser.config(), rounding, order, keyed, minDocCount, extendedBounds, InternalHistogram.FACTORY);\n\n    }","commit_id":"ded30e95de3a1e8f955da013e07efc1e6b0e7094","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public AggregatorFactory parse(String aggregationName, XContentParser parser, SearchContext context) throws IOException {\n\n        ValuesSourceParser<ValuesSource.Numeric> vsParser = ValuesSourceParser.numeric(aggregationName, InternalIPv4Range.TYPE, context)\n                .targetValueType(ValueType.IP)\n                .requiresSortedValues(true)\n                .formattable(false)\n                .build();\n\n        List<RangeAggregator.Range> ranges = null;\n        boolean keyed = false;\n\n        XContentParser.Token token;\n        String currentFieldName = null;\n        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n            if (token == XContentParser.Token.FIELD_NAME) {\n                currentFieldName = parser.currentName();\n            } else if (vsParser.token(currentFieldName, token, parser)) {\n                continue;\n            } else if (token == XContentParser.Token.START_ARRAY) {\n                if (\"ranges\".equals(currentFieldName)) {\n                    ranges = new ArrayList<>();\n                    while ((token = parser.nextToken()) != XContentParser.Token.END_ARRAY) {\n                        double from = Double.NEGATIVE_INFINITY;\n                        String fromAsStr = null;\n                        double to = Double.POSITIVE_INFINITY;\n                        String toAsStr = null;\n                        String key = null;\n                        String mask = null;\n                        String toOrFromOrMaskOrKey = null;\n                        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n                            if (token == XContentParser.Token.FIELD_NAME) {\n                                toOrFromOrMaskOrKey = parser.currentName();\n                            } else if (token == XContentParser.Token.VALUE_NUMBER) {\n                                if (\"from\".equals(toOrFromOrMaskOrKey)) {\n                                    from = parser.doubleValue();\n                                } else if (\"to\".equals(toOrFromOrMaskOrKey)) {\n                                    to = parser.doubleValue();\n                                }\n                            } else if (token == XContentParser.Token.VALUE_STRING) {\n                                if (\"from\".equals(toOrFromOrMaskOrKey)) {\n                                    fromAsStr = parser.text();\n                                } else if (\"to\".equals(toOrFromOrMaskOrKey)) {\n                                    toAsStr = parser.text();\n                                } else if (\"key\".equals(toOrFromOrMaskOrKey)) {\n                                    key = parser.text();\n                                } else if (\"mask\".equals(toOrFromOrMaskOrKey)) {\n                                    mask = parser.text();\n                                }\n                            }\n                        }\n                        RangeAggregator.Range range = new RangeAggregator.Range(key, from, fromAsStr, to, toAsStr);\n                        if (mask != null) {\n                            parseMaskRange(mask, range, aggregationName, context);\n                        }\n                        ranges.add(range);\n                    }\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else if (token == XContentParser.Token.VALUE_BOOLEAN) {\n                if (\"keyed\".equals(currentFieldName)) {\n                    keyed = parser.booleanValue();\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else {\n                throw new SearchParseException(context, \"Unexpected token \" + token + \" in [\" + aggregationName + \"].\");\n            }\n        }\n\n        if (ranges == null) {\n            throw new SearchParseException(context, \"Missing [ranges] in ranges aggregator [\" + aggregationName + \"]\");\n        }\n\n        return new RangeAggregator.Factory(aggregationName, vsParser.config(), InternalIPv4Range.FACTORY, ranges, keyed);\n    }","id":52142,"modified_method":"@Override\n    public AggregatorFactory parse(String aggregationName, XContentParser parser, SearchContext context) throws IOException {\n\n        ValuesSourceParser<ValuesSource.Numeric> vsParser = ValuesSourceParser.numeric(aggregationName, InternalIPv4Range.TYPE, context)\n                .targetValueType(ValueType.IP)\n                .formattable(false)\n                .build();\n\n        List<RangeAggregator.Range> ranges = null;\n        boolean keyed = false;\n\n        XContentParser.Token token;\n        String currentFieldName = null;\n        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n            if (token == XContentParser.Token.FIELD_NAME) {\n                currentFieldName = parser.currentName();\n            } else if (vsParser.token(currentFieldName, token, parser)) {\n                continue;\n            } else if (token == XContentParser.Token.START_ARRAY) {\n                if (\"ranges\".equals(currentFieldName)) {\n                    ranges = new ArrayList<>();\n                    while ((token = parser.nextToken()) != XContentParser.Token.END_ARRAY) {\n                        double from = Double.NEGATIVE_INFINITY;\n                        String fromAsStr = null;\n                        double to = Double.POSITIVE_INFINITY;\n                        String toAsStr = null;\n                        String key = null;\n                        String mask = null;\n                        String toOrFromOrMaskOrKey = null;\n                        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n                            if (token == XContentParser.Token.FIELD_NAME) {\n                                toOrFromOrMaskOrKey = parser.currentName();\n                            } else if (token == XContentParser.Token.VALUE_NUMBER) {\n                                if (\"from\".equals(toOrFromOrMaskOrKey)) {\n                                    from = parser.doubleValue();\n                                } else if (\"to\".equals(toOrFromOrMaskOrKey)) {\n                                    to = parser.doubleValue();\n                                }\n                            } else if (token == XContentParser.Token.VALUE_STRING) {\n                                if (\"from\".equals(toOrFromOrMaskOrKey)) {\n                                    fromAsStr = parser.text();\n                                } else if (\"to\".equals(toOrFromOrMaskOrKey)) {\n                                    toAsStr = parser.text();\n                                } else if (\"key\".equals(toOrFromOrMaskOrKey)) {\n                                    key = parser.text();\n                                } else if (\"mask\".equals(toOrFromOrMaskOrKey)) {\n                                    mask = parser.text();\n                                }\n                            }\n                        }\n                        RangeAggregator.Range range = new RangeAggregator.Range(key, from, fromAsStr, to, toAsStr);\n                        if (mask != null) {\n                            parseMaskRange(mask, range, aggregationName, context);\n                        }\n                        ranges.add(range);\n                    }\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else if (token == XContentParser.Token.VALUE_BOOLEAN) {\n                if (\"keyed\".equals(currentFieldName)) {\n                    keyed = parser.booleanValue();\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else {\n                throw new SearchParseException(context, \"Unexpected token \" + token + \" in [\" + aggregationName + \"].\");\n            }\n        }\n\n        if (ranges == null) {\n            throw new SearchParseException(context, \"Missing [ranges] in ranges aggregator [\" + aggregationName + \"]\");\n        }\n\n        return new RangeAggregator.Factory(aggregationName, vsParser.config(), InternalIPv4Range.FACTORY, ranges, keyed);\n    }","commit_id":"ded30e95de3a1e8f955da013e07efc1e6b0e7094","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public AggregatorFactory parse(String aggregationName, XContentParser parser, SearchContext context) throws IOException {\n\n        ValuesSourceParser<ValuesSource.Numeric> vsParser = ValuesSourceParser.numeric(aggregationName, aggType, context)\n                .requiresSortedValues(requiresSortedValues())\n                .build();\n\n        XContentParser.Token token;\n        String currentFieldName = null;\n        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n            if (token == XContentParser.Token.FIELD_NAME) {\n                currentFieldName = parser.currentName();\n            } else if (!vsParser.token(currentFieldName, token, parser)) {\n                throw new SearchParseException(context, \"Unexpected token \" + token + \" in [\" + aggregationName + \"].\");\n            }\n        }\n\n        return createFactory(aggregationName, vsParser.config());\n    }","id":52143,"modified_method":"@Override\n    public AggregatorFactory parse(String aggregationName, XContentParser parser, SearchContext context) throws IOException {\n\n        ValuesSourceParser<ValuesSource.Numeric> vsParser = ValuesSourceParser.numeric(aggregationName, aggType, context)\n                .build();\n\n        XContentParser.Token token;\n        String currentFieldName = null;\n        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n            if (token == XContentParser.Token.FIELD_NAME) {\n                currentFieldName = parser.currentName();\n            } else if (!vsParser.token(currentFieldName, token, parser)) {\n                throw new SearchParseException(context, \"Unexpected token \" + token + \" in [\" + aggregationName + \"].\");\n            }\n        }\n\n        return createFactory(aggregationName, vsParser.config());\n    }","commit_id":"ded30e95de3a1e8f955da013e07efc1e6b0e7094","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public AggregatorFactory parse(String aggregationName, XContentParser parser, SearchContext context) throws IOException {\n\n        List<RangeAggregator.Range> ranges = null;\n        boolean keyed = false;\n\n        ValuesSourceParser<ValuesSource.Numeric> vsParser = ValuesSourceParser.numeric(aggregationName, InternalRange.TYPE, context)\n                .requiresSortedValues(true)\n                .formattable(true)\n                .build();\n\n        XContentParser.Token token;\n        String currentFieldName = null;\n        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n            if (token == XContentParser.Token.FIELD_NAME) {\n                currentFieldName = parser.currentName();\n            } else if (vsParser.token(currentFieldName, token, parser)) {\n                continue;\n            } else if (token == XContentParser.Token.START_ARRAY) {\n                if (\"ranges\".equals(currentFieldName)) {\n                    ranges = new ArrayList<>();\n                    while ((token = parser.nextToken()) != XContentParser.Token.END_ARRAY) {\n                        double from = Double.NEGATIVE_INFINITY;\n                        String fromAsStr = null;\n                        double to = Double.POSITIVE_INFINITY;\n                        String toAsStr = null;\n                        String key = null;\n                        String toOrFromOrKey = null;\n                        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n                            if (token == XContentParser.Token.FIELD_NAME) {\n                                toOrFromOrKey = parser.currentName();\n                            } else if (token == XContentParser.Token.VALUE_NUMBER) {\n                                if (\"from\".equals(toOrFromOrKey)) {\n                                    from = parser.doubleValue();\n                                } else if (\"to\".equals(toOrFromOrKey)) {\n                                    to = parser.doubleValue();\n                                }\n                            } else if (token == XContentParser.Token.VALUE_STRING) {\n                                if (\"from\".equals(toOrFromOrKey)) {\n                                    fromAsStr = parser.text();\n                                } else if (\"to\".equals(toOrFromOrKey)) {\n                                    toAsStr = parser.text();\n                                } else if (\"key\".equals(toOrFromOrKey)) {\n                                    key = parser.text();\n                                }\n                            }\n                        }\n                        ranges.add(new RangeAggregator.Range(key, from, fromAsStr, to, toAsStr));\n                    }\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else if (token == XContentParser.Token.VALUE_BOOLEAN) {\n                if (\"keyed\".equals(currentFieldName)) {\n                    keyed = parser.booleanValue();\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else {\n                throw new SearchParseException(context, \"Unexpected token \" + token + \" in [\" + aggregationName + \"].\");\n            }\n        }\n\n        if (ranges == null) {\n            throw new SearchParseException(context, \"Missing [ranges] in ranges aggregator [\" + aggregationName + \"]\");\n        }\n\n        return new RangeAggregator.Factory(aggregationName, vsParser.config(), InternalRange.FACTORY, ranges, keyed);\n    }","id":52144,"modified_method":"@Override\n    public AggregatorFactory parse(String aggregationName, XContentParser parser, SearchContext context) throws IOException {\n\n        List<RangeAggregator.Range> ranges = null;\n        boolean keyed = false;\n\n        ValuesSourceParser<ValuesSource.Numeric> vsParser = ValuesSourceParser.numeric(aggregationName, InternalRange.TYPE, context)\n                .formattable(true)\n                .build();\n\n        XContentParser.Token token;\n        String currentFieldName = null;\n        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n            if (token == XContentParser.Token.FIELD_NAME) {\n                currentFieldName = parser.currentName();\n            } else if (vsParser.token(currentFieldName, token, parser)) {\n                continue;\n            } else if (token == XContentParser.Token.START_ARRAY) {\n                if (\"ranges\".equals(currentFieldName)) {\n                    ranges = new ArrayList<>();\n                    while ((token = parser.nextToken()) != XContentParser.Token.END_ARRAY) {\n                        double from = Double.NEGATIVE_INFINITY;\n                        String fromAsStr = null;\n                        double to = Double.POSITIVE_INFINITY;\n                        String toAsStr = null;\n                        String key = null;\n                        String toOrFromOrKey = null;\n                        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n                            if (token == XContentParser.Token.FIELD_NAME) {\n                                toOrFromOrKey = parser.currentName();\n                            } else if (token == XContentParser.Token.VALUE_NUMBER) {\n                                if (\"from\".equals(toOrFromOrKey)) {\n                                    from = parser.doubleValue();\n                                } else if (\"to\".equals(toOrFromOrKey)) {\n                                    to = parser.doubleValue();\n                                }\n                            } else if (token == XContentParser.Token.VALUE_STRING) {\n                                if (\"from\".equals(toOrFromOrKey)) {\n                                    fromAsStr = parser.text();\n                                } else if (\"to\".equals(toOrFromOrKey)) {\n                                    toAsStr = parser.text();\n                                } else if (\"key\".equals(toOrFromOrKey)) {\n                                    key = parser.text();\n                                }\n                            }\n                        }\n                        ranges.add(new RangeAggregator.Range(key, from, fromAsStr, to, toAsStr));\n                    }\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else if (token == XContentParser.Token.VALUE_BOOLEAN) {\n                if (\"keyed\".equals(currentFieldName)) {\n                    keyed = parser.booleanValue();\n                } else {\n                    throw new SearchParseException(context, \"Unknown key for a \" + token + \" in [\" + aggregationName + \"]: [\" + currentFieldName + \"].\");\n                }\n            } else {\n                throw new SearchParseException(context, \"Unexpected token \" + token + \" in [\" + aggregationName + \"].\");\n            }\n        }\n\n        if (ranges == null) {\n            throw new SearchParseException(context, \"Missing [ranges] in ranges aggregator [\" + aggregationName + \"]\");\n        }\n\n        return new RangeAggregator.Factory(aggregationName, vsParser.config(), InternalRange.FACTORY, ranges, keyed);\n    }","commit_id":"ded30e95de3a1e8f955da013e07efc1e6b0e7094","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public AggregatorFactory parse(String aggregationName, XContentParser parser, SearchContext context) throws IOException {\n        SignificantTermsParametersParser aggParser = new SignificantTermsParametersParser(significanceHeuristicParserMapper);\n        ValuesSourceParser vsParser = ValuesSourceParser.any(aggregationName, SignificantStringTerms.TYPE, context)\n                .scriptable(false)\n                .formattable(true)\n                .requiresSortedValues(true)\n                .requiresUniqueValues(true)\n                .build();\n        IncludeExclude.Parser incExcParser = new IncludeExclude.Parser(aggregationName, SignificantStringTerms.TYPE, context);\n        aggParser.parse(aggregationName, parser, context, vsParser, incExcParser);\n\n        TermsAggregator.BucketCountThresholds bucketCountThresholds = aggParser.getBucketCountThresholds();\n        if (bucketCountThresholds.getShardSize() == aggParser.getDefaultBucketCountThresholds().getShardSize()) {\n            //The user has not made a shardSize selection .\n            //Use default heuristic to avoid any wrong-ranking caused by distributed counting\n            //but request double the usual amount.\n            //We typically need more than the number of \"top\" terms requested by other aggregations\n            //as the significance algorithm is in less of a position to down-select at shard-level -\n            //some of the things we want to find have only one occurrence on each shard and as\n            // such are impossible to differentiate from non-significant terms at that early stage.\n            bucketCountThresholds.setShardSize(2 * BucketUtils.suggestShardSideQueueSize(bucketCountThresholds.getRequiredSize(), context.numberOfShards()));\n        }\n\n        bucketCountThresholds.ensureValidity();\n        SignificanceHeuristic significanceHeuristic = aggParser.getSignificanceHeuristic();\n        if (significanceHeuristic == null) {\n            significanceHeuristic = JLHScore.INSTANCE;\n        }\n        return new SignificantTermsAggregatorFactory(aggregationName, vsParser.config(), bucketCountThresholds, aggParser.getIncludeExclude(), aggParser.getExecutionHint(), aggParser.getFilter(), significanceHeuristic);\n    }","id":52145,"modified_method":"@Override\n    public AggregatorFactory parse(String aggregationName, XContentParser parser, SearchContext context) throws IOException {\n        SignificantTermsParametersParser aggParser = new SignificantTermsParametersParser(significanceHeuristicParserMapper);\n        ValuesSourceParser vsParser = ValuesSourceParser.any(aggregationName, SignificantStringTerms.TYPE, context)\n                .scriptable(false)\n                .formattable(true)\n                .build();\n        IncludeExclude.Parser incExcParser = new IncludeExclude.Parser(aggregationName, SignificantStringTerms.TYPE, context);\n        aggParser.parse(aggregationName, parser, context, vsParser, incExcParser);\n\n        TermsAggregator.BucketCountThresholds bucketCountThresholds = aggParser.getBucketCountThresholds();\n        if (bucketCountThresholds.getShardSize() == aggParser.getDefaultBucketCountThresholds().getShardSize()) {\n            //The user has not made a shardSize selection .\n            //Use default heuristic to avoid any wrong-ranking caused by distributed counting\n            //but request double the usual amount.\n            //We typically need more than the number of \"top\" terms requested by other aggregations\n            //as the significance algorithm is in less of a position to down-select at shard-level -\n            //some of the things we want to find have only one occurrence on each shard and as\n            // such are impossible to differentiate from non-significant terms at that early stage.\n            bucketCountThresholds.setShardSize(2 * BucketUtils.suggestShardSideQueueSize(bucketCountThresholds.getRequiredSize(), context.numberOfShards()));\n        }\n\n        bucketCountThresholds.ensureValidity();\n        SignificanceHeuristic significanceHeuristic = aggParser.getSignificanceHeuristic();\n        if (significanceHeuristic == null) {\n            significanceHeuristic = JLHScore.INSTANCE;\n        }\n        return new SignificantTermsAggregatorFactory(aggregationName, vsParser.config(), bucketCountThresholds, aggParser.getIncludeExclude(), aggParser.getExecutionHint(), aggParser.getFilter(), significanceHeuristic);\n    }","commit_id":"ded30e95de3a1e8f955da013e07efc1e6b0e7094","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public AggregatorFactory parse(String aggregationName, XContentParser parser, SearchContext context) throws IOException {\n        TermsParametersParser aggParser = new TermsParametersParser();\n        ValuesSourceParser vsParser = ValuesSourceParser.any(aggregationName, StringTerms.TYPE, context).scriptable(true).formattable(true)\n                .requiresSortedValues(true).requiresUniqueValues(true).build();\n        IncludeExclude.Parser incExcParser = new IncludeExclude.Parser(aggregationName, StringTerms.TYPE, context);\n        aggParser.parse(aggregationName, parser, context, vsParser, incExcParser);\n\n        InternalOrder order = resolveOrder(aggParser.getOrderKey(), aggParser.isOrderAsc());\n        TermsAggregator.BucketCountThresholds bucketCountThresholds = aggParser.getBucketCountThresholds();\n        if (!(order == InternalOrder.TERM_ASC || order == InternalOrder.TERM_DESC)\n                && bucketCountThresholds.getShardSize() == aggParser.getDefaultBucketCountThresholds().getShardSize()) {\n            // The user has not made a shardSize selection. Use default heuristic to avoid any wrong-ranking caused by distributed counting\n            bucketCountThresholds.setShardSize(BucketUtils.suggestShardSideQueueSize(bucketCountThresholds.getRequiredSize(),\n                    context.numberOfShards()));\n        }\n        bucketCountThresholds.ensureValidity();\n        return new TermsAggregatorFactory(aggregationName, vsParser.config(), order, bucketCountThresholds, aggParser.getIncludeExclude(), aggParser.getExecutionHint(), aggParser.getCollectionMode(), aggParser.showTermDocCountError());\n    }","id":52146,"modified_method":"@Override\n    public AggregatorFactory parse(String aggregationName, XContentParser parser, SearchContext context) throws IOException {\n        TermsParametersParser aggParser = new TermsParametersParser();\n        ValuesSourceParser vsParser = ValuesSourceParser.any(aggregationName, StringTerms.TYPE, context).scriptable(true).formattable(true).build();\n        IncludeExclude.Parser incExcParser = new IncludeExclude.Parser(aggregationName, StringTerms.TYPE, context);\n        aggParser.parse(aggregationName, parser, context, vsParser, incExcParser);\n\n        InternalOrder order = resolveOrder(aggParser.getOrderKey(), aggParser.isOrderAsc());\n        TermsAggregator.BucketCountThresholds bucketCountThresholds = aggParser.getBucketCountThresholds();\n        if (!(order == InternalOrder.TERM_ASC || order == InternalOrder.TERM_DESC)\n                && bucketCountThresholds.getShardSize() == aggParser.getDefaultBucketCountThresholds().getShardSize()) {\n            // The user has not made a shardSize selection. Use default heuristic to avoid any wrong-ranking caused by distributed counting\n            bucketCountThresholds.setShardSize(BucketUtils.suggestShardSideQueueSize(bucketCountThresholds.getRequiredSize(),\n                    context.numberOfShards()));\n        }\n        bucketCountThresholds.ensureValidity();\n        return new TermsAggregatorFactory(aggregationName, vsParser.config(), order, bucketCountThresholds, aggParser.getIncludeExclude(), aggParser.getExecutionHint(), aggParser.getCollectionMode(), aggParser.showTermDocCountError());\n    }","commit_id":"ded30e95de3a1e8f955da013e07efc1e6b0e7094","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public AggregatorFactory parse(String aggregationName, XContentParser parser, SearchContext context) throws IOException {\n\n        ValuesSourceParser vsParser = ValuesSourceParser.any(aggregationName, InternalValueCount.TYPE, context)\n                .requiresUniqueValues(true)\n                .build();\n\n        XContentParser.Token token;\n        String currentFieldName = null;\n        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n            if (token == XContentParser.Token.FIELD_NAME) {\n                currentFieldName = parser.currentName();\n            } else if (!vsParser.token(currentFieldName, token, parser)) {\n                throw new SearchParseException(context, \"Unexpected token \" + token + \" in [\" + aggregationName + \"].\");\n            }\n        }\n\n        return new ValueCountAggregator.Factory(aggregationName, vsParser.config());\n    }","id":52147,"modified_method":"@Override\n    public AggregatorFactory parse(String aggregationName, XContentParser parser, SearchContext context) throws IOException {\n\n        ValuesSourceParser vsParser = ValuesSourceParser.any(aggregationName, InternalValueCount.TYPE, context)\n                .build();\n\n        XContentParser.Token token;\n        String currentFieldName = null;\n        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n            if (token == XContentParser.Token.FIELD_NAME) {\n                currentFieldName = parser.currentName();\n            } else if (!vsParser.token(currentFieldName, token, parser)) {\n                throw new SearchParseException(context, \"Unexpected token \" + token + \" in [\" + aggregationName + \"].\");\n            }\n        }\n\n        return new ValueCountAggregator.Factory(aggregationName, vsParser.config());\n    }","commit_id":"ded30e95de3a1e8f955da013e07efc1e6b0e7094","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public boolean token(String currentFieldName, XContentParser.Token token, XContentParser parser) throws IOException {\n        if (token == XContentParser.Token.VALUE_STRING) {\n            if (\"field\".equals(currentFieldName)) {\n                input.field = parser.text();\n            } else if (formattable && \"format\".equals(currentFieldName)) {\n                input.format = parser.text();\n            } else if (scriptable) {\n                if (\"script\".equals(currentFieldName)) {\n                    input.script = parser.text();\n                    input.scriptType = ScriptService.ScriptType.INLINE;\n                } else if (\"script_id\".equals(currentFieldName)) {\n                    input.script = parser.text();\n                    input.scriptType = ScriptService.ScriptType.INDEXED;\n                } else if (\"script_file\".equals(currentFieldName)) {\n                    input.script = parser.text();\n                    input.scriptType = ScriptService.ScriptType.FILE;\n                } else if (\"lang\".equals(currentFieldName)) {\n                    input.lang = parser.text();\n                } else if (\"value_type\".equals(currentFieldName) || \"valueType\".equals(currentFieldName)) {\n                    input.valueType = ValueType.resolveForScript(parser.text());\n                    if (targetValueType != null && input.valueType.isNotA(targetValueType)) {\n                        throw new SearchParseException(context, aggType.name() + \" aggregation [\" + aggName +\n                                \"] was configured with an incompatible value type [\" + input.valueType + \"]. [\" + aggType +\n                                \"] aggregation can only work on value of type [\" + targetValueType + \"]\");\n                    }\n                } else {\n                    return false;\n                }\n                return true;\n            } else {\n                return false;\n            }\n            return true;\n        }\n        if (scriptable && token == XContentParser.Token.VALUE_BOOLEAN) {\n            if (\"script_values_unique\".equals(currentFieldName) || \"scriptValuesUnique\".equals(currentFieldName)) {\n                input.assumeUnique = parser.booleanValue();\n            } else if (\"script_values_sorted\".equals(currentFieldName) || \"scriptValuesSorted\".equals(currentFieldName)) {\n                input.assumeSorted = parser.booleanValue();\n            } else {\n                return false;\n            }\n            return true;\n        }\n        if (scriptable && token == XContentParser.Token.START_OBJECT) {\n            if (\"params\".equals(currentFieldName)) {\n                input.params = parser.map();\n                return true;\n            }\n            return false;\n        }\n\n        return false;\n    }","id":52148,"modified_method":"public boolean token(String currentFieldName, XContentParser.Token token, XContentParser parser) throws IOException {\n        if (token == XContentParser.Token.VALUE_STRING) {\n            if (\"field\".equals(currentFieldName)) {\n                input.field = parser.text();\n            } else if (formattable && \"format\".equals(currentFieldName)) {\n                input.format = parser.text();\n            } else if (scriptable) {\n                if (\"script\".equals(currentFieldName)) {\n                    input.script = parser.text();\n                    input.scriptType = ScriptService.ScriptType.INLINE;\n                } else if (\"script_id\".equals(currentFieldName)) {\n                    input.script = parser.text();\n                    input.scriptType = ScriptService.ScriptType.INDEXED;\n                } else if (\"script_file\".equals(currentFieldName)) {\n                    input.script = parser.text();\n                    input.scriptType = ScriptService.ScriptType.FILE;\n                } else if (\"lang\".equals(currentFieldName)) {\n                    input.lang = parser.text();\n                } else if (\"value_type\".equals(currentFieldName) || \"valueType\".equals(currentFieldName)) {\n                    input.valueType = ValueType.resolveForScript(parser.text());\n                    if (targetValueType != null && input.valueType.isNotA(targetValueType)) {\n                        throw new SearchParseException(context, aggType.name() + \" aggregation [\" + aggName +\n                                \"] was configured with an incompatible value type [\" + input.valueType + \"]. [\" + aggType +\n                                \"] aggregation can only work on value of type [\" + targetValueType + \"]\");\n                    }\n                } else {\n                    return false;\n                }\n                return true;\n            } else {\n                return false;\n            }\n            return true;\n        }\n        if (scriptable && token == XContentParser.Token.START_OBJECT) {\n            if (\"params\".equals(currentFieldName)) {\n                input.params = parser.map();\n                return true;\n            }\n            return false;\n        }\n\n        return false;\n    }","commit_id":"ded30e95de3a1e8f955da013e07efc1e6b0e7094","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private boolean isVisibleInChild(final SNode node, final SNode childNode, final EditorContext editorContext) {\n    return SNodeOperations.hasRole(childNode, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, \"visibility\"));\n  }","id":52149,"modified_method":"private boolean isVisibleInChild(final SNode node, final SNode childNode, final EditorContext editorContext) {\n    return SNodeOperations.hasRole(childNode, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, \"visibility\")) && eq_gp1ln0_a0a0a5(SNodeOperations.getParent(childNode), node);\n  }","commit_id":"2d1024e06c4f5e568b41664795c452fb8240cc9e","url":"https://github.com/JetBrains/MPS"},{"original_method":"public AttributeList(SNode attributed, IAttributeDescriptor descriptor) {\n      super(attributed, null, AttributeOperations.getAttribute(SNodeOperations.cast(attributed, \"jetbrains.mps.lang.core.structure.BaseConcept\"), descriptor));\n      myAttributeDescriptor = descriptor;\n    }","id":52150,"modified_method":"public AttributeList(SNode attributed, IAttributeDescriptor descriptor) {\n      super(attributed, \"_$attribute\", AttributeOperations.getAttribute(SNodeOperations.cast(attributed, \"jetbrains.mps.lang.core.structure.BaseConcept\"), descriptor));\n      myAttributeDescriptor = descriptor;\n    }","commit_id":"fc778458163b8d2f5319eb1bbb715e850d9a6af9","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static SNode getAttribute(SNode node, IAttributeDescriptor descriptor) {\n    Iterable<SNode> list = getAttributes(node, descriptor);\n    // todo: error if more than 1 attribute found \n    return (Sequence.fromIterable(list).isEmpty() ?\n      null :\n      Sequence.fromIterable(list).first()\n    );\n  }","id":52151,"modified_method":"public static SNode getAttribute(SNode node, IAttributeDescriptor descriptor) {\n    Iterable<SNode> list = getAttributes(node, descriptor);\n    if (Sequence.fromIterable(list).isEmpty()) {\n      return null;\n    }\n    // todo: error if more than 1 attribute found \n    return Sequence.fromIterable(list).first();\n  }","commit_id":"fc778458163b8d2f5319eb1bbb715e850d9a6af9","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static boolean isAttribute(SNode node) {\n    return SNodeOperations.hasRole(node, \"jetbrains.mps.lang.core.structure.BaseConcept\", \"_$attribute\");\n  }","id":52152,"modified_method":"public static boolean isAttribute(SNode node) {\n    return SNodeOperations.hasRole(node, \"jetbrains.mps.lang.core.structure.BaseConcept\", \"_$attribute\") || AttributesRolesUtil.isAttributeRole(SNodeOperations.getContainingLinkRole(node));\n  }","commit_id":"fc778458163b8d2f5319eb1bbb715e850d9a6af9","url":"https://github.com/JetBrains/MPS"},{"original_method":"public boolean isApplicable(AnActionEvent event, final Map<String, Object> _params) {\n    boolean result = SNodeOperations.isInstanceOf(((SNode) MapSequence.fromMap(_params).get(\"node\")), \"jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration\");\n    if (!(result)) {\n      if (SNodeOperations.isInstanceOf(((SNode) MapSequence.fromMap(_params).get(\"node\")), \"jetbrains.mps.baseLanguage.structure.VariableReference\") && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.cast(((SNode) MapSequence.fromMap(_params).get(\"node\")), \"jetbrains.mps.baseLanguage.structure.VariableReference\"), \"variableDeclaration\", false), \"jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration\")) {\n\n        if (SNodeOperations.hasRole(((SNode) MapSequence.fromMap(_params).get(\"node\")), \"jetbrains.mps.baseLanguage.structure.BaseAssignmentExpression\", \"lValue\")) {\n          return false;\n        }\n        if (SNodeOperations.hasRole(((SNode) MapSequence.fromMap(_params).get(\"node\")), \"jetbrains.mps.baseLanguage.structure.AbstractUnaryNumberOperation\", \"expression\")) {\n          return false;\n        }\n\n        result = true;\n      }\n    }\n    return result && !(((EditorComponent) MapSequence.fromMap(_params).get(\"editorComponent\")).isReadOnly());\n  }","id":52153,"modified_method":"public boolean isApplicable(AnActionEvent event, final Map<String, Object> _params) {\n    boolean result = SNodeOperations.isInstanceOf(((SNode) MapSequence.fromMap(_params).get(\"node\")), \"jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration\");\n    if (!(result)) {\n      if (SNodeOperations.isInstanceOf(((SNode) MapSequence.fromMap(_params).get(\"node\")), \"jetbrains.mps.baseLanguage.structure.VariableReference\") && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.cast(((SNode) MapSequence.fromMap(_params).get(\"node\")), \"jetbrains.mps.baseLanguage.structure.VariableReference\"), \"variableDeclaration\", false), \"jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration\")) {\n\n        if (SNodeOperations.hasRole(((SNode) MapSequence.fromMap(_params).get(\"node\")), \"jetbrains.mps.baseLanguage.structure.BaseAssignmentExpression\", \"lValue\")) {\n          return false;\n        }\n        if (SNodeOperations.hasRole(((SNode) MapSequence.fromMap(_params).get(\"node\")), \"jetbrains.mps.baseLanguage.structure.AbstractUnaryNumberOperation\", \"expression\") && !(SNodeOperations.isInstanceOf(SNodeOperations.getParent(((SNode) MapSequence.fromMap(_params).get(\"node\"))), \"jetbrains.mps.baseLanguage.structure.UnaryMinus\"))) {\n          return false;\n        }\n\n        result = true;\n      }\n    }\n    return result && !(((EditorComponent) MapSequence.fromMap(_params).get(\"editorComponent\")).isReadOnly());\n  }","commit_id":"e5ea3f004ac288ae2297ae423f3aaf7fe8146bc5","url":"https://github.com/JetBrains/MPS"},{"original_method":"public List<SNode> getNodesToRefactor() {\n    List<SNode> result = new ArrayList<SNode>();\n    for (ReadInstruction read : SetSequence.fromSet(this.myReadInstructions)) {\n      SNode node = (SNode) read.getSource();\n      if (!(SNodeOperations.hasRole(node, \"jetbrains.mps.baseLanguage.structure.AbstractUnaryNumberOperation\", \"expression\")) && !(SNodeOperations.isInstanceOf(node, \"jetbrains.mps.baseLanguage.structure.OperationAssignmentExpression\"))) {\n        ListSequence.fromList(result).addElement((node));\n      }\n    }\n    return result;\n  }","id":52154,"modified_method":"public List<SNode> getNodesToRefactor() {\n    List<SNode> result = new ArrayList<SNode>();\n    for (ReadInstruction read : SetSequence.fromSet(this.myReadInstructions)) {\n      SNode node = (SNode) read.getSource();\n      if (!(SNodeOperations.hasRole(node, \"jetbrains.mps.baseLanguage.structure.AbstractUnaryNumberOperation\", \"expression\") && !(SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), \"jetbrains.mps.baseLanguage.structure.UnaryMinus\"))) && !(SNodeOperations.isInstanceOf(node, \"jetbrains.mps.baseLanguage.structure.OperationAssignmentExpression\"))) {\n        ListSequence.fromList(result).addElement((node));\n      }\n    }\n    return result;\n  }","commit_id":"e5ea3f004ac288ae2297ae423f3aaf7fe8146bc5","url":"https://github.com/JetBrains/MPS"},{"original_method":"protected boolean fileChanged(VirtualFile file) throws IOException {\n    File usual_file = new File(file.getPath());\n    File template = new File(StudyEditorFactoryListener.class.getResource(file.getName()).getFile());\n    char[] text1 = FileUtil.loadFileText(usual_file);\n    char[] text2 = FileUtil.loadFileText(template);\n    for (int i = 0; i < text1.length; i++) {\n      boolean r = (text1[i] == text2[i]);\n      if (r == false) return true;\n    }\n    return false;\n  }","id":52155,"modified_method":"protected boolean fileChanged(VirtualFile file) throws IOException {\n    File usual_file = new File(file.getPath());\n    InputStream usual_file_stream = new FileInputStream(usual_file);\n    InputStream metaIs = StudyEditorFactoryListener.class.getResourceAsStream(file.getName());\n    int sym;\n    while( (sym = metaIs.read()) != -1) {\n      int sym2 = usual_file_stream.read();\n      if (sym != sym2) {\n        return true;\n      }\n    }\n    return false;\n  }","commit_id":"d17839607873ab971a24d741216a38e03c913bb7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void checkLeakingParameters(Class<?> jClass) throws IOException {\n    final HashMap<Method, boolean[]> map = new HashMap<Method, boolean[]>();\n\n    // collecting leakedParameters\n    final ClassReader classReader = new ClassReader(new FileInputStream(jClass.getResource(\"/\" + jClass.getName().replace('.', '/') + \".class\").getFile()));\n    classReader.accept(new ClassVisitor(Opcodes.ASM5) {\n      @Override\n      public MethodVisitor visitMethod(int access, String name, String desc, String signature, String[] exceptions) {\n        final MethodNode node = new MethodNode(Opcodes.ASM5, access, name, desc, signature, exceptions);\n        final Method method = new Method(classReader.getClassName(), name, desc);\n        return new MethodVisitor(Opcodes.ASM5, node) {\n          @Override\n          public void visitEnd() {\n            super.visitEnd();\n            try {\n              map.put(method, LeakingParameters.build(classReader.getClassName(), node, false).parameters);\n            }\n            catch (AnalyzerException ignore) {}\n          }\n        };\n      }\n    }, ClassReader.SKIP_DEBUG | ClassReader.SKIP_FRAMES);\n\n    for (java.lang.reflect.Method jMethod : jClass.getDeclaredMethods()) {\n      Method method = new Method(Type.getType(jClass).getInternalName(), jMethod.getName(), Type.getMethodDescriptor(jMethod));\n      Annotation[][] annotations = jMethod.getParameterAnnotations();\n      for (int i = 0; i < annotations.length; i++) {\n        boolean isLeaking = false;\n        Annotation[] parameterAnnotations = annotations[i];\n        for (Annotation parameterAnnotation : parameterAnnotations) {\n          if (parameterAnnotation.annotationType() == ExpectLeaking.class) {\n            isLeaking = true;\n          }\n        }\n        assertEquals(method.toString() + \" #\" + i, isLeaking, map.get(method)[i]);\n      }\n    }\n  }","id":52156,"modified_method":"private static void checkLeakingParameters(Class<?> jClass) throws IOException {\n    final HashMap<Method, boolean[]> map = new HashMap<Method, boolean[]>();\n\n    // collecting leakedParameters\n    final ClassReader classReader = new ClassReader(jClass.getResourceAsStream(\"/\" + jClass.getName().replace('.', '/') + \".class\"));\n    classReader.accept(new ClassVisitor(Opcodes.ASM5) {\n      @Override\n      public MethodVisitor visitMethod(int access, String name, String desc, String signature, String[] exceptions) {\n        final MethodNode node = new MethodNode(Opcodes.ASM5, access, name, desc, signature, exceptions);\n        final Method method = new Method(classReader.getClassName(), name, desc);\n        return new MethodVisitor(Opcodes.ASM5, node) {\n          @Override\n          public void visitEnd() {\n            super.visitEnd();\n            try {\n              map.put(method, LeakingParameters.build(classReader.getClassName(), node, false).parameters);\n            }\n            catch (AnalyzerException ignore) {}\n          }\n        };\n      }\n    }, ClassReader.SKIP_DEBUG | ClassReader.SKIP_FRAMES);\n\n    for (java.lang.reflect.Method jMethod : jClass.getDeclaredMethods()) {\n      Method method = new Method(Type.getType(jClass).getInternalName(), jMethod.getName(), Type.getMethodDescriptor(jMethod));\n      Annotation[][] annotations = jMethod.getParameterAnnotations();\n      for (int i = 0; i < annotations.length; i++) {\n        boolean isLeaking = false;\n        Annotation[] parameterAnnotations = annotations[i];\n        for (Annotation parameterAnnotation : parameterAnnotations) {\n          if (parameterAnnotation.annotationType() == ExpectLeaking.class) {\n            isLeaking = true;\n          }\n        }\n        assertEquals(method.toString() + \" #\" + i, isLeaking, map.get(method)[i]);\n      }\n    }\n  }","commit_id":"f58dbe8b3fd6f14073ed22356bc628c4a7f3a145","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void copyFile(String destination,\r\n                         String filename) throws IOException {\r\n        zout.putNextEntry( new JarEntry( destination + File.separator + filename ) );\r\n\r\n        File source = new File( HTMLReportWriter.class.getResource( filename ).getFile() );\r\n        InputStream in = new FileInputStream( source );\r\n\r\n        // Transfer bytes from in to out\r\n        byte[] buf = new byte[1024];\r\n        int len;\r\n        while ( (len = in.read( buf )) > 0 ) {\r\n            zout.write( buf,\r\n                        0,\r\n                        len );\r\n        }\r\n        in.close();\r\n        zout.closeEntry();\r\n    }","id":52157,"modified_method":"public void copyFile(String destination,\r\n                         String filename) throws IOException {\r\n        zout.putNextEntry( new JarEntry( destination + File.separator + filename ) );\r\n\r\n        InputStream in = HTMLReportWriter.class.getResourceAsStream( filename );\r\n\r\n        // Transfer bytes from in to out\r\n        byte[] buf = new byte[1024];\r\n        int len;\r\n        while ( (len = in.read( buf )) != -1 ) {\r\n            zout.write( buf,\r\n                        0,\r\n                        len );\r\n        }\r\n        in.close();\r\n        zout.closeEntry();\r\n    }","commit_id":"faa8b010a0a13aa43d3eca471cdf50157e6672b9","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public static String getInfo() {\n        if (infoHtml == null) {\n            StringBuffer buffer = new StringBuffer();\n            FileReader reader = null;\n            BufferedReader bReader = null;\n\n            try {\n                String infoFileName = getTranslation(\"info.file\");\n                reader = new FileReader(OsmorcBundle.class.getResource(infoFileName).getFile());\n                bReader = new BufferedReader(reader);\n                while (bReader.ready()) {\n                    buffer.append(bReader.readLine());\n                }\n            }\n            catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n            finally {\n                try {\n                    if (bReader != null) {\n                        bReader.close();\n                    }\n                    if (reader != null) {\n                        reader.close();\n                    }\n                }\n                catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n\n            infoHtml = buffer.toString();\n\n        }\n\n        return infoHtml;\n    }","id":52158,"modified_method":"public static String getInfo() {\n        if (infoHtml == null) {\n            StringBuilder builder = new StringBuilder();\n            InputStream stream = null;\n            InputStreamReader streamReader =  null;\n            BufferedReader bReader = null;\n\n            try {\n                String infoFileName = getTranslation(\"info.file\");\n                stream = OsmorcBundle.class.getResourceAsStream(infoFileName);\n                streamReader = new InputStreamReader(stream);\n                bReader = new BufferedReader(streamReader);\n                while (bReader.ready()) {\n                    builder.append(bReader.readLine());\n                }\n            }\n            catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n            finally {\n                try {\n                    if (bReader != null) {\n                        bReader.close();\n                    }\n                    if (streamReader != null) {\n                        streamReader.close();\n                    }\n                    if (stream != null) {\n                        stream.close();\n                    }\n                }\n                catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n\n            infoHtml = builder.toString();\n\n        }\n\n        return infoHtml;\n    }","commit_id":"14a02be3e8558aa79dd409243335991d57d008ed","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Nullable\n  private <Connection> RunContentDescriptor startSession(@NotNull Project project,\n                                                         @Nullable RunContentDescriptor contentToReuse,\n                                                         @NotNull ExecutionEnvironment env,\n                                                         @NotNull Executor executor,\n                                                         @NotNull JstdRunConfiguration runConfiguration) throws ExecutionException {\n    JstdDebugBrowserInfo<Connection> debugBrowserInfo = JstdDebugBrowserInfo.build(runConfiguration.getRunSettings());\n    if (debugBrowserInfo == null) {\n      throw new ExecutionException(\"Can not find a browser that supports debugging.\");\n    }\n    FileDocumentManager.getInstance().saveAllDocuments();\n\n    final JSDebugEngine<Connection> debugEngine = debugBrowserInfo.getDebugEngine();\n    if (!debugEngine.prepareDebugger(project)) return null;\n\n    final String url;\n    final Connection connection = debugEngine.openConnection(false);\n    if (debugEngine.getBrowserFamily().equals(BrowsersConfiguration.BrowserFamily.CHROME)) {\n      url = \"http://localhost:\" + JstdToolWindowPanel.serverPort + debugBrowserInfo.getCapturedBrowserUrl();\n    }\n    else {\n      url = null;\n    }\n\n    JstdTestRunnerCommandLineState runState = runConfiguration.getState(env, null, true);\n    final ExecutionResult executionResult = runState.execute(executor, this);\n    debugBrowserInfo.fixIfChrome(executionResult.getProcessHandler());\n\n    final RemoteDebuggingFileFinder fileFinder = new JstdDebuggableFileFinderProvider(new File(runConfiguration.getRunSettings().getConfigFile())).provideFileFinder();\n    return XDebuggerManager.getInstance(project).startSession(this, env, contentToReuse, new XDebugProcessStarter() {\n      @NotNull\n      public XDebugProcess start(@NotNull final XDebugSession session) {\n        JSDebugProcess debugProcess = debugEngine.createDebugProcess(session, fileFinder, connection, url, executionResult);\n        BrowserConnection browserConnection = debugProcess.getConnection();\n        browserConnection.queueRequest(new Runnable() {\n          @Override\n          public void run() {\n            resumeJstdClientRunning(executionResult.getProcessHandler());\n          }\n        });\n        return debugProcess;\n      }\n    }).getRunContentDescriptor();\n  }","id":52159,"modified_method":"@Nullable\n  private <Connection> RunContentDescriptor startSession(@NotNull Project project,\n                                                         @Nullable RunContentDescriptor contentToReuse,\n                                                         @NotNull ExecutionEnvironment env,\n                                                         @NotNull Executor executor,\n                                                         @NotNull JstdRunConfiguration runConfiguration) throws ExecutionException {\n    JstdDebugBrowserInfo<Connection> debugBrowserInfo = JstdDebugBrowserInfo.build(runConfiguration.getRunSettings());\n    if (debugBrowserInfo == null) {\n      throw new ExecutionException(\"Can not find a browser that supports debugging.\");\n    }\n    FileDocumentManager.getInstance().saveAllDocuments();\n\n    final JSDebugEngine<Connection> debugEngine = debugBrowserInfo.getDebugEngine();\n    if (!debugEngine.prepareDebugger(project)) return null;\n\n    final String url;\n    final Connection connection = debugEngine.openConnection(false);\n    if (debugEngine.getBrowserFamily().equals(BrowsersConfiguration.BrowserFamily.CHROME)) {\n      url = \"http://localhost:\" + JstdToolWindowPanel.serverPort + debugBrowserInfo.getCapturedBrowserUrl();\n    }\n    else {\n      url = null;\n    }\n\n    JstdTestRunnerCommandLineState runState = runConfiguration.getState(env, null, true);\n    final ExecutionResult executionResult = runState.execute(executor, this);\n    debugBrowserInfo.fixIfChrome(executionResult.getProcessHandler());\n\n    final RemoteDebuggingFileFinder fileFinder = new JstdDebuggableFileFinderProvider(new File(runConfiguration.getRunSettings().getConfigFile())).provideFileFinder();\n    XDebugSession session = XDebuggerManager.getInstance(project).startSession(this, env, contentToReuse, new XDebugProcessStarter() {\n      @NotNull\n      public XDebugProcess start(@NotNull final XDebugSession session) {\n        return debugEngine.createDebugProcess(session, fileFinder, connection, url, executionResult);\n      }\n    });\n\n    // must be here, after all breakpoints were queued\n    ((JSDebugProcess)session.getDebugProcess()).getConnection().queueRequest(new Runnable() {\n      @Override\n      public void run() {\n        resumeJstdClientRunning(executionResult.getProcessHandler());\n      }\n    });\n    return session.getRunContentDescriptor();\n  }","commit_id":"4c31705e523ac0fa3f1f76d977161e60b5e560c8","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Override\n  public LineMarkerInfo getLineMarkerInfo(@NotNull PsiElement element) {\n    Project project = element.getProject();\n    JSFile jsFile = ObjectUtils.tryCast(element.getContainingFile(), JSFile.class);\n    if (jsFile == null) {\n      return null;\n    }\n    VirtualFile virtualFile = jsFile.getVirtualFile();\n    if (virtualFile == null) {\n      return null;\n    }\n    boolean inScope = JstdLibraryUtil.isFileInJstdLibScope(project, virtualFile);\n    if (!inScope) {\n      return null;\n    }\n    TestFileStructurePack pack = TestFileStructureManager.fetchTestFileStructurePackByJsFile(jsFile);\n    if (pack == null) {\n      return null;\n    }\n    String testElementName = element.getUserData(JstdTestFileStructure.TEST_ELEMENT_NAME_KEY);\n    if (testElementName != null) {\n      return createLineMarkerFromElement(element, testElementName);\n    }\n\n    return null;\n  }","id":52160,"modified_method":"@Override\n  public LineMarkerInfo getLineMarkerInfo(@NotNull PsiElement element) {\n    Project project = element.getProject();\n    JSFile jsFile = ObjectUtils.tryCast(element.getContainingFile(), JSFile.class);\n    if (jsFile == null) {\n      return null;\n    }\n    LineMarkerInfo lineMarkerInfo = getJstdLineMarkerInfo(project, jsFile, element);\n    if (lineMarkerInfo == null) {\n      lineMarkerInfo = getQUnitLineMarkerInfo(jsFile, element);\n    }\n    return lineMarkerInfo;\n  }","commit_id":"e93b7ebe4cc8d91bbb19e00d755f303117349ed0","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"private static LineMarkerInfo createLineMarkerFromElement(@NotNull PsiElement testElement,\n                                                            @NotNull final String displayName) {\n    return new LineMarkerInfo<PsiElement>(\n      testElement,\n      testElement.getTextRange(),\n      AllIcons.General.Run,\n      Pass.UPDATE_ALL,\n      new Function<PsiElement, String>() {\n        @Override\n        public String fun(PsiElement element) {\n          return \"Run '\" + displayName + \"'\";\n        }\n      },\n      new GutterIconNavigationHandler<PsiElement>() {\n        @Override\n        public void navigate(MouseEvent e, PsiElement elt) {\n          if (elt.isValid()) {\n            run(elt);\n          }\n        }\n      },\n      GutterIconRenderer.Alignment.CENTER\n    );\n  }","id":52161,"modified_method":"private static LineMarkerInfo createLineMarkerFromElement(@NotNull PsiElement testElement,\n                                                            @NotNull final String displayName) {\n    return new LineMarkerInfo<PsiElement>(\n      testElement,\n      testElement.getTextRange(),\n      AllIcons.Vcs.Arrow_right,\n      Pass.UPDATE_ALL,\n      new Function<PsiElement, String>() {\n        @Override\n        public String fun(PsiElement element) {\n          return \"Execute '\" + displayName;\n        }\n      },\n      new GutterIconNavigationHandler<PsiElement>() {\n        @Override\n        public void navigate(MouseEvent e, PsiElement elt) {\n          if (elt.isValid()) {\n            showPopup(e, elt, displayName);\n          }\n        }\n      },\n      GutterIconRenderer.Alignment.RIGHT\n    );\n  }","commit_id":"e93b7ebe4cc8d91bbb19e00d755f303117349ed0","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Override\n  protected RunContentDescriptor doExecute(@NotNull Project project,\n                                           @NotNull Executor executor,\n                                           RunProfileState state,\n                                           @Nullable RunContentDescriptor contentToReuse,\n                                           @NotNull ExecutionEnvironment env) throws ExecutionException {\n    JstdRunConfiguration runConfiguration = (JstdRunConfiguration) env.getRunProfile();\n    if (runConfiguration.getRunSettings().isExternalServerType()) {\n      throw new ExecutionException(\"Debug is available only for local browsers captured by a local JsTestDriver server.\");\n    }\n\n    JstdRunConfigurationVerifier.checkJstdServerAndBrowserEnvironment(project, runConfiguration.getRunSettings(), true);\n    JstdDebugBrowserInfo<?> context = JstdDebugBrowserInfo.build();\n    if (context == null) {\n      throw new ExecutionException(\"Can not find a browser that supports debugging.\");\n    }\n\n    RunContentDescriptor descriptor = startSession(project, contentToReuse, env, context, executor, runConfiguration);\n\n    return descriptor;\n  }","id":52162,"modified_method":"@Override\n  protected RunContentDescriptor doExecute(@NotNull Project project,\n                                           @NotNull Executor executor,\n                                           RunProfileState state,\n                                           @Nullable RunContentDescriptor contentToReuse,\n                                           @NotNull ExecutionEnvironment env) throws ExecutionException {\n    JstdRunConfiguration runConfiguration = (JstdRunConfiguration) env.getRunProfile();\n    if (runConfiguration.getRunSettings().isExternalServerType()) {\n      throw new ExecutionException(\"Debug is available only for local browsers captured by a local JsTestDriver server.\");\n    }\n    JstdRunConfigurationVerifier.checkJstdServerAndBrowserEnvironment(project, runConfiguration.getRunSettings(), true);\n    return startSession(project, contentToReuse, env, executor, runConfiguration);\n  }","commit_id":"e93b7ebe4cc8d91bbb19e00d755f303117349ed0","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Nullable\n  private <Connection> RunContentDescriptor startSession(@NotNull Project project,\n                                                         @Nullable RunContentDescriptor contentToReuse,\n                                                         @NotNull ExecutionEnvironment env,\n                                                         @NotNull JstdDebugBrowserInfo<Connection> debugBrowserInfo,\n                                                         @NotNull Executor executor,\n                                                         @NotNull JstdRunConfiguration runConfiguration) throws ExecutionException {\n    FileDocumentManager.getInstance().saveAllDocuments();\n\n    final JSDebugEngine<Connection> debugEngine = debugBrowserInfo.getDebugEngine();\n    if (!debugEngine.prepareDebugger(project)) return null;\n\n    final String url;\n    final Connection connection;\n    if (debugEngine instanceof ChromeDebuggerEngine) {\n      ChromeConnectionManagerImpl chromeConnectionManager = (ChromeConnectionManagerImpl) ChromeConnectionManager.getInstance();\n      ExistentTabProviderFactory tabProviderFactory = ExistentTabProviderFactory.getInstance();\n      connection = (Connection) chromeConnectionManager.createConnection(tabProviderFactory);\n      url = \"http://localhost:\" + JstdToolWindowPanel.serverPort + debugBrowserInfo.getCapturedBrowserUrl();\n    }\n    else {\n      connection = debugEngine.openConnection();\n      url = null;\n    }\n\n    JstdTestRunnerCommandLineState runState = runConfiguration.getState(env, null, true);\n    final ExecutionResult executionResult = runState.execute(executor, JstdDebugProgramRunner.this);\n\n    File configFile = new File(runConfiguration.getRunSettings().getConfigFile());\n    List<RemoteJavaScriptDebugConfiguration.RemoteUrlMappingBean> mapping = extractMappings(configFile);\n\n    final DebuggableFileFinder fileFinder = new RemoteDebuggingFileFinder(project, mapping);\n\n    XDebuggerManager xDebuggerManager = XDebuggerManager.getInstance(project);\n    XDebugSession xDebugSession = xDebuggerManager.startSession(this, env, contentToReuse, new XDebugProcessStarter() {\n      @NotNull\n      public XDebugProcess start(@NotNull final XDebugSession session) {\n        JSDebugProcess debugProcess = debugEngine.createDebugProcess(session, fileFinder, connection, url, executionResult);\n        return debugProcess;\n      }\n    });\n    PrintWriter writer = new PrintWriter(executionResult.getProcessHandler().getProcessInput());\n    writer.println(TestRunner.DEBUG_SESSION_STARTED + \"\\n\");\n    writer.flush();\n\n    return xDebugSession.getRunContentDescriptor();\n  }","id":52163,"modified_method":"@Nullable\n  private <Connection> RunContentDescriptor startSession(@NotNull Project project,\n                                                         @Nullable RunContentDescriptor contentToReuse,\n                                                         @NotNull ExecutionEnvironment env,\n                                                         @NotNull Executor executor,\n                                                         @NotNull JstdRunConfiguration runConfiguration) throws ExecutionException {\n    JstdDebugBrowserInfo<Connection> debugBrowserInfo = JstdDebugBrowserInfo.build(runConfiguration.getRunSettings());\n    if (debugBrowserInfo == null) {\n      throw new ExecutionException(\"Can not find a browser that supports debugging.\");\n    }\n    FileDocumentManager.getInstance().saveAllDocuments();\n\n    final JSDebugEngine<Connection> debugEngine = debugBrowserInfo.getDebugEngine();\n    if (!debugEngine.prepareDebugger(project)) return null;\n\n    final String url;\n    final Connection connection;\n    if (debugEngine instanceof ChromeDebuggerEngine) {\n      ChromeConnectionManager chromeConnectionManager = ChromeConnectionManager.getInstance();\n      ExistentTabProviderFactory tabProviderFactory = ExistentTabProviderFactory.getInstance();\n      //noinspection unchecked\n      connection = (Connection) chromeConnectionManager.createConnection(tabProviderFactory);\n      url = \"http://localhost:\" + JstdToolWindowPanel.serverPort + debugBrowserInfo.getCapturedBrowserUrl();\n    }\n    else {\n      connection = debugEngine.openConnection();\n      url = null;\n    }\n\n    JstdTestRunnerCommandLineState runState = runConfiguration.getState(env, null, true);\n    final ExecutionResult executionResult = runState.execute(executor, JstdDebugProgramRunner.this);\n\n    File configFile = new File(runConfiguration.getRunSettings().getConfigFile());\n    List<RemoteJavaScriptDebugConfiguration.RemoteUrlMappingBean> mapping = extractMappings(configFile);\n\n    final DebuggableFileFinder fileFinder = new RemoteDebuggingFileFinder(project, mapping);\n\n    XDebuggerManager xDebuggerManager = XDebuggerManager.getInstance(project);\n    XDebugSession xDebugSession = xDebuggerManager.startSession(this, env, contentToReuse, new XDebugProcessStarter() {\n      @NotNull\n      public XDebugProcess start(@NotNull final XDebugSession session) {\n        JSDebugProcess debugProcess = debugEngine.createDebugProcess(session, fileFinder, connection, url, executionResult);\n        return debugProcess;\n      }\n    });\n    PrintWriter writer = new PrintWriter(executionResult.getProcessHandler().getProcessInput());\n    writer.println(TestRunner.DEBUG_SESSION_STARTED + \"\\n\");\n    writer.flush();\n\n    return xDebugSession.getRunContentDescriptor();\n  }","commit_id":"e93b7ebe4cc8d91bbb19e00d755f303117349ed0","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Override\n    public void applyTo(@NotNull JstdRunSettings.Builder runSettingsBuilder) {\n      TestType selectedTestType = getSelectedTestType();\n      selectTestType(selectedTestType);\n      runSettingsBuilder.setTestType(selectedTestType);\n      myTestTypeContentRunSettingsSection.applyTo(runSettingsBuilder);\n      myServerConfigurationForm.applyTo(runSettingsBuilder);\n    }","id":52164,"modified_method":"@Override\n    public void applyTo(@NotNull JstdRunSettings.Builder runSettingsBuilder) {\n      TestType selectedTestType = getSelectedTestType();\n      selectTestType(selectedTestType);\n      runSettingsBuilder.setTestType(selectedTestType);\n      myTestTypeContentRunSettingsSection.applyTo(runSettingsBuilder);\n      myServerConfigurationForm.applyTo(runSettingsBuilder);\n      BrowsersConfiguration.BrowserFamily selectedBrowser = ObjectUtils.tryCast(\n        myPreferredDebugBrowserComboBox.getSelectedItem(),\n        BrowsersConfiguration.BrowserFamily.class\n      );\n      if (selectedBrowser != null) {\n        runSettingsBuilder.setPreferredDebugBrowser(selectedBrowser);\n      }\n    }","commit_id":"e93b7ebe4cc8d91bbb19e00d755f303117349ed0","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@NotNull\n    @Override\n    protected JComponent createComponent(@NotNull CreationContext creationContext) {\n      JPanel panel = new JPanel(new GridBagLayout());\n      myLabel.setHorizontalAlignment(SwingConstants.RIGHT);\n      panel.add(myLabel, new GridBagConstraints(\n        0, 0,\n        1, 1,\n        0.0, 0.0,\n        GridBagConstraints.WEST,\n        GridBagConstraints.NONE,\n        new Insets(0, 0, 0, UIUtil.DEFAULT_HGAP),\n        0, 0\n      ));\n\n      List<TestTypeListItem> testTypeListItems = createTestTypeListItems();\n\n      myTestTypeComboBox = createTestTypeComboBox(testTypeListItems);\n      panel.add(myTestTypeComboBox, new GridBagConstraints(\n        1, 0,\n        1, 1,\n        0.0, 0.0,\n        GridBagConstraints.WEST,\n        GridBagConstraints.NONE,\n        new Insets(0, 0, 0, 0),\n        0, 0\n      ));\n      myListItemByTestTypeMap = createListItemByTestTypeMap(testTypeListItems);\n\n      myTestTypeContentRunSettingsSection = new OneOfRunSettingsSection<TestTypeListItem>(testTypeListItems);\n      panel.add(myTestTypeContentRunSettingsSection.getComponent(creationContext), new GridBagConstraints(\n        0, 1,\n        2, 1,\n        1.0, 0.0,\n        GridBagConstraints.WEST,\n        GridBagConstraints.HORIZONTAL,\n        new Insets(0, 0, 0, 0),\n        0, 0\n      ));\n\n      panel.add(myServerConfigurationForm.getComponent(creationContext), new GridBagConstraints(\n        0, 2,\n        2, 1,\n        1.0, 0.0,\n        GridBagConstraints.WEST,\n        GridBagConstraints.HORIZONTAL,\n        new Insets(0, 0, 0, 0),\n        0, 0\n      ));\n\n      setAnchor(myTestTypeContentRunSettingsSection.getAnchor());\n      return panel;\n    }","id":52165,"modified_method":"@NotNull\n    @Override\n    protected JComponent createComponent(@NotNull CreationContext creationContext) {\n      JPanel panel = new JPanel(new GridBagLayout());\n      myLabel.setHorizontalAlignment(SwingConstants.RIGHT);\n      panel.add(myLabel, new GridBagConstraints(\n        0, 0,\n        1, 1,\n        0.0, 0.0,\n        GridBagConstraints.WEST,\n        GridBagConstraints.NONE,\n        new Insets(0, 0, 0, UIUtil.DEFAULT_HGAP),\n        0, 0\n      ));\n\n      List<TestTypeListItem> testTypeListItems = createTestTypeListItems();\n\n      myTestTypeComboBox = createTestTypeComboBox(testTypeListItems);\n      panel.add(myTestTypeComboBox, new GridBagConstraints(\n        1, 0,\n        1, 1,\n        0.0, 0.0,\n        GridBagConstraints.WEST,\n        GridBagConstraints.NONE,\n        new Insets(0, 0, 0, 0),\n        0, 0\n      ));\n      myListItemByTestTypeMap = createListItemByTestTypeMap(testTypeListItems);\n\n      myTestTypeContentRunSettingsSection = new OneOfRunSettingsSection<TestTypeListItem>(testTypeListItems);\n      panel.add(myTestTypeContentRunSettingsSection.getComponent(creationContext), new GridBagConstraints(\n        0, 1,\n        2, 1,\n        1.0, 0.0,\n        GridBagConstraints.WEST,\n        GridBagConstraints.HORIZONTAL,\n        new Insets(0, 0, 0, 0),\n        0, 0\n      ));\n\n      panel.add(myServerConfigurationForm.getComponent(creationContext), new GridBagConstraints(\n        0, 2,\n        2, 1,\n        1.0, 0.0,\n        GridBagConstraints.WEST,\n        GridBagConstraints.HORIZONTAL,\n        new Insets(0, 0, 0, 0),\n        0, 0\n      ));\n\n      panel.add(createDebugPanel(), new GridBagConstraints(\n        0, 3,\n        2, 1,\n        1.0, 0.0,\n        GridBagConstraints.WEST,\n        GridBagConstraints.HORIZONTAL,\n        new Insets(0, 0, 0, 0),\n        0, 0\n      ));\n\n      setAnchor(myTestTypeContentRunSettingsSection.getAnchor());\n      return panel;\n    }","commit_id":"e93b7ebe4cc8d91bbb19e00d755f303117349ed0","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Override\n    public void resetFrom(@NotNull JstdRunSettings runSettings) {\n      selectTestType(runSettings.getTestType());\n      myTestTypeContentRunSettingsSection.resetFrom(runSettings);\n      myServerConfigurationForm.resetFrom(runSettings);\n    }","id":52166,"modified_method":"@Override\n    public void resetFrom(@NotNull JstdRunSettings runSettings) {\n      selectTestType(runSettings.getTestType());\n      myTestTypeContentRunSettingsSection.resetFrom(runSettings);\n      myServerConfigurationForm.resetFrom(runSettings);\n      myPreferredDebugBrowserComboBox.setSelectedItem(runSettings.getPreferredDebugBrowser());\n    }","commit_id":"e93b7ebe4cc8d91bbb19e00d755f303117349ed0","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public static void checkJstdServerAndBrowserEnvironment(@NotNull Project project,\n                                                          @NotNull JstdRunSettings settings,\n                                                          boolean debug) throws ExecutionException {\n    if (settings.isExternalServerType()) {\n      return;\n    }\n    JstdServerState jstdServerState = JstdServerState.getInstance();\n    if (!jstdServerState.isServerRunning()) {\n      String browserMessage = debug ? \"Firefox or Chrome\" : \"a browser\";\n      throw new JstdSlaveBrowserIsNotReadyExecutionException(project, \"JsTestDriver local server is not running.<br>\" +\n                                              \"<a href=\\\"\\\">Start a local server<\/a>, capture \" + browserMessage + \" and try again.\");\n    }\n    if (debug) {\n      JSDebugEngine<?>[] engines = JSDebugEngine.getEngines();\n      Collection<BrowserInfo> capturedBrowsers = jstdServerState.getCapturedBrowsers();\n      boolean ok = false;\n      for (BrowserInfo browser : capturedBrowsers) {\n        String browserName = browser.getName();\n        for (JSDebugEngine<?> engine : engines) {\n          if (engine.getId().equalsIgnoreCase(browserName)) {\n            ok = true;\n            break;\n          }\n        }\n        if (ok) break;\n      }\n      if (!ok) {\n        throw new JstdSlaveBrowserIsNotReadyExecutionException(\n          project,\n          \"Debug is available in Firefox or Chrome only.\\n\" +\n          \"Please <a href=\\\"\\\">capture<\/a> one of these browsers and try again.\"\n        );\n      }\n    }\n    else {\n      if (jstdServerState.getCapturedBrowsers().isEmpty()) {\n        throw new JstdSlaveBrowserIsNotReadyExecutionException(\n          project,\n          \"JsTestDriver local server is running without captured browsers.\\n\" +\n          \"Please <a href=\\\"\\\">capture<\/a> a browser and try again.\"\n        );\n      }\n    }\n  }","id":52167,"modified_method":"public static void checkJstdServerAndBrowserEnvironment(@NotNull Project project,\n                                                          @NotNull JstdRunSettings settings,\n                                                          boolean debug) throws ExecutionException {\n    if (settings.isExternalServerType()) {\n      return;\n    }\n    JstdServerState jstdServerState = JstdServerState.getInstance();\n    if (!jstdServerState.isServerRunning()) {\n      String browserMessage = debug ? \"Firefox or Chrome\" : \"a browser\";\n      throw new JstdSlaveBrowserIsNotReadyExecutionException(project, \"JsTestDriver local server is not running.<br>\" +\n                                              \"<a href=\\\"\\\">Start a local server<\/a>, capture \" + browserMessage + \" and try again.\");\n    }\n    if (debug) {\n      JSDebugEngine<?>[] engines = JSDebugEngine.getEngines();\n      Collection<BrowserInfo> capturedBrowsers = jstdServerState.getCapturedBrowsers();\n      boolean ok = false;\n      for (BrowserInfo browser : capturedBrowsers) {\n        String browserName = browser.getName();\n        for (JSDebugEngine<?> engine : engines) {\n          if (engine.getId().equalsIgnoreCase(browserName)) {\n            ok = true;\n            break;\n          }\n        }\n        if (ok) break;\n      }\n      if (!ok) {\n        throw new JstdSlaveBrowserIsNotReadyExecutionException(\n          project,\n          \"Debug is available in Firefox or Chrome only.\\n\" +\n          \"Please <a href=\\\"\\\">capture<\/a> one of these browsers and try again.\"\n        );\n      }\n    }\n    else {\n      if (jstdServerState.getCapturedBrowsers().isEmpty()) {\n        throw new JstdSlaveBrowserIsNotReadyExecutionException(\n          project,\n          \"JsTestDriver local server is running without captured browsers.\\n\" +\n          \"Please <a href=\\\"\\\">capture<\/a> a browser and try again.\"\n        );\n      }\n    }\n    ensureJstdToolWindowRegistered(project);\n  }","commit_id":"e93b7ebe4cc8d91bbb19e00d755f303117349ed0","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@NotNull\n    public JstdRunSettings build() {\n      return new JstdRunSettings(\n        myTestType,\n        myConfigFile,\n        myDirectory,\n        myJSFilePath,\n        myServerAddress,\n        myServerType,\n        myTestCaseName,\n        myTestMethodName,\n        myFilesExcludedFromCoverage\n      );\n    }","id":52168,"modified_method":"@NotNull\n    public JstdRunSettings build() {\n      return new JstdRunSettings(\n        myTestType,\n        myConfigFile,\n        myDirectory,\n        myJSFilePath,\n        myServerAddress,\n        myServerType,\n        myTestCaseName,\n        myTestMethodName,\n        myFilesExcludedFromCoverage,\n        myPreferredDebugBrowser\n      );\n    }","commit_id":"e93b7ebe4cc8d91bbb19e00d755f303117349ed0","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public JstdRunSettings(\n      @NotNull TestType testType,\n      @NotNull String configFile,\n      @NotNull String directory,\n      @NotNull String jsFilePath,\n      @NotNull String serverAddress,\n      @NotNull ServerType serverType,\n      @NotNull String testCaseName,\n      @NotNull String testMethodName,\n      @NotNull ImmutableList<String> filesExcludedFromCoverage\n  ) {\n    myTestType = testType;\n    myConfigFile = configFile;\n    myDirectory = directory;\n    myJSFilePath = jsFilePath;\n    myServerAddress = serverAddress;\n    myServerType = serverType;\n    myTestCaseName = testCaseName;\n    myTestMethodName = testMethodName;\n    myFilesExcludedFromCoverage = filesExcludedFromCoverage;\n  }","id":52169,"modified_method":"public JstdRunSettings(\n    @NotNull TestType testType,\n    @NotNull String configFile,\n    @NotNull String directory,\n    @NotNull String jsFilePath,\n    @NotNull String serverAddress,\n    @NotNull ServerType serverType,\n    @NotNull String testCaseName,\n    @NotNull String testMethodName,\n    @NotNull ImmutableList<String> filesExcludedFromCoverage,\n    @NotNull BrowsersConfiguration.BrowserFamily preferredDebugBrowser) {\n    myTestType = testType;\n    myConfigFile = configFile;\n    myDirectory = directory;\n    myJSFilePath = jsFilePath;\n    myServerAddress = serverAddress;\n    myServerType = serverType;\n    myTestCaseName = testCaseName;\n    myTestMethodName = testMethodName;\n    myFilesExcludedFromCoverage = filesExcludedFromCoverage;\n    myPreferredDebugBrowser = preferredDebugBrowser;\n  }","commit_id":"e93b7ebe4cc8d91bbb19e00d755f303117349ed0","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public static void writeToXml(@NotNull Element element, @NotNull JstdRunSettings runSettings) {\n    TestType testType = runSettings.getTestType();\n    writeString(element, Key.TEST_TYPE, testType.name());\n    if (testType == TestType.ALL_CONFIGS_IN_DIRECTORY) {\n      writeString(element, Key.ALL_IN_DIRECTORY, FileUtil.toSystemIndependentName(runSettings.getDirectory()));\n    } else if (testType == TestType.CONFIG_FILE) {\n      writeString(element, Key.JSTD_CONFIG_FILE, FileUtil.toSystemIndependentName(runSettings.getConfigFile()));\n    } else if (testType == TestType.JS_FILE) {\n      writeJsFile(element, runSettings);\n    } else if (testType == TestType.TEST_CASE) {\n      writeTestCase(element, runSettings);\n    } else if (testType == TestType.TEST_METHOD) {\n      writeTestMethod(element, runSettings);\n    }\n    writeString(element, Key.SERVER_TYPE, runSettings.getServerType().name());\n    if (runSettings.getServerType() == ServerType.EXTERNAL) {\n      writeString(element, Key.SERVER_ADDRESS, runSettings.getServerAddress());\n    }\n    writeFilesExcludedFromCoverage(element, runSettings.getFilesExcludedFromCoverage());\n  }","id":52170,"modified_method":"public static void writeToXml(@NotNull Element element, @NotNull JstdRunSettings runSettings) {\n    TestType testType = runSettings.getTestType();\n    writeString(element, Key.TEST_TYPE, testType.name());\n    if (testType == TestType.ALL_CONFIGS_IN_DIRECTORY) {\n      writeString(element, Key.ALL_IN_DIRECTORY, FileUtil.toSystemIndependentName(runSettings.getDirectory()));\n    } else if (testType == TestType.CONFIG_FILE) {\n      writeString(element, Key.JSTD_CONFIG_FILE, FileUtil.toSystemIndependentName(runSettings.getConfigFile()));\n    } else if (testType == TestType.JS_FILE) {\n      writeJsFile(element, runSettings);\n    } else if (testType == TestType.TEST_CASE) {\n      writeTestCase(element, runSettings);\n    } else if (testType == TestType.TEST_METHOD) {\n      writeTestMethod(element, runSettings);\n    }\n    writeString(element, Key.SERVER_TYPE, runSettings.getServerType().name());\n    if (runSettings.getServerType() == ServerType.EXTERNAL) {\n      writeString(element, Key.SERVER_ADDRESS, runSettings.getServerAddress());\n    }\n    writeFilesExcludedFromCoverage(element, runSettings.getFilesExcludedFromCoverage());\n    writeString(element, Key.PREFERRED_DEBUG_BROWSER, runSettings.getPreferredDebugBrowser().name());\n  }","commit_id":"e93b7ebe4cc8d91bbb19e00d755f303117349ed0","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public static JstdRunSettings readFromXml(@NotNull Element element) {\n    JstdRunSettings.Builder builder = new JstdRunSettings.Builder();\n\n    TestType testType = readEnumByName(element, Key.TEST_TYPE, TestType.CONFIG_FILE);\n    builder.setTestType(testType);\n    if (testType == TestType.ALL_CONFIGS_IN_DIRECTORY) {\n      String directory = readString(element, Key.ALL_IN_DIRECTORY, \"\");\n      builder.setDirectory(FileUtil.toSystemDependentName(directory));\n    } else if (testType == TestType.CONFIG_FILE) {\n      String configFile = readString(element, Key.JSTD_CONFIG_FILE, \"\");\n      builder.setConfigFile(FileUtil.toSystemDependentName(configFile));\n    } else if (testType == TestType.JS_FILE) {\n      readJsFile(element, builder);\n    } else if (testType == TestType.TEST_CASE) {\n      readTestCase(element, builder);\n    } else if (testType == TestType.TEST_METHOD) {\n      readTestMethod(element, builder);\n    }\n    ServerType serverType = readEnumByName(element, Key.SERVER_TYPE, ServerType.INTERNAL);\n    builder.setServerType(serverType);\n    if (serverType == ServerType.EXTERNAL) {\n      String serverAddress = readString(element, Key.SERVER_ADDRESS, \"\");\n      builder.setServerAddress(serverAddress);\n    }\n    List<String> filesExcludedFromCoverage = readFilesExcludedFromCoverage(element);\n    builder.setFilesExcludedFromCoverage(filesExcludedFromCoverage);\n    return builder.build();\n  }","id":52171,"modified_method":"public static JstdRunSettings readFromXml(@NotNull Element element) {\n    JstdRunSettings.Builder builder = new JstdRunSettings.Builder();\n\n    TestType testType = readEnumByName(element, Key.TEST_TYPE, TestType.CONFIG_FILE);\n    builder.setTestType(testType);\n    if (testType == TestType.ALL_CONFIGS_IN_DIRECTORY) {\n      String directory = readString(element, Key.ALL_IN_DIRECTORY, \"\");\n      builder.setDirectory(FileUtil.toSystemDependentName(directory));\n    } else if (testType == TestType.CONFIG_FILE) {\n      String configFile = readString(element, Key.JSTD_CONFIG_FILE, \"\");\n      builder.setConfigFile(FileUtil.toSystemDependentName(configFile));\n    } else if (testType == TestType.JS_FILE) {\n      readJsFile(element, builder);\n    } else if (testType == TestType.TEST_CASE) {\n      readTestCase(element, builder);\n    } else if (testType == TestType.TEST_METHOD) {\n      readTestMethod(element, builder);\n    }\n    ServerType serverType = readEnumByName(element, Key.SERVER_TYPE, ServerType.INTERNAL);\n    builder.setServerType(serverType);\n    if (serverType == ServerType.EXTERNAL) {\n      String serverAddress = readString(element, Key.SERVER_ADDRESS, \"\");\n      builder.setServerAddress(serverAddress);\n    }\n    List<String> filesExcludedFromCoverage = readFilesExcludedFromCoverage(element);\n    builder.setFilesExcludedFromCoverage(filesExcludedFromCoverage);\n\n    BrowsersConfiguration.BrowserFamily browser = readEnumByName(element, Key.PREFERRED_DEBUG_BROWSER,\n                                                                 JstdRunSettings.DEFAULT_PREFERRED_DEBUG_BROWSER);\n    builder.setPreferredDebugBrowser(browser);\n    return builder.build();\n  }","commit_id":"e93b7ebe4cc8d91bbb19e00d755f303117349ed0","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@NotNull\n  @Override\n  public QUnitFileStructure buildTestFileStructure(@NotNull JSFile jsFile) {\n    return new Builder(jsFile).build();\n  }","id":52172,"modified_method":"@NotNull\n  @Override\n  public QUnitFileStructure buildTestFileStructure(@NotNull JSFile jsFile) {\n    QUnitFileStructure fileStructure = new Builder(jsFile).build();\n    for (QUnitModuleStructure moduleStructure : fileStructure.getNonDefaultModuleStructures()) {\n      PsiElement element = moduleStructure.getEnclosingCallExpression();\n      element.putUserData(QUnitFileStructure.TEST_ELEMENT_NAME_KEY, moduleStructure.getName());\n      handleModuleStructure(moduleStructure);\n    }\n    handleModuleStructure(fileStructure.getDefaultModuleStructure());\n    return fileStructure;\n  }","commit_id":"e93b7ebe4cc8d91bbb19e00d755f303117349ed0","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Override\n    public Neo4jServerAPI api() {\n        if(serverAPI == null) {\n            System.out.println(\"http://\" + vm().definition().ip() + \":7474\");\n            serverAPI = new Neo4jServerAPI(\"http://\" + vm().definition().ip() + \":7474\");\n        }\n        return serverAPI;\n    }","id":52173,"modified_method":"@Override\n    public Neo4jServerAPI api() {\n        if(serverAPI == null) {\n            serverAPI = new Neo4jServerAPI(\"http://\" + vm().definition().ip() + \":7474\");\n        }\n        return serverAPI;\n    }","commit_id":"54a03857ef52b2aa869e14e355cc40e0034253a9","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public void runInstall() {\n        vm.copyFromHost(installerPath, \"/home/vagrant/\" + installerFileName);\n        cygSh.run(\"touch install.log\");\n        cygSh.runDOS(\"msiexec /quiet /L* install.log /i \" + installerFileName + \" INSTALL_DIR=\\\"C:\\\\\"+WIN_INSTALL_FOLDER+\"\\\"\");\n        \n        if(!installIsSuccessful(\"/home/vagrant/install.log\")) {\n            dumplog(\"/home/vagrant/install.log\");\n            dumplog(installDir() + \"/data/log/neo4j.0.0.log\");\n            throw new RuntimeException(\"Failed to install neo4j, see build log.\");\n        }\n    }","id":52174,"modified_method":"@Override\n    public void runInstall() {\n        vm.copyFromHost(installerPath, \"/home/vagrant/\" + installerFileName);\n        cygSh.run(\"touch install.log\");\n        cygSh.runDOS(\"msiexec /quiet /L* install.log /i \" + installerFileName + \" INSTALL_DIR=\\\"\"+WIN_INSTALL_DIR+\"\\\"\");\n        \n        if(!installIsSuccessful(\"/home/vagrant/install.log\")) {\n            throw new RuntimeException(\"Failed to install neo4j [\"+vm().definition().ip()+\"], see build log.\");\n        }\n    }","commit_id":"54a03857ef52b2aa869e14e355cc40e0034253a9","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public void startService() {\n        Result r = sh.run(\"net start neo4j\");\n        if(!r.getOutput().contains(\"service was started successfully\")) {\n            dumplog(installDir() + \"/data/log/neo4j.0.0.log\");\n            throw new RuntimeException(\"Tried to start neo4j, failed. Output was: \\n\" + r.getOutput());\n        }\n    }","id":52175,"modified_method":"@Override\n    public void startService() {\n        Result r = sh.run(\"net start neo4j\");\n        if(!r.getOutput().contains(\"service was started successfully\")) {\n            throw new RuntimeException(\"Tried to start neo4j [\"+vm().definition().ip()+\"], failed. Output was: \\n\" + r.getOutput());\n        }\n    }","commit_id":"54a03857ef52b2aa869e14e355cc40e0034253a9","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public void runUninstall() {\n        cygSh.run(\"net stop neo4j\");\n        cygSh.run(\":> uninstall.log\");\n        cygSh.runDOS(\"msiexec /quiet /L* uninstall.log /x \" + installerFileName);\n        \n        if(!installIsSuccessful(\"/home/vagrant/uninstall.log\")) {\n            dumplog(\"/home/vagrant/uninstall.log\");\n            dumplog(installDir() + \"/data/log/neo4j.0.0.log\");\n            throw new RuntimeException(\"Failed to uninstall neo4j, see build log.\");\n        }\n    }","id":52176,"modified_method":"@Override\n    public void runUninstall() {\n        cygSh.run(\"net stop neo4j\");\n        cygSh.run(\":> uninstall.log\");\n        cygSh.runDOS(\"msiexec /quiet /L* uninstall.log /x \" + installerFileName);\n        \n        if(!installIsSuccessful(\"/home/vagrant/uninstall.log\")) {\n            throw new RuntimeException(\"Failed to uninstall neo4j [\"+vm().definition().ip()+\"], see build log.\");\n        }\n    }","commit_id":"54a03857ef52b2aa869e14e355cc40e0034253a9","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public void stopService() {\n        Result r = sh.run(\"net stop neo4j\");\n        if(!r.getOutput().contains(\"service was stopped successfully\")) {\n            dumplog(installDir() + \"/data/log/neo4j.0.0.log\");\n            throw new RuntimeException(\"Tried to stop neo4j, failed. Output was: \\n\" + r.getOutput());\n        }\n    }","id":52177,"modified_method":"@Override\n    public void stopService() {\n        Result r = sh.run(\"net stop neo4j\");\n        if(!r.getOutput().contains(\"service was stopped successfully\")) {\n            throw new RuntimeException(\"Tried to stop neo4j [\"+vm().definition().ip()+\"], failed. Output was: \\n\" + r.getOutput());\n        }\n    }","commit_id":"54a03857ef52b2aa869e14e355cc40e0034253a9","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Before\n    public void resetVMs() {\n        for(EnterpriseDriver d : drivers) {\n            //d.close();\n            d.vm().up();\n            d.vm().rollback();\n        }\n    }","id":52178,"modified_method":"@Before\n    public void resetVMs() {\n        for(EnterpriseDriver d : drivers) {\n            d.up();\n            d.vm().rollback();\n        }\n    }","commit_id":"54a03857ef52b2aa869e14e355cc40e0034253a9","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void setupZookeeperCluster()\n    {\n        List<String> coordinators = new ArrayList<String>();\n        EnterpriseDriver driver;\n        \n        for( int i=0; i<drivers.length; i++) \n        {\n            driver = drivers[i];\n            setupZookeeper(driver, i + 1);\n            coordinators.add(driver.vm().definition().ip() + \":\" + (zooClientPortBase + i + 1));\n        }\n        \n        coordinatorsConfigValue = StringUtils.join(coordinators,\",\");\n    }","id":52179,"modified_method":"private void setupZookeeperCluster()\n    {\n        List<String> coordinators = new ArrayList<String>();\n        EnterpriseDriver driver;\n        \n        for( int i=0; i<drivers.length; i++) \n        {\n            driver = drivers[i];\n            setupZookeeper(driver, i + 1);\n            coordinators.add(driver.vm().definition().ip() + \":\" + (zooClientPortBase + i + 1));\n        }\n        \n        coordinatorAddresses = StringUtils.join(coordinators,\",\");\n    }","commit_id":"54a03857ef52b2aa869e14e355cc40e0034253a9","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void highAvailabilityQualityAssuranceTest() {\n        \n        // Start servers\n        for(EnterpriseDriver d : drivers ) d.up();\n        \n        setupZookeeperCluster();\n        \n        setupHighAvailabilityCluster();\n        \n        assertClusterWorks();\n        \n        // Restart a server\n        drivers[0].reboot();\n        //drivers[0].vm().halt();\n        \n        assertClusterWorks();\n        \n        assertHABackupWorks();\n        \n    }","id":52180,"modified_method":"@Test\n    public void highAvailabilityQualityAssuranceTest() {\n        \n        // Start servers\n        for(EnterpriseDriver d : drivers ) d.up();\n        \n        setupZookeeperCluster();\n        \n        setupHighAvailabilityCluster();\n        \n        assertClusterWorks();\n        \n        // TODO: This currently fails, the cluster does not\n        // work when it comes back up.\n        // Restart a server\n        //drivers[0].reboot();\n        //assertClusterWorks();\n        \n        assertHABackupWorks();\n        \n    }","commit_id":"54a03857ef52b2aa869e14e355cc40e0034253a9","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void setupHighAvailabilityCluster()\n    {\n        EnterpriseDriver driver;\n        \n        for( int i=0; i<drivers.length; i++) \n        {\n            driver = drivers[i];\n            \n            String neo4jConf = driver.installDir() + \"/conf/neo4j.properties\";\n            String serverConf = driver.installDir() + \"/conf/neo4j-server.properties\";\n            \n            driver.runInstall();\n            driver.stopService();\n            \n            driver.setConfig(neo4jConf, \"ha.cluster_name\", \"mycluster\");\n            driver.setConfig(neo4jConf, \"ha.server_id\", \"\" + (i+1));\n            driver.setConfig(neo4jConf, \"ha.server\", driver.vm().definition().ip() + \":6001\");\n            driver.setConfig(neo4jConf, \"ha.coordinators\", coordinatorsConfigValue);\n            \n            driver.setConfig(serverConf, \"org.neo4j.server.database.mode\", \"HA\");\n            driver.setConfig(serverConf, \"org.neo4j.server.webserver.address\", \"0.0.0.0\");\n            \n            // The database folder has to be empty on first boot\n            driver.destroyDatabase();\n            \n            driver.startService();\n        }\n    }","id":52181,"modified_method":"private void setupHighAvailabilityCluster()\n    {\n        EnterpriseDriver driver;\n        \n        for( int i=0; i<drivers.length; i++) \n        {\n            driver = drivers[i];\n            \n            String neo4jConf = driver.installDir() + \"/conf/neo4j.properties\";\n            String serverConf = driver.installDir() + \"/conf/neo4j-server.properties\";\n            \n            driver.runInstall();\n            driver.stopService();\n            \n            driver.setConfig(neo4jConf, \"ha.server_id\", \"\" + (i+1));\n            driver.setConfig(neo4jConf, \"ha.server\", driver.vm().definition().ip() + \":6001\");\n            driver.setConfig(neo4jConf, \"ha.coordinators\", coordinatorAddresses);\n            \n            driver.setConfig(serverConf, \"org.neo4j.server.database.mode\", \"HA\");\n            driver.setConfig(serverConf, \"org.neo4j.server.webserver.address\", \"0.0.0.0\");\n            \n            // The database folder has to be empty on first boot\n            driver.destroyDatabase();\n            \n            driver.startService();\n        }\n    }","commit_id":"54a03857ef52b2aa869e14e355cc40e0034253a9","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void assertHABackupWorks()\n    {\n        EnterpriseDriver driver = drivers[0];\n        \n        //driver.performBackup();\n    }","id":52182,"modified_method":"private void assertHABackupWorks()\n    {\n        EnterpriseDriver driver = drivers[0];\n        \n        long nodeId = driver.api().createNode();\n        \n        driver.performFullHABackup(\"neobackup\", coordinatorAddresses);\n        driver.performIncrementalHABackup(\"neobackup\", coordinatorAddresses);\n        \n        // Shut down the cluster\n        for(EnterpriseDriver d : drivers) {\n            d.stopService();\n            d.destroyDatabase();\n        }\n        \n        driver.replaceGraphDataDirWithBackup(\"neobackup\");\n        \n        // Start the cluster back up\n        for(EnterpriseDriver d : drivers) d.startService();\n        \n        // Wait for all databases to be up to date\n        for(EnterpriseDriver d : drivers) {\n            try {\n                d.api().waitUntilNodeExists(nodeId);\n            } catch(Exception e){\n                throw new RuntimeException(\"Restoring backup failed on server \" + d.vm().definition().ip(), e);\n            }\n        }\n        \n        assertClusterWorks();\n    }","commit_id":"54a03857ef52b2aa869e14e355cc40e0034253a9","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Session startSession() {\n        try {\n            return client.startSession();\n        } catch (Exception e) {\n            throw new ShellException(e);\n        }\n    }","id":52183,"modified_method":"public Session startSession() {\n        try {\n            Session session;\n            try {\n                session = client.startSession();\n            } catch(AssertionError e) {\n                connect();\n                session = client.startSession();\n            }\n            return session;\n        } catch (Exception e) {\n            throw new ShellException(e);\n        }\n    }","commit_id":"54a03857ef52b2aa869e14e355cc40e0034253a9","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Result run(String ... cmds) {\n        Session session = null;\n        String cmd = StringUtils.join(cmds, \" \");\n        try {\n            session = client.startSession();\n            Shell.logOutput(vmName + \" $ \", cmd);\n            Command command = session.exec(cmd);\n            String msg = Shell.outputToString(vmName, command.getInputStream()) + Shell.outputToString(vmName, command.getErrorStream());\n            try {\n                int x = command.getExitStatus();\n                return new Result(x,msg,cmd);\n            } catch(NullPointerException e) { // TODO: sshj sometimes throws nullpointer on getExitStatus, find out why\n                e.printStackTrace();\n                return new Result(-1,msg,cmd);\n            }\n        } catch (Exception e) {\n            throw new ShellException(e);\n        } finally {\n            if(session != null) {\n                try {\n                    session.close();\n                } catch (Exception e) {\n                    throw new ShellException(e);\n                }\n            }\n        }\n    }","id":52184,"modified_method":"public Result run(String ... cmds) {\n        Session session = null;\n        String cmd = StringUtils.join(cmds, \" \");\n        try {\n            session = startSession();\n            Shell.logOutput(vmName + \" $ \", cmd);\n            Command command = session.exec(cmd);\n            String msg = Shell.outputToString(vmName, command.getInputStream()) + Shell.outputToString(vmName, command.getErrorStream());\n            try {\n                int x = command.getExitStatus();\n                return new Result(x,msg,cmd);\n            } catch(NullPointerException e) { // TODO: sshj sometimes throws nullpointer on getExitStatus, find out why\n                e.printStackTrace();\n                return new Result(-1,msg,cmd);\n            }\n        } catch (Exception e) {\n            throw new ShellException(e);\n        } finally {\n            if(session != null) {\n                try {\n                    session.close();\n                } catch (Exception e) {\n                    throw new ShellException(e);\n                }\n            }\n        }\n    }","commit_id":"54a03857ef52b2aa869e14e355cc40e0034253a9","url":"https://github.com/neo4j/neo4j"},{"original_method":"public SSHShell(String vmName, SSHConfig cfg) {\n        this.vmName = vmName;\n        try {\n            client = new SSHClient();\n            client.addHostKeyVerifier(ALLOW_ALL);\n            client.connect(cfg.host(), cfg.port());\n            client.authPublickey(cfg.user(), client.loadKeys(cfg.privateKeyPath()));\n        } catch (Throwable e) {\n            e.printStackTrace();\n            throw new ShellException(e);\n        }\n    }","id":52185,"modified_method":"public SSHShell(String vmName, SSHConfig config) {\n        this.vmName = vmName;\n        this.config = config;\n        connect();\n    }","commit_id":"54a03857ef52b2aa869e14e355cc40e0034253a9","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public void startZookeeperService()\n    {\n        Result r = sh.run(\"net start \" + ZOOKEEPER_SERVICE);\n        if(!r.getOutput().contains(\"service was started successfully\")) {\n            dumplog(installDir() + \"/data/log/neo4j.0.0.log\");\n            dumplog(zookeeperInstallDir() + \"/data/log/neo4j-zookeeper.log\");\n            throw new RuntimeException(\"Tried to start neo4j coordinator, failed. Output was: \\n\" + r.getOutput());\n        }\n    }","id":52186,"modified_method":"@Override\n    public void startZookeeperService()\n    {\n        Result r = sh.run(\"net start \" + ZOOKEEPER_SERVICE);\n        if(!r.getOutput().contains(\"service was started successfully\")) {\n            throw new RuntimeException(\"Tried to start neo4j coordinator [\"+vm().definition().ip()+\"], failed. Output was: \\n\" + r.getOutput());\n        }\n    }","commit_id":"54a03857ef52b2aa869e14e355cc40e0034253a9","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public void runZookeeperUninstall()\n    {\n        cygSh.run(\":> zookeeper-uninstall.log\");\n        cygSh.runDOS(\"msiexec /quiet /L* zookeeper-uninstall.log /x zookeeper.msi\");\n        if(!installIsSuccessful(\"/home/vagrant/zookeeper-uninstall.log\")){\n            dumplog(\"/home/vagrant/zookeeper-uninstall.log\");\n            dumplog(zookeeperInstallDir() + \"/data/log/neo4j-zookeeper.log\");\n            throw new RuntimeException(\"Zookeeper uninstall failed, dumped logs to stdout.\");\n        }\n    }","id":52187,"modified_method":"@Override\n    public void runZookeeperUninstall()\n    {\n        cygSh.run(\":> zookeeper-uninstall.log\");\n        cygSh.runDOS(\"msiexec /quiet /L* zookeeper-uninstall.log /x zookeeper.msi\");\n        if(!installIsSuccessful(\"/home/vagrant/zookeeper-uninstall.log\")){\n            throw new RuntimeException(\"Zookeeper uninstall failed [\"+vm().definition().ip()+\"].\");\n        }\n    }","commit_id":"54a03857ef52b2aa869e14e355cc40e0034253a9","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public void stopZookeeperService()\n    {\n        Result r = sh.run(\"net stop \" + ZOOKEEPER_SERVICE);\n        if(!r.getOutput().contains(\"service was stopped successfully\")) {\n            dumplog(installDir() + \"/data/log/neo4j.0.0.log\");\n            dumplog(zookeeperInstallDir() + \"/data/log/neo4j-zookeeper.log\");\n            throw new RuntimeException(\"Tried to stop neo4j coordinator, failed. Output was: \\n\" + r.getOutput());\n        }\n    }","id":52188,"modified_method":"@Override\n    public void stopZookeeperService()\n    {\n        Result r = sh.run(\"net stop \" + ZOOKEEPER_SERVICE);\n        if(!r.getOutput().contains(\"service was stopped successfully\")) {\n            throw new RuntimeException(\"Tried to stop neo4j coordinator [\"+vm().definition().ip()+\"], failed. Output was: \\n\" + r.getOutput());\n        }\n    }","commit_id":"54a03857ef52b2aa869e14e355cc40e0034253a9","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public void runZookeeperInstall()\n    {\n        vm.copyFromHost(zookeeperInstallerPath, \"/home/vagrant/zookeeper.msi\");\n        cygSh.run(\":> zookeeper-install.log\");\n        cygSh.runDOS(\"msiexec /quiet /L* zookeeper-install.log /i zookeeper.msi INSTALL_DIR=\\\"C:\\\\\"+ZOOKEEPER_WIN_INSTALL_DIR+\"\\\"\");\n        if(!installIsSuccessful(\"/home/vagrant/zookeeper-install.log\")){\n            dumplog(\"/home/vagrant/zookeeper-install.log\");\n            dumplog(zookeeperInstallDir() + \"/data/log/neo4j-zookeeper.log\");\n            throw new RuntimeException(\"Zookeeper install failed, dumped logs to stdout.\");\n        }\n    }","id":52189,"modified_method":"@Override\n    public void runZookeeperInstall()\n    {\n        vm.copyFromHost(zookeeperInstallerPath, \"/home/vagrant/zookeeper.msi\");\n        cygSh.run(\":> zookeeper-install.log\");\n        cygSh.runDOS(\"msiexec /quiet /L* zookeeper-install.log /i zookeeper.msi INSTALL_DIR=\\\"C:\\\\\"+ZOOKEEPER_WIN_INSTALL_DIR+\"\\\"\");\n        if(!installIsSuccessful(\"/home/vagrant/zookeeper-install.log\")){\n            throw new RuntimeException(\"Zookeeper install failed [\"+vm().definition().ip()+\"].\");\n        }\n    }","commit_id":"54a03857ef52b2aa869e14e355cc40e0034253a9","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Nullable\n  private <Connection> RunContentDescriptor startSession(@NotNull Project project,\n                                                         @Nullable RunContentDescriptor contentToReuse,\n                                                         @NotNull ExecutionEnvironment env,\n                                                         @NotNull Executor executor,\n                                                         @NotNull JstdRunConfiguration runConfiguration) throws ExecutionException {\n    JstdDebugBrowserInfo<Connection> debugBrowserInfo = JstdDebugBrowserInfo.build(runConfiguration.getRunSettings());\n    if (debugBrowserInfo == null) {\n      throw new ExecutionException(\"Can not find a browser that supports debugging.\");\n    }\n    FileDocumentManager.getInstance().saveAllDocuments();\n\n    final JSDebugEngine<Connection> debugEngine = debugBrowserInfo.getDebugEngine();\n    if (!debugEngine.prepareDebugger(project)) return null;\n\n    final String url;\n    final Connection connection = debugEngine.openConnection(false);\n    if (debugEngine.getBrowserFamily().equals(BrowsersConfiguration.BrowserFamily.CHROME)) {\n      url = \"http://localhost:\" + JstdToolWindowPanel.serverPort + debugBrowserInfo.getCapturedBrowserUrl();\n    }\n    else {\n      url = null;\n    }\n\n    JstdTestRunnerCommandLineState runState = runConfiguration.getState(env, null, true);\n    final ExecutionResult executionResult = runState.execute(executor, this);\n    debugBrowserInfo.fixIfChrome(executionResult.getProcessHandler());\n\n    File configFile = new File(runConfiguration.getRunSettings().getConfigFile());\n    JstdDebuggableFileFinderProvider fileFinderProvider = new JstdDebuggableFileFinderProvider(project, configFile);\n    final RemoteDebuggingFileFinder fileFinder = fileFinderProvider.provideFileFinder();\n\n    XDebuggerManager xDebuggerManager = XDebuggerManager.getInstance(project);\n    XDebugSession xDebugSession = xDebuggerManager.startSession(this, env, contentToReuse, new XDebugProcessStarter() {\n      @NotNull\n      public XDebugProcess start(@NotNull final XDebugSession session) {\n        JSDebugProcess debugProcess = debugEngine.createDebugProcess(session, fileFinder, connection, url, executionResult);\n        BrowserConnection browserConnection = debugProcess.getConnection();\n        browserConnection.queueRequest(new Runnable() {\n          @Override\n          public void run() {\n            resumeJstdClientRunning(executionResult.getProcessHandler());\n          }\n        });\n        return debugProcess;\n      }\n    });\n\n    return xDebugSession.getRunContentDescriptor();\n  }","id":52190,"modified_method":"@Nullable\n  private <Connection> RunContentDescriptor startSession(@NotNull Project project,\n                                                         @Nullable RunContentDescriptor contentToReuse,\n                                                         @NotNull ExecutionEnvironment env,\n                                                         @NotNull Executor executor,\n                                                         @NotNull JstdRunConfiguration runConfiguration) throws ExecutionException {\n    JstdDebugBrowserInfo<Connection> debugBrowserInfo = JstdDebugBrowserInfo.build(runConfiguration.getRunSettings());\n    if (debugBrowserInfo == null) {\n      throw new ExecutionException(\"Can not find a browser that supports debugging.\");\n    }\n    FileDocumentManager.getInstance().saveAllDocuments();\n\n    final JSDebugEngine<Connection> debugEngine = debugBrowserInfo.getDebugEngine();\n    if (!debugEngine.prepareDebugger(project)) return null;\n\n    final String url;\n    final Connection connection = debugEngine.openConnection(false);\n    if (debugEngine.getBrowserFamily().equals(BrowsersConfiguration.BrowserFamily.CHROME)) {\n      url = \"http://localhost:\" + JstdToolWindowPanel.serverPort + debugBrowserInfo.getCapturedBrowserUrl();\n    }\n    else {\n      url = null;\n    }\n\n    JstdTestRunnerCommandLineState runState = runConfiguration.getState(env, null, true);\n    final ExecutionResult executionResult = runState.execute(executor, this);\n    debugBrowserInfo.fixIfChrome(executionResult.getProcessHandler());\n\n    final RemoteDebuggingFileFinder fileFinder = new JstdDebuggableFileFinderProvider(new File(runConfiguration.getRunSettings().getConfigFile())).provideFileFinder();\n    return XDebuggerManager.getInstance(project).startSession(this, env, contentToReuse, new XDebugProcessStarter() {\n      @NotNull\n      public XDebugProcess start(@NotNull final XDebugSession session) {\n        JSDebugProcess debugProcess = debugEngine.createDebugProcess(session, fileFinder, connection, url, executionResult);\n        BrowserConnection browserConnection = debugProcess.getConnection();\n        browserConnection.queueRequest(new Runnable() {\n          @Override\n          public void run() {\n            resumeJstdClientRunning(executionResult.getProcessHandler());\n          }\n        });\n        return debugProcess;\n      }\n    }).getRunContentDescriptor();\n  }","commit_id":"9534e326be7df831fef7448602deb72dd893eae3","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"private static void addAllRemoteUrlMappings(@NotNull Collection<FileInfo> fileInfos,\n                                              @NotNull List<RemoteJavaScriptDebugConfiguration.RemoteUrlMappingBean> mappings) {\n    for (FileInfo info : fileInfos) {\n      RemoteJavaScriptDebugConfiguration.RemoteUrlMappingBean mappingBean = createMappingBean(info);\n      if (mappingBean != null) {\n        mappings.add(mappingBean);\n      }\n    }\n  }","id":52191,"modified_method":"private static void addAllRemoteUrlMappings(@NotNull Collection<FileInfo> filesInfo, @NotNull BiMap<String, VirtualFile> mappings) {\n    LocalFileSystem fileSystem = LocalFileSystem.getInstance();\n    for (FileInfo fileInfo : filesInfo) {\n      String displayPath = fileInfo.getDisplayPath();\n      File file = fileInfo.toFile();\n      if (StringUtil.isNotEmpty(displayPath) && file.isFile()) {\n        VirtualFile virtualFile = fileSystem.findFileByIoFile(file);\n        if (virtualFile != null) {\n          String remotePath = \"http://localhost:9876/test/\" + displayPath;\n          mappings.put(remotePath, virtualFile);\n        }\n      }\n    }\n  }","commit_id":"9534e326be7df831fef7448602deb72dd893eae3","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@NotNull\n  public RemoteDebuggingFileFinder provideFileFinder() throws ExecutionException {\n    List<RemoteJavaScriptDebugConfiguration.RemoteUrlMappingBean> mapping = extractMappings();\n    return new RemoteDebuggingFileFinder(mapping, false);\n  }","id":52192,"modified_method":"@NotNull\n  public RemoteDebuggingFileFinder provideFileFinder() throws ExecutionException {\n    ResolvedConfiguration resolvedConfiguration = resolveConfiguration();\n    BiMap<String, VirtualFile> mappings = HashBiMap.create();\n    addAllRemoteUrlMappings(resolvedConfiguration.getTests(), mappings);\n    addAllRemoteUrlMappings(resolvedConfiguration.getFilesList(), mappings);\n    return new RemoteDebuggingFileFinder(mappings, false);\n  }","commit_id":"9534e326be7df831fef7448602deb72dd893eae3","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@NotNull\n  private ResolvedConfiguration resolveConfiguration() throws ExecutionException {\n    VirtualFile configVirtualFile = VfsUtil.findFileByIoFile(myConfigFile, false);\n    if (configVirtualFile == null) {\n      throw new ExecutionException(\"Can not find JsTestDriver configuration file \" + myConfigFile.getAbsolutePath());\n    }\n    BasePaths dirBasePaths = new BasePaths(myConfigFile.getParentFile());\n    final byte[] content;\n    try {\n      content = configVirtualFile.contentsToByteArray();\n    }\n    catch (IOException e) {\n      throw new ExecutionException(\"Can not read JsTestDriver configuration file \" + configVirtualFile.getPath());\n    }\n    Reader reader = new InputStreamReader(new ByteArrayInputStream(content), Charset.defaultCharset());\n    try {\n      YamlParser yamlParser = new YamlParser();\n      ParsedConfiguration parsedConfiguration = (ParsedConfiguration) yamlParser.parse(reader, dirBasePaths);\n      JstdConfigParsingUtils.wipeCoveragePlugin(parsedConfiguration);\n      return JstdConfigParsingUtils.resolveConfiguration(parsedConfiguration);\n    }\n    catch (Exception e) {\n      String message = \"Malformed JsTestDriver configuration file \" + configVirtualFile.getPath();\n      LOG.warn(message, e);\n      throw new ExecutionException(message);\n    }\n    finally {\n      try {\n        reader.close();\n      }\n      catch (IOException ignored) {\n      }\n    }\n  }","id":52193,"modified_method":"@NotNull\n  private ResolvedConfiguration resolveConfiguration() throws ExecutionException {\n    VirtualFile configVirtualFile = VfsUtil.findFileByIoFile(myConfigFile, false);\n    if (configVirtualFile == null) {\n      throw new ExecutionException(\"Cannot find JsTestDriver configuration file \" + myConfigFile.getAbsolutePath());\n    }\n    BasePaths dirBasePaths = new BasePaths(myConfigFile.getParentFile());\n    final byte[] content;\n    try {\n      content = configVirtualFile.contentsToByteArray();\n    }\n    catch (IOException e) {\n      throw new ExecutionException(\"Cannot read JsTestDriver configuration file \" + configVirtualFile.getPath());\n    }\n    Reader reader = new InputStreamReader(new ByteArrayInputStream(content), Charset.defaultCharset());\n    try {\n      YamlParser yamlParser = new YamlParser();\n      ParsedConfiguration parsedConfiguration = (ParsedConfiguration) yamlParser.parse(reader, dirBasePaths);\n      JstdConfigParsingUtils.wipeCoveragePlugin(parsedConfiguration);\n      return JstdConfigParsingUtils.resolveConfiguration(parsedConfiguration);\n    }\n    catch (Exception e) {\n      String message = \"Malformed JsTestDriver configuration file \" + configVirtualFile.getPath();\n      LOG.warn(message, e);\n      throw new ExecutionException(message);\n    }\n    finally {\n      try {\n        reader.close();\n      }\n      catch (IOException ignored) {\n      }\n    }\n  }","commit_id":"9534e326be7df831fef7448602deb72dd893eae3","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public JstdDebuggableFileFinderProvider(@NotNull Project project, @NotNull File configFile) {\n    myProject = project;\n    myConfigFile = configFile;\n  }","id":52194,"modified_method":"public JstdDebuggableFileFinderProvider(@NotNull File configFile) {\n    myConfigFile = configFile;\n  }","commit_id":"9534e326be7df831fef7448602deb72dd893eae3","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public AmberPrison(UUID ownerId) {\n        super(ownerId, 257, \"Amber Prison\", Rarity.RARE, new CardType[]{CardType.ARTIFACT}, \"{4}\");\n        this.expansionSetCode = \"MIR\";\n\n        // You may choose not to untap Amber Prison during your untap step.\n        this.addAbility(new SkipUntapOptionalAbility());\n\n        // {4}, {tap}: Tap target artifact, creature, or land. That permanent doesn't untap during its controller's untap step for as long as Amber Prison remains tapped.\n        Ability ability = new SimpleActivatedAbility(Zone.BATTLEFIELD, new AmberPrisonTapTargetEffect(), new GenericManaCost(4));\n        ability.addCost(new TapSourceCost());\n        ability.addTarget(new TargetPermanent(filter));\n        this.addAbility(ability);\n        this.addAbility(new AmberPrisonUntapTriggeredAbility());\n        this.addAbility(new SimpleStaticAbility(Zone.BATTLEFIELD, new AmberPrisonRestrictionEffect()));\n    }","id":52195,"modified_method":"public AmberPrison(UUID ownerId) {\n        super(ownerId, 257, \"Amber Prison\", Rarity.RARE, new CardType[]{CardType.ARTIFACT}, \"{4}\");\n        this.expansionSetCode = \"MIR\";\n\n        // You may choose not to untap Amber Prison during your untap step.\n        this.addAbility(new SkipUntapOptionalAbility());\n\n        // {4}, {tap}: Tap target artifact, creature, or land. That permanent doesn't untap during its controller's untap step for as long as Amber Prison remains tapped.\n        Ability ability = new SimpleActivatedAbility(Zone.BATTLEFIELD, new TapTargetEffect(true), new GenericManaCost(4));\n        ability.addCost(new TapSourceCost());\n        ability.addTarget(new TargetPermanent(filter));\n        ability.addEffect(new DontUntapAsLongAsSourceTappedEffect());\n        this.addAbility(ability);\n    }","commit_id":"82f2d73fb9978a2373f384c064c3cf4543d8e8f7","url":"https://github.com/magefree/mage"},{"original_method":"public DesertersQuarters(UUID ownerId) {\r\n        super(ownerId, 160, \"Deserter's Quarters\", Rarity.UNCOMMON, new CardType[]{CardType.ARTIFACT}, \"{2}\");\r\n        this.expansionSetCode = \"JOU\";\r\n\r\n        // You may choose not to untap Deserter's Quarters during your untap step.\r\n        this.addAbility(new SkipUntapOptionalAbility());\r\n\r\n        // {6}, T: Tap target creature. It doesn't untap during its controller's untap step for as long as Deserter's Quarters remains tapped.\r\n        Ability ability = new SimpleActivatedAbility(Zone.BATTLEFIELD, new DesertersQuartersTapTargetEffect(), new GenericManaCost(6));\r\n        ability.addCost(new TapSourceCost());\r\n        ability.addTarget(new TargetCreaturePermanent());\r\n        this.addAbility(ability);\r\n\r\n        this.addAbility(new SimpleStaticAbility(Zone.BATTLEFIELD, new DesertersQuartersRestrictionEffect()));\r\n    }","id":52196,"modified_method":"public DesertersQuarters(UUID ownerId) {\r\n        super(ownerId, 160, \"Deserter's Quarters\", Rarity.UNCOMMON, new CardType[]{CardType.ARTIFACT}, \"{2}\");\r\n        this.expansionSetCode = \"JOU\";\r\n\r\n        // You may choose not to untap Deserter's Quarters during your untap step.\r\n        this.addAbility(new SkipUntapOptionalAbility());\r\n\r\n        // {6}, T: Tap target creature. It doesn't untap during its controller's untap step for as long as Deserter's Quarters remains tapped.\r\n        Ability ability = new SimpleActivatedAbility(Zone.BATTLEFIELD, new TapTargetEffect(true), new GenericManaCost(6));\r\n        ability.addCost(new TapSourceCost());\r\n        ability.addTarget(new TargetCreaturePermanent());\r\n        ability.addEffect(new DontUntapAsLongAsSourceTappedEffect());\r\n        this.addAbility(ability);\r\n    }","commit_id":"82f2d73fb9978a2373f384c064c3cf4543d8e8f7","url":"https://github.com/magefree/mage"},{"original_method":"public RustTick(UUID ownerId) {\r\n        super(ownerId, 198, \"Rust Tick\", Rarity.UNCOMMON, new CardType[]{CardType.ARTIFACT, CardType.CREATURE}, \"{3}\");\r\n        this.expansionSetCode = \"SOM\";\r\n        this.subtype.add(\"Insect\");\r\n\r\n        this.power = new MageInt(1);\r\n        this.toughness = new MageInt(3);\r\n\r\n        // You may choose not to untap Rust Tick during your untap step.\r\n        this.addAbility(new SkipUntapOptionalAbility());\r\n\r\n        // {1}, {tap}: Tap target artifact. It doesn't untap during its controller's untap step for as long as Rust Tick remains tapped.\r\n        Ability ability = new SimpleActivatedAbility(Zone.BATTLEFIELD, new RustTickTapTargetEffect(), new GenericManaCost(1));\r\n        ability.addCost(new TapSourceCost());\r\n        ability.addTarget(new TargetArtifactPermanent());\r\n        this.addAbility(ability);\r\n\r\n        this.addAbility(new SimpleStaticAbility(Zone.BATTLEFIELD, new RustTickRestrictionEffect()));\r\n    }","id":52197,"modified_method":"public RustTick(UUID ownerId) {\r\n        super(ownerId, 198, \"Rust Tick\", Rarity.UNCOMMON, new CardType[]{CardType.ARTIFACT, CardType.CREATURE}, \"{3}\");\r\n        this.expansionSetCode = \"SOM\";\r\n        this.subtype.add(\"Insect\");\r\n\r\n        this.power = new MageInt(1);\r\n        this.toughness = new MageInt(3);\r\n\r\n        // You may choose not to untap Rust Tick during your untap step.\r\n        this.addAbility(new SkipUntapOptionalAbility());\r\n\r\n        // {1}, {tap}: Tap target artifact. It doesn't untap during its controller's untap step for as long as Rust Tick remains tapped.\r\n        Ability ability = new SimpleActivatedAbility(Zone.BATTLEFIELD, new TapTargetEffect(true), new GenericManaCost(1));\r\n        ability.addCost(new TapSourceCost());\r\n        ability.addTarget(new TargetArtifactPermanent());\r\n        ability.addEffect(new DontUntapAsLongAsSourceTappedEffect());\r\n        this.addAbility(ability);\r\n    }","commit_id":"82f2d73fb9978a2373f384c064c3cf4543d8e8f7","url":"https://github.com/magefree/mage"},{"original_method":"public TapTargetEffect(String text) {\n        this();\n        this.staticText = text;\n    }","id":52198,"modified_method":"public TapTargetEffect(String text) {\n        this(text, false);\n    }","commit_id":"82f2d73fb9978a2373f384c064c3cf4543d8e8f7","url":"https://github.com/magefree/mage"},{"original_method":"public TapTargetEffect() {\n        super(Outcome.Tap);\n    }","id":52199,"modified_method":"public TapTargetEffect() {\n        this(null, false);\n    }","commit_id":"82f2d73fb9978a2373f384c064c3cf4543d8e8f7","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n    public boolean apply(Game game, Ability source) {\n        for (UUID target : targetPointer.getTargets(game, source)) {\n            Permanent permanent = game.getPermanent(target);\n            if (permanent != null) {\n                permanent.tap(game);\n            }\n        }\n        return true;\n    }","id":52200,"modified_method":"@Override\n    public boolean apply(Game game, Ability source) {\n        for (UUID target : targetPointer.getTargets(game, source)) {\n            Permanent permanent = game.getPermanent(target);\n            if (permanent != null) {\n                permanent.tap(game);\n                if(connectSource) {\n                    Permanent sourcePermanent = game.getPermanent(source.getSourceId());\n                    if(sourcePermanent != null) {\n                        sourcePermanent.addConnectedCard(sourcePermanent.getName(), permanent.getId());\n                    }\n                }\n            }\n        }\n        return true;\n    }","commit_id":"82f2d73fb9978a2373f384c064c3cf4543d8e8f7","url":"https://github.com/magefree/mage"},{"original_method":"public TapTargetEffect(final TapTargetEffect effect) {\n        super(effect);\n    }","id":52201,"modified_method":"public TapTargetEffect(final TapTargetEffect effect) {\n        super(effect);\n        this.connectSource = effect.connectSource;\n    }","commit_id":"82f2d73fb9978a2373f384c064c3cf4543d8e8f7","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n\tpublic boolean apply(Game game, Ability source) {\r\n\t\tPlayer player = game.getPlayer(source.getFirstTarget());\r\n\t\tif (player != null) {\r\n\t\t\tplayer.revealCards(\"Distress\", player.getHand(), game);\r\n\t\t\tPlayer you = game.getPlayer(source.getControllerId());\r\n\t\t\tif (you != null) {\r\n\t\t\t\tTargetCard target = new TargetCard(Constants.Zone.PICK, filter);\r\n\t\t\t\ttarget.setRequired(true);\r\n\t\t\t\tif (you.choose(Constants.Outcome.Benefit, player.getHand(), target, game)) {\r\n\t\t\t\t\tCard card = player.getHand().get(target.getFirstTarget(), game);\r\n\t\t\t\t\tif (card != null) {\r\n\t\t\t\t\t\treturn player.discard(card, source, game);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}","id":52202,"modified_method":"@Override\r\n\tpublic boolean apply(Game game, Ability source) {\r\n\t\tPlayer player = game.getPlayer(source.getFirstTarget());\r\n\t\tif (player != null) {\r\n\t\t\tplayer.revealCards(\"Distress\", player.getHand(), game);\r\n\t\t\tPlayer you = game.getPlayer(source.getControllerId());\r\n\t\t\tif (you != null) {\r\n\t\t\t\tTargetCard target = new TargetCard(Constants.Zone.PICK, filter);\r\n\t\t\t\ttarget.setRequired(true);\r\n\t\t\t\tif (you.choose(Constants.Outcome.Benefit, player.getHand(), target, game)) {\r\n\t\t\t\t\tCard card = player.getHand().get(target.getFirstTarget(), game);\r\n\t\t\t\t\tif (card != null) {\r\n\t\t\t\t\t\treturn player.discard(card, source, game);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}","commit_id":"3c8d43d609102e59ee8ad9aee8c84f4052699428","url":"https://github.com/magefree/mage"},{"original_method":"public FilterNonlandCard() {\n\t\tthis(\"non-land card\");\n\t}","id":52203,"modified_method":"public FilterNonlandCard() {\n\t\tthis(\"nonland card\");\n\t}","commit_id":"3c8d43d609102e59ee8ad9aee8c84f4052699428","url":"https://github.com/magefree/mage"},{"original_method":"public LuminousAngel(UUID ownerId) {\r\n        super(ownerId, 15, \"Luminous Angel\", Rarity.RARE, new CardType[]{CardType.CREATURE}, \"{4}{W}{W}{W}\");\r\n        this.expansionSetCode = \"MRD\";\r\n        this.subtype.add(\"Angel\");\r\n        this.color.setWhite(true);\r\n        this.power = new MageInt(4);\r\n        this.toughness = new MageInt(4);\r\n        this.addAbility(FlyingAbility.getInstance());\r\n        this.addAbility(new BeginningOfUpkeepTriggeredAbility(new CreateTokenEffect(new SpiritToken(), 1), Constants.TargetController.YOU, true));\r\n    }","id":52204,"modified_method":"public LuminousAngel(UUID ownerId) {\r\n        super(ownerId, 15, \"Luminous Angel\", Rarity.RARE, new CardType[]{CardType.CREATURE}, \"{4}{W}{W}{W}\");\r\n        this.expansionSetCode = \"MRD\";\r\n        this.subtype.add(\"Angel\");\r\n        this.color.setWhite(true);\r\n        this.power = new MageInt(4);\r\n        this.toughness = new MageInt(4);\r\n        this.addAbility(FlyingAbility.getInstance());\r\n        this.addAbility(new BeginningOfUpkeepTriggeredAbility(new CreateTokenEffect(new SpiritWhiteToken(), 1), Constants.TargetController.YOU, true));\r\n    }","commit_id":"3c8d43d609102e59ee8ad9aee8c84f4052699428","url":"https://github.com/magefree/mage"},{"original_method":"public NimbusWings (UUID ownerId) {\r\n        super(ownerId, 28, \"Nimbus Wings\", Rarity.COMMON, new CardType[]{CardType.ENCHANTMENT}, \"{1}{W}\");\r\n        this.expansionSetCode = \"ZEN\";\r\n        this.subtype.add(\"Aura\");\r\n        this.color.setWhite(true);\r\n\r\n        TargetPermanent auraTarget = new TargetCreaturePermanent();\r\n        this.getSpellAbility().addTarget(auraTarget);\r\n        this.getSpellAbility().addEffect(new AttachEffect(Constants.Outcome.Detriment));\r\n        Ability ability = new EnchantAbility(auraTarget.getTargetName());\r\n        this.addAbility(ability);\r\n        this.addAbility(new SimpleStaticAbility(Zone.BATTLEFIELD, new NimbusWingsEffect()));\r\n    }","id":52205,"modified_method":"public NimbusWings (UUID ownerId) {\r\n        super(ownerId, 28, \"Nimbus Wings\", Rarity.COMMON, new CardType[]{CardType.ENCHANTMENT}, \"{1}{W}\");\r\n        this.expansionSetCode = \"ZEN\";\r\n        this.subtype.add(\"Aura\");\r\n        this.color.setWhite(true);\r\n\r\n        // Enchant creature\r\n        TargetPermanent auraTarget = new TargetCreaturePermanent();\r\n        this.getSpellAbility().addTarget(auraTarget);\r\n        this.getSpellAbility().addEffect(new AttachEffect(Outcome.BoostCreature));\r\n        this.addAbility(new EnchantAbility(auraTarget.getTargetName()));\r\n        // Enchanted creature gets +1/+2 and has flying.\r\n        SimpleStaticAbility ability = new SimpleStaticAbility(Zone.BATTLEFIELD, new BoostEnchantedEffect(1, 2, Duration.WhileOnBattlefield));\r\n        ability.addEffect(new GainAbilityAttachedEffect(new AttacksEachTurnStaticAbility(), AttachmentType.AURA));\r\n        this.addAbility(ability);\r\n    }","commit_id":"3c8d43d609102e59ee8ad9aee8c84f4052699428","url":"https://github.com/magefree/mage"},{"original_method":"public SpectralProcession(UUID ownerId) {\r\n        super(ownerId, 23, \"Spectral Procession\", Rarity.UNCOMMON, new CardType[]{CardType.SORCERY}, \"{2/W}{2/W}{2/W}\");\r\n        this.expansionSetCode = \"SHM\";\r\n\r\n        this.color.setWhite(true);\r\n\r\n        // Put three 1/1 white Spirit creature tokens with flying onto the battlefield.\r\n        this.getSpellAbility().addEffect(new CreateTokenEffect(new SpiritToken(), 3));\r\n    }","id":52206,"modified_method":"public SpectralProcession(UUID ownerId) {\r\n        super(ownerId, 23, \"Spectral Procession\", Rarity.UNCOMMON, new CardType[]{CardType.SORCERY}, \"{2/W}{2/W}{2/W}\");\r\n        this.expansionSetCode = \"SHM\";\r\n\r\n        this.color.setWhite(true);\r\n\r\n        // Put three 1/1 white Spirit creature tokens with flying onto the battlefield.\r\n        this.getSpellAbility().addEffect(new CreateTokenEffect(new SpiritWhiteToken(), 3));\r\n    }","commit_id":"3c8d43d609102e59ee8ad9aee8c84f4052699428","url":"https://github.com/magefree/mage"},{"original_method":"public ArmoredAscension(UUID ownerId) {\n\t\tsuper(ownerId, 3, \"Armored Ascension\", Rarity.UNCOMMON, new CardType[]{CardType.ENCHANTMENT}, \"{3}{W}\");\n\t\tthis.expansionSetCode = \"M10\";\n\t\tthis.color.setWhite(true);\n\t\tthis.subtype.add(\"Aura\");\n\n\t\tTargetPermanent auraTarget = new TargetCreaturePermanent();\n\t\tthis.getSpellAbility().addTarget(auraTarget);\n\t\tthis.getSpellAbility().addEffect(new AttachEffect(Outcome.BoostCreature));\n\t\tAbility ability = new EnchantAbility(auraTarget.getTargetName());\n\t\tthis.addAbility(ability);\n\t\tthis.addAbility(new SimpleStaticAbility(Zone.BATTLEFIELD, new ArmoredAscensionEffect()));\n\n\t}","id":52207,"modified_method":"public ArmoredAscension(UUID ownerId) {\n        super(ownerId, 3, \"Armored Ascension\", Rarity.UNCOMMON, new CardType[]{CardType.ENCHANTMENT}, \"{3}{W}\");\n        this.expansionSetCode = \"M10\";\n        this.color.setWhite(true);\n        this.subtype.add(\"Aura\");\n\n        TargetPermanent auraTarget = new TargetCreaturePermanent();\n        this.getSpellAbility().addTarget(auraTarget);\n        this.getSpellAbility().addEffect(new AttachEffect(Outcome.BoostCreature));\n        this.addAbility(new EnchantAbility(auraTarget.getTargetName()));\n        \n        PermanentsOnBattlefieldCount amount = new PermanentsOnBattlefieldCount(filter, 1);\n        SimpleStaticAbility ability = new SimpleStaticAbility(Zone.BATTLEFIELD, new BoostEnchantedEffect(amount, amount, Duration.WhileOnBattlefield));\n        ability.addEffect(new GainAbilityAttachedEffect(FlyingAbility.getInstance(), AttachmentType.AURA));\n        this.addAbility(ability);\n    }","commit_id":"f2f46ae9a9c7f6323ae90821b5a132cfc6d41dd9","url":"https://github.com/magefree/mage"},{"original_method":"public QuagSickness(UUID ownerId) {\n\t\tsuper(ownerId, 111, \"Quag Sickness\", Rarity.COMMON, new CardType[]{CardType.ENCHANTMENT}, \"{2}{B}\");\n\t\tthis.expansionSetCode = \"M11\";\n\t\tthis.color.setBlack(true);\n\t\tthis.subtype.add(\"Aura\");\n\n\t\tTargetPermanent auraTarget = new TargetCreaturePermanent();\n\t\tthis.getSpellAbility().addTarget(auraTarget);\n\t\tthis.getSpellAbility().addEffect(new AttachEffect(Outcome.Detriment));\n\t\tAbility ability = new EnchantAbility(auraTarget.getTargetName());\n\t\tthis.addAbility(ability);\n\t\tthis.addAbility(new SimpleStaticAbility(Zone.BATTLEFIELD, new QuagSicknessEffect()));\n\n\t}","id":52208,"modified_method":"public QuagSickness(UUID ownerId) {\n\t\tsuper(ownerId, 111, \"Quag Sickness\", Rarity.COMMON, new CardType[]{CardType.ENCHANTMENT}, \"{2}{B}\");\n\t\tthis.expansionSetCode = \"M11\";\n\t\tthis.color.setBlack(true);\n\t\tthis.subtype.add(\"Aura\");\n\n\t\tTargetPermanent auraTarget = new TargetCreaturePermanent();\n\t\tthis.getSpellAbility().addTarget(auraTarget);\n\t\tthis.getSpellAbility().addEffect(new AttachEffect(Outcome.Detriment));\n\t\tthis.addAbility(new EnchantAbility(auraTarget.getTargetName()));\n\n        PermanentsOnBattlefieldCount amount = new PermanentsOnBattlefieldCount(filter, -1);\n\t\tthis.addAbility(new SimpleStaticAbility(Zone.BATTLEFIELD, new BoostEnchantedEffect(amount, amount, Duration.WhileOnBattlefield)));\n\n\t}","commit_id":"f2f46ae9a9c7f6323ae90821b5a132cfc6d41dd9","url":"https://github.com/magefree/mage"},{"original_method":"public SavageHunger (UUID ownerId) {\r\n        super(ownerId, 147, \"Savage Hunger\", Rarity.COMMON, new CardType[]{CardType.ENCHANTMENT}, \"{2}{G}\");\r\n        this.expansionSetCode = \"ALA\";\r\n        this.subtype.add(\"Aura\");\r\n\t\tthis.color.setGreen(true);\r\n\r\n        TargetPermanent auraTarget = new TargetCreaturePermanent();\r\n\t\tthis.getSpellAbility().addTarget(auraTarget);\r\n\t\tthis.getSpellAbility().addEffect(new AttachEffect(Constants.Outcome.BoostCreature));\r\n\t\tAbility ability = new EnchantAbility(auraTarget.getTargetName());\r\n\t\tthis.addAbility(ability);\r\n\r\n        this.addAbility(new SimpleStaticAbility(Zone.BATTLEFIELD, new BoostEnchantedEffect(1, 0, Duration.WhileOnBattlefield)));\r\n        this.addAbility(new SimpleStaticAbility(Zone.BATTLEFIELD, new GainAbilityAttachedEffect(TrampleAbility.getInstance(), Constants.AttachmentType.AURA)));\r\n        this.addAbility(new CyclingAbility(new ManaCostsImpl(\"{2}\")));\r\n    }","id":52209,"modified_method":"public SavageHunger (UUID ownerId) {\r\n        super(ownerId, 147, \"Savage Hunger\", Rarity.COMMON, new CardType[]{CardType.ENCHANTMENT}, \"{2}{G}\");\r\n        this.expansionSetCode = \"ALA\";\r\n        this.subtype.add(\"Aura\");\r\n\t\tthis.color.setGreen(true);\r\n\r\n        TargetPermanent auraTarget = new TargetCreaturePermanent();\r\n\t\tthis.getSpellAbility().addTarget(auraTarget);\r\n\t\tthis.getSpellAbility().addEffect(new AttachEffect(Constants.Outcome.BoostCreature));\r\n\t\tthis.addAbility(new EnchantAbility(auraTarget.getTargetName()));\r\n\r\n        SimpleStaticAbility ability = new SimpleStaticAbility(Zone.BATTLEFIELD, new BoostEnchantedEffect(1, 0, Duration.WhileOnBattlefield));\r\n        ability.addEffect(new GainAbilityAttachedEffect(TrampleAbility.getInstance(), Constants.AttachmentType.AURA));\r\n        this.addAbility(ability);\r\n        this.addAbility(new CyclingAbility(new ManaCostsImpl(\"{2}\")));\r\n    }","commit_id":"f2f46ae9a9c7f6323ae90821b5a132cfc6d41dd9","url":"https://github.com/magefree/mage"},{"original_method":"@SuppressWarnings(\"unchecked\")\n   public Activity findActivity(long personId, EntityType contextType, long contextId, ActivityType actionType, Date approxTime)\n   {\n      Query query = getSession().createQuery(\"FROM Activity a WHERE a.actor.id = :personId \"\n            + \"AND a.contextId = :contextId \"\n            + \"AND a.actionType = :actionType \"\n            + \"AND a.contextType = :contextType \"\n            + \"AND :approxTime = a.approxTime\");\n      query.setParameter(\"personId\", personId);\n      query.setParameter(\"contextId\", contextId);\n      query.setParameter(\"actionType\", actionType);\n      query.setParameter(\"contextType\", contextType);\n      query.setTimestamp(\"approxTime\", approxTime); \n      query.setCacheable(true);\n      query.setComment(\"PersonActivitiesDAO.findActivity\");\n      return (Activity) query.uniqueResult();\n   }","id":52210,"modified_method":"@SuppressWarnings(\"unchecked\")\n   public Activity findActivity(long personId, EntityType contextType, long contextId, ActivityType actionType, Date approxTime)\n   {\n      Query query = getSession().createQuery(\"FROM Activity a WHERE a.actor.id = :personId \"\n            + \"AND a.contextId = :contextId \"\n            + \"AND a.actionType = :actionType \"\n            + \"AND a.contextType = :contextType \"\n            + \"AND :approxTime = a.approxTime\");\n      query.setParameter(\"personId\", personId);\n      query.setParameter(\"contextId\", contextId);\n      query.setParameter(\"actionType\", actionType);\n      query.setParameter(\"contextType\", contextType);\n      query.setTimestamp(\"approxTime\", approxTime);\n      query.setCacheable(true);\n      query.setComment(\"activityDAO.findActivity\");\n      return (Activity) query.uniqueResult();\n   }","commit_id":"464b7d4e2c8e91ff9ace8a31272d6b386d014f50","url":"https://github.com/zanata/zanata-server"},{"original_method":"public List<Activity> findLatestActivities(long personId, int offset, int maxResults)\n   {\n      Query query = getSession().createQuery(\"FROM Activity a WHERE a.actor.id = :personId \"\n            + \"order by a.approxTime DESC\");\n      query.setParameter(\"personId\", personId);\n      query.setMaxResults(maxResults);\n      query.setFirstResult(offset);\n      query.setCacheable(true);\n      query.setComment(\"PersonActivitiesDAO.getRecentUserActivities\");\n      return query.list();\n   }","id":52211,"modified_method":"public List<Activity> findLatestActivities(long personId, int offset, int maxResults)\n   {\n      Query query = getSession().createQuery(\"FROM Activity a WHERE a.actor.id = :personId \"\n            + \"order by a.lastChanged DESC\");\n      query.setParameter(\"personId\", personId);\n      query.setMaxResults(maxResults);\n      query.setFirstResult(offset);\n      query.setCacheable(true);\n      query.setComment(\"activityDAO.findLatestActivities\");\n      return query.list();\n   }","commit_id":"464b7d4e2c8e91ff9ace8a31272d6b386d014f50","url":"https://github.com/zanata/zanata-server"},{"original_method":"@SuppressWarnings(\"unchecked\")\n   public List<Activity> findActivities(long personId, long contextId, int offset, int maxResults)\n   {\n      Query query = getSession().createQuery(\"FROM Activity a WHERE a.actor.id = :personId \"\n            + \"AND a.contextId = :contextId \"\n            + \"order by a.approxTime DESC\");\n      query.setParameter(\"personId\", personId);\n      query.setParameter(\"contextId\", contextId);\n      query.setMaxResults(maxResults);\n      query.setFirstResult(offset);\n      query.setCacheable(true);\n      query.setComment(\"PersonActivitiesDAO.findAllUserActivities\");\n      return query.list();\n   }","id":52212,"modified_method":"@SuppressWarnings(\"unchecked\")\n   public List<Activity> findActivities(long personId, long contextId, int offset, int maxResults)\n   {\n      Query query = getSession().createQuery(\"FROM Activity a WHERE a.actor.id = :personId \"\n            + \"AND a.contextId = :contextId \"\n            + \"order by a.lastChanged DESC\");\n      query.setParameter(\"personId\", personId);\n      query.setParameter(\"contextId\", contextId);\n      query.setMaxResults(maxResults);\n      query.setFirstResult(offset);\n      query.setCacheable(true);\n      query.setComment(\"activityDAO.findActivities\");\n      return query.list();\n   }","commit_id":"464b7d4e2c8e91ff9ace8a31272d6b386d014f50","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Override\n   public List<Activity> findLatestActivities(long personId, int offset, int maxResults)\n   {\n      return activityDAO.findLatestActivities(personId, offset, maxResults);\n   }","id":52213,"modified_method":"@Override\n   public List<Activity> findLatestActivities(long personId, int offset, int maxResults)\n   {\n      List<Activity> result = activityDAO.findLatestActivities(personId, offset, maxResults);\n      Collections.sort(result, activityComparator);\n      return result;\n   }","commit_id":"464b7d4e2c8e91ff9ace8a31272d6b386d014f50","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Override\n   public List<Activity> findActivities(long personId, long contextId, int offset, int maxResults)\n   {\n      return activityDAO.findActivities(personId, contextId, offset, maxResults);\n   }","id":52214,"modified_method":"@Override\n   public List<Activity> findActivities(long personId, long contextId, int offset, int maxResults)\n   {\n      List<Activity> result = activityDAO.findActivities(personId, contextId, offset, maxResults);\n      Collections.sort(result, activityComparator);\n      return result;\n   }","commit_id":"464b7d4e2c8e91ff9ace8a31272d6b386d014f50","url":"https://github.com/zanata/zanata-server"},{"original_method":"@CachedMethodResult\n   public String getTime(Activity activity)\n   {\n      Date then = DateUtils.addMilliseconds(activity.getApproxTime(), (int) activity.getEndOffsetMillis());\n\n      return DateUtil.getReadableTime(now, then);\n   }","id":52215,"modified_method":"@CachedMethodResult\n   public String getTime(Activity activity)\n   {\n      return DateUtil.getReadableTime(now, activity.getEndDate());\n   }","commit_id":"464b7d4e2c8e91ff9ace8a31272d6b386d014f50","url":"https://github.com/zanata/zanata-server"},{"original_method":"public boolean hasMoreActivities()\n   {\n      return false;\n   }","id":52216,"modified_method":"public boolean hasMoreActivities()\n   {\n      int loadedActivitiesCount = (activityPageIndex + 1) * ACTIVITY_COUNT_PER_LOAD;\n      int totalActivitiesCount = activityServiceImpl.getActivityCountByActor(authenticatedAccount.getPerson().getId());\n\n      if ((loadedActivitiesCount < totalActivitiesCount) && (loadedActivitiesCount < MAX_ACTIVITY_COUNT_PER_PAGE))\n      {\n         return true;\n      }\n      return false;\n   }","commit_id":"464b7d4e2c8e91ff9ace8a31272d6b386d014f50","url":"https://github.com/zanata/zanata-server"},{"original_method":"@CachedMethodResult\n   public String getTrimmedContent(Activity activity)\n   {\n      String wrappedContent = \"\";\n      Object lastTarget = getEntity(activity.getLastTargetType(), activity.getLastTargetId());\n\n      if (isTranslationUpdateActivity(activity.getActionType()))\n      {\n         HTextFlowTarget tft = (HTextFlowTarget) lastTarget;\n         wrappedContent = tft.getContents().get(0);\n      }\n      else if (activity.getActionType() == ActivityType.UPLOAD_SOURCE_DOCUMENT)\n      {\n         //not supported for upload source action\n      }\n      else if (activity.getActionType() == ActivityType.UPLOAD_TRANSLATION_DOCUMENT)\n      {\n         HDocument document = (HDocument) lastTarget;\n         HTextFlowTarget tft = documentDAO.getLastTranslatedTarget(document.getId());\n         wrappedContent = tft.getContents().get(0);\n      }\n\n      return trimString(wrappedContent);\n   }","id":52217,"modified_method":"@CachedMethodResult\n   public String getLastTargetContent(Activity activity)\n   {\n      String content = \"\";\n      Object lastTarget = getEntity(activity.getLastTargetType(), activity.getLastTargetId());\n\n      if (isTranslationUpdateActivity(activity.getActionType()))\n      {\n         HTextFlowTarget tft = (HTextFlowTarget) lastTarget;\n         content = tft.getTextFlow().getContents().get(0);\n      }\n      else if (activity.getActionType() == ActivityType.UPLOAD_SOURCE_DOCUMENT)\n      {\n         //not supported for upload source action\n      }\n      else if (activity.getActionType() == ActivityType.UPLOAD_TRANSLATION_DOCUMENT)\n      {\n         HDocument document = (HDocument) lastTarget;\n         HTextFlowTarget tft = documentDAO.getLastTranslatedTarget(document.getId());\n         content = tft.getTextFlow().getContents().get(0);\n      }\n\n      return trimString(content);\n   }","commit_id":"464b7d4e2c8e91ff9ace8a31272d6b386d014f50","url":"https://github.com/zanata/zanata-server"},{"original_method":"public List<Activity> getActivities()\n   {\n      if ((activityPageIndex * ACTIVITY_COUNT_PER_PAGE) <= MAX_ACTIVITY_COUNT_PER_PAGE)\n      {\n         activityList.addAll(activityServiceImpl.findLatestActivities(authenticatedAccount.getPerson().getId(), activityPageIndex,\n               ACTIVITY_COUNT_PER_PAGE));\n      }\n      return activityList;\n   }","id":52218,"modified_method":"@CachedMethodResult\n   public List<Activity> getActivities()\n   {\n      int count = (activityPageIndex + 1) * ACTIVITY_COUNT_PER_LOAD;\n      return activityServiceImpl.findLatestActivities(authenticatedAccount.getPerson().getId(), 0,\n            count);\n   }","commit_id":"464b7d4e2c8e91ff9ace8a31272d6b386d014f50","url":"https://github.com/zanata/zanata-server"},{"original_method":"public List<Activity> getActivities() {\n        List<Activity> activities = new ArrayList<Activity>();\n\n        if (authenticatedAccount != null) {\n            int count = (activityPageIndex + 1) * ACTIVITY_COUNT_PER_LOAD;\n            activities =\n                    activityServiceImpl.findLatestActivities(\n                            authenticatedAccount.getPerson().getId(), 0, count);\n        }\n        return activities;\n    }","id":52219,"modified_method":"public List<Activity> getActivities() {\n        if (authenticatedAccount != null) {\n            int count = (activityPageIndex + 1) * ACTIVITY_COUNT_PER_LOAD;\n            return activityServiceImpl.findLatestActivities(\n                            authenticatedAccount.getPerson().getId(), 0, count);\n        }\n        return Collections.emptyList();\n    }","commit_id":"0682460404a44efa37ecb81acf68c2fe3875f222","url":"https://github.com/zanata/zanata-server"},{"original_method":"public boolean hasMoreActivities() {\n        int loadedActivitiesCount =\n                (activityPageIndex + 1) * ACTIVITY_COUNT_PER_LOAD;\n        int totalActivitiesCount =\n                activityServiceImpl\n                        .getActivityCountByActor(authenticatedAccount\n                                .getPerson().getId());\n\n        if ((loadedActivitiesCount < totalActivitiesCount)\n                && (loadedActivitiesCount < MAX_ACTIVITIES_COUNT_PER_PAGE)) {\n            return true;\n        }\n        return false;\n    }","id":52220,"modified_method":"public boolean hasMoreActivities() {\n        int loadedActivitiesCount =\n                (activityPageIndex + 1) * ACTIVITY_COUNT_PER_LOAD;\n        int totalActivitiesCount = activityServiceImpl\n                        .getActivityCountByActor(authenticatedAccount\n                                .getPerson().getId());\n\n        return ((loadedActivitiesCount < totalActivitiesCount)\n                && (loadedActivitiesCount < MAX_ACTIVITIES_COUNT_PER_PAGE));\n    }","commit_id":"0682460404a44efa37ecb81acf68c2fe3875f222","url":"https://github.com/zanata/zanata-server"},{"original_method":"public String getVersionUrl(Activity activity) {\n        Object context =\n                getEntity(activity.getContextType(), activity.getContextId());\n\n        if (isTranslationUpdateActivity(activity.getActivityType())\n                || activity.getActivityType() == ActivityType.UPLOAD_SOURCE_DOCUMENT\n                || activity.getActivityType() == ActivityType.UPLOAD_TRANSLATION_DOCUMENT) {\n            HProjectIteration version = (HProjectIteration) context;\n            return urlUtil.versionUrl(version.getProject().getSlug(),\n                    version.getSlug());\n        }\n        return \"\";\n    }","id":52221,"modified_method":"public String getVersionUrl(Activity activity) {\n        Object context =\n            getEntity(activity.getContextType(), activity.getContextId());\n        String url = \"\";\n\n        if (isTranslationUpdateActivity(activity.getActivityType())\n            || activity.getActivityType() == UPLOAD_SOURCE_DOCUMENT\n            || activity.getActivityType() == UPLOAD_TRANSLATION_DOCUMENT) {\n            HProjectIteration version = (HProjectIteration) context;\n            url =\n                urlUtil.versionUrl(version.getProject().getSlug(),\n                    version.getSlug());\n        }\n\n        return url;\n    }","commit_id":"0682460404a44efa37ecb81acf68c2fe3875f222","url":"https://github.com/zanata/zanata-server"},{"original_method":"public String getDocumentUrl(Activity activity) {\n        Object context =\n                getEntity(activity.getContextType(), activity.getContextId());\n        Object lastTarget =\n                getEntity(activity.getLastTargetType(),\n                        activity.getLastTargetId());\n\n        if (isTranslationUpdateActivity(activity.getActivityType())) {\n            HProjectIteration version = (HProjectIteration) context;\n            HTextFlowTarget tft = (HTextFlowTarget) lastTarget;\n\n            return urlUtil.editorDocumentUrl(version.getProject().getSlug(),\n                    version.getSlug(), tft.getLocaleId(), tft.getTextFlow()\n                            .getLocale(), tft.getTextFlow().getDocument()\n                            .getDocId());\n        } else if (activity.getActivityType() == ActivityType.UPLOAD_SOURCE_DOCUMENT) {\n            HProjectIteration version = (HProjectIteration) context;\n            return urlUtil.sourceFilesViewUrl(version.getProject().getSlug(),\n                    version.getSlug());\n        } else if (activity.getActivityType() == ActivityType.UPLOAD_TRANSLATION_DOCUMENT) {\n            HProjectIteration version = (HProjectIteration) context;\n            HDocument document = (HDocument) lastTarget;\n            HTextFlowTarget tft =\n                    documentDAO.getLastTranslatedTargetOrNull(document.getId());\n\n            if (tft != null) {\n                return urlUtil.editorDocumentUrl(\n                        version.getProject().getSlug(), version.getSlug(),\n                        tft.getLocaleId(), document.getSourceLocaleId(), tft\n                                .getTextFlow().getDocument().getDocId());\n            }\n        }\n        return \"\";\n    }","id":52222,"modified_method":"public String getDocumentUrl(Activity activity) {\n        String url = \"\";\n        Object context =\n            getEntity(activity.getContextType(), activity.getContextId());\n        Object lastTarget =\n            getEntity(activity.getLastTargetType(),\n                activity.getLastTargetId());\n\n        if (isTranslationUpdateActivity(activity.getActivityType())) {\n            HProjectIteration version = (HProjectIteration) context;\n            HTextFlowTarget tft = (HTextFlowTarget) lastTarget;\n\n            url =\n                urlUtil.editorDocumentUrl(version.getProject().getSlug(),\n                    version.getSlug(), tft.getLocaleId(), tft\n                        .getTextFlow().getLocale(), tft\n                        .getTextFlow().getDocument().getDocId());\n        } else if (activity.getActivityType() == UPLOAD_SOURCE_DOCUMENT) {\n            HProjectIteration version = (HProjectIteration) context;\n            url =\n                urlUtil.sourceFilesViewUrl(version.getProject().getSlug(),\n                    version.getSlug());\n        } else if (activity.getActivityType() == UPLOAD_TRANSLATION_DOCUMENT) {\n            HProjectIteration version = (HProjectIteration) context;\n            HDocument document = (HDocument) lastTarget;\n            HTextFlowTarget tft =\n                documentDAO.getLastTranslatedTargetOrNull(document.getId());\n\n            if (tft != null) {\n                url =\n                    urlUtil.editorDocumentUrl(version.getProject()\n                            .getSlug(), version.getSlug(), tft\n                            .getLocaleId(), document.getSourceLocaleId(),\n                        tft.getTextFlow().getDocument().getDocId());\n            }\n        }\n        return url;\n    }","commit_id":"0682460404a44efa37ecb81acf68c2fe3875f222","url":"https://github.com/zanata/zanata-server"},{"original_method":"public String getDocumentName(Activity activity) {\n        Object lastTarget =\n                getEntity(activity.getLastTargetType(),\n                        activity.getLastTargetId());\n\n        if (isTranslationUpdateActivity(activity.getActivityType())) {\n            HTextFlowTarget tft = (HTextFlowTarget) lastTarget;\n            return tft.getTextFlow().getDocument().getName();\n        } else if (activity.getActivityType() == ActivityType.UPLOAD_SOURCE_DOCUMENT\n                || activity.getActivityType() == ActivityType.UPLOAD_TRANSLATION_DOCUMENT) {\n            HDocument document = (HDocument) lastTarget;\n            return document.getName();\n        }\n        return \"\";\n    }","id":52223,"modified_method":"public String getDocumentName(Activity activity) {\n        Object lastTarget =\n            getEntity(activity.getLastTargetType(),\n                activity.getLastTargetId());\n        String docName = \"\";\n\n        if (isTranslationUpdateActivity(activity.getActivityType())) {\n            HTextFlowTarget tft = (HTextFlowTarget) lastTarget;\n            docName = tft.getTextFlow().getDocument().getName();\n        } else if (activity.getActivityType() == UPLOAD_SOURCE_DOCUMENT\n            || activity.getActivityType() == UPLOAD_TRANSLATION_DOCUMENT) {\n            HDocument document = (HDocument) lastTarget;\n            docName = document.getName();\n        }\n        return docName;\n    }","commit_id":"0682460404a44efa37ecb81acf68c2fe3875f222","url":"https://github.com/zanata/zanata-server"},{"original_method":"public String getLanguageName(Activity activity) {\n        Object lastTarget =\n                getEntity(activity.getLastTargetType(),\n                        activity.getLastTargetId());\n        if (isTranslationUpdateActivity(activity.getActivityType())) {\n            HTextFlowTarget tft = (HTextFlowTarget) lastTarget;\n            return tft.getLocaleId().getId();\n        } else if (activity.getActivityType() == ActivityType.UPLOAD_SOURCE_DOCUMENT) {\n            // not supported for upload source action\n        } else if (activity.getActivityType() == ActivityType.UPLOAD_TRANSLATION_DOCUMENT) {\n            HDocument document = (HDocument) lastTarget;\n            HTextFlowTarget tft =\n                    documentDAO.getLastTranslatedTargetOrNull(document.getId());\n\n            if (tft != null) {\n                return tft.getLocaleId().getId();\n            }\n        }\n        return \"\";\n    }","id":52224,"modified_method":"public String getLanguageName(Activity activity) {\n        Object lastTarget =\n            getEntity(activity.getLastTargetType(),\n                activity.getLastTargetId());\n        String name = \"\";\n\n        if (isTranslationUpdateActivity(activity.getActivityType())) {\n            HTextFlowTarget tft = (HTextFlowTarget) lastTarget;\n            name = tft.getLocaleId().getId();\n        } else if (activity.getActivityType() == UPLOAD_SOURCE_DOCUMENT) {\n            // not supported for upload source action\n        } else if (activity.getActivityType() == UPLOAD_TRANSLATION_DOCUMENT) {\n            HDocument document = (HDocument) lastTarget;\n            HTextFlowTarget tft =\n                documentDAO.getLastTranslatedTargetOrNull(document.getId());\n\n            if (tft != null) {\n                name = tft.getLocaleId().getId();\n            }\n        }\n\n        return name;\n    }","commit_id":"0682460404a44efa37ecb81acf68c2fe3875f222","url":"https://github.com/zanata/zanata-server"},{"original_method":"public String getDocumentListUrl(Activity activity) {\n        Object context =\n                getEntity(activity.getContextType(), activity.getContextId());\n        Object lastTarget =\n                getEntity(activity.getLastTargetType(),\n                        activity.getLastTargetId());\n\n        if (isTranslationUpdateActivity(activity.getActivityType())) {\n            HProjectIteration version = (HProjectIteration) context;\n            HTextFlowTarget tft = (HTextFlowTarget) lastTarget;\n\n            return urlUtil.editorDocumentListUrl(\n                    version.getProject().getSlug(), version.getSlug(),\n                    tft.getLocaleId(), tft.getTextFlow().getLocale());\n        } else if (activity.getActivityType() == ActivityType.UPLOAD_SOURCE_DOCUMENT) {\n            // not supported for upload source action\n        } else if (activity.getActivityType() == ActivityType.UPLOAD_TRANSLATION_DOCUMENT) {\n            HProjectIteration version = (HProjectIteration) context;\n            HDocument document = (HDocument) lastTarget;\n            HTextFlowTarget tft =\n                    documentDAO.getLastTranslatedTargetOrNull(document.getId());\n\n            if (tft != null) {\n                return urlUtil.editorDocumentListUrl(version.getProject()\n                        .getSlug(), version.getSlug(), tft.getLocaleId(), tft\n                        .getTextFlow().getLocale());\n            }\n        }\n        return \"\";\n    }","id":52225,"modified_method":"public String getDocumentListUrl(Activity activity) {\n        Object context =\n            getEntity(activity.getContextType(), activity.getContextId());\n        Object lastTarget =\n            getEntity(activity.getLastTargetType(),\n                activity.getLastTargetId());\n        String url = \"\";\n\n        if (isTranslationUpdateActivity(activity.getActivityType())) {\n            HProjectIteration version = (HProjectIteration) context;\n            HTextFlowTarget tft = (HTextFlowTarget) lastTarget;\n\n            url =\n                urlUtil.editorDocumentListUrl(version.getProject()\n                        .getSlug(), version.getSlug(), tft.getLocaleId(),\n                    tft.getTextFlow().getLocale());\n        } else if (activity.getActivityType() == UPLOAD_SOURCE_DOCUMENT) {\n            // not supported for upload source action\n        } else if (activity.getActivityType() == UPLOAD_TRANSLATION_DOCUMENT) {\n            HProjectIteration version = (HProjectIteration) context;\n            HDocument document = (HDocument) lastTarget;\n            HTextFlowTarget tft =\n                documentDAO.getLastTranslatedTargetOrNull(document.getId());\n\n            if (tft != null) {\n                url =\n                    urlUtil.editorDocumentListUrl(version.getProject()\n                        .getSlug(), version.getSlug(), tft\n                        .getLocaleId(), tft.getTextFlow().getLocale());\n            }\n        }\n        return url;\n    }","commit_id":"0682460404a44efa37ecb81acf68c2fe3875f222","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Before\n    public void setUp() throws Exception {\n        MockitoAnnotations.initMocks(this);\n        activityEntry = new ActivityEntry(activityService, urlUtil, documentDAO);\n        iteration = new HProjectIteration();\n        iteration.setId(1L);\n        iteration.setSlug(\"master\");\n        project = new HProject();\n        project.setId(2L);\n        project.setSlug(\"about-fedora\");\n        project.setName(\"About Fedora\");\n        iteration.setProject(project);\n        targetLocale = new HLocale(LocaleId.DE);\n        targetLocale.setId(3L);\n        textFlow = makeHTextFlow(4L, targetLocale, ContentState.Translated);\n        document = textFlow.getDocument();\n        document.setId(5L);\n        document.setProjectIteration(iteration);\n        textFlowTarget = textFlow.getTargets().get(targetLocale.getId());\n        textFlowTarget.setId(6L);\n        textFlowTarget.setLocale(targetLocale);\n    }","id":52226,"modified_method":"@Before\n    public void setUp() throws Exception {\n        MockitoAnnotations.initMocks(this);\n        activityEntry = new ActivityEntry(activityService, urlUtil, documentDAO, msgs);\n        iteration = new HProjectIteration();\n        iteration.setId(1L);\n        iteration.setSlug(\"master\");\n        project = new HProject();\n        project.setId(2L);\n        project.setSlug(\"about-fedora\");\n        project.setName(\"About Fedora\");\n        iteration.setProject(project);\n        targetLocale = new HLocale(LocaleId.DE);\n        targetLocale.setId(3L);\n        textFlow = makeHTextFlow(4L, targetLocale, ContentState.Translated);\n        document = textFlow.getDocument();\n        document.setId(5L);\n        document.setProjectIteration(iteration);\n        textFlowTarget = textFlow.getTargets().get(targetLocale.getId());\n        textFlowTarget.setId(6L);\n        textFlowTarget.setLocale(targetLocale);\n    }","commit_id":"0682460404a44efa37ecb81acf68c2fe3875f222","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Override\n   public List<Activity> findLatestActivities(long personId, int offset, int maxResults)\n   {\n      List<Activity> result = activityDAO.findLatestActivities(personId, offset, maxResults);\n      Collections.sort(result, activityComparator);\n      return result;\n   }","id":52227,"modified_method":"@Override\n   public List<Activity> findLatestActivities(long personId, int offset, int maxResults)\n   {\n      return activityDAO.findLatestActivities(personId, offset, maxResults);\n   }","commit_id":"f005bf2fac42a0443ffd1e267b54a649fe644305","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Override\n   public List<Activity> findActivities(long personId, long contextId, int offset, int maxResults)\n   {\n      List<Activity> result = activityDAO.findActivities(personId, contextId, offset, maxResults);\n      Collections.sort(result, activityComparator);\n      return result;\n   }","id":52228,"modified_method":"@Override\n   public List<Activity> findActivities(long personId, long contextId, int offset, int maxResults)\n   {\n      return activityDAO.findActivities(personId, contextId, offset, maxResults);\n   }","commit_id":"f005bf2fac42a0443ffd1e267b54a649fe644305","url":"https://github.com/zanata/zanata-server"},{"original_method":"public static String getJdkHome() {\n    for (String javaHome : ListSequence.fromList(BaseRunner.getJavaHomes())) {\n      String javaBinHome = javaHome + File.separator + \"bin\" + File.separator;\n      String osName = System.getProperty(\"os.name\");\n      if (osName.startsWith(\"Mac OS\")) {\n        if (new File(javaBinHome + \"java\").exists()) {\n          return javaHome;\n        }\n      } else\n      if (osName.startsWith(\"Windows\")) {\n        if (new File(javaBinHome + \"java.exe\").exists()) {\n          return javaHome;\n        }\n      } else {\n        if (new File(javaBinHome + \"java\").exists()) {\n          return javaHome;\n        }\n      }\n    }\n    return ListSequence.fromList(BaseRunner.getJavaHomes()).first();\n  }","id":52229,"modified_method":"public static String getJdkHome() {\n    return Java_Command.getJdkHome();\n  }","commit_id":"919f6a64d691f1ed6db1968e2f0a2a4e537ffe8b","url":"https://github.com/JetBrains/MPS"},{"original_method":"protected static Set<String> getModuleClasspath(IModule module, boolean withDependencies) {\n    Set<String> result = SetSequence.fromSet(new HashSet<String>());\n    IFile classesGen = module.getClassesGen();\n    if (classesGen != null) {\n      SetSequence.fromSet(result).addElement(classesGen.getAbsolutePath());\n    }\n\n    ClasspathStringCollector collector = new ClasspathStringCollector();\n    module.getClassPathItem().accept(collector);\n    if (withDependencies) {\n      AbstractModule.getDependenciesClasspath(CollectionUtil.set(module), true).accept(collector);\n    }\n\n    Set<String> delete = SetSequence.fromSet(new HashSet<String>());\n    List<String> jdkPath = CommonPaths.getJDKPath();\n    List<String> cpList = collector.getResultAndReInit();\n    for (String cpItem : ListSequence.fromList(cpList)) {\n      if (!(jdkPath.contains(cpItem))) {\n        SetSequence.fromSet(result).addElement(cpItem);\n      }\n    }\n    return result;\n  }","id":52230,"modified_method":"protected static Set<String> getModuleClasspath(IModule module, boolean withDependencies) {\n    return SetSequence.fromSetWithValues(new HashSet<String>(), Java_Command.getClasspath(module, withDependencies));\n  }","commit_id":"919f6a64d691f1ed6db1968e2f0a2a4e537ffe8b","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static List<String> getJavaHomes() {\n    String systemJavaHome = System.getProperty(\"java.home\");\n    List<String> homes = ListSequence.fromList(new LinkedList<String>());\n    String systemJdkHome = systemJavaHome.substring(0, systemJavaHome.length() - \"/jre\".length());\n    if (systemJavaHome.endsWith(\"jre\") && new File(systemJdkHome + File.separator + \"bin\").exists()) {\n      ListSequence.fromList(homes).addElement(systemJdkHome);\n    }\n    if (StringUtils.isNotEmpty(System.getenv(\"JAVA_HOME\"))) {\n      ListSequence.fromList(homes).addElement(System.getenv(\"JAVA_HOME\"));\n    }\n    ListSequence.fromList(homes).addElement(systemJavaHome);\n    return homes;\n  }","id":52231,"modified_method":"public static List<String> getJavaHomes() {\n    return Java_Command.getJavaHomes();\n  }","commit_id":"919f6a64d691f1ed6db1968e2f0a2a4e537ffe8b","url":"https://github.com/JetBrains/MPS"},{"original_method":"@NotNull\n  public static String getJavaCommand(String javaHome) {\n    String result = javaHome + fs() + \"bin\" + fs();\n    String osName = System.getProperty(\"os.name\");\n    if (osName.startsWith(\"Mac OS\")) {\n      return result + \"java\";\n    } else\n    if (osName.startsWith(\"Windows\")) {\n      return result + \"java.exe\";\n    } else {\n      return result + \"java\";\n    }\n  }","id":52232,"modified_method":"@NotNull\n  public static String getJavaCommand(String javaHome) {\n    return Java_Command.getJavaCommand(javaHome);\n  }","commit_id":"919f6a64d691f1ed6db1968e2f0a2a4e537ffe8b","url":"https://github.com/JetBrains/MPS"},{"original_method":"public ProcessHandler build(@NotNull ProcessListener listener, @NotNull File workingDirectory) throws ExecutionException {\n    if (!(workingDirectory.exists())) {\n      throw new ExecutionException(\"Working directory \" + workingDirectory + \" does not exist.\");\n    }\n    ProcessBuilder builder = new ProcessBuilder(ListSequence.fromList(myCommandLine).toGenericArray(String.class));\n    builder.directory(workingDirectory);\n    try {\n      Process process = builder.start();\n      DefaultProcessHandler processHandler = new DefaultProcessHandler(process, ListSequence.fromList(myCommandLine).foldLeft(\"\", new ILeftCombinator<String, String>() {\n        public String combine(String s, String it) {\n          return (StringUtils.isEmpty(s) ?\n            it :\n            s + \" \" + it\n          );\n        }\n      }), listener);\n      return processHandler;\n    } catch (IOException e) {\n      throw new ExecutionException(\"Start process failed\", e);\n    }\n  }","id":52233,"modified_method":"public ProcessHandler build(@NotNull ProcessListener listener, @NotNull File workingDirectory) throws ExecutionException {\n    if (!(workingDirectory.exists())) {\n      throw new ExecutionException(\"Working directory \" + workingDirectory + \" does not exist.\");\n    }\n    ProcessBuilder builder = new ProcessBuilder(ListSequence.fromList(myCommandLine).toGenericArray(String.class));\n    builder.directory(workingDirectory);\n    try {\n      Process process = builder.start();\n      DefaultProcessHandler processHandler = new DefaultProcessHandler(process, ListSequence.fromList(myCommandLine).foldLeft(\"\", new ILeftCombinator<String, String>() {\n        public String combine(String s, String it) {\n          return (StringUtils.isEmpty(s) ?\n            it :\n            s + \" \" + it\n          );\n        }\n      }), listener);\n      return processHandler;\n    } catch (IOException e) {\n      throw new ProcessNotCreatedException(\"Start process failed\", e, getCommandLine(workingDirectory.getAbsolutePath()));\n    } catch (NullPointerException e) {\n      throw new ProcessNotCreatedException(\"Start process failed: one of the command line arguments is null\", e, getCommandLine(workingDirectory.getAbsolutePath()));\n    } catch (Throwable t) {\n      throw new ProcessNotCreatedException(\"Start process failed\", t, getCommandLine(workingDirectory.getAbsolutePath()));\n    }\n  }","commit_id":"919f6a64d691f1ed6db1968e2f0a2a4e537ffe8b","url":"https://github.com/JetBrains/MPS"},{"original_method":"public TypesystemDescriptor() {\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_CommandBuilderExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_CommandParameterAssignment_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_CommandParameterReference_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_CommandReferenceExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_ConfigurationFromExecutorReference_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_Configuration_Parameter_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_Debug_Parameter_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_DebuggerSettings_Parameter_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_EditorExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_EditorOperation_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_PersistentConfigurationTemplateInitializer_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_PersistentPropertyDeclaration_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_PersistentPropertyReferenceOperation_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_ProcessBuilderExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_ProcessBuilderKeyPart_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_ProcessBuilderPart_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_ReportConfigurationErrorStatement_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_RunConfigurationExecutor_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_StartProcessHandlerStatement_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new EditorIsSusbtypeOfEditor_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new PersistentConfigurationIsPersistentConfiguration_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new SmartPersistentPropertyisSubtypeOfPersistentConfiguration_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new SmartPropertyIsSubtypeOfSmartProperty_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n  }","id":52234,"modified_method":"public TypesystemDescriptor() {\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_CommandBuilderExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_CommandParameterAssignment_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_CommandParameterReference_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_CommandReferenceExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_ConfigurationFromExecutorReference_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_Configuration_Parameter_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_Debug_Parameter_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_DebuggerSettings_Parameter_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_EditorExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_EditorOperation_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_PersistentConfigurationTemplateInitializer_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_PersistentPropertyDeclaration_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_PersistentPropertyReferenceOperation_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_ProcessBuilderExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_ProcessBuilderKeyPart_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_ProcessBuilderPart_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_ReportConfigurationErrorStatement_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_RunConfigurationExecutor_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_StartProcessHandlerStatement_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new EditorIsSusbtypeOfEditor_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new PersistentConfigurationIsPersistentConfiguration_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new SmartPersistentPropertyisSubtypeOfPersistentConfiguration_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new SmartPropertyIsSubtypeOfSmartProperty_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new processIsProcessHandler_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n  }","commit_id":"919f6a64d691f1ed6db1968e2f0a2a4e537ffe8b","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SetNodePackage_Action() {\n    super(\"Set Virtual Package\", \"\", ICON);\n    this.setIsAlwaysVisible(false);\n    this.setExecuteOutsideCommand(true);\n  }","id":52235,"modified_method":"public SetNodePackage_Action() {\n    super(\"Set Virtual Package...\", \"\", ICON);\n    this.setIsAlwaysVisible(false);\n    this.setExecuteOutsideCommand(true);\n  }","commit_id":"8f0f7ab4f887c97b7728e36c38a2bb37bb5c6aeb","url":"https://github.com/JetBrains/MPS"},{"original_method":"protected boolean collectActionData(AnActionEvent event, final Map<String, Object> _params) {\n    if (!(super.collectActionData(event, _params))) {\n      return false;\n    }\n    {\n      List<SNode> nodes = event.getData(MPSDataKeys.NODES);\n      boolean error = false;\n      if (nodes != null) {\n      }\n      if (error || nodes == null) {\n        MapSequence.fromMap(_params).put(\"nodes\", null);\n      } else {\n        MapSequence.fromMap(_params).put(\"nodes\", ListSequence.fromListWithValues(new ArrayList<SNode>(), nodes));\n      }\n    }\n    if (MapSequence.fromMap(_params).get(\"nodes\") == null) {\n      return false;\n    }\n    MapSequence.fromMap(_params).put(\"frame\", event.getData(MPSDataKeys.FRAME));\n    if (MapSequence.fromMap(_params).get(\"frame\") == null) {\n      return false;\n    }\n    MapSequence.fromMap(_params).put(\"scope\", event.getData(MPSDataKeys.SCOPE));\n    if (MapSequence.fromMap(_params).get(\"scope\") == null) {\n      return false;\n    }\n    return true;\n  }","id":52236,"modified_method":"protected boolean collectActionData(AnActionEvent event, final Map<String, Object> _params) {\n    if (!(super.collectActionData(event, _params))) {\n      return false;\n    }\n    {\n      List<SNode> nodes = event.getData(MPSDataKeys.NODES);\n      boolean error = false;\n      if (nodes != null) {\n        for (SNode node : ListSequence.fromList(nodes)) {\n          if (!(SNodeOperations.isInstanceOf(node, \"jetbrains.mps.lang.core.structure.BaseConcept\"))) {\n            error = true;\n            break;\n          }\n        }\n      }\n      if (error || nodes == null) {\n        MapSequence.fromMap(_params).put(\"nodes\", null);\n      } else {\n        MapSequence.fromMap(_params).put(\"nodes\", ListSequence.fromListWithValues(new ArrayList<SNode>(), nodes));\n      }\n    }\n    if (MapSequence.fromMap(_params).get(\"nodes\") == null) {\n      return false;\n    }\n    MapSequence.fromMap(_params).put(\"frame\", event.getData(MPSDataKeys.FRAME));\n    if (MapSequence.fromMap(_params).get(\"frame\") == null) {\n      return false;\n    }\n    MapSequence.fromMap(_params).put(\"scope\", event.getData(MPSDataKeys.SCOPE));\n    if (MapSequence.fromMap(_params).get(\"scope\") == null) {\n      return false;\n    }\n    return true;\n  }","commit_id":"8f0f7ab4f887c97b7728e36c38a2bb37bb5c6aeb","url":"https://github.com/JetBrains/MPS"},{"original_method":"List<String> fetchExistingPackages(List<SNode> nlist, final Map<String, Object> _params) {\n    Set<SModel> models = SetSequence.fromSet(new HashSet<SModel>());\n    for (SNode node : ListSequence.fromList(nlist)) {\n      SetSequence.fromSet(models).addElement(SNodeOperations.getModel(node));\n    }\n    Set<String> packages = SetSequence.fromSet(new HashSet<String>());\n    for (SModel model : SetSequence.fromSet(models)) {\n      for (SNode root : ListSequence.fromList(SModelOperations.getRoots(model, null))) {\n        String p = root.getProperty(SModelTreeNode.PACK);\n        if (p != null) {\n          SetSequence.fromSet(packages).addElement(p);\n        }\n      }\n    }\n    List<String> result = ListSequence.fromListWithValues(new ArrayList<String>(), packages);\n    Collections.sort(result);\n    return result;\n  }","id":52237,"modified_method":"List<String> fetchExistingPackages(List<SNode> nlist, final Map<String, Object> _params) {\n    Set<SModel> models = SetSequence.fromSetWithValues(new HashSet<SModel>(), ListSequence.fromList(nlist).<SModel>select(new ISelector<SNode, SModel>() {\n      public SModel select(SNode n) {\n        return SNodeOperations.getModel(n);\n      }\n    }));\n    Set<String> packages = SetSequence.fromSetWithValues(new HashSet<String>(), SetSequence.fromSet(models).<SNode>translate(new ITranslator2<SModel, SNode>() {\n      public Iterable<SNode> translate(SModel m) {\n        return SModelOperations.getRoots(m, \"jetbrains.mps.lang.core.structure.BaseConcept\");\n      }\n    }).<String>select(new ISelector<SNode, String>() {\n      public String select(SNode r) {\n        return SPropertyOperations.getString(r, \"virtualPackage\");\n      }\n    }).where(new IWhereFilter<String>() {\n      public boolean accept(String p) {\n        return p != null;\n      }\n    }));\n    List<String> result = ListSequence.fromListWithValues(new ArrayList<String>(), packages);\n    Collections.sort(result);\n    return result;\n  }","commit_id":"8f0f7ab4f887c97b7728e36c38a2bb37bb5c6aeb","url":"https://github.com/JetBrains/MPS"},{"original_method":"public boolean isApplicable(AnActionEvent event, final Map<String, Object> _params) {\n    for (SNode node : ListSequence.fromList(((List<SNode>) MapSequence.fromMap(_params).get(\"nodes\")))) {\n      if (!(node.isRoot())) {\n        return false;\n      }\n    }\n    return true;\n  }","id":52238,"modified_method":"public boolean isApplicable(AnActionEvent event, final Map<String, Object> _params) {\n    return ListSequence.fromList(((List<SNode>) MapSequence.fromMap(_params).get(\"nodes\"))).all(new IWhereFilter<SNode>() {\n      public boolean accept(SNode n) {\n        return SNodeOperations.getParent(n) == null && !(SNodeOperations.getModel(n).isNotEditable());\n      }\n    });\n  }","commit_id":"8f0f7ab4f887c97b7728e36c38a2bb37bb5c6aeb","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doExecute(@NotNull final AnActionEvent event, final Map<String, Object> _params) {\n    try {\n      final Wrappers._T<List<String>> packages = new Wrappers._T<List<String>>();\n      final Wrappers._T<String> oldPackage = new Wrappers._T<String>();\n      ModelAccess.instance().runReadAction(new Runnable() {\n        public void run() {\n          packages.value = SetNodePackage_Action.this.fetchExistingPackages(((List<SNode>) MapSequence.fromMap(_params).get(\"nodes\")), _params);\n          oldPackage.value = ListSequence.fromList(((List<SNode>) MapSequence.fromMap(_params).get(\"nodes\"))).first().getProperty(SModelTreeNode.PACK);\n        }\n      });\n      final SetNodePackageDialog dialog = new SetNodePackageDialog(((Frame) MapSequence.fromMap(_params).get(\"frame\")), \"Set Virtual Package...\", packages.value);\n      dialog.setPackage(oldPackage.value);\n      dialog.showDialog();\n      if (dialog.isCancelled()) {\n        return;\n      }\n      ModelAccess.instance().runWriteActionInCommand(new Runnable() {\n        public void run() {\n          for (SNode node : ListSequence.fromList(((List<SNode>) MapSequence.fromMap(_params).get(\"nodes\")))) {\n            node.setProperty(SModelTreeNode.PACK, dialog.getPackage());\n            if (SNodeOperations.isInstanceOf(node, \"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration\")) {\n              for (SNode aspect : ListSequence.fromList(((List<SNode>) BehaviorManager.getInstance().invoke(Object.class, SNodeOperations.cast(SNodeOperations.cast(node, \"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration\"), \"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration\"), \"call_findAllAspects_7754459869734028917\", new Class[]{SNode.class})))) {\n                aspect.setProperty(SModelTreeNode.PACK, dialog.getPackage());\n              }\n            }\n          }\n        }\n      });\n    } catch (Throwable t) {\n      if (log.isErrorEnabled()) {\n        log.error(\"User's action execute method failed. Action:\" + \"SetNodePackage\", t);\n      }\n    }\n  }","id":52239,"modified_method":"public void doExecute(@NotNull final AnActionEvent event, final Map<String, Object> _params) {\n    try {\n      final Wrappers._T<List<String>> packages = new Wrappers._T<List<String>>();\n      final Wrappers._T<String> oldPackage = new Wrappers._T<String>();\n      ModelAccess.instance().runReadAction(new Runnable() {\n        public void run() {\n          packages.value = SetNodePackage_Action.this.fetchExistingPackages(((List<SNode>) MapSequence.fromMap(_params).get(\"nodes\")), _params);\n          oldPackage.value = SPropertyOperations.getString(ListSequence.fromList(((List<SNode>) MapSequence.fromMap(_params).get(\"nodes\"))).first(), \"virtualPackage\");\n        }\n      });\n      final SetNodePackageDialog dialog = new SetNodePackageDialog(((Frame) MapSequence.fromMap(_params).get(\"frame\")), \"Set Virtual Package\", packages.value);\n      dialog.setPackage(oldPackage.value);\n      dialog.showDialog();\n      if (dialog.isCancelled()) {\n        return;\n      }\n      ModelAccess.instance().runWriteActionInCommand(new Runnable() {\n        public void run() {\n          for (SNode node : ListSequence.fromList(((List<SNode>) MapSequence.fromMap(_params).get(\"nodes\")))) {\n            SPropertyOperations.set(node, \"virtualPackage\", dialog.getPackage());\n            if (SNodeOperations.isInstanceOf(node, \"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration\")) {\n              for (SNode aspect : ListSequence.fromList(((List<SNode>) BehaviorManager.getInstance().invoke(Object.class, SNodeOperations.cast(SNodeOperations.cast(node, \"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration\"), \"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration\"), \"call_findAllAspects_7754459869734028917\", new Class[]{SNode.class})))) {\n                SPropertyOperations.set(((SNode) aspect), \"virtualPackage\", dialog.getPackage());\n              }\n            }\n          }\n        }\n      });\n    } catch (Throwable t) {\n      if (log.isErrorEnabled()) {\n        log.error(\"User's action execute method failed. Action:\" + \"SetNodePackage\", t);\n      }\n    }\n  }","commit_id":"8f0f7ab4f887c97b7728e36c38a2bb37bb5c6aeb","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void collectDependencies(SNode inferenceRule, Map<SNode, Pair<SNode, SNode>> dependencies, Set<SNode> leaves) {\n    Set<SNode> roots = SetSequence.<SNode>fromArray();\n    for(SNode applicableNodeReference : SNodeOperations.getDescendants(inferenceRule, \"jetbrains.mps.lang.typesystem.structure.ApplicableNodeReference\", false)) {\n      if (SLinkOperations.getTarget(applicableNodeReference, \"applicableNode\", false) == SLinkOperations.getTarget(inferenceRule, \"applicableNode\", true)) {\n        SetSequence.fromSet(roots).addElement(applicableNodeReference);\n      }\n    }\n    int prevSize = Sequence.fromIterable(MapSequence.fromMap(dependencies).keySet()).count();\n    int leavesSize = SetSequence.fromSet(leaves).count();\n    for(SNode root : roots) {\n      MapSequence.fromMap(dependencies).put(root, null);\n    }\n    while (Sequence.fromIterable(MapSequence.fromMap(dependencies).keySet()).count() > prevSize || SetSequence.fromSet(leaves).count() > leavesSize) {\n      prevSize = Sequence.fromIterable(MapSequence.fromMap(dependencies).keySet()).count();\n      leavesSize = SetSequence.fromSet(leaves).count();\n      for(SNode node : SetSequence.fromSet(SetSequence.<SNode>fromArray()).addSequence(SetSequence.fromSet(MapSequence.fromMap(dependencies).keySet()))) {\n        SNode parent = SNodeOperations.getParent(node);\n        do {\n          SNode matchedNode_0 = parent;\n          {\n            boolean matches_0 = false;\n            {\n              SNode matchingNode_0 = parent;\n              if (matchingNode_0 != null) {\n                matches_0 = SModelUtil_new.isAssignableConcept(matchingNode_0.getConceptFqName(), \"jetbrains.mps.lang.typesystem.structure.TypeOfExpression\");\n              }\n            }\n            if (matches_0) {\n              if (!(SetSequence.fromSet(roots).contains(node))) {\n                SetSequence.fromSet(leaves).addElement(node);\n              }\n              break;\n            }\n          }\n          {\n            boolean matches_1 = false;\n            {\n              SNode matchingNode_1 = parent;\n              if (matchingNode_1 != null) {\n                matches_1 = SModelUtil_new.isAssignableConcept(matchingNode_1.getConceptFqName(), \"jetbrains.mps.baseLanguage.structure.AssignmentExpression\");\n              }\n            }\n            if (matches_1) {\n              if (SLinkOperations.getTarget(matchedNode_0, \"rValue\", true) == node) {\n                MapSequence.fromMap(dependencies).put(SLinkOperations.getTarget(matchedNode_0, \"lValue\", true), new Pair<SNode, SNode>(node, new _Quotations.QuotationClass_0().createNode()));\n              }\n              break;\n            }\n          }\n          {\n            boolean matches_2 = false;\n            {\n              SNode matchingNode_2 = parent;\n              if (matchingNode_2 != null) {\n                matches_2 = SModelUtil_new.isAssignableConcept(matchingNode_2.getConceptFqName(), \"jetbrains.mps.baseLanguage.structure.VariableDeclaration\");\n              }\n            }\n            if (matches_2) {\n              if (SLinkOperations.getTarget(matchedNode_0, \"initializer\", true) == node) {\n                MapSequence.fromMap(dependencies).put(matchedNode_0, new Pair<SNode, SNode>(node, new _Quotations.QuotationClass_1().createNode()));\n              }\n              break;\n            }\n          }\n          do {\n            SNode matchedNode_1 = node;\n            {\n              boolean matches_3 = false;\n              {\n                SNode matchingNode_3 = node;\n                if (matchingNode_3 != null) {\n                  matches_3 = SModelUtil_new.isAssignableConcept(matchingNode_3.getConceptFqName(), \"jetbrains.mps.baseLanguage.structure.VariableDeclaration\");\n                }\n              }\n              if (matches_3) {\n                for(SNode variableReference : SNodeOperations.getDescendants(inferenceRule, \"jetbrains.mps.baseLanguage.structure.VariableReference\", false)) {\n                  if (SLinkOperations.getTarget(variableReference, \"variableDeclaration\", false) == node) {\n                    MapSequence.fromMap(dependencies).put(variableReference, new Pair<SNode, SNode>(node, new _Quotations.QuotationClass_2().createNode()));\n                  }\n                }\n                break;\n              }\n            }\n            {\n              boolean matches_4 = false;\n              {\n                SNode matchingNode_4 = node;\n                if (matchingNode_4 != null) {\n                  matches_4 = SModelUtil_new.isAssignableConcept(matchingNode_4.getConceptFqName(), \"jetbrains.mps.baseLanguage.structure.VariableReference\");\n                }\n              }\n              if (matches_4) {\n                {\n                  SNode variableDeclaration = SLinkOperations.getTarget(matchedNode_1, \"variableDeclaration\", false);\n                  for(SNode reference : SNodeOperations.getDescendants(inferenceRule, \"jetbrains.mps.baseLanguage.structure.VariableReference\", false)) {\n                    if (SLinkOperations.getTarget(matchedNode_1, \"variableDeclaration\", false) == variableDeclaration) {\n                      SNode nodeStatement = SNodeOperations.getAncestor(matchedNode_1, \"jetbrains.mps.baseLanguage.structure.Statement\", false, false);\n                      SNode usageStatement = SNodeOperations.getAncestor(reference, \"jetbrains.mps.baseLanguage.structure.Statement\", false, false);\n                      while (SNodeOperations.getParent(nodeStatement) != SNodeOperations.getParent(usageStatement)) {\n                        usageStatement = SNodeOperations.getAncestor(usageStatement, \"jetbrains.mps.baseLanguage.structure.Statement\", false, false);\n                      }\n                      List<SNode> list = CollectionUtil.filter(SNodeOperations.getParent(nodeStatement).getChildren(), new Condition() {\n\n                        public boolean met(Object p0) {\n                          return SNodeOperations.isInstanceOf(((SNode)p0), \"jetbrains.mps.baseLanguage.structure.Statement\");\n                        }\n                      });\n                      if (ListSequence.fromList(list).indexOf(nodeStatement) <= ListSequence.fromList(list).indexOf(usageStatement)) {\n                        MapSequence.fromMap(dependencies).put(reference, new Pair<SNode, SNode>(node, new _Quotations.QuotationClass_3().createNode()));\n                      }\n                    }\n                  }\n                }\n                break;\n              }\n            }\n          } while(false);\n        } while(false);\n      }\n    }\n  }","id":52240,"modified_method":"public void collectDependencies(SNode inferenceRule, Map<SNode, Pair<SNode, SNode>> dependencies, Set<SNode> leaves) {\n    Set<SNode> roots = SetSequence.fromSet(new HashSet<SNode>());\n    for(SNode applicableNodeReference : SNodeOperations.getDescendants(inferenceRule, \"jetbrains.mps.lang.typesystem.structure.ApplicableNodeReference\", false)) {\n      if (SLinkOperations.getTarget(applicableNodeReference, \"applicableNode\", false) == SLinkOperations.getTarget(inferenceRule, \"applicableNode\", true)) {\n        SetSequence.fromSet(roots).addElement(applicableNodeReference);\n      }\n    }\n    int prevSize = Sequence.fromIterable(MapSequence.fromMap(dependencies).keySet()).count();\n    int leavesSize = SetSequence.fromSet(leaves).count();\n    for(SNode root : roots) {\n      MapSequence.fromMap(dependencies).put(root, null);\n    }\n    while (Sequence.fromIterable(MapSequence.fromMap(dependencies).keySet()).count() > prevSize || SetSequence.fromSet(leaves).count() > leavesSize) {\n      prevSize = Sequence.fromIterable(MapSequence.fromMap(dependencies).keySet()).count();\n      leavesSize = SetSequence.fromSet(leaves).count();\n      for(SNode node : SetSequence.fromSetWithValues(new HashSet<SNode>(), MapSequence.fromMap(dependencies).keySet())) {\n        SNode parent = SNodeOperations.getParent(node);\n        do {\n          SNode matchedNode_0 = parent;\n          {\n            boolean matches_0 = false;\n            {\n              SNode matchingNode_0 = parent;\n              if (matchingNode_0 != null) {\n                matches_0 = SModelUtil_new.isAssignableConcept(matchingNode_0.getConceptFqName(), \"jetbrains.mps.lang.typesystem.structure.TypeOfExpression\");\n              }\n            }\n            if (matches_0) {\n              if (!(SetSequence.fromSet(roots).contains(node))) {\n                SetSequence.fromSet(leaves).addElement(node);\n              }\n              break;\n            }\n          }\n          {\n            boolean matches_1 = false;\n            {\n              SNode matchingNode_1 = parent;\n              if (matchingNode_1 != null) {\n                matches_1 = SModelUtil_new.isAssignableConcept(matchingNode_1.getConceptFqName(), \"jetbrains.mps.baseLanguage.structure.AssignmentExpression\");\n              }\n            }\n            if (matches_1) {\n              if (SLinkOperations.getTarget(matchedNode_0, \"rValue\", true) == node) {\n                MapSequence.fromMap(dependencies).put(SLinkOperations.getTarget(matchedNode_0, \"lValue\", true), new Pair<SNode, SNode>(node, new _Quotations.QuotationClass_0().createNode()));\n              }\n              break;\n            }\n          }\n          {\n            boolean matches_2 = false;\n            {\n              SNode matchingNode_2 = parent;\n              if (matchingNode_2 != null) {\n                matches_2 = SModelUtil_new.isAssignableConcept(matchingNode_2.getConceptFqName(), \"jetbrains.mps.baseLanguage.structure.VariableDeclaration\");\n              }\n            }\n            if (matches_2) {\n              if (SLinkOperations.getTarget(matchedNode_0, \"initializer\", true) == node) {\n                MapSequence.fromMap(dependencies).put(matchedNode_0, new Pair<SNode, SNode>(node, new _Quotations.QuotationClass_1().createNode()));\n              }\n              break;\n            }\n          }\n          do {\n            SNode matchedNode_1 = node;\n            {\n              boolean matches_3 = false;\n              {\n                SNode matchingNode_3 = node;\n                if (matchingNode_3 != null) {\n                  matches_3 = SModelUtil_new.isAssignableConcept(matchingNode_3.getConceptFqName(), \"jetbrains.mps.baseLanguage.structure.VariableDeclaration\");\n                }\n              }\n              if (matches_3) {\n                for(SNode variableReference : SNodeOperations.getDescendants(inferenceRule, \"jetbrains.mps.baseLanguage.structure.VariableReference\", false)) {\n                  if (SLinkOperations.getTarget(variableReference, \"variableDeclaration\", false) == node) {\n                    MapSequence.fromMap(dependencies).put(variableReference, new Pair<SNode, SNode>(node, new _Quotations.QuotationClass_2().createNode()));\n                  }\n                }\n                break;\n              }\n            }\n            {\n              boolean matches_4 = false;\n              {\n                SNode matchingNode_4 = node;\n                if (matchingNode_4 != null) {\n                  matches_4 = SModelUtil_new.isAssignableConcept(matchingNode_4.getConceptFqName(), \"jetbrains.mps.baseLanguage.structure.VariableReference\");\n                }\n              }\n              if (matches_4) {\n                {\n                  SNode variableDeclaration = SLinkOperations.getTarget(matchedNode_1, \"variableDeclaration\", false);\n                  for(SNode reference : SNodeOperations.getDescendants(inferenceRule, \"jetbrains.mps.baseLanguage.structure.VariableReference\", false)) {\n                    if (SLinkOperations.getTarget(matchedNode_1, \"variableDeclaration\", false) == variableDeclaration) {\n                      SNode nodeStatement = SNodeOperations.getAncestor(matchedNode_1, \"jetbrains.mps.baseLanguage.structure.Statement\", false, false);\n                      SNode usageStatement = SNodeOperations.getAncestor(reference, \"jetbrains.mps.baseLanguage.structure.Statement\", false, false);\n                      while (SNodeOperations.getParent(nodeStatement) != SNodeOperations.getParent(usageStatement)) {\n                        usageStatement = SNodeOperations.getAncestor(usageStatement, \"jetbrains.mps.baseLanguage.structure.Statement\", false, false);\n                      }\n                      List<SNode> list = CollectionUtil.filter(SNodeOperations.getParent(nodeStatement).getChildren(), new Condition() {\n\n                        public boolean met(Object p0) {\n                          return SNodeOperations.isInstanceOf(((SNode)p0), \"jetbrains.mps.baseLanguage.structure.Statement\");\n                        }\n                      });\n                      if (ListSequence.fromList(list).indexOf(nodeStatement) <= ListSequence.fromList(list).indexOf(usageStatement)) {\n                        MapSequence.fromMap(dependencies).put(reference, new Pair<SNode, SNode>(node, new _Quotations.QuotationClass_3().createNode()));\n                      }\n                    }\n                  }\n                }\n                break;\n              }\n            }\n          } while(false);\n        } while(false);\n      }\n    }\n  }","commit_id":"063979a21e53d7d71a4e65af8dd793fa1d1444bf","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Before\n  public void setUp() {\n    tester = new WsTester(new QualityGatesWs(\n      new ListAction(qGates), new ShowAction(qGates), new SearchAction(mock(QgateProjectFinder.class)),\n      new CreateAction(qGates), new CopyAction(qGates), new DestroyAction(qGates), new RenameAction(qGates),\n      new SetAsDefaultAction(qGates), new UnsetDefaultAction(qGates),\n      new CreateConditionAction(qGates), new UpdateConditionAction(qGates), new DeleteConditionAction(qGates),\n      new SelectAction(qGates), new DeselectAction(qGates), new AppAction(qGates)));\n  }","id":52241,"modified_method":"@Before\n  public void setUp() {\n    SelectAction selectAction = new SelectAction(mock(DbClient.class), mock(UserSessionRule.class), mock(ComponentFinder.class));\n\n    tester = new WsTester(new QualityGatesWs(\n      new ListAction(qGates), new ShowAction(qGates), new SearchAction(mock(QgateProjectFinder.class)),\n      new CreateAction(qGates), new CopyAction(qGates), new DestroyAction(qGates), new RenameAction(qGates),\n      new SetAsDefaultAction(qGates), new UnsetDefaultAction(qGates),\n      new CreateConditionAction(qGates), new UpdateConditionAction(qGates), new DeleteConditionAction(qGates),\n      selectAction, new DeselectAction(qGates), new AppAction(qGates)));\n  }","commit_id":"7b93c4de175621ce43236126a4a239534bed229e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public ComponentDto getByUuidOrKey(DbSession dbSession, @Nullable String componentUuid, @Nullable String componentKey, ParamNames parameterNames) {\n    checkArgument(componentUuid != null ^ componentKey != null, MSG_COMPONENT_ID_OR_KEY_TEMPLATE, parameterNames.getUuidParam(), parameterNames.getKeyParam());\n\n    if (componentUuid != null) {\n      checkArgument(!componentUuid.isEmpty(), \"The '%s' parameter must not be empty\", parameterNames.getUuidParam());\n      return getByUuid(dbSession, componentUuid);\n    }\n\n    checkArgument(!componentKey.isEmpty(), \"The '%s' parameter must not be empty\", parameterNames.getKeyParam());\n    return getByKey(dbSession, componentKey);\n  }","id":52242,"modified_method":"public ComponentDto getByUuidOrKey(DbSession dbSession, @Nullable String componentUuid, @Nullable String componentKey, ParamNames parameterNames) {\n    checkArgument(componentUuid != null ^ componentKey != null, MSG_COMPONENT_ID_OR_KEY_TEMPLATE, parameterNames.getUuidParam(), parameterNames.getKeyParam());\n\n    if (componentUuid != null) {\n      checkArgument(!componentUuid.isEmpty(), MSG_PARAMETER_MUST_NOT_BE_EMPTY, parameterNames.getUuidParam());\n      return getByUuid(dbSession, componentUuid);\n    }\n\n    checkArgument(!componentKey.isEmpty(), MSG_PARAMETER_MUST_NOT_BE_EMPTY, parameterNames.getKeyParam());\n    return getByKey(dbSession, componentKey);\n  }","commit_id":"7b93c4de175621ce43236126a4a239534bed229e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Before\n  public void setUp() {\n    tester = new WsTester(new QualityGatesWs(\n      new ListAction(qGates), new ShowAction(qGates), new SearchAction(projectFinder),\n      new CreateAction(qGates), new CopyAction(qGates), new DestroyAction(qGates), new RenameAction(qGates),\n      new SetAsDefaultAction(qGates), new UnsetDefaultAction(qGates),\n      new CreateConditionAction(qGates), new UpdateConditionAction(qGates), new DeleteConditionAction(qGates),\n      new SelectAction(qGates), new DeselectAction(qGates), new AppAction(qGates)));\n  }","id":52243,"modified_method":"@Before\n  public void setUp() {\n    SelectAction selectAction = new SelectAction(mock(DbClient.class), mock(UserSessionRule.class), mock(ComponentFinder.class));\n\n    tester = new WsTester(new QualityGatesWs(\n      new ListAction(qGates), new ShowAction(qGates), new SearchAction(projectFinder),\n      new CreateAction(qGates), new CopyAction(qGates), new DestroyAction(qGates), new RenameAction(qGates),\n      new SetAsDefaultAction(qGates), new UnsetDefaultAction(qGates),\n      new CreateConditionAction(qGates), new UpdateConditionAction(qGates), new DeleteConditionAction(qGates),\n      selectAction, new DeselectAction(qGates), new AppAction(qGates)));\n  }","commit_id":"7b93c4de175621ce43236126a4a239534bed229e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public void define(WebService.NewController controller) {\n    WebService.NewAction action = controller.createAction(\"select\")\n      .setDescription(\"Associate a project to a quality gate. Require Administer Quality Gates permission\")\n      .setPost(true)\n      .setSince(\"4.3\")\n      .setHandler(this);\n\n    action.createParam(QualityGatesWsParameters.PARAM_GATE_ID)\n      .setDescription(\"Quality Gate ID\")\n      .setRequired(true)\n      .setExampleValue(\"1\");\n\n    action.createParam(PARAM_PROJECT_ID)\n      .setDescription(\"Project ID\")\n      .setRequired(true)\n      .setExampleValue(\"12\");\n  }","id":52244,"modified_method":"@Override\n  public void define(WebService.NewController controller) {\n    WebService.NewAction action = controller.createAction(\"select\")\n      .setDescription(\"Associate a project to a quality gate.<br>\" +\n        \"The '%s' or '%s' must be provided.<br>\" +\n        \"Require Administer Quality Gates permission.\",\n        PARAM_PROJECT_ID, PARAM_PROJECT_KEY)\n      .setPost(true)\n      .setSince(\"4.3\")\n      .setHandler(this);\n\n    action.createParam(PARAM_GATE_ID)\n      .setDescription(\"Quality gate id\")\n      .setRequired(true)\n      .setExampleValue(\"1\");\n\n    action.createParam(PARAM_PROJECT_ID)\n      .setDescription(\"Project id\")\n      .setExampleValue(\"12\")\n      .setDeprecatedSince(\"6.1\");\n\n    action.createParam(PARAM_PROJECT_KEY)\n      .setDescription(\"Project key\")\n      .setExampleValue(KEY_PROJECT_EXAMPLE_001)\n      .setSince(\"6.1\");\n  }","commit_id":"7b93c4de175621ce43236126a4a239534bed229e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public void handle(Request request, Response response) {\n    qualityGates.associateProject(QualityGatesWs.parseId(request, QualityGatesWsParameters.PARAM_GATE_ID), QualityGatesWs.parseId(request, PARAM_PROJECT_ID));\n    response.noContent();\n  }","id":52245,"modified_method":"@Override\n  public void handle(Request request, Response response) {\n    doHandle(toSelectWsRequest(request));\n    response.noContent();\n  }","commit_id":"7b93c4de175621ce43236126a4a239534bed229e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public void handle(Request request, Response response) throws Exception {\n    userSession.checkLoggedIn().checkPermission(GlobalPermissions.QUALITY_PROFILE_ADMIN);\n\n    String name = request.mandatoryParam(PARAM_PROFILE_NAME);\n    String language = request.mandatoryParam(PARAM_LANGUAGE);\n\n    DbSession dbSession = dbClient.openSession(false);\n\n    try {\n      QProfileResult result = new QProfileResult();\n      QualityProfileDto profile = profileFactory.create(dbSession, QProfileName.createFor(language, name));\n      result.setProfile(profile);\n      for (ProfileImporter importer : importers) {\n        InputStream contentToImport = request.paramAsInputStream(getBackupParamName(importer.getKey()));\n        if (contentToImport != null) {\n          result.add(exporters.importXml(profile, importer.getKey(), contentToImport, dbSession));\n        }\n      }\n      dbSession.commit();\n\n      response.stream().setMediaType(request.getMediaType());\n      JsonWriter jsonWriter = JsonWriter.of(new OutputStreamWriter(response.stream().output(), StandardCharsets.UTF_8));\n      writeResult(jsonWriter, result);\n    } finally {\n      dbSession.close();\n    }\n  }","id":52246,"modified_method":"@Override\n  public void handle(Request request, Response response) throws Exception {\n    userSession.checkLoggedIn().checkPermission(GlobalPermissions.QUALITY_PROFILE_ADMIN);\n    CreateRequest createRequest = toRequest(request);\n    DbSession dbSession = dbClient.openSession(false);\n    try {\n      writeProtobuf(doHandle(dbSession, createRequest, request), request, response);\n    } finally {\n      dbSession.close();\n    }\n  }","commit_id":"82bcba2289a6866284dfb8559241c4467c4b9ddc","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public void define(WebService.NewController controller) {\n    NewAction create = controller.createAction(\"create\")\n      .setSince(\"5.2\")\n      .setDescription(\"Create a quality profile. Require Administer Quality Profiles permission.\")\n      .setPost(true)\n      .setResponseExample(getClass().getResource(\"example-create.json\"))\n      .setHandler(this);\n\n    create.createParam(PARAM_PROFILE_NAME)\n      .setDescription(\"The name for the new quality profile.\")\n      .setExampleValue(\"My Sonar way\")\n      .setRequired(true);\n\n    create.createParam(PARAM_LANGUAGE)\n      .setDescription(\"The language for the quality profile.\")\n      .setExampleValue(\"js\")\n      .setPossibleValues(LanguageParamUtils.getLanguageKeys(languages))\n      .setRequired(true);\n\n    for (ProfileImporter importer : importers) {\n      create.createParam(getBackupParamName(importer.getKey()))\n        .setDescription(String.format(\"A configuration file for %s.\", importer.getName()));\n    }\n  }","id":52247,"modified_method":"@Override\n  public void define(WebService.NewController controller) {\n    NewAction create = controller.createAction(ACTION_CREATE)\n      .setSince(\"5.2\")\n      .setDescription(\"Create a quality profile.<br/>\" +\n        \"Require Administer Quality Profiles permission.\")\n      .setPost(true)\n      .setResponseExample(getClass().getResource(\"example-create.json\"))\n      .setHandler(this);\n\n    create.createParam(PARAM_PROFILE_NAME)\n      .setDescription(\"The name for the new quality profile. Since 6.1, this parameter has been renamed from '%s' to '%s'\", DEPRECATED_PARAM_PROFILE_NAME, PARAM_PROFILE_NAME)\n      .setExampleValue(\"My Sonar way\")\n      .setDeprecatedKey(DEPRECATED_PARAM_PROFILE_NAME)\n      .setRequired(true);\n\n    create.createParam(PARAM_LANGUAGE)\n      .setDescription(\"The language for the quality profile.\")\n      .setExampleValue(\"js\")\n      .setPossibleValues(LanguageParamUtils.getLanguageKeys(languages))\n      .setRequired(true);\n\n    for (ProfileImporter importer : importers) {\n      create.createParam(getBackupParamName(importer.getKey()))\n        .setDescription(String.format(\"A configuration file for %s.\", importer.getName()));\n    }\n  }","commit_id":"82bcba2289a6866284dfb8559241c4467c4b9ddc","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void executeRequest(String name, String language, Map<String, String> xmls) {\n    TestRequest request = wsTester.newRequest()\n      .setMediaType(MediaTypes.PROTOBUF)\n      .setParam(\"name\", name)\n      .setParam(\"language\", language);\n    for (Map.Entry<String, String> entry : xmls.entrySet()) {\n      request.setParam(\"backup_\" + entry.getKey(), entry.getValue());\n    }\n    request.execute();\n  }","id":52248,"modified_method":"private CreateWsResponse executeRequest(String name, String language, Map<String, String> xmls) {\n    TestRequest request = wsTester.newRequest()\n      .setMediaType(MediaTypes.PROTOBUF)\n      .setParam(\"name\", name)\n      .setParam(\"language\", language);\n    for (Map.Entry<String, String> entry : xmls.entrySet()) {\n      request.setParam(\"backup_\" + entry.getKey(), entry.getValue());\n    }\n    try {\n      return parseFrom(request.execute().getInputStream());\n    } catch (IOException e) {\n      throw new IllegalStateException(e);\n    }\n  }","commit_id":"82bcba2289a6866284dfb8559241c4467c4b9ddc","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void create_profile_from_xml() {\n    setUserAsQualityProfileAdmin();\n    insertRule(RULE);\n\n    executeRequest(\"New Profile\", XOO_LANGUAGE, ImmutableMap.of(\"xoo_lint\", \"<xml/>\"));\n\n    QualityProfileDto profile = dbClient.qualityProfileDao().selectByNameAndLanguage(\"New Profile\", XOO_LANGUAGE, dbSession);\n    assertThat(profile.getKey()).isNotNull();\n    assertThat(dbClient.activeRuleDao().selectByProfileKey(dbSession, profile.getKey())).hasSize(1);\n    // FIXME\n    // assertThat(ruleIndex.searchAll(new RuleQuery().setQProfileKey(profile.getKey()).setActivation(true))).hasSize(1);\n  }","id":52249,"modified_method":"@Test\n  public void create_profile_from_backup_xml() {\n    setUserAsQualityProfileAdmin();\n    insertRule(RULE);\n\n    executeRequest(\"New Profile\", XOO_LANGUAGE, ImmutableMap.of(\"xoo_lint\", \"<xml/>\"));\n\n    QualityProfileDto dto = dbClient.qualityProfileDao().selectByNameAndLanguage(\"New Profile\", XOO_LANGUAGE, dbSession);\n    assertThat(dto.getKey()).isNotNull();\n    assertThat(dbClient.activeRuleDao().selectByProfileKey(dbSession, dto.getKey())).hasSize(1);\n    // FIXME\n    // assertThat(ruleIndex.searchAll(new RuleQuery().setQProfileKey(profile.getKey()).setActivation(true))).hasSize(1);\n  }","commit_id":"82bcba2289a6866284dfb8559241c4467c4b9ddc","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void executeRequest(String name, String language) {\n    executeRequest(name, language, Collections.emptyMap());\n  }","id":52250,"modified_method":"private CreateWsResponse executeRequest(String name, String language) {\n    return executeRequest(name, language, Collections.emptyMap());\n  }","commit_id":"82bcba2289a6866284dfb8559241c4467c4b9ddc","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private ProfileImporter[] createImporters() {\n    class DefaultProfileImporter extends ProfileImporter {\n      private DefaultProfileImporter(String key, String name, String... languages) {\n        super(key, name);\n        setSupportedLanguages(languages);\n      }\n\n      @Override\n      public RulesProfile importProfile(Reader reader, ValidationMessages messages) {\n        RulesProfile rulesProfile = RulesProfile.create();\n        rulesProfile.activateRule(org.sonar.api.rules.Rule.create(RULE.getRepositoryKey(), RULE.getRuleKey()), RulePriority.BLOCKER);\n        return rulesProfile;\n      }\n\n    }\n    return new ProfileImporter[] {\n      new DefaultProfileImporter(\"xoo_lint\", \"Xoo Lint\", XOO_LANGUAGE)\n    };\n  }","id":52251,"modified_method":"private ProfileImporter[] createImporters() {\n    class DefaultProfileImporter extends ProfileImporter {\n      private DefaultProfileImporter() {\n        super(\"xoo_lint\", \"Xoo Lint\");\n        setSupportedLanguages(XOO_LANGUAGE);\n      }\n\n      @Override\n      public RulesProfile importProfile(Reader reader, ValidationMessages messages) {\n        RulesProfile rulesProfile = RulesProfile.create();\n        rulesProfile.activateRule(org.sonar.api.rules.Rule.create(RULE.getRepositoryKey(), RULE.getRuleKey()), RulePriority.BLOCKER);\n        return rulesProfile;\n      }\n    }\n\n    class ProfileImporterGeneratingMessages extends ProfileImporter {\n      private ProfileImporterGeneratingMessages() {\n        super(\"with_messages\", \"With messages\");\n        setSupportedLanguages(XOO_LANGUAGE);\n      }\n\n      @Override\n      public RulesProfile importProfile(Reader reader, ValidationMessages messages) {\n        RulesProfile rulesProfile = RulesProfile.create();\n        messages.addWarningText(\"a warning\");\n        messages.addInfoText(\"an info\");\n        return rulesProfile;\n      }\n    }\n\n    class ProfileImporterGeneratingErrors extends ProfileImporter {\n      private ProfileImporterGeneratingErrors() {\n        super(\"with_errors\", \"With errors\");\n        setSupportedLanguages(XOO_LANGUAGE);\n      }\n\n      @Override\n      public RulesProfile importProfile(Reader reader, ValidationMessages messages) {\n        RulesProfile rulesProfile = RulesProfile.create();\n        messages.addErrorText(\"error!\");\n        return rulesProfile;\n      }\n    }\n\n    return new ProfileImporter[] {\n      new DefaultProfileImporter(), new ProfileImporterGeneratingMessages(), new ProfileImporterGeneratingErrors()\n    };\n  }","commit_id":"82bcba2289a6866284dfb8559241c4467c4b9ddc","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void create_profile() {\n    setUserAsQualityProfileAdmin();\n\n    executeRequest(\"New Profile\", XOO_LANGUAGE);\n\n    QualityProfileDto profile = dbClient.qualityProfileDao().selectByNameAndLanguage(\"New Profile\", XOO_LANGUAGE, dbSession);\n    assertThat(profile.getKey()).isNotNull();\n    assertThat(profile.getLanguage()).isEqualTo(XOO_LANGUAGE);\n    assertThat(profile.getName()).isEqualTo(\"New Profile\");\n  }","id":52252,"modified_method":"@Test\n  public void create_profile() {\n    setUserAsQualityProfileAdmin();\n\n    CreateWsResponse response = executeRequest(\"New Profile\", XOO_LANGUAGE);\n\n    QualityProfileDto dto = dbClient.qualityProfileDao().selectByNameAndLanguage(\"New Profile\", XOO_LANGUAGE, dbSession);\n    assertThat(dto.getKey()).isNotNull();\n    assertThat(dto.getLanguage()).isEqualTo(XOO_LANGUAGE);\n    assertThat(dto.getName()).isEqualTo(\"New Profile\");\n\n    QualityProfile profile = response.getProfile();\n    assertThat(profile.getKey()).isEqualTo(dto.getKey());\n    assertThat(profile.getName()).isEqualTo(\"New Profile\");\n    assertThat(profile.getLanguage()).isEqualTo(XOO_LANGUAGE);\n    assertThat(profile.getIsInherited()).isFalse();\n    assertThat(profile.getIsDefault()).isFalse();\n    assertThat(profile.hasInfos()).isFalse();\n    assertThat(profile.hasWarnings()).isFalse();\n  }","commit_id":"82bcba2289a6866284dfb8559241c4467c4b9ddc","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void define_create_action() {\n    WebService.Action create = controller.action(\"create\");\n    assertThat(create).isNotNull();\n    assertThat(create.isPost()).isTrue();\n    assertThat(create.params()).hasSize(4);\n    assertThat(create.param(\"name\")).isNotNull();\n    assertThat(create.param(\"name\").isRequired()).isTrue();\n    assertThat(create.param(\"language\").possibleValues()).containsOnly(xoo1Key, xoo2Key);\n    assertThat(create.param(\"language\").isRequired()).isTrue();\n    assertThat(create.param(\"backup_\" + xoo1Key)).isNotNull();\n    assertThat(create.param(\"backup_\" + xoo1Key).isRequired()).isFalse();\n    assertThat(create.param(\"backup_\" + xoo2Key)).isNotNull();\n    assertThat(create.param(\"backup_\" + xoo2Key).isRequired()).isFalse();\n  }","id":52253,"modified_method":"@Test\n  public void define_create_action() {\n    WebService.Action create = controller.action(\"create\");\n    assertThat(create).isNotNull();\n    assertThat(create.isPost()).isTrue();\n    assertThat(create.params()).hasSize(4);\n    assertThat(create.param(\"profileName\")).isNotNull();\n    assertThat(create.param(\"profileName\").isRequired()).isTrue();\n    assertThat(create.param(\"language\").possibleValues()).containsOnly(xoo1Key, xoo2Key);\n    assertThat(create.param(\"language\").isRequired()).isTrue();\n    assertThat(create.param(\"backup_\" + xoo1Key)).isNotNull();\n    assertThat(create.param(\"backup_\" + xoo1Key).isRequired()).isFalse();\n    assertThat(create.param(\"backup_\" + xoo2Key)).isNotNull();\n    assertThat(create.param(\"backup_\" + xoo2Key).isRequired()).isFalse();\n  }","commit_id":"82bcba2289a6866284dfb8559241c4467c4b9ddc","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private Set<String> getAncestorsNames_internal(final String conceptFqName) {\n    Set<String> result = myAncestorsNamesMap.get(conceptFqName);\n    if (result != null) {\n      return result;\n    } else {\n      return NodeReadAccessCaster.runReadTransparentAction(new Computable<Set<String>>() {\n        public Set<String> compute() {\n          Set<String> result = new LinkedHashSet<String>();\n          AbstractConceptDeclaration declaration = SModelUtil_new.findConceptDeclaration(conceptFqName, GlobalScope.getInstance());\n          if (declaration == null) {\n            return result;\n          }\n\n          result.add(conceptFqName);\n\n          if (declaration instanceof ConceptDeclaration) {\n            ConceptDeclaration cd = (ConceptDeclaration) declaration;\n            ConceptDeclaration extendedConcept = cd.getExtends();\n            if (extendedConcept != null) {\n              Language declaringLanguage = SModelUtil.getDeclaringLanguage(extendedConcept.getNode(), GlobalScope.getInstance());\n              if (declaringLanguage != null) {\n                result.addAll(getAncestorsNames(NameUtil.nodeFQName(extendedConcept)));\n              }\n            }\n\n            for (InterfaceConceptReference icr : cd.getImplementses()) {\n              InterfaceConceptDeclaration interfaceConcept = icr.getIntfc();\n              if (interfaceConcept == null) continue;\n              Language declaringLanguage = SModelUtil.getDeclaringLanguage(interfaceConcept.getNode(), GlobalScope.getInstance());\n              if (declaringLanguage == null) continue;\n              result.addAll(getAncestorsNames(NameUtil.nodeFQName(interfaceConcept)));\n            }\n          }\n\n          if (declaration instanceof InterfaceConceptDeclaration) {\n            InterfaceConceptDeclaration icd = (InterfaceConceptDeclaration) declaration;\n            for (InterfaceConceptReference icr : icd.getExtendses()) {\n              InterfaceConceptDeclaration interfaceConcept = icr.getIntfc();\n              if (interfaceConcept == null) continue;\n              Language declaringLanguage = SModelUtil.getDeclaringLanguage(interfaceConcept.getNode(), GlobalScope.getInstance());\n              if (declaringLanguage == null) continue;\n              String fqName = NameUtil.nodeFQName(interfaceConcept);\n              result.add(fqName);\n              result.addAll(getAncestorsNames(fqName));\n            }\n          }\n          myAncestorsNamesMap.put(conceptFqName, result);\n          return result;\n        }\n      });\n    }\n  }","id":52254,"modified_method":"private Set<String> getAncestorsNames_internal(final String conceptFqName) {\n    Set<String> result = myAncestorsNamesMap.get(conceptFqName);\n    if (result != null) {\n      return result;\n    } else {\n      return NodeReadAccessCaster.runReadTransparentAction(new Computable<Set<String>>() {\n        public Set<String> compute() {\n          Set<String> result = new HashSet<String>();\n          collectAncestorNames(conceptFqName, result);\n          myAncestorsNamesMap.put(conceptFqName, result);\n          return result;\n        }\n      });\n    }\n  }","commit_id":"b3ca7947183cc9bf8a3d3fcfa576235ee8238403","url":"https://github.com/JetBrains/MPS"},{"original_method":"private Set<String> getAncestorsNames_internal(final String conceptFqName) {\n    fireReadAccessPerformed();\n    Set<String> result = myAncestorsNamesMap.get(conceptFqName);\n    if (result == null) {\n      result = NodeReadAccessCasterInEditor.runReadTransparentAction(new Computable<Set<String>>() {\n        public Set<String> compute() {\n          Set<String> result = new HashSet<String>();\n          collectAncestorNames(conceptFqName, result);\n          return result;\n        }\n      });\n      myAncestorsNamesMap.putIfAbsent(InternUtil.intern(conceptFqName), result);\n    }\n    return result;\n  }","id":52255,"modified_method":"private Set<String> getAncestorsNames_internal(final String conceptFqName) {\n    fireReadAccessPerformed();\n    Set<String> result = myAncestorsNamesMap.get(conceptFqName);\n    if (result != null) {\n      return result;\n    }\n    Set<String> set = NodeReadAccessCasterInEditor.runReadTransparentAction(new Computable<Set<String>>() {\n      public Set<String> compute() {\n        Set<String> res = new HashSet<String>();\n        collectAncestorNames(conceptFqName, res);\n        return res;\n      }\n    });\n    result = myAncestorsNamesMap.putIfAbsent(InternUtil.intern(conceptFqName), set);\n    return result != null ? result : set;\n  }","commit_id":"69682e5888fa5158abff4c245e222d501e311312","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void invalidateCache() {\n    myDirectDescendantsCache.clear();\n    myParentsNamesMap.clear();\n    myAncestorsNamesMap.clear();\n    myLanguageSpecificCaches.clear();\n    myDescendantsCachesAreValid = false;\n\n    fireCacheChanged();\n  }","id":52256,"modified_method":"public void invalidateCache() {\n    synchronized (myDescendantsLock) {\n      myDirectDescendantsCache = new HashMap<String, Set<String>>();\n      myDescendantsCachesAreValid = false;\n    }\n    synchronized (myParentsNamesLock) {\n      myParentsNamesMap = new HashMap<String, Set<String>>();\n    }\n    synchronized (myAncestorsLock) {\n      myAncestorsNamesMap = new HashMap<String, Set<String>>();\n    }\n    synchronized (myLanguageLock) {\n      myLanguageSpecificCaches = new HashMap<Language, LanguageConceptsCache>();\n    }\n\n    fireCacheChanged();\n  }","commit_id":"ed15ca9aca5d31fab9c58e322e8b4173565d13ea","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void addCacheChangeListener(CacheChangeListener listener) {\n    if (!myCacheChangeListeners.contains(listener)) {\n      myCacheChangeListeners.add(listener);\n    }\n  }","id":52257,"modified_method":"public void addCacheChangeListener(CacheChangeListener listener) {\n    myCacheChangeListeners.addIfAbsent(listener);\n  }","commit_id":"ed15ca9aca5d31fab9c58e322e8b4173565d13ea","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Set<String> getDefaultSubstitutableDescendantsOf(String concept, Language l) {\n    Set<String> result = getLanguageCache(l).getSubconcepts(concept);\n    if (result == null) {\n      return Collections.EMPTY_SET;\n    }\n    return Collections.unmodifiableSet(result);\n  }","id":52258,"modified_method":"public Set<String> getDefaultSubstitutableDescendantsOf(String concept, Language l) {\n    Set<String> result;\n    synchronized (myLanguageLock) {\n      result = getLanguageCache(l).getSubconcepts(concept);\n    }\n    return result == null ? Collections.<String>emptySet() : Collections.unmodifiableSet(result);\n  }","commit_id":"ed15ca9aca5d31fab9c58e322e8b4173565d13ea","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void rebuildCaches() {\n    myDirectDescendantsCache.clear();\n    ModelAccess.instance().runReadAction(new Runnable() {\n      public void run() {\n        for (Language language : myModuleRepository.getAllLanguages()) {\n          SModelDescriptor structureDescriptor = language.getStructureModelDescriptor();\n          if (structureDescriptor != null) {\n            for (SNode root : structureDescriptor.getSModel().getRoots()) {\n              if (root.isInstanceOfConcept(AbstractConceptDeclaration.concept)) {\n                addToCache(NameUtil.nodeFQName(root));\n              }\n            }\n          }\n        }\n      }\n    });\n    myDescendantsCachesAreValid = true;\n  }","id":52259,"modified_method":"private void rebuildDescendantsCaches() {\n    myDirectDescendantsCache.clear();\n    ModelAccess.instance().runReadAction(new Runnable() {\n      public void run() {\n        for (Language language : myModuleRepository.getAllLanguages()) {\n          SModelDescriptor structureDescriptor = language.getStructureModelDescriptor();\n          if (structureDescriptor != null) {\n            for (SNode root : structureDescriptor.getSModel().getRoots()) {\n              if (root.isInstanceOfConcept(AbstractConceptDeclaration.concept)) {\n                addToCache(NameUtil.nodeFQName(root));\n              }\n            }\n          }\n        }\n      }\n    });\n    myDescendantsCachesAreValid = true;\n  }","commit_id":"ed15ca9aca5d31fab9c58e322e8b4173565d13ea","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Set<String> getParentsNames(final String conceptFqName) {\n    fireReadAccessPerformed();\n    if (myParentsNamesMap.containsKey(conceptFqName)) {\n      return Collections.unmodifiableSet(myParentsNamesMap.get(conceptFqName));\n    } else {\n      return NodeReadAccessCasterInEditor.runReadTransparentAction(new Computable<Set<String>>() {\n        public Set<String> compute() {\n          Set<String> result = new LinkedHashSet<String>();\n          AbstractConceptDeclaration declaration = SModelUtil_new.findConceptDeclaration(conceptFqName, GlobalScope.getInstance());\n          if (declaration == null) {\n            return result;\n          }\n          if (declaration instanceof ConceptDeclaration) {\n            ConceptDeclaration cd = (ConceptDeclaration) declaration;\n            if (cd.getExtends() != null) {\n              result.add(NameUtil.nodeFQName(cd.getExtends()));\n            } else if (!BaseConcept.concept.equals(NameUtil.nodeFQName(cd))) {\n              result.add(BaseConcept.concept);\n            }\n            for (InterfaceConceptReference icr : cd.getImplementses()) {\n              result.add(NameUtil.nodeFQName(icr.getIntfc()));\n            }\n          }\n          if (declaration instanceof InterfaceConceptDeclaration) {\n            InterfaceConceptDeclaration icd = (InterfaceConceptDeclaration) declaration;\n            for (InterfaceConceptReference icr : icd.getExtendses()) {\n              result.add(NameUtil.nodeFQName(icr.getIntfc()));\n            }\n          }\n          myParentsNamesMap.put(conceptFqName, result);\n          return Collections.unmodifiableSet(result);\n        }\n      });\n    }\n  }","id":52260,"modified_method":"public Set<String> getParentsNames(final String conceptFqName) {\n    fireReadAccessPerformed();\n    synchronized (myParentsNamesLock) {\n      Set<String> result = myParentsNamesMap.get(conceptFqName);\n      if (result == null) {\n        result = NodeReadAccessCasterInEditor.runReadTransparentAction(new Computable<Set<String>>() {\n          public Set<String> compute() {\n            AbstractConceptDeclaration declaration = SModelUtil_new.findConceptDeclaration(conceptFqName, GlobalScope.getInstance());\n            if (declaration == null) {\n              return Collections.emptySet();\n            }\n            Set<String> result = new LinkedHashSet<String>();\n            if (declaration instanceof ConceptDeclaration) {\n              ConceptDeclaration cd = (ConceptDeclaration) declaration;\n              if (cd.getExtends() != null) {\n                result.add(NameUtil.nodeFQName(cd.getExtends()));\n              } else if (!BaseConcept.concept.equals(NameUtil.nodeFQName(cd))) {\n                result.add(BaseConcept.concept);\n              }\n              for (InterfaceConceptReference icr : cd.getImplementses()) {\n                result.add(NameUtil.nodeFQName(icr.getIntfc()));\n              }\n            }\n            if (declaration instanceof InterfaceConceptDeclaration) {\n              InterfaceConceptDeclaration icd = (InterfaceConceptDeclaration) declaration;\n              for (InterfaceConceptReference icr : icd.getExtendses()) {\n                result.add(NameUtil.nodeFQName(icr.getIntfc()));\n              }\n            }\n            return result;\n          }\n        });\n        myParentsNamesMap.put(conceptFqName, result);\n      }\n      return Collections.unmodifiableSet(result);\n    }\n  }","commit_id":"ed15ca9aca5d31fab9c58e322e8b4173565d13ea","url":"https://github.com/JetBrains/MPS"},{"original_method":"private Set<String> getAncestorsNames_internal(final String conceptFqName) {\n    fireReadAccessPerformed();\n    Set<String> result = myAncestorsNamesMap.get(conceptFqName);\n    if (result != null) {\n      return result;\n    } else {\n      return NodeReadAccessCasterInEditor.runReadTransparentAction(new Computable<Set<String>>() {\n        public Set<String> compute() {\n          Set<String> result = new HashSet<String>();\n          collectAncestorNames(conceptFqName, result);\n          myAncestorsNamesMap.put(conceptFqName, result);\n          return result;\n        }\n      });\n    }\n  }","id":52261,"modified_method":"private Set<String> getAncestorsNames_internal(final String conceptFqName) {\n    fireReadAccessPerformed();\n    synchronized (myAncestorsLock) {\n      Set<String> result = myAncestorsNamesMap.get(conceptFqName);\n      if (result == null) {\n        result = NodeReadAccessCasterInEditor.runReadTransparentAction(new Computable<Set<String>>() {\n          public Set<String> compute() {\n            Set<String> result = new HashSet<String>();\n            collectAncestorNames(conceptFqName, result);\n            return result;\n          }\n        });\n        myAncestorsNamesMap.put(conceptFqName, result);\n      }\n      return result;\n    }\n  }","commit_id":"ed15ca9aca5d31fab9c58e322e8b4173565d13ea","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Set<String> getDescendantsOfConcept(String congeptFQName) {\n    fireReadAccessPerformed();\n    if (!myDescendantsCachesAreValid) {\n      rebuildCaches();\n    }\n    Set<String> children = myDirectDescendantsCache.get(congeptFQName);\n    if (children == null) return new LinkedHashSet<String>();\n    return Collections.unmodifiableSet(children);\n  }","id":52262,"modified_method":"public Set<String> getDescendantsOfConcept(String congeptFQName) {\n    fireReadAccessPerformed();\n    Set<String> children;\n    synchronized (myDescendantsLock) {\n      if (!myDescendantsCachesAreValid) {\n        rebuildDescendantsCaches();\n      }\n      children = myDirectDescendantsCache.get(congeptFQName);\n    }\n    return children == null ? Collections.<String>emptySet() : Collections.unmodifiableSet(children);\n  }","commit_id":"ed15ca9aca5d31fab9c58e322e8b4173565d13ea","url":"https://github.com/JetBrains/MPS"},{"original_method":"public StringBuilder toString( StringBuilder sb, int d ) { indent(sb,d); return sb.append(this); }","id":52263,"modified_method":"public StringBuilder toString( StringBuilder sb, int d ) { return indent(sb,d).append(this); }","commit_id":"90a267ccd84f6d705da030e44295c45fc9aef7d6","url":"https://github.com/h2oai/h2o-2"},{"original_method":"ASTIsNA( AST left ) { super(left); }","id":52264,"modified_method":"ASTIsNA( AST left ) { super(left,false); }","commit_id":"90a267ccd84f6d705da030e44295c45fc9aef7d6","url":"https://github.com/h2oai/h2o-2"},{"original_method":"ASTSgn( AST left ) { super(left); }","id":52265,"modified_method":"ASTSgn( AST left ) { super(left,false); }","commit_id":"90a267ccd84f6d705da030e44295c45fc9aef7d6","url":"https://github.com/h2oai/h2o-2"},{"original_method":"ASTOp1( ) { super(-1,-1); _left=null; }","id":52266,"modified_method":"ASTOp1( ) { super(-1,-1); _left=null; _isReduce=false;}","commit_id":"90a267ccd84f6d705da030e44295c45fc9aef7d6","url":"https://github.com/h2oai/h2o-2"},{"original_method":"ASTKey( int cols, long rows, Key key) { super(cols,rows); _key=key; }","id":52267,"modified_method":"ASTKey( int cols, long rows, Key key, AST colsel, AST rowsel ) { \n      super(cols,rows); \n      _key=key;\n      _colsel = colsel;  _rowsel = rowsel;\n    }","commit_id":"90a267ccd84f6d705da030e44295c45fc9aef7d6","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Override public StringBuilder toString( StringBuilder sb, int d ) { \n      indent(sb,d); sb.append(this).append('\\n');\n      _left.toString(sb,d+1).append('\\n');\n      _rite.toString(sb,d+1);\n      return sb;\n    }","id":52268,"modified_method":"@Override public StringBuilder toString( StringBuilder sb, int d ) { \n      indent(sb,d).append(this).append('\\n');\n      _left.toString(sb,d+1).append('\\n');\n      _rite.toString(sb,d+1);\n      return sb;\n    }","commit_id":"90a267ccd84f6d705da030e44295c45fc9aef7d6","url":"https://github.com/h2oai/h2o-2"},{"original_method":"static ASTKey parse(Exec2 E) { \n      int x = E._x;\n      String id = E.isID();\n      if( id == null ) return null;\n      Key key = Key.make(id);\n      Iced ice = UKV.get(key);\n      if( ice==null || !(ice instanceof Frame) ) { E._x = x; return null; }\n      Frame fr = (Frame)ice;\n      return new ASTKey(fr.numCols(),fr.numRows(),key);\n    }","id":52269,"modified_method":"static ASTKey parse(Exec2 E) { \n      int x = E._x;\n      String id = E.isID();\n      if( id == null ) return null;\n      Key key = Key.make(id);\n      Iced ice = UKV.get(key);\n      if( ice==null || !(ice instanceof Frame) ) { E._x = x; return null; }\n      Frame fr = (Frame)ice;\n      AST rows=null, cols=null;\n      if( E.peek('[') ) {       // Subsets?\n        rows= E.xpeek(',',(x=E._x),parseCXExpr(E));\n        if( rows != null && rows._cols != 1 ) E.throwErr(\"Row select only a single column only\",x);\n        cols= E.xpeek(']',(x=E._x),parseCXExpr(E));\n        if( cols != null && cols._cols != 1 ) E.throwErr(\"Col select only a single column only\",x);\n      } \n      return new ASTKey(cols==null?fr.numCols():(int)cols._rows,\n                        rows==null?fr.numRows():     rows._rows,\n                        key,cols,rows);\n    }","commit_id":"90a267ccd84f6d705da030e44295c45fc9aef7d6","url":"https://github.com/h2oai/h2o-2"},{"original_method":"protected void indent( StringBuilder sb, int d ) { \n      for( int i=0; i<d; i++ ) sb.append(\"  \"); \n      sb.append(_rows).append('x').append(_cols).append(' ');\n    }","id":52270,"modified_method":"protected StringBuilder indent( StringBuilder sb, int d ) { \n      for( int i=0; i<d; i++ ) sb.append(\"  \"); \n      sb.append(_rows).append('x').append(_cols).append(' ');\n      return sb;\n    }","commit_id":"90a267ccd84f6d705da030e44295c45fc9aef7d6","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Override public StringBuilder toString( StringBuilder sb, int d ) { indent(sb,d); return sb.append(this); }","id":52271,"modified_method":"@Override public StringBuilder toString( StringBuilder sb, int d ) { return indent(sb,d).append(this); }","commit_id":"90a267ccd84f6d705da030e44295c45fc9aef7d6","url":"https://github.com/h2oai/h2o-2"},{"original_method":"static AST parseCXExpr(Exec2 E ) {\n      AST ast = parseExpr(E);\n      if( ast == null ) return null;\n      // Can find an infix op between expressions\n      AST ast2 = ASTOp2.parseInfix(E,ast); // Infix op, or not?\n      if( ast2 != null ) return ast2;\n      if( ast instanceof ASTKey && E.peek('=') ) { throw H2O.unimpl(); } // assignment\n      if( ast instanceof ASTKey && E.peek('[') ) { throw H2O.unimpl(); } // subset assignment\n      if( ast.isScalar() && E.peek('?') ) { throw H2O.unimpl(); } // infix trinary\n      return ast;\n    }","id":52272,"modified_method":"static AST parseCXExpr(Exec2 E ) {\n      AST ast2, ast = parseExpr(E);\n      if( ast == null ) return null;\n      // Can find an infix op between expressions\n      if( (ast2 = ASTOp2.parseInfix(E,ast)) != null ) return ast2;\n      // Can find '=' between expressions\n      if( (ast2 = ASTAssign.parse  (E,ast)) != null ) return ast2;\n      if( ast.isScalar() && E.peek('?') ) { throw H2O.unimpl(); } // infix trinary\n      return ast;\n    }","commit_id":"90a267ccd84f6d705da030e44295c45fc9aef7d6","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Override public StringBuilder toString( StringBuilder sb, int d ) { indent(sb,d); return sb.append(this); }","id":52273,"modified_method":"@Override public StringBuilder toString( StringBuilder sb, int d ) { \n      indent(sb,d).append(this);\n      if( _colsel != null || _rowsel != null ) {\n        sb.append(\"[,]\\n\");\n        if( _rowsel == null ) indent(sb,d+1).append(\"all rows\\n\");\n        else _rowsel.toString(sb,d+1).append('\\n');\n        if( _colsel == null ) indent(sb,d+1).append(\"all cols\");\n        else _colsel.toString(sb,d+1);\n      }\n      return sb;\n    }","commit_id":"90a267ccd84f6d705da030e44295c45fc9aef7d6","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Override public StringBuilder toString( StringBuilder sb, int d ) { \n      indent(sb,d); sb.append(this).append('\\n');\n      _left.toString(sb,d+1);\n      return sb;\n    }","id":52274,"modified_method":"@Override public StringBuilder toString( StringBuilder sb, int d ) { \n      indent(sb,d).append(this).append('\\n');\n      _left.toString(sb,d+1);\n      return sb;\n    }","commit_id":"90a267ccd84f6d705da030e44295c45fc9aef7d6","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Override protected Response serve() {\n    if( str == null ) return RequestServer._http404.serve();\n    Exception e;\n    try {\n      Frame fr = water.exec.Exec2.exec(str);\n      key = Key.make(\".Last.value\");\n      UKV.remove(key);\n      UKV.put(key,fr);\n      num_rows = fr.numRows();\n      num_cols = fr.numCols();\n      cols = new Inspect2.ColSummary[num_cols];\n      for( int i=0; i<num_cols; i++ )\n        cols[i] = new Inspect2.ColSummary(fr._names[i],fr.vecs()[i]);\n      if( num_rows==1 && num_cols==1 ) scalar=fr.vecs()[0].at(0);\n      return new Response(Response.Status.done, this, -1, -1, null);\n    } \n    catch( IllegalArgumentException pe ) { e=pe;} // No logging user typo's\n    catch( Exception e2 ) { Log.err(e=e2); }\n    return Response.error(e.getMessage());\n  }","id":52275,"modified_method":"@Override protected Response serve() {\n    if( str == null ) return RequestServer._http404.serve();\n    Exception e;\n    try {\n      Frame fr = water.exec.Exec2.exec(str);\n      if( fr == null ) throw new IllegalArgumentException(\"Null return from Exec2?\");\n      key = Key.make(\".Last.value\");\n      UKV.remove(key);\n      UKV.put(key,fr);\n      num_rows = fr.numRows();\n      num_cols = fr.numCols();\n      cols = new Inspect2.ColSummary[num_cols];\n      for( int i=0; i<num_cols; i++ )\n        cols[i] = new Inspect2.ColSummary(fr._names[i],fr.vecs()[i]);\n      if( num_rows==1 && num_cols==1 ) scalar=fr.vecs()[0].at(0);\n      return new Response(Response.Status.done, this, -1, -1, null);\n    } \n    catch( IllegalArgumentException pe ) { e=pe;} // No logging user typo's\n    catch( Exception e2 ) { Log.err(e=e2); }\n    return Response.error(e.getMessage());\n  }","commit_id":"90a267ccd84f6d705da030e44295c45fc9aef7d6","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Test public void testBasicExpr1() {\n    Key dest = Key.make(\"h.hex\");\n    try {\n      File file = TestUtil.find_test_file(\"smalldata/cars.csv\");\n      Key fkey = NFSFileVec.make(file);\n      Frame fr = ParseDataset2.parse(dest,new Key[]{fkey});\n      UKV.remove(fkey);\n\n      checkStr(\"1.23\");\n      checkStr(\" 1.23 + 2.34\");\n      checkStr(\" 1.23 2.34\");\n      checkStr(\"h.hex\");\n      checkStr(\"h.hex+1\");\n      checkStr(\"h.hex-h.hex\");\n      checkStr(\"1.23+(h.hex-h.hex)\");\n      checkStr(\"(1.23+h.hex)-h.hex\");\n      checkStr(\"min(h.hex,1+2)\");\n      checkStr(\"isNA(h.hex)\");\n\n    } finally {\n      UKV.remove(dest);         // Remove original hex frame key\n    }\n  }","id":52276,"modified_method":"@Test public void testBasicExpr1() {\n    Key dest = Key.make(\"h.hex\");\n    try {\n      File file = TestUtil.find_test_file(\"smalldata/cars.csv\");\n      Key fkey = NFSFileVec.make(file);\n      Frame fr = ParseDataset2.parse(dest,new Key[]{fkey});\n      UKV.remove(fkey);\n\n      checkStr(\"1.23\");\n      checkStr(\" 1.23 + 2.34\");\n      checkStr(\" 1.23 2.34\");\n      checkStr(\"h.hex\");\n      checkStr(\"h.hex+1\");\n      checkStr(\"h.hex-h.hex\");\n      checkStr(\"1.23+(h.hex-h.hex)\");\n      checkStr(\"(1.23+h.hex)-h.hex\");\n      checkStr(\"min(h.hex,1+2)\");\n      checkStr(\"isNA(h.hex)\");\n      checkStr(\"h.hex[2,3]\");\n      checkStr(\"h.hex[2+3,-4*5]\");\n      checkStr(\"h.hex[2+3,h.hex]\");\n      checkStr(\"h.hex[2,]\");\n      checkStr(\"h.hex[,3]\");\n      checkStr(\"h.hex[ncols(h.hex),nrows(h.hex)]\");\n      checkStr(\"h.hex[2,3]=4\");\n      checkStr(\"h.hex[2,]=h.hex[7,]\");\n      checkStr(\"h.hex[,2]=h.hex[,7]+1\");\n\n    } finally {\n      UKV.remove(dest);         // Remove original hex frame key\n    }\n  }","commit_id":"90a267ccd84f6d705da030e44295c45fc9aef7d6","url":"https://github.com/h2oai/h2o-2"},{"original_method":"/**\n     * @see java.util.Dictionary#keys()\n     */\n    @SuppressWarnings(\"unchecked\")\n    public Enumeration<String> keys() {\n        return new IteratorEnumeration(this.keySet().iterator());\n    }","id":52277,"modified_method":"/**\n     * @see java.util.Dictionary#keys()\n     */\n    public Enumeration<String> keys() {\n        return Collections.enumeration(this.keySet());\n    }","commit_id":"3af43a0049df28a39159bbc1e87a69c4a04c4194","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * @see java.util.Dictionary#elements()\n     */\n    @SuppressWarnings(\"unchecked\")\n    public Enumeration<Object> elements() {\n        return new IteratorEnumeration(this.values().iterator());\n    }","id":52278,"modified_method":"/**\n     * @see java.util.Dictionary#elements()\n     */\n    public Enumeration<Object> elements() {\n        return Collections.enumeration(this.values());\n    }","commit_id":"3af43a0049df28a39159bbc1e87a69c4a04c4194","url":"https://github.com/apache/sling"},{"original_method":"@Override\n    public Enumeration<String> getAttributeNamesInScope(int scope) {\n        if (scope == PAGE_SCOPE) {\n            return new Enumerator<String>(pageAttributes.keySet().iterator());\n        }\n\n        return invokingJspCtxt.getAttributeNamesInScope(scope);\n    }","id":52279,"modified_method":"@Override\n    public Enumeration<String> getAttributeNamesInScope(int scope) {\n        if (scope == PAGE_SCOPE) {\n            return Collections.enumeration(pageAttributes.keySet());\n        }\n\n        return invokingJspCtxt.getAttributeNamesInScope(scope);\n    }","commit_id":"640eba1f87881ccdadec0d57c3b33f254b28e5ca","url":"https://github.com/apache/tomcat"},{"original_method":"private Enumeration<String> doGetAttributeNamesInScope(int scope) {\n        switch (scope) {\n        case PAGE_SCOPE:\n            return new Enumerator<String>(attributes.keySet().iterator());\n\n        case REQUEST_SCOPE:\n            return request.getAttributeNames();\n\n        case SESSION_SCOPE:\n            if (session == null) {\n                throw new IllegalStateException(Localizer\n                        .getMessage(\"jsp.error.page.noSession\"));\n            }\n            return session.getAttributeNames();\n\n        case APPLICATION_SCOPE:\n            return context.getAttributeNames();\n\n        default:\n            throw new IllegalArgumentException(\"Invalid scope\");\n        }\n    }","id":52280,"modified_method":"private Enumeration<String> doGetAttributeNamesInScope(int scope) {\n        switch (scope) {\n        case PAGE_SCOPE:\n            return Collections.enumeration(attributes.keySet());\n\n        case REQUEST_SCOPE:\n            return request.getAttributeNames();\n\n        case SESSION_SCOPE:\n            if (session == null) {\n                throw new IllegalStateException(Localizer\n                        .getMessage(\"jsp.error.page.noSession\"));\n            }\n            return session.getAttributeNames();\n\n        case APPLICATION_SCOPE:\n            return context.getAttributeNames();\n\n        default:\n            throw new IllegalArgumentException(\"Invalid scope\");\n        }\n    }","commit_id":"640eba1f87881ccdadec0d57c3b33f254b28e5ca","url":"https://github.com/apache/tomcat"},{"original_method":"public Enumeration<WindowState> getSupportedWindowStates() {\n        return new IteratorEnumeration(this.windowStates.iterator());\n    }","id":52281,"modified_method":"public Enumeration<WindowState> getSupportedWindowStates() {\n        return Collections.enumeration(this.windowStates);\n    }","commit_id":"7e6afa2dd50a96a0c9ada2ab59e1ccfb70a089f6","url":"https://github.com/Jasig/uPortal"},{"original_method":"public Enumeration<PortletMode> getSupportedPortletModes() {\n        return new IteratorEnumeration(this.portletModes.iterator());\n    }","id":52282,"modified_method":"public Enumeration<PortletMode> getSupportedPortletModes() {\n        return Collections.enumeration(this.portletModes);\n    }","commit_id":"7e6afa2dd50a96a0c9ada2ab59e1ccfb70a089f6","url":"https://github.com/Jasig/uPortal"},{"original_method":"@Override\n\tpublic PortletSession createPortletSession(PortletContext portletContext,\n\t\t\tPortletWindow portletWindow, HttpSession session) {\n\t\t\n\t\t// TODO pluto 1.1 PortletEnvironmentService#createPortletSession passed in the request; now use IPortalRequestUtils#getCurrentPortalRequest()?\n\t\tHttpServletRequest request = portalRequestUtils.getCurrentPortalRequest();\n\t\tfinal IPortletWindow internalPortletWindow = this.portletWindowRegistry.convertPortletWindow(request, portletWindow);\n        final IPortletEntityId portletEntityId = internalPortletWindow.getPortletEntityId();\n        \n\t\treturn new ScopingPortletSessionImpl(portletEntityId, portletContext, internalPortletWindow, session);\n\t}","id":52283,"modified_method":"@Override\n\tpublic PortletSession createPortletSession(PortletContext portletContext, PortletWindow portletWindow, HttpSession session) {\n\t\t// TODO pluto 1.1 PortletEnvironmentService#createPortletSession passed in the request; now use IPortalRequestUtils#getCurrentPortalRequest()?\n\t\tfinal HttpServletRequest request = portalRequestUtils.getCurrentPortalRequest();\n\t\tfinal IPortletWindow internalPortletWindow = this.portletWindowRegistry.convertPortletWindow(request, portletWindow);\n        final IPortletEntityId portletEntityId = internalPortletWindow.getPortletEntityId();\n        \n\t\treturn new ScopingPortletSessionImpl(portletEntityId, portletContext, internalPortletWindow, session);\n\t}","commit_id":"7e6afa2dd50a96a0c9ada2ab59e1ccfb70a089f6","url":"https://github.com/Jasig/uPortal"},{"original_method":"public boolean isStoreInEntity(PortletRequest portletRequest) { \n        final HttpServletRequest httpServletRequest = this.portalRequestUtils.getOriginalPortletAdaptorRequest(portletRequest);\n    \tif (!isGuestUser(httpServletRequest) || this.storeGuestPreferencesInEntity)\n    \t\treturn true;\n    \telse\n    \t\treturn false; \n    }","id":52284,"modified_method":"public boolean isStoreInEntity(PortletRequest portletRequest) { \n        final HttpServletRequest httpServletRequest = this.portalRequestUtils.getOriginalPortletAdaptorRequest(portletRequest);\n    \tif (!isGuestUser(httpServletRequest) || this.storeGuestPreferencesInEntity) {\n    \t\treturn true;\n    \t}\n\n    \treturn false; \n    }","commit_id":"7e6afa2dd50a96a0c9ada2ab59e1ccfb70a089f6","url":"https://github.com/Jasig/uPortal"},{"original_method":"public boolean isLoadFromEntity(PortletRequest portletRequest) { \n        final HttpServletRequest httpServletRequest = this.portalRequestUtils.getOriginalPortletAdaptorRequest(portletRequest);\n    \tif (!isGuestUser(httpServletRequest) || this.loadGuestPreferencesFromEntity)\n    \t\treturn true;\n    \telse\n    \t\treturn false; \n    }","id":52285,"modified_method":"public boolean isLoadFromEntity(PortletRequest portletRequest) { \n        final HttpServletRequest httpServletRequest = this.portalRequestUtils.getOriginalPortletAdaptorRequest(portletRequest);\n    \tif (!isGuestUser(httpServletRequest) || this.loadGuestPreferencesFromEntity){\n            return true;\n        }\n\n        return false; \n    }","commit_id":"7e6afa2dd50a96a0c9ada2ab59e1ccfb70a089f6","url":"https://github.com/Jasig/uPortal"},{"original_method":"public boolean isStoreInMemory(PortletRequest portletRequest) { \n        final HttpServletRequest httpServletRequest = this.portalRequestUtils.getOriginalPortletAdaptorRequest(portletRequest);\n    \tif (isGuestUser(httpServletRequest) && this.storeGuestPreferencesInMemory)\n    \t\treturn true;\n    \telse\n    \t\treturn false; \n    }","id":52286,"modified_method":"public boolean isStoreInMemory(PortletRequest portletRequest) { \n        final HttpServletRequest httpServletRequest = this.portalRequestUtils.getOriginalPortletAdaptorRequest(portletRequest);\n    \tif (isGuestUser(httpServletRequest) && this.storeGuestPreferencesInMemory){\n            return true;\n        }\n\n        return false; \n    }","commit_id":"7e6afa2dd50a96a0c9ada2ab59e1ccfb70a089f6","url":"https://github.com/Jasig/uPortal"},{"original_method":"public boolean isLoadFromMemory(PortletRequest portletRequest) { \n        final HttpServletRequest httpServletRequest = this.portalRequestUtils.getOriginalPortletAdaptorRequest(portletRequest);\n    \tif (isGuestUser(httpServletRequest) && this.loadGuestPreferencesFromMemory)\n    \t\treturn true;\n    \telse\n    \t\treturn false; \n    }","id":52287,"modified_method":"public boolean isLoadFromMemory(PortletRequest portletRequest) { \n        final HttpServletRequest httpServletRequest = this.portalRequestUtils.getOriginalPortletAdaptorRequest(portletRequest);\n    \tif (isGuestUser(httpServletRequest) && this.loadGuestPreferencesFromMemory){\n            return true;\n        }\n\n        return false; \n    }","commit_id":"7e6afa2dd50a96a0c9ada2ab59e1ccfb70a089f6","url":"https://github.com/Jasig/uPortal"},{"original_method":"private AntTypeDefinitionImpl loadClass(final @Nullable AntFile antFile,\n                                          @Nullable final String classname,\n                                          @Nullable final String name,\n                                          @Nullable final String uri,\n                                          final AntStructuredElement parent) {\n    if (classname == null || name == null || name.length() == 0) {\n      return null;\n    }\n    boolean newlyLoaded = false;\n    final URL[] urls = getClassPathUrls();\n    Class clazz = CLASS_CACHE.getClass(urls, classname);\n    if (clazz == null) {\n      final ClassLoader loader = getClassLoader(urls);\n      if (loader != null) {\n        try {\n          clazz = loader.loadClass(classname);\n          newlyLoaded = true;\n        }\n        catch (ClassNotFoundException e) {\n          myLocalizedError = e.getLocalizedMessage();\n          clazz = null;\n        }\n        catch (NoClassDefFoundError e) {\n          myLocalizedError = e.getLocalizedMessage();\n          clazz = null;\n        }\n        catch (UnsupportedClassVersionError e) {\n          myLocalizedError = e.getLocalizedMessage();\n          clazz = null;\n        }\n      }\n    }\n    final String nsPrefix = (uri == null) ? null : getSourceElement().getPrefixByNamespace(uri);\n    final AntTypeId id = (nsPrefix == null) ? new AntTypeId(name) : new AntTypeId(name, nsPrefix);\n    final AntTypeDefinitionImpl def;\n    if (clazz == null) {\n      def = new AntTypeDefinitionImpl(id, classname, isTask());\n    }\n    else {\n      myClassesLoaded = true;\n      def = (AntTypeDefinitionImpl)AntFileImpl.createTypeDefinition(id, clazz, isTask(clazz));\n      if (newlyLoaded) {\n        CLASS_CACHE.setClass(urls, classname, clazz);\n      }\n    }\n    if (def != null) {\n      myNewDefinitions = ArrayUtil.append(myNewDefinitions, def);\n      def.setDefiningElement(this);\n      if (parent != null) {\n        parent.registerCustomType(def);\n      }\n      if (antFile != null) {\n        for (final AntTypeId typeId : def.getNestedElements()) {\n          final String nestedClassName = def.getNestedClassName(typeId);\n          AntTypeDefinitionImpl nestedDef = (AntTypeDefinitionImpl)antFile.getBaseTypeDefinition(nestedClassName);\n          if (nestedDef == null) {\n            nestedDef = loadClass(antFile, nestedClassName, typeId.getName(), uri, null);\n            if (nestedDef != null) {\n              nestedDef.setDefiningElement(this);\n              def.registerNestedType(nestedDef.getTypeId(), nestedDef.getClassName());\n              antFile.registerCustomType(nestedDef);\n            }\n          }\n        }\n      }\n    }\n    return def;\n  }","id":52288,"modified_method":"private AntTypeDefinitionImpl loadClass(final @Nullable AntFile antFile,\n                                          @Nullable final String classname,\n                                          @Nullable final String name,\n                                          @Nullable final String uri,\n                                          final AntStructuredElement parent) {\n    if (classname == null || name == null || name.length() == 0) {\n      return null;\n    }\n    boolean newlyLoaded = false;\n    final URL[] urls = getClassPathUrls();\n    Class clazz = CLASS_CACHE.getClass(urls, classname);\n    if (clazz == null) {\n      final ClassLoader loader = getClassLoader(urls);\n      if (loader != null) {\n        try {\n          clazz = loader.loadClass(classname);\n          newlyLoaded = true;\n        }\n        catch (ClassNotFoundException e) {\n          myLocalizedError = e.getLocalizedMessage();\n          clazz = null;\n        }\n        catch (NoClassDefFoundError e) {\n          myLocalizedError = e.getLocalizedMessage();\n          clazz = null;\n        }\n        catch (UnsupportedClassVersionError e) {\n          myLocalizedError = e.getLocalizedMessage();\n          clazz = null;\n        }\n      }\n    }\n    final String nsPrefix = (uri == null) ? null : getSourceElement().getPrefixByNamespace(uri);\n    final AntTypeId id = (nsPrefix == null) ? new AntTypeId(name) : new AntTypeId(name, nsPrefix);\n    final AntTypeDefinitionImpl def;\n    if (clazz == null) {\n      def = new AntTypeDefinitionImpl(id, classname, isTask());\n    }\n    else {\n      myClassesLoaded = true;\n      def = (AntTypeDefinitionImpl)AntFileImpl.createTypeDefinition(id, clazz, isTask(clazz));\n      if (newlyLoaded) {\n        CLASS_CACHE.setClass(urls, classname, clazz);\n      }\n    }\n    if (def != null) {\n      myNewDefinitions = ArrayUtil.append(myNewDefinitions, def);\n      def.setDefiningElement(this);\n      if (parent != null) {\n        parent.registerCustomType(def);\n      }\n      else {\n        antFile.registerCustomType(def);\n      }\n      if (antFile != null) {\n        for (final AntTypeId typeId : def.getNestedElements()) {\n          final String nestedClassName = def.getNestedClassName(typeId);\n          AntTypeDefinitionImpl nestedDef = (AntTypeDefinitionImpl)antFile.getBaseTypeDefinition(nestedClassName);\n          if (nestedDef == null) {\n            nestedDef = loadClass(antFile, nestedClassName, typeId.getName(), uri, null);\n            if (nestedDef != null) {\n              def.registerNestedType(nestedDef.getTypeId(), nestedDef.getClassName());\n            }\n          }\n        }\n      }\n    }\n    return def;\n  }","commit_id":"a2e62c588c2bb817c4db513216a1022c577f1ebf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private AntTypeDefinitionImpl loadClass(final @Nullable AntFile antFile,\n                                          @Nullable final String classname,\n                                          @Nullable final String name,\n                                          @Nullable final String uri,\n                                          final AntStructuredElement parent) {\n    if (classname == null || name == null || name.length() == 0) {\n      return null;\n    }\n    boolean newlyLoaded = false;\n    final List<URL> urls = getClassPathUrls();\n    Class clazz = CLASS_CACHE.getClass(urls, classname);\n    if (clazz == null) {\n      final ClassLoader loader = getClassLoader(urls);\n      if (loader != null) {\n        try {\n          clazz = loader.loadClass(classname);\n          newlyLoaded = true;\n        }\n        catch (ClassNotFoundException e) {\n          myLocalizedError = e.getLocalizedMessage();\n          clazz = null;\n        }\n        catch (NoClassDefFoundError e) {\n          myLocalizedError = e.getLocalizedMessage();\n          clazz = null;\n        }\n        catch (UnsupportedClassVersionError e) {\n          myLocalizedError = e.getLocalizedMessage();\n          clazz = null;\n        }\n      }\n    }\n    final String nsPrefix = (uri == null) ? null : getSourceElement().getPrefixByNamespace(uri);\n    final AntTypeId id = (nsPrefix == null) ? new AntTypeId(name) : new AntTypeId(name, nsPrefix);\n    final AntTypeDefinitionImpl def;\n    if (clazz == null) {\n      def = new AntTypeDefinitionImpl(id, classname, isTask());\n    }\n    else {\n      myClassesLoaded = true;\n      def = (AntTypeDefinitionImpl)AntFileImpl.createTypeDefinition(id, clazz, isTask(clazz));\n      if (newlyLoaded) {\n        CLASS_CACHE.setClass(urls, classname, clazz);\n      }\n    }\n    if (def != null) {\n      myNewDefinitions = ArrayUtil.append(myNewDefinitions, def);\n      def.setDefiningElement(this);\n      if (parent != null) {\n        parent.registerCustomType(def);\n      }\n      else {\n        antFile.registerCustomType(def);\n      }\n      if (antFile != null) {\n        for (final AntTypeId typeId : def.getNestedElements()) {\n          final String nestedClassName = def.getNestedClassName(typeId);\n          AntTypeDefinitionImpl nestedDef = (AntTypeDefinitionImpl)antFile.getBaseTypeDefinition(nestedClassName);\n          if (nestedDef == null) {\n            nestedDef = loadClass(antFile, nestedClassName, typeId.getName(), uri, null);\n            if (nestedDef != null) {\n              def.registerNestedType(nestedDef.getTypeId(), nestedDef.getClassName());\n            }\n          }\n        }\n      }\n    }\n    return def;\n  }","id":52289,"modified_method":"private AntTypeDefinitionImpl loadClass(final @Nullable AntFile antFile,\n                                          @Nullable final String classname,\n                                          @Nullable final String name,\n                                          @Nullable final String uri,\n                                          final AntStructuredElement parent) {\n    if (classname == null || name == null || name.length() == 0) {\n      return null;\n    }\n    boolean newlyLoaded = false;\n    final List<URL> urls = getClassPathUrls();\n    Class clazz = CLASS_CACHE.getClass(urls, classname);\n    if (clazz == null) {\n      final ClassLoader loader = getClassLoader(urls);\n      if (loader != null) {\n        try {\n          clazz = loader.loadClass(classname);\n          newlyLoaded = true;\n        }\n        catch (ClassNotFoundException e) {\n          myLocalizedError = e.getLocalizedMessage();\n          clazz = null;\n        }\n        catch (NoClassDefFoundError e) {\n          myLocalizedError = e.getLocalizedMessage();\n          clazz = null;\n        }\n        catch (UnsupportedClassVersionError e) {\n          myLocalizedError = e.getLocalizedMessage();\n          clazz = null;\n        }\n      }\n    }\n    final String nsPrefix = (uri == null) ? null : getSourceElement().getPrefixByNamespace(uri);\n    final AntTypeId id = (nsPrefix == null) ? new AntTypeId(name) : new AntTypeId(name, nsPrefix);\n    final AntTypeDefinitionImpl def;\n    if (clazz == null) {\n      def = new AntTypeDefinitionImpl(id, classname, isTask());\n    }\n    else {\n      myClassesLoaded = true;\n      def = (AntTypeDefinitionImpl)AntFileImpl.createTypeDefinition(id, clazz, isTask(clazz));\n      if (newlyLoaded) {\n        CLASS_CACHE.setClass(urls, classname, clazz);\n      }\n    }\n    if (def != null) {\n      myNewDefinitions = ArrayUtil.append(myNewDefinitions, def);\n      def.setDefiningElement(this);\n      if (parent != null) {\n        parent.registerCustomType(def);\n        if (!(parent instanceof AntProject)) {\n          // make custom definition available at project level \n          final AntProject antProject = parent.getAntProject();\n          if (antProject != null) {\n            antProject.registerCustomType(def);\n          }\n        }\n      }\n      else {\n        antFile.registerCustomType(def);\n      }\n      if (antFile != null) {\n        for (final AntTypeId typeId : def.getNestedElements()) {\n          final String nestedClassName = def.getNestedClassName(typeId);\n          AntTypeDefinitionImpl nestedDef = (AntTypeDefinitionImpl)antFile.getBaseTypeDefinition(nestedClassName);\n          if (nestedDef == null) {\n            nestedDef = loadClass(antFile, nestedClassName, typeId.getName(), uri, null);\n            if (nestedDef != null) {\n              def.registerNestedType(nestedDef.getTypeId(), nestedDef.getClassName());\n            }\n          }\n        }\n      }\n    }\n    return def;\n  }","commit_id":"54775cdcee9b2a7355cd558d9e1ebdfdecf17231","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private ReflectedProject(final ClassLoader classLoader) {\n      myProject = null;\n      try {\n        final Class projectClass = classLoader.loadClass(\"org.apache.tools.ant.Project\");\n        if (projectClass != null) {\n          myProject = projectClass.newInstance();\n          Method method = projectClass.getMethod(INIT_METHOD_NAME);\n          method.invoke(myProject);\n          method = getMethod(projectClass, GET_TASK_DEFINITIONS_METHOD_NAME);\n          myTaskDefinitions = (Hashtable)method.invoke(myProject);\n          method = getMethod(projectClass, GET_DATA_TYPE_DEFINITIONS_METHOD_NAME);\n          myDataTypeDefinitions = (Hashtable)method.invoke(myProject);\n          method = getMethod(projectClass, GET_PROPERTIES_METHOD_NAME);\n          myProperties = (Hashtable)method.invoke(myProject);\n        }\n      }\n      catch (Exception e) {\n        myProject = null;\n      }\n    }","id":52290,"modified_method":"private ReflectedProject(final ClassLoader classLoader) {\n      myProject = null;\n      try {\n        final Class projectClass = classLoader.loadClass(\"org.apache.tools.ant.Project\");\n        if (projectClass != null) {\n          myProject = projectClass.newInstance();\n          Method method = projectClass.getMethod(INIT_METHOD_NAME);\n          method.invoke(myProject);\n          method = getMethod(projectClass, GET_TASK_DEFINITIONS_METHOD_NAME);\n          myTaskDefinitions = (Hashtable)method.invoke(myProject);\n          method = getMethod(projectClass, GET_DATA_TYPE_DEFINITIONS_METHOD_NAME);\n          myDataTypeDefinitions = (Hashtable)method.invoke(myProject);\n          method = getMethod(projectClass, GET_PROPERTIES_METHOD_NAME);\n          myProperties = (Hashtable)method.invoke(myProject);\n          myTargetClass = classLoader.loadClass(\"org.apache.tools.ant.Target\");\n        }\n      }\n      catch (Exception e) {\n        myProject = null;\n      }\n    }","commit_id":"032a73c99d00348f8f3d38adf672913a08e57fb4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static ReflectedProject geProject(final ClassLoader classLoader) {\n      try {\n        synchronized (ourProjects) {\n          for (final SoftReference<Pair<ReflectedProject, ClassLoader>> ref : ourProjects) {\n            final Pair<ReflectedProject, ClassLoader> pair = ref.get();\n            if (pair != null && pair.second == classLoader) {\n              return pair.first;\n            }\n          }\n          ReflectedProject project = new ReflectedProject(classLoader);\n          final SoftReference<Pair<ReflectedProject, ClassLoader>> ref =\n            new SoftReference<Pair<ReflectedProject, ClassLoader>>(new Pair<ReflectedProject, ClassLoader>(project, classLoader));\n          for (int i = 0; i < ourProjects.size(); ++i) {\n            final Pair<ReflectedProject, ClassLoader> pair = ourProjects.get(i).get();\n            if (pair == null) {\n              ourProjects.set(i, ref);\n              return project;\n            }\n          }\n          ourProjects.add(ref);\n          return project;\n        }\n      }\n      finally {\n        ourAlarm.cancelAllRequests();\n        ourAlarm.addRequest(new Runnable() {\n          public void run() {\n            synchronized (ourProjects) {\n              ourProjects.clear();\n            }\n          }\n        }, 30000, ModalityState.NON_MODAL);\n      }\n    }","id":52291,"modified_method":"private static ReflectedProject getProject(final ClassLoader classLoader) {\n      try {\n        synchronized (ourProjects) {\n          for (final SoftReference<Pair<ReflectedProject, ClassLoader>> ref : ourProjects) {\n            final Pair<ReflectedProject, ClassLoader> pair = ref.get();\n            if (pair != null && pair.second == classLoader) {\n              return pair.first;\n            }\n          }\n          ReflectedProject project = new ReflectedProject(classLoader);\n          final SoftReference<Pair<ReflectedProject, ClassLoader>> ref =\n            new SoftReference<Pair<ReflectedProject, ClassLoader>>(new Pair<ReflectedProject, ClassLoader>(project, classLoader));\n          for (int i = 0; i < ourProjects.size(); ++i) {\n            final Pair<ReflectedProject, ClassLoader> pair = ourProjects.get(i).get();\n            if (pair == null) {\n              ourProjects.set(i, ref);\n              return project;\n            }\n          }\n          ourProjects.add(ref);\n          return project;\n        }\n      }\n      finally {\n        ourAlarm.cancelAllRequests();\n        ourAlarm.addRequest(new Runnable() {\n          public void run() {\n            synchronized (ourProjects) {\n              ourProjects.clear();\n            }\n          }\n        }, 30000, ModalityState.NON_MODAL);\n      }\n    }","commit_id":"032a73c99d00348f8f3d38adf672913a08e57fb4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public AntTypeDefinition getBaseTypeDefinition(final String className) {\n    synchronized (PsiLock.LOCK) {\n      if (myTypeDefinitions == null) {\n        myTypeDefinitions = new HashMap<String, AntTypeDefinition>();\n        myProjectElements = new HashMap<AntTypeId, String>();\n        final ReflectedProject reflectedProject = ReflectedProject.geProject(getClassLoader());\n        if (reflectedProject.myProject != null) {\n          final AntInstrospector projectHelper = getHelperExceptionSafe(reflectedProject.myProject.getClass());\n          try {\n            // first, create task definitons\n            updateTypeDefinitions(reflectedProject.myTaskDefinitions, true);\n            // second, create definitions of data types\n            updateTypeDefinitions(reflectedProject.myDataTypeDefinitions, false);\n            myProjectProperties = reflectedProject.myProperties;\n          }\n          finally {\n            if (projectHelper != null) {\n              projectHelper.clearCache();\n            }\n          }\n        }\n      }\n      return myTypeDefinitions.get(className);\n    }\n  }","id":52292,"modified_method":"@Nullable\n  public AntTypeDefinition getBaseTypeDefinition(final String className) {\n    synchronized (PsiLock.LOCK) {\n      if (myTypeDefinitions == null) {\n        myTypeDefinitions = new HashMap<String, AntTypeDefinition>();\n        myProjectElements = new HashMap<AntTypeId, String>();\n        final ReflectedProject reflectedProject = ReflectedProject.getProject(getClassLoader());\n        if (reflectedProject.myProject != null) {\n          final AntInstrospector projectHelper = getHelperExceptionSafe(reflectedProject.myProject.getClass());\n          try {\n            // first, create task definitons\n            updateTypeDefinitions(reflectedProject.myTaskDefinitions, true);\n            // second, create definitions of data types\n            updateTypeDefinitions(reflectedProject.myDataTypeDefinitions, false);\n            myProjectProperties = reflectedProject.myProperties;\n          }\n          finally {\n            if (projectHelper != null) {\n              projectHelper.clearCache();\n            }\n          }\n        }\n      }\n      return myTypeDefinitions.get(className);\n    }\n  }","commit_id":"032a73c99d00348f8f3d38adf672913a08e57fb4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void registerCustomType(final AntTypeDefinition def) {\n    synchronized (PsiLock.LOCK) {\n      myTypeDefinitionArray = null;\n      final String classname = def.getClassName();\n      myTypeDefinitions.put(classname, def);\n      myProjectElements.put(def.getTypeId(), classname);\n      if (myTargetDefinition != null && myTargetDefinition != def) {\n        myTargetDefinition = null;\n      }\n    }\n  }","id":52293,"modified_method":"public void registerCustomType(final AntTypeDefinition def) {\n    synchronized (PsiLock.LOCK) {\n      myTypeDefinitionArray = null;\n      final String classname = def.getClassName();\n      myTypeDefinitions.put(classname, def);\n      if (myTargetDefinition != null && myTargetDefinition != def) {\n        myTargetDefinition = null;\n      }\n    }\n  }","commit_id":"032a73c99d00348f8f3d38adf672913a08e57fb4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public AntTypeDefinition getTargetDefinition() {\n    getBaseTypeDefinition(null);\n    synchronized (PsiLock.LOCK) {\n      if (myTargetDefinition == null) {\n        @NonNls final HashMap<String, AntAttributeType> targetAttrs = new HashMap<String, AntAttributeType>();\n        targetAttrs.put(NAME_ATTR, AntAttributeType.STRING);\n        targetAttrs.put(DEPENDS_ATTR, AntAttributeType.STRING);\n        targetAttrs.put(IF_ATTR, AntAttributeType.STRING);\n        targetAttrs.put(UNLESS_ATTR, AntAttributeType.STRING);\n        targetAttrs.put(DESCRIPTION_ATTR, AntAttributeType.STRING);\n        final HashMap<AntTypeId, String> targetElements = new HashMap<AntTypeId, String>();\n        for (final AntTypeDefinition def : getBaseTypeDefinitions()) {\n          final AntTypeId id = def.getTypeId();\n          if (def.isTask() || targetElements.get(id) == null) {\n            targetElements.put(id, def.getClassName());\n          }\n        }\n        myTargetDefinition =\n          new AntTypeDefinitionImpl(new AntTypeId(TARGET_TAG), Target.class.getName(), false, targetAttrs, targetElements);\n        registerCustomType(myTargetDefinition);\n      }\n      return myTargetDefinition;\n    }\n  }","id":52294,"modified_method":"@NotNull\n  public AntTypeDefinition getTargetDefinition() {\n    getBaseTypeDefinition(null);\n    synchronized (PsiLock.LOCK) {\n      if (myTargetDefinition == null) {\n        final Class targetClass = ReflectedProject.getProject(getClassLoader()).myTargetClass;\n        final AntTypeDefinition targetDef = createTypeDefinition(new AntTypeId(TARGET_TAG), targetClass, false);\n        for (final AntTypeDefinition def : getBaseTypeDefinitions()) {\n          final AntTypeId id = def.getTypeId();\n          if ((def.isTask() || isDataDype(def)) && isProjectNestedElement(def)) { \n            // if type definition is a task _and_ is visible at the project level\n            // custom tasks can define nested types with the same typeId (e.g. \"property\") but different implementation class\n            // such nested types can be used only inside tasks which defined them, but not at a project level\n            targetDef.registerNestedType(id, def.getClassName());\n          }\n        }\n        myTargetDefinition = targetDef;\n        registerCustomType(targetDef);\n      }\n      return myTargetDefinition;\n    }\n  }","commit_id":"032a73c99d00348f8f3d38adf672913a08e57fb4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public AntTypeDefinition[] getDefinitions() {\n    synchronized (PsiLock.LOCK) {\n      if (myNewDefinitions == null) {\n        myNewDefinitions = AntTypeDefinition.EMPTY_ARRAY;\n        final String classname = getClassName();\n        if (classname != null) {\n          loadClass(classname, getDefinedName(), getUri());\n        }\n        else {\n          final String resource = getResource();\n          if (resource != null) {\n            loadResource(resource);\n          }\n          else {\n            final String file = getFile();\n            if (file != null) {\n              loadFile(file);\n            }\n          }\n        }\n      }\n      return myNewDefinitions;\n    }\n  }","id":52295,"modified_method":"@NotNull\n  public AntTypeDefinition[] getDefinitions() {\n    synchronized (PsiLock.LOCK) {\n      if (myNewDefinitions == null) {\n        myNewDefinitions = AntTypeDefinition.EMPTY_ARRAY;\n        final String classname = getClassName();\n        if (classname != null) {\n          final AntStructuredElement parent = getAntParent();\n          final AntFile antFile = parent != null? parent.getAntFile() : null;\n          loadClass(antFile, classname, getDefinedName(), getUri(),getAntParent());\n        }\n        else {\n          final String resource = getResource();\n          if (resource != null) {\n            loadResource(resource);\n          }\n          else {\n            final String file = getFile();\n            if (file != null) {\n              loadFile(file);\n            }\n          }\n        }\n      }\n      return myNewDefinitions;\n    }\n  }","commit_id":"032a73c99d00348f8f3d38adf672913a08e57fb4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void loadPropertiesStream(final InputStream propStream, final AntStructuredElement element) {\n    final StringBuilder builder = StringBuilderSpinAllocator.alloc();\n    try {\n      int nextByte;\n      while ((nextByte = propStream.read()) >= 0) {\n        builder.append((char)nextByte);\n      }\n      propStream.close();\n      final PropertiesFile propFile =\n        (PropertiesFile)createDummyFile(\"dummy.properties\", StdFileTypes.PROPERTIES, builder, element.getManager());\n      for (final Property property : propFile.getProperties()) {\n        loadClass(property.getValue(), property.getKey(), getUri());\n      }\n    }\n    catch (IOException e) {\n      if (element instanceof AntTypeDefImpl) {\n        final AntTypeDefImpl td = ((AntTypeDefImpl)element);\n        td.myClassesLoaded = false;\n        td.myLocalizedError = e.getLocalizedMessage();\n      }\n    }\n    finally {\n      StringBuilderSpinAllocator.dispose(builder);\n    }\n  }","id":52296,"modified_method":"private void loadPropertiesStream(final InputStream propStream, final AntStructuredElement element) {\n    final StringBuilder builder = StringBuilderSpinAllocator.alloc();\n    try {\n      int nextByte;\n      while ((nextByte = propStream.read()) >= 0) {\n        builder.append((char)nextByte);\n      }\n      propStream.close();\n      final PropertiesFile propFile =\n        (PropertiesFile)createDummyFile(\"dummy.properties\", StdFileTypes.PROPERTIES, builder, element.getManager());\n      final AntStructuredElement parent = getAntParent();\n      final AntFile antFile = parent != null? parent.getAntFile() : null;\n      for (final Property property : propFile.getProperties()) {\n        loadClass(antFile, property.getValue(), property.getKey(), getUri(),getAntParent());\n      }\n    }\n    catch (IOException e) {\n      if (element instanceof AntTypeDefImpl) {\n        final AntTypeDefImpl td = ((AntTypeDefImpl)element);\n        td.myClassesLoaded = false;\n        td.myLocalizedError = e.getLocalizedMessage();\n      }\n    }\n    finally {\n      StringBuilderSpinAllocator.dispose(builder);\n    }\n  }","commit_id":"032a73c99d00348f8f3d38adf672913a08e57fb4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Test(expected = IllegalStateException.class)\n    public void testSubmitFailingCallableReasonExceptionCause() throws Throwable, InterruptedException {\n        IExecutorService service = client.getExecutorService(randomString());\n        final Future<String> f = service.submit(new FailingTask());\n\n        try{\n        f.get();\n        }catch(ExecutionException e){\n            throw e.getCause();\n        }\n    }","id":52297,"modified_method":"@Test(expected = IllegalStateException.class)\n    public void testSubmitFailingCallableReasonExceptionCause() throws Throwable {\n        IExecutorService service = client.getExecutorService(randomString());\n        final Future<String> f = service.submit(new FailingCallable());\n\n        try{\n            f.get();\n        }catch(ExecutionException e){\n            throw e.getCause();\n        }\n    }","commit_id":"02b47222ce6486828597802a08a787f66f32556c","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Category(ProblematicTest.class)\n    @Test\n    public void testAwaitTermination() throws InterruptedException, ExecutionException, TimeoutException {\n        final IExecutorService service = client.getExecutorService(randomString());\n        service.awaitTermination(1, TimeUnit.MILLISECONDS);\n    }","id":52298,"modified_method":"@Category(ProblematicTest.class)\n    @Test\n    public void testAwaitTermination() throws InterruptedException, ExecutionException, TimeoutException {\n        final IExecutorService service = client.getExecutorService(randomString());\n        final boolean result = service.awaitTermination(9999, TimeUnit.DAYS);\n        assertFalse( result );\n    }","commit_id":"02b47222ce6486828597802a08a787f66f32556c","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Test(expected = ExecutionException.class)\n    public void testSubmitFailingCallableException() throws ExecutionException, InterruptedException {\n        IExecutorService service = client.getExecutorService(randomString());\n        final Future<String> f = service.submit(new FailingTask());\n\n        f.get();\n    }","id":52299,"modified_method":"@Test(expected = ExecutionException.class)\n    public void testSubmitFailingCallableException() throws ExecutionException, InterruptedException {\n        IExecutorService service = client.getExecutorService(randomString());\n        final Future<String> f = service.submit(new FailingCallable());\n\n        f.get();\n    }","commit_id":"02b47222ce6486828597802a08a787f66f32556c","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"/**\n\t * Constructs a <tt>WaitPolicy<\/tt> with timeout.\n\t */\n\tpublic WaitPolicy(long time, TimeUnit timeUnit)\n\t{\n\t\tsuper();\n\t\t_time = time;\n\t\t_timeUnit = timeUnit;\n\t}","id":52300,"modified_method":"/**\n\t * Constructs a <tt>WaitPolicy<\/tt> with timeout.\n     * A negative <code>time<\/code> value is interpreted as <code>Long.MAX_VALUE<\/code>. \n\t */\n\tpublic WaitPolicy(long time, TimeUnit timeUnit)\n\t{\n\t\tsuper();\n\t\t_time = (time < 0 ? Long.MAX_VALUE : time);\n\t\t_timeUnit = timeUnit;\n\t}","commit_id":"7bb6c67e75d2b5d4c6e3d53e30b32db70a66e0cf","url":"https://github.com/mulesoft/mule"},{"original_method":"protected void setUp() throws Exception\n\t{\n\t\tsuper.setUp();\n\t\t// allow 1 active & 1 queued Thread\n\t\t_executor = new ThreadPoolExecutor(1, 1, 10000L, TimeUnit.MILLISECONDS, new LinkedBlockingQueue(1));\n\t\t_activeThreads = 0;\n\t}","id":52301,"modified_method":"protected void setUp() throws Exception {\n        super.setUp();\n        // allow 1 active & 1 queued Thread\n        _executor = new ThreadPoolExecutor(1, 1, 10000L, TimeUnit.MILLISECONDS,\n                new LinkedBlockingQueue(1));\n\n        _asyncGroup = new ExceptionCollectingThreadGroup();\n        _activeTasks = new AtomicInteger(0);\n    }","commit_id":"7bb6c67e75d2b5d4c6e3d53e30b32db70a66e0cf","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testWaitPolicyWithTimeout() throws Exception\n\t{\n\t\tassertEquals(0, _activeThreads);\n\n\t\t// set a reasonable retry interval\n\t\tWaitPolicyTestWrapper policy = new WaitPolicyTestWrapper(2500, TimeUnit.MILLISECONDS);\n\t\t_executor.setRejectedExecutionHandler(policy);\n\n\t\t// 1 runs immediately\n\t\t_executor.execute(new SleepyTask(1000));\n\t\t// 2 is queued\n\t\t_executor.execute(new SleepyTask(1000));\n\t\t// 3 is initially rejected but will eventually succeed\n\t\tRunnable s3 = new SleepyTask(1000);\n\t\t_executor.execute(s3);\n\n\t\t_executor.awaitTermination(4000, TimeUnit.MILLISECONDS);\n\n\t\tassertSame(s3, policy._lastRejected);\n\t\tassertEquals(0, _activeThreads);\n\t}","id":52302,"modified_method":"public void testWaitPolicyWithTimeout() throws Exception {\n        assertEquals(0, _activeTasks.get());\n\n        // set a reasonable retry interval\n        LastRejectedWaitPolicy policy = new LastRejectedWaitPolicy(2500, TimeUnit.MILLISECONDS);\n        _executor.setRejectedExecutionHandler(policy);\n\n        // 1 runs immediately\n        this.execute(_executor, new SleepyTask(1000));\n        // 2 is queued\n        this.execute(_executor, new SleepyTask(1000));\n        // 3 is initially rejected but will eventually succeed\n        Runnable s3 = new SleepyTask(1000);\n        this.execute(_executor, s3);\n\n        boolean allFinished = _executor.awaitTermination(4000, TimeUnit.MILLISECONDS);\n        assertFalse(allFinished);\n        assertSame(s3, policy.lastRejectedRunnable());\n        assertEquals(0, _activeTasks.get());\n    }","commit_id":"7bb6c67e75d2b5d4c6e3d53e30b32db70a66e0cf","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testWaitPolicyWithShutdownExecutor() throws Exception\n\t{\n\t\tassertEquals(0, _activeThreads);\n\n\t\t// should wait forever, but will fail immediately\n\t\t_executor.setRejectedExecutionHandler(new WaitPolicyTestWrapper());\n\t\t_executor.shutdown();\n\n\t\ttry\n\t\t{\n\t\t\t// should fail immediately\n\t\t\t_executor.execute(new SleepyTask(1000));\n\t\t\tfail();\n\t\t}\n\t\tcatch (RejectedExecutionException rex)\n\t\t{\n\t\t\t// expected\n\t\t}\n\n\t\tassertEquals(0, _activeThreads);\n\t}","id":52303,"modified_method":"public void testWaitPolicyWithShutdownExecutor() throws Exception {\n        assertEquals(0, _activeTasks.get());\n\n        // wants to wait forever, but will fail immediately\n        _executor.setRejectedExecutionHandler(new LastRejectedWaitPolicy());\n        _executor.shutdown();\n\n        // should fail immediately\n        Thread failedThread = this.execute(_executor, new SleepyTask(1000));\n        Thread.sleep(500);\n\n        List exceptions = _asyncGroup.collectedExceptions();\n        assertEquals(1, exceptions.size());\n\n        Map.Entry threadFailure = (Map.Entry)((Map)exceptions.get(0)).entrySet().iterator().next();\n        assertEquals(failedThread, threadFailure.getKey());\n        assertEquals(RejectedExecutionException.class, threadFailure.getValue().getClass());\n        assertEquals(0, _activeTasks.get());\n    }","commit_id":"7bb6c67e75d2b5d4c6e3d53e30b32db70a66e0cf","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testWaitPolicyForever() throws Exception\n\t{\n\t\tassertEquals(0, _activeThreads);\n\n\t\t// wait forever\n\t\tWaitPolicyTestWrapper policy = new WaitPolicyTestWrapper();\n\t\t_executor.setRejectedExecutionHandler(policy);\n\n\t\t// 1 runs immediately\n\t\t_executor.execute(new SleepyTask(1000));\n\t\t// 2 is queued\n\t\t_executor.execute(new SleepyTask(1000));\n\t\t// 3 is initially rejected but waits forever\n\t\tRunnable s3 = new SleepyTask(1000);\n\t\t_executor.execute(s3);\n\n\t\t_executor.awaitTermination(4000, TimeUnit.MILLISECONDS);\n\n\t\tassertSame(s3, policy._lastRejected);\n\t\tassertEquals(0, _activeThreads);\n\t}","id":52304,"modified_method":"public void testWaitPolicyForever() throws Exception {\n        assertEquals(0, _activeTasks.get());\n\n        // wait forever\n        LastRejectedWaitPolicy policy = new LastRejectedWaitPolicy(-1, TimeUnit.SECONDS);\n        _executor.setRejectedExecutionHandler(policy);\n\n        // 1 runs immediately\n        this.execute(_executor, new SleepyTask(1000));\n        // 2 is queued\n        this.execute(_executor, new SleepyTask(1000));\n        // 3 is initially rejected but waits forever\n        Runnable s3 = new SleepyTask(1000);\n        this.execute(_executor, s3);\n\n        // last one should have been queued\n        boolean allFinished = _executor.awaitTermination(4000, TimeUnit.MILLISECONDS);\n        assertFalse(allFinished);\n        assertSame(s3, policy.lastRejectedRunnable());\n        assertEquals(0, _activeTasks.get());\n\n        // shutdown & try again\n        _executor.shutdown();\n        allFinished = _executor.awaitTermination(4000, TimeUnit.MILLISECONDS);\n        assertTrue(allFinished);\n        assertSame(s3, policy.lastRejectedRunnable());\n        assertEquals(0, _activeTasks.get());\n    }","commit_id":"7bb6c67e75d2b5d4c6e3d53e30b32db70a66e0cf","url":"https://github.com/mulesoft/mule"},{"original_method":"public void run()\n\t\t{\n\t\t\t_activeThreads++;\n\n\t\t\ttry\n\t\t\t{\n\t\t\t\tsynchronized (this)\n\t\t\t\t{\n\t\t\t\t\tthis.wait(_sleepTime);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (InterruptedException iex)\n\t\t\t{\n\t\t\t\t// ignore\n\t\t\t}\n\n\t\t\t_activeThreads--;\n\t\t}","id":52305,"modified_method":"public void run() {\n            _activeTasks.incrementAndGet();\n\n            try {\n                synchronized (this) {\n                    this.wait(_sleepTime);\n                }\n            }\n            catch (InterruptedException iex) {\n                // ignore\n            }\n\n            _activeTasks.decrementAndGet();\n        }","commit_id":"7bb6c67e75d2b5d4c6e3d53e30b32db70a66e0cf","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testWaitPolicyWithTimeoutFailure() throws Exception\n\t{\n\t\tassertEquals(0, _activeThreads);\n\n\t\t// set a really short wait interval\n\t\tWaitPolicyTestWrapper policy = new WaitPolicyTestWrapper(100, TimeUnit.MILLISECONDS);\n\t\t_executor.setRejectedExecutionHandler(policy);\n\n\t\t// 1 runs immediately\n\t\t_executor.execute(new SleepyTask(1000));\n\t\t// 2 is queued\n\t\t_executor.execute(new SleepyTask(1000));\n\n\t\tRunnable s3 = new SleepyTask(1000);\n\n\t\ttry\n\t\t{\n\t\t\t// 3 is initially rejected & will retry but should fail quickly\n\t\t\t_executor.execute(s3);\n\t\t\tfail();\n\t\t}\n\t\tcatch (RejectedExecutionException rex)\n\t\t{\n\t\t\t// expected\n\t\t}\n\n\t\t_executor.awaitTermination(3000, TimeUnit.MILLISECONDS);\n\n\t\tassertSame(s3, policy._lastRejected);\n\t\tassertEquals(0, _activeThreads);\n\t}","id":52306,"modified_method":"public void testWaitPolicyWithTimeoutFailure() throws Exception {\n        assertEquals(0, _activeTasks.get());\n\n        // set a really short wait interval\n        long failureInterval = 100;\n        LastRejectedWaitPolicy policy = new LastRejectedWaitPolicy(failureInterval, TimeUnit.MILLISECONDS);\n        _executor.setRejectedExecutionHandler(policy);\n\n        // 1 runs immediately\n        this.execute(_executor, new SleepyTask(1000));\n        // 2 is queued\n        this.execute(_executor, new SleepyTask(1000));\n\n        // 3 is initially rejected & will retry but should fail quickly\n        Runnable s3 = new SleepyTask(1000);\n        Thread failedThread = this.execute(_executor, s3);\n        Thread.sleep(failureInterval*2); // give failure a chance\n\n        List exceptions = _asyncGroup.collectedExceptions();\n        assertEquals(1, exceptions.size());\n\n        Map.Entry threadFailure = (Map.Entry)((Map)exceptions.get(0)).entrySet().iterator().next();\n        assertEquals(failedThread, threadFailure.getKey());\n        assertEquals(RejectedExecutionException.class, threadFailure.getValue().getClass());\n\n        _executor.shutdown();\n        boolean allFinished = _executor.awaitTermination(2500, TimeUnit.MILLISECONDS);\n        assertTrue(allFinished);\n        assertSame(s3, policy.lastRejectedRunnable());\n        assertEquals(0, _activeTasks.get());\n    }","commit_id":"7bb6c67e75d2b5d4c6e3d53e30b32db70a66e0cf","url":"https://github.com/mulesoft/mule"},{"original_method":"protected void tearDown() throws Exception\n\t{\n\t\t_executor.shutdown();\n\t\tsuper.tearDown();\n\t}","id":52307,"modified_method":"protected void tearDown() throws Exception {\n        _executor.shutdown();\n        _asyncGroup.destroy();\n        super.tearDown();\n    }","commit_id":"7bb6c67e75d2b5d4c6e3d53e30b32db70a66e0cf","url":"https://github.com/mulesoft/mule"},{"original_method":"/**\n\t * Constructs a <tt>WaitPolicy<\/tt> with timeout.\n\t */\n\tpublic WaitPolicy(long time, TimeUnit timeUnit)\n\t{\n\t\tsuper();\n\t\t_time = time;\n\t\t_timeUnit = timeUnit;\n\t}","id":52308,"modified_method":"/**\n\t * Constructs a <tt>WaitPolicy<\/tt> with timeout.\n     * A negative <code>time<\/code> value is interpreted as <code>Long.MAX_VALUE<\/code>. \n\t */\n\tpublic WaitPolicy(long time, TimeUnit timeUnit)\n\t{\n\t\tsuper();\n\t\t_time = (time < 0 ? Long.MAX_VALUE : time);\n\t\t_timeUnit = timeUnit;\n\t}","commit_id":"4a0f076d3605333a4d3030e6781b012bf7c4b68b","url":"https://github.com/mulesoft/mule"},{"original_method":"public void run()\n\t\t{\n\t\t\t_activeThreads++;\n\n\t\t\ttry\n\t\t\t{\n\t\t\t\tsynchronized (this)\n\t\t\t\t{\n\t\t\t\t\tthis.wait(_sleepTime);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (InterruptedException iex)\n\t\t\t{\n\t\t\t\t// ignore\n\t\t\t}\n\n\t\t\t_activeThreads--;\n\t\t}","id":52309,"modified_method":"public void run() {\n            _activeTasks.incrementAndGet();\n\n            try {\n                synchronized (this) {\n                    this.wait(_sleepTime);\n                }\n            }\n            catch (InterruptedException iex) {\n                // ignore\n            }\n\n            _activeTasks.decrementAndGet();\n        }","commit_id":"4a0f076d3605333a4d3030e6781b012bf7c4b68b","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testWaitPolicyWithTimeoutFailure() throws Exception\n\t{\n\t\tassertEquals(0, _activeThreads);\n\n\t\t// set a really short wait interval\n\t\tWaitPolicyTestWrapper policy = new WaitPolicyTestWrapper(100, TimeUnit.MILLISECONDS);\n\t\t_executor.setRejectedExecutionHandler(policy);\n\n\t\t// 1 runs immediately\n\t\t_executor.execute(new SleepyTask(1000));\n\t\t// 2 is queued\n\t\t_executor.execute(new SleepyTask(1000));\n\n\t\tRunnable s3 = new SleepyTask(1000);\n\n\t\ttry\n\t\t{\n\t\t\t// 3 is initially rejected & will retry but should fail quickly\n\t\t\t_executor.execute(s3);\n\t\t\tfail();\n\t\t}\n\t\tcatch (RejectedExecutionException rex)\n\t\t{\n\t\t\t// expected\n\t\t}\n\n\t\t_executor.awaitTermination(3000, TimeUnit.MILLISECONDS);\n\n\t\tassertSame(s3, policy._lastRejected);\n\t\tassertEquals(0, _activeThreads);\n\t}","id":52310,"modified_method":"public void testWaitPolicyWithTimeoutFailure() throws Exception {\n        assertEquals(0, _activeTasks.get());\n\n        // set a really short wait interval\n        long failureInterval = 100;\n        LastRejectedWaitPolicy policy = new LastRejectedWaitPolicy(failureInterval, TimeUnit.MILLISECONDS);\n        _executor.setRejectedExecutionHandler(policy);\n\n        // 1 runs immediately\n        this.execute(_executor, new SleepyTask(1000));\n        // 2 is queued\n        this.execute(_executor, new SleepyTask(1000));\n\n        // 3 is initially rejected & will retry but should fail quickly\n        Runnable s3 = new SleepyTask(1000);\n        Thread failedThread = this.execute(_executor, s3);\n        Thread.sleep(failureInterval*2); // give failure a chance\n\n        List exceptions = _asyncGroup.collectedExceptions();\n        assertEquals(1, exceptions.size());\n\n        Map.Entry threadFailure = (Map.Entry)((Map)exceptions.get(0)).entrySet().iterator().next();\n        assertEquals(failedThread, threadFailure.getKey());\n        assertEquals(RejectedExecutionException.class, threadFailure.getValue().getClass());\n\n        _executor.shutdown();\n        boolean allFinished = _executor.awaitTermination(2500, TimeUnit.MILLISECONDS);\n        assertTrue(allFinished);\n        assertSame(s3, policy.lastRejectedRunnable());\n        assertEquals(0, _activeTasks.get());\n    }","commit_id":"4a0f076d3605333a4d3030e6781b012bf7c4b68b","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testWaitPolicyWithShutdownExecutor() throws Exception\n\t{\n\t\tassertEquals(0, _activeThreads);\n\n\t\t// should wait forever, but will fail immediately\n\t\t_executor.setRejectedExecutionHandler(new WaitPolicyTestWrapper());\n\t\t_executor.shutdown();\n\n\t\ttry\n\t\t{\n\t\t\t// should fail immediately\n\t\t\t_executor.execute(new SleepyTask(1000));\n\t\t\tfail();\n\t\t}\n\t\tcatch (RejectedExecutionException rex)\n\t\t{\n\t\t\t// expected\n\t\t}\n\n\t\tassertEquals(0, _activeThreads);\n\t}","id":52311,"modified_method":"public void testWaitPolicyWithShutdownExecutor() throws Exception {\n        assertEquals(0, _activeTasks.get());\n\n        // wants to wait forever, but will fail immediately\n        _executor.setRejectedExecutionHandler(new LastRejectedWaitPolicy());\n        _executor.shutdown();\n\n        // should fail immediately\n        Thread failedThread = this.execute(_executor, new SleepyTask(1000));\n        Thread.sleep(500);\n\n        List exceptions = _asyncGroup.collectedExceptions();\n        assertEquals(1, exceptions.size());\n\n        Map.Entry threadFailure = (Map.Entry)((Map)exceptions.get(0)).entrySet().iterator().next();\n        assertEquals(failedThread, threadFailure.getKey());\n        assertEquals(RejectedExecutionException.class, threadFailure.getValue().getClass());\n        assertEquals(0, _activeTasks.get());\n    }","commit_id":"4a0f076d3605333a4d3030e6781b012bf7c4b68b","url":"https://github.com/mulesoft/mule"},{"original_method":"protected void setUp() throws Exception\n\t{\n\t\tsuper.setUp();\n\t\t// allow 1 active & 1 queued Thread\n\t\t_executor = new ThreadPoolExecutor(1, 1, 10000L, TimeUnit.MILLISECONDS, new LinkedBlockingQueue(1));\n\t\t_activeThreads = 0;\n\t}","id":52312,"modified_method":"protected void setUp() throws Exception {\n        super.setUp();\n        // allow 1 active & 1 queued Thread\n        _executor = new ThreadPoolExecutor(1, 1, 10000L, TimeUnit.MILLISECONDS,\n                new LinkedBlockingQueue(1));\n\n        _asyncGroup = new ExceptionCollectingThreadGroup();\n        _activeTasks = new AtomicInteger(0);\n    }","commit_id":"4a0f076d3605333a4d3030e6781b012bf7c4b68b","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testWaitPolicyWithTimeout() throws Exception\n\t{\n\t\tassertEquals(0, _activeThreads);\n\n\t\t// set a reasonable retry interval\n\t\tWaitPolicyTestWrapper policy = new WaitPolicyTestWrapper(2500, TimeUnit.MILLISECONDS);\n\t\t_executor.setRejectedExecutionHandler(policy);\n\n\t\t// 1 runs immediately\n\t\t_executor.execute(new SleepyTask(1000));\n\t\t// 2 is queued\n\t\t_executor.execute(new SleepyTask(1000));\n\t\t// 3 is initially rejected but will eventually succeed\n\t\tRunnable s3 = new SleepyTask(1000);\n\t\t_executor.execute(s3);\n\n\t\t_executor.awaitTermination(4000, TimeUnit.MILLISECONDS);\n\n\t\tassertSame(s3, policy._lastRejected);\n\t\tassertEquals(0, _activeThreads);\n\t}","id":52313,"modified_method":"public void testWaitPolicyWithTimeout() throws Exception {\n        assertEquals(0, _activeTasks.get());\n\n        // set a reasonable retry interval\n        LastRejectedWaitPolicy policy = new LastRejectedWaitPolicy(2500, TimeUnit.MILLISECONDS);\n        _executor.setRejectedExecutionHandler(policy);\n\n        // 1 runs immediately\n        this.execute(_executor, new SleepyTask(1000));\n        // 2 is queued\n        this.execute(_executor, new SleepyTask(1000));\n        // 3 is initially rejected but will eventually succeed\n        Runnable s3 = new SleepyTask(1000);\n        this.execute(_executor, s3);\n\n        boolean allFinished = _executor.awaitTermination(4000, TimeUnit.MILLISECONDS);\n        assertFalse(allFinished);\n        assertSame(s3, policy.lastRejectedRunnable());\n        assertEquals(0, _activeTasks.get());\n    }","commit_id":"4a0f076d3605333a4d3030e6781b012bf7c4b68b","url":"https://github.com/mulesoft/mule"},{"original_method":"protected void tearDown() throws Exception\n\t{\n\t\t_executor.shutdown();\n\t\tsuper.tearDown();\n\t}","id":52314,"modified_method":"protected void tearDown() throws Exception {\n        _executor.shutdown();\n        _asyncGroup.destroy();\n        super.tearDown();\n    }","commit_id":"4a0f076d3605333a4d3030e6781b012bf7c4b68b","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testWaitPolicyForever() throws Exception\n\t{\n\t\tassertEquals(0, _activeThreads);\n\n\t\t// wait forever\n\t\tWaitPolicyTestWrapper policy = new WaitPolicyTestWrapper();\n\t\t_executor.setRejectedExecutionHandler(policy);\n\n\t\t// 1 runs immediately\n\t\t_executor.execute(new SleepyTask(1000));\n\t\t// 2 is queued\n\t\t_executor.execute(new SleepyTask(1000));\n\t\t// 3 is initially rejected but waits forever\n\t\tRunnable s3 = new SleepyTask(1000);\n\t\t_executor.execute(s3);\n\n\t\t_executor.awaitTermination(4000, TimeUnit.MILLISECONDS);\n\n\t\tassertSame(s3, policy._lastRejected);\n\t\tassertEquals(0, _activeThreads);\n\t}","id":52315,"modified_method":"public void testWaitPolicyForever() throws Exception {\n        assertEquals(0, _activeTasks.get());\n\n        // wait forever\n        LastRejectedWaitPolicy policy = new LastRejectedWaitPolicy(-1, TimeUnit.SECONDS);\n        _executor.setRejectedExecutionHandler(policy);\n\n        // 1 runs immediately\n        this.execute(_executor, new SleepyTask(1000));\n        // 2 is queued\n        this.execute(_executor, new SleepyTask(1000));\n        // 3 is initially rejected but waits forever\n        Runnable s3 = new SleepyTask(1000);\n        this.execute(_executor, s3);\n\n        // last one should have been queued\n        boolean allFinished = _executor.awaitTermination(4000, TimeUnit.MILLISECONDS);\n        assertFalse(allFinished);\n        assertSame(s3, policy.lastRejectedRunnable());\n        assertEquals(0, _activeTasks.get());\n\n        // shutdown & try again\n        _executor.shutdown();\n        allFinished = _executor.awaitTermination(4000, TimeUnit.MILLISECONDS);\n        assertTrue(allFinished);\n        assertSame(s3, policy.lastRejectedRunnable());\n        assertEquals(0, _activeTasks.get());\n    }","commit_id":"4a0f076d3605333a4d3030e6781b012bf7c4b68b","url":"https://github.com/mulesoft/mule"},{"original_method":"public TestOutputReader(InputStream stream, SleepingPolicy sleepingPolicy) {\n      super(stream, null, sleepingPolicy);\n      start();\n    }","id":52316,"modified_method":"public TestOutputReader(InputStream stream, SleepingPolicy sleepingPolicy) {\n      super(stream, null, sleepingPolicy);\n      start(BaseOutputReaderTest.class.getSimpleName());\n    }","commit_id":"ede2f25fd91671abf829d33745ceab3ced96a142","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@AfterClass\n  public static void tearDown() {\n    ourExecutor.shutdown();\n    try {\n      ourExecutor.awaitTermination(1000, TimeUnit.SECONDS);\n    }\n    catch (InterruptedException e) {\n      throw new RuntimeException(e);\n    }\n    ourExecutor = null;\n  }","id":52317,"modified_method":"@AfterClass\n  public static void tearDown() throws InterruptedException {\n    ourExecutor.shutdown();\n    ourExecutor.awaitTermination(120, TimeUnit.SECONDS);\n    ourExecutor = null;\n  }","commit_id":"ede2f25fd91671abf829d33745ceab3ced96a142","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n        public void finished() {\n            executor.shutdown();\n            try {\n                executor.awaitTermination(10, TimeUnit.MINUTES);\n            } catch (InterruptedException exc) {\n                throw new RuntimeException(exc);\n            }\n        }","id":52318,"modified_method":"@Override\n        public void finished() {\n            executor.shutdown();\n            try {\n                while (!executor.awaitTermination(1, TimeUnit.MINUTES)) {\n                    log.info(\"Awaiting for the task termination in {}\", executor);\n                }\n            } catch (InterruptedException exc) {\n                throw new RuntimeException(exc);\n            }\n        }","commit_id":"d0569b93fa960a02668c198f86740f8da58b42e4","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"private void generateMethodIfRequired(PsiClass aClass, PsiMethod anchor, final String methodName, String methodText, boolean condition) throws IncorrectOperationException {\n    PsiElementFactory elementFactory = PsiManager.getInstance(myProject).getElementFactory();\n    PsiMethod newMethod = null;\n    PsiMethod[] oldMethods = aClass.findMethodsByName(methodName, false);\n    if (!condition) {\n      for(PsiMethod oldMethod: oldMethods) {\n        oldMethod.delete();\n      }\n    }\n    else {\n      newMethod = elementFactory.createMethodFromText(methodText, aClass);\n      if (oldMethods.length > 0) {\n        oldMethods [0].replace(newMethod);\n      }\n      else {\n        aClass.addAfter(newMethod, anchor);\n      }\n    }\n    if (newMethod != null) {\n      CodeStyleManager csm = CodeStyleManager.getInstance(myProject);\n      csm.shortenClassReferences(newMethod);\n    }\n  }","id":52319,"modified_method":"private void generateMethodIfRequired(PsiClass aClass, PsiMethod anchor, final String methodName, String methodText, boolean condition) throws IncorrectOperationException {\n    PsiElementFactory elementFactory = PsiManager.getInstance(myProject).getElementFactory();\n    PsiMethod newMethod = null;\n    PsiMethod[] oldMethods = aClass.findMethodsByName(methodName, false);\n    if (!condition) {\n      for(PsiMethod oldMethod: oldMethods) {\n        oldMethod.delete();\n      }\n    }\n    else {\n      newMethod = elementFactory.createMethodFromText(methodText, aClass);\n      if (oldMethods.length > 0) {\n        oldMethods [0].replace(newMethod);\n      }\n      else {\n        aClass.addAfter(newMethod, anchor);\n      }\n    }\n    if (newMethod != null) {\n      CodeStyleManager csm = CodeStyleManager.getInstance(myProject);\n      newMethod = (PsiMethod)csm.reformat(newMethod);\n      csm.shortenClassReferences(newMethod);\n    }\n  }","commit_id":"37c3c03decdfeca2a02fa57c445e2acd24f70f33","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void _generate(final LwRootContainer rootContainer, final Module module) throws CodeGenerationException, IncorrectOperationException{\n    myBuffer = new StringBuffer();\n    myIsFirstParameterStack = new Stack<Boolean>();\n\n    final HashMap<LwComponent,String> component2variable = new HashMap<LwComponent,String>();\n    final TObjectIntHashMap<String> class2variableIndex = new TObjectIntHashMap<String>();\n    final HashMap<String,LwComponent> id2component = new HashMap<String, LwComponent>();\n\n    if (rootContainer.getComponentCount() != 1) {\n      throw new CodeGenerationException(null, UIDesignerBundle.message(\"error.one.toplevel.component.required\"));\n    }\n    final LwComponent topComponent = (LwComponent)rootContainer.getComponent(0);\n    String id = Utils.findNotEmptyPanelWithXYLayout(topComponent);\n    if (id != null) {\n      throw new CodeGenerationException(id, UIDesignerBundle.message(\"error.nonempty.xy.panels.found\"));\n    }\n\n    final PsiClass classToBind = FormEditingUtil.findClassToBind(module, rootContainer.getClassToBind());\n    if (classToBind == null) {\n      throw new ClassToBindNotFoundException(UIDesignerBundle.message(\"error.class.to.bind.not.found\", rootContainer.getClassToBind()));\n    }\n\n    if (Utils.getCustomCreateComponentCount(rootContainer) > 0) {\n      if (FormEditingUtil.findCreateComponentsMethod(classToBind) == null) {\n        throw new CodeGenerationException(null, UIDesignerBundle.message(\"error.no.custom.create.method\"));\n      }\n      myBuffer.append(AsmCodeGenerator.CREATE_COMPONENTS_METHOD_NAME).append(\"();\");\n    }\n\n    generateSetupCodeForComponent(topComponent,\n                                  component2variable,\n                                  class2variableIndex,\n                                  id2component, module, classToBind);\n    generateComponentReferenceProperties(topComponent, component2variable, class2variableIndex, id2component, classToBind);\n    generateButtonGroups(rootContainer, component2variable, class2variableIndex, id2component, classToBind);\n\n    final String methodText = myBuffer.toString();\n\n    final PsiManager psiManager = PsiManager.getInstance(module.getProject());\n    final PsiElementFactory elementFactory = psiManager.getElementFactory();\n\n    final PsiClass newClass = (PsiClass) classToBind.copy();\n\n    cleanup(newClass);\n\n    // [anton] the comments are written according to the SCR 26896  \n    final PsiClass fakeClass = elementFactory.createClassFromText(\n      \"{\\n\" +\n      \"// GUI initializer generated by \" + ApplicationNamesInfo.getInstance().getFullProductName() + \" GUI Designer\\n\" +\n      \"// >>> IMPORTANT!! <<<\\n\" +\n      \"// DO NOT EDIT OR ADD ANY CODE HERE!\\n\" +\n      \"\" + AsmCodeGenerator.SETUP_METHOD_NAME + \"();\\n\" +\n      \"}\\n\" +\n      \"\\n\" +\n      \"/** Method generated by \" + ApplicationNamesInfo.getInstance().getFullProductName() + \" GUI Designer\\n\" +\n      \" * >>> IMPORTANT!! <<<\\n\" +\n      \" * DO NOT edit this method OR call it in your code!\\n\" +\n      \" * @noinspection ALL\\n\" +\n      \" */\\n\" +\n      \"private void \" + AsmCodeGenerator.SETUP_METHOD_NAME + \"()\\n\" +\n      \"{\\n\" +\n      methodText +\n      \"}\\n\",\n      null\n    );\n\n    final PsiMethod method = (PsiMethod) newClass.add(fakeClass.getMethods()[0]);\n    PsiElement initializer = null;\n\n    // don't generate initializer block if $$$setupUI$$$() is called explicitly from one of the constructors\n    boolean needInitializer = true;\n    for(PsiMethod constructor: newClass.getConstructors()) {\n      if (containsMethodIdentifier(constructor, method)) {\n        needInitializer = false;\n        break;\n      }\n    }\n\n    if (needInitializer) {\n      initializer = newClass.addBefore(fakeClass.getInitializers()[0], method);\n    }\n\n    @NonNls final String grcMethodText = \"/** @noinspection ALL */ public javax.swing.JComponent \" +\n                                         AsmCodeGenerator.GET_ROOT_COMPONENT_METHOD_NAME +\n                                         \"() { return \" + topComponent.getBinding() + \"; }\";\n    generateMethodIfRequired(newClass, method, AsmCodeGenerator.GET_ROOT_COMPONENT_METHOD_NAME, grcMethodText, topComponent.getBinding() != null);\n\n    final String loadButtonTextMethodText = getLoadMethodText(AsmCodeGenerator.LOAD_BUTTON_TEXT_METHOD, AbstractButton.class, module);\n    generateMethodIfRequired(newClass, method, AsmCodeGenerator.LOAD_BUTTON_TEXT_METHOD, loadButtonTextMethodText, myNeedLoadButtonText);\n    final String loadLabelTextMethodText = getLoadMethodText(AsmCodeGenerator.LOAD_LABEL_TEXT_METHOD, JLabel.class, module);\n    generateMethodIfRequired(newClass, method, AsmCodeGenerator.LOAD_LABEL_TEXT_METHOD, loadLabelTextMethodText, myNeedLoadLabelText);\n\n    final CodeStyleManager codeStyleManager = CodeStyleManager.getInstance(module.getProject());\n    codeStyleManager.shortenClassReferences(method);\n    if (initializer != null) {\n      codeStyleManager.shortenClassReferences(initializer);\n    }\n\n    codeStyleManager.reformat(newClass);\n    final String newText = newClass.getText();\n    final String oldText = classToBind.getText();\n    if (!newText.equals(oldText)) {\n      classToBind.replace(newClass);\n    }\n  }","id":52320,"modified_method":"private void _generate(final LwRootContainer rootContainer, final Module module) throws CodeGenerationException, IncorrectOperationException{\n    myBuffer = new StringBuffer();\n    myIsFirstParameterStack = new Stack<Boolean>();\n\n    final HashMap<LwComponent,String> component2variable = new HashMap<LwComponent,String>();\n    final TObjectIntHashMap<String> class2variableIndex = new TObjectIntHashMap<String>();\n    final HashMap<String,LwComponent> id2component = new HashMap<String, LwComponent>();\n\n    if (rootContainer.getComponentCount() != 1) {\n      throw new CodeGenerationException(null, UIDesignerBundle.message(\"error.one.toplevel.component.required\"));\n    }\n    final LwComponent topComponent = (LwComponent)rootContainer.getComponent(0);\n    String id = Utils.findNotEmptyPanelWithXYLayout(topComponent);\n    if (id != null) {\n      throw new CodeGenerationException(id, UIDesignerBundle.message(\"error.nonempty.xy.panels.found\"));\n    }\n\n    final PsiClass classToBind = FormEditingUtil.findClassToBind(module, rootContainer.getClassToBind());\n    if (classToBind == null) {\n      throw new ClassToBindNotFoundException(UIDesignerBundle.message(\"error.class.to.bind.not.found\", rootContainer.getClassToBind()));\n    }\n\n    if (Utils.getCustomCreateComponentCount(rootContainer) > 0) {\n      if (FormEditingUtil.findCreateComponentsMethod(classToBind) == null) {\n        throw new CodeGenerationException(null, UIDesignerBundle.message(\"error.no.custom.create.method\"));\n      }\n      myBuffer.append(AsmCodeGenerator.CREATE_COMPONENTS_METHOD_NAME).append(\"();\");\n    }\n\n    generateSetupCodeForComponent(topComponent,\n                                  component2variable,\n                                  class2variableIndex,\n                                  id2component, module, classToBind);\n    generateComponentReferenceProperties(topComponent, component2variable, class2variableIndex, id2component, classToBind);\n    generateButtonGroups(rootContainer, component2variable, class2variableIndex, id2component, classToBind);\n\n    final String methodText = myBuffer.toString();\n\n    final PsiManager psiManager = PsiManager.getInstance(module.getProject());\n    final PsiElementFactory elementFactory = psiManager.getElementFactory();\n\n    final PsiClass newClass = (PsiClass) classToBind.copy();\n\n    cleanup(newClass);\n\n    // [anton] the comments are written according to the SCR 26896  \n    final PsiClass fakeClass = elementFactory.createClassFromText(\n      \"{\\n\" +\n      \"// GUI initializer generated by \" + ApplicationNamesInfo.getInstance().getFullProductName() + \" GUI Designer\\n\" +\n      \"// >>> IMPORTANT!! <<<\\n\" +\n      \"// DO NOT EDIT OR ADD ANY CODE HERE!\\n\" +\n      \"\" + AsmCodeGenerator.SETUP_METHOD_NAME + \"();\\n\" +\n      \"}\\n\" +\n      \"\\n\" +\n      \"/** Method generated by \" + ApplicationNamesInfo.getInstance().getFullProductName() + \" GUI Designer\\n\" +\n      \" * >>> IMPORTANT!! <<<\\n\" +\n      \" * DO NOT edit this method OR call it in your code!\\n\" +\n      \" * @noinspection ALL\\n\" +\n      \" */\\n\" +\n      \"private void \" + AsmCodeGenerator.SETUP_METHOD_NAME + \"()\\n\" +\n      \"{\\n\" +\n      methodText +\n      \"}\\n\",\n      null\n    );\n\n    final CodeStyleManager codeStyleManager = CodeStyleManager.getInstance(module.getProject());\n    PsiMethod method = (PsiMethod) newClass.add(fakeClass.getMethods()[0]);\n    method = (PsiMethod) codeStyleManager.reformat(method);\n    PsiElement initializer = null;\n\n    // don't generate initializer block if $$$setupUI$$$() is called explicitly from one of the constructors\n    boolean needInitializer = true;\n    for(PsiMethod constructor: newClass.getConstructors()) {\n      if (containsMethodIdentifier(constructor, method)) {\n        needInitializer = false;\n        break;\n      }\n    }\n\n    if (needInitializer) {\n      initializer = newClass.addBefore(fakeClass.getInitializers()[0], method);\n      initializer = codeStyleManager.reformat(initializer);\n    }\n\n    @NonNls final String grcMethodText = \"/** @noinspection ALL */ public javax.swing.JComponent \" +\n                                         AsmCodeGenerator.GET_ROOT_COMPONENT_METHOD_NAME +\n                                         \"() { return \" + topComponent.getBinding() + \"; }\";\n    generateMethodIfRequired(newClass, method, AsmCodeGenerator.GET_ROOT_COMPONENT_METHOD_NAME, grcMethodText, topComponent.getBinding() != null);\n\n    final String loadButtonTextMethodText = getLoadMethodText(AsmCodeGenerator.LOAD_BUTTON_TEXT_METHOD, AbstractButton.class, module);\n    generateMethodIfRequired(newClass, method, AsmCodeGenerator.LOAD_BUTTON_TEXT_METHOD, loadButtonTextMethodText, myNeedLoadButtonText);\n    final String loadLabelTextMethodText = getLoadMethodText(AsmCodeGenerator.LOAD_LABEL_TEXT_METHOD, JLabel.class, module);\n    generateMethodIfRequired(newClass, method, AsmCodeGenerator.LOAD_LABEL_TEXT_METHOD, loadLabelTextMethodText, myNeedLoadLabelText);\n\n    codeStyleManager.shortenClassReferences(method);\n    if (initializer != null) {\n      codeStyleManager.shortenClassReferences(initializer);\n    }\n\n    final String newText = newClass.getText();\n    final String oldText = classToBind.getText();\n    if (!newText.equals(oldText)) {\n      classToBind.replace(newClass);\n    }\n  }","commit_id":"37c3c03decdfeca2a02fa57c445e2acd24f70f33","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Creates the <code>toString<\/code> method.\n   *\n   * @param selectedMembers the selected members as both {@link com.intellij.psi.PsiField} and {@link com.intellij.psi.PsiMethod}.\n   * @param policy          conflict resolution policy\n   * @param params          additional parameters stored with key/value in the map.\n   * @param template        the template to use\n   * @return the created method, null if the method is not created due the user cancels this operation\n   * @throws GenerateCodeException       is thrown when there is an error generating the javacode.\n   * @throws IncorrectOperationException is thrown by IDEA.\n   */\n  @Nullable\n  private PsiMethod createToStringMethod(Collection<PsiMember> selectedMembers,\n                                         ConflictResolutionPolicy policy,\n                                         Map<String, String> params,\n                                         TemplateResource template) throws IncorrectOperationException, GenerateCodeException {\n    // generate code using velocity\n    String body = velocityGenerateCode(selectedMembers, params, template.getMethodBody());\n    if (logger.isDebugEnabled()) logger.debug(\"Method body generated from Velocity:\\n\" + body);\n\n    // fix weird linebreak problem in IDEA #3296 and later\n    body = StringUtil.convertLineSeparators(body);\n\n    // create psi newMethod named toString()\n    final JVMElementFactory topLevelFactory = JVMElementFactories.getFactory(clazz.getLanguage(), clazz.getProject());\n    PsiMethod newMethod = topLevelFactory.createMethodFromText(template.getMethodSignature() + \" { \" + body + \" }\", clazz);\n    CodeStyleManager.getInstance(clazz.getProject()).reformat(newMethod);\n\n    // insertNewMethod conflict resolution policy (add/replace, duplicate, cancel)\n    PsiMethod existingMethod = clazz.findMethodBySignature(newMethod, false);\n    PsiMethod toStringMethod = policy.applyMethod(clazz, existingMethod, newMethod, editor);\n    if (toStringMethod == null) {\n      return null; // user cancelled so return null\n    }\n\n    if (hasOverrideAnnotation) {\n      toStringMethod.getModifierList().addAnnotation(\"java.lang.Override\");\n    }\n\n    // applyJavaDoc conflict resolution policy (add or keep existing)\n    String existingJavaDoc = params.get(\"existingJavaDoc\");\n    String newJavaDoc = template.getJavaDoc();\n    if (existingJavaDoc != null || newJavaDoc != null) {\n      // generate javadoc using velocity\n      newJavaDoc = velocityGenerateCode(selectedMembers, params, newJavaDoc);\n      if (logger.isDebugEnabled()) logger.debug(\"JavaDoc body generated from Velocity:\\n\" + newJavaDoc);\n\n      applyJavaDoc(toStringMethod, existingJavaDoc, newJavaDoc);\n    }\n\n    // return the created method\n    return toStringMethod;\n  }","id":52321,"modified_method":"/**\n   * Creates the <code>toString<\/code> method.\n   *\n   * @param selectedMembers the selected members as both {@link com.intellij.psi.PsiField} and {@link com.intellij.psi.PsiMethod}.\n   * @param policy          conflict resolution policy\n   * @param params          additional parameters stored with key/value in the map.\n   * @param template        the template to use\n   * @return the created method, null if the method is not created due the user cancels this operation\n   * @throws GenerateCodeException       is thrown when there is an error generating the javacode.\n   * @throws IncorrectOperationException is thrown by IDEA.\n   */\n  @Nullable\n  private PsiMethod createToStringMethod(Collection<PsiMember> selectedMembers,\n                                         ConflictResolutionPolicy policy,\n                                         Map<String, String> params,\n                                         TemplateResource template) throws IncorrectOperationException, GenerateCodeException {\n    // generate code using velocity\n    String body = velocityGenerateCode(selectedMembers, params, template.getMethodBody());\n    if (logger.isDebugEnabled()) logger.debug(\"Method body generated from Velocity:\\n\" + body);\n\n    // fix weird linebreak problem in IDEA #3296 and later\n    body = StringUtil.convertLineSeparators(body);\n\n    // create psi newMethod named toString()\n    final JVMElementFactory topLevelFactory = JVMElementFactories.getFactory(clazz.getLanguage(), clazz.getProject());\n    if (topLevelFactory == null) {\n      return null;\n    }\n    PsiMethod newMethod;\n    try {\n      newMethod = topLevelFactory.createMethodFromText(template.getMethodSignature() + \" { \" + body + \" }\", clazz);\n      CodeStyleManager.getInstance(clazz.getProject()).reformat(newMethod);\n    } catch (IncorrectOperationException ignore) {\n      HintManager.getInstance().showErrorHint(editor, \"'toString()' method could not be created from template '\" +\n                                                      template.getFileName() + '\\'');\n      return null;\n    }\n\n    // insertNewMethod conflict resolution policy (add/replace, duplicate, cancel)\n    PsiMethod existingMethod = clazz.findMethodBySignature(newMethod, false);\n    PsiMethod toStringMethod = policy.applyMethod(clazz, existingMethod, newMethod, editor);\n    if (toStringMethod == null) {\n      return null; // user cancelled so return null\n    }\n\n    if (hasOverrideAnnotation) {\n      toStringMethod.getModifierList().addAnnotation(\"java.lang.Override\");\n    }\n\n    // applyJavaDoc conflict resolution policy (add or keep existing)\n    String existingJavaDoc = params.get(\"existingJavaDoc\");\n    String newJavaDoc = template.getJavaDoc();\n    if (existingJavaDoc != null || newJavaDoc != null) {\n      // generate javadoc using velocity\n      newJavaDoc = velocityGenerateCode(selectedMembers, params, newJavaDoc);\n      if (logger.isDebugEnabled()) logger.debug(\"JavaDoc body generated from Velocity:\\n\" + newJavaDoc);\n\n      applyJavaDoc(toStringMethod, existingJavaDoc, newJavaDoc);\n    }\n\n    // return the created method\n    return toStringMethod;\n  }","commit_id":"d9d898d2d6c1617dbf9610dc57d36331d6e895b9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void _generate(final LwRootContainer rootContainer, final Module module) throws CodeGenerationException, IncorrectOperationException{\n    myBuffer = new StringBuffer();\n    myIsFirstParameterStack = new Stack<Boolean>();\n\n    final HashMap<LwComponent,String> component2variable = new HashMap<LwComponent,String>();\n    final TObjectIntHashMap<String> class2variableIndex = new TObjectIntHashMap<String>();\n    final HashMap<String,LwComponent> id2component = new HashMap<String, LwComponent>();\n\n    if (rootContainer.getComponentCount() != 1) {\n      throw new CodeGenerationException(null, UIDesignerBundle.message(\"error.one.toplevel.component.required\"));\n    }\n    final LwComponent topComponent = (LwComponent)rootContainer.getComponent(0);\n    String id = Utils.findNotEmptyPanelWithXYLayout(topComponent);\n    if (id != null) {\n      throw new CodeGenerationException(id, UIDesignerBundle.message(\"error.nonempty.xy.panels.found\"));\n    }\n\n    final PsiClass aClass = FormEditingUtil.findClassToBind(module, rootContainer.getClassToBind());\n    if (aClass == null) {\n      throw new ClassToBindNotFoundException(UIDesignerBundle.message(\"error.class.to.bind.not.found\", rootContainer.getClassToBind()));\n    }\n\n    if (Utils.getCustomCreateComponentCount(rootContainer) > 0) {\n      if (FormEditingUtil.findCreateComponentsMethod(aClass) == null) {\n        throw new CodeGenerationException(null, UIDesignerBundle.message(\"error.no.custom.create.method\"));\n      }\n      myBuffer.append(AsmCodeGenerator.CREATE_COMPONENTS_METHOD_NAME).append(\"();\");\n    }\n\n    generateSetupCodeForComponent(topComponent,\n                                  component2variable,\n                                  class2variableIndex,\n                                  id2component, module, aClass);\n    generateComponentReferenceProperties(topComponent, component2variable, class2variableIndex, id2component, aClass);\n    generateButtonGroups(rootContainer, component2variable, class2variableIndex, id2component, aClass);\n\n    final String methodText = myBuffer.toString();\n\n    final PsiManager psiManager = PsiManager.getInstance(module.getProject());\n    final PsiElementFactory elementFactory = psiManager.getElementFactory();\n\n    cleanup(aClass);\n\n    // [anton] the comments are written according to the SCR 26896  \n    final PsiClass fakeClass = elementFactory.createClassFromText(\n      \"{\\n\" +\n      \"// GUI initializer generated by \" + ApplicationNamesInfo.getInstance().getFullProductName() + \" GUI Designer \\n\" +\n      \"// >>> IMPORTANT!! <<<\\n\" +\n      \"// DO NOT EDIT OR ADD ANY CODE HERE!\\n\" +\n      \"\" + AsmCodeGenerator.SETUP_METHOD_NAME + \"();\\n\" +\n      \"}\\n\" +\n      \"\\n\" +\n      \"/** Method generated by \" + ApplicationNamesInfo.getInstance().getFullProductName() + \" GUI Designer\\n\" +\n      \" * >>> IMPORTANT!! <<<\\n\" +\n      \" * DO NOT edit this method OR call it in your code!\\t\" +\n      \" */\\n\" +\n      \"private void \" + AsmCodeGenerator.SETUP_METHOD_NAME + \"()\\n\" +\n      \"{\\n\" +\n      methodText +\n      \"}\\n\",\n      null\n    );\n\n    final PsiElement method = aClass.add(fakeClass.getMethods()[0]);\n    final PsiElement initializer = aClass.addBefore(fakeClass.getInitializers()[0], method);\n\n    PsiMethod grcMethod = null;\n    PsiMethod[] grcMethods = aClass.findMethodsByName(AsmCodeGenerator.GET_ROOT_COMPONENT_METHOD_NAME, false);\n    if (topComponent.getBinding() == null) {\n      for(PsiMethod oldGrcMethod: grcMethods) {\n        oldGrcMethod.delete();\n      }\n    }\n    else {\n      grcMethod = elementFactory.createMethodFromText(\n            \"public javax.swing.JComponent \" + AsmCodeGenerator.GET_ROOT_COMPONENT_METHOD_NAME +\n            \"() { return \" + topComponent.getBinding() + \"; }\",\n            aClass);\n      if (grcMethods.length > 0) {\n        grcMethods [0].replace(grcMethod);\n      }\n      else {\n        aClass.addAfter(grcMethod, method);\n      }\n    }\n\n    final CodeStyleManager codeStyleManager = CodeStyleManager.getInstance(module.getProject());\n    codeStyleManager.shortenClassReferences(method);\n    codeStyleManager.reformat(method);\n    codeStyleManager.shortenClassReferences(initializer);\n    codeStyleManager.reformat(initializer);\n    if (grcMethod != null) {\n      codeStyleManager.shortenClassReferences(grcMethod);\n      codeStyleManager.reformat(grcMethod);\n    }\n  }","id":52322,"modified_method":"private void _generate(final LwRootContainer rootContainer, final Module module) throws CodeGenerationException, IncorrectOperationException{\n    myBuffer = new StringBuffer();\n    myIsFirstParameterStack = new Stack<Boolean>();\n\n    final HashMap<LwComponent,String> component2variable = new HashMap<LwComponent,String>();\n    final TObjectIntHashMap<String> class2variableIndex = new TObjectIntHashMap<String>();\n    final HashMap<String,LwComponent> id2component = new HashMap<String, LwComponent>();\n\n    if (rootContainer.getComponentCount() != 1) {\n      throw new CodeGenerationException(null, UIDesignerBundle.message(\"error.one.toplevel.component.required\"));\n    }\n    final LwComponent topComponent = (LwComponent)rootContainer.getComponent(0);\n    String id = Utils.findNotEmptyPanelWithXYLayout(topComponent);\n    if (id != null) {\n      throw new CodeGenerationException(id, UIDesignerBundle.message(\"error.nonempty.xy.panels.found\"));\n    }\n\n    final PsiClass aClass = FormEditingUtil.findClassToBind(module, rootContainer.getClassToBind());\n    if (aClass == null) {\n      throw new ClassToBindNotFoundException(UIDesignerBundle.message(\"error.class.to.bind.not.found\", rootContainer.getClassToBind()));\n    }\n\n    if (Utils.getCustomCreateComponentCount(rootContainer) > 0) {\n      if (FormEditingUtil.findCreateComponentsMethod(aClass) == null) {\n        throw new CodeGenerationException(null, UIDesignerBundle.message(\"error.no.custom.create.method\"));\n      }\n      myBuffer.append(AsmCodeGenerator.CREATE_COMPONENTS_METHOD_NAME).append(\"();\");\n    }\n\n    generateSetupCodeForComponent(topComponent,\n                                  component2variable,\n                                  class2variableIndex,\n                                  id2component, module, aClass);\n    generateComponentReferenceProperties(topComponent, component2variable, class2variableIndex, id2component, aClass);\n    generateButtonGroups(rootContainer, component2variable, class2variableIndex, id2component, aClass);\n\n    final String methodText = myBuffer.toString();\n\n    final PsiManager psiManager = PsiManager.getInstance(module.getProject());\n    final PsiElementFactory elementFactory = psiManager.getElementFactory();\n\n    cleanup(aClass);\n\n    // [anton] the comments are written according to the SCR 26896  \n    final PsiClass fakeClass = elementFactory.createClassFromText(\n      \"{\\n\" +\n      \"// GUI initializer generated by \" + ApplicationNamesInfo.getInstance().getFullProductName() + \" GUI Designer \\n\" +\n      \"// >>> IMPORTANT!! <<<\\n\" +\n      \"// DO NOT EDIT OR ADD ANY CODE HERE!\\n\" +\n      \"\" + AsmCodeGenerator.SETUP_METHOD_NAME + \"();\\n\" +\n      \"}\\n\" +\n      \"\\n\" +\n      \"/** Method generated by \" + ApplicationNamesInfo.getInstance().getFullProductName() + \" GUI Designer\\n\" +\n      \" * >>> IMPORTANT!! <<<\\n\" +\n      \" * DO NOT edit this method OR call it in your code!\\t\" +\n      \" */\\n\" +\n      \"private void \" + AsmCodeGenerator.SETUP_METHOD_NAME + \"()\\n\" +\n      \"{\\n\" +\n      methodText +\n      \"}\\n\",\n      null\n    );\n\n    final PsiMethod method = (PsiMethod) aClass.add(fakeClass.getMethods()[0]);\n    PsiElement initializer = null;\n\n    // don't generate initializer block if $$$setupUI$$$() is called explicitly from one of the constructors\n    boolean needInitializer = true;\n    for(PsiMethod constructor: aClass.getConstructors()) {\n      if (containsMethodIdentifier(constructor, method)) {\n        needInitializer = false;\n        break;\n      }\n    }\n\n    if (needInitializer) {\n      initializer = aClass.addBefore(fakeClass.getInitializers()[0], method);\n    }\n\n    PsiMethod grcMethod = null;\n    PsiMethod[] grcMethods = aClass.findMethodsByName(AsmCodeGenerator.GET_ROOT_COMPONENT_METHOD_NAME, false);\n    if (topComponent.getBinding() == null) {\n      for(PsiMethod oldGrcMethod: grcMethods) {\n        oldGrcMethod.delete();\n      }\n    }\n    else {\n      grcMethod = elementFactory.createMethodFromText(\n            \"public javax.swing.JComponent \" + AsmCodeGenerator.GET_ROOT_COMPONENT_METHOD_NAME +\n            \"() { return \" + topComponent.getBinding() + \"; }\",\n            aClass);\n      if (grcMethods.length > 0) {\n        grcMethods [0].replace(grcMethod);\n      }\n      else {\n        aClass.addAfter(grcMethod, method);\n      }\n    }\n\n    final CodeStyleManager codeStyleManager = CodeStyleManager.getInstance(module.getProject());\n    codeStyleManager.shortenClassReferences(method);\n    codeStyleManager.reformat(method);\n    if (initializer != null) {\n      codeStyleManager.shortenClassReferences(initializer);\n      codeStyleManager.reformat(initializer);\n    }\n    if (grcMethod != null) {\n      codeStyleManager.shortenClassReferences(grcMethod);\n      codeStyleManager.reformat(grcMethod);\n    }\n  }","commit_id":"46ce77685d8d2463ac9ab41083ef6fc99990e22b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private boolean isCoverageMetric(Metric metric) {\n    return this.coverageMetrics.contains(metric);\n  }","id":52323,"modified_method":"private boolean isCoverageMetric(Metric<?> metric) {\n    return this.coverageMetrics.contains(metric);\n  }","commit_id":"55d74d47d9b39317083f36352fdc8df3b0151ab6","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public boolean accept(Resource resource, Measure measure) {\n    if (isCoverageMetric(measure.getMetric())) {\n      return !hasMatchingPattern(resource);\n    } else {\n      return true;\n    }\n  }","id":52324,"modified_method":"public boolean accept(Resource resource, Measure<?> measure) {\n    if (isCoverageMetric(measure.getMetric())) {\n      return !hasMatchingPattern(resource);\n    } else {\n      return true;\n    }\n  }","commit_id":"55d74d47d9b39317083f36352fdc8df3b0151ab6","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public CoverageExclusions(Settings settings) {\n    this.settings = settings;\n    this.coverageMetrics = new HashSet<>();\n    // UT\n    coverageMetrics.add(CoreMetrics.COVERAGE);\n    coverageMetrics.add(CoreMetrics.LINE_COVERAGE);\n    coverageMetrics.add(CoreMetrics.BRANCH_COVERAGE);\n    coverageMetrics.add(CoreMetrics.UNCOVERED_LINES);\n    coverageMetrics.add(CoreMetrics.LINES_TO_COVER);\n    coverageMetrics.add(CoreMetrics.UNCOVERED_CONDITIONS);\n    coverageMetrics.add(CoreMetrics.CONDITIONS_TO_COVER);\n    coverageMetrics.add(CoreMetrics.CONDITIONS_BY_LINE);\n    coverageMetrics.add(CoreMetrics.COVERED_CONDITIONS_BY_LINE);\n    coverageMetrics.add(CoreMetrics.COVERAGE_LINE_HITS_DATA);\n    coverageMetrics.add(CoreMetrics.NEW_LINES_TO_COVER);\n    coverageMetrics.add(CoreMetrics.NEW_UNCOVERED_LINES);\n    coverageMetrics.add(CoreMetrics.NEW_UNCOVERED_CONDITIONS);\n    // IT\n    coverageMetrics.add(CoreMetrics.IT_COVERAGE);\n    coverageMetrics.add(CoreMetrics.IT_LINE_COVERAGE);\n    coverageMetrics.add(CoreMetrics.IT_BRANCH_COVERAGE);\n    coverageMetrics.add(CoreMetrics.IT_UNCOVERED_LINES);\n    coverageMetrics.add(CoreMetrics.IT_LINES_TO_COVER);\n    coverageMetrics.add(CoreMetrics.IT_UNCOVERED_CONDITIONS);\n    coverageMetrics.add(CoreMetrics.IT_CONDITIONS_TO_COVER);\n    coverageMetrics.add(CoreMetrics.IT_CONDITIONS_BY_LINE);\n    coverageMetrics.add(CoreMetrics.IT_COVERED_CONDITIONS_BY_LINE);\n    coverageMetrics.add(CoreMetrics.IT_COVERAGE_LINE_HITS_DATA);\n    coverageMetrics.add(CoreMetrics.NEW_IT_LINES_TO_COVER);\n    coverageMetrics.add(CoreMetrics.NEW_IT_UNCOVERED_LINES);\n    coverageMetrics.add(CoreMetrics.NEW_IT_UNCOVERED_CONDITIONS);\n    // OVERALL\n    coverageMetrics.add(CoreMetrics.OVERALL_COVERAGE);\n    coverageMetrics.add(CoreMetrics.OVERALL_LINE_COVERAGE);\n    coverageMetrics.add(CoreMetrics.OVERALL_BRANCH_COVERAGE);\n    coverageMetrics.add(CoreMetrics.OVERALL_UNCOVERED_LINES);\n    coverageMetrics.add(CoreMetrics.OVERALL_LINES_TO_COVER);\n    coverageMetrics.add(CoreMetrics.OVERALL_UNCOVERED_CONDITIONS);\n    coverageMetrics.add(CoreMetrics.OVERALL_CONDITIONS_TO_COVER);\n    coverageMetrics.add(CoreMetrics.OVERALL_CONDITIONS_BY_LINE);\n    coverageMetrics.add(CoreMetrics.OVERALL_COVERED_CONDITIONS_BY_LINE);\n    coverageMetrics.add(CoreMetrics.OVERALL_COVERAGE_LINE_HITS_DATA);\n    coverageMetrics.add(CoreMetrics.NEW_OVERALL_LINES_TO_COVER);\n    coverageMetrics.add(CoreMetrics.NEW_OVERALL_UNCOVERED_LINES);\n    coverageMetrics.add(CoreMetrics.NEW_OVERALL_UNCOVERED_CONDITIONS);\n\n    initPatterns();\n  }","id":52325,"modified_method":"public CoverageExclusions(Settings settings, FileSystem fs) {\n    this.settings = settings;\n    this.fs = fs;\n    this.coverageMetrics = new HashSet<>();\n    this.byLineMetrics = new HashSet<>();\n    // UT\n    coverageMetrics.add(CoreMetrics.COVERAGE);\n    coverageMetrics.add(CoreMetrics.LINE_COVERAGE);\n    coverageMetrics.add(CoreMetrics.BRANCH_COVERAGE);\n    coverageMetrics.add(CoreMetrics.UNCOVERED_LINES);\n    coverageMetrics.add(CoreMetrics.LINES_TO_COVER);\n    coverageMetrics.add(CoreMetrics.UNCOVERED_CONDITIONS);\n    coverageMetrics.add(CoreMetrics.CONDITIONS_TO_COVER);\n    coverageMetrics.add(CoreMetrics.CONDITIONS_BY_LINE);\n    coverageMetrics.add(CoreMetrics.COVERED_CONDITIONS_BY_LINE);\n    coverageMetrics.add(CoreMetrics.COVERAGE_LINE_HITS_DATA);\n    coverageMetrics.add(CoreMetrics.NEW_LINES_TO_COVER);\n    coverageMetrics.add(CoreMetrics.NEW_UNCOVERED_LINES);\n    coverageMetrics.add(CoreMetrics.NEW_UNCOVERED_CONDITIONS);\n    // IT\n    coverageMetrics.add(CoreMetrics.IT_COVERAGE);\n    coverageMetrics.add(CoreMetrics.IT_LINE_COVERAGE);\n    coverageMetrics.add(CoreMetrics.IT_BRANCH_COVERAGE);\n    coverageMetrics.add(CoreMetrics.IT_UNCOVERED_LINES);\n    coverageMetrics.add(CoreMetrics.IT_LINES_TO_COVER);\n    coverageMetrics.add(CoreMetrics.IT_UNCOVERED_CONDITIONS);\n    coverageMetrics.add(CoreMetrics.IT_CONDITIONS_TO_COVER);\n    coverageMetrics.add(CoreMetrics.IT_CONDITIONS_BY_LINE);\n    coverageMetrics.add(CoreMetrics.IT_COVERED_CONDITIONS_BY_LINE);\n    coverageMetrics.add(CoreMetrics.IT_COVERAGE_LINE_HITS_DATA);\n    coverageMetrics.add(CoreMetrics.NEW_IT_LINES_TO_COVER);\n    coverageMetrics.add(CoreMetrics.NEW_IT_UNCOVERED_LINES);\n    coverageMetrics.add(CoreMetrics.NEW_IT_UNCOVERED_CONDITIONS);\n    // OVERALL\n    coverageMetrics.add(CoreMetrics.OVERALL_COVERAGE);\n    coverageMetrics.add(CoreMetrics.OVERALL_LINE_COVERAGE);\n    coverageMetrics.add(CoreMetrics.OVERALL_BRANCH_COVERAGE);\n    coverageMetrics.add(CoreMetrics.OVERALL_UNCOVERED_LINES);\n    coverageMetrics.add(CoreMetrics.OVERALL_LINES_TO_COVER);\n    coverageMetrics.add(CoreMetrics.OVERALL_UNCOVERED_CONDITIONS);\n    coverageMetrics.add(CoreMetrics.OVERALL_CONDITIONS_TO_COVER);\n    coverageMetrics.add(CoreMetrics.OVERALL_CONDITIONS_BY_LINE);\n    coverageMetrics.add(CoreMetrics.OVERALL_COVERED_CONDITIONS_BY_LINE);\n    coverageMetrics.add(CoreMetrics.OVERALL_COVERAGE_LINE_HITS_DATA);\n    coverageMetrics.add(CoreMetrics.NEW_OVERALL_LINES_TO_COVER);\n    coverageMetrics.add(CoreMetrics.NEW_OVERALL_UNCOVERED_LINES);\n    coverageMetrics.add(CoreMetrics.NEW_OVERALL_UNCOVERED_CONDITIONS);\n\n    byLineMetrics.add(CoreMetrics.OVERALL_CONDITIONS_BY_LINE);\n    byLineMetrics.add(CoreMetrics.OVERALL_COVERED_CONDITIONS_BY_LINE);\n    byLineMetrics.add(CoreMetrics.COVERED_CONDITIONS_BY_LINE);\n    byLineMetrics.add(CoreMetrics.CONDITIONS_BY_LINE);\n    byLineMetrics.add(CoreMetrics.IT_CONDITIONS_BY_LINE);\n    byLineMetrics.add(CoreMetrics.IT_COVERED_CONDITIONS_BY_LINE);\n\n    initPatterns();\n  }","commit_id":"55d74d47d9b39317083f36352fdc8df3b0151ab6","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Before\n  public void createFilter() {\n    settings = new Settings(new PropertyDefinitions(ExclusionProperties.all()));\n    filter = new CoverageExclusions(settings);\n  }","id":52326,"modified_method":"@Before\n  public void createFilter() {\n    settings = new Settings(new PropertyDefinitions(ExclusionProperties.all()));\n    fs = new DefaultFileSystem(temp.getRoot());\n    filter = new CoverageExclusions(settings, fs);\n  }","commit_id":"55d74d47d9b39317083f36352fdc8df3b0151ab6","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void coveragePerTestInReport() throws IOException {\n\n    File baseDir = temp.getRoot();\n    File srcDir = new File(baseDir, \"src\");\n    srcDir.mkdir();\n    File testDir = new File(baseDir, \"test\");\n    testDir.mkdir();\n\n    File xooFile = new File(srcDir, \"sample.xoo\");\n    FileUtils.write(xooFile, \"foo\");\n\n    File xooFile2 = new File(srcDir, \"sample2.xoo\");\n    FileUtils.write(xooFile2, \"foo\");\n\n    File xooTestFile = new File(testDir, \"sampleTest.xoo\");\n    FileUtils.write(xooTestFile, \"failure\\nerror\\nok\\nskipped\");\n\n    File xooTestFile2 = new File(testDir, \"sample2Test.xoo\");\n    FileUtils.write(xooTestFile2, \"test file tests\");\n\n    File xooTestExecutionFile = new File(testDir, \"sampleTest.xoo.test\");\n    FileUtils.write(xooTestExecutionFile, \"some test:4:::OK:UNIT\\n\" +\n      \"another test:10:::OK:UNIT\\n\" +\n      \"test without coverage:10:::OK:UNIT\\n\");\n\n    File xooCoveragePerTestFile = new File(testDir, \"sampleTest.xoo.testcoverage\");\n    FileUtils.write(xooCoveragePerTestFile, \"some test;src/sample.xoo,10,11;src/sample2.xoo,1,2\\n\" +\n      \"another test;src/sample.xoo,10,20\\n\");\n\n    TaskResult result = tester.newTask()\n      .properties(ImmutableMap.<String, String>builder()\n        .put(\"sonar.task\", \"scan\")\n        .put(\"sonar.projectBaseDir\", baseDir.getAbsolutePath())\n        .put(\"sonar.projectKey\", \"com.foo.project\")\n        .put(\"sonar.projectName\", \"Foo Project\")\n        .put(\"sonar.projectVersion\", \"1.0-SNAPSHOT\")\n        .put(\"sonar.projectDescription\", \"Description of Foo Project\")\n        .put(\"sonar.sources\", \"src\")\n        .put(\"sonar.tests\", \"test\")\n        .build())\n      .start();\n\n    InputFile file = result.inputFile(\"test/sampleTest.xoo\");\n    org.sonar.batch.protocol.output.BatchReport.CoverageDetail someTest = result.coveragePerTestFor(file, \"some test\");\n    assertThat(someTest.getCoveredFileList()).hasSize(2);\n    assertThat(someTest.getCoveredFile(0).getFileRef()).isGreaterThan(0);\n    assertThat(someTest.getCoveredFile(0).getCoveredLineList()).containsExactly(10, 11);\n    assertThat(someTest.getCoveredFile(1).getFileRef()).isGreaterThan(0);\n    assertThat(someTest.getCoveredFile(1).getCoveredLineList()).containsExactly(1, 2);\n\n    org.sonar.batch.protocol.output.BatchReport.CoverageDetail anotherTest = result.coveragePerTestFor(file, \"another test\");\n    assertThat(anotherTest.getCoveredFileList()).hasSize(1);\n    assertThat(anotherTest.getCoveredFile(0).getFileRef()).isGreaterThan(0);\n    assertThat(anotherTest.getCoveredFile(0).getCoveredLineList()).containsExactly(10, 20);\n  }","id":52327,"modified_method":"@Test\n  public void coveragePerTestInReport() throws IOException {\n    File baseDir = createTestFiles();\n    File testDir = new File(baseDir, \"test\");\n\n    File xooTestExecutionFile = new File(testDir, \"sampleTest.xoo.test\");\n    FileUtils.write(xooTestExecutionFile, \"some test:4:::OK:UNIT\\n\" +\n      \"another test:10:::OK:UNIT\\n\" +\n      \"test without coverage:10:::OK:UNIT\\n\");\n\n    File xooCoveragePerTestFile = new File(testDir, \"sampleTest.xoo.testcoverage\");\n    FileUtils.write(xooCoveragePerTestFile, \"some test;src/sample.xoo,10,11;src/sample2.xoo,1,2\\n\" +\n      \"another test;src/sample.xoo,10,20\\n\");\n\n    TaskResult result = runTask(baseDir);\n\n    InputFile file = result.inputFile(\"test/sampleTest.xoo\");\n    org.sonar.batch.protocol.output.BatchReport.CoverageDetail someTest = result.coveragePerTestFor(file, \"some test\");\n    assertThat(someTest.getCoveredFileList()).hasSize(2);\n    assertThat(someTest.getCoveredFile(0).getFileRef()).isGreaterThan(0);\n    assertThat(someTest.getCoveredFile(0).getCoveredLineList()).containsExactly(10, 11);\n    assertThat(someTest.getCoveredFile(1).getFileRef()).isGreaterThan(0);\n    assertThat(someTest.getCoveredFile(1).getCoveredLineList()).containsExactly(1, 2);\n\n    org.sonar.batch.protocol.output.BatchReport.CoverageDetail anotherTest = result.coveragePerTestFor(file, \"another test\");\n    assertThat(anotherTest.getCoveredFileList()).hasSize(1);\n    assertThat(anotherTest.getCoveredFile(0).getFileRef()).isGreaterThan(0);\n    assertThat(anotherTest.getCoveredFile(0).getCoveredLineList()).containsExactly(10, 20);\n  }","commit_id":"55d74d47d9b39317083f36352fdc8df3b0151ab6","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public NewCoverage ofType(CoverageType type) {\n    Preconditions.checkNotNull(type, \"type can't be null\");\n    this.type = type;\n    return this;\n  }","id":52328,"modified_method":"@Override\n  public NewCoverage ofType(CoverageType type) {\n    validateFile();\n    Preconditions.checkNotNull(type, \"type can't be null\");\n    this.type = type;\n    return this;\n  }","commit_id":"55d74d47d9b39317083f36352fdc8df3b0151ab6","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public NewCoverage conditions(int line, int conditions, int coveredConditions) {\n    if (conditions > 0 && !conditionsByLine.containsKey(line)) {\n      totalConditions += conditions;\n      totalCoveredConditions += coveredConditions;\n      conditionsByLine.put(line, conditions);\n      coveredConditionsByLine.put(line, coveredConditions);\n    }\n    return this;\n  }","id":52329,"modified_method":"@Override\n  public NewCoverage conditions(int line, int conditions, int coveredConditions) {\n    validateFile();\n    validateLine(line);\n\n    if (conditions > 0 && !conditionsByLine.containsKey(line)) {\n      totalConditions += conditions;\n      totalCoveredConditions += coveredConditions;\n      conditionsByLine.put(line, conditions);\n      coveredConditionsByLine.put(line, coveredConditions);\n    }\n    return this;\n  }","commit_id":"55d74d47d9b39317083f36352fdc8df3b0151ab6","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public DefaultCoverage onFile(InputFile inputFile) {\n    Preconditions.checkNotNull(inputFile, \"file can't be null\");\n    this.inputFile = (DefaultInputFile) inputFile;\n    return this;\n  }","id":52330,"modified_method":"@Override\n  public DefaultCoverage onFile(InputFile inputFile) {\n    this.inputFile = (DefaultInputFile) inputFile;\n    return this;\n  }","commit_id":"55d74d47d9b39317083f36352fdc8df3b0151ab6","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public NewCoverage lineHits(int line, int hits) {\n    if (!hitsByLine.containsKey(line)) {\n      hitsByLine.put(line, hits);\n      if (hits > 0) {\n        totalCoveredLines += 1;\n      }\n    }\n    return this;\n  }","id":52331,"modified_method":"@Override\n  public NewCoverage lineHits(int line, int hits) {\n    validateFile();\n    validateLine(line);\n\n    if (!hitsByLine.containsKey(line)) {\n      hitsByLine.put(line, hits);\n      if (hits > 0) {\n        totalCoveredLines += 1;\n      }\n    }\n    return this;\n  }","commit_id":"55d74d47d9b39317083f36352fdc8df3b0151ab6","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public void doSave() {\n    Preconditions.checkNotNull(inputFile, \"Call onFile() first\");\n    Preconditions.checkNotNull(type, \"Call ofType() first\");\n    storage.store(this);\n  }","id":52332,"modified_method":"@Override\n  public void doSave() {\n    validateFile();\n    Preconditions.checkNotNull(type, \"Call ofType() first\");\n    validateLines();\n    storage.store(this);\n  }","commit_id":"55d74d47d9b39317083f36352fdc8df3b0151ab6","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public Measure saveMeasure(InputFile inputFile, Measure measure) {\n    return saveMeasure(getResource(inputFile), measure);\n  }","id":52333,"modified_method":"@Override\n  public Measure saveMeasure(InputFile inputFile, Measure measure) {\n    coverageFilter.validate(measure, inputFile);\n    return saveMeasure(getResource(inputFile), measure);\n  }","commit_id":"55d74d47d9b39317083f36352fdc8df3b0151ab6","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public Measure saveMeasure(Resource resource, Metric metric, Double value) {\n    return saveMeasure(resource, new Measure(metric, value));\n  }","id":52334,"modified_method":"@Override\n  public Measure saveMeasure(Resource resource, Metric metric, Double value) {\n    Measure<?> measure = new Measure(metric, value);\n    coverageFilter.validate(measure, resource.getPath());\n    return saveMeasure(resource, measure);\n  }","commit_id":"55d74d47d9b39317083f36352fdc8df3b0151ab6","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public Measure saveMeasure(InputFile inputFile, Metric metric, Double value) {\n    return saveMeasure(getResource(inputFile), metric, value);\n  }","id":52335,"modified_method":"@Override\n  public Measure saveMeasure(InputFile inputFile, Metric metric, Double value) {\n    Measure<?> measure = new Measure(metric, value);\n    coverageFilter.validate(measure, inputFile);\n    return saveMeasure(getResource(inputFile), measure);\n  }","commit_id":"55d74d47d9b39317083f36352fdc8df3b0151ab6","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void testLineHitNoConditions() throws IOException {\n    File coverage = new File(baseDir, \"src/foo.xoo.itcoverage\");\n    FileUtils.write(coverage, \"1:3\\n\\n#comment\");\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\").setLanguage(\"xoo\");\n    context.fileSystem().add(inputFile);\n\n    sensor.execute(context);\n\n    assertThat(context.lineHits(\"foo:src/foo.xoo\", CoverageType.IT, 1)).isEqualTo(3);\n  }","id":52336,"modified_method":"@Test\n  public void testLineHitNoConditions() throws IOException {\n    File coverage = new File(baseDir, \"src/foo.xoo.itcoverage\");\n    FileUtils.write(coverage, \"1:3\\n\\n#comment\");\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\").setLanguage(\"xoo\").setLines(10);\n    context.fileSystem().add(inputFile);\n\n    sensor.execute(context);\n\n    assertThat(context.lineHits(\"foo:src/foo.xoo\", CoverageType.IT, 1)).isEqualTo(3);\n  }","commit_id":"55d74d47d9b39317083f36352fdc8df3b0151ab6","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void testLineHitAndConditions() throws IOException {\n    File coverage = new File(baseDir, \"src/foo.xoo.itcoverage\");\n    FileUtils.write(coverage, \"1:3:4:2\");\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\").setLanguage(\"xoo\");\n    context.fileSystem().add(inputFile);\n\n    sensor.execute(context);\n\n    assertThat(context.lineHits(\"foo:src/foo.xoo\", CoverageType.IT, 1)).isEqualTo(3);\n    assertThat(context.conditions(\"foo:src/foo.xoo\", CoverageType.IT, 1)).isEqualTo(4);\n    assertThat(context.coveredConditions(\"foo:src/foo.xoo\", CoverageType.IT, 1)).isEqualTo(2);\n  }","id":52337,"modified_method":"@Test\n  public void testLineHitAndConditions() throws IOException {\n    File coverage = new File(baseDir, \"src/foo.xoo.itcoverage\");\n    FileUtils.write(coverage, \"1:3:4:2\");\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\").setLanguage(\"xoo\").setLines(10);\n    context.fileSystem().add(inputFile);\n\n    sensor.execute(context);\n\n    assertThat(context.lineHits(\"foo:src/foo.xoo\", CoverageType.IT, 1)).isEqualTo(3);\n    assertThat(context.conditions(\"foo:src/foo.xoo\", CoverageType.IT, 1)).isEqualTo(4);\n    assertThat(context.coveredConditions(\"foo:src/foo.xoo\", CoverageType.IT, 1)).isEqualTo(2);\n  }","commit_id":"55d74d47d9b39317083f36352fdc8df3b0151ab6","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void testLineHitNoConditions() throws IOException {\n    File coverage = new File(baseDir, \"src/foo.xoo.overallcoverage\");\n    FileUtils.write(coverage, \"1:3\\n\\n#comment\");\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\").setLanguage(\"xoo\");\n    context.fileSystem().add(inputFile);\n\n    sensor.execute(context);\n\n    assertThat(context.lineHits(\"foo:src/foo.xoo\", CoverageType.OVERALL, 1)).isEqualTo(3);\n  }","id":52338,"modified_method":"@Test\n  public void testLineHitNoConditions() throws IOException {\n    File coverage = new File(baseDir, \"src/foo.xoo.overallcoverage\");\n    FileUtils.write(coverage, \"1:3\\n\\n#comment\");\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\").setLanguage(\"xoo\").setLines(10);\n    context.fileSystem().add(inputFile);\n\n    sensor.execute(context);\n\n    assertThat(context.lineHits(\"foo:src/foo.xoo\", CoverageType.OVERALL, 1)).isEqualTo(3);\n  }","commit_id":"55d74d47d9b39317083f36352fdc8df3b0151ab6","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void testLineHitAndConditions() throws IOException {\n    File coverage = new File(baseDir, \"src/foo.xoo.overallcoverage\");\n    FileUtils.write(coverage, \"1:3:4:2\");\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\").setLanguage(\"xoo\");\n    context.fileSystem().add(inputFile);\n\n    sensor.execute(context);\n\n    assertThat(context.lineHits(\"foo:src/foo.xoo\", CoverageType.OVERALL, 1)).isEqualTo(3);\n    assertThat(context.conditions(\"foo:src/foo.xoo\", CoverageType.OVERALL, 1)).isEqualTo(4);\n    assertThat(context.coveredConditions(\"foo:src/foo.xoo\", CoverageType.OVERALL, 1)).isEqualTo(2);\n  }","id":52339,"modified_method":"@Test\n  public void testLineHitAndConditions() throws IOException {\n    File coverage = new File(baseDir, \"src/foo.xoo.overallcoverage\");\n    FileUtils.write(coverage, \"1:3:4:2\");\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\").setLanguage(\"xoo\").setLines(10);\n    context.fileSystem().add(inputFile);\n\n    sensor.execute(context);\n\n    assertThat(context.lineHits(\"foo:src/foo.xoo\", CoverageType.OVERALL, 1)).isEqualTo(3);\n    assertThat(context.conditions(\"foo:src/foo.xoo\", CoverageType.OVERALL, 1)).isEqualTo(4);\n    assertThat(context.coveredConditions(\"foo:src/foo.xoo\", CoverageType.OVERALL, 1)).isEqualTo(2);\n  }","commit_id":"55d74d47d9b39317083f36352fdc8df3b0151ab6","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void testLineHits() {\n    assertThat(tester.lineHits(\"foo:src/Foo.java\", CoverageType.UNIT, 1)).isNull();\n    assertThat(tester.lineHits(\"foo:src/Foo.java\", CoverageType.UNIT, 4)).isNull();\n    tester.newCoverage()\n      .onFile(new DefaultInputFile(\"foo\", \"src/Foo.java\").initMetadata(new FileMetadata().readMetadata(new StringReader(\"annot dsf fds foo bar\"))))\n      .ofType(CoverageType.UNIT)\n      .lineHits(1, 2)\n      .lineHits(4, 3)\n      .save();\n    assertThat(tester.lineHits(\"foo:src/Foo.java\", CoverageType.UNIT, 1)).isEqualTo(2);\n    assertThat(tester.lineHits(\"foo:src/Foo.java\", CoverageType.IT, 1)).isNull();\n    assertThat(tester.lineHits(\"foo:src/Foo.java\", CoverageType.UNIT, 4)).isEqualTo(3);\n  }","id":52340,"modified_method":"@Test\n  public void testLineHits() {\n    assertThat(tester.lineHits(\"foo:src/Foo.java\", CoverageType.UNIT, 1)).isNull();\n    assertThat(tester.lineHits(\"foo:src/Foo.java\", CoverageType.UNIT, 4)).isNull();\n    tester.newCoverage()\n      .onFile(new DefaultInputFile(\"foo\", \"src/Foo.java\").initMetadata(new FileMetadata().readMetadata(new StringReader(\"annot dsf fds foo bar\\nasdas\"))))\n      .ofType(CoverageType.UNIT)\n      .lineHits(1, 2)\n      .lineHits(2, 3)\n      .save();\n    assertThat(tester.lineHits(\"foo:src/Foo.java\", CoverageType.UNIT, 1)).isEqualTo(2);\n    assertThat(tester.lineHits(\"foo:src/Foo.java\", CoverageType.IT, 1)).isNull();\n    assertThat(tester.lineHits(\"foo:src/Foo.java\", CoverageType.UNIT, 2)).isEqualTo(3);\n  }","commit_id":"55d74d47d9b39317083f36352fdc8df3b0151ab6","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void testConditions() {\n    assertThat(tester.conditions(\"foo:src/Foo.java\", CoverageType.UNIT, 1)).isNull();\n    assertThat(tester.coveredConditions(\"foo:src/Foo.java\", CoverageType.UNIT, 1)).isNull();\n    tester.newCoverage()\n      .onFile(new DefaultInputFile(\"foo\", \"src/Foo.java\").initMetadata(new FileMetadata().readMetadata(new StringReader(\"annot dsf fds foo bar\"))))\n      .ofType(CoverageType.UNIT)\n      .conditions(1, 4, 2)\n      .save();\n    assertThat(tester.conditions(\"foo:src/Foo.java\", CoverageType.UNIT, 1)).isEqualTo(4);\n    assertThat(tester.coveredConditions(\"foo:src/Foo.java\", CoverageType.UNIT, 1)).isEqualTo(2);\n\n    assertThat(tester.conditions(\"foo:src/Foo.java\", CoverageType.IT, 1)).isNull();\n    assertThat(tester.coveredConditions(\"foo:src/Foo.java\", CoverageType.IT, 1)).isNull();\n  }","id":52341,"modified_method":"@Test\n  public void testConditions() {\n    assertThat(tester.conditions(\"foo:src/Foo.java\", CoverageType.UNIT, 1)).isNull();\n    assertThat(tester.coveredConditions(\"foo:src/Foo.java\", CoverageType.UNIT, 1)).isNull();\n    tester.newCoverage()\n      .onFile(new DefaultInputFile(\"foo\", \"src/Foo.java\").initMetadata(new FileMetadata().readMetadata(new StringReader(\"annot dsf fds foo bar\\nasd\\nasdas\\nasdfas\"))))\n      .ofType(CoverageType.UNIT)\n      .conditions(1, 4, 2)\n      .save();\n    assertThat(tester.conditions(\"foo:src/Foo.java\", CoverageType.UNIT, 1)).isEqualTo(4);\n    assertThat(tester.coveredConditions(\"foo:src/Foo.java\", CoverageType.UNIT, 1)).isEqualTo(2);\n\n    assertThat(tester.conditions(\"foo:src/Foo.java\", CoverageType.IT, 1)).isNull();\n    assertThat(tester.coveredConditions(\"foo:src/Foo.java\", CoverageType.IT, 1)).isNull();\n  }","commit_id":"55d74d47d9b39317083f36352fdc8df3b0151ab6","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void testLineHitNoConditions() throws IOException {\n    File coverage = new File(baseDir, \"src/foo.xoo.coverage\");\n    FileUtils.write(coverage, \"1:3\\n\\n#comment\");\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\").setLanguage(\"xoo\");\n    context.fileSystem().add(inputFile);\n\n    sensor.execute(context);\n\n    assertThat(context.lineHits(\"foo:src/foo.xoo\", CoverageType.UNIT, 1)).isEqualTo(3);\n    assertThat(context.lineHits(\"foo:src/foo.xoo\", CoverageType.IT, 1)).isNull();\n    assertThat(context.lineHits(\"foo:src/foo.xoo\", CoverageType.OVERALL, 1)).isNull();\n  }","id":52342,"modified_method":"@Test\n  public void testLineHitNoConditions() throws IOException {\n    File coverage = new File(baseDir, \"src/foo.xoo.coverage\");\n    FileUtils.write(coverage, \"1:3\\n\\n#comment\");\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\").setLanguage(\"xoo\").setLines(10);\n    context.fileSystem().add(inputFile);\n\n    sensor.execute(context);\n\n    assertThat(context.lineHits(\"foo:src/foo.xoo\", CoverageType.UNIT, 1)).isEqualTo(3);\n    assertThat(context.lineHits(\"foo:src/foo.xoo\", CoverageType.IT, 1)).isNull();\n    assertThat(context.lineHits(\"foo:src/foo.xoo\", CoverageType.OVERALL, 1)).isNull();\n  }","commit_id":"55d74d47d9b39317083f36352fdc8df3b0151ab6","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void testLineHitAndConditions() throws IOException {\n    File coverage = new File(baseDir, \"src/foo.xoo.coverage\");\n    FileUtils.write(coverage, \"1:3:4:2\");\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\").setLanguage(\"xoo\");\n    context.fileSystem().add(inputFile);\n\n    sensor.execute(context);\n\n    assertThat(context.lineHits(\"foo:src/foo.xoo\", CoverageType.UNIT, 1)).isEqualTo(3);\n    assertThat(context.conditions(\"foo:src/foo.xoo\", CoverageType.UNIT, 1)).isEqualTo(4);\n    assertThat(context.conditions(\"foo:src/foo.xoo\", CoverageType.IT, 1)).isNull();\n    assertThat(context.conditions(\"foo:src/foo.xoo\", CoverageType.OVERALL, 1)).isNull();\n    assertThat(context.coveredConditions(\"foo:src/foo.xoo\", CoverageType.UNIT, 1)).isEqualTo(2);\n    assertThat(context.coveredConditions(\"foo:src/foo.xoo\", CoverageType.IT, 1)).isNull();\n    assertThat(context.coveredConditions(\"foo:src/foo.xoo\", CoverageType.OVERALL, 1)).isNull();\n  }","id":52343,"modified_method":"@Test\n  public void testLineHitAndConditions() throws IOException {\n    File coverage = new File(baseDir, \"src/foo.xoo.coverage\");\n    FileUtils.write(coverage, \"1:3:4:2\");\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\").setLanguage(\"xoo\").setLines(10);\n    context.fileSystem().add(inputFile);\n\n    sensor.execute(context);\n\n    assertThat(context.lineHits(\"foo:src/foo.xoo\", CoverageType.UNIT, 1)).isEqualTo(3);\n    assertThat(context.conditions(\"foo:src/foo.xoo\", CoverageType.UNIT, 1)).isEqualTo(4);\n    assertThat(context.conditions(\"foo:src/foo.xoo\", CoverageType.IT, 1)).isNull();\n    assertThat(context.conditions(\"foo:src/foo.xoo\", CoverageType.OVERALL, 1)).isNull();\n    assertThat(context.coveredConditions(\"foo:src/foo.xoo\", CoverageType.UNIT, 1)).isEqualTo(2);\n    assertThat(context.coveredConditions(\"foo:src/foo.xoo\", CoverageType.IT, 1)).isNull();\n    assertThat(context.coveredConditions(\"foo:src/foo.xoo\", CoverageType.OVERALL, 1)).isNull();\n  }","commit_id":"55d74d47d9b39317083f36352fdc8df3b0151ab6","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void test() throws IOException {\n    Path baseDir = temp.newFolder().toPath().toAbsolutePath();\n    createErrorFile(baseDir);\n\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\").setLanguage(\"xoo\");\n    context = SensorContextTester.create(baseDir);\n    context.fileSystem().add(inputFile);\n\n    sensor.execute(context);\n    assertThat(context.allAnalysisErrors()).hasSize(1);\n    AnalysisError error = context.allAnalysisErrors().iterator().next();\n\n    assertThat(error.inputFile()).isEqualTo(inputFile);\n    assertThat(error.location()).isEqualTo(new DefaultTextPointer(1, 4));\n    assertThat(error.message()).isEqualTo(\"my error\");\n  }","id":52344,"modified_method":"@Test\n  public void test() throws IOException {\n    Path baseDir = temp.newFolder().toPath().toAbsolutePath();\n    createErrorFile(baseDir);\n\n    int[] offsets = {10, 20, 30, 40};\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\")\n      .setLanguage(\"xoo\")\n      .setOriginalLineOffsets(offsets)\n      .setLines(4);\n    context = SensorContextTester.create(baseDir);\n    context.fileSystem().add(inputFile);\n\n    sensor.execute(context);\n    assertThat(context.allAnalysisErrors()).hasSize(1);\n    AnalysisError error = context.allAnalysisErrors().iterator().next();\n\n    assertThat(error.inputFile()).isEqualTo(inputFile);\n    assertThat(error.location()).isEqualTo(new DefaultTextPointer(1, 4));\n    assertThat(error.message()).isEqualTo(\"my error\");\n  }","commit_id":"b653291c29b67f522ff167ae51cf0ab0ddd7bf30","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void addOrReplaceSecret(StoredSecret s) {\n\t\tsynchronized (secretsByPeer) {\n\t\t\tStoredSecret prev=(StoredSecret)secretsByPeer.get(s.peer);\n\t\t\tif (prev!=null) {\n\t\t\t\tLogger.normal(this, \"Removing on replacement: \"+s);\n\t\t\t\tremoveSecret(prev);\n\t\t\t}\n\t\t\t//Need to remember by peer (so we can remove it on disconnect)\n\t\t\t//Need to remember by uid (so we can respond quickly to arbitrary requests).\n\t\t\tsecretsByPeer.put(s.peer, s);\n\t\t\tsecretsByUID.put(new Long(s.uid), s);\n\t\t}\n\t}","id":52345,"modified_method":"private void addOrReplaceSecret(StoredSecret s) {\n\t\tsynchronized (secretsByPeer) {\n\t\t\tStoredSecret prev=(StoredSecret)secretsByPeer.get(s.peer);\n\t\t\tif (prev!=null) {\n\t\t\t\tif (logMINOR) Logger.minor(this, \"Removing on replacement: \"+s);\n\t\t\t\tremoveSecret(prev);\n\t\t\t}\n\t\t\t//Need to remember by peer (so we can remove it on disconnect)\n\t\t\t//Need to remember by uid (so we can respond quickly to arbitrary requests).\n\t\t\tsecretsByPeer.put(s.peer, s);\n\t\t\tsecretsByUID.put(new Long(s.uid), s);\n\t\t}\n\t}","commit_id":"ad76740403008ce446b706637db3684864cb4668","url":"https://github.com/freenet/fred"},{"original_method":"/**\n\t * Takes all the stored PingRecords, combines it with the network id's advertised by our peers,\n\t * and then does the monstrous task of doing something useful with that data. At the end of this\n\t * function we must assign and broadcast a network id to each of our peers; or at least the ones\n\t * we have ping records for this time around; even if it is just totally madeup identifiers.\n\t */\n\tprivate void doNetworkIDReckoning(boolean anyPingChanges) {\n\t\t//!!!: This is where the magic separation logic begins.\n\t\t// This may still need a lot of work; e.g. a locking mechanism, considering disconnected peers?\n\t\tList newNetworkGroups=new ArrayList();\n\t\tHashSet all=getAllConnectedPeers();\n\t\tHashSet todo=(HashSet)all.clone();\n\t\tHashSet takenNetworkIds=new HashSet();\n\t\t\n\t\tsynchronized (transitionLock) {\n\t\t\tinTransition=true;\n\t\t}\n\t\t\n\t\tif (todo.isEmpty())\n\t\t\treturn;\n\t\t\n\t\t//optimization, if no stats have changed, just rescan the list consensus?\n\t\t\n\t\t//Note that in all this set manipulation, we never consult in what group a user previously was.\n\t\twhile (!todo.isEmpty()) {\n\t\t\tPeerNode mostConnected=findMostConnectedPeerInSet(todo, all);\n\t\t\tPeerNetworkGroup newGroup = new PeerNetworkGroup();\n\t\t\tnewNetworkGroups.add(newGroup);\n\t\t\ttodo.remove(mostConnected);\n\t\t\tList members;\n\t\t\tif (todo.isEmpty()) {\n\t\t\t\t//sad... it looks like this guy gets a group to himself\n\t\t\t\tmembers=new ArrayList();\n\t\t\t\tmembers.add(mostConnected);\n\t\t\t} else {\n\t\t\t\t//NB: as a side effect, this function will automatically remove the members from 'todo'.\n\t\t\t\tmembers=xferConnectedPeerSetFor(mostConnected, todo);\n\t\t\t}\n\t\t\tnewGroup.setMembers(members);\n\t\t\tnewGroup.setForbiddenIds(takenNetworkIds);\n\t\t\t\n\t\t\tint id=newGroup.getConsensus();\n\t\t\tif (id==NO_NETWORKID)\n\t\t\t\tid=node.random.nextInt();\n\t\t\tnewGroup.assignNetworkId(id);\n\t\t\ttakenNetworkIds.add(new Integer(id));\n\t\t}\n\t\t\n\t\t//for now, we'll just say we are in our most-connected group. really it needs to be most-successful, or dungeons may support themselves!\n\t\tPeerNetworkGroup ourgroup=(PeerNetworkGroup)newNetworkGroups.get(0);\n\t\tourgroup.ourGroup=true;\n\t\tourNetworkId=ourgroup.networkid;\n\t\t\n\t\tLogger.error(this, \"I am in network: \"+ourNetworkId+\", and have divided my \"+all.size()+\" peers into \"+newNetworkGroups.size()+\" network groups\");\n\t\tLogger.error(this, \"bestFirst=\"+cheat_stats_general_bestOther.currentValue());\n\t\tLogger.error(this, \"bestGeneralFactor=\"+cheat_stats_findBestSetwisePingAverage_best_general.currentValue());\n\t\t\n\t\tnetworkGroups=newNetworkGroups;\n\t\t\n\t\tinTransition=false;\n\t}","id":52346,"modified_method":"/**\n\t * Takes all the stored PingRecords, combines it with the network id's advertised by our peers,\n\t * and then does the monstrous task of doing something useful with that data. At the end of this\n\t * function we must assign and broadcast a network id to each of our peers; or at least the ones\n\t * we have ping records for this time around; even if it is just totally madeup identifiers.\n\t */\n\tprivate void doNetworkIDReckoning(boolean anyPingChanges) {\n\t\t//!!!: This is where the magic separation logic begins.\n\t\t// This may still need a lot of work; e.g. a locking mechanism, considering disconnected peers?\n\t\tList newNetworkGroups=new ArrayList();\n\t\tHashSet all=getAllConnectedPeers();\n\t\tHashSet todo=(HashSet)all.clone();\n\t\t\n\t\tsynchronized (transitionLock) {\n\t\t\tinTransition=true;\n\t\t}\n\t\t\n\t\tif (logMINOR) Logger.minor(this, \"doNetworkIDReckoning for \"+all.size()+\" peers\");\n\t\t\n\t\tif (todo.isEmpty())\n\t\t\treturn;\n\t\t\n\t\t//optimization, if no stats have changed, just rescan the list consensus?\n\t\t\n\t\t//Note that in all this set manipulation, we never consult in what group a user previously was.\n\t\twhile (!todo.isEmpty()) {\n\t\t\tPeerNode mostConnected=findMostConnectedPeerInSet(todo, all);\n\t\t\tPeerNetworkGroup newGroup = new PeerNetworkGroup();\n\t\t\tnewNetworkGroups.add(newGroup);\n\t\t\ttodo.remove(mostConnected);\n\t\t\tList members;\n\t\t\tif (todo.isEmpty()) {\n\t\t\t\t//sad... it looks like this guy gets a group to himself\n\t\t\t\tmembers=new ArrayList();\n\t\t\t\tmembers.add(mostConnected);\n\t\t\t} else {\n\t\t\t\t//NB: as a side effect, this function will automatically remove the members from 'todo'.\n\t\t\t\tmembers=xferConnectedPeerSetFor(mostConnected, todo);\n\t\t\t}\n\t\t\tnewGroup.setMembers(members);\n\t\t}\n\t\t\n\t\t//The groups are broken up, now sort by priority & assign them a network id.\n\t\tCollections.sort(newNetworkGroups, this);\n\t\t\n\t\tHashSet takenNetworkIds=new HashSet();\n\t\tIterator i=newNetworkGroups.iterator();\n\t\t\n\t\twhile (i.hasNext()) {\n\t\t\tPeerNetworkGroup newGroup=(PeerNetworkGroup)i.next();\n\t\t\tnewGroup.setForbiddenIds(takenNetworkIds);\n\t\t\t\n\t\t\tint id=newGroup.getConsensus();\n\t\t\tif (id==NO_NETWORKID)\n\t\t\t\tid=node.random.nextInt();\n\t\t\tnewGroup.assignNetworkId(id);\n\t\t\ttakenNetworkIds.add(new Integer(id));\n\t\t\tif (logMINOR) Logger.minor(this, \"net \"+id+\" has \"+newGroup.members.size()+\" peers\");\n\t\t}\n\t\t\n\t\tPeerNetworkGroup ourgroup=(PeerNetworkGroup)newNetworkGroups.get(0);\n\t\tourgroup.ourGroup=true;\n\t\tourNetworkId=ourgroup.networkid;\n\t\t\n\t\tLogger.error(this, \"I am in network: \"+ourNetworkId+\", and have divided my \"+all.size()+\" peers into \"+newNetworkGroups.size()+\" network groups\");\n\t\tLogger.error(this, \"largestGroup=\"+ourgroup.members.size());\n\t\tLogger.error(this, \"bestFirst=\"+cheat_stats_general_bestOther.currentValue());\n\t\tLogger.error(this, \"bestGeneralFactor=\"+cheat_stats_findBestSetwisePingAverage_best_general.currentValue());\n\t\t\n\t\tnetworkGroups=newNetworkGroups;\n\t\t\n\t\tinTransition=false;\n\t}","commit_id":"ad76740403008ce446b706637db3684864cb4668","url":"https://github.com/freenet/fred"},{"original_method":"/**\n\t * Get our Peer's. This is a list of IP:port's at which we might be contactable. Some of them\n\t * will have the same port as the listenPort, but if we are behind a NAT which rewrites our\n\t * port number, some of them may not. (If we're behind a symmetric NAT which rewrites it \n\t * differently for each connection, we're stuffed, and we tell the user).\n\t */\n\tPeer[] detectPrimaryPeers() {\n\t\tVector addresses = new Vector();\n\t\tFreenetInetAddress[] addrs = detectPrimaryIPAddress();\n\t\tfor(int i=0;i<addrs.length;i++) {\n\t\t\taddresses.add(new Peer(addrs[i], crypto.portNumber));\n\t\t}\n\t\t// Now try to get the rewritten port number from our peers.\n\t\t// Only considering those within this crypto port, this time.\n\t\t\n\t\tPeerNode[] peerList = crypto.getPeerNodes();\n\t\t\n\t\tif(peerList != null) {\n\t\t\tHashMap countsByPeer = new HashMap();\n\t\t\t// FIXME use a standard mutable int object, we have one somewhere\n\t\t\tfor(int i=0;i<peerList.length;i++) {\n\t\t\t\tPeer p = peerList[i].getRemoteDetectedPeer();\n\t\t\t\tif((p == null) || p.isNull()) continue;\n\t\t\t\t// DNSRequester doesn't deal with our own node\n\t\t\t\tif(!IPUtil.isValidAddress(p.getAddress(true), false)) continue;\n\t\t\t\tLogger.normal(this, \"Peer \"+peerList[i].getPeer()+\" thinks we are \"+p);\n\t\t\t\tif(countsByPeer.containsKey(p)) {\n\t\t\t\t\tInteger count = (Integer) countsByPeer.get(p);\n\t\t\t\t\tInteger newCount = new Integer(count.intValue()+1);\n\t\t\t\t\tcountsByPeer.put(p, newCount);\n\t\t\t\t} else {\n\t\t\t\t\tcountsByPeer.put(p, new Integer(1));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(countsByPeer.size() == 1) {\n\t\t\t\tIterator it = countsByPeer.keySet().iterator();\n\t\t\t\tPeer p = (Peer) (it.next());\n\t\t\t\tLogger.minor(this, \"Everyone agrees we are \"+p);\n\t\t\t\tif(!addresses.contains(p)) {\n\t\t\t\t\taddresses.add(p);\n\t\t\t\t}\n\t\t\t} else if(countsByPeer.size() > 1) {\n\t\t\t\tIterator it = countsByPeer.keySet().iterator();\n\t\t\t\t// Take two most popular addresses.\n\t\t\t\tPeer best = null;\n\t\t\t\tPeer secondBest = null;\n\t\t\t\tint bestPopularity = 0;\n\t\t\t\tint secondBestPopularity = 0;\n\t\t\t\twhile(it.hasNext()) {\n\t\t\t\t\tPeer cur = (Peer) (it.next());\n\t\t\t\t\tint curPop = ((Integer) (countsByPeer.get(cur))).intValue();\n\t\t\t\t\tLogger.normal(this, \"Detected peer: \"+cur+\" popularity \"+curPop);\n\t\t\t\t\tif(curPop >= bestPopularity) {\n\t\t\t\t\t\tsecondBestPopularity = bestPopularity;\n\t\t\t\t\t\tbestPopularity = curPop;\n\t\t\t\t\t\tsecondBest = best;\n\t\t\t\t\t\tbest = cur;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(best != null) {\n\t\t\t\t\tif((bestPopularity > 1) || (addrs.length == 0)) {\n \t\t\t\t\t\tif(!addresses.contains(best)) {\n\t\t\t\t\t\t\tLogger.normal(this, \"Adding best peer \"+best+\" (\"+bestPopularity+ ')');\n\t\t\t\t\t\t\taddresses.add(best);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif((secondBest != null) && (secondBestPopularity > 1)) {\n\t\t\t\t\t\t\tif(!addresses.contains(secondBest)) {\n\t\t\t\t\t\t\t\tLogger.normal(this, \"Adding second best peer \"+secondBest+\" (\"+secondBest+ ')');\n\t\t\t\t\t\t\t\taddresses.add(secondBest);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(best.getAddress().equals(secondBest.getAddress()) && bestPopularity == 1) {\n\t\t\t\t\t\t\t\tLogger.error(this, \"Hrrrm, maybe this is a symmetric NAT? Expect trouble connecting!\");\n\t\t\t\t\t\t\t\tSystem.err.println(\"Hrrrm, maybe this is a symmetric NAT? Expect trouble connecting!\");\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tipDetector.setMaybeSymmetric();\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tPeer p = new Peer(best.getFreenetAddress(), crypto.portNumber);\n\t\t\t\t\t\t\t\tif(!addresses.contains(p))\n\t\t\t\t\t\t\t\t\taddresses.add(p);\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlastPeers = (Peer[]) addresses.toArray(new Peer[addresses.size()]);\n\t\treturn lastPeers;\n\t}","id":52347,"modified_method":"/**\n\t * Get our Peer's. This is a list of IP:port's at which we might be contactable. Some of them\n\t * will have the same port as the listenPort, but if we are behind a NAT which rewrites our\n\t * port number, some of them may not. (If we're behind a symmetric NAT which rewrites it \n\t * differently for each connection, we're stuffed, and we tell the user).\n\t */\n\tPeer[] detectPrimaryPeers() {\n\t\tVector addresses = new Vector();\n\t\tFreenetInetAddress[] addrs = detectPrimaryIPAddress();\n\t\tfor(int i=0;i<addrs.length;i++) {\n\t\t\taddresses.add(new Peer(addrs[i], crypto.portNumber));\n\t\t}\n\t\t// Now try to get the rewritten port number from our peers.\n\t\t// Only considering those within this crypto port, this time.\n\t\t\n\t\tPeerNode[] peerList = crypto.getPeerNodes();\n\t\t\n\t\tif(peerList != null) {\n\t\t\tHashMap countsByPeer = new HashMap();\n\t\t\t// FIXME use a standard mutable int object, we have one somewhere\n\t\t\tfor(int i=0;i<peerList.length;i++) {\n\t\t\t\tPeer p = peerList[i].getRemoteDetectedPeer();\n\t\t\t\tif((p == null) || p.isNull()) continue;\n\t\t\t\t// DNSRequester doesn't deal with our own node\n\t\t\t\tif(!IPUtil.isValidAddress(p.getAddress(true), false)) continue;\n\t\t\t\tif(Logger.shouldLog(Logger.MINOR, this))\n\t\t\t\t\tLogger.minor(this, \"Peer \"+peerList[i].getPeer()+\" thinks we are \"+p);\n\t\t\t\tif(countsByPeer.containsKey(p)) {\n\t\t\t\t\tInteger count = (Integer) countsByPeer.get(p);\n\t\t\t\t\tInteger newCount = new Integer(count.intValue()+1);\n\t\t\t\t\tcountsByPeer.put(p, newCount);\n\t\t\t\t} else {\n\t\t\t\t\tcountsByPeer.put(p, new Integer(1));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(countsByPeer.size() == 1) {\n\t\t\t\tIterator it = countsByPeer.keySet().iterator();\n\t\t\t\tPeer p = (Peer) (it.next());\n\t\t\t\tLogger.minor(this, \"Everyone agrees we are \"+p);\n\t\t\t\tif(!addresses.contains(p)) {\n\t\t\t\t\taddresses.add(p);\n\t\t\t\t}\n\t\t\t} else if(countsByPeer.size() > 1) {\n\t\t\t\tIterator it = countsByPeer.keySet().iterator();\n\t\t\t\t// Take two most popular addresses.\n\t\t\t\tPeer best = null;\n\t\t\t\tPeer secondBest = null;\n\t\t\t\tint bestPopularity = 0;\n\t\t\t\tint secondBestPopularity = 0;\n\t\t\t\twhile(it.hasNext()) {\n\t\t\t\t\tPeer cur = (Peer) (it.next());\n\t\t\t\t\tint curPop = ((Integer) (countsByPeer.get(cur))).intValue();\n\t\t\t\t\tLogger.normal(this, \"Detected peer: \"+cur+\" popularity \"+curPop);\n\t\t\t\t\tif(curPop >= bestPopularity) {\n\t\t\t\t\t\tsecondBestPopularity = bestPopularity;\n\t\t\t\t\t\tbestPopularity = curPop;\n\t\t\t\t\t\tsecondBest = best;\n\t\t\t\t\t\tbest = cur;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(best != null) {\n\t\t\t\t\tif((bestPopularity > 1) || (addrs.length == 0)) {\n \t\t\t\t\t\tif(!addresses.contains(best)) {\n\t\t\t\t\t\t\tLogger.normal(this, \"Adding best peer \"+best+\" (\"+bestPopularity+ ')');\n\t\t\t\t\t\t\taddresses.add(best);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif((secondBest != null) && (secondBestPopularity > 1)) {\n\t\t\t\t\t\t\tif(!addresses.contains(secondBest)) {\n\t\t\t\t\t\t\t\tLogger.normal(this, \"Adding second best peer \"+secondBest+\" (\"+secondBest+ ')');\n\t\t\t\t\t\t\t\taddresses.add(secondBest);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(best.getAddress().equals(secondBest.getAddress()) && bestPopularity == 1) {\n\t\t\t\t\t\t\t\tLogger.error(this, \"Hrrrm, maybe this is a symmetric NAT? Expect trouble connecting!\");\n\t\t\t\t\t\t\t\tSystem.err.println(\"Hrrrm, maybe this is a symmetric NAT? Expect trouble connecting!\");\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tipDetector.setMaybeSymmetric();\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tPeer p = new Peer(best.getFreenetAddress(), crypto.portNumber);\n\t\t\t\t\t\t\t\tif(!addresses.contains(p))\n\t\t\t\t\t\t\t\t\taddresses.add(p);\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlastPeers = (Peer[]) addresses.toArray(new Peer[addresses.size()]);\n\t\treturn lastPeers;\n\t}","commit_id":"d660ecbafefd4368cd53e93698d2a4aa98e7c738","url":"https://github.com/freenet/fred"},{"original_method":"public void onSuccess(OpennetPeerNode pn) {\n\t\tsynchronized(this) {\n\t\t\tsuccessCount++;\n\t\t\tif(peersLRU.contains(pn)) {\n\t\t\t\tpeersLRU.push(pn);\n\t\t\t\tLogger.normal(this, \"Opennet peer \"+pn+\" promoted to top of LRU because of successful request\");\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Success on opennet peer which isn't in the LRU!: \"+pn, new Exception(\"debug\"));\n\t\t\t\t// Re-add it: nasty race condition when we have few peers\n\t\t\t}\n\t\t}\n\t\tif(!wantPeer(pn, false)) // Start at top as it just succeeded\n\t\t\tnode.peers.disconnect(pn, true, false);\n\t}","id":52348,"modified_method":"public void onSuccess(OpennetPeerNode pn) {\n\t\tsynchronized(this) {\n\t\t\tsuccessCount++;\n\t\t\tif(peersLRU.contains(pn)) {\n\t\t\t\tpeersLRU.push(pn);\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Opennet peer \"+pn+\" promoted to top of LRU because of successful request\");\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Success on opennet peer which isn't in the LRU!: \"+pn, new Exception(\"debug\"));\n\t\t\t\t// Re-add it: nasty race condition when we have few peers\n\t\t\t}\n\t\t}\n\t\tif(!wantPeer(pn, false)) // Start at top as it just succeeded\n\t\t\tnode.peers.disconnect(pn, true, false);\n\t}","commit_id":"d660ecbafefd4368cd53e93698d2a4aa98e7c738","url":"https://github.com/freenet/fred"},{"original_method":"private long removeFirstAccordingToPriorities(int fuzz, RandomSource random, ClientRequestSchedulerCore schedCore, ClientRequestSchedulerNonPersistent schedTransient, boolean transientOnly, short maxPrio, ObjectContainer container, ClientContext context, long now){\n\t\tSectoredRandomGrabArray result = null;\n\t\t\n\t\tlong wakeupTime = Long.MAX_VALUE;\n\t\t\n\t\tshort iteration = 0, priority;\n\t\t// we loop to ensure we try every possibilities ( n + 1)\n\t\t//\n\t\t// PRIO will do 0,1,2,3,4,5,6,0\n\t\t// TWEAKED will do rand%6,0,1,2,3,4,5,6\n\t\twhile(iteration++ < RequestStarter.NUMBER_OF_PRIORITY_CLASSES + 1){\n\t\t\tboolean persistent = false;\n\t\t\tpriority = fuzz<0 ? tweakedPrioritySelector[random.nextInt(tweakedPrioritySelector.length)] : prioritySelector[Math.abs(fuzz % prioritySelector.length)];\n\t\t\tif(transientOnly || schedCore == null)\n\t\t\t\tresult = null;\n\t\t\telse {\n\t\t\t\tresult = schedCore.newPriorities[priority];\n\t\t\t\tif(result != null) {\n\t\t\t\t\tlong cooldownTime = context.cooldownTracker.getCachedWakeup(result, true, container, now);\n\t\t\t\t\tif(cooldownTime > 0) {\n\t\t\t\t\t\tif(cooldownTime < wakeupTime) wakeupTime = cooldownTime;\n\t\t\t\t\t\tif(logMINOR) {\n\t\t\t\t\t\t\tif(cooldownTime == Long.MAX_VALUE)\n\t\t\t\t\t\t\t\tLogger.minor(this, \"Priority \"+priority+\" (persistent) is waiting until a request finishes or is empty\");\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tLogger.minor(this, \"Priority \"+priority+\" (persistent) is in cooldown for another \"+(cooldownTime - now)+\" \"+TimeUtil.formatTime(cooldownTime - now));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult = null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontainer.activate(result, 1);\n\t\t\t\t\t\tpersistent = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(result == null) {\n\t\t\t\tresult = schedTransient.newPriorities[priority];\n\t\t\t\tif(result != null) {\n\t\t\t\t\tlong cooldownTime = context.cooldownTracker.getCachedWakeup(result, false, container, now);\n\t\t\t\t\tif(cooldownTime > 0) {\n\t\t\t\t\t\tif(cooldownTime < wakeupTime) wakeupTime = cooldownTime;\n\t\t\t\t\t\tLogger.normal(this, \"Priority \"+priority+\" (transient) is in cooldown for another \"+(cooldownTime - now)+\" \"+TimeUtil.formatTime(cooldownTime - now)+\" : \"+result);\n\t\t\t\t\t\tresult = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(priority > maxPrio) {\n\t\t\t\tfuzz++;\n\t\t\t\tcontinue; // Don't return because first round may be higher with soft scheduling\n\t\t\t}\n\t\t\tif(((result != null) && (!result.isEmpty(persistent ? container : null)))) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"using priority : \"+priority);\n\t\t\t\treturn priority;\n\t\t\t}\n\t\t\t\n\t\t\tif(logMINOR) Logger.minor(this, \"Priority \"+priority+\" is null (fuzz = \"+fuzz+ ')');\n\t\t\tfuzz++;\n\t\t}\n\t\t\n\t\t//FIXME: implement NONE\n\t\treturn wakeupTime;\n\t}","id":52349,"modified_method":"private long removeFirstAccordingToPriorities(int fuzz, RandomSource random, ClientRequestSchedulerCore schedCore, ClientRequestSchedulerNonPersistent schedTransient, boolean transientOnly, short maxPrio, ObjectContainer container, ClientContext context, long now){\n\t\tSectoredRandomGrabArray result = null;\n\t\t\n\t\tlong wakeupTime = Long.MAX_VALUE;\n\t\t\n\t\tshort iteration = 0, priority;\n\t\t// we loop to ensure we try every possibilities ( n + 1)\n\t\t//\n\t\t// PRIO will do 0,1,2,3,4,5,6,0\n\t\t// TWEAKED will do rand%6,0,1,2,3,4,5,6\n\t\twhile(iteration++ < RequestStarter.NUMBER_OF_PRIORITY_CLASSES + 1){\n\t\t\tboolean persistent = false;\n\t\t\tpriority = fuzz<0 ? tweakedPrioritySelector[random.nextInt(tweakedPrioritySelector.length)] : prioritySelector[Math.abs(fuzz % prioritySelector.length)];\n\t\t\tif(transientOnly || schedCore == null)\n\t\t\t\tresult = null;\n\t\t\telse {\n\t\t\t\tresult = schedCore.newPriorities[priority];\n\t\t\t\tif(result != null) {\n\t\t\t\t\tlong cooldownTime = context.cooldownTracker.getCachedWakeup(result, true, container, now);\n\t\t\t\t\tif(cooldownTime > 0) {\n\t\t\t\t\t\tif(cooldownTime < wakeupTime) wakeupTime = cooldownTime;\n\t\t\t\t\t\tif(logMINOR) {\n\t\t\t\t\t\t\tif(cooldownTime == Long.MAX_VALUE)\n\t\t\t\t\t\t\t\tLogger.minor(this, \"Priority \"+priority+\" (persistent) is waiting until a request finishes or is empty\");\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tLogger.minor(this, \"Priority \"+priority+\" (persistent) is in cooldown for another \"+(cooldownTime - now)+\" \"+TimeUtil.formatTime(cooldownTime - now));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult = null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontainer.activate(result, 1);\n\t\t\t\t\t\tpersistent = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(result == null) {\n\t\t\t\tresult = schedTransient.newPriorities[priority];\n\t\t\t\tif(result != null) {\n\t\t\t\t\tlong cooldownTime = context.cooldownTracker.getCachedWakeup(result, false, container, now);\n\t\t\t\t\tif(cooldownTime > 0) {\n\t\t\t\t\t\tif(cooldownTime < wakeupTime) wakeupTime = cooldownTime;\n\t\t\t\t\t\tif(logMINOR) {\n\t\t\t\t\t\t\tif(cooldownTime == Long.MAX_VALUE)\n\t\t\t\t\t\t\t\tLogger.minor(this, \"Priority \"+priority+\" (transient) is waiting until a request finishes or is empty\");\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tLogger.minor(this, \"Priority \"+priority+\" (transient) is in cooldown for another \"+(cooldownTime - now)+\" \"+TimeUtil.formatTime(cooldownTime - now));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(priority > maxPrio) {\n\t\t\t\tfuzz++;\n\t\t\t\tcontinue; // Don't return because first round may be higher with soft scheduling\n\t\t\t}\n\t\t\tif(((result != null) && (!result.isEmpty(persistent ? container : null)))) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"using priority : \"+priority);\n\t\t\t\treturn priority;\n\t\t\t}\n\t\t\t\n\t\t\tif(logMINOR) Logger.minor(this, \"Priority \"+priority+\" is null (fuzz = \"+fuzz+ ')');\n\t\t\tfuzz++;\n\t\t}\n\t\t\n\t\t//FIXME: implement NONE\n\t\treturn wakeupTime;\n\t}","commit_id":"7c8d39a44d0d682bf29455cd173be625214cd53a","url":"https://github.com/freenet/fred"},{"original_method":"public void addPendingKeys(KeyListener listener) {\n\t\tif(listener == null) throw new NullPointerException();\n\t\tsynchronized (this) {\n\t\t\tkeyListeners.add(listener);\n\t\t}\n\t\tLogger.normal(this, \"Added pending keys to \"+this+\" : size now \"+keyListeners.size()+\" : \"+listener);\n\t}","id":52350,"modified_method":"public void addPendingKeys(KeyListener listener) {\n\t\tif(listener == null) throw new NullPointerException();\n\t\tsynchronized (this) {\n\t\t\tkeyListeners.add(listener);\n\t\t}\n\t\tif (logMINOR)\n\t\t\tLogger.minor(this, \"Added pending keys to \"+this+\" : size now \"+keyListeners.size()+\" : \"+listener);\n\t}","commit_id":"6d3ceee36eefead016dcfcf1a36600207fcd196b","url":"https://github.com/freenet/fred"},{"original_method":"public boolean removePendingKeys(KeyListener listener) {\n\t\tboolean ret;\n\t\tsynchronized (this) {\n\t\t\tret = keyListeners.remove(listener);\n\t\t\tlistener.onRemove();\n\t\t}\n\t\tLogger.normal(this, \"Removed pending keys from \"+this+\" : size now \"+keyListeners.size()+\" : \"+listener);\n\t\treturn ret;\n\t}","id":52351,"modified_method":"public boolean removePendingKeys(KeyListener listener) {\n\t\tboolean ret;\n\t\tsynchronized (this) {\n\t\t\tret = keyListeners.remove(listener);\n\t\t\tlistener.onRemove();\n\t\t}\n\t\tif (logMINOR)\n\t\t\tLogger.minor(this, \"Removed pending keys from \"+this+\" : size now \"+keyListeners.size()+\" : \"+listener);\n\t\treturn ret;\n\t}","commit_id":"6d3ceee36eefead016dcfcf1a36600207fcd196b","url":"https://github.com/freenet/fred"},{"original_method":"/**\n\t * Dispatch a message to a waiting filter, or feed it to the\n\t * Dispatcher if none are found.\n\t * @param m The Message to dispatch.\n\t */\n\tpublic void checkFilters(Message m) {\n\t\tlong tStart = System.currentTimeMillis();\n\t\tif(logMINOR) Logger.minor(this, \"checkFilters: \"+m+\" from \"+m.getSource());\n\t\tif ((m.getSource()) instanceof PeerNode)\n\t\t{\n\t\t\t((PeerNode)m.getSource()).addToLocalNodeReceivedMessagesFromStatistic(m);\n\t\t}\n\t\tboolean matched = false;\n\t\tif ((!(m.getSpec().equals(DMT.packetTransmit))) && logMINOR) {\n\t\t\tif ((m.getSpec().equals(DMT.ping) || m.getSpec().equals(DMT.pong)) && Logger.shouldLog(Logger.DEBUG, this)) {\n\t\t\t\tLogger.debug(this, \"\" + (System.currentTimeMillis() % 60000) + ' ' + _sock.getLocalPort() + \" <- \"\n\t\t\t\t\t\t+ m.getSource() + \" : \" + m);\n\t\t\t} else {\n\t\t\t\tLogger.minor(this, \"\" + (System.currentTimeMillis() % 60000) + ' ' + _sock.getLocalPort() + \" <- \"\n\t\t\t\t\t\t+ m.getSource() + \" : \" + m);\n\t\t\t}\n\t\t}\n\t\tsynchronized (_filters) {\n\t\t\tfor (ListIterator i = _filters.listIterator(); i.hasNext();) {\n\t\t\t\tMessageFilter f = (MessageFilter) i.next();\n\t\t\t\tif (f.match(m)) {\n\t\t\t\t\tmatched = true;\n\t\t\t\t\tf.setMessage(m);\n\t\t\t\t\tsynchronized (f) {\n\t\t\t\t\t\ti.remove();\n\t\t\t\t\t\tf.notify();\n\t\t\t\t\t}\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Matched: \"+f);\n\t\t\t\t\tbreak; // Only one match permitted per message\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Feed unmatched messages to the dispatcher\n\t\tif ((!matched) && (_dispatcher != null)) {\n\t\t    try {\n\t\t    \tif(logMINOR) Logger.minor(this, \"Feeding to dispatcher: \"+m);\n\t\t        matched = _dispatcher.handleMessage(m);\n\t\t    } catch (Throwable t) {\n\t\t        Logger.error(this, \"Dispatcher threw \"+t, t);\n\t\t    }\n\t\t}\n\t\t// Keep the last few _unclaimed messages around in case the intended receiver isn't receiving yet\n\t\tif (!matched) {\n\t\t\tif(logMINOR) Logger.minor(this, \"Unclaimed: \"+m);\n\t\t    /** Check filters and then add to _unmatched is ATOMIC\n\t\t     * It has to be atomic, because otherwise we can get a\n\t\t     * race condition that results in timeouts on MFs.\n\t\t     * \n\t\t     * Specifically:\n\t\t     * - Thread A receives packet\n\t\t     * - Thread A checks filters. It doesn't match any.\n\t\t     * - Thread A feeds to Dispatcher.\n\t\t     * - Thread B creates filter.\n\t\t     * - Thread B checks _unmatched.\n\t\t     * - Thread B adds filter.\n\t\t     * - Thread B sleeps.\n\t\t     * - Thread A returns from Dispatcher. Which didn't match.\n\t\t     * - Thread A adds to _unmatched.\n\t\t     * \n\t\t     * OOPS!\n\t\t     * The only way to fix this is to have checking the\n\t\t     * filters and unmatched be a single atomic operation.\n\t\t     * Another race is possible if we merely recheck the\n\t\t     * filters after we return from dispatcher, for example.\n\t\t     */\n\t\t\tsynchronized (_filters) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Rechecking filters and adding message\");\n\t\t\t\tfor (ListIterator i = _filters.listIterator(); i.hasNext();) {\n\t\t\t\t\tMessageFilter f = (MessageFilter) i.next();\n\t\t\t\t\tif (f.match(m)) {\n\t\t\t\t\t\tmatched = true;\n\t\t\t\t\t\tf.setMessage(m);\n\t\t\t\t\t\tsynchronized (f) {\n\t\t\t\t\t\t\ti.remove();\n\t\t\t\t\t\t\tf.notify();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Matched: \"+f);\n\t\t\t\t\t\tbreak; // Only one match permitted per message\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!matched) {\n\t\t\t\t    while (_unclaimed.size() > MAX_UNMATCHED_FIFO_SIZE) {\n\t\t\t\t        Message removed = (Message)_unclaimed.removeFirst();\n\t\t\t\t        long messageLifeTime = System.currentTimeMillis() - removed.localInstantiationTime;\n\t\t\t\t        if ((removed.getSource()) instanceof PeerNode) {\n\t\t\t\t            Logger.normal(this, \"Dropping unclaimed from \"+removed.getSource().getPeer()+\", lived \"+TimeUtil.formatTime(messageLifeTime, 2, true)+\" (quantity)\"+\": \"+removed);\n\t\t\t\t        } else {\n\t\t\t\t            Logger.normal(this, \"Dropping unclaimed, lived \"+TimeUtil.formatTime(messageLifeTime, 2, true)+\" (quantity)\"+\": \"+removed);\n\t\t\t\t        }\n\t\t\t\t    }\n\t\t\t\t    _unclaimed.addLast(m);\n\t\t\t\t    if(logMINOR) Logger.minor(this, \"Done\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlong tEnd = System.currentTimeMillis();\n\t\tif(tEnd - tStart > 50) {\n\t\t\tif(tEnd - tStart > 500)\n\t\t\t\tLogger.error(this, \"checkFilters took \"+(tEnd-tStart)+\"ms with unclaimedFIFOSize of \"+_unclaimed.size()+\" for matched: \"+matched);\n\t\t\telse\n\t\t\t\tLogger.normal(this, \"checkFilters took \"+(tEnd-tStart)+\"ms with unclaimedFIFOSize of \"+_unclaimed.size()+\" for matched: \"+matched);\n\t\t}\n\t}","id":52352,"modified_method":"/**\n\t * Dispatch a message to a waiting filter, or feed it to the\n\t * Dispatcher if none are found.\n\t * @param m The Message to dispatch.\n\t */\n\tpublic void checkFilters(Message m) {\n\t\tlong tStart = System.currentTimeMillis();\n\t\tif(logMINOR) Logger.minor(this, \"checkFilters: \"+m+\" from \"+m.getSource());\n\t\tif ((m.getSource()) instanceof PeerNode)\n\t\t{\n\t\t\t((PeerNode)m.getSource()).addToLocalNodeReceivedMessagesFromStatistic(m);\n\t\t}\n\t\tboolean matched = false;\n\t\tif ((!(m.getSpec().equals(DMT.packetTransmit))) && logMINOR) {\n\t\t\tif ((m.getSpec().equals(DMT.ping) || m.getSpec().equals(DMT.pong)) && Logger.shouldLog(Logger.DEBUG, this)) {\n\t\t\t\tLogger.debug(this, \"\" + (System.currentTimeMillis() % 60000) + ' ' + _sock.getLocalPort() + \" <- \"\n\t\t\t\t\t\t+ m.getSource() + \" : \" + m);\n\t\t\t} else {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"\" + (System.currentTimeMillis() % 60000) + ' ' + _sock.getLocalPort() + \" <- \"\n\t\t\t\t\t\t+ m.getSource() + \" : \" + m);\n\t\t\t}\n\t\t}\n\t\tsynchronized (_filters) {\n\t\t\tfor (ListIterator i = _filters.listIterator(); i.hasNext();) {\n\t\t\t\tMessageFilter f = (MessageFilter) i.next();\n\t\t\t\tif (f.match(m)) {\n\t\t\t\t\tmatched = true;\n\t\t\t\t\tf.setMessage(m);\n\t\t\t\t\tsynchronized (f) {\n\t\t\t\t\t\ti.remove();\n\t\t\t\t\t\tf.notify();\n\t\t\t\t\t}\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Matched: \"+f);\n\t\t\t\t\tbreak; // Only one match permitted per message\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Feed unmatched messages to the dispatcher\n\t\tif ((!matched) && (_dispatcher != null)) {\n\t\t    try {\n\t\t    \tif(logMINOR) Logger.minor(this, \"Feeding to dispatcher: \"+m);\n\t\t        matched = _dispatcher.handleMessage(m);\n\t\t    } catch (Throwable t) {\n\t\t        Logger.error(this, \"Dispatcher threw \"+t, t);\n\t\t    }\n\t\t}\n\t\t// Keep the last few _unclaimed messages around in case the intended receiver isn't receiving yet\n\t\tif (!matched) {\n\t\t\tif(logMINOR) Logger.minor(this, \"Unclaimed: \"+m);\n\t\t    /** Check filters and then add to _unmatched is ATOMIC\n\t\t     * It has to be atomic, because otherwise we can get a\n\t\t     * race condition that results in timeouts on MFs.\n\t\t     * \n\t\t     * Specifically:\n\t\t     * - Thread A receives packet\n\t\t     * - Thread A checks filters. It doesn't match any.\n\t\t     * - Thread A feeds to Dispatcher.\n\t\t     * - Thread B creates filter.\n\t\t     * - Thread B checks _unmatched.\n\t\t     * - Thread B adds filter.\n\t\t     * - Thread B sleeps.\n\t\t     * - Thread A returns from Dispatcher. Which didn't match.\n\t\t     * - Thread A adds to _unmatched.\n\t\t     * \n\t\t     * OOPS!\n\t\t     * The only way to fix this is to have checking the\n\t\t     * filters and unmatched be a single atomic operation.\n\t\t     * Another race is possible if we merely recheck the\n\t\t     * filters after we return from dispatcher, for example.\n\t\t     */\n\t\t\tsynchronized (_filters) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Rechecking filters and adding message\");\n\t\t\t\tfor (ListIterator i = _filters.listIterator(); i.hasNext();) {\n\t\t\t\t\tMessageFilter f = (MessageFilter) i.next();\n\t\t\t\t\tif (f.match(m)) {\n\t\t\t\t\t\tmatched = true;\n\t\t\t\t\t\tf.setMessage(m);\n\t\t\t\t\t\tsynchronized (f) {\n\t\t\t\t\t\t\ti.remove();\n\t\t\t\t\t\t\tf.notify();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Matched: \"+f);\n\t\t\t\t\t\tbreak; // Only one match permitted per message\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!matched) {\n\t\t\t\t    while (_unclaimed.size() > MAX_UNMATCHED_FIFO_SIZE) {\n\t\t\t\t        Message removed = (Message)_unclaimed.removeFirst();\n\t\t\t\t        long messageLifeTime = System.currentTimeMillis() - removed.localInstantiationTime;\n\t\t\t\t        if ((removed.getSource()) instanceof PeerNode) {\n\t\t\t\t            Logger.normal(this, \"Dropping unclaimed from \"+removed.getSource().getPeer()+\", lived \"+TimeUtil.formatTime(messageLifeTime, 2, true)+\" (quantity)\"+\": \"+removed);\n\t\t\t\t        } else {\n\t\t\t\t            Logger.normal(this, \"Dropping unclaimed, lived \"+TimeUtil.formatTime(messageLifeTime, 2, true)+\" (quantity)\"+\": \"+removed);\n\t\t\t\t        }\n\t\t\t\t    }\n\t\t\t\t    _unclaimed.addLast(m);\n\t\t\t\t    if(logMINOR) Logger.minor(this, \"Done\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlong tEnd = System.currentTimeMillis();\n\t\tif(tEnd - tStart > 50) {\n\t\t\tif(tEnd - tStart > 3000)\n\t\t\t\tLogger.error(this, \"checkFilters took \"+(tEnd-tStart)+\"ms with unclaimedFIFOSize of \"+_unclaimed.size()+\" for matched: \"+matched);\n\t\t\telse\n\t\t\t\tif(logMINOR) Logger.minor(this, \"checkFilters took \"+(tEnd-tStart)+\"ms with unclaimedFIFOSize of \"+_unclaimed.size()+\" for matched: \"+matched);\n\t\t}\n\t}","commit_id":"cb01f312992779242a2387636e6845f76335ec7e","url":"https://github.com/freenet/fred"},{"original_method":"public Message waitFor(MessageFilter filter, ByteCounter ctr) throws DisconnectedException {\n\t\tboolean logDEBUG = Logger.shouldLog(Logger.DEBUG, this);\n\t\tif(logDEBUG) Logger.debug(this, \"Waiting for \"+filter);\n\t\tlong startTime = System.currentTimeMillis();\n\t\tMessage ret = null;\n\t\tif((lowLevelFilter != null) && (filter._source != null) && \n\t\t        filter.matchesDroppedConnection() &&\n\t\t        lowLevelFilter.isDisconnected(filter._source))\n\t\t    throw new DisconnectedException();\n\t\t// Check to see whether the filter matches any of the recently _unclaimed messages\n\t\t// Drop any _unclaimed messages that the filter doesn't match that are also older than MAX_UNCLAIMED_FIFO_ITEM_LIFETIME\n\t\tlong now = System.currentTimeMillis();\n\t\tlong messageDropTime = now - MAX_UNCLAIMED_FIFO_ITEM_LIFETIME;\n\t\tlong messageLifeTime = 0;\n\t\tsynchronized (_filters) {\n\t\t\tif(logMINOR) Logger.minor(this, \"Checking _unclaimed\");\n\t\t\tfor (ListIterator i = _unclaimed.listIterator(); i.hasNext();) {\n\t\t\t\tMessage m = (Message) i.next();\n\t\t\t\tif (filter.match(m)) {\n\t\t\t\t\ti.remove();\n\t\t\t\t\tret = m;\n\t\t\t\t\tif(logMINOR) Logger.debug(this, \"Matching from _unclaimed\");\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (m.localInstantiationTime < messageDropTime) {\n\t\t\t\t\ti.remove();\n\t\t\t\t\tmessageLifeTime = now - m.localInstantiationTime;\n\t\t\t\t\tif ((m.getSource()) instanceof PeerNode) {\n\t\t\t\t\t\tLogger.normal(this, \"Dropping unclaimed from \"+m.getSource().getPeer()+\", lived \"+TimeUtil.formatTime(messageLifeTime, 2, true)+\" (age)\"+\": \"+m);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tLogger.normal(this, \"Dropping unclaimed, lived \"+TimeUtil.formatTime(messageLifeTime, 2, true)+\" (age)\"+\": \"+m);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (ret == null) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Not in _unclaimed\");\n\t\t\t    // Insert filter into filter list in order of timeout\n\t\t\t\tListIterator i = _filters.listIterator();\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (!i.hasNext()) {\n\t\t\t\t\t\ti.add(filter);\n\t\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Added at end\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tMessageFilter mf = (MessageFilter) i.next();\n\t\t\t\t\tif (mf.getTimeout() > filter.getTimeout()) {\n\t\t\t\t\t\ti.previous();\n\t\t\t\t\t\ti.add(filter);\n\t\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Added in middle - mf timeout=\"+mf.getTimeout()+\" - my timeout=\"+filter.getTimeout());\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlong tEnd = System.currentTimeMillis();\n\t\tif(tEnd - now > 50) {\n\t\t\tif(tEnd - now > 500)\n\t\t\t\tLogger.error(this, \"waitFor _unclaimed iteration took \"+(tEnd-now)+\"ms with unclaimedFIFOSize of \"+_unclaimed.size()+\" for ret of \"+ret);\n\t\t\telse\n\t\t\t\tLogger.normal(this, \"waitFor _unclaimed iteration took \"+(tEnd-now)+\"ms with unclaimedFIFOSize of \"+_unclaimed.size()+\" for ret of \"+ret);\n\t\t}\n\t\t// Unlock to wait on filter\n\t\t// Waiting on the filter won't release the outer lock\n\t\t// So we have to release it here\n\t\tif(ret == null) {\t\n\t\t\tif(logMINOR) Logger.minor(this, \"Waiting...\");\n\t\t\tsynchronized (filter) {\n\t\t\t\ttry {\n\t\t\t\t\t// Precaution against filter getting matched between being added to _filters and\n\t\t\t\t\t// here - bug discovered by Mason\n\t\t\t\t    boolean fmatched = false;\n\t\t\t\t    while(!(fmatched = (filter.matched() || (filter.droppedConnection() != null)))) {\n\t\t\t\t        long wait = filter.getTimeout()-System.currentTimeMillis();\n\t\t\t\t        if(wait > 0)\n\t\t\t\t            filter.wait(wait);\n\t\t\t\t        else break;\n\t\t\t\t\t}\n\t\t\t\t    if(filter.droppedConnection() != null)\n\t\t\t\t        throw new DisconnectedException();\n\t\t\t\t    if(logMINOR) Logger.minor(this, \"Matched: \"+fmatched);\n\t\t\t\t} catch (InterruptedException e) {\n\t\t\t\t}\n\t\t\t\tret = filter.getMessage();\n\t\t\t\tfilter.clearMatched();\n\t\t\t}\n\t\t\tif(logDEBUG) Logger.debug(this, \"Returning \"+ret+\" from \"+filter);\n\t\t}\n\t\t// Probably get rid...\n//\t\tif (Dijjer.getDijjer().getDumpMessageWaitTimes() != null) {\n//\t\t\tDijjer.getDijjer().getDumpMessageWaitTimes().println(filter.toString() + \"\\t\" + filter.getInitialTimeout() + \"\\t\"\n//\t\t\t\t\t+ (System.currentTimeMillis() - startTime));\n//\t\t\tDijjer.getDijjer().getDumpMessageWaitTimes().flush();\n//\t\t}\n\t\tlong endTime = System.currentTimeMillis();\n\t\tif(logDEBUG) Logger.debug(this, \"Returning in \"+(endTime-startTime)+\"ms\");\n\t\tif((ctr != null) && (ret != null))\n\t\t\tctr.receivedBytes(ret._receivedByteCount);\n\t\treturn ret;\n\t}","id":52353,"modified_method":"public Message waitFor(MessageFilter filter, ByteCounter ctr) throws DisconnectedException {\n\t\tboolean logDEBUG = Logger.shouldLog(Logger.DEBUG, this);\n\t\tif(logDEBUG) Logger.debug(this, \"Waiting for \"+filter);\n\t\tlong startTime = System.currentTimeMillis();\n\t\tMessage ret = null;\n\t\tif((lowLevelFilter != null) && (filter._source != null) && \n\t\t        filter.matchesDroppedConnection() &&\n\t\t        lowLevelFilter.isDisconnected(filter._source))\n\t\t    throw new DisconnectedException();\n\t\t// Check to see whether the filter matches any of the recently _unclaimed messages\n\t\t// Drop any _unclaimed messages that the filter doesn't match that are also older than MAX_UNCLAIMED_FIFO_ITEM_LIFETIME\n\t\tlong now = System.currentTimeMillis();\n\t\tlong messageDropTime = now - MAX_UNCLAIMED_FIFO_ITEM_LIFETIME;\n\t\tlong messageLifeTime = 0;\n\t\tsynchronized (_filters) {\n\t\t\tif(logMINOR) Logger.minor(this, \"Checking _unclaimed\");\n\t\t\tfor (ListIterator i = _unclaimed.listIterator(); i.hasNext();) {\n\t\t\t\tMessage m = (Message) i.next();\n\t\t\t\tif (filter.match(m)) {\n\t\t\t\t\ti.remove();\n\t\t\t\t\tret = m;\n\t\t\t\t\tif(logMINOR) Logger.debug(this, \"Matching from _unclaimed\");\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (m.localInstantiationTime < messageDropTime) {\n\t\t\t\t\ti.remove();\n\t\t\t\t\tmessageLifeTime = now - m.localInstantiationTime;\n\t\t\t\t\tif ((m.getSource()) instanceof PeerNode) {\n\t\t\t\t\t\tLogger.normal(this, \"Dropping unclaimed from \"+m.getSource().getPeer()+\", lived \"+TimeUtil.formatTime(messageLifeTime, 2, true)+\" (age)\"+\": \"+m);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tLogger.normal(this, \"Dropping unclaimed, lived \"+TimeUtil.formatTime(messageLifeTime, 2, true)+\" (age)\"+\": \"+m);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (ret == null) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Not in _unclaimed\");\n\t\t\t    // Insert filter into filter list in order of timeout\n\t\t\t\tListIterator i = _filters.listIterator();\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (!i.hasNext()) {\n\t\t\t\t\t\ti.add(filter);\n\t\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Added at end\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tMessageFilter mf = (MessageFilter) i.next();\n\t\t\t\t\tif (mf.getTimeout() > filter.getTimeout()) {\n\t\t\t\t\t\ti.previous();\n\t\t\t\t\t\ti.add(filter);\n\t\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Added in middle - mf timeout=\"+mf.getTimeout()+\" - my timeout=\"+filter.getTimeout());\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlong tEnd = System.currentTimeMillis();\n\t\tif(tEnd - now > 50) {\n\t\t\tif(tEnd - now > 3000)\n\t\t\t\tLogger.error(this, \"waitFor _unclaimed iteration took \"+(tEnd-now)+\"ms with unclaimedFIFOSize of \"+_unclaimed.size()+\" for ret of \"+ret);\n\t\t\telse\n\t\t\t\tif(logMINOR) Logger.minor(this, \"waitFor _unclaimed iteration took \"+(tEnd-now)+\"ms with unclaimedFIFOSize of \"+_unclaimed.size()+\" for ret of \"+ret);\n\t\t}\n\t\t// Unlock to wait on filter\n\t\t// Waiting on the filter won't release the outer lock\n\t\t// So we have to release it here\n\t\tif(ret == null) {\t\n\t\t\tif(logMINOR) Logger.minor(this, \"Waiting...\");\n\t\t\tsynchronized (filter) {\n\t\t\t\ttry {\n\t\t\t\t\t// Precaution against filter getting matched between being added to _filters and\n\t\t\t\t\t// here - bug discovered by Mason\n\t\t\t\t    boolean fmatched = false;\n\t\t\t\t    while(!(fmatched = (filter.matched() || (filter.droppedConnection() != null)))) {\n\t\t\t\t        long wait = filter.getTimeout()-System.currentTimeMillis();\n\t\t\t\t        if(wait > 0)\n\t\t\t\t            filter.wait(wait);\n\t\t\t\t        else break;\n\t\t\t\t\t}\n\t\t\t\t    if(filter.droppedConnection() != null)\n\t\t\t\t        throw new DisconnectedException();\n\t\t\t\t    if(logMINOR) Logger.minor(this, \"Matched: \"+fmatched);\n\t\t\t\t} catch (InterruptedException e) {\n\t\t\t\t}\n\t\t\t\tret = filter.getMessage();\n\t\t\t\tfilter.clearMatched();\n\t\t\t}\n\t\t\tif(logDEBUG) Logger.debug(this, \"Returning \"+ret+\" from \"+filter);\n\t\t}\n\t\t// Probably get rid...\n//\t\tif (Dijjer.getDijjer().getDumpMessageWaitTimes() != null) {\n//\t\t\tDijjer.getDijjer().getDumpMessageWaitTimes().println(filter.toString() + \"\\t\" + filter.getInitialTimeout() + \"\\t\"\n//\t\t\t\t\t+ (System.currentTimeMillis() - startTime));\n//\t\t\tDijjer.getDijjer().getDumpMessageWaitTimes().flush();\n//\t\t}\n\t\tlong endTime = System.currentTimeMillis();\n\t\tif(logDEBUG) Logger.debug(this, \"Returning in \"+(endTime-startTime)+\"ms\");\n\t\tif((ctr != null) && (ret != null))\n\t\t\tctr.receivedBytes(ret._receivedByteCount);\n\t\treturn ret;\n\t}","commit_id":"cb01f312992779242a2387636e6845f76335ec7e","url":"https://github.com/freenet/fred"},{"original_method":"private void removeTimedOutFilters() {\n\t\tlong tStart = System.currentTimeMillis();\n\t\tsynchronized (_filters) {\n\t\t\tfor (ListIterator i = _filters.listIterator(); i.hasNext();) {\n\t\t\t\tMessageFilter f = (MessageFilter) i.next();\n\t\t\t\tif (f.timedOut()) {\n\t\t\t\t\tf.setMessage(null);\n\t\t\t\t\tsynchronized (f) {\n\t\t\t\t\t\ti.remove();\n\t\t\t\t\t\tf.notify();\n\t\t\t\t\t}\n\t\t\t\t} else { // Because _filters are in order of timeout, we\n\t\t\t\t\t// can abort the iteration as soon as we find one that\n\t\t\t\t\t// doesn't timeout\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlong tEnd = System.currentTimeMillis();\n\t\tif(tEnd - tStart > 50) {\n\t\t\tif(tEnd - tStart > 500)\n\t\t\t\tLogger.error(this, \"removeTimedOutFilters took \"+(tEnd-tStart)+\"ms\");\n\t\t\telse\n\t\t\t\tLogger.normal(this, \"removeTimedOutFilters took \"+(tEnd-tStart)+\"ms\");\n\t\t}\n\t}","id":52354,"modified_method":"private void removeTimedOutFilters() {\n\t\tlong tStart = System.currentTimeMillis();\n\t\tsynchronized (_filters) {\n\t\t\tfor (ListIterator i = _filters.listIterator(); i.hasNext();) {\n\t\t\t\tMessageFilter f = (MessageFilter) i.next();\n\t\t\t\tif (f.timedOut()) {\n\t\t\t\t\tf.setMessage(null);\n\t\t\t\t\tsynchronized (f) {\n\t\t\t\t\t\ti.remove();\n\t\t\t\t\t\tf.notify();\n\t\t\t\t\t}\n\t\t\t\t} else { // Because _filters are in order of timeout, we\n\t\t\t\t\t// can abort the iteration as soon as we find one that\n\t\t\t\t\t// doesn't timeout\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlong tEnd = System.currentTimeMillis();\n\t\tif(tEnd - tStart > 50) {\n\t\t\tif(tEnd - tStart > 3000)\n\t\t\t\tLogger.error(this, \"removeTimedOutFilters took \"+(tEnd-tStart)+\"ms\");\n\t\t\telse\n\t\t\t\tif(logMINOR) Logger.minor(this, \"removeTimedOutFilters took \"+(tEnd-tStart)+\"ms\");\n\t\t}\n\t}","commit_id":"cb01f312992779242a2387636e6845f76335ec7e","url":"https://github.com/freenet/fred"},{"original_method":"private void realRun(DatagramPacket packet) {\n\t\t// Single receiving thread\n\t\tboolean gotPacket = getPacket(packet);\n\t\t// Check for timedout _filters\n\t\tremoveTimedOutFilters();\n\t\tif (gotPacket) {\n\t\t\tlong startTime = System.currentTimeMillis();\n\t\t\tPeer peer = new Peer(packet.getAddress(), packet.getPort());\n\t\t\tlong endTime = System.currentTimeMillis();\n\t\t\tif(endTime - startTime > 50) {\n\t\t\t\tif(endTime-startTime > 500)\n\t\t\t\t\tLogger.error(this, \"packet creation took \"+(endTime-startTime)+\"ms\");\n\t\t\t\telse\n\t\t\t\t\tLogger.normal(this, \"packet creation took \"+(endTime-startTime)+\"ms\");\n\t\t\t}\n\t\t\tbyte[] data = packet.getData();\n\t\t\tint offset = packet.getOffset();\n\t\t\tint length = packet.getLength();\n\t\t\tif (lowLevelFilter != null) {\n\t\t\t\ttry {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Processing packet of length \"+length+\" from \"+peer);\n\t\t\t\t\tstartTime = System.currentTimeMillis();\n\t\t\t\t\tlowLevelFilter.process(data, offset, length, peer);\n\t\t\t\t\tendTime = System.currentTimeMillis();\n\t\t\t\t\tif(endTime - startTime > 50) {\n\t\t\t\t\t\tif(endTime-startTime > 500)\n\t\t\t\t\t\t\tLogger.error(this, \"processing packet took \"+(endTime-startTime)+\"ms\");\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tLogger.normal(this, \"processing packet took \"+(endTime-startTime)+\"ms\");\n\t\t\t\t\t}\n\t\t\t\t\tif(logMINOR) Logger.minor(this,\n\t\t\t\t\t\t\t\"Successfully handled packet length \" + length);\n\t\t\t\t} catch (Throwable t) {\n\t\t\t\t\tLogger.error(this, \"Caught \" + t + \" from \"\n\t\t\t\t\t\t\t+ lowLevelFilter, t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Create a bogus context since no filter\n\t\t\t\tMessage m = decodeSingleMessage(data, offset, length,\n\t\t\t\t\t\tnew DummyPeerContext(peer), 0);\n\t\t\t\tif (m != null) {\n\t\t\t\t\tcheckFilters(m);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if(logMINOR) Logger.minor(this, \"Null packet\");\n\t}","id":52355,"modified_method":"private void realRun(DatagramPacket packet) {\n\t\t// Single receiving thread\n\t\tboolean gotPacket = getPacket(packet);\n\t\t// Check for timedout _filters\n\t\tremoveTimedOutFilters();\n\t\tif (gotPacket) {\n\t\t\tlong startTime = System.currentTimeMillis();\n\t\t\tPeer peer = new Peer(packet.getAddress(), packet.getPort());\n\t\t\tlong endTime = System.currentTimeMillis();\n\t\t\tif(endTime - startTime > 50) {\n\t\t\t\tif(endTime-startTime > 3000)\n\t\t\t\t\tLogger.error(this, \"packet creation took \"+(endTime-startTime)+\"ms\");\n\t\t\t\telse\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"packet creation took \"+(endTime-startTime)+\"ms\");\n\t\t\t}\n\t\t\tbyte[] data = packet.getData();\n\t\t\tint offset = packet.getOffset();\n\t\t\tint length = packet.getLength();\n\t\t\tif (lowLevelFilter != null) {\n\t\t\t\ttry {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Processing packet of length \"+length+\" from \"+peer);\n\t\t\t\t\tstartTime = System.currentTimeMillis();\n\t\t\t\t\tlowLevelFilter.process(data, offset, length, peer);\n\t\t\t\t\tendTime = System.currentTimeMillis();\n\t\t\t\t\tif(endTime - startTime > 50) {\n\t\t\t\t\t\tif(endTime-startTime > 3000)\n\t\t\t\t\t\t\tLogger.error(this, \"processing packet took \"+(endTime-startTime)+\"ms\");\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tif(logMINOR) Logger.minor(this, \"processing packet took \"+(endTime-startTime)+\"ms\");\n\t\t\t\t\t}\n\t\t\t\t\tif(logMINOR) Logger.minor(this,\n\t\t\t\t\t\t\t\"Successfully handled packet length \" + length);\n\t\t\t\t} catch (Throwable t) {\n\t\t\t\t\tLogger.error(this, \"Caught \" + t + \" from \"\n\t\t\t\t\t\t\t+ lowLevelFilter, t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Create a bogus context since no filter\n\t\t\t\tMessage m = decodeSingleMessage(data, offset, length,\n\t\t\t\t\t\tnew DummyPeerContext(peer), 0);\n\t\t\t\tif (m != null) {\n\t\t\t\t\tcheckFilters(m);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if(logMINOR) Logger.minor(this, \"Null packet\");\n\t}","commit_id":"cb01f312992779242a2387636e6845f76335ec7e","url":"https://github.com/freenet/fred"},{"original_method":"private long removeFirstAccordingToPriorities(int fuzz, RandomSource random, ClientRequestSchedulerCore schedCore, ClientRequestSchedulerNonPersistent schedTransient, boolean transientOnly, short maxPrio, ObjectContainer container, ClientContext context, long now){\n\t\tSectoredRandomGrabArray result = null;\n\t\t\n\t\tlong wakeupTime = Long.MAX_VALUE;\n\t\t\n\t\tshort iteration = 0, priority;\n\t\t// we loop to ensure we try every possibilities ( n + 1)\n\t\t//\n\t\t// PRIO will do 0,1,2,3,4,5,6,0\n\t\t// TWEAKED will do rand%6,0,1,2,3,4,5,6\n\t\twhile(iteration++ < RequestStarter.NUMBER_OF_PRIORITY_CLASSES + 1){\n\t\t\tboolean persistent = false;\n\t\t\tpriority = fuzz<0 ? tweakedPrioritySelector[random.nextInt(tweakedPrioritySelector.length)] : prioritySelector[Math.abs(fuzz % prioritySelector.length)];\n\t\t\tif(transientOnly || schedCore == null)\n\t\t\t\tresult = null;\n\t\t\telse {\n\t\t\t\tresult = schedCore.newPriorities[priority];\n\t\t\t\tif(result != null) {\n\t\t\t\t\tlong cooldownTime = context.cooldownTracker.getCachedWakeup(result, true, container, now);\n\t\t\t\t\tif(cooldownTime > 0) {\n\t\t\t\t\t\tif(cooldownTime < wakeupTime) wakeupTime = cooldownTime;\n\t\t\t\t\t\tLogger.normal(this, \"Priority \"+priority+\" (persistent) is in cooldown for another \"+(cooldownTime - now)+\" \"+TimeUtil.formatTime(cooldownTime - now));\n\t\t\t\t\t\tresult = null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontainer.activate(result, 1);\n\t\t\t\t\t\tpersistent = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(result == null) {\n\t\t\t\tresult = schedTransient.newPriorities[priority];\n\t\t\t\tif(result != null) {\n\t\t\t\t\tlong cooldownTime = context.cooldownTracker.getCachedWakeup(result, false, container, now);\n\t\t\t\t\tif(cooldownTime > 0) {\n\t\t\t\t\t\tif(cooldownTime < wakeupTime) wakeupTime = cooldownTime;\n\t\t\t\t\t\tLogger.normal(this, \"Priority \"+priority+\" (transient) is in cooldown for another \"+(cooldownTime - now)+\" \"+TimeUtil.formatTime(cooldownTime - now)+\" : \"+result);\n\t\t\t\t\t\tresult = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(priority > maxPrio) {\n\t\t\t\tfuzz++;\n\t\t\t\tcontinue; // Don't return because first round may be higher with soft scheduling\n\t\t\t}\n\t\t\tif(((result != null) && (!result.isEmpty(persistent ? container : null)))) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"using priority : \"+priority);\n\t\t\t\treturn priority;\n\t\t\t}\n\t\t\t\n\t\t\tif(logMINOR) Logger.minor(this, \"Priority \"+priority+\" is null (fuzz = \"+fuzz+ ')');\n\t\t\tfuzz++;\n\t\t}\n\t\t\n\t\t//FIXME: implement NONE\n\t\treturn wakeupTime;\n\t}","id":52356,"modified_method":"private long removeFirstAccordingToPriorities(int fuzz, RandomSource random, ClientRequestSchedulerCore schedCore, ClientRequestSchedulerNonPersistent schedTransient, boolean transientOnly, short maxPrio, ObjectContainer container, ClientContext context, long now){\n\t\tSectoredRandomGrabArray result = null;\n\t\t\n\t\tlong wakeupTime = Long.MAX_VALUE;\n\t\t\n\t\tshort iteration = 0, priority;\n\t\t// we loop to ensure we try every possibilities ( n + 1)\n\t\t//\n\t\t// PRIO will do 0,1,2,3,4,5,6,0\n\t\t// TWEAKED will do rand%6,0,1,2,3,4,5,6\n\t\twhile(iteration++ < RequestStarter.NUMBER_OF_PRIORITY_CLASSES + 1){\n\t\t\tboolean persistent = false;\n\t\t\tpriority = fuzz<0 ? tweakedPrioritySelector[random.nextInt(tweakedPrioritySelector.length)] : prioritySelector[Math.abs(fuzz % prioritySelector.length)];\n\t\t\tif(transientOnly || schedCore == null)\n\t\t\t\tresult = null;\n\t\t\telse {\n\t\t\t\tresult = schedCore.newPriorities[priority];\n\t\t\t\tif(result != null) {\n\t\t\t\t\tlong cooldownTime = context.cooldownTracker.getCachedWakeup(result, true, container, now);\n\t\t\t\t\tif(cooldownTime > 0) {\n\t\t\t\t\t\tif(cooldownTime < wakeupTime) wakeupTime = cooldownTime;\n\t\t\t\t\t\tif(logMINOR)\n\t\t\t\t\t\t\tLogger.minor(this, \"Priority \"+priority+\" (persistent) is in cooldown for another \"+(cooldownTime - now)+\" \"+TimeUtil.formatTime(cooldownTime - now));\n\t\t\t\t\t\tresult = null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontainer.activate(result, 1);\n\t\t\t\t\t\tpersistent = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(result == null) {\n\t\t\t\tresult = schedTransient.newPriorities[priority];\n\t\t\t\tif(result != null) {\n\t\t\t\t\tlong cooldownTime = context.cooldownTracker.getCachedWakeup(result, false, container, now);\n\t\t\t\t\tif(cooldownTime > 0) {\n\t\t\t\t\t\tif(cooldownTime < wakeupTime) wakeupTime = cooldownTime;\n\t\t\t\t\t\tLogger.normal(this, \"Priority \"+priority+\" (transient) is in cooldown for another \"+(cooldownTime - now)+\" \"+TimeUtil.formatTime(cooldownTime - now)+\" : \"+result);\n\t\t\t\t\t\tresult = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(priority > maxPrio) {\n\t\t\t\tfuzz++;\n\t\t\t\tcontinue; // Don't return because first round may be higher with soft scheduling\n\t\t\t}\n\t\t\tif(((result != null) && (!result.isEmpty(persistent ? container : null)))) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"using priority : \"+priority);\n\t\t\t\treturn priority;\n\t\t\t}\n\t\t\t\n\t\t\tif(logMINOR) Logger.minor(this, \"Priority \"+priority+\" is null (fuzz = \"+fuzz+ ')');\n\t\t\tfuzz++;\n\t\t}\n\t\t\n\t\t//FIXME: implement NONE\n\t\treturn wakeupTime;\n\t}","commit_id":"757573d42d9b9a34b3ecded786d7d503552b9a7e","url":"https://github.com/freenet/fred"},{"original_method":"protected void finalize() {\n\t\t\tif (!hasBeenFreed) {\n\t\t\t\tLogger.normal(this, \"TempBucket not freed, size=\" + size() + \", isRAMBucket=\" + isRAMBucket());\n\t\t\t\tfree();\n\t\t\t}\n\t\t}","id":52357,"modified_method":"protected void finalize() {\n\t\t\tif (!hasBeenFreed) {\n\t\t\t\tif (logMINOR)\n\t\t\t\t\tLogger.minor(this, \"TempBucket not freed, size=\" + size() + \", isRAMBucket=\" + isRAMBucket());\n\t\t\t\tfree();\n\t\t\t}\n\t\t}","commit_id":"cf2c33adb7a11d42c5b16690b4d8fd9d511c6ee2","url":"https://github.com/freenet/fred"},{"original_method":"/**\n\t * Core of the IP detection algorithm.\n\t * @param addresses\n\t * @param addedValidIP\n\t * @return\n\t */\n\tprivate boolean innerDetect(Vector addresses) {\n\t\tboolean addedValidIP = false;\n\t\tInetAddress[] detectedAddrs = ipDetector.getAddress();\n\t\tassert(detectedAddrs != null);\n\t\tsynchronized(this) {\n\t\t\thasDetectedIAD = true;\n\t\t}\n\t\tfor(int i=0;i<detectedAddrs.length;i++) {\n\t\t\tFreenetInetAddress addr = new FreenetInetAddress(detectedAddrs[i]);\n\t\t\tif(!addresses.contains(addr)) {\n\t\t\t\tLogger.normal(this, \"Detected IP address: \"+addr);\n\t\t\t\taddresses.add(addr);\n\t\t\t\tif(addr.isRealInternetAddress(false, false))\n\t\t\t\t\taddedValidIP = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif((pluginDetectedIPs != null) && (pluginDetectedIPs.length > 0)) {\n\t\t\tfor(int i=0;i<pluginDetectedIPs.length;i++) {\n\t\t\t\tInetAddress addr = pluginDetectedIPs[i].publicAddress;\n\t\t\t\tif(addr == null) continue;\n\t\t\t\tFreenetInetAddress a = new FreenetInetAddress(addr);\n\t\t\t\tif(!addresses.contains(a)) {\n\t\t\t\t\tLogger.normal(this, \"Plugin detected IP address: \"+a);\n\t\t\t\t\taddresses.add(a);\n\t\t\t\t\tif(a.isRealInternetAddress(false, false))\n\t\t\t\t\t\taddedValidIP = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif((!addedValidIP) && (oldIPAddress != null) && !oldIPAddress.equals(overrideIPAddress)) {\n\t\t\taddresses.add(oldIPAddress);\n\t\t\tif(oldIPAddress.isRealInternetAddress(false, true))\n\t\t\t\taddedValidIP = true;\n\t\t}\n\t\t\n\t\t// Try to pick it up from our connections\n\t\tif(node.peers != null) {\n\t\t\tPeerNode[] peerList = node.peers.connectedPeers;\n\t\t\tHashMap countsByPeer = new HashMap();\n\t\t\t// FIXME use a standard mutable int object, we have one somewhere\n\t\t\tfor(int i=0;i<peerList.length;i++) {\n\t\t\t\tPeer p = peerList[i].getRemoteDetectedPeer();\n\t\t\t\tif(p == null || p.isNull()) continue;\n\t\t\t\tFreenetInetAddress addr = p.getFreenetAddress();\n\t\t\t\tif(addr == null) continue;\n\t\t\t\tif(!IPUtil.isValidAddress(addr.getAddress(false), false)) continue;\n\t\t\t\tLogger.normal(this, \"Peer \"+peerList[i].getPeer()+\" thinks we are \"+addr);\n\t\t\t\tif(countsByPeer.containsKey(addr)) {\n\t\t\t\t\tInteger count = (Integer) countsByPeer.get(addr);\n\t\t\t\t\tInteger newCount = new Integer(count.intValue()+1);\n\t\t\t\t\tcountsByPeer.put(addr, newCount);\n\t\t\t\t} else {\n\t\t\t\t\tcountsByPeer.put(addr, new Integer(1));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(countsByPeer.size() == 1) {\n\t\t\t\tIterator it = countsByPeer.keySet().iterator();\n\t\t\t\tFreenetInetAddress addr = (FreenetInetAddress) (it.next());\n\t\t\t\tLogger.minor(this, \"Everyone agrees we are \"+addr);\n\t\t\t\tif(!addresses.contains(addr)) {\n\t\t\t\t\tif(addr.isRealInternetAddress(false, false))\n\t\t\t\t\t\taddedValidIP = true;\n\t\t\t\t\taddresses.add(addr);\n\t\t\t\t}\n\t\t\t} else if(countsByPeer.size() > 1) {\n\t\t\t\tIterator it = countsByPeer.keySet().iterator();\n\t\t\t\t// Take two most popular addresses.\n\t\t\t\tFreenetInetAddress best = null;\n\t\t\t\tFreenetInetAddress secondBest = null;\n\t\t\t\tint bestPopularity = 0;\n\t\t\t\tint secondBestPopularity = 0;\n\t\t\t\twhile(it.hasNext()) {\n\t\t\t\t\tFreenetInetAddress cur = (FreenetInetAddress) (it.next());\n\t\t\t\t\tint curPop = ((Integer) (countsByPeer.get(cur))).intValue();\n\t\t\t\t\tLogger.normal(this, \"Detected peer: \"+cur+\" popularity \"+curPop);\n\t\t\t\t\tif(curPop >= bestPopularity) {\n\t\t\t\t\t\tsecondBestPopularity = bestPopularity;\n\t\t\t\t\t\tbestPopularity = curPop;\n\t\t\t\t\t\tsecondBest = best;\n\t\t\t\t\t\tbest = cur;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(best != null) {\n\t\t\t\t\tif((bestPopularity > 1) || (detectedAddrs.length == 0)) {\n \t\t\t\t\t\tif(!addresses.contains(best)) {\n\t\t\t\t\t\t\tLogger.normal(this, \"Adding best peer \"+best+\" (\"+bestPopularity+ ')');\n\t\t\t\t\t\t\taddresses.add(best);\n\t\t\t\t\t\t\tif(best.isRealInternetAddress(false, false))\n\t\t\t\t\t\t\t\taddedValidIP = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif((secondBest != null) && (secondBestPopularity > 1)) {\n\t\t\t\t\t\t\tif(!addresses.contains(secondBest)) {\n\t\t\t\t\t\t\t\tLogger.normal(this, \"Adding second best peer \"+secondBest+\" (\"+secondBest+ ')');\n\t\t\t\t\t\t\t\taddresses.add(secondBest);\n\t\t\t\t\t\t\t\tif(secondBest.isRealInternetAddress(false, false))\n\t\t\t\t\t\t\t\t\taddedValidIP = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t   \treturn addedValidIP;\n\t}","id":52358,"modified_method":"/**\n\t * Core of the IP detection algorithm.\n\t * @param addresses\n\t * @param addedValidIP\n\t * @return\n\t */\n\tprivate boolean innerDetect(Vector addresses) {\n\t\tboolean logMINOR = Logger.shouldLog(Logger.MINOR, this);\n\t\tboolean addedValidIP = false;\n\t\tInetAddress[] detectedAddrs = ipDetector.getAddress();\n\t\tassert(detectedAddrs != null);\n\t\tsynchronized(this) {\n\t\t\thasDetectedIAD = true;\n\t\t}\n\t\tfor(int i=0;i<detectedAddrs.length;i++) {\n\t\t\tFreenetInetAddress addr = new FreenetInetAddress(detectedAddrs[i]);\n\t\t\tif(!addresses.contains(addr)) {\n\t\t\t\tLogger.normal(this, \"Detected IP address: \"+addr);\n\t\t\t\taddresses.add(addr);\n\t\t\t\tif(addr.isRealInternetAddress(false, false))\n\t\t\t\t\taddedValidIP = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif((pluginDetectedIPs != null) && (pluginDetectedIPs.length > 0)) {\n\t\t\tfor(int i=0;i<pluginDetectedIPs.length;i++) {\n\t\t\t\tInetAddress addr = pluginDetectedIPs[i].publicAddress;\n\t\t\t\tif(addr == null) continue;\n\t\t\t\tFreenetInetAddress a = new FreenetInetAddress(addr);\n\t\t\t\tif(!addresses.contains(a)) {\n\t\t\t\t\tLogger.normal(this, \"Plugin detected IP address: \"+a);\n\t\t\t\t\taddresses.add(a);\n\t\t\t\t\tif(a.isRealInternetAddress(false, false))\n\t\t\t\t\t\taddedValidIP = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif((!addedValidIP) && (oldIPAddress != null) && !oldIPAddress.equals(overrideIPAddress)) {\n\t\t\taddresses.add(oldIPAddress);\n\t\t\tif(oldIPAddress.isRealInternetAddress(false, true))\n\t\t\t\taddedValidIP = true;\n\t\t}\n\t\t\n\t\t// Try to pick it up from our connections\n\t\tif(node.peers != null) {\n\t\t\tPeerNode[] peerList = node.peers.connectedPeers;\n\t\t\tHashMap countsByPeer = new HashMap();\n\t\t\t// FIXME use a standard mutable int object, we have one somewhere\n\t\t\tfor(int i=0;i<peerList.length;i++) {\n\t\t\t\tPeer p = peerList[i].getRemoteDetectedPeer();\n\t\t\t\tif(p == null || p.isNull()) continue;\n\t\t\t\tFreenetInetAddress addr = p.getFreenetAddress();\n\t\t\t\tif(addr == null) continue;\n\t\t\t\tif(!IPUtil.isValidAddress(addr.getAddress(false), false)) continue;\n\t\t\t\tif(logMINOR)\n\t\t\t\t\tLogger.minor(this, \"Peer \"+peerList[i].getPeer()+\" thinks we are \"+addr);\n\t\t\t\tif(countsByPeer.containsKey(addr)) {\n\t\t\t\t\tInteger count = (Integer) countsByPeer.get(addr);\n\t\t\t\t\tInteger newCount = new Integer(count.intValue()+1);\n\t\t\t\t\tcountsByPeer.put(addr, newCount);\n\t\t\t\t} else {\n\t\t\t\t\tcountsByPeer.put(addr, new Integer(1));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(countsByPeer.size() == 1) {\n\t\t\t\tIterator it = countsByPeer.keySet().iterator();\n\t\t\t\tFreenetInetAddress addr = (FreenetInetAddress) (it.next());\n\t\t\t\tLogger.minor(this, \"Everyone agrees we are \"+addr);\n\t\t\t\tif(!addresses.contains(addr)) {\n\t\t\t\t\tif(addr.isRealInternetAddress(false, false))\n\t\t\t\t\t\taddedValidIP = true;\n\t\t\t\t\taddresses.add(addr);\n\t\t\t\t}\n\t\t\t} else if(countsByPeer.size() > 1) {\n\t\t\t\tIterator it = countsByPeer.keySet().iterator();\n\t\t\t\t// Take two most popular addresses.\n\t\t\t\tFreenetInetAddress best = null;\n\t\t\t\tFreenetInetAddress secondBest = null;\n\t\t\t\tint bestPopularity = 0;\n\t\t\t\tint secondBestPopularity = 0;\n\t\t\t\twhile(it.hasNext()) {\n\t\t\t\t\tFreenetInetAddress cur = (FreenetInetAddress) (it.next());\n\t\t\t\t\tint curPop = ((Integer) (countsByPeer.get(cur))).intValue();\n\t\t\t\t\tLogger.normal(this, \"Detected peer: \"+cur+\" popularity \"+curPop);\n\t\t\t\t\tif(curPop >= bestPopularity) {\n\t\t\t\t\t\tsecondBestPopularity = bestPopularity;\n\t\t\t\t\t\tbestPopularity = curPop;\n\t\t\t\t\t\tsecondBest = best;\n\t\t\t\t\t\tbest = cur;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(best != null) {\n\t\t\t\t\tif((bestPopularity > 1) || (detectedAddrs.length == 0)) {\n \t\t\t\t\t\tif(!addresses.contains(best)) {\n\t\t\t\t\t\t\tLogger.normal(this, \"Adding best peer \"+best+\" (\"+bestPopularity+ ')');\n\t\t\t\t\t\t\taddresses.add(best);\n\t\t\t\t\t\t\tif(best.isRealInternetAddress(false, false))\n\t\t\t\t\t\t\t\taddedValidIP = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif((secondBest != null) && (secondBestPopularity > 1)) {\n\t\t\t\t\t\t\tif(!addresses.contains(secondBest)) {\n\t\t\t\t\t\t\t\tLogger.normal(this, \"Adding second best peer \"+secondBest+\" (\"+secondBest+ ')');\n\t\t\t\t\t\t\t\taddresses.add(secondBest);\n\t\t\t\t\t\t\t\tif(secondBest.isRealInternetAddress(false, false))\n\t\t\t\t\t\t\t\t\taddedValidIP = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t   \treturn addedValidIP;\n\t}","commit_id":"12f75efd24e6cb1632d26c48b0af570885c1c68d","url":"https://github.com/freenet/fred"},{"original_method":"@Override\n\tpublic int compare(Object obj1, Object obj2) {\n\t\tDDMStructure structure1 = (DDMStructure)obj1;\n\t\tDDMStructure structure2 = (DDMStructure)obj2;\n\n\t\tString structureKey1 = structure1.getStructureKey().toLowerCase();\n\t\tString structureKey2 = structure2.getStructureKey().toLowerCase();\n\n\t\tint value = structureKey1.compareTo(structureKey2);\n\n\t\tif (_ascending) {\n\t\t\treturn value;\n\t\t}\n\t\telse {\n\t\t\treturn -value;\n\t\t}\n\t}","id":52359,"modified_method":"@Override\n\tpublic int compare(Object obj1, Object obj2) {\n\t\tDDMStructure structure1 = (DDMStructure)obj1;\n\n\t\tString structureKey1 = structure1.getStructureKey();\n\n\t\tstructureKey1 = structureKey1.toLowerCase();\n\n\t\tDDMStructure structure2 = (DDMStructure)obj2;\n\n\t\tString structureKey2 = structure2.getStructureKey();\n\n\t\tstructureKey2 = structureKey2.toLowerCase();\n\n\t\tint value = structureKey1.compareTo(structureKey2);\n\n\t\tif (_ascending) {\n\t\t\treturn value;\n\t\t}\n\t\telse {\n\t\t\treturn -value;\n\t\t}\n\t}","commit_id":"7ca29844f7d4064bf66fd2dc895fa2da064c8ccd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic int compare(Object obj1, Object obj2) {\n\t\tDDMTemplate template1 = (DDMTemplate)obj1;\n\t\tDDMTemplate template2 = (DDMTemplate)obj2;\n\n\t\tString templateName1 = template1.getName().toLowerCase();\n\t\tString templateName2 = template2.getName().toLowerCase();\n\n\t\tint value = templateName1.compareTo(templateName2);\n\n\t\tif (_ascending) {\n\t\t\treturn value;\n\t\t}\n\t\telse {\n\t\t\treturn -value;\n\t\t}\n\t}","id":52360,"modified_method":"@Override\n\tpublic int compare(Object obj1, Object obj2) {\n\t\tDDMTemplate template1 = (DDMTemplate)obj1;\n\n\t\tString templateName1 = template1.getName();\n\n\t\ttemplateName1 = templateName1.toLowerCase();\n\n\t\tDDMTemplate template2 = (DDMTemplate)obj2;\n\n\t\tString templateName2 = template2.getName();\n\n\t\ttemplateName2 = templateName2.toLowerCase();\n\n\t\tint value = templateName1.compareTo(templateName2);\n\n\t\tif (_ascending) {\n\t\t\treturn value;\n\t\t}\n\t\telse {\n\t\t\treturn -value;\n\t\t}\n\t}","commit_id":"7ca29844f7d4064bf66fd2dc895fa2da064c8ccd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic int compare(Object obj1, Object obj2) {\n\t\tDDMStructure template1 = (DDMStructure)obj1;\n\t\tDDMStructure template2 = (DDMStructure)obj2;\n\n\t\tint value = template1.getName().toLowerCase().compareTo(\n\t\t\t\ttemplate2.getName().toLowerCase());\n\n\t\tif (_ascending) {\n\t\t\treturn value;\n\t\t}\n\t\telse {\n\t\t\treturn -value;\n\t\t}\n\t}","id":52361,"modified_method":"@Override\n\tpublic int compare(Object obj1, Object obj2) {\n\t\tDDMStructure structure1 = (DDMStructure)obj1;\n\t\tDDMStructure structure2 = (DDMStructure)obj2;\n\n\t\tString structureName1 = structure1.getName().toLowerCase();\n\t\tString structureName2 = structure2.getName().toLowerCase();\n\n\t\tint value = structureName1.compareTo(structureName2);\n\n\t\tif (_ascending) {\n\t\t\treturn value;\n\t\t}\n\t\telse {\n\t\t\treturn -value;\n\t\t}\n\t}","commit_id":"3c023d98aa377ddbd9380f47a8f3522771ac7054","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic int compare(Object obj1, Object obj2) {\n\t\tDDMStructure structure1 = (DDMStructure)obj1;\n\n\t\tString structureKey1 = structure1.getStructureKey();\n\n\t\tstructureKey1 = structureKey1.toLowerCase();\n\n\t\tDDMStructure structure2 = (DDMStructure)obj2;\n\n\t\tString structureKey2 = structure2.getStructureKey();\n\n\t\tstructureKey2 = structureKey2.toLowerCase();\n\n\t\tint value = structureKey1.compareTo(structureKey2);\n\n\t\tif (_ascending) {\n\t\t\treturn value;\n\t\t}\n\t\telse {\n\t\t\treturn -value;\n\t\t}\n\t}","id":52362,"modified_method":"@Override\n\tpublic int compare(Object obj1, Object obj2) {\n\t\tDDMStructure structure1 = (DDMStructure)obj1;\n\t\tDDMStructure structure2 = (DDMStructure)obj2;\n\n\t\tString structureKey1 = structure1.getStructureKey().toLowerCase();\n\t\tString structureKey2 = structure2.getStructureKey().toLowerCase();\n\n\t\tint value = structureKey1.compareTo(structureKey2);\n\n\t\tif (_ascending) {\n\t\t\treturn value;\n\t\t}\n\t\telse {\n\t\t\treturn -value;\n\t\t}\n\t}","commit_id":"3c023d98aa377ddbd9380f47a8f3522771ac7054","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic int compare(Object obj1, Object obj2) {\n\t\tDDMTemplate template1 = (DDMTemplate)obj1;\n\t\tDDMTemplate template2 = (DDMTemplate)obj2;\n\n\t\tint value = DateUtil.compareTo(\n\t\t\t\ttemplate1.getModifiedDate(), template2.getModifiedDate());\n\n\t\tif (_ascending) {\n\t\t\treturn value;\n\t\t}\n\t\telse {\n\t\t\treturn -value;\n\t\t}\n\t}","id":52363,"modified_method":"@Override\n\tpublic int compare(Object obj1, Object obj2) {\n\t\tDDMTemplate template1 = (DDMTemplate)obj1;\n\t\tDDMTemplate template2 = (DDMTemplate)obj2;\n\n\t\tDate modifiedDate1 = template1.getModifiedDate();\n\t\tDate modifiedDate2 = template2.getModifiedDate();\n\n\t\tint value = DateUtil.compareTo(modifiedDate1, modifiedDate2);\n\n\t\tif (_ascending) {\n\t\t\treturn value;\n\t\t}\n\t\telse {\n\t\t\treturn -value;\n\t\t}\n\t}","commit_id":"3c023d98aa377ddbd9380f47a8f3522771ac7054","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic int compare(Object obj1, Object obj2) {\n\t\tDDMTemplate template1 = (DDMTemplate)obj1;\n\t\tDDMTemplate template2 = (DDMTemplate)obj2;\n\n\t\tint value = template1.getName().toLowerCase().compareTo(\n\t\t\t\ttemplate2.getName().toLowerCase());\n\n\t\tif (_ascending) {\n\t\t\treturn value;\n\t\t}\n\t\telse {\n\t\t\treturn -value;\n\t\t}\n\t}","id":52364,"modified_method":"@Override\n\tpublic int compare(Object obj1, Object obj2) {\n\t\tDDMTemplate template1 = (DDMTemplate)obj1;\n\t\tDDMTemplate template2 = (DDMTemplate)obj2;\n\n\t\tString templateName1 = template1.getName().toLowerCase();\n\t\tString templateName2 = template2.getName().toLowerCase();\n\n\t\tint value = templateName1.compareTo(templateName2);\n\n\t\tif (_ascending) {\n\t\t\treturn value;\n\t\t}\n\t\telse {\n\t\t\treturn -value;\n\t\t}\n\t}","commit_id":"3c023d98aa377ddbd9380f47a8f3522771ac7054","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static InputStream getConnectionInputStreamWithException(@NotNull URLConnection connection, @NotNull ProgressIndicator pi)\n    throws IOException {\n    InputStreamGetter getter = new InputStreamGetter(connection);\n    final Future<?> getterFuture = ApplicationManager.getApplication().executeOnPooledThread(getter);\n    while (true) {\n      pi.checkCanceled();\n      try {\n        try {\n          getterFuture.get(50, TimeUnit.MILLISECONDS);\n        }\n        catch (TimeoutException ignored) {\n        }\n\n        pi.setIndeterminate(true);\n        pi.setText(pi.getText());\n        if (getterFuture.isDone()) {\n          break;\n        }\n      }\n      catch (Exception e) {\n        throw new ProcessCanceledException(e);\n      }\n    }\n    //noinspection ThrowableResultOfMethodCallIgnored\n    if (getter.getException() != null) {\n      throw getter.getException();\n    }\n\n    return getter.getInputStream();\n  }","id":52365,"modified_method":"public static InputStream getConnectionInputStreamWithException(@NotNull URLConnection connection, @Nullable ProgressIndicator pi)\n    throws IOException {\n    InputStreamGetter getter = new InputStreamGetter(connection);\n    final Future<?> getterFuture = ApplicationManager.getApplication().executeOnPooledThread(getter);\n    while (true) {\n      if (pi != null) {\n        pi.checkCanceled();\n      }\n\n      try {\n        try {\n          getterFuture.get(50, TimeUnit.MILLISECONDS);\n        }\n        catch (TimeoutException ignored) {\n        }\n\n        if (pi != null) {\n          pi.setIndeterminate(true);\n          pi.setText(pi.getText());\n        }\n\n        if (getterFuture.isDone()) {\n          break;\n        }\n      }\n      catch (Exception e) {\n        throw new ProcessCanceledException(e);\n      }\n    }\n    //noinspection ThrowableResultOfMethodCallIgnored\n    if (getter.getException() != null) {\n      throw getter.getException();\n    }\n\n    return getter.getInputStream();\n  }","commit_id":"4e95814faff88c325f98c9f646c67161da685a38","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void run() {\n    final ProgressIndicator indicator = ProgressManager.getInstance().getProgressIndicator();\n    indicator.setIndeterminate(true);\n    indicator.setText2(VcsBundle.message(\"commit.wait.util.synched.text\"));\n    synchronized (myLock) {\n      if (myStarted) {\n        LOG.error(\"Waiter running under progress being started again.\");\n        return;\n      }\n      myStarted = true;\n      while ((! myDone) && (! ProgressManager.getInstance().getProgressIndicator().isCanceled())) {\n        try {\n          myLock.wait();\n        }\n        catch (InterruptedException e) {\n          // ok\n        }\n      }\n    }\n    ApplicationManager.getApplication().invokeLater(new Runnable() {\n      public void run() {\n        synchronized (myLock) {\n          if (! myDone) {\n            return;\n          }\n        }\n        if (myProject.isDisposed()) return;\n        myRunnable.run();\n        ChangesViewManager.getInstance(myProject).refreshView();\n      }\n    }, ModalityState.NON_MODAL);\n  }","id":52366,"modified_method":"public void run() {\n    final ProgressIndicator indicator = ProgressManager.getInstance().getProgressIndicator();\n    if (indicator != null) {\n      indicator.setIndeterminate(true);\n      indicator.setText2(VcsBundle.message(\"commit.wait.util.synched.text\"));\n    }\n    synchronized (myLock) {\n      if (myStarted) {\n        LOG.error(\"Waiter running under progress being started again.\");\n        return;\n      }\n      myStarted = true;\n      while (! myDone) {\n        try {\n          // every second check whether we are canceled\n          myLock.wait(500);\n        }\n        catch (InterruptedException e) {\n          // ok\n        }\n        if (indicator != null) {\n          indicator.checkCanceled();\n        }\n      }\n    }\n    ApplicationManager.getApplication().invokeLater(new Runnable() {\n      public void run() {\n        synchronized (myLock) {\n          if (! myDone) {\n            return;\n          }\n        }\n        if (myProject.isDisposed()) return;\n        myRunnable.run();\n        ChangesViewManager.getInstance(myProject).refreshView();\n      }\n    }, ModalityState.NON_MODAL);\n  }","commit_id":"b2e2c2c1236cb3750379cdf4544b9850381a1396","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void doSetUp() throws Exception\n    {\n        // simulate a running environment with Log4j MBean already registered\n        List servers = MBeanServerFactory.findMBeanServer(null);\n        if (servers.size() == 0)\n        {\n            MBeanServerFactory.createMBeanServer();\n        }\n\n        mBeanServer = (MBeanServer)MBeanServerFactory.findMBeanServer(null).get(0);\n    }","id":52367,"modified_method":"protected void doSetUp() throws Exception\n    {\n        RmiRegistryAgent rmiRegistryAgent = new RmiRegistryAgent();\n        managementContext.getRegistry().registerAgent(rmiRegistryAgent);\n        \n        // simulate a running environment with Log4j MBean already registered\n        List servers = MBeanServerFactory.findMBeanServer(null);\n        if (servers.size() == 0)\n        {\n            MBeanServerFactory.createMBeanServer();\n        }\n\n        mBeanServer = (MBeanServer)MBeanServerFactory.findMBeanServer(null).get(0);\n    }","commit_id":"ae1547f10eaf60fde9a1c60736f31de68c9a0fdc","url":"https://github.com/mulesoft/mule"},{"original_method":"public static void ensureUniqueId(Element element)\n    {\n        if (null != element && !element.hasAttribute(ATTRIBUTE_ID))\n        {\n            element.setAttribute(ATTRIBUTE_ID, ID_PREFIX + counter.incrementAndGet());\n        }\n    }","id":52368,"modified_method":"public static void ensureUniqueId(Element element)\n    {\n        if (null != element && !element.hasAttribute(ATTRIBUTE_ID))\n        {\n            if (!element.hasAttribute(ATTRIBUTE_NAME))\n            {\n                element.setAttribute(ATTRIBUTE_ID, ID_PREFIX + counter.incrementAndGet());\n            }\n            else\n            {\n                element.setAttribute(ATTRIBUTE_ID, element.getAttribute(ATTRIBUTE_NAME));\n            }\n        }\n    }","commit_id":"ae1547f10eaf60fde9a1c60736f31de68c9a0fdc","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testUndeploy() throws Exception\n    {\n        final String domainOriginal = \"TEST_DOMAIN_1\";\n\n        final MuleDescriptor descriptor = new MuleDescriptor(\"TEST_SERVICE\");\n        descriptor.setServiceFactory(new SingletonObjectFactory(new Object()));\n        managementContext.getRegistry().lookupSystemModel().registerComponent(descriptor);\n\n        managementContext.start();\n        final ComponentService service = new ComponentService(\"TEST_SERVICE\");\n        final ObjectName name = ObjectName.getInstance(domainOriginal + \":type=TEST_SERVICE\");\n        mBeanServer.registerMBean(service, name);\n        Set mbeans = mBeanServer.queryMBeans(ObjectName.getInstance(domainOriginal + \":*\"), null);\n\n        assertEquals(\"Unexpected number of components registered in the domain.\", 4, mbeans.size());\n\n        mBeanServer.unregisterMBean(name);\n\n        mbeans = mBeanServer.queryMBeans(ObjectName.getInstance(domainOriginal + \":*\"), null);\n\n        assertEquals(\"There should be no MBeans left in the domain\", 0, mbeans.size());\n    }","id":52369,"modified_method":"public void testUndeploy() throws Exception\n    {\n        final String domainOriginal = \"TEST_DOMAIN_1\";\n\n        final MuleDescriptor descriptor = new MuleDescriptor(\"TEST_SERVICE\");\n        descriptor.setServiceFactory(new SingletonObjectFactory(new Object()));\n        descriptor.setThreadingProfile(new ThreadingProfile());\n        managementContext.getRegistry().lookupSystemModel().registerComponent(descriptor);\n\n        managementContext.start();\n        final ComponentService service = new ComponentService(\"TEST_SERVICE\");\n        final ObjectName name = ObjectName.getInstance(domainOriginal + \":type=TEST_SERVICE\");\n        mBeanServer.registerMBean(service, name);\n        Set mbeans = mBeanServer.queryMBeans(ObjectName.getInstance(domainOriginal + \":*\"), null);\n\n        assertEquals(\"Unexpected number of components registered in the domain.\", 4, mbeans.size());\n\n        mBeanServer.unregisterMBean(name);\n\n        mbeans = mBeanServer.queryMBeans(ObjectName.getInstance(domainOriginal + \":*\"), null);\n\n        assertEquals(\"There should be no MBeans left in the domain\", 0, mbeans.size());\n    }","commit_id":"ae1547f10eaf60fde9a1c60736f31de68c9a0fdc","url":"https://github.com/mulesoft/mule"},{"original_method":"public BeanDefinition parseCustomElement(Element element, BeanDefinition parent)\n    {\n        if (logger.isDebugEnabled())\n        {\n            logger.debug(\"parsing: \" + elementToString(element));\n        }\n        if (isBeansNamespace(element))\n        {\n            return handleSpringElements(element, parent);\n        }\n        else\n        {\n            String namespaceUri = element.getNamespaceURI();\n            NamespaceHandler handler = getReaderContext().getNamespaceHandlerResolver().resolve(namespaceUri);\n            if (handler == null)\n            {\n                getReaderContext().error(\"Unable to locate NamespaceHandler for namespace [\" + namespaceUri + \"]\", element);\n                return null;\n            }\n            BeanDefinition child = handler.parse(element, new ParserContext(getReaderContext(), this, parent));\n            registerBean(element, child);\n\n            // Only iterate and parse child mule name-spaced elements. Spring does not do\n            // hierarchical parsing by default so we need to maintain this behavior\n            // for non-mule elements to ensure that we don't break the parsing of any\n            // other custom name-spaces e.g spring-jee.\n\n            // We also avoid parsing inside elements that have constructed a factory bean\n            // because that means we're dealing with (something like) ChildmapDefinitionParser,\n            // which handles iteration internally (this is a hack needed because Spring doesn't\n            // expose the DP for \"<spring:entry>\" elements directly).\n\n            boolean isFactory = null != child && null != child.getBeanClassName() &&\n                    (child.getBeanClassName().equals(MapFactoryBean.class.getName()) ||\n                            child.getBeanClassName().equals(PropertiesFactoryBean.class.getName())); \n\n            if (isMuleNamespace(element) && ! isFactory)\n            {\n                NodeList list = element.getChildNodes();\n                for (int i = 0; i < list.getLength() ; i++)\n                {\n                    if(list.item(i) instanceof Element)\n                    {\n                        parseCustomElement((Element) list.item(i), child);\n                    }\n                }\n            }\n            return child;\n        }\n    }","id":52370,"modified_method":"public BeanDefinition parseCustomElement(Element element, BeanDefinition parent)\n    {\n        if (logger.isDebugEnabled())\n        {\n            logger.debug(\"parsing: \" + elementToString(element));\n        }\n        if (isBeansNamespace(element))\n        {\n            return handleSpringElements(element, parent);\n        }\n        else\n        {\n            String namespaceUri = element.getNamespaceURI();\n            NamespaceHandler handler = getReaderContext().getNamespaceHandlerResolver().resolve(namespaceUri);\n            if (handler == null)\n            {\n                getReaderContext().error(\"Unable to locate NamespaceHandler for namespace [\" + namespaceUri + \"]\", element);\n                return null;\n            }\n            ParserContext parserContext = new ParserContext(getReaderContext(), this, parent);\n            BeanDefinition child = handler.parse(element, parserContext);\n            if (parserContext.isNested())\n            {\n                registerBean(element, child);\n            }\n\n            // Only iterate and parse child mule name-spaced elements. Spring does not do\n            // hierarchical parsing by default so we need to maintain this behavior\n            // for non-mule elements to ensure that we don't break the parsing of any\n            // other custom name-spaces e.g spring-jee.\n\n            // We also avoid parsing inside elements that have constructed a factory bean\n            // because that means we're dealing with (something like) ChildmapDefinitionParser,\n            // which handles iteration internally (this is a hack needed because Spring doesn't\n            // expose the DP for \"<spring:entry>\" elements directly).\n\n            boolean isFactory = null != child && null != child.getBeanClassName() &&\n                    (child.getBeanClassName().equals(MapFactoryBean.class.getName()) ||\n                            child.getBeanClassName().equals(PropertiesFactoryBean.class.getName())); \n\n            if (isMuleNamespace(element) && !isFactory)\n            {\n                NodeList list = element.getChildNodes();\n                for (int i = 0; i < list.getLength(); i++)\n                {\n                    if (list.item(i) instanceof Element)\n                    {\n                        parseCustomElement((Element) list.item(i), child);\n                    }\n                }\n            }\n            return child;\n        }\n    }","commit_id":"ae1547f10eaf60fde9a1c60736f31de68c9a0fdc","url":"https://github.com/mulesoft/mule"},{"original_method":"protected BeanDefinition getParentBeanDefinition(Element element)\n    {\n        String parentBean = getParentBeanName(element);\n        if (StringUtils.isBlank(parentBean))\n        {\n            // MULE-1737 - this used to be just a printed message and a return from\n            // the parser.  Now it's in a separate method it's simpler to have an\n            // exception and fix the incorrect use\n            throw new IllegalStateException(\"Bean: \" + element.getNodeName() + \" has no parent\");\n        }\n        return getRegistry().getBeanDefinition(parentBean);\n    }","id":52371,"modified_method":"protected BeanDefinition getParentBeanDefinition(Element element)\n    {\n        String parentBean = getParentBeanName(element);\n        if (StringUtils.isBlank(parentBean))\n        {\n            throw new IllegalStateException(\"No parent for \" +\n                    MuleHierarchicalBeanDefinitionParserDelegate.elementToString(element));\n        }\n        return getRegistry().getBeanDefinition(parentBean);\n    }","commit_id":"0b3161c3ceb882e71d2ce8dbce84a52bd701d45c","url":"https://github.com/mulesoft/mule"},{"original_method":"protected final void registerIgnoredElement(String name)\n    {\n        registerBeanDefinitionParser(name, new IgnoredDefinitionParser());\n    }","id":52372,"modified_method":"/**\n     * @param name The name of the element to be ignored.\n     */\n    protected final void registerIgnoredElement(String name)\n    {\n        registerBeanDefinitionParser(name, new IgnoredDefinitionParser());\n    }","commit_id":"0b3161c3ceb882e71d2ce8dbce84a52bd701d45c","url":"https://github.com/mulesoft/mule"},{"original_method":"protected void parseChild(Element element, ParserContext parserContext, BeanDefinitionBuilder builder)\n    {\n        //Check to see if this is a global endpoint\n        Element parent = (Element) element.getParentNode();\n        if (parent.getNodeName().equals(\"beans\"))\n        {\n            builder.addPropertyValue(\"type\", UMOImmutableEndpoint.ENDPOINT_TYPE_GLOBAL);\n            // if global, cannot be a reference (afaik)\n            if (null == element.getAttributeNode(ADDRESS_ATTRIBUTE))\n            {\n                throw new IllegalStateException(\"A global endpoint requires an \" + ADDRESS_ATTRIBUTE + \" attribute.\");\n            }\n            if (null != element.getAttributeNode(ENDPOINT_REF_ATTRIBUTE))\n            {\n                throw new IllegalStateException(\"A global endpoint cannot contain a \" + ENDPOINT_REF_ATTRIBUTE +\n                        \" attribute.\");\n            }\n        }\n        else\n        {\n            // must be reference *or* have an address\n            if (null == element.getAttributeNode(ADDRESS_ATTRIBUTE))\n            {\n                if (null == element.getAttributeNode(ENDPOINT_REF_ATTRIBUTE))\n                {\n                    throw new IllegalStateException(\"An endpoint requires either an \" + ADDRESS_ATTRIBUTE + \" or a \" +\n                            ENDPOINT_REF_ATTRIBUTE + \" attribute.\");\n                }\n            }\n            else\n            {\n                if (null != element.getAttributeNode(ENDPOINT_REF_ATTRIBUTE))\n                {\n                    throw new IllegalStateException(\"The \" + ADDRESS_ATTRIBUTE + \" and \" + ENDPOINT_REF_ATTRIBUTE +\n                            \" attributes are mutually exclusive.\");\n                }\n            }\n        }\n\n        //Register non-descriptive dependencies i.e. string values for objects listed in the container\n        if(StringUtils.isNotBlank(element.getAttribute(\"connector\")))\n        {\n            builder.addDependsOn(element.getAttribute(\"connector\"));\n        }\n        processTransformerDependencies(builder, element, \"transformers\");\n        processTransformerDependencies(builder, element, \"responseTransformers\");\n\n        super.parseChild(element, parserContext, builder);\n    }","id":52373,"modified_method":"protected void parseChild(Element element, ParserContext parserContext, BeanDefinitionBuilder builder)\n    {\n        //Check to see if this is a global endpoint\n        Element parent = (Element) element.getParentNode();\n        if (parent.getLocalName().equals(ROOT_ELEMENT))\n        {\n            builder.addPropertyValue(\"type\", UMOImmutableEndpoint.ENDPOINT_TYPE_GLOBAL);\n            // if global, cannot be a reference (afaik)\n            if (null == element.getAttributeNode(ADDRESS_ATTRIBUTE))\n            {\n                throw new IllegalStateException(\"A global endpoint requires an \" + ADDRESS_ATTRIBUTE + \" attribute.\");\n            }\n            if (null != element.getAttributeNode(ENDPOINT_REF_ATTRIBUTE))\n            {\n                throw new IllegalStateException(\"A global endpoint cannot contain a \" + ENDPOINT_REF_ATTRIBUTE +\n                        \" attribute.\");\n            }\n        }\n        else\n        {\n            // must be reference *or* have an address\n            if (null == element.getAttributeNode(ADDRESS_ATTRIBUTE))\n            {\n                if (null == element.getAttributeNode(ENDPOINT_REF_ATTRIBUTE))\n                {\n                    throw new IllegalStateException(\"An endpoint requires either an \" + ADDRESS_ATTRIBUTE + \" or a \" +\n                            ENDPOINT_REF_ATTRIBUTE + \" attribute.\");\n                }\n            }\n            else\n            {\n                if (null != element.getAttributeNode(ENDPOINT_REF_ATTRIBUTE))\n                {\n                    throw new IllegalStateException(\"The \" + ADDRESS_ATTRIBUTE + \" and \" + ENDPOINT_REF_ATTRIBUTE +\n                            \" attributes are mutually exclusive.\");\n                }\n            }\n        }\n\n        //Register non-descriptive dependencies i.e. string values for objects listed in the container\n        if(StringUtils.isNotBlank(element.getAttribute(\"connector\")))\n        {\n            builder.addDependsOn(element.getAttribute(\"connector\"));\n        }\n        processTransformerDependencies(builder, element, \"transformers\");\n        processTransformerDependencies(builder, element, \"responseTransformers\");\n\n        super.parseChild(element, parserContext, builder);\n    }","commit_id":"0b3161c3ceb882e71d2ce8dbce84a52bd701d45c","url":"https://github.com/mulesoft/mule"},{"original_method":"/**\n     * If the endpoint element is decared in the root beens element, this will\n     * return null since there is no property to be set on a parent bean. In this case the\n     * endpoint is a global endpoint and can be referenced by other components\n     * @param e the current Endpoint element\n     * @return the parent property name or null if the endpoint is in the root beans element.\n     */\n    public String getPropertyName(Element e)\n    {\n        Element parent = (Element) e.getParentNode();\n        if (parent.getNodeName().equals(\"beans\"))\n        {\n            return null;\n        }\n        return \"endpoint\";\n    }","id":52374,"modified_method":"/**\n     * If the endpoint element is decared in the root mule element, this will\n     * return null since there is no property to be set on a parent bean. In this case the\n     * endpoint is a global endpoint and can be referenced by other components\n     * @param e the current Endpoint element\n     * @return the parent property name or null if the endpoint is in the root beans element.\n     */\n    public String getPropertyName(Element e)\n    {\n        Element parent = (Element) e.getParentNode();\n        if (parent.getLocalName().equals(ROOT_ELEMENT))\n        {\n            return null;\n        }\n        return \"endpoint\";\n    }","commit_id":"0b3161c3ceb882e71d2ce8dbce84a52bd701d45c","url":"https://github.com/mulesoft/mule"},{"original_method":"protected DelegateDefinitionParser getDelegate(Element element, ParserContext parserContext)\n    {\n        // i'm not sure why this is suddenly necessary here and not elsewhere.\n        // perhaps because this is used on the top level but has name deleted?\n        if (null != element && !element.hasAttribute(ATTRIBUTE_ID))\n        {\n            element.setAttribute(ATTRIBUTE_ID, ID_PREFIX + counter.incrementAndGet());\n        }\n        if (null != element && element.hasAttribute(INHERIT)\n                && Boolean.valueOf(element.getAttribute(INHERIT)).booleanValue())\n        {\n            return named;\n        }\n        else\n        {\n            return orphan;\n        }\n    }","id":52375,"modified_method":"protected DelegateDefinitionParser getDelegate(Element element, ParserContext parserContext)\n    {\n        // i'm not sure why this is suddenly necessary here and not elsewhere.\n        // perhaps because this is used on the top level but has name deleted?\n        AutoIdUtils.ensureUniqueId(element);\n        if (null != element && element.hasAttribute(INHERIT)\n                && Boolean.valueOf(element.getAttribute(INHERIT)).booleanValue())\n        {\n            return named;\n        }\n        else\n        {\n            return orphan;\n        }\n    }","commit_id":"0b3161c3ceb882e71d2ce8dbce84a52bd701d45c","url":"https://github.com/mulesoft/mule"},{"original_method":"public BeanDefinition parseCustomElement(Element ele, BeanDefinition containingBd)\n    {\n        BeanDefinition root;\n        BeanDefinition bd = containingBd;\n\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"parsing: \" + writeNode(ele));\n        }\n\n        //If element is not a Spring property element, use a custom handler\n        if(!tryParsingSpringPropertyElements(ele, bd))\n        {\n            String namespaceUri = ele.getNamespaceURI();\n            NamespaceHandler handler = getReaderContext().getNamespaceHandlerResolver().resolve(namespaceUri);\n            if (handler == null)\n            {\n                getReaderContext().error(\"Unable to locate NamespaceHandler for namespace [\" + namespaceUri + \"]\", ele);\n                return null;\n            }\n            bd = handler.parse(ele, new ParserContext(getReaderContext(), this, containingBd));\n            registerBean(ele, bd);\n        }\n        root = bd;\n\n        // Only iterate and parse child mule name-spaced elements. Spring does not do\n        // hierarchical parsing by default so we need to maintain this behavior\n        // for non-mule elements to ensure that we don't break the parsing of any\n        // other custom name-spaces e.g spring-jee\n        String ns = ele.getNamespaceURI();\n        if (ns != null && ns.startsWith(MULE_NAMESPACE_PREFIX))\n        {\n            //Grab all nested elements lised as children to this element\n            NodeList list = ele.getChildNodes();\n            for (int i = 0; i < list.getLength() ; i++)\n            {\n                if(list.item(i) instanceof Element)\n                {\n                    Element element = (Element) list.item(i);\n    \n                    if (logger.isDebugEnabled()) {\n                        logger.debug(\"parsing: \" + writeNode(element));\n                    }\n                    if (!tryParsingSpringPropertyElements(element, bd))\n                    {\n                        bd = parseCustomElement(element, bd);\n                        registerBean(element, bd);\n                    }\n                }\n            }\n        }\n        return root;\n    }","id":52376,"modified_method":"public BeanDefinition parseCustomElement(Element element, BeanDefinition parent)\n    {\n        if (logger.isDebugEnabled())\n        {\n            logger.debug(\"parsing: \" + elementToString(element));\n        }\n        if (delegateSpringElements(element, parent))\n        {\n            return parent;\n        }\n        else\n        {\n            String namespaceUri = element.getNamespaceURI();\n            NamespaceHandler handler = getReaderContext().getNamespaceHandlerResolver().resolve(namespaceUri);\n            if (handler == null)\n            {\n                getReaderContext().error(\"Unable to locate NamespaceHandler for namespace [\" + namespaceUri + \"]\", element);\n                return null;\n            }\n            BeanDefinition child = handler.parse(element, new ParserContext(getReaderContext(), this, parent));\n            registerBean(element, child);\n\n            // Only iterate and parse child mule name-spaced elements. Spring does not do\n            // hierarchical parsing by default so we need to maintain this behavior\n            // for non-mule elements to ensure that we don't break the parsing of any\n            // other custom name-spaces e.g spring-jee\n            if (isMuleNamespace(element))\n            {\n                NodeList list = element.getChildNodes();\n                for (int i = 0; i < list.getLength() ; i++)\n                {\n                    if(list.item(i) instanceof Element)\n                    {\n                        parseCustomElement((Element) list.item(i), child);\n                    }\n                }\n            }\n            return child;\n        }\n    }","commit_id":"0b3161c3ceb882e71d2ce8dbce84a52bd701d45c","url":"https://github.com/mulesoft/mule"},{"original_method":"protected void registerBean(Element ele, BeanDefinition bd)\n    {\n        if (bd == null)\n        {\n            return;\n        }\n        //Check to see if the Bean Definition represents a compound element - one represents a subset of\n        //configuration for the parent bean. Compound bean definitions should not be registered since the properties\n        //set on them are really set on the parent bean.\n        Boolean compoundElement = (Boolean)bd.getAttribute(ParentDefinitionParser.COMPOUND_ELEMENT);\n        if(Boolean.TRUE.equals(compoundElement))\n        {\n            return;\n        }\n\n        String name =  generateChildBeanName(ele);\n        BeanDefinitionHolder bdHolder = new BeanDefinitionHolder(bd, name);\n\n        //bdHolder = decorateBeanDefinitionIfRequired(ele, bdHolder);\n        // Register the final decorated instance.\n        BeanDefinitionReaderUtils.registerBeanDefinition(bdHolder, getReaderContext().getRegistry());\n        // Send registration event.\n        getReaderContext().fireComponentRegistered(new BeanComponentDefinition(bdHolder));\n    }","id":52377,"modified_method":"protected void registerBean(Element ele, BeanDefinition bd)\n    {\n        if (bd == null)\n        {\n            return;\n        }\n        //Check to see if the Bean Definition represents a compound element - one represents a subset of\n        //configuration for the parent bean. Compound bean definitions should not be registered since the properties\n        //set on them are really set on the parent bean.\n        Boolean compoundElement = (Boolean)bd.getAttribute(ParentDefinitionParser.COMPOUND_ELEMENT);\n        if(Boolean.TRUE.equals(compoundElement))\n        {\n            return;\n        }\n\n        String name =  generateChildBeanName(ele);\n        registerBeanDefinitionHolder(new BeanDefinitionHolder(bd, name));\n    }","commit_id":"0b3161c3ceb882e71d2ce8dbce84a52bd701d45c","url":"https://github.com/mulesoft/mule"},{"original_method":"protected boolean tryParsingSpringPropertyElements(Element element, BeanDefinition bd)\n    {\n        //We add the Spting propertyType to the mule.xsd schema so property elements must match the\n        //mule namespace URI for this custom parser to process them\n        String ns = (element.getNamespaceURI());\n        if (StringUtils.isNotBlank(ns) && ns.startsWith(MULE_DEFAULT_NAMESPACE))\n        {\n            if (PROPERTY_ELEMENT.equals(element.getLocalName()))\n            {\n                parsePropertyElement(element, bd);\n                return true;\n            }\n            else if (MAP_ELEMENT.equals(element.getLocalName()))\n            {\n                parseMapElement(element, bd);\n                return true;\n            }\n            else if (LIST_ELEMENT.equals(element.getLocalName()))\n            {\n                parseListElement(element, bd);\n                return true;\n            }\n            else if (SET_ELEMENT.equals(element.getLocalName()))\n            {\n                parseSetElement(element, bd);\n                return true;\n            }\n\n        }\n        //This is a slight hack since if we get a spring namespaced element here it means that we have a Mule element\n        //that has a spring element embedded. This is not ideal, and we could just mandate that nested spring properties\n        //within Mule elements should always use the mule namespace.\n        //Currently only property collections (such as on the <mule:endpoint>) will hit this code\n        else if(BEANS_NAMESPACE_URI.equals(ns))\n        {\n            return true;\n        }\n        return false;\n    }","id":52378,"modified_method":"protected boolean delegateSpringElements(Element element, BeanDefinition bd)\n    {\n        if (! isBeansNamespace(element))\n        {\n            return false;\n        }\n        \n        if (isLocalName(element, PROPERTY_ELEMENT))\n        {\n            parsePropertyElement(element, bd);\n        }\n        else if (isLocalName(element, MAP_ELEMENT))\n        {\n            parseMapElement(element, bd);\n        }\n        else if (isLocalName(element, LIST_ELEMENT))\n        {\n            parseListElement(element, bd);\n        }\n        else if (isLocalName(element, SET_ELEMENT))\n        {\n            parseSetElement(element, bd);\n        }\n        else if (isLocalName(element, BEAN_ELEMENT))\n        {\n            registerBeanDefinitionHolder(parseBeanDefinitionElement(element, bd));\n        }\n        else if (logger.isWarnEnabled())\n        {\n            // perhaps should we fail here\n            logger.warn(\"Unexpected Spring element: \" + elementToString(element));\n        }\n        return true;\n    }","commit_id":"0b3161c3ceb882e71d2ce8dbce84a52bd701d45c","url":"https://github.com/mulesoft/mule"},{"original_method":"public void init()\n    {\n        //Common elements\n        registerBeanDefinitionParser(\"configuration\", new ConfigurationDefinitionParser());\n        registerBeanDefinitionParser(\"environment-properties\", new OrphanMapDefinitionParser(HashMap.class, MuleProperties.OBJECT_MULE_APPLICATION_PROPERTIES));\n        registerBeanDefinitionParser(\"default-threading-profile\", new ThreadingProfileDefinitionParser(\"defaultThreadingProfile\"));\n        registerBeanDefinitionParser(\"default-dispatcher-threading-profile\", new ThreadingProfileDefinitionParser(\"defaultMessageDispatcherThreadingProfile\"));\n        registerBeanDefinitionParser(\"default-receiver-threading-profile\", new ThreadingProfileDefinitionParser(\"defaultMessageReceiverThreadingProfile\"));\n        registerBeanDefinitionParser(\"default-dispatcher-connection-strategy\", new ConnectionStrategyDefinitionParser());\n        registerBeanDefinitionParser(\"default-receiver-connection-strategy\", new ConnectionStrategyDefinitionParser());\n\n        //registerBeanDefinitionParser(\"mule-configuration\", new ManagementContextDefinitionParser());\n        registerBeanDefinitionParser(\"threading-profile\", new ThreadingProfileDefinitionParser(\"threadingProfile\"));\n        registerBeanDefinitionParser(\"custom-exception-strategy\", new ChildDefinitionParser(\"exceptionListener\", null));\n        registerBeanDefinitionParser(\"default-component-exception-strategy\", new ChildDefinitionParser(\"exceptionListener\", DefaultComponentExceptionStrategy.class));\n        registerBeanDefinitionParser(\"default-connector-exception-strategy\", new ChildDefinitionParser(\"exceptionListener\", DefaultExceptionStrategy.class));\n        registerBeanDefinitionParser(\"pooling-profile\", new PoolingProfileDefinitionParser());\n        registerBeanDefinitionParser(\"queue-profile\", new ChildDefinitionParser(\"queueProfile\", QueueProfile.class));\n\n        //Connector elements\n        registerBeanDefinitionParser(\"dispatcher-threading-profile\", new ThreadingProfileDefinitionParser(\"dispatcherThreadingProfile\"));\n        registerBeanDefinitionParser(\"receiver-threading-profile\", new ThreadingProfileDefinitionParser(\"receiverThreadingProfile\"));\n        registerBeanDefinitionParser(\"dispatcher-connection-straqtegy\", new ConnectionStrategyDefinitionParser(\"dispatcherConnectionStrategy\"));\n        registerBeanDefinitionParser(\"receiver-connection-straqtegy\", new ConnectionStrategyDefinitionParser(\"receiverConnectionStrategy\"));\n        registerBeanDefinitionParser(\"service-overrides\", new ServiceOverridesDefinitionParser());\n        registerBeanDefinitionParser(\"custom-connector\", new OrphanDefinitionParser(true));\n\n        //Transformer elements\n        registerBeanDefinitionParser(\"custom-transformer\", new OrphanDefinitionParser(false));\n        registerBeanDefinitionParser(\"transformer-no-action\", new OrphanDefinitionParser(NoActionTransformer.class, false));\n\n        registerBeanDefinitionParser(\"transformer-base64-encoder\", new OrphanDefinitionParser(Base64Encoder.class, false));\n        registerBeanDefinitionParser(\"transformer-base64-decoder\", new OrphanDefinitionParser(Base64Decoder.class, false));\n\n        registerBeanDefinitionParser(\"transformer-xml-entity-encoder\", new OrphanDefinitionParser(XmlEntityEncoder.class, false));\n        registerBeanDefinitionParser(\"transformer-xml-entity-decoder\", new OrphanDefinitionParser(XmlEntityDecoder.class, false));\n        registerBeanDefinitionParser(\"transformer-gzip-compress\", new OrphanDefinitionParser(GZipCompressTransformer.class, false));\n        registerBeanDefinitionParser(\"transformer-gzip-uncompress\", new OrphanDefinitionParser(GZipUncompressTransformer.class, false));\n        registerBeanDefinitionParser(\"transformer-encrypt\", new OrphanDefinitionParser(EncryptionTransformer.class, false));\n        registerBeanDefinitionParser(\"transformer-decrypt\", new OrphanDefinitionParser(DecryptionTransformer.class, false));\n        registerBeanDefinitionParser(\"transformer-byte-array-to-hex-string\", new OrphanDefinitionParser(ByteArrayToHexString.class, false));\n        registerBeanDefinitionParser(\"transformer-hex-sting-to-byte-array\", new OrphanDefinitionParser(HexStringToByteArray.class, false));\n\n        registerBeanDefinitionParser(\"transformer-byte-array-to-object\", new OrphanDefinitionParser(ByteArrayToObject.class, false));\n        registerBeanDefinitionParser(\"transformer-object-to-byte-array\", new OrphanDefinitionParser(ObjectToByteArray.class, false));\n        registerBeanDefinitionParser(\"transformer-byte-array-to-serializable\", new OrphanDefinitionParser(ByteArrayToSerializable.class, false));\n        registerBeanDefinitionParser(\"transformer-serializable-to-byte-array\", new OrphanDefinitionParser(SerializableToByteArray.class, false));\n        registerBeanDefinitionParser(\"transformer-byte-array-to-string\", new OrphanDefinitionParser(ByteArrayToString.class, false));\n        registerBeanDefinitionParser(\"transformer-string-to-byte-array\", new OrphanDefinitionParser(StringToByteArray.class, false));\n\n        //Transaction Managers\n        //TODO RM*: Need to review these, since Spring have some facilities for configuring the transactionManager\n        registerBeanDefinitionParser(\"custom-transaction-manager\", new OrphanDefinitionParser(true));\n        registerBeanDefinitionParser(\"transaction-manager-jndi\", new OrphanDefinitionParser(GenericTransactionManagerLookupFactory.class, true));\n        registerBeanDefinitionParser(\"transaction-manager-weblogic\", new OrphanDefinitionParser(WeblogicTransactionManagerLookupFactory.class, true));\n        registerBeanDefinitionParser(\"transaction-manager-jboss\", new OrphanDefinitionParser(JBossTransactionManagerLookupFactory.class, true));\n        registerBeanDefinitionParser(\"transaction-manager-jrun\", new OrphanDefinitionParser(JRunTransactionManagerLookupFactory.class, true));\n        registerBeanDefinitionParser(\"transaction-manager-resin\", new OrphanDefinitionParser(Resin3TransactionManagerLookupFactory.class, true));\n        registerBeanDefinitionParser(\"transaction-manager-websphere\", new OrphanDefinitionParser(WebsphereTransactionManagerLookupFactory.class, true));\n\n        //Endpoint elements\n        registerBeanDefinitionParser(\"endpoint\", new EndpointDefinitionParser());\n        registerBeanDefinitionParser(\"transaction\", new TransactionConfigDefinitionParser());\n        registerBeanDefinitionParser(\"transaction-factory\", new ObjectFactoryDefinitionParser(\"factory\"));\n\n        //Container contexts\n        registerBeanDefinitionParser(\"custom-container\", new OrphanDefinitionParser(true));\n        registerBeanDefinitionParser(\"rmi-container\", new OrphanDefinitionParser(RmiContainerContext.class, true));\n        registerBeanDefinitionParser(\"jndi-container\", new OrphanDefinitionParser(JndiContainerContext.class, true));\n        registerBeanDefinitionParser(\"properties-container\", new OrphanDefinitionParser(PropertiesContainerContext.class, true));\n\n        //Model Elements\n        registerBeanDefinitionParser(\"model\", new InheritDefinitionParser(new OrphanDefinitionParser(SedaModel.class, true), new NamedDefinitionParser()));\n//        registerBeanDefinitionParser(\"model-seda-optimised\", new OrphanDefinitionParser(OptimisedSedaModel.class, true));\n//        registerBeanDefinitionParser(\"model-pipeline\", new OrphanDefinitionParser(PipelineModel.class, true));\n\n        registerBeanDefinitionParser(\"callable-entrypoint-resolver\", new ChildDefinitionParser(\"entryPointResolver\", CallableEntryPointResolver.class));\n        registerBeanDefinitionParser(\"custom-entrypoint-resolver\", new ChildDefinitionParser(\"entryPointResolver\", null));\n        //registerBeanDefinitionParser(\"method-entrypoint-resolver\", new ChildDefinitionParser(\"entrypointResolver\", MethodEntryPointResolver.class));\n        //registerBeanDefinitionParser(\"reflection-entrypoint-resolver\", new ChildDefinitionParser(\"entrypointResolver\", MethodEntryPointResolver.class));\n        //registerBeanDefinitionParser(\"non-void-entrypoint-resolver\", new ChildDefinitionParser(\"entrypointResolver\", NonVoidEntryPointResolver.class));\n\n        //Service Elements\n        registerBeanDefinitionParser(\"service\", new ServiceDescriptorDefinitionParser());\n        registerBeanDefinitionParser(\"component\", new ComponentDefinitionParser(\"serviceFactory\"));\n        registerBeanDefinitionParser(\"bridge-component\", new SimpleComponentDefinitionParser(\"serviceFactory\", BridgeComponent.class));\n        registerBeanDefinitionParser(\"log-component\", new SimpleComponentDefinitionParser(\"serviceFactory\", LogComponent.class));\n        registerBeanDefinitionParser(\"echo-component\", new SimpleComponentDefinitionParser(\"serviceFactory\", EchoComponent.class));\n        registerBeanDefinitionParser(\"null-component\", new SimpleComponentDefinitionParser(\"serviceFactory\", NullComponent.class));\n        registerBeanDefinitionParser(\"inbound-router\", new ChildDefinitionParser(\"inboundRouter\", InboundRouterCollection.class));\n        registerBeanDefinitionParser(\"outbound-router\", new ChildDefinitionParser(\"outboundRouter\", OutboundRouterCollection.class));\n        registerBeanDefinitionParser(\"nested-router\", new ChildDefinitionParser(\"nestedRouter\", NestedRouterCollection.class));\n        registerBeanDefinitionParser(\"response-router\", new ChildDefinitionParser(\"responseRouter\", ResponseRouterCollection.class));\n\n        //Inbound Routers\n        registerBeanDefinitionParser(\"inbound-pass-through-router\", new RouterDefinitionParser(\"router\", InboundPassThroughRouter.class));\n        registerBeanDefinitionParser(\"idempotent-receiver-router\", new RouterDefinitionParser(\"router\", IdempotentReceiver.class));\n        registerBeanDefinitionParser(\"idempotent-secure-hash-receiver-router\", new RouterDefinitionParser(\"router\", IdempotentSecureHashReceiver.class));\n        registerBeanDefinitionParser(\"selective-consumer-router\", new RouterDefinitionParser(\"router\", SelectiveConsumer.class));\n        registerBeanDefinitionParser(\"wire-tap-router\", new RouterDefinitionParser(\"router\", WireTap.class));\n        registerBeanDefinitionParser(\"correlation-aggregator-router\", new RouterDefinitionParser(\"router\", CorrelationAggregator.class));\n        registerBeanDefinitionParser(\"message-chunking-aggregator-router\", new RouterDefinitionParser(\"router\", MessageChunkingAggregator.class));\n        registerBeanDefinitionParser(\"correlation-resequencer-router\", new RouterDefinitionParser(\"router\", CorrelationEventResequencer.class));\n        registerBeanDefinitionParser(\"custom-inbound-router\", new RouterDefinitionParser(\"router\", null));\n\n        //Nested binding\n        registerBeanDefinitionParser(\"binding\", new RouterDefinitionParser(\"router\", NestedRouter.class));\n\n        //Outbound Routers\n        registerBeanDefinitionParser(\"outbound-pass-through-router\", new RouterDefinitionParser(\"router\", OutboundPassThroughRouter.class));\n        registerBeanDefinitionParser(\"filtering-router\", new RouterDefinitionParser(\"router\", FilteringOutboundRouter.class));\n        registerBeanDefinitionParser(\"chaining-router\", new RouterDefinitionParser(\"router\", ChainingRouter.class));\n        registerBeanDefinitionParser(\"endpoint-selector-router\", new RouterDefinitionParser(\"router\", EndpointSelector.class));\n        registerBeanDefinitionParser(\"exception-based-router\", new RouterDefinitionParser(\"router\", ExceptionBasedRouter.class));\n        registerBeanDefinitionParser(\"list-message-splitter-router\", new RouterDefinitionParser(\"router\", FilteringListMessageSplitter.class));\n        registerBeanDefinitionParser(\"message-chunking-router\", new RouterDefinitionParser(\"router\", MessageChunkingRouter.class));\n        registerBeanDefinitionParser(\"multicasting-router\", new RouterDefinitionParser(\"router\", MulticastingRouter.class));\n        registerBeanDefinitionParser(\"static-recipient-list-router\", new RouterDefinitionParser(\"router\", StaticRecipientList.class));\n        registerBeanDefinitionParser(\"template-endpoint-router\", new RouterDefinitionParser(\"router\", TemplateEndpointRouter.class));\n        registerBeanDefinitionParser(\"custom-outbound-router\", new RouterDefinitionParser(\"router\", null));\n        registerBeanDefinitionParser(\"reply-to\", new ParentDefinitionParser().addAlias(\"address\", \"replyTo\"));\n\n        //Response Routers\n        registerBeanDefinitionParser(\"custom-response-router\", new RouterDefinitionParser(\"router\", null));\n\n        //Property Extractors\n        registerBeanDefinitionParser(\"bean-property-extractor\", new ChildDefinitionParser(\"propertyExtractor\", BeanPropertyExtractor.class));\n        registerBeanDefinitionParser(\"correlation-property-extractor\", new ChildDefinitionParser(\"propertyExtractor\", CorrelationPropertiesExtractor.class));\n        registerBeanDefinitionParser(\"custom-property-extractor\", new ObjectFactoryDefinitionParser(\"propertyExtractor\"));\n        registerBeanDefinitionParser(\"map-property-extractor\", new ChildDefinitionParser(\"propertyExtractor\", MapPropertyExtractor.class));\n        registerBeanDefinitionParser(\"message-property-extractor\", new ChildDefinitionParser(\"propertyExtractor\", MessagePropertyExtractor.class));\n        registerBeanDefinitionParser(\"payload-property-extractor\", new ChildDefinitionParser(\"propertyExtractor\", PayloadPropertyExtractor.class));\n\n        //Catch all Strategies\n        registerBeanDefinitionParser(\"forwarding-catch-all-strategy\", new ChildDefinitionParser(\"catchAllStrategy\", ForwardingCatchAllStrategy.class));\n        registerBeanDefinitionParser(\"custom-catch-all-strategy\", new ChildDefinitionParser(\"catchAllStrategy\", null));\n        registerBeanDefinitionParser(\"logging-catch-all-strategy\", new ChildDefinitionParser(\"catchAllStrategy\", LoggingCatchAllStrategy.class));\n\n        //Common Filters\n        registerBeanDefinitionParser(\"and-filter\", new FilterDefinitionParser(AndFilter.class));\n        registerBeanDefinitionParser(\"or-filter\", new FilterDefinitionParser(OrFilter.class));\n        registerBeanDefinitionParser(\"not-filter\", new FilterDefinitionParser(NotFilter.class));\n        registerBeanDefinitionParser(\"regex-filter\", new FilterDefinitionParser(RegExFilter.class));\n        registerBeanDefinitionParser(\"exception-type-filter\", new FilterDefinitionParser(ExceptionTypeFilter.class));\n        registerBeanDefinitionParser(\"message-property-filter\", new FilterDefinitionParser(MessagePropertyFilter.class));\n        registerBeanDefinitionParser(\"payload-type-filter\", new FilterDefinitionParser(PayloadTypeFilter.class));\n        registerBeanDefinitionParser(\"wildcard-filter\", new FilterDefinitionParser(WildcardFilter.class));\n        registerBeanDefinitionParser(\"equals-filter\", new FilterDefinitionParser(EqualsFilter.class));\n        registerBeanDefinitionParser(\"custom-filter\", new FilterDefinitionParser());\n\n        //Retry strategies\n        registerBeanDefinitionParser(\"retry-connection-strategy\", new ChildDefinitionParser(\"connectionStrategy\", SimpleRetryConnectionStrategy.class));\n\n        //Utils / Standard Types\n        registerBeanDefinitionParser(\"properties\", new ChildMapDefinitionParser(\"properties\"));\n        registerBeanDefinitionParser(\"meta-info\", new ChildMapDefinitionParser(\"properties\"));\n        registerBeanDefinitionParser(\"jndi-provider-properties\", new ChildMapDefinitionParser(\"jndiProviderProperties\"));\n        registerBeanDefinitionParser(\"environment\", new ChildMapDefinitionParser(\"environment\"));\n\n        //Security\n        registerBeanDefinitionParser(\"security-manager\", new NamedDefinitionParser(MuleProperties.OBJECT_SECURITY_MANAGER).addIgnored(\"type\"));\n        registerBeanDefinitionParser(\"custom-security-provider\", new NameTransferDefinitionParser(\"providers\"));\n        registerBeanDefinitionParser(\"custom-encryption-strategy\", new NameTransferDefinitionParser(\"encryptionStrategies\").addAlias(\"strategy\", \"encryptionStrategy\"));\n        registerBeanDefinitionParser(\"password-encryption-strategy\", new ChildDefinitionParser(\"encryptionStrategy\", PasswordBasedEncryptionStrategy.class));\n        registerBeanDefinitionParser(\"secret-key-encryption-strategy\", new ChildDefinitionParser(\"encryptionStrategy\", SecretKeyEncryptionStrategy.class));\n        registerBeanDefinitionParser(\"encryption-security-filter\", new ChildDefinitionParser(\"securityFilter\", MuleEncryptionEndpointSecurityFilter.class));\n    }","id":52379,"modified_method":"public void init()\n    {\n        registerIgnoredElement(\"mule\");\n        registerIgnoredElement(\"other\");\n        registerIgnoredElement(\"description\");\n\n        //Common elements\n        registerBeanDefinitionParser(\"configuration\", new ConfigurationDefinitionParser());\n        registerBeanDefinitionParser(\"environment-properties\", new OrphanMapDefinitionParser(HashMap.class, MuleProperties.OBJECT_MULE_APPLICATION_PROPERTIES));\n        registerBeanDefinitionParser(\"default-threading-profile\", new ThreadingProfileDefinitionParser(\"defaultThreadingProfile\"));\n        registerBeanDefinitionParser(\"default-dispatcher-threading-profile\", new ThreadingProfileDefinitionParser(\"defaultMessageDispatcherThreadingProfile\"));\n        registerBeanDefinitionParser(\"default-receiver-threading-profile\", new ThreadingProfileDefinitionParser(\"defaultMessageReceiverThreadingProfile\"));\n        registerBeanDefinitionParser(\"default-dispatcher-connection-strategy\", new ConnectionStrategyDefinitionParser());\n        registerBeanDefinitionParser(\"default-receiver-connection-strategy\", new ConnectionStrategyDefinitionParser());\n\n        //registerBeanDefinitionParser(\"mule-configuration\", new ManagementContextDefinitionParser());\n        registerBeanDefinitionParser(\"threading-profile\", new ThreadingProfileDefinitionParser(\"threadingProfile\"));\n        registerBeanDefinitionParser(\"custom-exception-strategy\", new ChildDefinitionParser(\"exceptionListener\", null));\n        registerBeanDefinitionParser(\"default-component-exception-strategy\", new ChildDefinitionParser(\"exceptionListener\", DefaultComponentExceptionStrategy.class));\n        registerBeanDefinitionParser(\"default-connector-exception-strategy\", new ChildDefinitionParser(\"exceptionListener\", DefaultExceptionStrategy.class));\n        registerBeanDefinitionParser(\"pooling-profile\", new PoolingProfileDefinitionParser());\n        registerBeanDefinitionParser(\"queue-profile\", new ChildDefinitionParser(\"queueProfile\", QueueProfile.class));\n\n        //Connector elements\n        registerBeanDefinitionParser(\"dispatcher-threading-profile\", new ThreadingProfileDefinitionParser(\"dispatcherThreadingProfile\"));\n        registerBeanDefinitionParser(\"receiver-threading-profile\", new ThreadingProfileDefinitionParser(\"receiverThreadingProfile\"));\n        registerBeanDefinitionParser(\"dispatcher-connection-straqtegy\", new ConnectionStrategyDefinitionParser(\"dispatcherConnectionStrategy\"));\n        registerBeanDefinitionParser(\"receiver-connection-straqtegy\", new ConnectionStrategyDefinitionParser(\"receiverConnectionStrategy\"));\n        registerBeanDefinitionParser(\"service-overrides\", new ServiceOverridesDefinitionParser());\n        registerBeanDefinitionParser(\"custom-connector\", new OrphanDefinitionParser(true));\n\n        //Transformer elements\n        registerBeanDefinitionParser(\"custom-transformer\", new OrphanDefinitionParser(false));\n        registerBeanDefinitionParser(\"transformer-no-action\", new OrphanDefinitionParser(NoActionTransformer.class, false));\n\n        registerBeanDefinitionParser(\"transformer-base64-encoder\", new OrphanDefinitionParser(Base64Encoder.class, false));\n        registerBeanDefinitionParser(\"transformer-base64-decoder\", new OrphanDefinitionParser(Base64Decoder.class, false));\n\n        registerBeanDefinitionParser(\"transformer-xml-entity-encoder\", new OrphanDefinitionParser(XmlEntityEncoder.class, false));\n        registerBeanDefinitionParser(\"transformer-xml-entity-decoder\", new OrphanDefinitionParser(XmlEntityDecoder.class, false));\n        registerBeanDefinitionParser(\"transformer-gzip-compress\", new OrphanDefinitionParser(GZipCompressTransformer.class, false));\n        registerBeanDefinitionParser(\"transformer-gzip-uncompress\", new OrphanDefinitionParser(GZipUncompressTransformer.class, false));\n        registerBeanDefinitionParser(\"transformer-encrypt\", new OrphanDefinitionParser(EncryptionTransformer.class, false));\n        registerBeanDefinitionParser(\"transformer-decrypt\", new OrphanDefinitionParser(DecryptionTransformer.class, false));\n        registerBeanDefinitionParser(\"transformer-byte-array-to-hex-string\", new OrphanDefinitionParser(ByteArrayToHexString.class, false));\n        registerBeanDefinitionParser(\"transformer-hex-sting-to-byte-array\", new OrphanDefinitionParser(HexStringToByteArray.class, false));\n\n        registerBeanDefinitionParser(\"transformer-byte-array-to-object\", new OrphanDefinitionParser(ByteArrayToObject.class, false));\n        registerBeanDefinitionParser(\"transformer-object-to-byte-array\", new OrphanDefinitionParser(ObjectToByteArray.class, false));\n        registerBeanDefinitionParser(\"transformer-byte-array-to-serializable\", new OrphanDefinitionParser(ByteArrayToSerializable.class, false));\n        registerBeanDefinitionParser(\"transformer-serializable-to-byte-array\", new OrphanDefinitionParser(SerializableToByteArray.class, false));\n        registerBeanDefinitionParser(\"transformer-byte-array-to-string\", new OrphanDefinitionParser(ByteArrayToString.class, false));\n        registerBeanDefinitionParser(\"transformer-string-to-byte-array\", new OrphanDefinitionParser(StringToByteArray.class, false));\n\n        //Transaction Managers\n        //TODO RM*: Need to review these, since Spring have some facilities for configuring the transactionManager\n        registerBeanDefinitionParser(\"custom-transaction-manager\", new OrphanDefinitionParser(true));\n        registerBeanDefinitionParser(\"transaction-manager-jndi\", new OrphanDefinitionParser(GenericTransactionManagerLookupFactory.class, true));\n        registerBeanDefinitionParser(\"transaction-manager-weblogic\", new OrphanDefinitionParser(WeblogicTransactionManagerLookupFactory.class, true));\n        registerBeanDefinitionParser(\"transaction-manager-jboss\", new OrphanDefinitionParser(JBossTransactionManagerLookupFactory.class, true));\n        registerBeanDefinitionParser(\"transaction-manager-jrun\", new OrphanDefinitionParser(JRunTransactionManagerLookupFactory.class, true));\n        registerBeanDefinitionParser(\"transaction-manager-resin\", new OrphanDefinitionParser(Resin3TransactionManagerLookupFactory.class, true));\n        registerBeanDefinitionParser(\"transaction-manager-websphere\", new OrphanDefinitionParser(WebsphereTransactionManagerLookupFactory.class, true));\n\n        //Endpoint elements\n        registerBeanDefinitionParser(\"endpoint\", new EndpointDefinitionParser());\n        registerBeanDefinitionParser(\"transaction\", new TransactionConfigDefinitionParser());\n        registerBeanDefinitionParser(\"transaction-factory\", new ObjectFactoryDefinitionParser(\"factory\"));\n\n        //Container contexts\n        registerBeanDefinitionParser(\"custom-container\", new OrphanDefinitionParser(true));\n        registerBeanDefinitionParser(\"rmi-container\", new OrphanDefinitionParser(RmiContainerContext.class, true));\n        registerBeanDefinitionParser(\"jndi-container\", new OrphanDefinitionParser(JndiContainerContext.class, true));\n        registerBeanDefinitionParser(\"properties-container\", new OrphanDefinitionParser(PropertiesContainerContext.class, true));\n\n        //Model Elements\n        registerBeanDefinitionParser(\"model\", new InheritDefinitionParser(new OrphanDefinitionParser(SedaModel.class, true), new NamedDefinitionParser()));\n//        registerBeanDefinitionParser(\"model-seda-optimised\", new OrphanDefinitionParser(OptimisedSedaModel.class, true));\n//        registerBeanDefinitionParser(\"model-pipeline\", new OrphanDefinitionParser(PipelineModel.class, true));\n\n        registerBeanDefinitionParser(\"callable-entrypoint-resolver\", new ChildDefinitionParser(\"entryPointResolver\", CallableEntryPointResolver.class));\n        registerBeanDefinitionParser(\"custom-entrypoint-resolver\", new ChildDefinitionParser(\"entryPointResolver\", null));\n        //registerBeanDefinitionParser(\"method-entrypoint-resolver\", new ChildDefinitionParser(\"entrypointResolver\", MethodEntryPointResolver.class));\n        //registerBeanDefinitionParser(\"reflection-entrypoint-resolver\", new ChildDefinitionParser(\"entrypointResolver\", MethodEntryPointResolver.class));\n        //registerBeanDefinitionParser(\"non-void-entrypoint-resolver\", new ChildDefinitionParser(\"entrypointResolver\", NonVoidEntryPointResolver.class));\n\n        //Service Elements\n        registerBeanDefinitionParser(\"service\", new ServiceDescriptorDefinitionParser());\n        registerBeanDefinitionParser(\"component\", new ComponentDefinitionParser(\"serviceFactory\"));\n        registerBeanDefinitionParser(\"bridge-component\", new SimpleComponentDefinitionParser(\"serviceFactory\", BridgeComponent.class));\n        registerBeanDefinitionParser(\"log-component\", new SimpleComponentDefinitionParser(\"serviceFactory\", LogComponent.class));\n        registerBeanDefinitionParser(\"echo-component\", new SimpleComponentDefinitionParser(\"serviceFactory\", EchoComponent.class));\n        registerBeanDefinitionParser(\"null-component\", new SimpleComponentDefinitionParser(\"serviceFactory\", NullComponent.class));\n        registerBeanDefinitionParser(\"inbound-router\", new ChildDefinitionParser(\"inboundRouter\", InboundRouterCollection.class));\n        registerBeanDefinitionParser(\"outbound-router\", new ChildDefinitionParser(\"outboundRouter\", OutboundRouterCollection.class));\n        registerBeanDefinitionParser(\"nested-router\", new ChildDefinitionParser(\"nestedRouter\", NestedRouterCollection.class));\n        registerBeanDefinitionParser(\"response-router\", new ChildDefinitionParser(\"responseRouter\", ResponseRouterCollection.class));\n\n        //Inbound Routers\n        registerBeanDefinitionParser(\"inbound-pass-through-router\", new RouterDefinitionParser(\"router\", InboundPassThroughRouter.class));\n        registerBeanDefinitionParser(\"idempotent-receiver-router\", new RouterDefinitionParser(\"router\", IdempotentReceiver.class));\n        registerBeanDefinitionParser(\"idempotent-secure-hash-receiver-router\", new RouterDefinitionParser(\"router\", IdempotentSecureHashReceiver.class));\n        registerBeanDefinitionParser(\"selective-consumer-router\", new RouterDefinitionParser(\"router\", SelectiveConsumer.class));\n        registerBeanDefinitionParser(\"wire-tap-router\", new RouterDefinitionParser(\"router\", WireTap.class));\n        registerBeanDefinitionParser(\"correlation-aggregator-router\", new RouterDefinitionParser(\"router\", CorrelationAggregator.class));\n        registerBeanDefinitionParser(\"message-chunking-aggregator-router\", new RouterDefinitionParser(\"router\", MessageChunkingAggregator.class));\n        registerBeanDefinitionParser(\"correlation-resequencer-router\", new RouterDefinitionParser(\"router\", CorrelationEventResequencer.class));\n        registerBeanDefinitionParser(\"custom-inbound-router\", new RouterDefinitionParser(\"router\", null));\n\n        //Nested binding\n        registerBeanDefinitionParser(\"binding\", new RouterDefinitionParser(\"router\", NestedRouter.class));\n\n        //Outbound Routers\n        registerBeanDefinitionParser(\"outbound-pass-through-router\", new RouterDefinitionParser(\"router\", OutboundPassThroughRouter.class));\n        registerBeanDefinitionParser(\"filtering-router\", new RouterDefinitionParser(\"router\", FilteringOutboundRouter.class));\n        registerBeanDefinitionParser(\"chaining-router\", new RouterDefinitionParser(\"router\", ChainingRouter.class));\n        registerBeanDefinitionParser(\"endpoint-selector-router\", new RouterDefinitionParser(\"router\", EndpointSelector.class));\n        registerBeanDefinitionParser(\"exception-based-router\", new RouterDefinitionParser(\"router\", ExceptionBasedRouter.class));\n        registerBeanDefinitionParser(\"list-message-splitter-router\", new RouterDefinitionParser(\"router\", FilteringListMessageSplitter.class));\n        registerBeanDefinitionParser(\"message-chunking-router\", new RouterDefinitionParser(\"router\", MessageChunkingRouter.class));\n        registerBeanDefinitionParser(\"multicasting-router\", new RouterDefinitionParser(\"router\", MulticastingRouter.class));\n        registerBeanDefinitionParser(\"static-recipient-list-router\", new RouterDefinitionParser(\"router\", StaticRecipientList.class));\n        registerBeanDefinitionParser(\"template-endpoint-router\", new RouterDefinitionParser(\"router\", TemplateEndpointRouter.class));\n        registerBeanDefinitionParser(\"custom-outbound-router\", new RouterDefinitionParser(\"router\", null));\n        registerBeanDefinitionParser(\"reply-to\", new ParentDefinitionParser().addAlias(\"address\", \"replyTo\"));\n\n        //Response Routers\n        registerBeanDefinitionParser(\"custom-response-router\", new RouterDefinitionParser(\"router\", null));\n\n        //Property Extractors\n        registerBeanDefinitionParser(\"bean-property-extractor\", new ChildDefinitionParser(\"propertyExtractor\", BeanPropertyExtractor.class));\n        registerBeanDefinitionParser(\"correlation-property-extractor\", new ChildDefinitionParser(\"propertyExtractor\", CorrelationPropertiesExtractor.class));\n        registerBeanDefinitionParser(\"custom-property-extractor\", new ObjectFactoryDefinitionParser(\"propertyExtractor\"));\n        registerBeanDefinitionParser(\"map-property-extractor\", new ChildDefinitionParser(\"propertyExtractor\", MapPropertyExtractor.class));\n        registerBeanDefinitionParser(\"message-property-extractor\", new ChildDefinitionParser(\"propertyExtractor\", MessagePropertyExtractor.class));\n        registerBeanDefinitionParser(\"payload-property-extractor\", new ChildDefinitionParser(\"propertyExtractor\", PayloadPropertyExtractor.class));\n\n        //Catch all Strategies\n        registerBeanDefinitionParser(\"forwarding-catch-all-strategy\", new ChildDefinitionParser(\"catchAllStrategy\", ForwardingCatchAllStrategy.class));\n        registerBeanDefinitionParser(\"custom-catch-all-strategy\", new ChildDefinitionParser(\"catchAllStrategy\", null));\n        registerBeanDefinitionParser(\"logging-catch-all-strategy\", new ChildDefinitionParser(\"catchAllStrategy\", LoggingCatchAllStrategy.class));\n\n        //Common Filters\n        registerBeanDefinitionParser(\"and-filter\", new FilterDefinitionParser(AndFilter.class));\n        registerBeanDefinitionParser(\"or-filter\", new FilterDefinitionParser(OrFilter.class));\n        registerBeanDefinitionParser(\"not-filter\", new FilterDefinitionParser(NotFilter.class));\n        registerBeanDefinitionParser(\"regex-filter\", new FilterDefinitionParser(RegExFilter.class));\n        registerBeanDefinitionParser(\"exception-type-filter\", new FilterDefinitionParser(ExceptionTypeFilter.class));\n        registerBeanDefinitionParser(\"message-property-filter\", new FilterDefinitionParser(MessagePropertyFilter.class));\n        registerBeanDefinitionParser(\"payload-type-filter\", new FilterDefinitionParser(PayloadTypeFilter.class));\n        registerBeanDefinitionParser(\"wildcard-filter\", new FilterDefinitionParser(WildcardFilter.class));\n        registerBeanDefinitionParser(\"equals-filter\", new FilterDefinitionParser(EqualsFilter.class));\n        registerBeanDefinitionParser(\"custom-filter\", new FilterDefinitionParser());\n\n        //Retry strategies\n        registerBeanDefinitionParser(\"retry-connection-strategy\", new ChildDefinitionParser(\"connectionStrategy\", SimpleRetryConnectionStrategy.class));\n\n        //Utils / Standard Types\n        registerBeanDefinitionParser(\"properties\", new ChildMapDefinitionParser(\"properties\"));\n        registerBeanDefinitionParser(\"meta-info\", new ChildMapDefinitionParser(\"properties\"));\n        registerBeanDefinitionParser(\"jndi-provider-properties\", new ChildMapDefinitionParser(\"jndiProviderProperties\"));\n        registerBeanDefinitionParser(\"environment\", new ChildMapDefinitionParser(\"environment\"));\n\n        //Security\n        registerBeanDefinitionParser(\"security-manager\", new NamedDefinitionParser(MuleProperties.OBJECT_SECURITY_MANAGER).addIgnored(\"type\"));\n        registerBeanDefinitionParser(\"custom-security-provider\", new NameTransferDefinitionParser(\"providers\"));\n        registerBeanDefinitionParser(\"custom-encryption-strategy\", new NameTransferDefinitionParser(\"encryptionStrategies\").addAlias(\"strategy\", \"encryptionStrategy\"));\n        registerBeanDefinitionParser(\"password-encryption-strategy\", new ChildDefinitionParser(\"encryptionStrategy\", PasswordBasedEncryptionStrategy.class));\n        registerBeanDefinitionParser(\"secret-key-encryption-strategy\", new ChildDefinitionParser(\"encryptionStrategy\", SecretKeyEncryptionStrategy.class));\n        registerBeanDefinitionParser(\"encryption-security-filter\", new ChildDefinitionParser(\"securityFilter\", MuleEncryptionEndpointSecurityFilter.class));\n    }","commit_id":"0b3161c3ceb882e71d2ce8dbce84a52bd701d45c","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testJXPathFilter()\n    {\n        UMOModel model = managementContext.getRegistry().lookupModel(\"xml filter test\");\n        UMOComponent component = model.getComponent(\"filter xml for content\");\n        UMODescriptor descriptor = component.getDescriptor();\n        List routers = descriptor.getOutboundRouter().getRouters();\n        assertEquals(1, routers.size());\n        assertTrue(routers.get(0).getClass().getName(), routers.get(0) instanceof FilteringOutboundRouter);\n        assertTrue(((FilteringOutboundRouter) routers.get(0)).getFilter() instanceof JXPathFilter);\n        JXPathFilter filter = (JXPathFilter) ((FilteringOutboundRouter) routers.get(0)).getFilter();\n        assertEquals(\"filter xml for content\", filter.getExpectedValue());\n        assertEquals(\"/spring:beans/mule:model/mule:service[2]/@name\", filter.getPattern());\n        assertNotNull(filter.getNamespaces());\n        Map namespaces = filter.getNamespaces();\n        assertEquals(2, namespaces.size());\n        assertEquals(\"http://www.springframework.org/schema/beans\", namespaces.get(\"spring\"));\n        assertEquals(\"http://www.mulesource.org/schema/mule/core/2.0\", namespaces.get(\"mule\"));\n    }","id":52380,"modified_method":"public void testJXPathFilter()\n    {\n        UMOModel model = managementContext.getRegistry().lookupModel(\"xml filter test\");\n        UMOComponent component = model.getComponent(\"filter xml for content\");\n        UMODescriptor descriptor = component.getDescriptor();\n        List routers = descriptor.getOutboundRouter().getRouters();\n        assertEquals(1, routers.size());\n        assertTrue(routers.get(0).getClass().getName(), routers.get(0) instanceof FilteringOutboundRouter);\n        assertTrue(((FilteringOutboundRouter) routers.get(0)).getFilter() instanceof JXPathFilter);\n        JXPathFilter filter = (JXPathFilter) ((FilteringOutboundRouter) routers.get(0)).getFilter();\n        assertEquals(\"filter xml for content\", filter.getExpectedValue());\n        assertEquals(\"/mule:mule/mule:model/mule:service[2]/@name\", filter.getPattern());\n        assertNotNull(filter.getNamespaces());\n        Map namespaces = filter.getNamespaces();\n        assertEquals(2, namespaces.size());\n        assertEquals(\"http://www.springframework.org/schema/beans\", namespaces.get(\"spring\"));\n        assertEquals(\"http://www.mulesource.org/schema/mule/core/2.0\", namespaces.get(\"mule\"));\n    }","commit_id":"0b3161c3ceb882e71d2ce8dbce84a52bd701d45c","url":"https://github.com/mulesoft/mule"},{"original_method":"public BeanDefinition parseCustomElement(Element ele, BeanDefinition containingBd)\n    {\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"parsing: \" + writeNode(ele));\n        }\n        BeanDefinition root;\n        String namespaceUri = ele.getNamespaceURI();\n        NamespaceHandler handler = getReaderContext().getNamespaceHandlerResolver().resolve(namespaceUri);\n        if (handler == null)\n        {\n            getReaderContext().error(\"Unable to locate NamespaceHandler for namespace [\" + namespaceUri + \"]\", ele);\n            return null;\n        }\n        BeanDefinition bd = handler.parse(ele, new ParserContext(getReaderContext(), this, containingBd));\n        registerBean(ele, bd);\n\n        root = bd;\n        //Grab all nested elements lised as children to this element\n        NodeList list = ele.getChildNodes();\n        for (int i = 0; i < list.getLength() ; i++)\n        {\n            if(list.item(i) instanceof Element)\n            {\n                Element element = (Element) list.item(i);\n\n                if (logger.isDebugEnabled()) {\n                    logger.debug(\"parsing: \" + writeNode(element));\n                }\n                if (isDefaultNamespace(element.getNamespaceURI()))\n                {\n                    if(PROPERTY_ELEMENT.equals(element.getLocalName()))\n                    {\n                        parsePropertyElement(element, root);\n                    }\n                    else if(MAP_ELEMENT.equals(element.getLocalName()))\n                    {\n                        parseMapElement(element, root);\n                    }\n                    else if(LIST_ELEMENT.equals(element.getLocalName()))\n                    {\n                        parseListElement(element, root);\n                    }\n                    else if(SET_ELEMENT.equals(element.getLocalName()))\n                    {\n                        parseSetElement(element, root);\n                    } \n                }\n                else\n                {\n                    bd = parseCustomElement(element, bd);\n                    registerBean(element, bd);\n                }\n            }\n        }\n        return root;\n    }","id":52381,"modified_method":"public BeanDefinition parseCustomElement(Element ele, BeanDefinition containingBd)\n    {\n        BeanDefinition root;\n        BeanDefinition bd = containingBd;\n\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"parsing: \" + writeNode(ele));\n        }\n\n        //If element is not a Spring property element, use a custom handler\n        if(!tryParsingSpringPropertyElements(ele, bd))\n        {\n            String namespaceUri = ele.getNamespaceURI();\n            NamespaceHandler handler = getReaderContext().getNamespaceHandlerResolver().resolve(namespaceUri);\n            if (handler == null)\n            {\n                getReaderContext().error(\"Unable to locate NamespaceHandler for namespace [\" + namespaceUri + \"]\", ele);\n                return null;\n            }\n            bd = handler.parse(ele, new ParserContext(getReaderContext(), this, containingBd));\n            registerBean(ele, bd);\n        }\n        root = bd;\n\n        //Grab all nested elements lised as children to this element\n        NodeList list = ele.getChildNodes();\n        for (int i = 0; i < list.getLength() ; i++)\n        {\n            if(list.item(i) instanceof Element)\n            {\n                Element element = (Element) list.item(i);\n\n                if (logger.isDebugEnabled()) {\n                    logger.debug(\"parsing: \" + writeNode(element));\n                }\n                if (!tryParsingSpringPropertyElements(element, bd))\n                {\n                    bd = parseCustomElement(element, bd);\n                    registerBean(element, bd);\n                }\n            }\n        }\n        return root;\n    }","commit_id":"8308b049e961dd622c4aa63ec9a4d06e7929687c","url":"https://github.com/mulesoft/mule"},{"original_method":"private Set<TrackerNode> getDependents(Set<TrackerNode> parentnodes, String prop) {\n\t\tfinal Set<TrackerNode> kidnodes = new HashSet<TrackerNode>();\n\t\tfor (TrackerNode node : parentnodes) {\n\t\t\tfinal TrackerNode kid = node.getDependent(prop);\n\t\t\tif (kid != null) {\n\t\t\t\tkidnodes.add(kid);\n\t\t\t}\n\t\t}\n\t\treturn kidnodes;\n\t}","id":52382,"modified_method":"private Set<TrackerNode> getDependents(Set<TrackerNode> parentnodes, String prop) {\n\t\tfinal Set<TrackerNode> kidnodes = new HashSet<TrackerNode>();\n\t\tfor (TrackerNode node : parentnodes) {\n\t\t\tfor (TrackerNode kid : node.getDependents(prop)) {\n\t\t\t\tif (kid != null) {\n\t\t\t\t\tkidnodes.add(kid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn kidnodes;\n\t}","commit_id":"9e947020626f58c85ba3eed39f3ddafc4d241e2e","url":"https://github.com/zkoss/zk"},{"original_method":"public void tieValue(Object comp, Object base, Object script, Object propName, Object value) {\n\t\tif (base == null) { //track from component\n\t\t\tfinal TrackerNode node = getTrackerNodePerComponentScript(comp, script);\n\t\t\t//ZK-877: NPE in a save only binding\n\t\t\t//No corresponding LoadBinding with the head script in the specified component. \n\t\t\tif (node != null) {\n\t\t\t\tif (value != null) {\n\t\t\t\t\taddBeanMap(node, value);\n\t\t\t\t} else {\n\t\t\t\t\tremoveAllBeanMap(node); //dependent nodes shall be null, too. Remove them from _beanMap \n\t\t\t\t\taddNullMap(node); //head TrackerNode evaluate to null\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfinal Set<TrackerNode> baseNodes = getAllTrackerNodesByBean(base);\n\t\t\tif (baseNodes != null) { //FormBinding will keep base nodes only (so no associated dependent nodes)\n\t\t\t\tfinal Set<TrackerNode> propNodes = new LinkedHashSet<TrackerNode>(); //normal nodes; i.e. a base + property node. e.g. vm.selectedPerson\n\t\t\t\tfor (TrackerNode baseNode : baseNodes) {\n\t\t\t\t\tfinal TrackerNode node = baseNode.getDependent(script);\n\t\t\t\t\tif (node == null) { //FormBinding will keep base nodes only (so no associated dependent nodes)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tpropNodes.add(node);\n\t\t\t\t\tif (BindELContext.isBracket((String)script)) {\n\t\t\t\t\t\tbaseNode.tieProperty(propName, script);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (value != null) {\n\t\t\t\t\tfor (TrackerNode node : propNodes) { //normal nodes\n\t\t\t\t\t\taddBeanMap(node, value);\n\t\t\t\t\t}\n\t\t\t\t} else { //value == null\n\t\t\t\t\tfor (TrackerNode node : propNodes) { //normal nodes\n\t\t\t\t\t\tremoveAllBeanMap(node); //dependent nodes shall be null, too. Remove them from _beanMap\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":52383,"modified_method":"public void tieValue(Object comp, Object base, Object script, Object propName, Object value) {\n\t\tif (base == null) { //track from component\n\t\t\tfinal TrackerNode node = getTrackerNodePerComponentScript(comp, script);\n\t\t\t//ZK-877: NPE in a save only binding\n\t\t\t//No corresponding LoadBinding with the head script in the specified component. \n\t\t\tif (node != null) {\n\t\t\t\tif (value != null) {\n\t\t\t\t\taddBeanMap(node, value);\n\t\t\t\t} else {\n\t\t\t\t\tremoveAllBeanMap(node); //dependent nodes shall be null, too. Remove them from _beanMap \n\t\t\t\t\taddNullMap(node); //head TrackerNode evaluate to null\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfinal Set<TrackerNode> baseNodes = getAllTrackerNodesByBean(base);\n\t\t\tif (baseNodes != null) { //FormBinding will keep base nodes only (so no associated dependent nodes)\n\t\t\t\tfinal Set<TrackerNode> propNodes = new LinkedHashSet<TrackerNode>(); //normal nodes; i.e. a base + property node. e.g. vm.selectedPerson\n\t\t\t\tfor (TrackerNode baseNode : baseNodes) {\n\t\t\t\t\tfor (TrackerNode node : baseNode.getDependents(script)) {\n\t\t\t\t\t\tif (node == null) { //FormBinding will keep base nodes only (so no associated dependent nodes)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpropNodes.add(node);\n\t\t\t\t\t\tif (BindELContext.isBracket((String)script)) {\n\t\t\t\t\t\t\tbaseNode.tieProperty(propName, script);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (value != null) {\n\t\t\t\t\tfor (TrackerNode node : propNodes) { //normal nodes\n\t\t\t\t\t\taddBeanMap(node, value);\n\t\t\t\t\t}\n\t\t\t\t} else { //value == null\n\t\t\t\t\tfor (TrackerNode node : propNodes) { //normal nodes\n\t\t\t\t\t\tremoveAllBeanMap(node); //dependent nodes shall be null, too. Remove them from _beanMap\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"9e947020626f58c85ba3eed39f3ddafc4d241e2e","url":"https://github.com/zkoss/zk"},{"original_method":"private void getLoadBindingsPerProperty(Collection<TrackerNode> nodes, String prop, LinkedHashSet<LoadBinding> bindings, LinkedHashSet<Object> kidbases, Set<TrackerNode> visited) {\n\t\tif (\".\".equals(prop)) { //all base object\n\t\t\tfor (TrackerNode node : nodes) {\n\t\t\t\tgetLoadBindings0(node, bindings, kidbases, visited);\n\t\t\t}\n\t\t} else if (\"*\".equals(prop)) { //all binding properties of the base object\n\t\t\tfor (TrackerNode node : nodes) {\n\t\t\t\tfinal Set<TrackerNode> kids = node.getDirectDependents();\n\t\t\t\tgetNodesLoadBindings(kids, bindings, kidbases, visited);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (TrackerNode node : nodes) {\n\t\t\t\tfinal TrackerNode kid = node.getDependent(prop);\n\t\t\t\tif (kid != null) {\n\t\t\t\t\tgetLoadBindings0(kid, bindings, kidbases, visited);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":52384,"modified_method":"private void getLoadBindingsPerProperty(Collection<TrackerNode> nodes, String prop, LinkedHashSet<LoadBinding> bindings, LinkedHashSet<Object> kidbases, Set<TrackerNode> visited) {\n\t\tif (\".\".equals(prop)) { //all base object\n\t\t\tfor (TrackerNode node : nodes) {\n\t\t\t\tgetLoadBindings0(node, bindings, kidbases, visited);\n\t\t\t}\n\t\t} else if (\"*\".equals(prop)) { //all binding properties of the base object\n\t\t\tfor (TrackerNode node : nodes) {\n\t\t\t\tfinal Set<TrackerNode> kids = node.getDirectDependents();\n\t\t\t\tgetNodesLoadBindings(kids, bindings, kidbases, visited);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (TrackerNode node : nodes) {\n\t\t\t\tfor (TrackerNode kid : node.getDependents(prop)) {\n\t\t\t\t\tif (kid != null) {\n\t\t\t\t\t\tgetLoadBindings0(kid, bindings, kidbases, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"9e947020626f58c85ba3eed39f3ddafc4d241e2e","url":"https://github.com/zkoss/zk"},{"original_method":"static public void copyDir(File sourceDir,\n                             File targetDir) throws IOException {\n    targetDir.mkdirs();\n    String files[] = sourceDir.list();\n    for (int i = 0; i < files.length; i++) {\n      if (files[i].equals(\".\") || files[i].equals(\"..\")) continue;\n      File source = new File(sourceDir, files[i]);\n      File target = new File(targetDir, files[i]);\n      if (source.isDirectory()) {\n        //target.mkdirs();\n        copyDir(source, target);\n        target.setLastModified(source.lastModified());\n      } else {\n        copyFile(source, target);\n      }\n    }\n  }","id":52385,"modified_method":"/**\n   * Copy a folder from one place to another. This ignores all dot files and\n   * folders found in the source directory, to avoid copying silly .DS_Store\n   * files and potentially troublesome .svn folders.\n   */\n  static public void copyDir(File sourceDir,\n                             File targetDir) throws IOException {\n    targetDir.mkdirs();\n    String files[] = sourceDir.list();\n    for (int i = 0; i < files.length; i++) {\n      // Ignore dot files (.DS_Store), dot folders (.svn) while copying\n      if (files[i].charAt(0) == '.') continue;\n      //if (files[i].equals(\".\") || files[i].equals(\"..\")) continue;\n      File source = new File(sourceDir, files[i]);\n      File target = new File(targetDir, files[i]);\n      if (source.isDirectory()) {\n        //target.mkdirs();\n        copyDir(source, target);\n        target.setLastModified(source.lastModified());\n      } else {\n        copyFile(source, target);\n      }\n    }\n  }","commit_id":"508ba8e5a80f93cb866093e1f890e7d68154dfe2","url":"https://github.com/processing/processing"},{"original_method":"/**\n\t * Generats and appends html for a single choice into the provided buffer\n\t * \n\t * @param buffer\n\t *            Appending string buffer that will have the generated html appended\n\t * @param choice\n\t *            Choice object\n\t * @param index\n\t *            The index of this option\n\t * @param selected\n\t *            The currently selected string value\n\t */\n\tprotected void appendOptionHtml(AppendingStringBuffer buffer, Object choice, int index,\n\t\t\tString selected)\n\t{\n\t\tObject objectValue = renderer.getDisplayValue(choice);\n\t\tClass objectClass = objectValue == null ? null : objectValue.getClass();\n\t\tfinal String displayValue = getConverter(objectClass).convertToString(objectValue,\n\t\t\t\tgetLocale());\n\t\tbuffer.append(\"\\n<option \");\n\t\tif (isSelected(choice, index, selected))\n\t\t{\n\t\t\tbuffer.append(\"selected=\\\"selected\\\" \");\n\t\t}\n\t\tif (isDisabled(choice, index, selected))\n\t\t{\n\t\t\tbuffer.append(\"disabled=\\\"disabled\\\" \");\n\t\t}\n\t\tbuffer.append(\"value=\\\"\");\n\t\tbuffer.append(renderer.getIdValue(choice, index));\n\t\tbuffer.append(\"\\\">\");\n\n\t\tString display = displayValue;\n\t\tif (localizeDisplayValues())\n\t\t{\n\t\t\tdisplay = getLocalizer().getString(displayValue, this, displayValue);\n\t\t}\n\t\tCharSequence escaped = Strings.escapeMarkup(display, false, true);\n\t\tbuffer.append(escaped);\n\t\tbuffer.append(\"<\/option>\");\n\t}","id":52386,"modified_method":"/**\n\t * Generats and appends html for a single choice into the provided buffer\n\t * \n\t * @param buffer\n\t *            Appending string buffer that will have the generated html appended\n\t * @param choice\n\t *            Choice object\n\t * @param index\n\t *            The index of this option\n\t * @param selected\n\t *            The currently selected string value\n\t */\n\tprotected void appendOptionHtml(AppendingStringBuffer buffer, Object choice, int index,\n\t\t\tString selected)\n\t{\n\t\tObject objectValue = renderer.getDisplayValue(choice);\n\t\tClass objectClass = objectValue == null ? null : objectValue.getClass();\n\t\tfinal String displayValue = getConverter(objectClass).convertToString(objectValue,\n\t\t\t\tgetLocale());\n\t\tbuffer.append(\"\\n<option \");\n\t\tif (isSelected(choice, index, selected))\n\t\t{\n\t\t\tbuffer.append(\"selected=\\\"selected\\\" \");\n\t\t}\n\t\tif (isDisabled(choice, index, selected))\n\t\t{\n\t\t\tbuffer.append(\"disabled=\\\"disabled\\\" \");\n\t\t}\n\t\tbuffer.append(\"value=\\\"\");\n\t\tbuffer.append(renderer.getIdValue(choice, index));\n\t\tbuffer.append(\"\\\">\");\n\n\t\tString display = displayValue;\n\t\tif (localizeDisplayValues())\n\t\t{\n\t\t\tdisplay = getLocalizer().getString(displayValue, this, displayValue);\n\t\t}\n\t\tCharSequence escaped = display;\n\t\tif (getEscapeModelStrings())\n\t\t{\n\t\t\tescaped = Strings.escapeMarkup(display, false, true);\n\t\t}\n\t\tbuffer.append(escaped);\n\t\tbuffer.append(\"<\/option>\");\n\t}","commit_id":"9dd8829c06e40645427516a8bd0aea5a1a7272d7","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t\t * Construct.\n\t\t * \n\t\t * @param prevSuffix\n\t\t */\n\t\tPrefixChange(String prevSuffix)\n\t\t{\n\t\t\tthis.prevPrefix = prevSuffix;\n\t\t}","id":52387,"modified_method":"/**\n\t\t * Construct.\n\t\t * \n\t\t * @param prevSuffix\n\t\t */\n\t\tPrefixChange(String prevSuffix)\n\t\t{\n\t\t\tprevPrefix = prevSuffix;\n\t\t}","commit_id":"fa1ef6bcc3a326d40ded4f465a7ad13930dea0a2","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * @see org.apache.wicket.Component#onComponentTagBody(org.apache.wicket.markup.MarkupStream,\n\t *      org.apache.wicket.markup.ComponentTag)\n\t */\n\tprotected final void onComponentTagBody(final MarkupStream markupStream,\n\t\t\tfinal ComponentTag openTag)\n\t{\n\t\t// Iterate through choices\n\t\tfinal List choices = getChoices();\n\n\t\t// Buffer to hold generated body\n\t\tfinal AppendingStringBuffer buffer = new AppendingStringBuffer(70 * (choices.size() + 1));\n\n\t\t// Value of this choice\n\t\tfinal String selected = getValue();\n\n\t\t// Loop through choices\n\t\tfor (int index = 0; index < choices.size(); index++)\n\t\t{\n\t\t\t// Get next choice\n\t\t\tfinal Object choice = choices.get(index);\n\n\t\t\tObject displayValue = getChoiceRenderer().getDisplayValue(choice);\n\t\t\tClass objectClass = displayValue == null ? null : displayValue.getClass();\n\t\t\t// Get label for choice\n\t\t\tfinal String label = getConverter(objectClass).convertToString(displayValue,\n\t\t\t\t\tgetLocale());\n\n\t\t\t// If there is a display value for the choice, then we know that the\n\t\t\t// choice is automatic in some way. If label is /null/ then we know\n\t\t\t// that the choice is a manually created checkbox tag at some random\n\t\t\t// location in the page markup!\n\t\t\tif (label != null)\n\t\t\t{\n\t\t\t\t// Append option suffix\n\t\t\t\tbuffer.append(getPrefix());\n\n\t\t\t\tString id = getChoiceRenderer().getIdValue(choice, index);\n\t\t\t\tfinal String idAttr = getInputName() + \"_\" + id;\n\n\t\t\t\t// Add checkbox element\n\t\t\t\tbuffer.append(\"<input name=\\\"\").append(getInputName()).append(\"\\\"\").append(\n\t\t\t\t\t\t\" type=\\\"checkbox\\\"\").append(\n\t\t\t\t\t\t(isSelected(choice, index, selected) ? \" checked=\\\"checked\\\"\" : \"\"))\n\t\t\t\t\t\t.append((isEnabled() ? \"\" : \" disabled=\\\"disabled\\\"\")).append(\" value=\\\"\")\n\t\t\t\t\t\t.append(id).append(\"\\\" id=\\\"\").append(idAttr).append(\"\\\"/>\");\n\n\t\t\t\t// Add label for checkbox\n\t\t\t\tString display = label;\n\t\t\t\tif (localizeDisplayValues())\n\t\t\t\t{\n\t\t\t\t\tdisplay = getLocalizer().getString(label, this, label);\n\t\t\t\t}\n\t\t\t\tCharSequence escaped = Strings.escapeMarkup(display, false, true);\n\n\t\t\t\tbuffer.append(\"<label for=\\\"\");\n\t\t\t\tbuffer.append(idAttr);\n\t\t\t\tbuffer.append(\"\\\">\").append(escaped).append(\"<\/label>\");\n\n\t\t\t\t// Append option suffix\n\t\t\t\tbuffer.append(getSuffix());\n\t\t\t}\n\t\t}\n\n\t\t// Replace body\n\t\treplaceComponentTagBody(markupStream, openTag, buffer);\n\t}","id":52388,"modified_method":"/**\n\t * @see org.apache.wicket.Component#onComponentTagBody(org.apache.wicket.markup.MarkupStream,\n\t *      org.apache.wicket.markup.ComponentTag)\n\t */\n\tprotected final void onComponentTagBody(final MarkupStream markupStream,\n\t\t\tfinal ComponentTag openTag)\n\t{\n\t\t// Iterate through choices\n\t\tfinal List choices = getChoices();\n\n\t\t// Buffer to hold generated body\n\t\tfinal AppendingStringBuffer buffer = new AppendingStringBuffer(70 * (choices.size() + 1));\n\n\t\t// Value of this choice\n\t\tfinal String selected = getValue();\n\n\t\t// Loop through choices\n\t\tfor (int index = 0; index < choices.size(); index++)\n\t\t{\n\t\t\t// Get next choice\n\t\t\tfinal Object choice = choices.get(index);\n\n\t\t\tObject displayValue = getChoiceRenderer().getDisplayValue(choice);\n\t\t\tClass objectClass = displayValue == null ? null : displayValue.getClass();\n\t\t\t// Get label for choice\n\t\t\tfinal String label = getConverter(objectClass).convertToString(displayValue,\n\t\t\t\t\tgetLocale());\n\n\t\t\t// If there is a display value for the choice, then we know that the\n\t\t\t// choice is automatic in some way. If label is /null/ then we know\n\t\t\t// that the choice is a manually created checkbox tag at some random\n\t\t\t// location in the page markup!\n\t\t\tif (label != null)\n\t\t\t{\n\t\t\t\t// Append option suffix\n\t\t\t\tbuffer.append(getPrefix());\n\n\t\t\t\tString id = getChoiceRenderer().getIdValue(choice, index);\n\t\t\t\tfinal String idAttr = getInputName() + \"_\" + id;\n\n\t\t\t\t// Add checkbox element\n\t\t\t\tbuffer.append(\"<input name=\\\"\").append(getInputName()).append(\"\\\"\").append(\n\t\t\t\t\t\t\" type=\\\"checkbox\\\"\").append(\n\t\t\t\t\t\t(isSelected(choice, index, selected) ? \" checked=\\\"checked\\\"\" : \"\"))\n\t\t\t\t\t\t.append((isEnabled() ? \"\" : \" disabled=\\\"disabled\\\"\")).append(\" value=\\\"\")\n\t\t\t\t\t\t.append(id).append(\"\\\" id=\\\"\").append(idAttr).append(\"\\\"/>\");\n\n\t\t\t\t// Add label for checkbox\n\t\t\t\tString display = label;\n\t\t\t\tif (localizeDisplayValues())\n\t\t\t\t{\n\t\t\t\t\tdisplay = getLocalizer().getString(label, this, label);\n\t\t\t\t}\n\n\t\t\t\tCharSequence escaped;\n\t\t\t\tif (isEscapeLabelMarkup())\n\t\t\t\t{\n\t\t\t\t\tescaped = Strings.escapeMarkup(display, false, true);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tescaped = display;\n\t\t\t\t}\n\n\t\t\t\tbuffer.append(\"<label for=\\\"\");\n\t\t\t\tbuffer.append(idAttr);\n\t\t\t\tbuffer.append(\"\\\">\").append(escaped).append(\"<\/label>\");\n\n\t\t\t\t// Append option suffix\n\t\t\t\tbuffer.append(getSuffix());\n\t\t\t}\n\t\t}\n\n\t\t// Replace body\n\t\treplaceComponentTagBody(markupStream, openTag, buffer);\n\t}","commit_id":"fa1ef6bcc3a326d40ded4f465a7ad13930dea0a2","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * @see org.apache.wicket.Component#onComponentTagBody(org.apache.wicket.markup.MarkupStream,\n\t *      org.apache.wicket.markup.ComponentTag)\n\t */\n\t@Override\n\tprotected final void onComponentTagBody(final MarkupStream markupStream,\n\t\tfinal ComponentTag openTag)\n\t{\n\t\t// Iterate through choices\n\t\tfinal List<? extends T> choices = getChoices();\n\n\t\t// Buffer to hold generated body\n\t\tfinal AppendingStringBuffer buffer = new AppendingStringBuffer(70 * (choices.size() + 1));\n\n\t\t// Value of this choice\n\t\tfinal String selected = getValue();\n\n\t\t// Loop through choices\n\t\tfor (int index = 0; index < choices.size(); index++)\n\t\t{\n\t\t\t// Get next choice\n\t\t\tfinal T choice = choices.get(index);\n\n\t\t\tObject displayValue = getChoiceRenderer().getDisplayValue(choice);\n\t\t\tClass<?> objectClass = displayValue == null ? null : displayValue.getClass();\n\t\t\t// Get label for choice\n\t\t\tString label = \"\";\n\t\t\tif (objectClass != null && objectClass != String.class)\n\t\t\t{\n\t\t\t\tIConverter converter = getConverter(objectClass);\n\t\t\t\tlabel = converter.convertToString(displayValue, getLocale());\n\t\t\t}\n\t\t\telse if (displayValue != null)\n\t\t\t{\n\t\t\t\tlabel = displayValue.toString();\n\t\t\t}\n\n\t\t\t// If there is a display value for the choice, then we know that the\n\t\t\t// choice is automatic in some way. If label is /null/ then we know\n\t\t\t// that the choice is a manually created checkbox tag at some random\n\t\t\t// location in the page markup!\n\t\t\tif (label != null)\n\t\t\t{\n\t\t\t\t// Append option suffix\n\t\t\t\tbuffer.append(getPrefix());\n\n\t\t\t\tString id = getChoiceRenderer().getIdValue(choice, index);\n\t\t\t\tfinal String idAttr = getInputName() + \"_\" + id;\n\n\t\t\t\t// Add checkbox element\n\t\t\t\tbuffer.append(\"<input name=\\\"\")\n\t\t\t\t\t.append(getInputName())\n\t\t\t\t\t.append(\"\\\"\")\n\t\t\t\t\t.append(\" type=\\\"checkbox\\\"\")\n\t\t\t\t\t.append((isSelected(choice, index, selected) ? \" checked=\\\"checked\\\"\" : \"\"))\n\t\t\t\t\t.append((isEnabled() ? \"\" : \" disabled=\\\"disabled\\\"\"))\n\t\t\t\t\t.append(\" value=\\\"\")\n\t\t\t\t\t.append(id)\n\t\t\t\t\t.append(\"\\\" id=\\\"\")\n\t\t\t\t\t.append(idAttr)\n\t\t\t\t\t.append(\"\\\"/>\");\n\n\t\t\t\t// Add label for checkbox\n\t\t\t\tString display = label;\n\t\t\t\tif (localizeDisplayValues())\n\t\t\t\t{\n\t\t\t\t\tdisplay = getLocalizer().getString(label, this, label);\n\t\t\t\t}\n\n\t\t\t\tCharSequence escaped;\n\t\t\t\tif (isEscapeLabelMarkup() || getEscapeModelStrings())\n\t\t\t\t{\n\t\t\t\t\tescaped = Strings.escapeMarkup(display, false, true);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tescaped = display;\n\t\t\t\t}\n\n\t\t\t\tbuffer.append(\"<label for=\\\"\");\n\t\t\t\tbuffer.append(idAttr);\n\t\t\t\tbuffer.append(\"\\\">\").append(escaped).append(\"<\/label>\");\n\n\t\t\t\t// Append option suffix\n\t\t\t\tbuffer.append(getSuffix());\n\t\t\t}\n\t\t}\n\n\t\t// Replace body\n\t\treplaceComponentTagBody(markupStream, openTag, buffer);\n\t}","id":52389,"modified_method":"/**\n\t * @see org.apache.wicket.Component#onComponentTagBody(org.apache.wicket.markup.MarkupStream,\n\t *      org.apache.wicket.markup.ComponentTag)\n\t */\n\t@Override\n\tprotected final void onComponentTagBody(final MarkupStream markupStream,\n\t\tfinal ComponentTag openTag)\n\t{\n\t\t// Iterate through choices\n\t\tfinal List<? extends T> choices = getChoices();\n\n\t\t// Buffer to hold generated body\n\t\tfinal AppendingStringBuffer buffer = new AppendingStringBuffer(70 * (choices.size() + 1));\n\n\t\t// Value of this choice\n\t\tfinal String selected = getValue();\n\n\t\t// Loop through choices\n\t\tfor (int index = 0; index < choices.size(); index++)\n\t\t{\n\t\t\t// Get next choice\n\t\t\tfinal T choice = choices.get(index);\n\n\t\t\tObject displayValue = getChoiceRenderer().getDisplayValue(choice);\n\t\t\tClass<?> objectClass = displayValue == null ? null : displayValue.getClass();\n\t\t\t// Get label for choice\n\t\t\tString label = \"\";\n\t\t\tif (objectClass != null && objectClass != String.class)\n\t\t\t{\n\t\t\t\tIConverter converter = getConverter(objectClass);\n\t\t\t\tlabel = converter.convertToString(displayValue, getLocale());\n\t\t\t}\n\t\t\telse if (displayValue != null)\n\t\t\t{\n\t\t\t\tlabel = displayValue.toString();\n\t\t\t}\n\n\t\t\t// If there is a display value for the choice, then we know that the\n\t\t\t// choice is automatic in some way. If label is /null/ then we know\n\t\t\t// that the choice is a manually created checkbox tag at some random\n\t\t\t// location in the page markup!\n\t\t\tif (label != null)\n\t\t\t{\n\t\t\t\t// Append option suffix\n\t\t\t\tbuffer.append(getPrefix());\n\n\t\t\t\tString id = getChoiceRenderer().getIdValue(choice, index);\n\t\t\t\tfinal String idAttr = getInputName() + \"_\" + id;\n\n\t\t\t\t// Add checkbox element\n\t\t\t\tbuffer.append(\"<input name=\\\"\")\n\t\t\t\t\t.append(getInputName())\n\t\t\t\t\t.append(\"\\\"\")\n\t\t\t\t\t.append(\" type=\\\"checkbox\\\"\")\n\t\t\t\t\t.append((isSelected(choice, index, selected) ? \" checked=\\\"checked\\\"\" : \"\"))\n\t\t\t\t\t.append((isEnabled() ? \"\" : \" disabled=\\\"disabled\\\"\"))\n\t\t\t\t\t.append(\" value=\\\"\")\n\t\t\t\t\t.append(id)\n\t\t\t\t\t.append(\"\\\" id=\\\"\")\n\t\t\t\t\t.append(idAttr)\n\t\t\t\t\t.append(\"\\\"/>\");\n\n\t\t\t\t// Add label for checkbox\n\t\t\t\tString display = label;\n\t\t\t\tif (localizeDisplayValues())\n\t\t\t\t{\n\t\t\t\t\tdisplay = getLocalizer().getString(label, this, label);\n\t\t\t\t}\n\n\t\t\t\tCharSequence escaped;\n\t\t\t\tif (getEscapeModelStrings())\n\t\t\t\t{\n\t\t\t\t\tescaped = Strings.escapeMarkup(display, false, true);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tescaped = display;\n\t\t\t\t}\n\n\t\t\t\tbuffer.append(\"<label for=\\\"\");\n\t\t\t\tbuffer.append(idAttr);\n\t\t\t\tbuffer.append(\"\\\">\").append(escaped).append(\"<\/label>\");\n\n\t\t\t\t// Append option suffix\n\t\t\t\tbuffer.append(getSuffix());\n\t\t\t}\n\t\t}\n\n\t\t// Replace body\n\t\treplaceComponentTagBody(markupStream, openTag, buffer);\n\t}","commit_id":"d42886a1e5d777793f37f3fa033cc6bc0e70ef3c","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Overridable method to determine whether the label markup should be escaped.\n\t * \n\t * @deprecated use {@link #setEscapeModelStrings(boolean)}\n\t * \n\t * @return true if label markup should be escaped\n\t */\n\t@Deprecated\n\tprotected final boolean isEscapeLabelMarkup()\n\t{\n\t\treturn true;\n\t}","id":52390,"modified_method":"/**\n\t * Overridable method to determine whether the label markup should be escaped.\n\t * \n\t * @deprecated use {@link #setEscapeModelStrings(boolean)}\n\t * \n\t * @return true if label markup should be escaped\n\t */\n\t@Deprecated\n\tprotected final boolean isEscapeLabelMarkup()\n\t{\n\t\treturn getEscapeModelStrings();\n\t}","commit_id":"d42886a1e5d777793f37f3fa033cc6bc0e70ef3c","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * @see org.apache.wicket.Component#onComponentTagBody(MarkupStream, ComponentTag)\n\t */\n\t@Override\n\tprotected final void onComponentTagBody(final MarkupStream markupStream,\n\t\tfinal ComponentTag openTag)\n\t{\n\t\t// Iterate through choices\n\t\tfinal List<? extends T> choices = getChoices();\n\n\t\t// Buffer to hold generated body\n\t\tfinal AppendingStringBuffer buffer = new AppendingStringBuffer((choices.size() + 1) * 70);\n\n\t\t// The selected value\n\t\tfinal String selected = getValue();\n\n\t\t// Loop through choices\n\t\tfor (int index = 0; index < choices.size(); index++)\n\t\t{\n\t\t\t// Get next choice\n\t\t\tfinal T choice = choices.get(index);\n\n\t\t\tObject displayValue = getChoiceRenderer().getDisplayValue(choice);\n\t\t\tClass<?> objectClass = (displayValue == null ? null : displayValue.getClass());\n\n\t\t\t// Get label for choice\n\t\t\tString label = \"\";\n\n\t\t\tif (objectClass != null && objectClass != String.class)\n\t\t\t{\n\t\t\t\tfinal IConverter converter = getConverter(objectClass);\n\t\t\t\tlabel = converter.convertToString(displayValue, getLocale());\n\t\t\t}\n\t\t\telse if (displayValue != null)\n\t\t\t{\n\t\t\t\tlabel = displayValue.toString();\n\t\t\t}\n\n\t\t\t// If there is a display value for the choice, then we know that the\n\t\t\t// choice is automatic in some way. If label is /null/ then we know\n\t\t\t// that the choice is a manually created radio tag at some random\n\t\t\t// location in the page markup!\n\t\t\tif (label != null)\n\t\t\t{\n\t\t\t\t// Append option suffix\n\t\t\t\tbuffer.append(getPrefix());\n\n\t\t\t\tString id = getChoiceRenderer().getIdValue(choice, index);\n\t\t\t\tfinal String idAttr = getMarkupId() + \"_\" + id;\n\n\t\t\t\tboolean enabled = isEnabled() && isEnableAllowed() &&\n\t\t\t\t\t!isDisabled(choice, index, selected);\n\n\t\t\t\t// Add radio tag\n\t\t\t\tbuffer.append(\"<input name=\\\"\")\n\t\t\t\t\t.append(getInputName())\n\t\t\t\t\t.append(\"\\\"\")\n\t\t\t\t\t.append(\" type=\\\"radio\\\"\")\n\t\t\t\t\t.append((isSelected(choice, index, selected) ? \" checked=\\\"checked\\\"\" : \"\"))\n\t\t\t\t\t.append((enabled ? \"\" : \" disabled=\\\"disabled\\\"\"))\n\t\t\t\t\t.append(\" value=\\\"\")\n\t\t\t\t\t.append(id)\n\t\t\t\t\t.append(\"\\\" id=\\\"\")\n\t\t\t\t\t.append(idAttr)\n\t\t\t\t\t.append(\"\\\"\");\n\n\t\t\t\t// Should a roundtrip be made (have onSelectionChanged called)\n\t\t\t\t// when the option is clicked?\n\t\t\t\tif (wantOnSelectionChangedNotifications())\n\t\t\t\t{\n\t\t\t\t\tCharSequence url = urlFor(IOnChangeListener.INTERFACE);\n\n\t\t\t\t\tForm<?> form = findParent(Form.class);\n\t\t\t\t\tif (form != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tRequestContext rc = RequestContext.get();\n\t\t\t\t\t\tif (rc.isPortletRequest())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// restore url back to real wicket path as its going to be interpreted\n\t\t\t\t\t\t\t// by the form itself\n\t\t\t\t\t\t\turl = ((PortletRequestContext)rc).getLastEncodedPath();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbuffer.append(\" onclick=\\\"\").append(form.getJsForInterfaceUrl(url)).append(\n\t\t\t\t\t\t\t\";\\\"\");\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// TODO: following doesn't work with portlets, should be posted to a dynamic\n\t\t\t\t\t\t// hidden form\n\t\t\t\t\t\t// with an ActionURL or something\n\t\t\t\t\t\t// NOTE: do not encode the url as that would give\n\t\t\t\t\t\t// invalid JavaScript\n\t\t\t\t\t\tbuffer.append(\" onclick=\\\"window.location.href='\")\n\t\t\t\t\t\t\t.append(url)\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t(url.toString().indexOf('?') > -1 ? \"&amp;\" : \"?\") + getInputName())\n\t\t\t\t\t\t\t.append(\"=\")\n\t\t\t\t\t\t\t.append(id)\n\t\t\t\t\t\t\t.append(\"';\\\"\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbuffer.append(\"/>\");\n\n\t\t\t\t// Add label for radio button\n\t\t\t\tString display = label;\n\t\t\t\tif (localizeDisplayValues())\n\t\t\t\t{\n\t\t\t\t\tdisplay = getLocalizer().getString(label, this, label);\n\t\t\t\t}\n\t\t\t\tCharSequence escaped = Strings.escapeMarkup(display, false, true);\n\t\t\t\tbuffer.append(\"<label for=\\\"\").append(idAttr).append(\"\\\">\").append(escaped).append(\n\t\t\t\t\t\"<\/label>\");\n\n\t\t\t\t// Append option suffix\n\t\t\t\tbuffer.append(getSuffix());\n\t\t\t}\n\t\t}\n\n\t\t// Replace body\n\t\treplaceComponentTagBody(markupStream, openTag, buffer);\n\t}","id":52391,"modified_method":"/**\n\t * @see org.apache.wicket.Component#onComponentTagBody(MarkupStream, ComponentTag)\n\t */\n\t@Override\n\tprotected final void onComponentTagBody(final MarkupStream markupStream,\n\t\tfinal ComponentTag openTag)\n\t{\n\t\t// Iterate through choices\n\t\tfinal List<? extends T> choices = getChoices();\n\n\t\t// Buffer to hold generated body\n\t\tfinal AppendingStringBuffer buffer = new AppendingStringBuffer((choices.size() + 1) * 70);\n\n\t\t// The selected value\n\t\tfinal String selected = getValue();\n\n\t\t// Loop through choices\n\t\tfor (int index = 0; index < choices.size(); index++)\n\t\t{\n\t\t\t// Get next choice\n\t\t\tfinal T choice = choices.get(index);\n\n\t\t\tObject displayValue = getChoiceRenderer().getDisplayValue(choice);\n\t\t\tClass<?> objectClass = (displayValue == null ? null : displayValue.getClass());\n\n\t\t\t// Get label for choice\n\t\t\tString label = \"\";\n\n\t\t\tif (objectClass != null && objectClass != String.class)\n\t\t\t{\n\t\t\t\tfinal IConverter converter = getConverter(objectClass);\n\t\t\t\tlabel = converter.convertToString(displayValue, getLocale());\n\t\t\t}\n\t\t\telse if (displayValue != null)\n\t\t\t{\n\t\t\t\tlabel = displayValue.toString();\n\t\t\t}\n\n\t\t\t// If there is a display value for the choice, then we know that the\n\t\t\t// choice is automatic in some way. If label is /null/ then we know\n\t\t\t// that the choice is a manually created radio tag at some random\n\t\t\t// location in the page markup!\n\t\t\tif (label != null)\n\t\t\t{\n\t\t\t\t// Append option suffix\n\t\t\t\tbuffer.append(getPrefix());\n\n\t\t\t\tString id = getChoiceRenderer().getIdValue(choice, index);\n\t\t\t\tfinal String idAttr = getMarkupId() + \"_\" + id;\n\n\t\t\t\tboolean enabled = isEnabled() && isEnableAllowed() &&\n\t\t\t\t\t!isDisabled(choice, index, selected);\n\n\t\t\t\t// Add radio tag\n\t\t\t\tbuffer.append(\"<input name=\\\"\")\n\t\t\t\t\t.append(getInputName())\n\t\t\t\t\t.append(\"\\\"\")\n\t\t\t\t\t.append(\" type=\\\"radio\\\"\")\n\t\t\t\t\t.append((isSelected(choice, index, selected) ? \" checked=\\\"checked\\\"\" : \"\"))\n\t\t\t\t\t.append((enabled ? \"\" : \" disabled=\\\"disabled\\\"\"))\n\t\t\t\t\t.append(\" value=\\\"\")\n\t\t\t\t\t.append(id)\n\t\t\t\t\t.append(\"\\\" id=\\\"\")\n\t\t\t\t\t.append(idAttr)\n\t\t\t\t\t.append(\"\\\"\");\n\n\t\t\t\t// Should a roundtrip be made (have onSelectionChanged called)\n\t\t\t\t// when the option is clicked?\n\t\t\t\tif (wantOnSelectionChangedNotifications())\n\t\t\t\t{\n\t\t\t\t\tCharSequence url = urlFor(IOnChangeListener.INTERFACE);\n\n\t\t\t\t\tForm<?> form = findParent(Form.class);\n\t\t\t\t\tif (form != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tRequestContext rc = RequestContext.get();\n\t\t\t\t\t\tif (rc.isPortletRequest())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// restore url back to real wicket path as its going to be interpreted\n\t\t\t\t\t\t\t// by the form itself\n\t\t\t\t\t\t\turl = ((PortletRequestContext)rc).getLastEncodedPath();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbuffer.append(\" onclick=\\\"\").append(form.getJsForInterfaceUrl(url)).append(\n\t\t\t\t\t\t\t\";\\\"\");\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// TODO: following doesn't work with portlets, should be posted to a dynamic\n\t\t\t\t\t\t// hidden form\n\t\t\t\t\t\t// with an ActionURL or something\n\t\t\t\t\t\t// NOTE: do not encode the url as that would give\n\t\t\t\t\t\t// invalid JavaScript\n\t\t\t\t\t\tbuffer.append(\" onclick=\\\"window.location.href='\")\n\t\t\t\t\t\t\t.append(url)\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t(url.toString().indexOf('?') > -1 ? \"&amp;\" : \"?\") + getInputName())\n\t\t\t\t\t\t\t.append(\"=\")\n\t\t\t\t\t\t\t.append(id)\n\t\t\t\t\t\t\t.append(\"';\\\"\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbuffer.append(\"/>\");\n\n\t\t\t\t// Add label for radio button\n\t\t\t\tString display = label;\n\t\t\t\tif (localizeDisplayValues())\n\t\t\t\t{\n\t\t\t\t\tdisplay = getLocalizer().getString(label, this, label);\n\t\t\t\t}\n\t\t\t\tfinal CharSequence escaped;\n\t\t\t\tif (getEscapeModelStrings())\n\t\t\t\t{\n\t\t\t\t\tescaped = Strings.escapeMarkup(display, false, true);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tescaped = display;\n\t\t\t\t}\n\t\t\t\tbuffer.append(\"<label for=\\\"\").append(idAttr).append(\"\\\">\").append(escaped).append(\n\t\t\t\t\t\"<\/label>\");\n\n\t\t\t\t// Append option suffix\n\t\t\t\tbuffer.append(getSuffix());\n\t\t\t}\n\t\t}\n\n\t\t// Replace body\n\t\treplaceComponentTagBody(markupStream, openTag, buffer);\n\t}","commit_id":"d42886a1e5d777793f37f3fa033cc6bc0e70ef3c","url":"https://github.com/apache/wicket"},{"original_method":"public Map<SModule, SNode> collectData(SModule myModule, final MigrationScriptReference scriptReference) {\n    MigrationScript script = check_gd1mrb_a0a0gb(getMigrationDescriptor(scriptReference.getModuleReference().resolve(mpsProject.getRepository())), scriptReference, this);\n    final Map<SModule, SNode> requiredData = MapSequence.fromMap(new HashMap<SModule, SNode>());\n    SetSequence.fromSet(MigrationsUtil.getModuleDependencies(myModule)).visitAll(new IVisitor<SModule>() {\n      public void visit(SModule it) {\n        SNode dataString = MigrationDataUtil.readData(it, scriptReference);\n        if (dataString != null) {\n          MapSequence.fromMap(requiredData).put(it, dataString);\n        }\n      }\n    });\n    return requiredData;\n  }","id":52392,"modified_method":"public Map<SModule, SNode> collectData(SModule myModule, final MigrationScriptReference scriptReference) {\n    final Map<SModule, SNode> requiredData = MapSequence.fromMap(new HashMap<SModule, SNode>());\n    SetSequence.fromSet(MigrationsUtil.getModuleDependencies(myModule)).visitAll(new IVisitor<SModule>() {\n      public void visit(SModule it) {\n        SNode dataString = MigrationDataUtil.readData(it, scriptReference);\n        if (dataString != null) {\n          MapSequence.fromMap(requiredData).put(it, dataString);\n        }\n      }\n    });\n    return requiredData;\n  }","commit_id":"3ce945047ac7ffaf1e9947ad8ebd966468c710ec","url":"https://github.com/JetBrains/MPS"},{"original_method":"public boolean executeScript(ScriptApplied sa) {\n    MigrationScript script = sa.getScript();\n    AbstractModule module = ((AbstractModule) sa.getModule());\n    SLanguage languageId = MetaIdByDeclaration.ref2Id(script.getDescriptor().getModuleReference());\n    assert module.getModuleDescriptor().getLanguageVersions().get(languageId) == script.getDescriptor().getFromVersion();\n    try {\n      SNode data = script.execute(module, this);\n      if (data != null) {\n        MigrationDataUtil.addData(module, dataModule, script.getDescriptor(), data);\n      }\n    } catch (Throwable e) {\n      if (LOG.isEnabledFor(Level.ERROR)) {\n        LOG.error(\"Could not execute script\", e);\n      }\n      return false;\n    }\n    module.getModuleDescriptor().getLanguageVersions().put(languageId, script.getDescriptor().getFromVersion() + 1);\n    module.setChanged();\n    return true;\n  }","id":52393,"modified_method":"public boolean executeScript(ScriptApplied sa) {\n    MigrationScript script = sa.getScript();\n    AbstractModule module = ((AbstractModule) sa.getModule());\n    SLanguage language = script.getDescriptor().getLanguage();\n    assert module.getModuleDescriptor().getLanguageVersions().get(language) == script.getDescriptor().getFromVersion();\n    try {\n      SNode data = script.execute(module, this);\n      if (data != null) {\n        MigrationDataUtil.addData(module, dataModule, script.getDescriptor(), data);\n      }\n    } catch (Throwable e) {\n      if (LOG.isEnabledFor(Level.ERROR)) {\n        LOG.error(\"Could not execute script\", e);\n      }\n      return false;\n    }\n    module.getModuleDescriptor().getLanguageVersions().put(language, script.getDescriptor().getFromVersion() + 1);\n    module.setChanged();\n    return true;\n  }","commit_id":"3ce945047ac7ffaf1e9947ad8ebd966468c710ec","url":"https://github.com/JetBrains/MPS"},{"original_method":"public boolean isMigrationRequired() {\n    if (RuntimeFlags.isTestMode()) {\n      return false;\n    }\n    final Wrappers._boolean result = new Wrappers._boolean(false);\n    ModelAccess.instance().runWriteAction(new Runnable() {\n      public void run() {\n        List<ProjectMigration> pMig = ProjectMigrationsRegistry.getInstance().getMigrations();\n        Iterable<? extends SModule> modules = mpsProject.getModules();\n        Sequence.fromIterable(modules).ofType(AbstractModule.class).visitAll(new IVisitor<AbstractModule>() {\n          public void visit(AbstractModule it) {\n            it.validateLanguageVersions();\n          }\n        });\n        boolean projectMig = ListSequence.fromList(pMig).any(new IWhereFilter<ProjectMigration>() {\n          public boolean accept(ProjectMigration it) {\n            return it.shouldBeExecuted(mpsProject);\n          }\n        });\n        boolean languageMig = Sequence.fromIterable(modules).ofType(AbstractModule.class).any(new IWhereFilter<AbstractModule>() {\n          public boolean accept(final AbstractModule module) {\n            return Sequence.fromIterable(MigrationsUtil.getLanguageVersions(module)).where(new IWhereFilter<Tuples._2<SLanguage, Integer>>() {\n              public boolean accept(Tuples._2<SLanguage, Integer> item) {\n                return MigrationsUtil.isMigrationNeeded(module, item);\n              }\n            }).isNotEmpty();\n          }\n        });\n        result.value = projectMig || languageMig;\n      }\n    });\n    return result.value;\n  }","id":52394,"modified_method":"public boolean isMigrationRequired() {\n    if (RuntimeFlags.isTestMode()) {\n      return false;\n    }\n    final Wrappers._boolean result = new Wrappers._boolean(false);\n    ModelAccess.instance().runWriteAction(new Runnable() {\n      public void run() {\n        List<ProjectMigration> pMig = ProjectMigrationsRegistry.getInstance().getMigrations();\n        Iterable<? extends SModule> modules = mpsProject.getModules();\n        Sequence.fromIterable(modules).ofType(AbstractModule.class).visitAll(new IVisitor<AbstractModule>() {\n          public void visit(AbstractModule it) {\n            it.validateLanguageVersions();\n          }\n        });\n        boolean projectMig = ListSequence.fromList(pMig).any(new IWhereFilter<ProjectMigration>() {\n          public boolean accept(ProjectMigration it) {\n            return it.shouldBeExecuted(mpsProject);\n          }\n        });\n        boolean languageMig = Sequence.fromIterable(modules).ofType(AbstractModule.class).any(new IWhereFilter<AbstractModule>() {\n          public boolean accept(final AbstractModule module) {\n            return Sequence.fromIterable(MigrationsUtil.getLanguageVersions(module)).where(new IWhereFilter<MigrationScriptReference>() {\n              public boolean accept(MigrationScriptReference item) {\n                return MigrationsUtil.isMigrationNeeded(module, item);\n              }\n            }).isNotEmpty();\n          }\n        });\n        result.value = projectMig || languageMig;\n      }\n    });\n    return result.value;\n  }","commit_id":"3ce945047ac7ffaf1e9947ad8ebd966468c710ec","url":"https://github.com/JetBrains/MPS"},{"original_method":"public MigrationManager.MigrationState nextStep() {\n    final Wrappers._T<MigrationManager.MigrationState> result = new Wrappers._T<MigrationManager.MigrationState>();\n\n    final Map<SModule, Iterable<Tuples._2<SLanguage, Integer>>> languageVersions = MapSequence.fromMap(new HashMap<SModule, Iterable<Tuples._2<SLanguage, Integer>>>());\n    final Wrappers._T<Iterable<? extends SModule>> projectModules = new Wrappers._T<Iterable<? extends SModule>>();\n\n    ModelAccess.instance().runReadAction(new Runnable() {\n      public void run() {\n        projectModules.value = mpsProject.getModules();\n      }\n    });\n    ModelAccess.instance().runWriteAction(new Runnable() {\n      public void run() {\n        Sequence.fromIterable(projectModules.value).ofType(AbstractModule.class).visitAll(new IVisitor<AbstractModule>() {\n          public void visit(AbstractModule it) {\n            MapSequence.fromMap(languageVersions).put(it, MigrationsUtil.getLanguageVersions(it));\n          }\n        });\n      }\n    });\n    final Iterable<ScriptApplied> allStepScripts = Sequence.fromIterable(projectModules.value).ofType(AbstractModule.class).translate(new ITranslator2<AbstractModule, ScriptApplied>() {\n      public Iterable<ScriptApplied> translate(final AbstractModule module) {\n        return Sequence.fromIterable(MapSequence.fromMap(languageVersions).get(module)).where(new IWhereFilter<Tuples._2<SLanguage, Integer>>() {\n          public boolean accept(Tuples._2<SLanguage, Integer> it) {\n            return MigrationsUtil.isMigrationNeeded(module, it);\n          }\n        }).select(new ISelector<Tuples._2<SLanguage, Integer>, MigrationScript>() {\n          public MigrationScript select(Tuples._2<SLanguage, Integer> it) {\n            return fetchScriptForModule(module, it);\n          }\n        }).where(new IWhereFilter<MigrationScript>() {\n          public boolean accept(MigrationScript script) {\n            return script != null;\n          }\n        }).select(new ISelector<MigrationScript, ScriptApplied>() {\n          public ScriptApplied select(MigrationScript script) {\n            return new ScriptApplied(script, module);\n          }\n        });\n      }\n    }).toListSequence();\n    ModelAccess.instance().runReadAction(new Runnable() {\n      public void run() {\n        final ScriptApplied nextScript = calculateNextMigration(allStepScripts);\n        if (nextScript == null) {\n          result.value = new MigrationManager.Step() {\n            public String getDescription() {\n              return nextScript.toString();\n            }\n            public boolean execute() {\n              final Wrappers._boolean res = new Wrappers._boolean();\n              ModelAccess.instance().runWriteActionInCommand(new Runnable() {\n                public void run() {\n                  res.value = executeScript(nextScript);\n                }\n              });\n              return res.value;\n            }\n          };\n        }\n      }\n    });\n\n    return result.value;\n  }","id":52395,"modified_method":"public MigrationManager.MigrationState nextStep() {\n    final Wrappers._T<MigrationManager.MigrationState> result = new Wrappers._T<MigrationManager.MigrationState>();\n\n    final Map<SModule, Iterable<MigrationScriptReference>> languageVersions = MapSequence.fromMap(new HashMap<SModule, Iterable<MigrationScriptReference>>());\n    final Wrappers._T<Iterable<? extends SModule>> projectModules = new Wrappers._T<Iterable<? extends SModule>>();\n\n    ModelAccess.instance().runReadAction(new Runnable() {\n      public void run() {\n        projectModules.value = mpsProject.getModules();\n      }\n    });\n    ModelAccess.instance().runWriteAction(new Runnable() {\n      public void run() {\n        Sequence.fromIterable(projectModules.value).ofType(AbstractModule.class).visitAll(new IVisitor<AbstractModule>() {\n          public void visit(AbstractModule it) {\n            MapSequence.fromMap(languageVersions).put(it, MigrationsUtil.getLanguageVersions(it));\n          }\n        });\n      }\n    });\n    final Iterable<ScriptApplied> allStepScripts = Sequence.fromIterable(projectModules.value).ofType(AbstractModule.class).translate(new ITranslator2<AbstractModule, ScriptApplied>() {\n      public Iterable<ScriptApplied> translate(final AbstractModule module) {\n        return Sequence.fromIterable(MapSequence.fromMap(languageVersions).get(module)).where(new IWhereFilter<MigrationScriptReference>() {\n          public boolean accept(MigrationScriptReference it) {\n            return MigrationsUtil.isMigrationNeeded(module, it);\n          }\n        }).select(new ISelector<MigrationScriptReference, MigrationScript>() {\n          public MigrationScript select(MigrationScriptReference it) {\n            return fetchScriptForModule(module, it);\n          }\n        }).where(new IWhereFilter<MigrationScript>() {\n          public boolean accept(MigrationScript script) {\n            return script != null;\n          }\n        }).select(new ISelector<MigrationScript, ScriptApplied>() {\n          public ScriptApplied select(MigrationScript script) {\n            return new ScriptApplied(script, module);\n          }\n        });\n      }\n    }).toListSequence();\n    ModelAccess.instance().runReadAction(new Runnable() {\n      public void run() {\n        final ScriptApplied nextScript = calculateNextMigration(allStepScripts);\n        if (nextScript == null) {\n          result.value = new MigrationManager.Step() {\n            public String getDescription() {\n              return nextScript.toString();\n            }\n            public boolean execute() {\n              final Wrappers._boolean res = new Wrappers._boolean();\n              ModelAccess.instance().runWriteActionInCommand(new Runnable() {\n                public void run() {\n                  res.value = executeScript(nextScript);\n                }\n              });\n              return res.value;\n            }\n          };\n        }\n      }\n    });\n\n    return result.value;\n  }","commit_id":"3ce945047ac7ffaf1e9947ad8ebd966468c710ec","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Iterable<Tuples._2<MigrationScriptReference, SNode>> loadData(AbstractModule module) {\n    IFile file = getDataFile(module);\n    if (!(file.exists())) {\n      return Sequence.fromIterable(Collections.<Tuples._2<MigrationScriptReference, SNode>>emptyList());\n    }\n    List<Tuples._2<MigrationScriptReference, SNode>> result = ListSequence.fromList(new ArrayList<Tuples._2<MigrationScriptReference, SNode>>());\n\n    FileDataSource dataSource = new FileDataSource(file);\n    ModelFactory factory = PersistenceRegistry.getInstance().getModelFactory(MPSExtentions.MODEL);\n    SModel model;\n    try {\n      model = factory.load(dataSource, Collections.<String,String>emptyMap());\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n\n    for (SNode root : ListSequence.fromList(SModelOperations.roots(model, MetaAdapterFactory.getConcept(new UUID(-7457129008680581378l, -9049539142767232014l), 7417095922908669705l, \"jetbrains.mps.lang.migration.util.structure.StepData\")))) {\n      ListSequence.fromList(result).addElement(MultiTuple.<MigrationScriptReference,SNode>from(new MigrationScriptReference(PersistenceFacade.getInstance().createModuleReference(SPropertyOperations.getString(SLinkOperations.getTarget(root, MetaAdapterFactory.getContainmentLink(new UUID(-7457129008680581378l, -9049539142767232014l), 7417095922908669705l, 7417095922908725796l, \"script\")), MetaAdapterFactory.getProperty(new UUID(-7457129008680581378l, -9049539142767232014l), 7417095922908675018l, 7417095922909370996l, \"module\"))), SPropertyOperations.getInteger(SLinkOperations.getTarget(root, MetaAdapterFactory.getContainmentLink(new UUID(-7457129008680581378l, -9049539142767232014l), 7417095922908669705l, 7417095922908725796l, \"script\")), MetaAdapterFactory.getProperty(new UUID(-7457129008680581378l, -9049539142767232014l), 7417095922908675018l, 7417095922908725794l, \"fromVersion\"))), SLinkOperations.getTarget(root, MetaAdapterFactory.getContainmentLink(new UUID(-7457129008680581378l, -9049539142767232014l), 7417095922908669705l, 7417095922908725798l, \"data\"))));\n    }\n    return result;\n  }","id":52396,"modified_method":"public static Iterable<Tuples._2<MigrationScriptReference, SNode>> loadData(AbstractModule module) {\n    IFile file = getDataFile(module);\n    if (!(file.exists())) {\n      return Sequence.fromIterable(Collections.<Tuples._2<MigrationScriptReference, SNode>>emptyList());\n    }\n    List<Tuples._2<MigrationScriptReference, SNode>> result = ListSequence.fromList(new ArrayList<Tuples._2<MigrationScriptReference, SNode>>());\n\n    FileDataSource dataSource = new FileDataSource(file);\n    ModelFactory factory = PersistenceRegistry.getInstance().getModelFactory(MPSExtentions.MODEL);\n    SModel model;\n    try {\n      model = factory.load(dataSource, Collections.<String,String>emptyMap());\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n\n    for (SNode root : ListSequence.fromList(SModelOperations.roots(model, MetaAdapterFactory.getConcept(new UUID(-7457129008680581378l, -9049539142767232014l), 7417095922908669705l, \"jetbrains.mps.lang.migration.util.structure.StepData\")))) {\n      ListSequence.fromList(result).addElement(MultiTuple.<MigrationScriptReference,SNode>from(MigrationScriptReference.deserialize(SPropertyOperations.getString(root, MetaAdapterFactory.getProperty(new UUID(-7457129008680581378l, -9049539142767232014l), 7417095922908669705l, 1973338949477451252l, \"script\"))), SLinkOperations.getTarget(root, MetaAdapterFactory.getContainmentLink(new UUID(-7457129008680581378l, -9049539142767232014l), 7417095922908669705l, 7417095922908725798l, \"data\"))));\n    }\n    return result;\n  }","commit_id":"3ce945047ac7ffaf1e9947ad8ebd966468c710ec","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void saveData(AbstractModule module, SModule dataModule, Iterable<Tuples._2<MigrationScriptReference, SNode>> data) {\n    IFile file = getDataFile(module);\n    SModel model;\n    FileDataSource dataSource = new FileDataSource(file);\n    ModelFactory factory = PersistenceRegistry.getInstance().getModelFactory(MPSExtentions.MODEL);\n    Map<String, String> options = MapSequence.<String, String>fromMapAndKeysArray(new HashMap<String, String>(), ModelFactory.OPTION_MODELNAME, ModelFactory.OPTION_MODULEREF).withValues(\"migrationData\", dataModule.getModuleReference().toString());\n    try {\n      model = factory.create(dataSource, options);\n    } catch (IOException e) {\n      throw new RuntimeException();\n    }\n    for (Tuples._2<MigrationScriptReference, SNode> p : Sequence.fromIterable(data)) {\n      SNode stepData = SModelOperations.createNewRootNode(model, SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-7457129008680581378l, -9049539142767232014l), 7417095922908669705l, \"jetbrains.mps.lang.migration.util.structure.StepData\")));\n      SLinkOperations.setTarget(stepData, MetaAdapterFactory.getContainmentLink(new UUID(-7457129008680581378l, -9049539142767232014l), 7417095922908669705l, 7417095922908725796l, \"script\"), createMigrationScriptReference_hzite5_a0b0g0a(p._0().getModuleReference().toString(), p._0().getFromVersion()));\n      SLinkOperations.setTarget(stepData, MetaAdapterFactory.getContainmentLink(new UUID(-7457129008680581378l, -9049539142767232014l), 7417095922908669705l, 7417095922908725798l, \"data\"), p._1());\n    }\n    try {\n      factory.save(model, dataSource);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    } catch (ModelSaveException e) {\n      throw new RuntimeException(e);\n    }\n  }","id":52397,"modified_method":"public static void saveData(AbstractModule module, SModule dataModule, Iterable<Tuples._2<MigrationScriptReference, SNode>> data) {\n    IFile file = getDataFile(module);\n    SModel model;\n    FileDataSource dataSource = new FileDataSource(file);\n    ModelFactory factory = PersistenceRegistry.getInstance().getModelFactory(MPSExtentions.MODEL);\n    Map<String, String> options = MapSequence.<String, String>fromMapAndKeysArray(new HashMap<String, String>(), ModelFactory.OPTION_MODELNAME, ModelFactory.OPTION_MODULEREF).withValues(\"migrationData\", dataModule.getModuleReference().toString());\n    try {\n      model = factory.create(dataSource, options);\n    } catch (IOException e) {\n      throw new RuntimeException();\n    }\n    for (Tuples._2<MigrationScriptReference, SNode> p : Sequence.fromIterable(data)) {\n      SNode stepData = SModelOperations.createNewRootNode(model, SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-7457129008680581378l, -9049539142767232014l), 7417095922908669705l, \"jetbrains.mps.lang.migration.util.structure.StepData\")));\n      SPropertyOperations.set(stepData, MetaAdapterFactory.getProperty(new UUID(-7457129008680581378l, -9049539142767232014l), 7417095922908669705l, 1973338949477451252l, \"script\"), p._0().serialize());\n      SLinkOperations.setTarget(stepData, MetaAdapterFactory.getContainmentLink(new UUID(-7457129008680581378l, -9049539142767232014l), 7417095922908669705l, 7417095922908725798l, \"data\"), p._1());\n    }\n    try {\n      factory.save(model, dataSource);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    } catch (ModelSaveException e) {\n      throw new RuntimeException(e);\n    }\n  }","commit_id":"3ce945047ac7ffaf1e9947ad8ebd966468c710ec","url":"https://github.com/JetBrains/MPS"},{"original_method":"public String serialize() {\n    return moduleReference.toString() + \"/\" + fromVersion;\n  }","id":52398,"modified_method":"public String serialize() {\n    return IdHelper.getLanguageId(language).serialize() + \"(\" + language.getQualifiedName() + \")\" + \"/\" + fromVersion;\n  }","commit_id":"3ce945047ac7ffaf1e9947ad8ebd966468c710ec","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public boolean equals(Object o) {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || this.getClass() != o.getClass()) {\n      return false;\n    }\n    MigrationScriptReference that = (MigrationScriptReference) o;\n    if (!(moduleReference.equals(that.moduleReference))) {\n      return false;\n    }\n    if (fromVersion != that.fromVersion) {\n      return false;\n    }\n    return true;\n  }","id":52399,"modified_method":"@Override\n  public boolean equals(Object o) {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || this.getClass() != o.getClass()) {\n      return false;\n    }\n    MigrationScriptReference that = (MigrationScriptReference) o;\n    if (!(language.equals(that.language))) {\n      return false;\n    }\n    if (fromVersion != that.fromVersion) {\n      return false;\n    }\n    return true;\n  }","commit_id":"3ce945047ac7ffaf1e9947ad8ebd966468c710ec","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static MigrationScriptReference deserialize(String s) {\n    int sepInd = s.indexOf('/');\n    return new MigrationScriptReference(PersistenceFacade.getInstance().createModuleReference(s.substring(0, sepInd)), Integer.parseInt(s.substring(sepInd + 1)));\n  }","id":52400,"modified_method":"public static MigrationScriptReference deserialize(String s) {\n    int version = Integer.parseInt(s.substring(s.indexOf('/') + 1));\n    SLanguage language = MetaAdapterFactory.getLanguage(SLanguageId.deserialize(s.substring(0, s.indexOf('('))), s.substring(s.indexOf('(') + 1, s.indexOf(')')));\n    return new MigrationScriptReference(language, version);\n  }","commit_id":"3ce945047ac7ffaf1e9947ad8ebd966468c710ec","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public int hashCode() {\n    int result = 0;\n    result = 31 * result + moduleReference.hashCode();\n    result = 31 * result + fromVersion;\n    return result;\n  }","id":52401,"modified_method":"@Override\n  public int hashCode() {\n    int result = 0;\n    result = 31 * result + language.hashCode();\n    result = 31 * result + fromVersion;\n    return result;\n  }","commit_id":"3ce945047ac7ffaf1e9947ad8ebd966468c710ec","url":"https://github.com/JetBrains/MPS"},{"original_method":"public MigrationScriptReference(SModuleReference module, int fromVersion) {\n    this.moduleReference = module;\n    this.fromVersion = fromVersion;\n  }","id":52402,"modified_method":"public MigrationScriptReference(SLanguage language, int fromVersion) {\n    this.language = language;\n    this.fromVersion = fromVersion;\n  }","commit_id":"3ce945047ac7ffaf1e9947ad8ebd966468c710ec","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static boolean isApplied(MigrationScriptReference script, SModule module) {\n    return script.getFromVersion() < module.getUsedLanguageVersion(MetaAdapterByDeclaration.getLanguage((Language) script.getModuleReference()));\n  }","id":52403,"modified_method":"public static boolean isApplied(MigrationScriptReference script, SModule module) {\n    return script.getFromVersion() < module.getUsedLanguageVersion(MetaAdapterByDeclaration.getLanguage((Language) script.getLanguage()));\n  }","commit_id":"3ce945047ac7ffaf1e9947ad8ebd966468c710ec","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Iterable<Tuples._2<SLanguage, Integer>> getLanguageVersions(SModule module) {\n    List<Tuples._2<SLanguage, Integer>> result = ListSequence.fromList(new ArrayList<Tuples._2<SLanguage, Integer>>());\n    for (SLanguage lang : SetSequence.fromSet(module.getUsedLanguages())) {\n      Integer ver = ((AbstractModule) module).getModuleDescriptor().getLanguageVersions().get(lang);\n      if (ver == null) {\n        if (LOG.isEnabledFor(Level.WARN)) {\n          LOG.warn(\"no version for language \" + lang.getQualifiedName() + \" in \" + module.getModuleName());\n        }\n      } else {\n        if (ver != lang.getLanguageVersion()) {\n          ListSequence.fromList(result).addElement(MultiTuple.<SLanguage,Integer>from(lang, ver));\n        }\n      }\n    }\n    return result;\n  }","id":52404,"modified_method":"public static Iterable<MigrationScriptReference> getLanguageVersions(SModule module) {\n    List<MigrationScriptReference> result = ListSequence.fromList(new ArrayList<MigrationScriptReference>());\n    for (SLanguage lang : SetSequence.fromSet(module.getUsedLanguages())) {\n      Integer ver = ((AbstractModule) module).getModuleDescriptor().getLanguageVersions().get(lang);\n      if (ver == null) {\n        if (LOG.isEnabledFor(Level.WARN)) {\n          LOG.warn(\"no version for language \" + lang.getQualifiedName() + \" in \" + module.getModuleName());\n        }\n      } else {\n        if (ver != lang.getLanguageVersion()) {\n          ListSequence.fromList(result).addElement(new MigrationScriptReference(lang, ver));\n        }\n      }\n    }\n    return result;\n  }","commit_id":"3ce945047ac7ffaf1e9947ad8ebd966468c710ec","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static SNode _quotation_createNode_x583g4_a0a0fb() {\n    PersistenceFacade facade = PersistenceFacade.getInstance();\n    SNode quotedNode_1 = null;\n    SNode quotedNode_2 = null;\n    SNode quotedNode_3 = null;\n    SNode quotedNode_4 = null;\n    SNode quotedNode_5 = null;\n    SNode quotedNode_6 = null;\n    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral\", null, null, false);\n    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StatementList\", null, null, false);\n    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ExpressionStatement\", null, null, false);\n    quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BooleanConstant\", null, null, false);\n    SNodeAccessUtil.setProperty(quotedNode_6, MetaAdapterFactory.getProperty(new UUID(-935030926396207931l, -6610165693999523818l), 1068580123137l, 1068580123138l, \"value\"), \"true\");\n    quotedNode_4.addChild(MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l, -6610165693999523818l), 1068580123155l, 1068580123156l, \"expression\"), quotedNode_6);\n    quotedNode_2.addChild(MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l, -6610165693999523818l), 1068580123136l, 1068581517665l, \"statement\"), quotedNode_4);\n    quotedNode_1.addChild(MetaAdapterFactory.getContainmentLink(new UUID(-200093298712821347l, -8038623698278341771l), 1199569711397l, 1199569916463l, \"body\"), quotedNode_2);\n    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParameterDeclaration\", null, null, false);\n    SNodeAccessUtil.setProperty(quotedNode_3, MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l, -7236703803128771572l), 1169194658468l, 1169194664001l, \"name\"), \"n\");\n    quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.smodel.structure.SNodeType\", null, null, false);\n    quotedNode_3.addChild(MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l, -6610165693999523818l), 4972933694980447171l, 5680397130376446158l, \"type\"), quotedNode_5);\n    quotedNode_1.addChild(MetaAdapterFactory.getContainmentLink(new UUID(-200093298712821347l, -8038623698278341771l), 1199569711397l, 1199569906740l, \"parameter\"), quotedNode_3);\n    return quotedNode_1;\n  }","id":52405,"modified_method":"private static SNode _quotation_createNode_x583g4_a0a0hb() {\n    PersistenceFacade facade = PersistenceFacade.getInstance();\n    SNode quotedNode_1 = null;\n    SNode quotedNode_2 = null;\n    SNode quotedNode_3 = null;\n    SNode quotedNode_4 = null;\n    SNode quotedNode_5 = null;\n    SNode quotedNode_6 = null;\n    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral\", null, null, false);\n    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StatementList\", null, null, false);\n    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ExpressionStatement\", null, null, false);\n    quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BooleanConstant\", null, null, false);\n    SNodeAccessUtil.setProperty(quotedNode_6, MetaAdapterFactory.getProperty(new UUID(-935030926396207931l, -6610165693999523818l), 1068580123137l, 1068580123138l, \"value\"), \"true\");\n    quotedNode_4.addChild(MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l, -6610165693999523818l), 1068580123155l, 1068580123156l, \"expression\"), quotedNode_6);\n    quotedNode_2.addChild(MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l, -6610165693999523818l), 1068580123136l, 1068581517665l, \"statement\"), quotedNode_4);\n    quotedNode_1.addChild(MetaAdapterFactory.getContainmentLink(new UUID(-200093298712821347l, -8038623698278341771l), 1199569711397l, 1199569916463l, \"body\"), quotedNode_2);\n    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParameterDeclaration\", null, null, false);\n    SNodeAccessUtil.setProperty(quotedNode_3, MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l, -7236703803128771572l), 1169194658468l, 1169194664001l, \"name\"), \"n\");\n    quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.smodel.structure.SNodeType\", null, null, false);\n    quotedNode_3.addChild(MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l, -6610165693999523818l), 4972933694980447171l, 5680397130376446158l, \"type\"), quotedNode_5);\n    quotedNode_1.addChild(MetaAdapterFactory.getContainmentLink(new UUID(-200093298712821347l, -8038623698278341771l), 1199569711397l, 1199569906740l, \"parameter\"), quotedNode_3);\n    return quotedNode_1;\n  }","commit_id":"3ce945047ac7ffaf1e9947ad8ebd966468c710ec","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static SNode sourceNodeQuery_5636302460526820673(final SourceSubstituteMacroNodeContext _context) {\n    return (SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(new UUID(-8037690291156860282l, -7505894832713754871l), 5636302460526173897l, 5636302460526173940l, \"precondition\")) != null ? SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(new UUID(-8037690291156860282l, -7505894832713754871l), 5636302460526173897l, 5636302460526173940l, \"precondition\")) : _quotation_createNode_x583g4_a0a0fb());\n  }","id":52406,"modified_method":"public static SNode sourceNodeQuery_5636302460526820673(final SourceSubstituteMacroNodeContext _context) {\n    return (SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(new UUID(-8037690291156860282l, -7505894832713754871l), 5636302460526173897l, 5636302460526173940l, \"precondition\")) != null ? SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(new UUID(-8037690291156860282l, -7505894832713754871l), 5636302460526173897l, 5636302460526173940l, \"precondition\")) : _quotation_createNode_x583g4_a0a0hb());\n  }","commit_id":"3ce945047ac7ffaf1e9947ad8ebd966468c710ec","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Object propertyMacro_GetPropertyValue_5387853834547028838(final PropertyMacroContext _context) {\n    SModule module = _context.getNode().getModel().getModule();\n    if (module instanceof TransientModelsModule) {\n      module = _context.getOriginalInputModel().getModule();\n    }\n    return module.getModuleReference().toString();\n  }","id":52407,"modified_method":"public static Object propertyMacro_GetPropertyValue_1973338949476808883(final PropertyMacroContext _context) {\n    return MetaIdByDeclaration.getLanguageId((Language) _context.getOriginalInputModel().getModule()).getId().getMostSignificantBits() + \"L\";\n  }","commit_id":"3ce945047ac7ffaf1e9947ad8ebd966468c710ec","url":"https://github.com/JetBrains/MPS"},{"original_method":"public synchronized IModule findHost(IModule rootModule) throws ResolveException\n    {\n        IModule newRootModule = rootModule;\n        if (Util.isFragment(rootModule))\n        {\n            List matchingHosts = getMatchingHosts(rootModule);\n            IModule currentBestHost = null;\n            for (int hostIdx = 0; hostIdx < matchingHosts.size(); hostIdx++)\n            {\n                IModule host = ((ICapability) matchingHosts.get(hostIdx)).getModule();\n                if (currentBestHost == null)\n                {\n                    currentBestHost = host;\n                }\n                else if (currentBestHost.getVersion().compareTo(host.getVersion()) < 0)\n                {\n                    currentBestHost = host;\n                }\n            }\n            newRootModule = currentBestHost;\n\n            if (newRootModule == null)\n            {\n                throw new ResolveException(\n                    \"Unable to find host.\", rootModule, getFragmentHostRequirement(rootModule));\n            }\n        }\n\n        return newRootModule;\n    }","id":52408,"modified_method":"public synchronized Module findHost(Module rootModule) throws ResolveException\n    {\n        Module newRootModule = rootModule;\n        if (Util.isFragment(rootModule))\n        {\n            List matchingHosts = getMatchingHosts(rootModule);\n            Module currentBestHost = null;\n            for (int hostIdx = 0; hostIdx < matchingHosts.size(); hostIdx++)\n            {\n                Module host = ((Capability) matchingHosts.get(hostIdx)).getModule();\n                if (currentBestHost == null)\n                {\n                    currentBestHost = host;\n                }\n                else if (currentBestHost.getVersion().compareTo(host.getVersion()) < 0)\n                {\n                    currentBestHost = host;\n                }\n            }\n            newRootModule = currentBestHost;\n\n            if (newRootModule == null)\n            {\n                throw new ResolveException(\n                    \"Unable to find host.\", rootModule, getFragmentHostRequirement(rootModule));\n            }\n        }\n\n        return newRootModule;\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"public synchronized List getResolvedCandidates(IRequirement req, IModule reqModule)\n    {\n        // Synchronized on the module manager to make sure that no\n        // modules are added, removed, or resolved.\n        List candidates = new ArrayList();\n        if (req.getNamespace().equals(ICapability.PACKAGE_NAMESPACE)\n            && (((Requirement) req).getTargetName() != null))\n        {\n            String pkgName = ((Requirement) req).getTargetName();\n            List capList = (List) m_resolvedPkgIndex.get(pkgName);\n\n            for (int capIdx = 0; (capList != null) && (capIdx < capList.size()); capIdx++)\n            {\n                ICapability cap = (ICapability) capList.get(capIdx);\n                if (req.isSatisfied(cap))\n                {\n                    if (System.getSecurityManager() != null)\n                    {\n                        if (reqModule != ((ICapability) capList.get(capIdx)).getModule())\n                        {\n                            if ((!((BundleProtectionDomain)((ICapability) \n                                capList.get(capIdx)).getModule().getSecurityContext()).impliesDirect(\n                                new PackagePermission(((Requirement) req).getTargetName(), PackagePermission.EXPORTONLY))) ||\n                                !((reqModule == null) ||\n                                ((BundleProtectionDomain) reqModule.getSecurityContext()).impliesDirect(\n                                new PackagePermission(((Requirement) req).getTargetName(), ((ICapability) \n                                capList.get(capIdx)).getModule().getBundle(),PackagePermission.IMPORT))\n                                ))\n                            {\n                                continue;\n                            }\n                        }\n                    }\n                    candidates.add(cap);\n                }\n            }\n        }\n        else\n        {\n            Iterator i = m_resolvedCapMap.entrySet().iterator();\n            while (i.hasNext())\n            {\n                Map.Entry entry = (Map.Entry) i.next();\n                IModule module = (IModule) entry.getKey();\n                List caps = (List) entry.getValue();\n                for (int capIdx = 0; (caps != null) && (capIdx < caps.size()); capIdx++)\n                {\n                    ICapability cap = (ICapability) caps.get(capIdx);\n                    if (req.isSatisfied(cap))\n                    {\n                        if (System.getSecurityManager() != null)\n                        {\n                            if (req.getNamespace().equals(ICapability.PACKAGE_NAMESPACE) && (\n                                !((BundleProtectionDomain) cap.getModule().getSecurityContext()).impliesDirect(\n                                new PackagePermission((String) cap.getProperties().get(ICapability.PACKAGE_PROPERTY), PackagePermission.EXPORTONLY)) ||\n                                !((reqModule == null) ||\n                                ((BundleProtectionDomain) reqModule.getSecurityContext()).impliesDirect(\n                                new PackagePermission((String) cap.getProperties().get(ICapability.PACKAGE_PROPERTY), cap.getModule().getBundle(),PackagePermission.IMPORT))\n                                )))\n                            {\n                                if (reqModule != cap.getModule())\n                                {\n                                    continue;\n                                }\n                            }\n                            if (req.getNamespace().equals(ICapability.MODULE_NAMESPACE) && (\n                                !((BundleProtectionDomain) cap.getModule().getSecurityContext()).impliesDirect(\n                                new BundlePermission(cap.getModule().getSymbolicName(), BundlePermission.PROVIDE)) ||\n                                !((reqModule == null) ||\n                                ((BundleProtectionDomain) reqModule.getSecurityContext()).impliesDirect(\n                                new BundlePermission(reqModule.getSymbolicName(), BundlePermission.REQUIRE))\n                                )))\n                            {\n                                continue;\n                            }\n                        }\n                        candidates.add(cap);\n                    }\n                }\n            }\n        }\n        Collections.sort(candidates);\n        return candidates;\n    }","id":52409,"modified_method":"public Set<Capability> getCandidates(Module module, Requirement req, boolean obeyMandatory)\n    {\n        Set<Capability> result = new TreeSet(new CandidateComparator());\n\n        if (req.getNamespace().equals(Capability.MODULE_NAMESPACE))\n        {\n            result.addAll(m_modCapSet.match(req.getFilter(), obeyMandatory));\n        }\n        else if (req.getNamespace().equals(Capability.PACKAGE_NAMESPACE))\n        {\n            result.addAll(m_pkgCapSet.match(req.getFilter(), obeyMandatory));\n        }\n\n        return result;\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"private void removeFragment(IModule fragment)\n    {\n        // Get fragment list, which may be null for system bundle fragments.\n        List fragList = (List) m_fragmentMap.get(fragment.getSymbolicName());\n        if (fragList != null)\n        {\n            // Remove from fragment map.\n            fragList.remove(fragment);\n            if (fragList.size() == 0)\n            {\n                m_fragmentMap.remove(fragment.getSymbolicName());\n            }\n\n            // If we have any matching hosts, then remove  fragment while\n            // removing any older version of the new fragment. Also remove host's\n            // existing capabilities from the package index and reindex its new\n            // ones after attaching the fragment.\n            List matchingHosts = getMatchingHosts(fragment);\n            for (int hostIdx = 0; hostIdx < matchingHosts.size(); hostIdx++)\n            {\n                IModule host = ((ICapability) matchingHosts.get(hostIdx)).getModule();\n\n                // Check to see if the removed fragment was actually merged with\n                // the host, since it might not be if it wasn't the highest version.\n                // If it was, recalculate the fragments for the host.\n                IModule[] fragments = ((ModuleImpl) host).getFragments();\n                for (int fragIdx = 0;\n                    (fragments != null) && (fragIdx < fragments.length);\n                    fragIdx++)\n                {\n                    if (!fragments[fragIdx].equals(fragment))\n                    {\n                        List fragmentList = getMatchingFragments(host);\n\n                        // Remove host's existing exported packages from index.\n                        ICapability[] caps = host.getCapabilities();\n                        for (int i = 0; (caps != null) && (i < caps.length); i++)\n                        {\n                            if (caps[i].getNamespace().equals(ICapability.PACKAGE_NAMESPACE))\n                            {\n                                // Get package name.\n                                String pkgName = (String)\n                                    caps[i].getProperties().get(ICapability.PACKAGE_PROPERTY);\n                                // Remove from \"unresolved\" package map.\n                                List capList = (List) m_unresolvedPkgIndex.get(pkgName);\n                                if (capList != null)\n                                {\n                                    capList.remove(caps[i]);\n                                }\n                            }\n                        }\n\n                        // Check if fragment conflicts with existing metadata.\n                        checkForConflicts(host, fragmentList);\n\n                        // Attach the fragments to the host.\n                        fragments = (fragmentList.size() == 0)\n                            ? null\n                            : (IModule[]) fragmentList.toArray(new IModule[fragmentList.size()]);\n                        try\n                        {\n                            ((ModuleImpl) host).attachFragments(fragments);\n                        }\n                        catch (Exception ex)\n                        {\n                            // Try to clean up by removing all fragments.\n                            try\n                            {\n                                ((ModuleImpl) host).attachFragments(null);\n                            }\n                            catch (Exception ex2)\n                            {\n                            }\n                            m_logger.log(Logger.LOG_ERROR,\n                                \"Serious error attaching fragments.\", ex);\n                        }\n\n                        // Reindex the host's exported packages.\n                        caps = host.getCapabilities();\n                        for (int i = 0; (caps != null) && (i < caps.length); i++)\n                        {\n                            if (caps[i].getNamespace().equals(ICapability.PACKAGE_NAMESPACE))\n                            {\n                                indexPackageCapability(m_unresolvedPkgIndex, caps[i]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }","id":52410,"modified_method":"private void removeFragment(Module fragment)\n    {\n        // Get fragment list, which may be null for system bundle fragments.\n        List fragList = (List) m_fragmentMap.get(fragment.getSymbolicName());\n        if (fragList != null)\n        {\n            // Remove from fragment map.\n            fragList.remove(fragment);\n            if (fragList.size() == 0)\n            {\n                m_fragmentMap.remove(fragment.getSymbolicName());\n            }\n\n            // If we have any matching hosts, then remove  fragment while\n            // removing any older version of the new fragment. Also remove host's\n            // existing capabilities from the package index and reindex its new\n            // ones after attaching the fragment.\n            List matchingHosts = getMatchingHosts(fragment);\n            for (int hostIdx = 0; hostIdx < matchingHosts.size(); hostIdx++)\n            {\n                Module host = ((Capability) matchingHosts.get(hostIdx)).getModule();\n\n                // Check to see if the removed fragment was actually merged with\n                // the host, since it might not be if it wasn't the highest version.\n                // If it was, recalculate the fragments for the host.\n                List<Module> fragments = ((ModuleImpl) host).getFragments();\n                if (fragments.contains(fragment))\n                {\n                    List fragmentList = getMatchingFragments(host);\n\n                    // Remove host's existing exported packages from index.\n                    List<Capability> caps = host.getCapabilities();\n                    for (int i = 0; (caps != null) && (i < caps.size()); i++)\n                    {\n                        if (caps.get(i).getNamespace().equals(Capability.MODULE_NAMESPACE))\n                        {\n                            m_modCapSet.removeCapability(caps.get(i));\n                        }\n                        else if (caps.get(i).getNamespace().equals(Capability.PACKAGE_NAMESPACE))\n                        {\n                            m_pkgCapSet.removeCapability(caps.get(i));\n                        }\n                    }\n\n                    // Attach the fragments to the host.\n                    try\n                    {\n                        ((ModuleImpl) host).attachFragments(fragmentList);\n                    }\n                    catch (Exception ex)\n                    {\n                        // Try to clean up by removing all fragments.\n                        try\n                        {\n                            ((ModuleImpl) host).attachFragments(null);\n                        }\n                        catch (Exception ex2)\n                        {\n                        }\n                        m_logger.log(Logger.LOG_ERROR,\n                            \"Serious error attaching fragments.\", ex);\n                    }\n\n                    // Reindex the host's exported packages.\n                    caps = host.getCapabilities();\n                    for (int i = 0; (caps != null) && (i < caps.size()); i++)\n                    {\n                        if (caps.get(i).getNamespace().equals(Capability.MODULE_NAMESPACE))\n                        {\n                            m_modCapSet.addCapability(caps.get(i));\n                        }\n                        else if (caps.get(i).getNamespace().equals(Capability.PACKAGE_NAMESPACE))\n                        {\n                            m_pkgCapSet.addCapability(caps.get(i));\n                        }\n                    }\n                }\n            }\n        }\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"/**\n     * This method is used for installing system bundle extensions. It actually\n     * refreshes the system bundle module's capabilities in the resolver state\n     * to capture additional capabilities.\n     * @param module The module being refresh, which should always be the system bundle.\n    **/\n    synchronized void refreshSystemBundleModule(IModule module)\n    {\n        // The system bundle module should always be resolved, so we only need\n        // to update the resolved capability map.\n        ICapability[] caps = module.getCapabilities();\n        for (int i = 0; (caps != null) && (i < caps.length); i++)\n        {\n            List resolvedCaps = (List) m_resolvedCapMap.get(module);\n            if (resolvedCaps == null)\n            {\n                m_resolvedCapMap.put(module, resolvedCaps = new ArrayList());\n            }\n            if (!resolvedCaps.contains(caps[i]))\n            {\n                resolvedCaps.add(caps[i]);\n            }\n\n            // If the capability is a package, then add the exporter module\n            // of the wire to the \"resolved\" package index and remove it\n            // from the \"unresolved\" package index.\n            if (caps[i].getNamespace().equals(ICapability.PACKAGE_NAMESPACE))\n            {\n                // Add to \"resolved\" package index.\n                indexPackageCapability(m_resolvedPkgIndex, caps[i]);\n            }\n        }\n    }","id":52411,"modified_method":"/**\n     * This method is used for installing system bundle extensions. It actually\n     * refreshes the system bundle module's capabilities in the resolver state\n     * to capture additional capabilities.\n     * @param module The module being refresh, which should always be the system bundle.\n    **/\n    synchronized void refreshSystemBundleModule(Module module)\n    {\n        // The system bundle module should always be resolved, so we only need\n        // to update the resolved capability map.\n        List<Capability> caps = module.getCapabilities();\n        for (int i = 0; (caps != null) && (i < caps.size()); i++)\n        {\n            if (caps.get(i).getNamespace().equals(Capability.MODULE_NAMESPACE))\n            {\n                m_modCapSet.addCapability(caps.get(i));\n            }\n            else if (caps.get(i).getNamespace().equals(Capability.PACKAGE_NAMESPACE))\n            {\n                m_pkgCapSet.addCapability(caps.get(i));\n            }\n        }\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"public synchronized void moduleResolved(IModule module)\n    {\n        if (module.isResolved())\n        {\n            // At this point, we need to remove all of the resolved module's\n            // capabilities from the \"unresolved\" package map and put them in\n            // in the \"resolved\" package map, with the exception of any\n            // package exports that are also imported. In that case we need\n            // to make sure that the import actually points to the resolved\n            // module and not another module. If it points to another module\n            // then the capability should be ignored, since the framework\n            // decided to honor the import and discard the export.\n            ICapability[] caps = module.getCapabilities();\n\n            // First remove all existing capabilities from the \"unresolved\" map.\n            for (int capIdx = 0; (caps != null) && (capIdx < caps.length); capIdx++)\n            {\n                if (caps[capIdx].getNamespace().equals(ICapability.PACKAGE_NAMESPACE))\n                {\n                    // Get package name.\n                    String pkgName = (String)\n                        caps[capIdx].getProperties().get(ICapability.PACKAGE_PROPERTY);\n                    // Remove the module's capability for the package.\n                    List capList = (List) m_unresolvedPkgIndex.get(pkgName);\n                    capList.remove(caps[capIdx]);\n                }\n            }\n\n            // Next create a copy of the module's capabilities so we can\n            // null out any capabilities that should be ignored.\n            ICapability[] capsCopy = (caps == null) ? null : new ICapability[caps.length];\n            if (capsCopy != null)\n            {\n                System.arraycopy(caps, 0, capsCopy, 0, caps.length);\n            }\n            // Loop through the module's capabilities to determine which ones\n            // can be ignored by seeing which ones satifies the wire requirements.\n// TODO: RB - Bug here because a requirement for a package need not overlap the\n//            capability for that package and this assumes it does. This might\n//            require us to introduce the notion of a substitutable capability.\n            IWire[] wires = module.getWires();\n            for (int capIdx = 0; (capsCopy != null) && (capIdx < capsCopy.length); capIdx++)\n            {\n                // Loop through all wires to see if the current capability\n                // satisfies any of the wire requirements.\n                for (int wireIdx = 0; (wires != null) && (wireIdx < wires.length); wireIdx++)\n                {\n                    // If one of the module's capabilities satifies the requirement\n                    // for an existing wire, this means the capability was\n                    // substituted with another provider by the resolver and\n                    // the module's capability was not used. Therefore, we should\n                    // null it here so it doesn't get added the list of resolved\n                    // capabilities for this module.\n                    if (wires[wireIdx].getRequirement().isSatisfied(capsCopy[capIdx]))\n                    {\n                        capsCopy[capIdx] = null;\n                        break;\n                    }\n                }\n            }\n\n            // Now loop through all capabilities and add them to the \"resolved\"\n            // capability and package index maps, ignoring any that were nulled out.\n            for (int capIdx = 0; (capsCopy != null) && (capIdx < capsCopy.length); capIdx++)\n            {\n                if (capsCopy[capIdx] != null)\n                {\n                    List resolvedCaps = (List) m_resolvedCapMap.get(module);\n                    if (resolvedCaps == null)\n                    {\n                        m_resolvedCapMap.put(module, resolvedCaps = new ArrayList());\n                    }\n                    if (!resolvedCaps.contains(capsCopy[capIdx]))\n                    {\n                        resolvedCaps.add(capsCopy[capIdx]);\n                    }\n\n                    // If the capability is a package, then add the exporter module\n                    // of the wire to the \"resolved\" package index and remove it\n                    // from the \"unresolved\" package index.\n                    if (capsCopy[capIdx].getNamespace().equals(ICapability.PACKAGE_NAMESPACE))\n                    {\n                        // Add to \"resolved\" package index.\n                        indexPackageCapability(m_resolvedPkgIndex, capsCopy[capIdx]);\n                    }\n                }\n            }\n        }\n\n//System.out.println(\"UNRESOLVED PACKAGES:\");\n//dumpPackageIndex(m_unresolvedPkgIndex);\n//System.out.println(\"RESOLVED PACKAGES:\");\n//dumpPackageIndex(m_resolvedPkgIndex);\n    }","id":52412,"modified_method":"public synchronized void moduleResolved(Module module)\n    {\n        if (module.isResolved())\n        {\n            // At this point, we need to remove all of the resolved module's\n            // capabilities from the \"unresolved\" package map and put them in\n            // in the \"resolved\" package map, with the exception of any\n            // package exports that are also imported. In that case we need\n            // to make sure that the import actually points to the resolved\n            // module and not another module. If it points to another module\n            // then the capability should be ignored, since the framework\n            // decided to honor the import and discard the export.\n            List<Capability> caps = module.getCapabilities();\n\n            // Create a copy of the module's capabilities so we can\n            // null out any capabilities that should be ignored.\n            List<Capability> capsCopy = (caps == null) ? null : new ArrayList(caps);\n            // Loop through the module's capabilities to determine which ones\n            // can be ignored by seeing which ones satifies the wire requirements.\n// TODO: RB - Bug here because a requirement for a package need not overlap the\n//            capability for that package and this assumes it does. This might\n//            require us to introduce the notion of a substitutable capability.\n            List<Wire> wires = module.getWires();\n            for (int capIdx = 0; (capsCopy != null) && (capIdx < caps.size()); capIdx++)\n            {\n                // Loop through all wires to see if the current capability\n                // satisfies any of the wire requirements.\n                for (int wireIdx = 0; (wires != null) && (wireIdx < wires.size()); wireIdx++)\n                {\n                    // If one of the module's capabilities satifies the requirement\n                    // for an existing wire, this means the capability was\n                    // substituted with another provider by the resolver and\n                    // the module's capability was not used. Therefore, we should\n                    // null it here so it doesn't get added the list of resolved\n                    // capabilities for this module.\n                    if (CapabilitySet.matches(\n                        caps.get(capIdx), wires.get(wireIdx).getRequirement().getFilter()))\n                    {\n                        capsCopy.remove(caps.get(capIdx));\n                        break;\n                    }\n                }\n            }\n\n            // Now loop through all capabilities and add them to the \"resolved\"\n            // capability and package index maps, ignoring any that were nulled out.\n// TODO: FELIX3 - This is actually reversed, we need to remove exports that were imported.\n/*\n            for (int capIdx = 0; (capsCopy != null) && (capIdx < capsCopy.size()); capIdx++)\n            {\n                if (capsCopy.get(capIdx).getNamespace().equals(Capability.MODULE_NAMESPACE))\n                {\n                    m_modCapSet.addCapability(capsCopy.get(capIdx));\n                }\n                else if (capsCopy.get(capIdx).getNamespace().equals(Capability.PACKAGE_NAMESPACE))\n                {\n                    m_pkgCapSet.addCapability(capsCopy.get(capIdx));\n                }\n            }\n*/\n        }\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"public void unmergeFragment(IModule module)\n    {\n        if (!Util.isFragment(module))\n        {\n            return;\n        }\n\n        // Get fragment list, which may be null for system bundle fragments.\n        List fragList = (List) m_fragmentMap.get(module.getSymbolicName());\n        if (fragList != null)\n        {\n            // Remove from fragment map.\n            fragList.remove(module);\n            if (fragList.size() == 0)\n            {\n                m_fragmentMap.remove(module.getSymbolicName());\n            }\n\n            // If we have any matching hosts, then remove fragment while\n            // removing any older version of the new fragment. Also remove host's\n            // existing capabilities from the package index and reindex its new\n            // ones after attaching the fragment.\n            List matchingHosts = getMatchingHosts(module);\n            for (int hostIdx = 0; hostIdx < matchingHosts.size(); hostIdx++)\n            {\n                IModule host = ((ICapability) matchingHosts.get(hostIdx)).getModule();\n                // Find any unresolved hosts into which the fragment is merged\n                // and unmerge it.\n                IModule[] fragments = ((ModuleImpl) host).getFragments();\n                for (int fragIdx = 0;\n                    !host.isResolved() && (fragments != null) && (fragIdx < fragments.length);\n                    fragIdx++)\n                {\n                    if (!fragments[fragIdx].equals(module))\n                    {\n                        List fragmentList = getMatchingFragments(host);\n\n                        // Remove host's existing exported packages from index.\n                        ICapability[] caps = host.getCapabilities();\n                        for (int i = 0; (caps != null) && (i < caps.length); i++)\n                        {\n                            if (caps[i].getNamespace().equals(ICapability.PACKAGE_NAMESPACE))\n                            {\n                                // Get package name.\n                                String pkgName = (String)\n                                    caps[i].getProperties().get(ICapability.PACKAGE_PROPERTY);\n                                // Remove from \"unresolved\" package map.\n                                List capList = (List) m_unresolvedPkgIndex.get(pkgName);\n                                if (capList != null)\n                                {\n                                    capList.remove(caps[i]);\n                                }\n                            }\n                        }\n\n                        // Check if fragment conflicts with existing metadata.\n                        checkForConflicts(host, fragmentList);\n\n                        // Attach the fragments to the host.\n                        fragments = (fragmentList.size() == 0)\n                            ? null\n                            : (IModule[]) fragmentList.toArray(new IModule[fragmentList.size()]);\n                        try\n                        {\n                            ((ModuleImpl) host).attachFragments(fragments);\n                        }\n                        catch (Exception ex)\n                        {\n                            // Try to clean up by removing all fragments.\n                            try\n                            {\n                                ((ModuleImpl) host).attachFragments(null);\n                            }\n                            catch (Exception ex2)\n                            {\n                            }\n                            m_logger.log(Logger.LOG_ERROR,\n                                \"Serious error attaching fragments.\", ex);\n                        }\n\n                        // Reindex the host's exported packages.\n                        caps = host.getCapabilities();\n                        for (int i = 0; (caps != null) && (i < caps.length); i++)\n                        {\n                            if (caps[i].getNamespace().equals(ICapability.PACKAGE_NAMESPACE))\n                            {\n                                indexPackageCapability(m_unresolvedPkgIndex, caps[i]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }","id":52413,"modified_method":"public void unmergeFragment(Module fragment)\n    {\n        if (!Util.isFragment(fragment))\n        {\n            return;\n        }\n\n        removeFragment(fragment);\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"public FelixResolverState(Logger logger)\n    {\n        m_logger = logger;\n    }","id":52414,"modified_method":"public FelixResolverState(Logger logger)\n    {\n        m_logger = logger;\n        m_modules = new ArrayList<Module>();\n\n        List indices = new ArrayList();\n        indices.add(Constants.BUNDLE_SYMBOLICNAME_ATTRIBUTE);\n        m_modCapSet = new CapabilitySet(indices);\n\n        indices = new ArrayList();\n        indices.add(Capability.PACKAGE_ATTR);\n        m_pkgCapSet = new CapabilitySet(indices);\n\n        indices = new ArrayList();\n        indices.add(Constants.BUNDLE_SYMBOLICNAME_ATTRIBUTE);\n        m_hostCapSet = new CapabilitySet(indices);\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"private IModule indexFragment(Map map, IModule module)\n    {\n        List modules = (List) map.get(module.getSymbolicName());\n\n        // We want to add the fragment into the list of matching\n        // fragments in sorted order (descending version and\n        // ascending bundle identifier). Insert using a simple\n        // binary search algorithm.\n        if (modules == null)\n        {\n            modules = new ArrayList();\n            modules.add(module);\n        }\n        else\n        {\n            Version version = module.getVersion();\n            Version middleVersion = null;\n            int top = 0, bottom = modules.size() - 1, middle = 0;\n            while (top <= bottom)\n            {\n                middle = (bottom - top) / 2 + top;\n                middleVersion = ((IModule) modules.get(middle)).getVersion();\n                // Sort in reverse version order.\n                int cmp = middleVersion.compareTo(version);\n                if (cmp < 0)\n                {\n                    bottom = middle - 1;\n                }\n                else if (cmp == 0)\n                {\n                    // Sort further by ascending bundle ID.\n                    long middleId = ((IModule) modules.get(middle)).getBundle().getBundleId();\n                    long exportId = module.getBundle().getBundleId();\n                    if (middleId < exportId)\n                    {\n                        top = middle + 1;\n                    }\n                    else\n                    {\n                        bottom = middle - 1;\n                    }\n                }\n                else\n                {\n                    top = middle + 1;\n                }\n            }\n\n            // Ignore duplicates.\n            if ((top >= modules.size()) || (modules.get(top) != module))\n            {\n                modules.add(top, module);\n            }\n        }\n\n        map.put(module.getSymbolicName(), modules);\n\n        return (IModule) modules.get(0);\n    }","id":52415,"modified_method":"private static Module indexModule(Map map, Module module)\n    {\n        List modules = (List) map.get(module.getSymbolicName());\n\n        // We want to add the fragment into the list of matching\n        // fragments in sorted order (descending version and\n        // ascending bundle identifier). Insert using a simple\n        // binary search algorithm.\n        if (modules == null)\n        {\n            modules = new ArrayList();\n            modules.add(module);\n        }\n        else\n        {\n            Version version = module.getVersion();\n            Version middleVersion = null;\n            int top = 0, bottom = modules.size() - 1, middle = 0;\n            while (top <= bottom)\n            {\n                middle = (bottom - top) / 2 + top;\n                middleVersion = ((Module) modules.get(middle)).getVersion();\n                // Sort in reverse version order.\n                int cmp = middleVersion.compareTo(version);\n                if (cmp < 0)\n                {\n                    bottom = middle - 1;\n                }\n                else if (cmp == 0)\n                {\n                    // Sort further by ascending bundle ID.\n                    long middleId = ((Module) modules.get(middle)).getBundle().getBundleId();\n                    long exportId = module.getBundle().getBundleId();\n                    if (middleId < exportId)\n                    {\n                        top = middle + 1;\n                    }\n                    else\n                    {\n                        bottom = middle - 1;\n                    }\n                }\n                else\n                {\n                    top = middle + 1;\n                }\n            }\n\n            // Ignore duplicates.\n            if ((top >= modules.size()) || (modules.get(top) != module))\n            {\n                modules.add(top, module);\n            }\n        }\n\n        map.put(module.getSymbolicName(), modules);\n\n        return (Module) modules.get(0);\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"private IRequirement getFragmentHostRequirement(IModule fragment)\n    {\n        // Find the fragment's host requirement.\n        IRequirement[] reqs = fragment.getRequirements();\n        IRequirement hostReq = null;\n        for (int reqIdx = 0; (hostReq == null) && (reqIdx < reqs.length); reqIdx++)\n        {\n            if (reqs[reqIdx].getNamespace().equals(ICapability.HOST_NAMESPACE))\n            {\n                hostReq = reqs[reqIdx];\n            }\n        }\n        return hostReq;\n    }","id":52416,"modified_method":"private static Requirement getFragmentHostRequirement(Module fragment)\n    {\n        // Find the fragment's host requirement.\n        List<Requirement> reqs = fragment.getRequirements();\n        Requirement hostReq = null;\n        for (int reqIdx = 0; (hostReq == null) && (reqIdx < reqs.size()); reqIdx++)\n        {\n            if (reqs.get(reqIdx).getNamespace().equals(Capability.HOST_NAMESPACE))\n            {\n                hostReq = reqs.get(reqIdx);\n            }\n        }\n        return hostReq;\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"private List getMatchingFragments(IModule host)\n    {\n        // Find the host capability for the current host.\n        ICapability[] caps = Util.getCapabilityByNamespace(host, ICapability.HOST_NAMESPACE);\n        ICapability hostCap = (caps.length == 0) ? null : caps[0];\n\n        // If we have a host capability, then loop through all fragments trying to\n        // find ones that match.\n        List fragmentList = new ArrayList();\n        SecurityManager sm = System.getSecurityManager();\n        if (sm != null)\n        {\n            if (!((BundleProtectionDomain) host.getSecurityContext()).impliesDirect(new BundlePermission(host.getSymbolicName(), BundlePermission.HOST)))\n            {\n                return fragmentList;\n            }\n        }\n        for (Iterator it = m_fragmentMap.entrySet().iterator(); (hostCap != null) && it.hasNext(); )\n        {\n            Map.Entry entry = (Map.Entry) it.next();\n            List fragments = (List) entry.getValue();\n            IModule fragment = null;\n            for (int i = 0; (fragment == null) && (i < fragments.size()); i++)\n            {\n                IModule f = (IModule) fragments.get(i);\n                if (!((BundleImpl) f.getBundle()).isStale()\n                    && !((BundleImpl) f.getBundle()).isRemovalPending())\n                {\n                    fragment = f;\n                }\n            }\n\n            if (fragment == null)\n            {\n                continue;\n            }\n            \n            if (sm != null)\n            {\n                if (!((BundleProtectionDomain) fragment.getSecurityContext()).impliesDirect(new BundlePermission(fragment.getSymbolicName(), BundlePermission.FRAGMENT)))\n                {\n                    continue;\n                }\n            }\n            IRequirement hostReq = getFragmentHostRequirement(fragment);\n\n            // If we have a host requirement, then loop through each host and\n            // see if it matches the host requirement.\n            if ((hostReq != null) && hostReq.isSatisfied(hostCap))\n            {\n                // Now add the new fragment in bundle ID order.\n                int index = -1;\n                for (int listIdx = 0;\n                    (index < 0) && (listIdx < fragmentList.size());\n                    listIdx++)\n                {\n                    IModule existing = (IModule) fragmentList.get(listIdx);\n                    if (fragment.getBundle().getBundleId()\n                        < existing.getBundle().getBundleId())\n                    {\n                        index = listIdx;\n                    }\n                }\n                fragmentList.add(\n                    (index < 0) ? fragmentList.size() : index, fragment);\n            }\n        }\n\n        return fragmentList;\n    }","id":52417,"modified_method":"private List getMatchingFragments(Module host)\n    {\n        // Find the host capability for the current host.\n        List<Capability> caps = Util.getCapabilityByNamespace(host, Capability.HOST_NAMESPACE);\n        Capability hostCap = (caps.size() == 0) ? null : caps.get(0);\n\n        // If we have a host capability, then loop through all fragments trying to\n        // find ones that match.\n        List fragmentList = new ArrayList();\n        SecurityManager sm = System.getSecurityManager();\n        if (sm != null)\n        {\n            if (!((BundleProtectionDomain) host.getSecurityContext()).impliesDirect(new BundlePermission(host.getSymbolicName(), BundlePermission.HOST)))\n            {\n                return fragmentList;\n            }\n        }\n        for (Iterator it = m_fragmentMap.entrySet().iterator(); (hostCap != null) && it.hasNext(); )\n        {\n            Map.Entry entry = (Map.Entry) it.next();\n            List fragments = (List) entry.getValue();\n            Module fragment = null;\n            for (int i = 0; (fragment == null) && (i < fragments.size()); i++)\n            {\n                Module f = (Module) fragments.get(i);\n                if (!((BundleImpl) f.getBundle()).isStale()\n                    && !((BundleImpl) f.getBundle()).isRemovalPending())\n                {\n                    fragment = f;\n                }\n            }\n\n            if (fragment == null)\n            {\n                continue;\n            }\n            \n            if (sm != null)\n            {\n                if (!((BundleProtectionDomain) fragment.getSecurityContext()).impliesDirect(new BundlePermission(fragment.getSymbolicName(), BundlePermission.FRAGMENT)))\n                {\n                    continue;\n                }\n            }\n            Requirement hostReq = getFragmentHostRequirement(fragment);\n\n            // If we have a host requirement, then loop through each host and\n            // see if it matches the host requirement.\n            if ((hostReq != null) && CapabilitySet.matches(hostCap, hostReq.getFilter()))\n            {\n                // Now add the new fragment in bundle ID order.\n                int index = -1;\n                for (int listIdx = 0;\n                    (index < 0) && (listIdx < fragmentList.size());\n                    listIdx++)\n                {\n                    Module existing = (Module) fragmentList.get(listIdx);\n                    if (fragment.getBundle().getBundleId()\n                        < existing.getBundle().getBundleId())\n                    {\n                        index = listIdx;\n                    }\n                }\n                fragmentList.add(\n                    (index < 0) ? fragmentList.size() : index, fragment);\n            }\n        }\n\n        return fragmentList;\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"public synchronized void addModule(IModule module)\n    {\n        if (Util.isFragment(module))\n        {\n            addFragment(module);\n        }\n        else\n        {\n            addHost(module);\n        }\n\n//System.out.println(\"UNRESOLVED PACKAGES:\");\n//dumpPackageIndex(m_unresolvedPkgIndex);\n//System.out.println(\"RESOLVED PACKAGES:\");\n//dumpPackageIndex(m_resolvedPkgIndex);\n    }","id":52418,"modified_method":"public synchronized void addModule(Module module)\n    {\n        if (isSingleton(module))\n        {\n            // Find the currently selected singleton, which is either the\n            // highest version or the resolved one.\n            List<Module> modules = m_singletons.get(module.getSymbolicName());\n            // Get the highest version.\n            Module current = ((modules != null) && !modules.isEmpty()) ? modules.get(0) : null;\n            // Now check to see if there is a resolved one instead.\n            for (int i = 0; (modules != null) && (i < modules.size()); i++)\n            {\n                if (modules.get(i).isResolved())\n                {\n                    current = modules.get(i);\n                }\n            }\n\n            // Index the new singleton.\n            Module highest = indexModule(m_singletons, module);\n            // If the currently selected singleton is not resolved and\n            // the newly added singleton is a higher version, then select\n            // it instead.\n            if ((current != null) && !current.isResolved() && (current != highest))\n            {\n                if (Util.isFragment(current))\n                {\n                    removeFragment(current);\n                }\n                else\n                {\n                    removeHost(current);\n                }\n            }\n            else if (current != null)\n            {\n                module = null;\n            }\n        }\n\n        if ((module != null) && Util.isFragment(module))\n        {\n             addFragment(module);\n        }\n        else if (module != null)\n        {\n            addHost(module);\n        }\n\n//System.out.println(\"UNRESOLVED PACKAGES:\");\n//dumpPackageIndex(m_unresolvedPkgIndex);\n//System.out.println(\"RESOLVED PACKAGES:\");\n//dumpPackageIndex(m_resolvedPkgIndex);\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"private List getMatchingHosts(IModule fragment)\n    {\n        // Find the fragment's host requirement.\n        IRequirement hostReq = getFragmentHostRequirement(fragment);\n\n        // Create a list of all matching hosts for this fragment.\n        List matchingHosts = new ArrayList();\n        SecurityManager sm = System.getSecurityManager();\n        if (sm != null)\n        {\n            if (!((BundleProtectionDomain) fragment.getSecurityContext()).impliesDirect(new BundlePermission(\n                fragment.getSymbolicName(), BundlePermission.FRAGMENT)))\n            {\n                return matchingHosts;\n            }\n        }\n        for (int hostIdx = 0; (hostReq != null) && (hostIdx < m_moduleList.size()); hostIdx++)\n        {\n            IModule host = (IModule) m_moduleList.get(hostIdx);\n            // Only look at unresolved hosts, since we don't support\n            // dynamic attachment of fragments.\n            if (host.isResolved()\n                || ((BundleImpl) host.getBundle()).isStale()\n                || ((BundleImpl) host.getBundle()).isRemovalPending())\n            {\n                continue;\n            }\n\n            // Find the host capability for the current host.\n            ICapability hostCap = Util.getSatisfyingCapability(host, hostReq);\n\n            // If there is no host capability in the current module,\n            // then just ignore it.\n            if (hostCap == null)\n            {\n                continue;\n            }\n            \n            if (sm != null)\n            {\n                if (!((BundleProtectionDomain) host.getSecurityContext()).impliesDirect(new BundlePermission(host.getSymbolicName(), \n                    BundlePermission.HOST)))\n                {\n                    continue;\n                }\n            }\n\n            matchingHosts.add(hostCap);\n        }\n\n        return matchingHosts;\n    }","id":52419,"modified_method":"private List getMatchingHosts(Module fragment)\n    {\n        // Find the fragment's host requirement.\n        Requirement hostReq = getFragmentHostRequirement(fragment);\n\n        // Create a list of all matching hosts for this fragment.\n        List matchingHosts = new ArrayList();\n        SecurityManager sm = System.getSecurityManager();\n        if (sm != null)\n        {\n            if (!((BundleProtectionDomain) fragment.getSecurityContext()).impliesDirect(new BundlePermission(\n                fragment.getSymbolicName(), BundlePermission.FRAGMENT)))\n            {\n                return matchingHosts;\n            }\n        }\n\n        Set<Capability> hostCaps = m_hostCapSet.match(hostReq.getFilter(), true);\n\n        for (Capability hostCap : hostCaps)\n        {\n            // Only look at unresolved hosts, since we don't support\n            // dynamic attachment of fragments.\n            if (hostCap.getModule().isResolved()\n                || ((BundleImpl) hostCap.getModule().getBundle()).isStale()\n                || ((BundleImpl) hostCap.getModule().getBundle()).isRemovalPending())\n            {\n                continue;\n            }\n\n            if (sm != null)\n            {\n                if (!((BundleProtectionDomain) hostCap.getModule()\n                        .getSecurityContext()).impliesDirect(\n                            new BundlePermission(hostCap.getModule().getSymbolicName(),\n                            BundlePermission.HOST)))\n                {\n                    continue;\n                }\n            }\n\n            matchingHosts.add(hostCap);\n        }\n\n        return matchingHosts;\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"public synchronized IModule[] getModules()\n    {\n        return (IModule[]) m_moduleList.toArray(new IModule[m_moduleList.size()]);\n    }","id":52420,"modified_method":"public synchronized List<Module> getModules()\n    {\n        return m_modules;\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"private void addHost(IModule host)\n    {\n        // When a module is added, we first need to pre-merge any potential fragments\n        // into the host and then second create an aggregated list of unresolved\n        // capabilities to simplify later processing when resolving bundles.\n        m_moduleList.add(host);\n\n        //\n        // First, merge applicable fragments.\n        //\n\n        List fragmentList = getMatchingFragments(host);\n\n        // Attach any fragments we found for this host.\n        if (fragmentList.size() > 0)\n        {\n            // Check if fragment conflicts with existing metadata.\n            checkForConflicts(host, fragmentList);\n\n            // Attach the fragments to the host.\n            IModule[] fragments =\n                (IModule[]) fragmentList.toArray(new IModule[fragmentList.size()]);\n            try\n            {\n                ((ModuleImpl) host).attachFragments(fragments);\n            }\n            catch (Exception ex)\n            {\n                // Try to clean up by removing all fragments.\n                try\n                {\n                    ((ModuleImpl) host).attachFragments(null);\n                }\n                catch (Exception ex2)\n                {\n                }\n                m_logger.log(Logger.LOG_ERROR,\n                    \"Serious error attaching fragments.\", ex);\n            }\n        }\n\n        //\n        // Second, index module's capabilities.\n        //\n\n        ICapability[] caps = host.getCapabilities();\n\n        // Add exports to unresolved package map.\n        for (int i = 0; (caps != null) && (i < caps.length); i++)\n        {\n            if (caps[i].getNamespace().equals(ICapability.PACKAGE_NAMESPACE))\n            {\n                indexPackageCapability(m_unresolvedPkgIndex, caps[i]);\n            }\n        }\n    }","id":52421,"modified_method":"private void addHost(Module host)\n    {\n        // When a module is added, we first need to pre-merge any potential fragments\n        // into the host and then second create an aggregated list of unresolved\n        // capabilities to simplify later processing when resolving bundles.\n        m_modules.add(host);\n        List<Capability> caps = Util.getCapabilityByNamespace(host, Capability.HOST_NAMESPACE);\n        if (caps.size() > 0)\n        {\n            m_hostCapSet.addCapability(caps.get(0));\n        }\n\n        //\n        // First, merge applicable fragments.\n        //\n\n        List<Module> fragments = getMatchingFragments(host);\n\n        // Attach any fragments we found for this host.\n        if (fragments.size() > 0)\n        {\n            // Attach the fragments to the host.\n            try\n            {\n                ((ModuleImpl) host).attachFragments(fragments);\n            }\n            catch (Exception ex)\n            {\n                // Try to clean up by removing all fragments.\n                try\n                {\n                    ((ModuleImpl) host).attachFragments(null);\n                }\n                catch (Exception ex2)\n                {\n                }\n                m_logger.log(Logger.LOG_ERROR,\n                    \"Serious error attaching fragments.\", ex);\n            }\n        }\n\n        //\n        // Second, index module's capabilities.\n        //\n\n        caps = host.getCapabilities();\n\n        // Add exports to unresolved package map.\n        for (int i = 0; (caps != null) && (i < caps.size()); i++)\n        {\n            if (caps.get(i).getNamespace().equals(Capability.MODULE_NAMESPACE))\n            {\n                m_modCapSet.addCapability(caps.get(i));\n            }\n            else if (caps.get(i).getNamespace().equals(Capability.PACKAGE_NAMESPACE))\n            {\n                m_pkgCapSet.addCapability(caps.get(i));\n            }\n        }\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"private void removeHost(IModule host)\n    {\n        // We need remove the host's exports from the \"resolved\" and\n        // \"unresolved\" package maps, remove its dependencies on fragments\n        // and exporters, and remove it from the module list.\n        m_moduleList.remove(host);\n\n        // Remove exports from package maps.\n        ICapability[] caps = host.getCapabilities();\n        for (int i = 0; (caps != null) && (i < caps.length); i++)\n        {\n            if (caps[i].getNamespace().equals(ICapability.PACKAGE_NAMESPACE))\n            {\n                // Get package name.\n                String pkgName = (String)\n                    caps[i].getProperties().get(ICapability.PACKAGE_PROPERTY);\n                // Remove from \"unresolved\" package map.\n                List capList = (List) m_unresolvedPkgIndex.get(pkgName);\n                if (capList != null)\n                {\n                    capList.remove(caps[i]);\n                }\n\n                // Remove from \"resolved\" package map.\n                capList = (List) m_resolvedPkgIndex.get(pkgName);\n                if (capList != null)\n                {\n                    capList.remove(caps[i]);\n                }\n            }\n        }\n\n        // Remove the module from the \"resolved\" map.\n        m_resolvedCapMap.remove(host);\n\n        // Set fragments to null, which will remove the module from all\n        // of its dependent fragment modules.\n        try\n        {\n            ((ModuleImpl) host).attachFragments(null);\n        }\n        catch (Exception ex)\n        {\n            m_logger.log(Logger.LOG_ERROR, \"Error detaching fragments.\", ex);\n        }\n        // Set wires to null, which will remove the module from all\n        // of its dependent modules.\n        ((ModuleImpl) host).setWires(null);\n    }","id":52422,"modified_method":"private void removeHost(Module host)\n    {\n        // We need remove the host's exports from the \"resolved\" and\n        // \"unresolved\" package maps, remove its dependencies on fragments\n        // and exporters, and remove it from the module list.\n        m_modules.remove(host);\n        List<Capability> caps = Util.getCapabilityByNamespace(host, Capability.HOST_NAMESPACE);\n        if (caps.size() > 0)\n        {\n            m_hostCapSet.removeCapability(caps.get(0));\n        }\n\n        // Remove exports from package maps.\n        caps = host.getCapabilities();\n        for (int i = 0; (caps != null) && (i < caps.size()); i++)\n        {\n            if (caps.get(i).getNamespace().equals(Capability.MODULE_NAMESPACE))\n            {\n                m_modCapSet.removeCapability(caps.get(i));\n            }\n            else if (caps.get(i).getNamespace().equals(Capability.PACKAGE_NAMESPACE))\n            {\n                m_pkgCapSet.removeCapability(caps.get(i));\n            }\n        }\n\n        // Set fragments to null, which will remove the module from all\n        // of its dependent fragment modules.\n        try\n        {\n            ((ModuleImpl) host).attachFragments(null);\n        }\n        catch (Exception ex)\n        {\n            m_logger.log(Logger.LOG_ERROR, \"Error detaching fragments.\", ex);\n        }\n        // Set wires to null, which will remove the module from all\n        // of its dependent modules.\n        ((ModuleImpl) host).setWires(null);\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"private void addFragment(IModule fragment)\n    {\n// TODO: FRAGMENT - This should check to make sure that the host allows fragments.\n        IModule bestFragment = indexFragment(m_fragmentMap, fragment);\n\n        // If the newly added fragment is the highest version for\n        // its given symbolic name, then try to merge it to any\n        // matching unresolved hosts and remove the previous highest\n        // version of the fragment.\n        if (bestFragment == fragment)\n        {\n\n            // If we have any matching hosts, then merge the new fragment while\n            // removing any older version of the new fragment. Also remove host's\n            // existing capabilities from the package index and reindex its new\n            // ones after attaching the fragment.\n            List matchingHosts = getMatchingHosts(fragment);\n            for (int hostIdx = 0; hostIdx < matchingHosts.size(); hostIdx++)\n            {\n                IModule host = ((ICapability) matchingHosts.get(hostIdx)).getModule();\n\n                // Get the fragments currently attached to the host so we\n                // can remove the older version of the current fragment, if any.\n                IModule[] fragments = ((ModuleImpl) host).getFragments();\n                List fragmentList = new ArrayList();\n                for (int fragIdx = 0;\n                    (fragments != null) && (fragIdx < fragments.length);\n                    fragIdx++)\n                {\n                    if (!fragments[fragIdx].getSymbolicName().equals(\n                        bestFragment.getSymbolicName()))\n                    {\n                        fragmentList.add(fragments[fragIdx]);\n                    }\n                }\n\n                // Now add the new fragment in bundle ID order.\n                int index = -1;\n                for (int listIdx = 0;\n                    (index < 0) && (listIdx < fragmentList.size());\n                    listIdx++)\n                {\n                    IModule f = (IModule) fragmentList.get(listIdx);\n                    if (bestFragment.getBundle().getBundleId()\n                        < f.getBundle().getBundleId())\n                    {\n                        index = listIdx;\n                    }\n                }\n                fragmentList.add(\n                    (index < 0) ? fragmentList.size() : index, bestFragment);\n\n                // Remove host's existing exported packages from index.\n                ICapability[] caps = host.getCapabilities();\n                for (int i = 0; (caps != null) && (i < caps.length); i++)\n                {\n                    if (caps[i].getNamespace().equals(ICapability.PACKAGE_NAMESPACE))\n                    {\n                        // Get package name.\n                        String pkgName = (String)\n                            caps[i].getProperties().get(ICapability.PACKAGE_PROPERTY);\n                        // Remove from \"unresolved\" package map.\n                        List capList = (List) m_unresolvedPkgIndex.get(pkgName);\n                        if (capList != null)\n                        {\n                            capList.remove(caps[i]);\n                        }\n                    }\n                }\n\n                // Check if fragment conflicts with existing metadata.\n                checkForConflicts(host, fragmentList);\n\n                // Attach the fragments to the host.\n                fragments = (fragmentList.size() == 0)\n                    ? null\n                    : (IModule[]) fragmentList.toArray(new IModule[fragmentList.size()]);\n                try\n                {\n                    ((ModuleImpl) host).attachFragments(fragments);\n                }\n                catch (Exception ex)\n                {\n                    // Try to clean up by removing all fragments.\n                    try\n                    {\n                        ((ModuleImpl) host).attachFragments(null);\n                    }\n                    catch (Exception ex2)\n                    {\n                    }\n                    m_logger.log(Logger.LOG_ERROR,\n                        \"Serious error attaching fragments.\", ex);\n                }\n\n                // Reindex the host's exported packages.\n                caps = host.getCapabilities();\n                for (int i = 0; (caps != null) && (i < caps.length); i++)\n                {\n                    if (caps[i].getNamespace().equals(ICapability.PACKAGE_NAMESPACE))\n                    {\n                        indexPackageCapability(m_unresolvedPkgIndex, caps[i]);\n                    }\n                }\n            }\n        }\n    }","id":52423,"modified_method":"private void addFragment(Module fragment)\n    {\n// TODO: FRAGMENT - This should check to make sure that the host allows fragments.\n        Module bestFragment = indexModule(m_fragmentMap, fragment);\n\n        // If the newly added fragment is the highest version for\n        // its given symbolic name, then try to merge it to any\n        // matching unresolved hosts and remove the previous highest\n        // version of the fragment.\n        if (bestFragment == fragment)\n        {\n\n            // If we have any matching hosts, then merge the new fragment while\n            // removing any older version of the new fragment. Also remove host's\n            // existing capabilities from the package index and reindex its new\n            // ones after attaching the fragment.\n            List matchingHosts = getMatchingHosts(fragment);\n            for (int hostIdx = 0; hostIdx < matchingHosts.size(); hostIdx++)\n            {\n                Module host = ((Capability) matchingHosts.get(hostIdx)).getModule();\n\n                // Get the fragments currently attached to the host so we\n                // can remove the older version of the current fragment, if any.\n                List<Module> fragments = ((ModuleImpl) host).getFragments();\n                List<Module> fragmentList = new ArrayList();\n                for (int fragIdx = 0;\n                    (fragments != null) && (fragIdx < fragments.size());\n                    fragIdx++)\n                {\n                    if (!fragments.get(fragIdx).getSymbolicName().equals(\n                        bestFragment.getSymbolicName()))\n                    {\n                        fragmentList.add(fragments.get(fragIdx));\n                    }\n                }\n\n                // Now add the new fragment in bundle ID order.\n                int index = -1;\n                for (int listIdx = 0;\n                    (index < 0) && (listIdx < fragmentList.size());\n                    listIdx++)\n                {\n                    Module f = fragmentList.get(listIdx);\n                    if (bestFragment.getBundle().getBundleId()\n                        < f.getBundle().getBundleId())\n                    {\n                        index = listIdx;\n                    }\n                }\n                fragmentList.add(\n                    (index < 0) ? fragmentList.size() : index, bestFragment);\n\n                // Remove host's existing exported packages from index.\n                List<Capability> caps = host.getCapabilities();\n                for (int i = 0; (caps != null) && (i < caps.size()); i++)\n                {\n                    if (caps.get(i).getNamespace().equals(Capability.MODULE_NAMESPACE))\n                    {\n                        m_modCapSet.removeCapability(caps.get(i));\n                    }\n                    else if (caps.get(i).getNamespace().equals(Capability.PACKAGE_NAMESPACE))\n                    {\n                        m_pkgCapSet.removeCapability(caps.get(i));\n                    }\n                }\n\n                // Attach the fragments to the host.\n                fragments = (fragmentList.size() == 0) ? null : fragmentList;\n                try\n                {\n                    ((ModuleImpl) host).attachFragments(fragments);\n                }\n                catch (Exception ex)\n                {\n                    // Try to clean up by removing all fragments.\n                    try\n                    {\n                        ((ModuleImpl) host).attachFragments(null);\n                    }\n                    catch (Exception ex2)\n                    {\n                    }\n                    m_logger.log(Logger.LOG_ERROR,\n                        \"Serious error attaching fragments.\", ex);\n                }\n\n                // Reindex the host's exported packages.\n                caps = host.getCapabilities();\n                for (int i = 0; (caps != null) && (i < caps.size()); i++)\n                {\n                    if (caps.get(i).getNamespace().equals(Capability.MODULE_NAMESPACE))\n                    {\n                        m_modCapSet.addCapability(caps.get(i));\n                    }\n                    else if (caps.get(i).getNamespace().equals(Capability.PACKAGE_NAMESPACE))\n                    {\n                        m_pkgCapSet.addCapability(caps.get(i));\n                    }\n                }\n            }\n        }\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"public synchronized void removeModule(IModule module)\n    {\n        if (Util.isFragment(module))\n        {\n            removeFragment(module);\n        }\n        else\n        {\n            removeHost(module);\n        }\n    }","id":52424,"modified_method":"public synchronized void removeModule(Module module)\n    {\n        // If this module is a singleton, then remove it from the\n        // singleton map.\n        List<Module> modules = m_singletons.get(module.getSymbolicName());\n        if (modules != null)\n        {\n            modules.remove(module);\n            if (modules.size() == 0)\n            {\n                m_singletons.remove(module.getSymbolicName());\n            }\n        }\n\n        if (Util.isFragment(module))\n        {\n            removeFragment(module);\n        }\n        else\n        {\n            removeHost(module);\n        }\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"public synchronized ICapability[] getCapabilities()\n    {\n        if (m_cachedCapabilities == null)\n        {\n            List capList = (m_capabilities == null)\n                ? new ArrayList() : new ArrayList(Arrays.asList(m_capabilities));\n            for (int fragIdx = 0;\n                (m_fragments != null) && (fragIdx < m_fragments.length);\n                fragIdx++)\n            {\n                ICapability[] caps = m_fragments[fragIdx].getCapabilities();\n                for (int capIdx = 0;\n                    (caps != null) && (capIdx < caps.length);\n                    capIdx++)\n                {\n                    if (caps[capIdx].getNamespace().equals(ICapability.PACKAGE_NAMESPACE))\n                    {\n                        capList.add(\n                            new Capability(\n                                this,\n                                caps[capIdx].getNamespace(),\n                                ((Capability) caps[capIdx]).getDirectives(),\n                                ((Capability) caps[capIdx]).getAttributes()));\n                    }\n                }\n            }\n            m_cachedCapabilities = (ICapability[])\n                capList.toArray(new ICapability[capList.size()]);\n        }\n        return m_cachedCapabilities;\n    }","id":52425,"modified_method":"public synchronized List<Capability> getCapabilities()\n    {\n        if (m_cachedCapabilities == null)\n        {\n            List capList = (m_capabilities == null)\n                ? new ArrayList<Capability>()\n                : new ArrayList<Capability>(m_capabilities);\n            for (int fragIdx = 0;\n                (m_fragments != null) && (fragIdx < m_fragments.size());\n                fragIdx++)\n            {\n                List<Capability> caps = m_fragments.get(fragIdx).getCapabilities();\n                for (int capIdx = 0;\n                    (caps != null) && (capIdx < caps.size());\n                    capIdx++)\n                {\n                    if (caps.get(capIdx).getNamespace().equals(Capability.PACKAGE_NAMESPACE))\n                    {\n                        capList.add(\n                            new CapabilityImpl(\n                                this,\n                                caps.get(capIdx).getNamespace(),\n                                caps.get(capIdx).getDirectives(),\n                                caps.get(capIdx).getAttributes()));\n                    }\n                }\n            }\n            m_cachedCapabilities = Collections.unmodifiableList(capList);\n        }\n        return m_cachedCapabilities;\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"public synchronized void removeDependentHost(IModule module)\n    {\n        m_dependentHosts = removeDependent(m_dependentHosts, module);\n    }","id":52426,"modified_method":"public synchronized void removeDependentHost(Module module)\n    {\n        m_dependentHosts.remove(module);\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"public synchronized void addDependentImporter(IModule module)\n    {\n        m_dependentImporters = addDependent(m_dependentImporters, module);\n    }","id":52427,"modified_method":"public synchronized void addDependentImporter(Module module)\n    {\n        if (!m_dependentImporters.contains(module))\n        {\n            m_dependentImporters.add(module);\n        }\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"public synchronized void addDependentHost(IModule module)\n    {\n        m_dependentHosts = addDependent(m_dependentHosts, module);\n    }","id":52428,"modified_method":"public synchronized void addDependentHost(Module module)\n    {\n        if (!m_dependentHosts.contains(module))\n        {\n            m_dependentHosts.add(module);\n        }\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"private Object searchImports(String name, boolean isClass)\n        throws ClassNotFoundException, ResourceNotFoundException\n    {\n        // We delegate to the module's wires to find the class or resource.\n        IWire[] wires = getWires();\n        for (int i = 0; (wires != null) && (i < wires.length); i++)\n        {\n            // If we find the class or resource, then return it.\n            Object result = (isClass)\n                ? (Object) wires[i].getClass(name)\n                : (Object) wires[i].getResource(name);\n            if (result != null)\n            {\n                return result;\n            }\n        }\n\n        return null;\n    }","id":52429,"modified_method":"private Object searchImports(String name, boolean isClass)\n        throws ClassNotFoundException, ResourceNotFoundException\n    {\n        // We delegate to the module's wires to find the class or resource.\n        List<Wire> wires = getWires();\n        for (int i = 0; (wires != null) && (i < wires.size()); i++)\n        {\n            // If we find the class or resource, then return it.\n            Object result = (isClass)\n                ? (Object) wires.get(i).getClass(name)\n                : (Object) wires.get(i).getResource(name);\n            if (result != null)\n            {\n                return result;\n            }\n        }\n\n        return null;\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"public ModuleImpl(\n        Logger logger, Map configMap, FelixResolver resolver,\n        Bundle bundle, String id, Map headerMap, IContent content,\n        URLStreamHandler streamHandler, String[] bootPkgs,\n        boolean[] bootPkgWildcards)\n        throws BundleException\n    {\n        m_logger = logger;\n        m_configMap = configMap;\n        m_resolver = resolver;\n        m_bundle = bundle;\n        m_id = id;\n        m_headerMap = headerMap;\n        m_content = content;\n        m_streamHandler = streamHandler;\n        m_bootPkgs = bootPkgs;\n        m_bootPkgWildcards = bootPkgWildcards;\n\n        m_implicitBootDelegation =\n            (m_configMap.get(FelixConstants.IMPLICIT_BOOT_DELEGATION_PROP) == null)\n            || Boolean.valueOf(\n                (String) m_configMap.get(\n                    FelixConstants.IMPLICIT_BOOT_DELEGATION_PROP)).booleanValue();\n\n        ClassLoader bootLoader = m_defBootClassLoader;\n        Object map = m_configMap.get(FelixConstants.BOOT_CLASSLOADERS_PROP);\n        if (map instanceof Map)\n        {\n            Object l = ((Map) map).get(bundle);\n            if (l instanceof ClassLoader)\n            {\n                bootLoader = (ClassLoader) l;\n            }\n        }\n        m_bootClassLoader = bootLoader;\n\n        ManifestParser mp = new ManifestParser(m_logger, m_configMap, this, m_headerMap);\n\n        // Record some of the parsed metadata. Note, if this is an extension\n        // bundle it's exports are removed, since they will be added to the\n        // system bundle directly later on.\n        m_manifestVersion = mp.getManifestVersion();\n        m_version = mp.getBundleVersion();\n        m_capabilities = mp.isExtension() ? null : mp.getCapabilities();\n        m_requirements = mp.getRequirements();\n        m_dynamicRequirements = mp.getDynamicRequirements();\n        m_nativeLibraries = mp.getLibraries();\n        m_declaredActivationPolicy = mp.getActivationPolicy();\n        m_activationExcludes = (mp.getActivationExcludeDirective() == null)\n            ? null\n            : ManifestParser.parseDelimitedString(mp.getActivationExcludeDirective(), \",\");\n        m_activationIncludes = (mp.getActivationIncludeDirective() == null)\n            ? null\n            : ManifestParser.parseDelimitedString(mp.getActivationIncludeDirective(), \",\");\n        m_symbolicName = mp.getSymbolicName();\n        m_isExtension = mp.isExtension();\n    }","id":52430,"modified_method":"public ModuleImpl(\n        Logger logger, Map configMap, FelixResolver resolver,\n        Bundle bundle, String id, Map headerMap, Content content,\n        URLStreamHandler streamHandler, String[] bootPkgs,\n        boolean[] bootPkgWildcards)\n        throws BundleException\n    {\n        m_logger = logger;\n        m_configMap = configMap;\n        m_resolver = resolver;\n        m_bundle = bundle;\n        m_id = id;\n        m_headerMap = headerMap;\n        m_content = content;\n        m_streamHandler = streamHandler;\n        m_bootPkgs = bootPkgs;\n        m_bootPkgWildcards = bootPkgWildcards;\n\n        m_implicitBootDelegation =\n            (m_configMap.get(FelixConstants.IMPLICIT_BOOT_DELEGATION_PROP) == null)\n            || Boolean.valueOf(\n                (String) m_configMap.get(\n                    FelixConstants.IMPLICIT_BOOT_DELEGATION_PROP)).booleanValue();\n\n        ClassLoader bootLoader = m_defBootClassLoader;\n        Object map = m_configMap.get(FelixConstants.BOOT_CLASSLOADERS_PROP);\n        if (map instanceof Map)\n        {\n            Object l = ((Map) map).get(bundle);\n            if (l instanceof ClassLoader)\n            {\n                bootLoader = (ClassLoader) l;\n            }\n        }\n        m_bootClassLoader = bootLoader;\n\n        ManifestParser mp = new ManifestParser(m_logger, m_configMap, this, m_headerMap);\n\n        // Record some of the parsed metadata. Note, if this is an extension\n        // bundle it's exports are removed, since they will be added to the\n        // system bundle directly later on.\n        m_manifestVersion = mp.getManifestVersion();\n        m_version = mp.getBundleVersion();\n        m_capabilities = mp.isExtension() ? null : mp.getCapabilities();\n        m_requirements = mp.getRequirements();\n        m_dynamicRequirements = mp.getDynamicRequirements();\n        m_nativeLibraries = mp.getLibraries();\n        m_declaredActivationPolicy = mp.getActivationPolicy();\n        m_activationExcludes = (mp.getActivationExcludeDirective() == null)\n            ? null\n            : ManifestParser.parseDelimitedString(mp.getActivationExcludeDirective(), \",\");\n        m_activationIncludes = (mp.getActivationIncludeDirective() == null)\n            ? null\n            : ManifestParser.parseDelimitedString(mp.getActivationIncludeDirective(), \",\");\n        m_symbolicName = mp.getSymbolicName();\n        m_isExtension = mp.isExtension();\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"boolean isActivationTrigger(String pkgName)\n    {\n        if ((m_activationIncludes == null) && (m_activationExcludes == null))\n        {\n            return true;\n        }\n\n        // If there are no include filters then all classes are included\n        // by default, otherwise try to find one match.\n        boolean included = (m_activationIncludes == null);\n        for (int i = 0;\n            (!included) && (m_activationIncludes != null) && (i < m_activationIncludes.length);\n            i++)\n        {\n            included = m_activationIncludes[i].equals(pkgName);\n        }\n\n        // If there are no exclude filters then no classes are excluded\n        // by default, otherwise try to find one match.\n        boolean excluded = false;\n        for (int i = 0;\n            (!excluded) && (m_activationExcludes != null) && (i < m_activationExcludes.length);\n            i++)\n        {\n            excluded = m_activationExcludes[i].equals(pkgName);\n        }\n        return included && !excluded;\n    }","id":52431,"modified_method":"boolean isActivationTrigger(String pkgName)\n    {\n        if ((m_activationIncludes == null) && (m_activationExcludes == null))\n        {\n            return true;\n        }\n\n        // If there are no include filters then all classes are included\n        // by default, otherwise try to find one match.\n        boolean included = (m_activationIncludes == null);\n        for (int i = 0;\n            (!included) && (m_activationIncludes != null) && (i < m_activationIncludes.size());\n            i++)\n        {\n            included = m_activationIncludes.get(i).equals(pkgName);\n        }\n\n        // If there are no exclude filters then no classes are excluded\n        // by default, otherwise try to find one match.\n        boolean excluded = false;\n        for (int i = 0;\n            (!excluded) && (m_activationExcludes != null) && (i < m_activationExcludes.size());\n            i++)\n        {\n            excluded = m_activationExcludes.get(i).equals(pkgName);\n        }\n        return included && !excluded;\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"private Object searchDynamicImports(\n        String name, String pkgName, boolean isClass)\n        throws ClassNotFoundException, ResourceNotFoundException\n    {\n        // At this point, the module's imports were searched and so was the\n        // the module's content. Now we make an attempt to load the\n        // class/resource via a dynamic import, if possible.\n        IWire wire = null;\n        try\n        {\n            wire = m_resolver.resolveDynamicImport(this, pkgName);\n        }\n        catch (ResolveException ex)\n        {\n            // Ignore this since it is likely normal.\n        }\n\n        // If the dynamic import was successful, then this initial\n        // time we must directly return the result from dynamically\n        // created wire, but subsequent requests for classes/resources\n        // in the associated package will be processed as part of\n        // normal static imports.\n        if (wire != null)\n        {\n            // Return the class or resource.\n            return (isClass)\n                ? (Object) wire.getClass(name)\n                : (Object) wire.getResource(name);\n        }\n\n        // If implicit boot delegation is enabled, then try to guess whether\n        // we should boot delegate.\n        if (m_implicitBootDelegation)\n        {\n            // At this point, the class/resource could not be found by the bundle's\n            // static or dynamic imports, nor its own content. Before we throw\n            // an exception, we will try to determine if the instigator of the\n            // class/resource load was a class from a bundle or not. This is necessary\n            // because the specification mandates that classes on the class path\n            // should be hidden (except for java.*), but it does allow for these\n            // classes/resources to be exposed by the system bundle as an export.\n            // However, in some situations classes on the class path make the faulty\n            // assumption that they can access everything on the class path from\n            // every other class loader that they come in contact with. This is\n            // not true if the class loader in question is from a bundle. Thus,\n            // this code tries to detect that situation. If the class instigating\n            // the load request was NOT from a bundle, then we will make the\n            // assumption that the caller actually wanted to use the parent class\n            // loader and we will delegate to it. If the class was\n            // from a bundle, then we will enforce strict class loading rules\n            // for the bundle and throw an exception.\n\n            // Get the class context to see the classes on the stack.\n            Class[] classes = m_sm.getClassContext();\n            // Start from 1 to skip security manager class.\n            for (int i = 1; i < classes.length; i++)\n            {\n                // Find the first class on the call stack that is not from\n                // the class loader that loaded the Felix classes or is not\n                // a class loader or class itself, because we want to ignore\n                // calls to ClassLoader.loadClass() and Class.forName() since\n                // we are trying to find out who instigated the class load.\n                // Also ignore inner classes of class loaders, since we can\n                // assume they are a class loader too.\n\n// TODO: FRAMEWORK - This check is a hack and we should see if we can think\n// of another way to do it, since it won't necessarily work in all situations.\n                // Since Felix uses threads for changing the start level\n                // and refreshing packages, it is possible that there is no\n                // module classes on the call stack; therefore, as soon as we\n                // see Thread on the call stack we exit this loop. Other cases\n                // where modules actually use threads are not an issue because\n                // the module classes will be on the call stack before the\n                // Thread class.\n                if (Thread.class.equals(classes[i]))\n                {\n                    break;\n                }\n                else if (isClassNotLoadedFromBundle(classes[i]))\n                {\n                    // If the instigating class was not from a bundle,\n                    // then delegate to the parent class loader; otherwise,\n                    // break out of loop and return null.\n                    boolean delegate = true;\n                    ClassLoader last = null;\n                    for (ClassLoader cl = classes[i].getClassLoader(); (cl != null) && (last != cl); cl = cl.getClass().getClassLoader())\n                    {\n                        last = cl;\n                        if (ModuleClassLoader.class.isInstance(cl))\n                        {\n                            delegate = false;\n                            break;\n                        }\n                    }\n                    // Delegate to the parent class loader unless this call\n                    // is due to outside code calling a method on the bundle\n                    // interface (e.g., Bundle.loadClass()).\n                    if (delegate && !Bundle.class.isAssignableFrom(classes[i - 1]))\n                    {\n                        try\n                        {\n                            // Return the class or resource from the parent class loader.\n                            return (isClass)\n                                ? (Object) this.getClass().getClassLoader().loadClass(name)\n                                : (Object) this.getClass().getClassLoader().getResource(name);\n                        }\n                        catch (NoClassDefFoundError ex)\n                        {\n                            // Ignore, will return null\n                        }\n                    }\n                    break;\n                }\n            }\n        }\n\n        return null;\n    }","id":52432,"modified_method":"private Object searchDynamicImports(\n        String name, String pkgName, boolean isClass)\n        throws ClassNotFoundException, ResourceNotFoundException\n    {\n        // At this point, the module's imports were searched and so was the\n        // the module's content. Now we make an attempt to load the\n        // class/resource via a dynamic import, if possible.\n        Wire wire = null;\n        try\n        {\n            wire = m_resolver.resolve(this, pkgName);\n        }\n        catch (ResolveException ex)\n        {\n            // Ignore this since it is likely normal.\n        }\n\n        // If the dynamic import was successful, then this initial\n        // time we must directly return the result from dynamically\n        // created wire, but subsequent requests for classes/resources\n        // in the associated package will be processed as part of\n        // normal static imports.\n        if (wire != null)\n        {\n            // Return the class or resource.\n            return (isClass)\n                ? (Object) wire.getClass(name)\n                : (Object) wire.getResource(name);\n        }\n\n        // If implicit boot delegation is enabled, then try to guess whether\n        // we should boot delegate.\n        if (m_implicitBootDelegation)\n        {\n            // At this point, the class/resource could not be found by the bundle's\n            // static or dynamic imports, nor its own content. Before we throw\n            // an exception, we will try to determine if the instigator of the\n            // class/resource load was a class from a bundle or not. This is necessary\n            // because the specification mandates that classes on the class path\n            // should be hidden (except for java.*), but it does allow for these\n            // classes/resources to be exposed by the system bundle as an export.\n            // However, in some situations classes on the class path make the faulty\n            // assumption that they can access everything on the class path from\n            // every other class loader that they come in contact with. This is\n            // not true if the class loader in question is from a bundle. Thus,\n            // this code tries to detect that situation. If the class instigating\n            // the load request was NOT from a bundle, then we will make the\n            // assumption that the caller actually wanted to use the parent class\n            // loader and we will delegate to it. If the class was\n            // from a bundle, then we will enforce strict class loading rules\n            // for the bundle and throw an exception.\n\n            // Get the class context to see the classes on the stack.\n            Class[] classes = m_sm.getClassContext();\n            // Start from 1 to skip security manager class.\n            for (int i = 1; i < classes.length; i++)\n            {\n                // Find the first class on the call stack that is not from\n                // the class loader that loaded the Felix classes or is not\n                // a class loader or class itself, because we want to ignore\n                // calls to ClassLoader.loadClass() and Class.forName() since\n                // we are trying to find out who instigated the class load.\n                // Also ignore inner classes of class loaders, since we can\n                // assume they are a class loader too.\n\n// TODO: FRAMEWORK - This check is a hack and we should see if we can think\n// of another way to do it, since it won't necessarily work in all situations.\n                // Since Felix uses threads for changing the start level\n                // and refreshing packages, it is possible that there is no\n                // module classes on the call stack; therefore, as soon as we\n                // see Thread on the call stack we exit this loop. Other cases\n                // where modules actually use threads are not an issue because\n                // the module classes will be on the call stack before the\n                // Thread class.\n                if (Thread.class.equals(classes[i]))\n                {\n                    break;\n                }\n                else if (isClassNotLoadedFromBundle(classes[i]))\n                {\n                    // If the instigating class was not from a bundle,\n                    // then delegate to the parent class loader; otherwise,\n                    // break out of loop and return null.\n                    boolean delegate = true;\n                    ClassLoader last = null;\n                    for (ClassLoader cl = classes[i].getClassLoader(); (cl != null) && (last != cl); cl = cl.getClass().getClassLoader())\n                    {\n                        last = cl;\n                        if (ModuleClassLoader.class.isInstance(cl))\n                        {\n                            delegate = false;\n                            break;\n                        }\n                    }\n                    // Delegate to the parent class loader unless this call\n                    // is due to outside code calling a method on the bundle\n                    // interface (e.g., Bundle.loadClass()).\n                    if (delegate && !Bundle.class.isAssignableFrom(classes[i - 1]))\n                    {\n                        try\n                        {\n                            // Return the class or resource from the parent class loader.\n                            return (isClass)\n                                ? (Object) this.getClass().getClassLoader().loadClass(name)\n                                : (Object) this.getClass().getClassLoader().getResource(name);\n                        }\n                        catch (NoClassDefFoundError ex)\n                        {\n                            // Ignore, will return null\n                        }\n                    }\n                    break;\n                }\n            }\n        }\n\n        return null;\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"private IContent[] initializeContentPath() throws Exception\n    {\n        List contentList = new ArrayList();\n        calculateContentPath(this, m_content, contentList, true);\n        for (int i = 0; (m_fragmentContents != null) && (i < m_fragmentContents.length); i++)\n        {\n            calculateContentPath(m_fragments[i], m_fragmentContents[i], contentList, false);\n        }\n        return (IContent[]) contentList.toArray(new IContent[contentList.size()]);\n    }","id":52433,"modified_method":"private Content[] initializeContentPath() throws Exception\n    {\n        List contentList = new ArrayList();\n        calculateContentPath(this, m_content, contentList, true);\n        for (int i = 0; (m_fragmentContents != null) && (i < m_fragmentContents.length); i++)\n        {\n            calculateContentPath(m_fragments.get(i), m_fragmentContents[i], contentList, false);\n        }\n        return (Content[]) contentList.toArray(new Content[contentList.size()]);\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"public synchronized void addDependentRequirer(IModule module)\n    {\n        m_dependentRequirers = addDependent(m_dependentRequirers, module);\n    }","id":52434,"modified_method":"public synchronized void addDependentRequirer(Module module)\n    {\n        if (!m_dependentRequirers.contains(module))\n        {\n            m_dependentRequirers.add(module);\n        }\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"public synchronized void removeDependentImporter(IModule module)\n    {\n        m_dependentImporters = removeDependent(m_dependentImporters, module);\n    }","id":52435,"modified_method":"public synchronized void removeDependentImporter(Module module)\n    {\n        m_dependentImporters.remove(module);\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"public synchronized void attachFragments(IModule[] fragments) throws Exception\n    {\n        // Remove module from old fragment dependencies.\n        // We will generally only remove module fragment\n        // dependencies when we are uninstalling the module.\n        for (int i = 0; (m_fragments != null) && (i < m_fragments.length); i++)\n        {\n            ((ModuleImpl) m_fragments[i]).removeDependentHost(this);\n        }\n\n        // Remove cached capabilities and requirements.\n        m_cachedCapabilities = null;\n        m_cachedRequirements = null;\n        m_cachedDynamicRequirements = null;\n\n        // Update the dependencies on the new fragments.\n        m_fragments = fragments;\n\n        // We need to add ourself as a dependent of each fragment\n        // module. We also need to create an array of fragment contents\n        // to attach to our content loader.\n        if (m_fragments != null)\n        {\n            IContent[] fragmentContents = new IContent[m_fragments.length];\n            for (int i = 0; (m_fragments != null) && (i < m_fragments.length); i++)\n            {\n                ((ModuleImpl) m_fragments[i]).addDependentHost(this);\n                fragmentContents[i] =\n                    m_fragments[i].getContent()\n                        .getEntryAsContent(FelixConstants.CLASS_PATH_DOT);\n            }\n            // Now attach the fragment contents to our content loader.\n            attachFragmentContents(fragmentContents);\n        }\n    }","id":52436,"modified_method":"public synchronized void attachFragments(List<Module> fragments) throws Exception\n    {\n        // Remove module from old fragment dependencies.\n        // We will generally only remove module fragment\n        // dependencies when we are uninstalling the module.\n        for (int i = 0; (m_fragments != null) && (i < m_fragments.size()); i++)\n        {\n            ((ModuleImpl) m_fragments.get(i)).removeDependentHost(this);\n        }\n\n        // Remove cached capabilities and requirements.\n        m_cachedCapabilities = null;\n        m_cachedRequirements = null;\n        m_cachedDynamicRequirements = null;\n\n        // Update the dependencies on the new fragments.\n        m_fragments = fragments;\n\n        // We need to add ourself as a dependent of each fragment\n        // module. We also need to create an array of fragment contents\n        // to attach to our content loader.\n        if (m_fragments != null)\n        {\n            Content[] fragmentContents = new Content[m_fragments.size()];\n            for (int i = 0; (m_fragments != null) && (i < m_fragments.size()); i++)\n            {\n                ((ModuleImpl) m_fragments.get(i)).addDependentHost(this);\n                fragmentContents[i] =\n                    m_fragments.get(i).getContent()\n                        .getEntryAsContent(FelixConstants.CLASS_PATH_DOT);\n            }\n            // Now attach the fragment contents to our content loader.\n            attachFragmentContents(fragmentContents);\n        }\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"public synchronized IRequirement[] getDynamicRequirements()\n    {\n        if (m_cachedDynamicRequirements == null)\n        {\n            List reqList = (m_dynamicRequirements == null)\n                ? new ArrayList() : new ArrayList(Arrays.asList(m_dynamicRequirements));\n            for (int fragIdx = 0;\n                (m_fragments != null) && (fragIdx < m_fragments.length);\n                fragIdx++)\n            {\n                IRequirement[] reqs = m_fragments[fragIdx].getDynamicRequirements();\n                for (int reqIdx = 0;\n                    (reqs != null) && (reqIdx < reqs.length);\n                    reqIdx++)\n                {\n                    if (reqs[reqIdx].getNamespace().equals(ICapability.PACKAGE_NAMESPACE))\n                    {\n                        reqList.add(reqs[reqIdx]);\n                    }\n                }\n            }\n            m_cachedDynamicRequirements = (IRequirement[])\n                reqList.toArray(new IRequirement[reqList.size()]);\n        }\n        return m_cachedDynamicRequirements;\n    }","id":52437,"modified_method":"public synchronized List<Requirement> getDynamicRequirements()\n    {\n        if (m_cachedDynamicRequirements == null)\n        {\n            List<Requirement> reqList = (m_dynamicRequirements == null)\n                ? new ArrayList() : new ArrayList(m_dynamicRequirements);\n            for (int fragIdx = 0;\n                (m_fragments != null) && (fragIdx < m_fragments.size());\n                fragIdx++)\n            {\n                List<Requirement> reqs = m_fragments.get(fragIdx).getDynamicRequirements();\n                for (int reqIdx = 0;\n                    (reqs != null) && (reqIdx < reqs.size());\n                    reqIdx++)\n                {\n                    if (reqs.get(reqIdx).getNamespace().equals(Capability.PACKAGE_NAMESPACE))\n                    {\n                        reqList.add(reqs.get(reqIdx));\n                    }\n                }\n            }\n            m_cachedDynamicRequirements = Collections.unmodifiableList(reqList);\n        }\n        return m_cachedDynamicRequirements;\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"private URL getResourceLocal(String name)\n    {\n        URL url = null;\n\n        // Remove leading slash, if present, but special case\n        // \"/\" so that it returns a root URL...this isn't very\n        // clean or meaninful, but the Spring guys want it.\n        if (name.equals(\"/\"))\n        {\n            // Just pick a class path index since it doesn't really matter.\n            url = createURL(1, name);\n        }\n        else if (name.startsWith(\"/\"))\n        {\n            name = name.substring(1);\n        }\n\n        // Check the module class path.\n        IContent[] contentPath = getContentPath();\n        for (int i = 0;\n            (url == null) &&\n            (i < contentPath.length); i++)\n        {\n            if (contentPath[i].hasEntry(name))\n            {\n                url = createURL(i + 1, name);\n            }\n        }\n\n        return url;\n    }","id":52438,"modified_method":"private URL getResourceLocal(String name)\n    {\n        URL url = null;\n\n        // Remove leading slash, if present, but special case\n        // \"/\" so that it returns a root URL...this isn't very\n        // clean or meaninful, but the Spring guys want it.\n        if (name.equals(\"/\"))\n        {\n            // Just pick a class path index since it doesn't really matter.\n            url = createURL(1, name);\n        }\n        else if (name.startsWith(\"/\"))\n        {\n            name = name.substring(1);\n        }\n\n        // Check the module class path.\n        Content[] contentPath = getContentPath();\n        for (int i = 0;\n            (url == null) &&\n            (i < contentPath.length); i++)\n        {\n            if (contentPath[i].hasEntry(name))\n            {\n                url = createURL(i + 1, name);\n            }\n        }\n\n        return url;\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"public IContent getContent()\n    {\n        return m_content;\n    }","id":52439,"modified_method":"public Content getContent()\n    {\n        return m_content;\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"public synchronized IModule[] getDependents()\n    {\n        IModule[] dependents = new IModule[\n            m_dependentHosts.length + m_dependentImporters.length + m_dependentRequirers.length];\n        System.arraycopy(\n            m_dependentHosts,\n            0,\n            dependents,\n            0,\n            m_dependentHosts.length);\n        System.arraycopy(\n            m_dependentImporters,\n            0,\n            dependents,\n            m_dependentHosts.length,\n            m_dependentImporters.length);\n        System.arraycopy(\n            m_dependentRequirers,\n            0,\n            dependents,\n            m_dependentHosts.length + m_dependentImporters.length,\n            m_dependentRequirers.length);\n        return dependents;\n    }","id":52440,"modified_method":"public synchronized List<Module> getDependents()\n    {\n        List<Module> dependents = new ArrayList<Module>\n            (m_dependentHosts.size() + m_dependentImporters.size() + m_dependentRequirers.size());\n        dependents.addAll(m_dependentHosts);\n        dependents.addAll(m_dependentImporters);\n        dependents.addAll(m_dependentRequirers);\n        return dependents;\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"private synchronized IContent[] getContentPath()\n    {\n        if (m_contentPath == null)\n        {\n            try\n            {\n                m_contentPath = initializeContentPath();\n            }\n            catch (Exception ex)\n            {\n                m_logger.log(Logger.LOG_ERROR, \"Unable to get module class path.\", ex);\n            }\n        }\n        return m_contentPath;\n    }","id":52441,"modified_method":"private synchronized Content[] getContentPath()\n    {\n        if (m_contentPath == null)\n        {\n            try\n            {\n                m_contentPath = initializeContentPath();\n            }\n            catch (Exception ex)\n            {\n                m_logger.log(Logger.LOG_ERROR, \"Unable to get module class path.\", ex);\n            }\n        }\n        return m_contentPath;\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"public synchronized R4Library[] getNativeLibraries()\n    {\n        R4Library[] result = null;\n        if (m_isResolved)\n        {\n            List nativeList = (m_nativeLibraries == null)\n                ? new ArrayList() : new ArrayList(Arrays.asList(m_nativeLibraries));\n            for (int fragIdx = 0;\n                (m_fragments != null) && (fragIdx < m_fragments.length);\n                fragIdx++)\n            {\n                R4Library[] libs = m_fragments[fragIdx].getNativeLibraries();\n                for (int reqIdx = 0;\n                    (libs != null) && (reqIdx < libs.length);\n                    reqIdx++)\n                {\n                    nativeList.add(libs[reqIdx]);\n                }\n            }\n\n            // We need to return null here if we don't have any libraries, since a\n            // zero-length array is used to indicate that matching native libraries\n            // could not be found when resolving the bundle.\n            result = (nativeList.size() == 0)\n                ? null\n                : (R4Library[]) nativeList.toArray(new R4Library[nativeList.size()]);\n        }\n        else\n        {\n            result = m_nativeLibraries;\n        }\n\n        return result;\n    }","id":52442,"modified_method":"public synchronized List<R4Library> getNativeLibraries()\n    {\n        List<R4Library> result = null;\n        if (m_isResolved)\n        {\n            List<R4Library> nativeList = (m_nativeLibraries == null)\n                ? new ArrayList() : new ArrayList(m_nativeLibraries);\n            for (int fragIdx = 0;\n                (m_fragments != null) && (fragIdx < m_fragments.size());\n                fragIdx++)\n            {\n                List<R4Library> libs = m_fragments.get(fragIdx).getNativeLibraries();\n                for (int reqIdx = 0;\n                    (libs != null) && (reqIdx < libs.size());\n                    reqIdx++)\n                {\n                    nativeList.add(libs.get(reqIdx));\n                }\n            }\n\n            // We need to return null here if we don't have any libraries, since a\n            // zero-length array is used to indicate that matching native libraries\n            // could not be found when resolving the bundle.\n            result = (nativeList.size() == 0)\n                ? null\n                : Collections.unmodifiableList(nativeList);\n        }\n        else\n        {\n            result = m_nativeLibraries;\n        }\n\n        return result;\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"protected Class findClass(String name) throws ClassNotFoundException\n        {\n            Class clazz = null;\n\n            // Search for class in module.\n            if (clazz == null)\n            {\n                String actual = name.replace('.', '/') + \".class\";\n\n                byte[] bytes = null;\n\n                // Check the module class path.\n                IContent[] contentPath = getContentPath();\n                IContent content = null;\n                for (int i = 0;\n                    (bytes == null) &&\n                    (i < contentPath.length); i++)\n                {\n                    bytes = contentPath[i].getEntryAsBytes(actual);\n                    content = contentPath[i];\n                }\n\n                if (bytes != null)\n                {\n                    // Get package name.\n                    String pkgName = Util.getClassPackage(name);\n\n                    // Before we actually attempt to define the class, grab\n                    // the lock for this class loader and make sure than no\n                    // other thread has defined this class in the meantime.\n                    synchronized (this)\n                    {\n                        clazz = findLoadedClass(name);\n\n                        if (clazz == null)\n                        {\n                            int activationPolicy = \n                                ((BundleImpl) getBundle()).isDeclaredActivationPolicyUsed()\n                                ? ((BundleImpl) getBundle()).getCurrentModule().getDeclaredActivationPolicy()\n                                : IModule.EAGER_ACTIVATION;\n\n                            // If the module is using deferred activation, then if\n                            // we load this class from this module we need to activate\n                            // the module before returning the class. We will short\n                            // circuit the trigger matching if the trigger is already\n                            // tripped.\n                            boolean isTriggerClass = m_isActivationTriggered\n                                ? false : isActivationTrigger(pkgName);\n                            if (!m_isActivationTriggered\n                                && isTriggerClass\n                                && (activationPolicy == IModule.LAZY_ACTIVATION)\n                                && (getBundle().getState() == Bundle.STARTING))\n                            {\n                                List deferredList = (List) m_deferredActivation.get();\n                                if (deferredList == null)\n                                {\n                                    deferredList = new ArrayList();\n                                    m_deferredActivation.set(deferredList);\n                                }\n                                deferredList.add(new Object[] { name, getBundle() });\n                            }\n                            // We need to try to define a Package object for the class\n                            // before we call defineClass() if we haven't already\n                            // created it.\n                            if (pkgName.length() > 0)\n                            {\n                                if (getPackage(pkgName) == null)\n                                {\n                                    Object[] params = definePackage(pkgName);\n                                    if (params != null)\n                                    {\n                                        definePackage(\n                                            pkgName,\n                                            (String) params[0],\n                                            (String) params[1],\n                                            (String) params[2],\n                                            (String) params[3],\n                                            (String) params[4],\n                                            (String) params[5],\n                                            null);\n                                    }\n                                    else\n                                    {\n                                        definePackage(pkgName, null, null,\n                                            null, null, null, null, null);\n                                    }\n                                }\n                            }\n\n                            // If we can load the class from a dex file do so\n                            if (content instanceof JarContent)\n                            {\n                                try\n                                {\n                                    clazz = getDexFileClass((JarContent) content, name, this);\n                                }\n                                catch (Exception ex)\n                                {\n                                    // Looks like we can't\n                                }\n                            }\n\n                            if (clazz == null)\n                            {\n                                // If we have a security context, then use it to\n                                // define the class with it for security purposes,\n                                // otherwise define the class without a protection domain.\n                                if (m_protectionDomain != null)\n                                {\n                                    clazz = defineClass(name, bytes, 0, bytes.length,\n                                        m_protectionDomain);\n                                }\n                                else\n                                {\n                                    clazz = defineClass(name, bytes, 0, bytes.length);\n                                }\n                            }\n\n                            // At this point if we have a trigger class, then the deferred\n                            // activation trigger has tripped.\n                            if (!m_isActivationTriggered && isTriggerClass && (clazz != null))\n                            {\n                                m_isActivationTriggered = true;\n                            }\n                        }\n                    }\n\n                    // Perform deferred activation without holding the class loader lock,\n                    // if the class we are returning is the instigating class.\n                    List deferredList = (List) m_deferredActivation.get();\n                    if ((deferredList != null)\n                        && (deferredList.size() > 0)\n                        && ((Object[]) deferredList.get(0))[0].equals(name))\n                    {\n                        for (int i = deferredList.size() - 1; i >= 0; i--)\n                        {\n                            try\n                            {\n                                ((BundleImpl) ((Object[]) deferredList.get(i))[1]).getFramework().activateBundle(\n                                    (BundleImpl) ((Object[]) deferredList.get(i))[1], true);\n                            }\n                            catch (BundleException ex)\n                            {\n                                ex.printStackTrace();\n                            }\n                        }\n                        deferredList.clear();\n                    }\n                }\n            }\n\n            return clazz;\n        }","id":52443,"modified_method":"protected Class findClass(String name) throws ClassNotFoundException\n        {\n            Class clazz = null;\n\n            // Search for class in module.\n            if (clazz == null)\n            {\n                String actual = name.replace('.', '/') + \".class\";\n\n                byte[] bytes = null;\n\n                // Check the module class path.\n                Content[] contentPath = getContentPath();\n                Content content = null;\n                for (int i = 0;\n                    (bytes == null) &&\n                    (i < contentPath.length); i++)\n                {\n                    bytes = contentPath[i].getEntryAsBytes(actual);\n                    content = contentPath[i];\n                }\n\n                if (bytes != null)\n                {\n                    // Get package name.\n                    String pkgName = Util.getClassPackage(name);\n\n                    // Before we actually attempt to define the class, grab\n                    // the lock for this class loader and make sure than no\n                    // other thread has defined this class in the meantime.\n                    synchronized (this)\n                    {\n                        clazz = findLoadedClass(name);\n\n                        if (clazz == null)\n                        {\n                            int activationPolicy = \n                                ((BundleImpl) getBundle()).isDeclaredActivationPolicyUsed()\n                                ? ((BundleImpl) getBundle()).getCurrentModule().getDeclaredActivationPolicy()\n                                : Module.EAGER_ACTIVATION;\n\n                            // If the module is using deferred activation, then if\n                            // we load this class from this module we need to activate\n                            // the module before returning the class. We will short\n                            // circuit the trigger matching if the trigger is already\n                            // tripped.\n                            boolean isTriggerClass = m_isActivationTriggered\n                                ? false : isActivationTrigger(pkgName);\n                            if (!m_isActivationTriggered\n                                && isTriggerClass\n                                && (activationPolicy == Module.LAZY_ACTIVATION)\n                                && (getBundle().getState() == Bundle.STARTING))\n                            {\n                                List deferredList = (List) m_deferredActivation.get();\n                                if (deferredList == null)\n                                {\n                                    deferredList = new ArrayList();\n                                    m_deferredActivation.set(deferredList);\n                                }\n                                deferredList.add(new Object[] { name, getBundle() });\n                            }\n                            // We need to try to define a Package object for the class\n                            // before we call defineClass() if we haven't already\n                            // created it.\n                            if (pkgName.length() > 0)\n                            {\n                                if (getPackage(pkgName) == null)\n                                {\n                                    Object[] params = definePackage(pkgName);\n                                    if (params != null)\n                                    {\n                                        definePackage(\n                                            pkgName,\n                                            (String) params[0],\n                                            (String) params[1],\n                                            (String) params[2],\n                                            (String) params[3],\n                                            (String) params[4],\n                                            (String) params[5],\n                                            null);\n                                    }\n                                    else\n                                    {\n                                        definePackage(pkgName, null, null,\n                                            null, null, null, null, null);\n                                    }\n                                }\n                            }\n\n                            // If we can load the class from a dex file do so\n                            if (content instanceof JarContent)\n                            {\n                                try\n                                {\n                                    clazz = getDexFileClass((JarContent) content, name, this);\n                                }\n                                catch (Exception ex)\n                                {\n                                    // Looks like we can't\n                                }\n                            }\n\n                            if (clazz == null)\n                            {\n                                // If we have a security context, then use it to\n                                // define the class with it for security purposes,\n                                // otherwise define the class without a protection domain.\n                                if (m_protectionDomain != null)\n                                {\n                                    clazz = defineClass(name, bytes, 0, bytes.length,\n                                        m_protectionDomain);\n                                }\n                                else\n                                {\n                                    clazz = defineClass(name, bytes, 0, bytes.length);\n                                }\n                            }\n\n                            // At this point if we have a trigger class, then the deferred\n                            // activation trigger has tripped.\n                            if (!m_isActivationTriggered && isTriggerClass && (clazz != null))\n                            {\n                                m_isActivationTriggered = true;\n                            }\n                        }\n                    }\n\n                    // Perform deferred activation without holding the class loader lock,\n                    // if the class we are returning is the instigating class.\n                    List deferredList = (List) m_deferredActivation.get();\n                    if ((deferredList != null)\n                        && (deferredList.size() > 0)\n                        && ((Object[]) deferredList.get(0))[0].equals(name))\n                    {\n                        for (int i = deferredList.size() - 1; i >= 0; i--)\n                        {\n                            try\n                            {\n                                ((BundleImpl) ((Object[]) deferredList.get(i))[1]).getFramework().activateBundle(\n                                    (BundleImpl) ((Object[]) deferredList.get(i))[1], true);\n                            }\n                            catch (BundleException ex)\n                            {\n                                ex.printStackTrace();\n                            }\n                        }\n                        deferredList.clear();\n                    }\n                }\n            }\n\n            return clazz;\n        }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"protected String findLibrary(String name)\n        {\n            // Remove leading slash, if present.\n            if (name.startsWith(\"/\"))\n            {\n                name = name.substring(1);\n            }\n\n            String result = null;\n            // CONCURRENCY: In the long run, we might want to break this\n            // sync block in two to avoid manipulating the cache while\n            // holding the lock, but for now we will do it the simple way.\n            synchronized (this)\n            {\n                // Check to make sure we haven't already found this library.\n                for (int i = 0; (result == null) && (i < m_cachedLibs.length); i++)\n                {\n                    if (m_cachedLibs[i][LIBNAME_IDX].equals(name))\n                    {\n                        result = (String) m_cachedLibs[i][LIBPATH_IDX];\n                    }\n                }\n\n                // If we don't have a cached result, see if we have a matching\n                // native library.\n                if (result == null)\n                {\n                    R4Library[] libs = getNativeLibraries();\n                    for (int libIdx = 0; (libs != null) && (libIdx < libs.length); libIdx++)\n                    {\n                        if (libs[libIdx].match(m_configMap, name))\n                        {\n                            // Search bundle content first for native library.\n                            result = getContent().getEntryAsNativeLibrary(\n                                libs[libIdx].getEntryName());\n                            // If not found, then search fragments in order.\n                            for (int i = 0;\n                                (result == null) && (m_fragmentContents != null)\n                                    && (i < m_fragmentContents.length);\n                                i++)\n                            {\n                                result = m_fragmentContents[i].getEntryAsNativeLibrary(\n                                    libs[libIdx].getEntryName());\n                            }\n                        }\n                    }\n\n                    // Remember the result for future requests.\n                    if (result != null)\n                    {\n                        Object[][] tmp = new Object[m_cachedLibs.length + 1][];\n                        System.arraycopy(m_cachedLibs, 0, tmp, 0, m_cachedLibs.length);\n                        tmp[m_cachedLibs.length] = new Object[] { name, result };\n                        m_cachedLibs = tmp;\n                    }\n                }\n            }\n\n            return result;\n        }","id":52444,"modified_method":"protected String findLibrary(String name)\n        {\n            // Remove leading slash, if present.\n            if (name.startsWith(\"/\"))\n            {\n                name = name.substring(1);\n            }\n\n            String result = null;\n            // CONCURRENCY: In the long run, we might want to break this\n            // sync block in two to avoid manipulating the cache while\n            // holding the lock, but for now we will do it the simple way.\n            synchronized (this)\n            {\n                // Check to make sure we haven't already found this library.\n                for (int i = 0; (result == null) && (i < m_cachedLibs.length); i++)\n                {\n                    if (m_cachedLibs[i][LIBNAME_IDX].equals(name))\n                    {\n                        result = (String) m_cachedLibs[i][LIBPATH_IDX];\n                    }\n                }\n\n                // If we don't have a cached result, see if we have a matching\n                // native library.\n                if (result == null)\n                {\n                    List<R4Library> libs = getNativeLibraries();\n                    for (int libIdx = 0; (libs != null) && (libIdx < libs.size()); libIdx++)\n                    {\n                        if (libs.get(libIdx).match(m_configMap, name))\n                        {\n                            // Search bundle content first for native library.\n                            result = getContent().getEntryAsNativeLibrary(\n                                libs.get(libIdx).getEntryName());\n                            // If not found, then search fragments in order.\n                            for (int i = 0;\n                                (result == null) && (m_fragmentContents != null)\n                                    && (i < m_fragmentContents.length);\n                                i++)\n                            {\n                                result = m_fragmentContents[i].getEntryAsNativeLibrary(\n                                    libs.get(libIdx).getEntryName());\n                            }\n                        }\n                    }\n\n                    // Remember the result for future requests.\n                    if (result != null)\n                    {\n                        Object[][] tmp = new Object[m_cachedLibs.length + 1][];\n                        System.arraycopy(m_cachedLibs, 0, tmp, 0, m_cachedLibs.length);\n                        tmp[m_cachedLibs.length] = new Object[] { name, result };\n                        m_cachedLibs = tmp;\n                    }\n                }\n            }\n\n            return result;\n        }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"public synchronized void removeDependentRequirer(IModule module)\n    {\n        m_dependentRequirers = removeDependent(m_dependentRequirers, module);\n    }","id":52445,"modified_method":"public synchronized void removeDependentRequirer(Module module)\n    {\n        m_dependentRequirers.remove(module);\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"private Enumeration findResourcesByDelegation(String name)\n    {\n        Enumeration urls = null;\n        List completeUrlList = new ArrayList();\n\n        // First, try to resolve the originating module.\n        try\n        {\n            m_resolver.resolve(this);\n        }\n        catch (ResolveException ex)\n        {\n            // The spec states that if the bundle cannot be resolved, then\n            // only the local bundle's resources should be searched. So we\n            // will ask the module's own class path.\n            urls = getResourcesLocal(name);\n            return urls;\n        }\n\n        // Get the package of the target class/resource.\n        String pkgName = Util.getResourcePackage(name);\n\n        // Delegate any packages listed in the boot delegation\n        // property to the parent class loader.\n        if (shouldBootDelegate(pkgName))\n        {\n            try\n            {\n                // Get the appropriate class loader for delegation.\n                ClassLoader parent = (m_classLoader == null)\n                    ? determineParentClassLoader() : m_classLoader.getParent();\n                parent = (parent == null) ? m_bootClassLoader : parent;\n                urls = parent.getResources(name);\n            }\n            catch (IOException ex)\n            {\n                // This shouldn't happen and even if it does, there\n                // is nothing we can do, so just ignore it.\n            }\n            // If this is a java.* package, then always terminate the\n            // search; otherwise, continue to look locally.\n            if (pkgName.startsWith(\"java.\"))\n            {\n                return urls;\n            }\n\n            completeUrlList.add(urls);\n        }\n\n        // Look in the module's imports.\n        // We delegate to the module's wires for the resources.\n        // If any resources are found, this means that the package of these\n        // resources is imported, we must not keep looking since we do not\n        // support split-packages.\n\n        // Note that the search may be aborted if this method throws an\n        // exception, otherwise it continues if a null is returned.\n        IWire[] wires = getWires();\n        for (int i = 0; (wires != null) && (i < wires.length); i++)\n        {\n            if (wires[i] instanceof R4Wire)\n            {\n                try\n                {\n                    // If we find the class or resource, then return it.\n                    urls = wires[i].getResources(name);\n                }\n                catch (ResourceNotFoundException ex)\n                {\n                    urls = null;\n                }\n                if (urls != null)\n                {\n                    completeUrlList.add(urls);\n                    return new CompoundEnumeration((Enumeration[])\n                        completeUrlList.toArray(new Enumeration[completeUrlList.size()]));\n                }\n            }\n        }\n\n        // See whether we can get the resource from the required bundles and\n        // regardless of whether or not this is the case continue to the next\n        // step potentially passing on the result of this search (if any).\n        for (int i = 0; (wires != null) && (i < wires.length); i++)\n        {\n            if (wires[i] instanceof R4WireModule)\n            {\n                try\n                {\n                    // If we find the class or resource, then add it.\n                    urls = wires[i].getResources(name);\n                }\n                catch (ResourceNotFoundException ex)\n                {\n                    urls = null;\n                }\n                if (urls != null)\n                {\n                    completeUrlList.add(urls);\n                }\n            }\n        }\n\n        // Try the module's own class path. If we can find the resource then\n        // return it together with the results from the other searches else\n        // try to look into the dynamic imports.\n        urls = getResourcesLocal(name);\n        if ((urls != null) && (urls.hasMoreElements()))\n        {\n            completeUrlList.add(urls);\n        }\n        else\n        {\n            // If not found, then try the module's dynamic imports.\n            // At this point, the module's imports were searched and so was the\n            // the module's content. Now we make an attempt to load the\n            // class/resource via a dynamic import, if possible.\n            IWire wire = null;\n            try\n            {\n                wire = m_resolver.resolveDynamicImport(this, pkgName);\n            }\n            catch (ResolveException ex)\n            {\n                // Ignore this since it is likely normal.\n            }\n            if (wire != null)\n            {\n                try\n                {\n                    urls = wire.getResources(name);\n                }\n                catch (ResourceNotFoundException ex)\n                {\n                    urls = null;\n                }\n                if (urls != null)\n                {\n                    completeUrlList.add(urls);\n                }\n            }\n        }\n\n        return new CompoundEnumeration((Enumeration[])\n            completeUrlList.toArray(new Enumeration[completeUrlList.size()]));\n    }","id":52446,"modified_method":"private Enumeration findResourcesByDelegation(String name)\n    {\n        Enumeration urls = null;\n        List completeUrlList = new ArrayList();\n\n        // First, try to resolve the originating module.\n        try\n        {\n            m_resolver.resolve(this);\n        }\n        catch (ResolveException ex)\n        {\n            // The spec states that if the bundle cannot be resolved, then\n            // only the local bundle's resources should be searched. So we\n            // will ask the module's own class path.\n            urls = getResourcesLocal(name);\n            return urls;\n        }\n\n        // Get the package of the target class/resource.\n        String pkgName = Util.getResourcePackage(name);\n\n        // Delegate any packages listed in the boot delegation\n        // property to the parent class loader.\n        if (shouldBootDelegate(pkgName))\n        {\n            try\n            {\n                // Get the appropriate class loader for delegation.\n                ClassLoader parent = (m_classLoader == null)\n                    ? determineParentClassLoader() : m_classLoader.getParent();\n                parent = (parent == null) ? m_bootClassLoader : parent;\n                urls = parent.getResources(name);\n            }\n            catch (IOException ex)\n            {\n                // This shouldn't happen and even if it does, there\n                // is nothing we can do, so just ignore it.\n            }\n            // If this is a java.* package, then always terminate the\n            // search; otherwise, continue to look locally.\n            if (pkgName.startsWith(\"java.\"))\n            {\n                return urls;\n            }\n\n            completeUrlList.add(urls);\n        }\n\n        // Look in the module's imports.\n        // We delegate to the module's wires for the resources.\n        // If any resources are found, this means that the package of these\n        // resources is imported, we must not keep looking since we do not\n        // support split-packages.\n\n        // Note that the search may be aborted if this method throws an\n        // exception, otherwise it continues if a null is returned.\n        List<Wire> wires = getWires();\n        for (int i = 0; (wires != null) && (i < wires.size()); i++)\n        {\n            if (wires.get(i) instanceof WireImpl)\n            {\n                try\n                {\n                    // If we find the class or resource, then return it.\n                    urls = wires.get(i).getResources(name);\n                }\n                catch (ResourceNotFoundException ex)\n                {\n                    urls = null;\n                }\n                if (urls != null)\n                {\n                    completeUrlList.add(urls);\n                    return new CompoundEnumeration((Enumeration[])\n                        completeUrlList.toArray(new Enumeration[completeUrlList.size()]));\n                }\n            }\n        }\n\n        // See whether we can get the resource from the required bundles and\n        // regardless of whether or not this is the case continue to the next\n        // step potentially passing on the result of this search (if any).\n        for (int i = 0; (wires != null) && (i < wires.size()); i++)\n        {\n            if (wires.get(i) instanceof WireModuleImpl)\n            {\n                try\n                {\n                    // If we find the class or resource, then add it.\n                    urls = wires.get(i).getResources(name);\n                }\n                catch (ResourceNotFoundException ex)\n                {\n                    urls = null;\n                }\n                if (urls != null)\n                {\n                    completeUrlList.add(urls);\n                }\n            }\n        }\n\n        // Try the module's own class path. If we can find the resource then\n        // return it together with the results from the other searches else\n        // try to look into the dynamic imports.\n        urls = getResourcesLocal(name);\n        if ((urls != null) && (urls.hasMoreElements()))\n        {\n            completeUrlList.add(urls);\n        }\n        else\n        {\n            // If not found, then try the module's dynamic imports.\n            // At this point, the module's imports were searched and so was the\n            // the module's content. Now we make an attempt to load the\n            // class/resource via a dynamic import, if possible.\n            Wire wire = null;\n            try\n            {\n                wire = m_resolver.resolve(this, pkgName);\n            }\n            catch (ResolveException ex)\n            {\n                // Ignore this since it is likely normal.\n            }\n            if (wire != null)\n            {\n                try\n                {\n                    urls = wire.getResources(name);\n                }\n                catch (ResourceNotFoundException ex)\n                {\n                    urls = null;\n                }\n                if (urls != null)\n                {\n                    completeUrlList.add(urls);\n                }\n            }\n        }\n\n        return new CompoundEnumeration((Enumeration[])\n            completeUrlList.toArray(new Enumeration[completeUrlList.size()]));\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"private static String diagnoseClassLoadError(\n        FelixResolver resolver, ModuleImpl module, String name)\n    {\n        // We will try to do some diagnostics here to help the developer\n        // deal with this exception.\n\n        // Get package name.\n        String pkgName = Util.getClassPackage(name);\n        if (pkgName.length() == 0)\n        {\n            return null;\n        }\n\n        // First, get the bundle string of the module doing the class loader.\n        String importer = module.getBundle().toString();\n\n        // Next, check to see if the module imports the package.\n        IWire[] wires = module.getWires();\n        for (int i = 0; (wires != null) && (i < wires.length); i++)\n        {\n            if (wires[i].getCapability().getNamespace().equals(ICapability.PACKAGE_NAMESPACE) &&\n                wires[i].getCapability().getProperties().get(ICapability.PACKAGE_PROPERTY).equals(pkgName))\n            {\n                String exporter = wires[i].getExporter().getBundle().toString();\n\n                StringBuffer sb = new StringBuffer(\"*** Package '\");\n                sb.append(pkgName);\n                sb.append(\"' is imported by bundle \");\n                sb.append(importer);\n                sb.append(\" from bundle \");\n                sb.append(exporter);\n                sb.append(\", but the exported package from bundle \");\n                sb.append(exporter);\n                sb.append(\" does not contain the requested class '\");\n                sb.append(name);\n                sb.append(\"'. Please verify that the class name is correct in the importing bundle \");\n                sb.append(importer);\n                sb.append(\" and/or that the exported package is correctly bundled in \");\n                sb.append(exporter);\n                sb.append(\". ***\");\n\n                return sb.toString();\n            }\n        }\n\n        // Next, check to see if the package was optionally imported and\n        // whether or not there is an exporter available.\n        IRequirement[] reqs = module.getRequirements();\n/*\n* TODO: RB - Fix diagnostic message for optional imports.\n        for (int i = 0; (reqs != null) && (i < reqs.length); i++)\n        {\n            if (reqs[i].getName().equals(pkgName) && reqs[i].isOptional())\n            {\n                // Try to see if there is an exporter available.\n                IModule[] exporters = getResolvedExporters(reqs[i], true);\n                exporters = (exporters.length == 0)\n                    ? getUnresolvedExporters(reqs[i], true) : exporters;\n\n                // An exporter might be available, but it may have attributes\n                // that do not match the importer's required attributes, so\n                // check that case by simply looking for an exporter of the\n                // desired package without any attributes.\n                if (exporters.length == 0)\n                {\n                    IRequirement pkgReq = new Requirement(\n                        ICapability.PACKAGE_NAMESPACE, \"(package=\" + pkgName + \")\");\n                    exporters = getResolvedExporters(pkgReq, true);\n                    exporters = (exporters.length == 0)\n                        ? getUnresolvedExporters(pkgReq, true) : exporters;\n                }\n\n                long expId = (exporters.length == 0)\n                    ? -1 : Util.getBundleIdFromModuleId(exporters[0].getId());\n\n                StringBuffer sb = new StringBuffer(\"*** Class '\");\n                sb.append(name);\n                sb.append(\"' was not found, but this is likely normal since package '\");\n                sb.append(pkgName);\n                sb.append(\"' is optionally imported by bundle \");\n                sb.append(impId);\n                sb.append(\".\");\n                if (exporters.length > 0)\n                {\n                    sb.append(\" However, bundle \");\n                    sb.append(expId);\n                    if (reqs[i].isSatisfied(\n                        Util.getExportPackage(exporters[0], reqs[i].getName())))\n                    {\n                        sb.append(\" does export this package. Bundle \");\n                        sb.append(expId);\n                        sb.append(\" must be installed before bundle \");\n                        sb.append(impId);\n                        sb.append(\" is resolved or else the optional import will be ignored.\");\n                    }\n                    else\n                    {\n                        sb.append(\" does export this package with attributes that do not match.\");\n                    }\n                }\n                sb.append(\" ***\");\n\n                return sb.toString();\n            }\n        }\n*/\n        // Next, check to see if the package is dynamically imported by the module.\n        IRequirement pkgReq = Resolver.findAllowedDynamicImport(module, pkgName);\n        if (pkgReq != null)\n        {\n            // Try to see if there is an exporter available.\n            List exports =\n                resolver.getResolvedCandidates(pkgReq, module);\n            exports = (exports.size() == 0)\n                ? resolver.getUnresolvedCandidates(pkgReq, module)\n                : exports;\n\n            // An exporter might be available, but it may have attributes\n            // that do not match the importer's required attributes, so\n            // check that case by simply looking for an exporter of the\n            // desired package without any attributes.\n            if (exports.size() == 0)\n            {\n                try\n                {\n                    IRequirement req = new Requirement(\n                        ICapability.PACKAGE_NAMESPACE, \"(package=\" + pkgName + \")\");\n                    exports = resolver.getResolvedCandidates(req, module);\n                    exports = (exports.size() == 0)\n                        ? resolver.getUnresolvedCandidates(req, module)\n                        : exports;\n                }\n                catch (InvalidSyntaxException ex)\n                {\n                    // This should never happen.\n                }\n            }\n\n            String exporter = (exports.size() == 0)\n                ? null : ((ICapability) exports.get(0)).getModule().getBundle().toString();\n\n            StringBuffer sb = new StringBuffer(\"*** Class '\");\n            sb.append(name);\n            sb.append(\"' was not found, but this is likely normal since package '\");\n            sb.append(pkgName);\n            sb.append(\"' is dynamically imported by bundle \");\n            sb.append(importer);\n            sb.append(\".\");\n            if (exports.size() > 0)\n            {\n                if (!pkgReq.isSatisfied((ICapability) exports.get(0)))\n                {\n                    sb.append(\" However, bundle \");\n                    sb.append(exporter);\n                    sb.append(\" does export this package with attributes that do not match.\");\n                }\n            }\n            sb.append(\" ***\");\n\n            return sb.toString();\n        }\n\n        // Next, check to see if there are any exporters for the package at all.\n        pkgReq = null;\n        try\n        {\n            pkgReq = new Requirement(ICapability.PACKAGE_NAMESPACE, \"(package=\" + pkgName + \")\");\n        }\n        catch (InvalidSyntaxException ex)\n        {\n            // This should never happen.\n        }\n        List exports =\n            resolver.getResolvedCandidates(pkgReq, module);\n        exports = (exports.size() == 0)\n            ? resolver.getUnresolvedCandidates(pkgReq, module)\n            : exports;\n        if (exports.size() > 0)\n        {\n            boolean classpath = false;\n            try\n            {\n                ModuleClassLoader.class.getClassLoader().loadClass(name);\n                classpath = true;\n            }\n            catch (NoClassDefFoundError err)\n            {\n                // Ignore\n            }\n            catch (Exception ex)\n            {\n                // Ignore\n            }\n\n            String exporter = ((ICapability) exports.get(0)).getModule().getBundle().toString();\n\n            StringBuffer sb = new StringBuffer(\"*** Class '\");\n            sb.append(name);\n            sb.append(\"' was not found because bundle \");\n            sb.append(importer);\n            sb.append(\" does not import '\");\n            sb.append(pkgName);\n            sb.append(\"' even though bundle \");\n            sb.append(exporter);\n            sb.append(\" does export it.\");\n            if (classpath)\n            {\n                sb.append(\" Additionally, the class is also available from the system class loader. There are two fixes: 1) Add an import for '\");\n                sb.append(pkgName);\n                sb.append(\"' to bundle \");\n                sb.append(importer);\n                sb.append(\"; imports are necessary for each class directly touched by bundle code or indirectly touched, such as super classes if their methods are used. \");\n                sb.append(\"2) Add package '\");\n                sb.append(pkgName);\n                sb.append(\"' to the '\");\n                sb.append(Constants.FRAMEWORK_BOOTDELEGATION);\n                sb.append(\"' property; a library or VM bug can cause classes to be loaded by the wrong class loader. The first approach is preferable for preserving modularity.\");\n            }\n            else\n            {\n                sb.append(\" To resolve this issue, add an import for '\");\n                sb.append(pkgName);\n                sb.append(\"' to bundle \");\n                sb.append(importer);\n                sb.append(\".\");\n            }\n            sb.append(\" ***\");\n\n            return sb.toString();\n        }\n\n        // Next, try to see if the class is available from the system\n        // class loader.\n        try\n        {\n            ModuleClassLoader.class.getClassLoader().loadClass(name);\n\n            StringBuffer sb = new StringBuffer(\"*** Package '\");\n            sb.append(pkgName);\n            sb.append(\"' is not imported by bundle \");\n            sb.append(importer);\n            sb.append(\", nor is there any bundle that exports package '\");\n            sb.append(pkgName);\n            sb.append(\"'. However, the class '\");\n            sb.append(name);\n            sb.append(\"' is available from the system class loader. There are two fixes: 1) Add package '\");\n            sb.append(pkgName);\n            sb.append(\"' to the '\");\n            sb.append(Constants.FRAMEWORK_SYSTEMPACKAGES_EXTRA);\n            sb.append(\"' property and modify bundle \");\n            sb.append(importer);\n            sb.append(\" to import this package; this causes the system bundle to export class path packages. 2) Add package '\");\n            sb.append(pkgName);\n            sb.append(\"' to the '\");\n            sb.append(Constants.FRAMEWORK_BOOTDELEGATION);\n            sb.append(\"' property; a library or VM bug can cause classes to be loaded by the wrong class loader. The first approach is preferable for preserving modularity.\");\n            sb.append(\" ***\");\n\n            return sb.toString();\n        }\n        catch (Exception ex2)\n        {\n        }\n\n        // Finally, if there are no imports or exports for the package\n        // and it is not available on the system class path, simply\n        // log a message saying so.\n        StringBuffer sb = new StringBuffer(\"*** Class '\");\n        sb.append(name);\n        sb.append(\"' was not found. Bundle \");\n        sb.append(importer);\n        sb.append(\" does not import package '\");\n        sb.append(pkgName);\n        sb.append(\"', nor is the package exported by any other bundle or available from the system class loader.\");\n        sb.append(\" ***\");\n\n        return sb.toString();\n    }","id":52447,"modified_method":"private static String diagnoseClassLoadError(\n        FelixResolver resolver, ModuleImpl module, String name)\n    {\n        // We will try to do some diagnostics here to help the developer\n        // deal with this exception.\n\n        // Get package name.\n        String pkgName = Util.getClassPackage(name);\n        if (pkgName.length() == 0)\n        {\n            return null;\n        }\n\n        // First, get the bundle string of the module doing the class loader.\n        String importer = module.getBundle().toString();\n\n        // Next, check to see if the module imports the package.\n        List<Wire> wires = module.getWires();\n        for (int i = 0; (wires != null) && (i < wires.size()); i++)\n        {\n            if (wires.get(i).getCapability().getNamespace().equals(Capability.PACKAGE_NAMESPACE) &&\n                wires.get(i).getCapability().getAttribute(Capability.PACKAGE_ATTR).getValue().equals(pkgName))\n            {\n                String exporter = wires.get(i).getExporter().getBundle().toString();\n\n                StringBuffer sb = new StringBuffer(\"*** Package '\");\n                sb.append(pkgName);\n                sb.append(\"' is imported by bundle \");\n                sb.append(importer);\n                sb.append(\" from bundle \");\n                sb.append(exporter);\n                sb.append(\", but the exported package from bundle \");\n                sb.append(exporter);\n                sb.append(\" does not contain the requested class '\");\n                sb.append(name);\n                sb.append(\"'. Please verify that the class name is correct in the importing bundle \");\n                sb.append(importer);\n                sb.append(\" and/or that the exported package is correctly bundled in \");\n                sb.append(exporter);\n                sb.append(\". ***\");\n\n                return sb.toString();\n            }\n        }\n\n        // Next, check to see if the package was optionally imported and\n        // whether or not there is an exporter available.\n        List<Requirement> reqs = module.getRequirements();\n/*\n* TODO: RB - Fix diagnostic message for optional imports.\n        for (int i = 0; (reqs != null) && (i < reqs.length); i++)\n        {\n            if (reqs[i].getName().equals(pkgName) && reqs[i].isOptional())\n            {\n                // Try to see if there is an exporter available.\n                IModule[] exporters = getResolvedExporters(reqs[i], true);\n                exporters = (exporters.length == 0)\n                    ? getUnresolvedExporters(reqs[i], true) : exporters;\n\n                // An exporter might be available, but it may have attributes\n                // that do not match the importer's required attributes, so\n                // check that case by simply looking for an exporter of the\n                // desired package without any attributes.\n                if (exporters.length == 0)\n                {\n                    IRequirement pkgReq = new Requirement(\n                        ICapability.PACKAGE_NAMESPACE, \"(package=\" + pkgName + \")\");\n                    exporters = getResolvedExporters(pkgReq, true);\n                    exporters = (exporters.length == 0)\n                        ? getUnresolvedExporters(pkgReq, true) : exporters;\n                }\n\n                long expId = (exporters.length == 0)\n                    ? -1 : Util.getBundleIdFromModuleId(exporters[0].getId());\n\n                StringBuffer sb = new StringBuffer(\"*** Class '\");\n                sb.append(name);\n                sb.append(\"' was not found, but this is likely normal since package '\");\n                sb.append(pkgName);\n                sb.append(\"' is optionally imported by bundle \");\n                sb.append(impId);\n                sb.append(\".\");\n                if (exporters.length > 0)\n                {\n                    sb.append(\" However, bundle \");\n                    sb.append(expId);\n                    if (reqs[i].isSatisfied(\n                        Util.getExportPackage(exporters[0], reqs[i].getName())))\n                    {\n                        sb.append(\" does export this package. Bundle \");\n                        sb.append(expId);\n                        sb.append(\" must be installed before bundle \");\n                        sb.append(impId);\n                        sb.append(\" is resolved or else the optional import will be ignored.\");\n                    }\n                    else\n                    {\n                        sb.append(\" does export this package with attributes that do not match.\");\n                    }\n                }\n                sb.append(\" ***\");\n\n                return sb.toString();\n            }\n        }\n*/\n        // Next, check to see if the package is dynamically imported by the module.\n// TODO: FELIX3 - Add Resolver.findAllowedDynamicImport().\n/*\n        Requirement pkgReq = Resolver.findAllowedDynamicImport(module, pkgName);\n        if (pkgReq != null)\n        {\n            // Try to see if there is an exporter available.\n            List exports =\n                resolver.getResolvedCandidates(pkgReq, module);\n            exports = (exports.size() == 0)\n                ? resolver.getUnresolvedCandidates(pkgReq, module)\n                : exports;\n\n            // An exporter might be available, but it may have attributes\n            // that do not match the importer's required attributes, so\n            // check that case by simply looking for an exporter of the\n            // desired package without any attributes.\n            if (exports.size() == 0)\n            {\n                try\n                {\n                    IRequirement req = new Requirement(\n                        ICapability.PACKAGE_NAMESPACE, \"(package=\" + pkgName + \")\");\n                    exports = resolver.getResolvedCandidates(req, module);\n                    exports = (exports.size() == 0)\n                        ? resolver.getUnresolvedCandidates(req, module)\n                        : exports;\n                }\n                catch (InvalidSyntaxException ex)\n                {\n                    // This should never happen.\n                }\n            }\n\n            String exporter = (exports.size() == 0)\n                ? null : ((ICapability) exports.get(0)).getModule().getBundle().toString();\n\n            StringBuffer sb = new StringBuffer(\"*** Class '\");\n            sb.append(name);\n            sb.append(\"' was not found, but this is likely normal since package '\");\n            sb.append(pkgName);\n            sb.append(\"' is dynamically imported by bundle \");\n            sb.append(importer);\n            sb.append(\".\");\n            if (exports.size() > 0)\n            {\n                if (!pkgReq.isSatisfied((ICapability) exports.get(0)))\n                {\n                    sb.append(\" However, bundle \");\n                    sb.append(exporter);\n                    sb.append(\" does export this package with attributes that do not match.\");\n                }\n            }\n            sb.append(\" ***\");\n\n            return sb.toString();\n        }\n*/\n        // Next, check to see if there are any exporters for the package at all.\n        Requirement pkgReq = null;\n        List<Attribute> attrs = new ArrayList(1);\n        attrs.add(new Attribute(Capability.PACKAGE_ATTR, pkgName, false));\n        pkgReq = new RequirementImpl(\n            Capability.PACKAGE_NAMESPACE, new ArrayList<Directive>(0), attrs);\n        Set<Capability> exports = resolver.getCandidates(module, pkgReq, false);\n        if (exports.size() > 0)\n        {\n            boolean classpath = false;\n            try\n            {\n                ModuleClassLoader.class.getClassLoader().loadClass(name);\n                classpath = true;\n            }\n            catch (NoClassDefFoundError err)\n            {\n                // Ignore\n            }\n            catch (Exception ex)\n            {\n                // Ignore\n            }\n\n            String exporter = exports.iterator().next().getModule().getBundle().toString();\n\n            StringBuffer sb = new StringBuffer(\"*** Class '\");\n            sb.append(name);\n            sb.append(\"' was not found because bundle \");\n            sb.append(importer);\n            sb.append(\" does not import '\");\n            sb.append(pkgName);\n            sb.append(\"' even though bundle \");\n            sb.append(exporter);\n            sb.append(\" does export it.\");\n            if (classpath)\n            {\n                sb.append(\" Additionally, the class is also available from the system class loader. There are two fixes: 1) Add an import for '\");\n                sb.append(pkgName);\n                sb.append(\"' to bundle \");\n                sb.append(importer);\n                sb.append(\"; imports are necessary for each class directly touched by bundle code or indirectly touched, such as super classes if their methods are used. \");\n                sb.append(\"2) Add package '\");\n                sb.append(pkgName);\n                sb.append(\"' to the '\");\n                sb.append(Constants.FRAMEWORK_BOOTDELEGATION);\n                sb.append(\"' property; a library or VM bug can cause classes to be loaded by the wrong class loader. The first approach is preferable for preserving modularity.\");\n            }\n            else\n            {\n                sb.append(\" To resolve this issue, add an import for '\");\n                sb.append(pkgName);\n                sb.append(\"' to bundle \");\n                sb.append(importer);\n                sb.append(\".\");\n            }\n            sb.append(\" ***\");\n\n            return sb.toString();\n        }\n\n        // Next, try to see if the class is available from the system\n        // class loader.\n        try\n        {\n            ModuleClassLoader.class.getClassLoader().loadClass(name);\n\n            StringBuffer sb = new StringBuffer(\"*** Package '\");\n            sb.append(pkgName);\n            sb.append(\"' is not imported by bundle \");\n            sb.append(importer);\n            sb.append(\", nor is there any bundle that exports package '\");\n            sb.append(pkgName);\n            sb.append(\"'. However, the class '\");\n            sb.append(name);\n            sb.append(\"' is available from the system class loader. There are two fixes: 1) Add package '\");\n            sb.append(pkgName);\n            sb.append(\"' to the '\");\n            sb.append(Constants.FRAMEWORK_SYSTEMPACKAGES_EXTRA);\n            sb.append(\"' property and modify bundle \");\n            sb.append(importer);\n            sb.append(\" to import this package; this causes the system bundle to export class path packages. 2) Add package '\");\n            sb.append(pkgName);\n            sb.append(\"' to the '\");\n            sb.append(Constants.FRAMEWORK_BOOTDELEGATION);\n            sb.append(\"' property; a library or VM bug can cause classes to be loaded by the wrong class loader. The first approach is preferable for preserving modularity.\");\n            sb.append(\" ***\");\n\n            return sb.toString();\n        }\n        catch (Exception ex2)\n        {\n        }\n\n        // Finally, if there are no imports or exports for the package\n        // and it is not available on the system class path, simply\n        // log a message saying so.\n        StringBuffer sb = new StringBuffer(\"*** Class '\");\n        sb.append(name);\n        sb.append(\"' was not found. Bundle \");\n        sb.append(importer);\n        sb.append(\" does not import package '\");\n        sb.append(pkgName);\n        sb.append(\"', nor is the package exported by any other bundle or available from the system class loader.\");\n        sb.append(\" ***\");\n\n        return sb.toString();\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"private List calculateContentPath(\n        IModule module, IContent content, List contentList, boolean searchFragments)\n        throws Exception\n    {\n        // Creating the content path entails examining the bundle's\n        // class path to determine whether the bundle JAR file itself\n        // is on the bundle's class path and then creating content\n        // objects for everything on the class path.\n\n        // Create a list to contain the content path for the specified content.\n        List localContentList = new ArrayList();\n\n        // Find class path meta-data.\n        String classPath = (String) module.getHeaders().get(FelixConstants.BUNDLE_CLASSPATH);\n        // Parse the class path into strings.\n        String[] classPathStrings = ManifestParser.parseDelimitedString(\n            classPath, FelixConstants.CLASS_PATH_SEPARATOR);\n\n        if (classPathStrings == null)\n        {\n            classPathStrings = new String[0];\n        }\n\n        // Create the bundles class path.\n        for (int i = 0; i < classPathStrings.length; i++)\n        {\n            // Remove any leading slash, since all bundle class path\n            // entries are relative to the root of the bundle.\n            classPathStrings[i] = (classPathStrings[i].startsWith(\"/\"))\n                ? classPathStrings[i].substring(1)\n                : classPathStrings[i];\n\n            // Check for the bundle itself on the class path.\n            if (classPathStrings[i].equals(FelixConstants.CLASS_PATH_DOT))\n            {\n                localContentList.add(content);\n            }\n            else\n            {\n                // Try to find the embedded class path entry in the current\n                // content.\n                IContent embeddedContent = content.getEntryAsContent(classPathStrings[i]);\n                // If the embedded class path entry was not found, it might be\n                // in one of the fragments if the current content is the bundle,\n                // so try to search the fragments if necessary.\n                for (int fragIdx = 0;\n                    searchFragments && (embeddedContent == null)\n                        && (m_fragmentContents != null) && (fragIdx < m_fragmentContents.length);\n                    fragIdx++)\n                {\n                    embeddedContent = m_fragmentContents[fragIdx].getEntryAsContent(classPathStrings[i]);\n                }\n                // If we found the embedded content, then add it to the\n                // class path content list.\n                if (embeddedContent != null)\n                {\n                    localContentList.add(embeddedContent);\n                }\n                else\n                {\n// TODO: FRAMEWORK - Per the spec, this should fire a FrameworkEvent.INFO event;\n//       need to create an \"Eventer\" class like \"Logger\" perhaps.\n                    m_logger.log(Logger.LOG_INFO,\n                        \"Class path entry not found: \"\n                        + classPathStrings[i]);\n                }\n            }\n        }\n\n        // If there is nothing on the class path, then include\n        // \".\" by default, as per the spec.\n        if (localContentList.size() == 0)\n        {\n            localContentList.add(content);\n        }\n\n        // Now add the local contents to the global content list and return it.\n        contentList.addAll(localContentList);\n        return contentList;\n    }","id":52448,"modified_method":"private List calculateContentPath(\n        Module module, Content content, List contentList, boolean searchFragments)\n        throws Exception\n    {\n        // Creating the content path entails examining the bundle's\n        // class path to determine whether the bundle JAR file itself\n        // is on the bundle's class path and then creating content\n        // objects for everything on the class path.\n\n        // Create a list to contain the content path for the specified content.\n        List localContentList = new ArrayList();\n\n        // Find class path meta-data.\n        String classPath = (String) module.getHeaders().get(FelixConstants.BUNDLE_CLASSPATH);\n        // Parse the class path into strings.\n        List<String> classPathStrings = ManifestParser.parseDelimitedString(\n            classPath, FelixConstants.CLASS_PATH_SEPARATOR);\n\n        if (classPathStrings == null)\n        {\n            classPathStrings = new ArrayList<String>(0);\n        }\n\n        // Create the bundles class path.\n        for (int i = 0; i < classPathStrings.size(); i++)\n        {\n            // Remove any leading slash, since all bundle class path\n            // entries are relative to the root of the bundle.\n            classPathStrings.set(i, (classPathStrings.get(i).startsWith(\"/\"))\n                ? classPathStrings.get(i).substring(1)\n                : classPathStrings.get(i));\n\n            // Check for the bundle itself on the class path.\n            if (classPathStrings.get(i).equals(FelixConstants.CLASS_PATH_DOT))\n            {\n                localContentList.add(content);\n            }\n            else\n            {\n                // Try to find the embedded class path entry in the current\n                // content.\n                Content embeddedContent = content.getEntryAsContent(classPathStrings.get(i));\n                // If the embedded class path entry was not found, it might be\n                // in one of the fragments if the current content is the bundle,\n                // so try to search the fragments if necessary.\n                for (int fragIdx = 0;\n                    searchFragments && (embeddedContent == null)\n                        && (m_fragmentContents != null) && (fragIdx < m_fragmentContents.length);\n                    fragIdx++)\n                {\n                    embeddedContent =\n                        m_fragmentContents[fragIdx].getEntryAsContent(classPathStrings.get(i));\n                }\n                // If we found the embedded content, then add it to the\n                // class path content list.\n                if (embeddedContent != null)\n                {\n                    localContentList.add(embeddedContent);\n                }\n                else\n                {\n// TODO: FRAMEWORK - Per the spec, this should fire a FrameworkEvent.INFO event;\n//       need to create an \"Eventer\" class like \"Logger\" perhaps.\n                    m_logger.log(Logger.LOG_INFO,\n                        \"Class path entry not found: \"\n                        + classPathStrings.get(i));\n                }\n            }\n        }\n\n        // If there is nothing on the class path, then include\n        // \".\" by default, as per the spec.\n        if (localContentList.size() == 0)\n        {\n            localContentList.add(content);\n        }\n\n        // Now add the local contents to the global content list and return it.\n        contentList.addAll(localContentList);\n        return contentList;\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"private void attachFragmentContents(IContent[] fragmentContents)\n        throws Exception\n    {\n        // Close existing fragment contents.\n        if (m_fragmentContents != null)\n        {\n            for (int i = 0; i < m_fragmentContents.length; i++)\n            {\n                m_fragmentContents[i].close();\n            }\n        }\n        m_fragmentContents = fragmentContents;\n\n        if (m_contentPath != null)\n        {\n            for (int i = 0; i < m_contentPath.length; i++)\n            {\n                m_contentPath[i].close();\n            }\n        }\n        m_contentPath = initializeContentPath();\n    }","id":52449,"modified_method":"private void attachFragmentContents(Content[] fragmentContents)\n        throws Exception\n    {\n        // Close existing fragment contents.\n        if (m_fragmentContents != null)\n        {\n            for (int i = 0; i < m_fragmentContents.length; i++)\n            {\n                m_fragmentContents[i].close();\n            }\n        }\n        m_fragmentContents = fragmentContents;\n\n        if (m_contentPath != null)\n        {\n            for (int i = 0; i < m_contentPath.length; i++)\n            {\n                m_contentPath[i].close();\n            }\n        }\n        m_contentPath = initializeContentPath();\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"private Enumeration getResourcesLocal(String name)\n    {\n        Vector v = new Vector();\n\n        // Special case \"/\" so that it returns a root URLs for\n        // each bundle class path entry...this isn't very\n        // clean or meaningful, but the Spring guys want it.\n        final IContent[] contentPath = getContentPath();\n        if (name.equals(\"/\"))\n        {\n            for (int i = 0; i < contentPath.length; i++)\n            {\n                v.addElement(createURL(i + 1, name));\n            }\n        }\n        else\n        {\n            // Remove leading slash, if present.\n            if (name.startsWith(\"/\"))\n            {\n                name = name.substring(1);\n            }\n\n            // Check the module class path.\n            for (int i = 0; i < contentPath.length; i++)\n            {\n                if (contentPath[i].hasEntry(name))\n                {\n                    // Use the class path index + 1 for creating the path so\n                    // that we can differentiate between module content URLs\n                    // (where the path will start with 0) and module class\n                    // path URLs.\n                    v.addElement(createURL(i + 1, name));\n                }\n            }\n        }\n\n        return v.elements();\n    }","id":52450,"modified_method":"private Enumeration getResourcesLocal(String name)\n    {\n        Vector v = new Vector();\n\n        // Special case \"/\" so that it returns a root URLs for\n        // each bundle class path entry...this isn't very\n        // clean or meaningful, but the Spring guys want it.\n        final Content[] contentPath = getContentPath();\n        if (name.equals(\"/\"))\n        {\n            for (int i = 0; i < contentPath.length; i++)\n            {\n                v.addElement(createURL(i + 1, name));\n            }\n        }\n        else\n        {\n            // Remove leading slash, if present.\n            if (name.startsWith(\"/\"))\n            {\n                name = name.substring(1);\n            }\n\n            // Check the module class path.\n            for (int i = 0; i < contentPath.length; i++)\n            {\n                if (contentPath[i].hasEntry(name))\n                {\n                    // Use the class path index + 1 for creating the path so\n                    // that we can differentiate between module content URLs\n                    // (where the path will start with 0) and module class\n                    // path URLs.\n                    v.addElement(createURL(i + 1, name));\n                }\n            }\n        }\n\n        return v.elements();\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"public synchronized IRequirement[] getRequirements()\n    {\n        if (m_cachedRequirements == null)\n        {\n            List allReqs = new ArrayList();\n            Map pkgMap = new HashMap();\n            Map rbMap = new HashMap();\n            for (int i = 0; (m_requirements != null) && i < m_requirements.length; i++)\n            {\n                if (m_requirements[i].getNamespace().equals(ICapability.PACKAGE_NAMESPACE))\n                {\n                    pkgMap.put(\n                        ((Requirement) m_requirements[i]).getTargetName(),\n                        m_requirements[i]);\n                }\n                else if (m_requirements[i].getNamespace().equals(ICapability.MODULE_NAMESPACE))\n                {\n                    rbMap.put(\n                        ((Requirement) m_requirements[i]).getTargetName(),\n                        m_requirements[i]);\n                }\n                else\n                {\n                    allReqs.add(m_requirements[i]);\n                }\n            }\n\n            // Aggregate host and fragment bundle and package requirements.\n            for (int fragIdx = 0;\n                (m_fragments != null) && (fragIdx < m_fragments.length);\n                fragIdx++)\n            {\n                IRequirement[] reqs = m_fragments[fragIdx].getRequirements();\n                for (int reqIdx = 0;\n                    (reqs != null) && (reqIdx < reqs.length);\n                    reqIdx++)\n                {\n                    if (reqs[reqIdx].getNamespace().equals(ICapability.PACKAGE_NAMESPACE))\n                    {\n                        // If the current fragment requirement overlaps a previously\n                        // added requirement, then calculate a new intersecting requirement.\n                        Requirement req = (Requirement) pkgMap.get(\n                            ((Requirement) reqs[reqIdx]).getTargetName());\n                        if (req != null)\n                        {\n                            req = FelixResolverState.calculateVersionIntersection(\n                                req, (Requirement) reqs[reqIdx]);\n                        }\n                        else\n                        {\n                            req = (Requirement) reqs[reqIdx];\n                        }\n                        pkgMap.put(req.getTargetName(), req);\n                    }\n                    else if (reqs[reqIdx].getNamespace().equals(ICapability.MODULE_NAMESPACE))\n                    {\n                        // If the current fragment requirement overlaps a previously\n                        // added requirement, then calculate a new intersecting requirement.\n                        Requirement req = (Requirement) pkgMap.get(\n                            ((Requirement) reqs[reqIdx]).getTargetName());\n                        if (req != null)\n                        {\n                            req = FelixResolverState.calculateVersionIntersection(\n                                req, (Requirement) reqs[reqIdx]);\n                        }\n                        else\n                        {\n                            req = (Requirement) reqs[reqIdx];\n                        }\n                        rbMap.put(req.getTargetName(), req);\n                    }\n                }\n            }\n            allReqs.addAll(pkgMap.values());\n            allReqs.addAll(rbMap.values());\n            m_cachedRequirements = (IRequirement[])\n                allReqs.toArray(new IRequirement[allReqs.size()]);\n        }\n        return m_cachedRequirements;\n    }","id":52451,"modified_method":"public synchronized List<Requirement> getRequirements()\n    {\n        if (m_cachedRequirements == null)\n        {\n            List<Requirement> reqList = (m_requirements == null)\n                ? new ArrayList() : new ArrayList(m_requirements);\n            for (int fragIdx = 0;\n                (m_fragments != null) && (fragIdx < m_fragments.size());\n                fragIdx++)\n            {\n                List<Requirement> reqs = m_fragments.get(fragIdx).getRequirements();\n                for (int reqIdx = 0;\n                    (reqs != null) && (reqIdx < reqs.size());\n                    reqIdx++)\n                {\n                    if (reqs.get(reqIdx).getNamespace().equals(Capability.PACKAGE_NAMESPACE)\n                        || reqs.get(reqIdx).getNamespace().equals(Capability.MODULE_NAMESPACE))\n                    {\n                        reqList.add(\n                            new FragmentRequirement(\n                                reqs.get(reqIdx), m_fragments.get(fragIdx)));\n                    }\n                }\n            }\n            m_cachedRequirements = Collections.unmodifiableList(reqList);\n        }\n        return m_cachedRequirements;\n    }","commit_id":"8ef9099c4b6e39849391333172e47f97fae1a854","url":"https://github.com/apache/felix"},{"original_method":"public void insertNamespaceDeclaration(@NotNull final XmlFile file,\n                                         @NotNull final Editor editor,\n                                         @NotNull final Set<String> possibleNamespaces,\n                                         @Nullable String nsPrefix,\n                                         @Nullable final Runner<String, IncorrectOperationException> runAfter) throws IncorrectOperationException {\n\n    final String namespace = possibleNamespaces.iterator().next();\n\n    final Project project = file.getProject();\n    final XmlDocument document = file.getDocument();\n    assert document != null;\n    final XmlTag rootTag = document.getRootTag();\n    assert rootTag != null;\n    final XmlAttribute[] attributes = rootTag.getAttributes();\n    XmlAttribute anchor = null;\n    for (XmlAttribute attribute : attributes) {\n      final XmlAttributeDescriptor descriptor = attribute.getDescriptor();\n      if (attribute.isNamespaceDeclaration() || (descriptor != null && descriptor.isRequired())) {\n        anchor = attribute;\n      } else {\n        break;\n      }\n    }\n    \n    final XmlSchemaProvider provider = XmlSchemaProvider.getAvailableProvider(file);\n    String prefix = nsPrefix;\n    if (prefix == null && provider != null) {\n      prefix = provider.getDefaultPrefix(namespace, file);\n    }\n    if (prefix == null) {\n      prefix = \"\";\n    }\n    final XmlElementFactory elementFactory = XmlElementFactory.getInstance(project);\n\n    @NonNls final String qname = \"xmlns\" + (prefix.length() > 0 ? \":\"+ prefix :\"\");\n    final XmlAttribute attribute = elementFactory.createXmlAttribute(qname, namespace);\n    if (anchor == null) {\n      rootTag.add(attribute);\n    } else {\n      rootTag.addAfter(attribute, anchor);\n    }\n\n    String location = null;\n    if (namespace.length() > 0) {\n      if (provider != null) {\n        final Set<String> strings = provider.getLocations(namespace, file);\n        if (strings != null && strings.size() > 0) {\n          location = strings.iterator().next();\n        }\n      }\n    }\n\n    if (location != null) {\n      XmlAttribute xmlAttribute = rootTag.getAttribute(\"xsi:schemaLocation\");\n      final String pair = namespace + \" \" + location;\n      if (xmlAttribute == null) {\n        xmlAttribute = elementFactory.createXmlAttribute(\"xsi:schemaLocation\", pair);\n        rootTag.add(xmlAttribute);\n      } else {\n        final String value = xmlAttribute.getValue();\n        if (!value.contains(namespace)) {\n          if (StringUtil.isEmptyOrSpaces(value)) {\n            xmlAttribute.setValue(pair);\n          } else {\n            xmlAttribute.setValue(value.trim() + \" \" + pair);\n          }\n        }\n      }\n    }\n    XmlUtil.reformatTagStart(rootTag);\n    \n    if (namespace.length() == 0) {\n      final XmlAttribute xmlAttribute = rootTag.getAttribute(qname);\n      if (xmlAttribute != null) {\n        final XmlAttributeValue value = xmlAttribute.getValueElement();\n        assert value != null;\n        final int startOffset = value.getTextOffset();\n        editor.getCaretModel().moveToOffset(startOffset);\n        editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);\n      }\n    }\n    if (runAfter != null) {\n      runAfter.run(prefix);\n    }\n  }","id":52452,"modified_method":"public void insertNamespaceDeclaration(@NotNull final XmlFile file,\n                                         @NotNull final Editor editor,\n                                         @NotNull final Set<String> possibleNamespaces,\n                                         @Nullable String nsPrefix,\n                                         @Nullable final Runner<String, IncorrectOperationException> runAfter) throws IncorrectOperationException {\n\n    final String namespace = possibleNamespaces.iterator().next();\n\n    final Project project = file.getProject();\n    final XmlDocument document = file.getDocument();\n    assert document != null;\n    final XmlTag rootTag = document.getRootTag();\n    assert rootTag != null;\n    final XmlAttribute[] attributes = rootTag.getAttributes();\n    XmlAttribute anchor = null;\n    for (XmlAttribute attribute : attributes) {\n      final XmlAttributeDescriptor descriptor = attribute.getDescriptor();\n      if (attribute.isNamespaceDeclaration() || (descriptor != null && descriptor.isRequired())) {\n        anchor = attribute;\n      } else {\n        break;\n      }\n    }\n    \n    final List<XmlSchemaProvider> providers = XmlSchemaProvider.getAvailableProviders(file);\n    XmlSchemaProvider prefixProvider = null;\n    String prefix = nsPrefix;\n    if (prefix == null) {\n      for (XmlSchemaProvider provider : providers) {\n        prefix = provider.getDefaultPrefix(namespace, file);\n        if (prefix != null) {\n          prefixProvider = provider;\n          break;\n        }\n      }\n    }\n    if (prefix == null) {\n      prefix = \"\";\n    }\n    final XmlElementFactory elementFactory = XmlElementFactory.getInstance(project);\n\n    @NonNls final String qname = \"xmlns\" + (prefix.length() > 0 ? \":\"+ prefix :\"\");\n    final XmlAttribute attribute = elementFactory.createXmlAttribute(qname, namespace);\n    if (anchor == null) {\n      rootTag.add(attribute);\n    } else {\n      rootTag.addAfter(attribute, anchor);\n    }\n\n    String location = null;\n    if (namespace.length() > 0) {\n      if (prefixProvider != null) {\n        final Set<String> strings = prefixProvider.getLocations(namespace, file);\n        if (strings != null && strings.size() > 0) {\n          location = strings.iterator().next();\n        }\n      }\n    }\n\n    if (location != null) {\n      XmlAttribute xmlAttribute = rootTag.getAttribute(\"xsi:schemaLocation\");\n      final String pair = namespace + \" \" + location;\n      if (xmlAttribute == null) {\n        xmlAttribute = elementFactory.createXmlAttribute(\"xsi:schemaLocation\", pair);\n        rootTag.add(xmlAttribute);\n      } else {\n        final String value = xmlAttribute.getValue();\n        if (!value.contains(namespace)) {\n          if (StringUtil.isEmptyOrSpaces(value)) {\n            xmlAttribute.setValue(pair);\n          } else {\n            xmlAttribute.setValue(value.trim() + \" \" + pair);\n          }\n        }\n      }\n    }\n    XmlUtil.reformatTagStart(rootTag);\n    \n    if (namespace.length() == 0) {\n      final XmlAttribute xmlAttribute = rootTag.getAttribute(qname);\n      if (xmlAttribute != null) {\n        final XmlAttributeValue value = xmlAttribute.getValueElement();\n        assert value != null;\n        final int startOffset = value.getTextOffset();\n        editor.getCaretModel().moveToOffset(startOffset);\n        editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);\n      }\n    }\n    if (runAfter != null) {\n      runAfter.run(prefix);\n    }\n  }","commit_id":"5c8b5e56b0f6e969fee841cfd7bb9ed528ad5925","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public Set<String> getNamespacesByTagName(@NotNull final String tagName, @NotNull final XmlFile context) {\n    final XmlSchemaProvider provider = XmlSchemaProvider.getAvailableProvider(context);\n    if (provider == null) {\n      return Collections.emptySet();\n    }\n    return provider.getAvailableNamespaces(context, tagName);\n  }","id":52453,"modified_method":"@NotNull\n  public Set<String> getNamespacesByTagName(@NotNull final String tagName, @NotNull final XmlFile context) {\n    final List<XmlSchemaProvider> providers = XmlSchemaProvider.getAvailableProviders(context);\n\n    HashSet<String> set = new HashSet<String>();\n    for (XmlSchemaProvider provider : providers) {\n      set.addAll(provider.getAvailableNamespaces(context, tagName));\n    }\n    return set;\n  }","commit_id":"5c8b5e56b0f6e969fee841cfd7bb9ed528ad5925","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public List<Pair<String,String>> getAvailableTagNames(@NotNull final XmlFile file, @NotNull final XmlTag context) {\n\n    final Set<String> namespaces = new HashSet<String>(Arrays.asList(context.knownNamespaces()));\n    final XmlSchemaProvider provider = XmlSchemaProvider.getAvailableProvider(file);\n    if (provider != null) {\n      namespaces.addAll(provider.getAvailableNamespaces(file, null));\n    }\n    final ArrayList<String> nsInfo = new ArrayList<String>();\n    final String[] names = TagNameReference.getTagNameVariants(context, namespaces, nsInfo);\n    final List<Pair<String, String>> set = new ArrayList<Pair<String,String>>(names.length);\n    final Iterator<String> iterator = nsInfo.iterator();\n    for (String name : names) {\n      final int pos = name.indexOf(':');\n      final String s = pos >= 0 ? name.substring(pos + 1) : name;\n      set.add(Pair.create(s, iterator.next()));\n    }\n    return set;\n  }","id":52454,"modified_method":"@NotNull\n  public List<Pair<String,String>> getAvailableTagNames(@NotNull final XmlFile file, @NotNull final XmlTag context) {\n\n    final Set<String> namespaces = new HashSet<String>(Arrays.asList(context.knownNamespaces()));\n    final List<XmlSchemaProvider> providers = XmlSchemaProvider.getAvailableProviders(file);\n    for (XmlSchemaProvider provider : providers) {\n      namespaces.addAll(provider.getAvailableNamespaces(file, null));\n    }\n    final ArrayList<String> nsInfo = new ArrayList<String>();\n    final String[] names = TagNameReference.getTagNameVariants(context, namespaces, nsInfo);\n    final List<Pair<String, String>> set = new ArrayList<Pair<String,String>>(names.length);\n    final Iterator<String> iterator = nsInfo.iterator();\n    for (String name : names) {\n      final int pos = name.indexOf(':');\n      final String s = pos >= 0 ? name.substring(pos + 1) : name;\n      set.add(Pair.create(s, iterator.next()));\n    }\n    return set;\n  }","commit_id":"5c8b5e56b0f6e969fee841cfd7bb9ed528ad5925","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void handleInsert(final InsertionContext context, final LookupElement item) {\n\n    final XmlFile contextfile = (XmlFile)context.getFile();\n    final XmlExtension extension = XmlExtension.getExtension(contextfile);\n    final XmlFile file = extension.getContainingFile(contextfile);\n    final Project project = context.getProject();\n\n    assert file != null;\n    final PsiElement psiElement = file.findElementAt(context.getStartOffset());\n    assert psiElement != null;\n    if (isNamespaceBound(psiElement)) {\n      doDefault(context, item);\n      return;\n    }\n\n    final Editor editor = context.getEditor();\n    final Document document = editor.getDocument();\n    PsiDocumentManager.getInstance(project).commitDocument(document);\n\n    final int caretOffset = editor.getCaretModel().getOffset();\n    final RangeMarker caretMarker = document.createRangeMarker(caretOffset, caretOffset);\n    caretMarker.setGreedyToRight(true);\n\n    final XmlExtension.Runner<String, IncorrectOperationException> runAfter =\n      new XmlExtension.Runner<String, IncorrectOperationException>() {\n\n        public void run(final String namespacePrefix) {\n\n          PsiDocumentManager.getInstance(project).commitDocument(document);\n          final PsiElement element = file.findElementAt(context.getStartOffset());\n          if (element != null) {\n            qualifyWithPrefix(namespacePrefix, element, document);\n            PsiDocumentManager.getInstance(project).commitDocument(document);\n          }\n          editor.getCaretModel().moveToOffset(caretMarker.getEndOffset());\n          PsiDocumentManager.getInstance(project).doPostponedOperationsAndUnblockDocument(document);\n          doDefault(context, item);\n        }\n      };\n\n    try {\n      final String prefixByNamespace = getPrefixByNamespace(file, myNamespace);\n      if (myNamespacePrefix != null || StringUtil.isEmpty(prefixByNamespace)) {\n        final String nsPrefix = myNamespacePrefix == null ? suggestPrefix(file, myNamespace) : myNamespacePrefix;\n        extension.insertNamespaceDeclaration(file, editor, Collections.singleton(myNamespace), nsPrefix, runAfter);\n        FeatureUsageTracker.getInstance().triggerFeatureUsed(XmlCompletionContributor.TAG_NAME_COMPLETION_FEATURE);\n      } else {\n        runAfter.run(prefixByNamespace);    // qualify && complete\n      }\n    }\n    catch (IncorrectOperationException e) {\n      LOG.error(e);\n    }\n  }","id":52455,"modified_method":"public void handleInsert(final InsertionContext context, final LookupElement item) {\n\n    final XmlFile contextFile = (XmlFile)context.getFile();\n    final XmlExtension extension = XmlExtension.getExtension(contextFile);\n    final XmlFile file = extension.getContainingFile(contextFile);\n    final Project project = context.getProject();\n\n    assert file != null;\n    final PsiElement psiElement = file.findElementAt(context.getStartOffset());\n    assert psiElement != null;\n    if (isNamespaceBound(psiElement)) {\n      doDefault(context, item);\n      return;\n    }\n\n    final Editor editor = context.getEditor();\n    final Document document = editor.getDocument();\n    PsiDocumentManager.getInstance(project).commitDocument(document);\n\n    final int caretOffset = editor.getCaretModel().getOffset();\n    final RangeMarker caretMarker = document.createRangeMarker(caretOffset, caretOffset);\n    caretMarker.setGreedyToRight(true);\n\n    final XmlExtension.Runner<String, IncorrectOperationException> runAfter =\n      new XmlExtension.Runner<String, IncorrectOperationException>() {\n\n        public void run(final String namespacePrefix) {\n\n          PsiDocumentManager.getInstance(project).commitDocument(document);\n          final PsiElement element = file.findElementAt(context.getStartOffset());\n          if (element != null) {\n            qualifyWithPrefix(namespacePrefix, element, document);\n            PsiDocumentManager.getInstance(project).commitDocument(document);\n          }\n          editor.getCaretModel().moveToOffset(caretMarker.getEndOffset());\n          PsiDocumentManager.getInstance(project).doPostponedOperationsAndUnblockDocument(document);\n          doDefault(context, item);\n        }\n      };\n\n    try {\n      final String prefixByNamespace = getPrefixByNamespace(file, myNamespace);\n      if (myNamespacePrefix != null || StringUtil.isEmpty(prefixByNamespace)) {\n        final String nsPrefix = myNamespacePrefix == null ? suggestPrefix(file, myNamespace) : myNamespacePrefix;\n        extension.insertNamespaceDeclaration(file, editor, Collections.singleton(myNamespace), nsPrefix, runAfter);\n        FeatureUsageTracker.getInstance().triggerFeatureUsed(XmlCompletionContributor.TAG_NAME_COMPLETION_FEATURE);\n      } else {\n        runAfter.run(prefixByNamespace);    // qualify && complete\n      }\n    }\n    catch (IncorrectOperationException e) {\n      LOG.error(e);\n    }\n  }","commit_id":"5c8b5e56b0f6e969fee841cfd7bb9ed528ad5925","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public Set<String> getAvailableTagNames(@NotNull final XmlFile file, @NotNull final XmlTag context) {\n\n    final XmlSchemaProvider provider = XmlSchemaProvider.getAvailableProvider(file);\n    if (provider != null) {\n      final Set<String> namespaces = provider.getAvailableNamespaces(file);\n      final String[] nameVariants = TagNameReference.getTagNameVariants(context, new ArrayList<XmlElementDescriptor>(), namespaces);\n      final HashSet<String> set = new HashSet<String>(nameVariants.length);\n      for (String nameVariant : nameVariants) {\n        final int pos = nameVariant.indexOf(':');\n        set.add(pos >= 0 ? nameVariant.substring(pos + 1) : nameVariant);\n      }\n      return set;\n    }\n    return Collections.emptySet();\n  }","id":52456,"modified_method":"@NotNull\n  public List<Pair<String,String>> getAvailableTagNames(@NotNull final XmlFile file, @NotNull final XmlTag context) {\n\n    final Set<String> namespaces = new HashSet<String>(Arrays.asList(context.knownNamespaces()));\n    final XmlSchemaProvider provider = XmlSchemaProvider.getAvailableProvider(file);\n    if (provider != null) {\n      namespaces.addAll(provider.getAvailableNamespaces(file));\n    }\n    final ArrayList<String> nsInfo = new ArrayList<String>();\n    final String[] names = TagNameReference.getTagNameVariants(context, namespaces, nsInfo);\n    final List<Pair<String, String>> set = new ArrayList<Pair<String,String>>(names.length);\n    final Iterator<String> iterator = nsInfo.iterator();\n    for (String name : names) {\n      final int pos = name.indexOf(':');\n      final String s = pos >= 0 ? name.substring(pos + 1) : name;\n      set.add(Pair.create(s, iterator.next()));\n    }\n    return set;\n  }","commit_id":"518e71389f308d7a3a517bfd703422d839b257dd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ExtendedTagInsertHandler(final String elementName, @Nullable final String namespacePrefix) {\n    myElementName = elementName;\n    myNamespacePrefix = namespacePrefix;\n  }","id":52457,"modified_method":"public ExtendedTagInsertHandler(final String elementName, @Nullable final String namespace, @Nullable final String namespacePrefix) {\n    myElementName = elementName;\n    myNamespace = namespace;\n    myNamespacePrefix = namespacePrefix;\n  }","commit_id":"518e71389f308d7a3a517bfd703422d839b257dd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private String getPrefix(final XmlFile file, final Set<String> namespaces) {\n    @Nullable String nsPrefix = myNamespacePrefix;\n    if (myNamespacePrefix == null && namespaces.size() > 0) {\n      final XmlSchemaProvider provider = XmlSchemaProvider.getAvailableProvider(file);\n      if (provider != null) {\n        for (String namespace : namespaces) {\n          final String prefix = provider.getDefaultPrefix(namespace, file);\n          if (prefix != null) {\n            if (nsPrefix == null) {\n              nsPrefix = prefix;\n            } else if (!prefix.equals(nsPrefix)) {\n              nsPrefix = null;\n              break;\n            }\n          }\n        }\n      }\n    }\n    return nsPrefix;\n  }","id":52458,"modified_method":"@Nullable\n  protected String suggestPrefix(XmlFile file) {\n    if (myNamespace == null) {\n      return null;\n    }\n    final XmlSchemaProvider provider = XmlSchemaProvider.getAvailableProvider(file);\n    return provider == null ? null : provider.getDefaultPrefix(myNamespace, file);\n  }","commit_id":"518e71389f308d7a3a517bfd703422d839b257dd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void handleInsert(final CompletionContext context,\n                           final int startOffset,\n                           final LookupData data,\n                           final LookupItem item,\n                           final boolean signatureSelected,\n                           final char completionChar) {\n\n    final XmlFile file = (XmlFile)context.file;\n    final Project project = context.project;\n\n    final PsiElement psiElement = file.findElementAt(startOffset);\n    assert psiElement != null;\n    if (isNamespaceBound(psiElement)) {\n      doDefault(context, startOffset, data, item, signatureSelected, completionChar);\n      return;\n    }\n\n    final Editor editor = context.editor;\n    final Document document = editor.getDocument();\n    PsiDocumentManager.getInstance(project).commitDocument(document);\n\n    final int caretOffset = editor.getCaretModel().getOffset();\n    final RangeMarker caretMarker = document.createRangeMarker(caretOffset, caretOffset);\n\n    final Set<String> namespaces = getNamespaces(file);\n    @Nullable String nsPrefix = getPrefix(file, namespaces);\n\n    final XmlExtension.Runner<String, IncorrectOperationException> runAfter =\n      new XmlExtension.Runner<String, IncorrectOperationException>() {\n\n        public void run(final String namespacePrefix) {\n\n          PsiDocumentManager.getInstance(project).commitDocument(document);\n          final PsiElement element = file.findElementAt(context.getStartOffset());\n          if (element != null) {\n            qualifyWithPrefix(namespacePrefix, element, document);\n            PsiDocumentManager.getInstance(project).commitDocument(document);\n          }\n          final int offset = context.getStartOffset();\n          editor.getCaretModel().moveToOffset(caretMarker.getStartOffset());\n          PsiDocumentManager.getInstance(project).doPostponedOperationsAndUnblockDocument(document);\n          doDefault(context, offset, data, item, signatureSelected, completionChar);\n        }\n      };\n\n    try {\n      @Nullable String prefix = getExistingPrefix(file, namespaces);\n      if (prefix == null) {\n        XmlExtension.getExtension(file).insertNamespaceDeclaration(file, editor, namespaces, nsPrefix, runAfter);\n      } else {\n        runAfter.run(prefix);    // qualify && complete\n      }\n    }\n    catch (IncorrectOperationException e) {\n      LOG.error(e);\n    }\n  }","id":52459,"modified_method":"public void handleInsert(final CompletionContext context,\n                           final int startOffset,\n                           final LookupData data,\n                           final LookupItem item,\n                           final boolean signatureSelected,\n                           final char completionChar) {\n\n    final XmlFile file = (XmlFile)context.file;\n    final Project project = context.project;\n\n    final PsiElement psiElement = file.findElementAt(startOffset);\n    assert psiElement != null;\n    if (isNamespaceBound(psiElement)) {\n      doDefault(context, startOffset, data, item, signatureSelected, completionChar);\n      return;\n    }\n\n    final Editor editor = context.editor;\n    final Document document = editor.getDocument();\n    PsiDocumentManager.getInstance(project).commitDocument(document);\n\n    final int caretOffset = editor.getCaretModel().getOffset();\n    final RangeMarker caretMarker = document.createRangeMarker(caretOffset, caretOffset);\n\n    final XmlExtension.Runner<String, IncorrectOperationException> runAfter =\n      new XmlExtension.Runner<String, IncorrectOperationException>() {\n\n        public void run(final String namespacePrefix) {\n\n          PsiDocumentManager.getInstance(project).commitDocument(document);\n          final PsiElement element = file.findElementAt(context.getStartOffset());\n          if (element != null) {\n            qualifyWithPrefix(namespacePrefix, element, document);\n            PsiDocumentManager.getInstance(project).commitDocument(document);\n          }\n          final int offset = context.getStartOffset();\n          editor.getCaretModel().moveToOffset(caretMarker.getStartOffset());\n          PsiDocumentManager.getInstance(project).doPostponedOperationsAndUnblockDocument(document);\n          doDefault(context, offset, data, item, signatureSelected, completionChar);\n        }\n      };\n\n    try {\n      final String prefixByNamespace = getPrefixByNamespace(file);\n      if (myNamespacePrefix != null || StringUtil.isEmpty(prefixByNamespace)) {\n        final String nsPrefix = myNamespacePrefix == null ? suggestPrefix(file) : myNamespacePrefix;\n        XmlExtension.getExtension(file).insertNamespaceDeclaration(file, editor, Collections.singleton(myNamespace), nsPrefix, runAfter);\n      } else {\n        runAfter.run(prefixByNamespace);    // qualify && complete\n      }\n    }\n    catch (IncorrectOperationException e) {\n      LOG.error(e);\n    }\n  }","commit_id":"518e71389f308d7a3a517bfd703422d839b257dd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Returns possible tag names for given context JSP file.\n   * @param context context JSP file.\n   * @return set of tag names\n   */\n  @NotNull\n  public abstract Set<String> getAvailableTagNames(@NotNull final JspFile context);","id":52460,"modified_method":"/**\n   * Returns possible tag names for given context JSP file.\n   * @param context context JSP file.\n   * @return set of tag names\n   */\n  @NotNull\n  public abstract MultiMap<String,String> getAvailableTagNames(@NotNull final JspFile context);","commit_id":"518e71389f308d7a3a517bfd703422d839b257dd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public abstract Set<String> getAvailableFunctions(@NotNull final JspFile context);","id":52461,"modified_method":"@NotNull\n  public abstract List<Pair<String,String>> getAvailableFunctions(@NotNull final JspFile context);","commit_id":"518e71389f308d7a3a517bfd703422d839b257dd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Object[] getVariants(){\n    final List<XmlElementDescriptor> variants = new ArrayList<XmlElementDescriptor>();\n    final PsiElement element = getElement();\n    if (element instanceof JspDirective) return EMPTY_ARRAY;\n\n    if(!myStartTagFlag){\n      XmlTag fromJspTree = null;\n      final PsiFile containingFile = element.getContainingFile();\n      if(containingFile.getViewProvider().getBaseLanguage() == StdLanguages.JSP){\n        final JspFile jspFile = PsiUtil.getJspFile(containingFile);\n        final int startOffset = element.getTextRange().getStartOffset() + getRangeInElement().getStartOffset();\n        PsiElement current = jspFile.getDocument().findElementAt(startOffset);\n        if(current != element && (current = PsiTreeUtil.getParentOfType(current, XmlText.class)) != null) {\n          fromJspTree = ((XmlText)current).getParentTag();\n          if (XmlChildRole.EMPTY_TAG_END_FINDER.findChild(fromJspTree.getNode()) != null\n              || XmlChildRole.CLOSING_TAG_NAME_FINDER.findChild(fromJspTree.getNode()) != null\n              || fromJspTree instanceof JspXmlRootTag)\n            fromJspTree = null;\n          while ((current = current.getPrevSibling()) != null) {\n            if (current instanceof XmlTag) {\n              final XmlTag xmlTag = (XmlTag)current;\n\n              if (XmlChildRole.EMPTY_TAG_END_FINDER.findChild(xmlTag.getNode()) == null\n                  && XmlChildRole.CLOSING_TAG_NAME_FINDER.findChild(xmlTag.getNode()) == null) {\n                fromJspTree = xmlTag;\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      final boolean jspTreeSuggestionIsNotValid = fromJspTree == null || fromJspTree.getName().length() == 0;\n\n      if (element instanceof XmlTag) {\n        final XmlTag tag = (XmlTag)element;\n\n        if(jspTreeSuggestionIsNotValid) return new Object[]{tag.getName()};\n        return new Object[]{tag.getName(), fromJspTree.getName()};\n      } else {\n        return jspTreeSuggestionIsNotValid ? EMPTY_ARRAY : new Object[] { fromJspTree.getName() };\n      }\n    }\n    return getTagNameVariants((XmlTag)element, variants);\n  }","id":52462,"modified_method":"public Object[] getVariants(){\n    final PsiElement element = getElement();\n    if (element instanceof JspDirective) return EMPTY_ARRAY;\n\n    if(!myStartTagFlag){\n      XmlTag fromJspTree = null;\n      final PsiFile containingFile = element.getContainingFile();\n      if(containingFile.getViewProvider().getBaseLanguage() == StdLanguages.JSP){\n        final JspFile jspFile = PsiUtil.getJspFile(containingFile);\n        final int startOffset = element.getTextRange().getStartOffset() + getRangeInElement().getStartOffset();\n        PsiElement current = jspFile.getDocument().findElementAt(startOffset);\n        if(current != element && (current = PsiTreeUtil.getParentOfType(current, XmlText.class)) != null) {\n          fromJspTree = ((XmlText)current).getParentTag();\n          if (XmlChildRole.EMPTY_TAG_END_FINDER.findChild(fromJspTree.getNode()) != null\n              || XmlChildRole.CLOSING_TAG_NAME_FINDER.findChild(fromJspTree.getNode()) != null\n              || fromJspTree instanceof JspXmlRootTag)\n            fromJspTree = null;\n          while ((current = current.getPrevSibling()) != null) {\n            if (current instanceof XmlTag) {\n              final XmlTag xmlTag = (XmlTag)current;\n\n              if (XmlChildRole.EMPTY_TAG_END_FINDER.findChild(xmlTag.getNode()) == null\n                  && XmlChildRole.CLOSING_TAG_NAME_FINDER.findChild(xmlTag.getNode()) == null) {\n                fromJspTree = xmlTag;\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      final boolean jspTreeSuggestionIsNotValid = fromJspTree == null || fromJspTree.getName().length() == 0;\n\n      if (element instanceof XmlTag) {\n        final XmlTag tag = (XmlTag)element;\n\n        if(jspTreeSuggestionIsNotValid) return new Object[]{tag.getName()};\n        return new Object[]{tag.getName(), fromJspTree.getName()};\n      } else {\n        return jspTreeSuggestionIsNotValid ? EMPTY_ARRAY : new Object[] { fromJspTree.getName() };\n      }\n    }\n    return getTagNameVariants((XmlTag)element);\n  }","commit_id":"518e71389f308d7a3a517bfd703422d839b257dd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static String[] getTagNameVariants(final XmlTag element,\n                                            final List<XmlElementDescriptor> variants,\n                                            final Collection<String> namespaces) {\n    XmlElementDescriptor elementDescriptor = null;\n    String elementNamespace = null;\n\n    final Map<String, XmlElementDescriptor> descriptorsMap = new HashMap<String, XmlElementDescriptor>();\n    PsiElement context = element.getParent();\n    PsiElement curElement = element.getParent();\n\n    {\n      while(curElement instanceof XmlTag){\n        final XmlTag declarationTag = (XmlTag)curElement;\n        final String namespace = declarationTag.getNamespace();\n\n        if(!descriptorsMap.containsKey(namespace)) {\n          final XmlElementDescriptor descriptor = declarationTag.getDescriptor();\n\n          if(descriptor != null) {\n            descriptorsMap.put(namespace, descriptor);\n            if(elementDescriptor == null) {\n              elementDescriptor = descriptor;\n              elementNamespace = namespace;\n            }\n          }\n        }\n        curElement = curElement.getContext();\n      }\n    }\n    final Iterator<String> nsIterator = namespaces.iterator();\n\n    final Set<XmlNSDescriptor> visited = new HashSet<XmlNSDescriptor>();\n    while (nsIterator.hasNext()) {\n      final String namespace = nsIterator.next();\n      processVariantsInNamespace(namespace, element, variants, elementDescriptor, elementNamespace, descriptorsMap, visited,\n                                 context instanceof XmlTag ? (XmlTag)context : element);\n    }\n\n    final Iterator<XmlElementDescriptor> iterator = variants.iterator();\n    String[] ret = new String[variants.size()];\n    int index = 0;\n    while(iterator.hasNext()){\n      final XmlElementDescriptor descriptor = iterator.next();\n      ret[index++] = descriptor.getName(element);\n    }\n    return ret;\n  }","id":52463,"modified_method":"public static String[] getTagNameVariants(final XmlTag element,\n                                            final Collection<String> namespaces,\n                                            @Nullable List<String> nsInfo) {\n\n    XmlElementDescriptor elementDescriptor = null;\n    String elementNamespace = null;\n\n    final Map<String, XmlElementDescriptor> descriptorsMap = new HashMap<String, XmlElementDescriptor>();\n    PsiElement context = element.getParent();\n    PsiElement curElement = element.getParent();\n\n    {\n      while(curElement instanceof XmlTag){\n        final XmlTag declarationTag = (XmlTag)curElement;\n        final String namespace = declarationTag.getNamespace();\n\n        if(!descriptorsMap.containsKey(namespace)) {\n          final XmlElementDescriptor descriptor = declarationTag.getDescriptor();\n\n          if(descriptor != null) {\n            descriptorsMap.put(namespace, descriptor);\n            if(elementDescriptor == null) {\n              elementDescriptor = descriptor;\n              elementNamespace = namespace;\n            }\n          }\n        }\n        curElement = curElement.getContext();\n      }\n    }\n    final Iterator<String> nsIterator = namespaces.iterator();\n\n    final Set<XmlNSDescriptor> visited = new HashSet<XmlNSDescriptor>();\n\n    final ArrayList<XmlElementDescriptor> variants = new ArrayList<XmlElementDescriptor>();\n    while (nsIterator.hasNext()) {\n      final String namespace = nsIterator.next();\n      final int initialSize = variants.size();\n      processVariantsInNamespace(namespace, element, variants, elementDescriptor, elementNamespace, descriptorsMap, visited,\n                                 context instanceof XmlTag ? (XmlTag)context : element);\n      if (nsInfo != null) {\n        for (int i = initialSize; i < variants.size(); i++) {\n          nsInfo.add(namespace);\n        }\n      }\n    }\n\n    final Iterator<XmlElementDescriptor> iterator = variants.iterator();\n    String[] ret = new String[variants.size()];\n    int index = 0;\n    while(iterator.hasNext()){\n      final XmlElementDescriptor descriptor = iterator.next();\n      ret[index++] = descriptor.getName(element);\n    }\n    return ret;\n  }","commit_id":"518e71389f308d7a3a517bfd703422d839b257dd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static String[] getTagNameVariants(final XmlTag element, final List<XmlElementDescriptor> variants) {\n    final ArrayList<String> namespaces = new ArrayList<String>(Arrays.asList(element.knownNamespaces()));\n    namespaces.add(XmlUtil.EMPTY_URI); // empty namespace\n    return getTagNameVariants(element, variants, namespaces);\n  }","id":52464,"modified_method":"public static String[] getTagNameVariants(final XmlTag element) {\n    final ArrayList<String> namespaces = new ArrayList<String>(Arrays.asList(element.knownNamespaces()));\n    namespaces.add(XmlUtil.EMPTY_URI); // empty namespace\n    return getTagNameVariants(element, namespaces, null);\n  }","commit_id":"518e71389f308d7a3a517bfd703422d839b257dd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void registerCompletionProviders(final CompletionRegistrar registrar) {\n    registrar.extend(CompletionType.CLASS_NAME, PlatformPatterns.psiElement(XmlTokenType.XML_NAME)).\n      dependingOn(JavaCompletionContributor.JAVA_LEGACY).\n      withProvider(new CompletionProvider<LookupElement, CompletionParameters>() {\n      public void addCompletions(@NotNull final CompletionParameters parameters, final ProcessingContext matchingContext, @NotNull final CompletionResultSet<LookupElement> result) {\n        result.clearResults();\n        CompletionContext context = parameters.getPosition().getUserData(CompletionContext.COMPLETION_CONTEXT_KEY);\n        final PsiElement element = parameters.getPosition();\n        final XmlTag parent = (XmlTag)element.getParent();\n        final String namespace = parent.getNamespace();\n        final XmlElementDescriptor parentDescriptor = parent.getDescriptor();\n        final String prefix = result.getPrefixMatcher().getPrefix();\n        final int pos = prefix.indexOf(':');\n        final String namespacePrefix = pos > 0 ? prefix.substring(0, pos) : null;\n\n        final PsiReference reference = parent.getReference();\n        if (reference != null && namespace.length() > 0 && parentDescriptor != null && !(parentDescriptor instanceof AnyXmlElementDescriptor)) {\n          final Set<LookupItem> set = new HashSet<LookupItem>();\n          new XmlCompletionData().completeReference(reference, set, element, result.getPrefixMatcher(), context.file, context.getStartOffset());\n          result.addAllElements(set);\n        } else {\n\n          result.setPrefixMatcher(pos >= 0 ? prefix.substring(pos + 1) : prefix);\n\n          final XmlFile file = (XmlFile)parameters.getOriginalFile();\n          final XmlExtension extension = XmlExtension.getExtension(file);\n          final Set<String> names = extension.getAvailableTagNames(file, parent);\n          if (names.isEmpty()) {\n            return;\n          }\n          for (String name : names) {\n            if (result.getPrefixMatcher().prefixMatches(name)) {\n              final LookupItem item = new LookupItem<String>(name, name);\n              final XmlTagInsertHandler insertHandler = new ExtendedTagInsertHandler(name, namespacePrefix);\n              item.setInsertHandler(insertHandler);\n              final Set<String> namespaces = extension.getNamespacesByTagName(name, file);\n              if (namespaces.size() > 0) {\n                item.setAttribute(LookupItem.TAIL_TEXT_ATTR, \" (\" + namespaces.iterator().next() + \")\");\n                item.setAttribute(LookupItem.TAIL_TEXT_SMALL_ATTR, \"\");\n              }\n              result.addElement(item);\n            }\n          }\n        }\n      }\n    });\n  }","id":52465,"modified_method":"public void registerCompletionProviders(final CompletionRegistrar registrar) {\n    registrar.extend(CompletionType.CLASS_NAME, PlatformPatterns.psiElement(XmlTokenType.XML_NAME)).\n      dependingOn(JavaCompletionContributor.JAVA_LEGACY).\n      withProvider(new CompletionProvider<LookupElement, CompletionParameters>() {\n      public void addCompletions(@NotNull final CompletionParameters parameters, final ProcessingContext matchingContext, @NotNull final CompletionResultSet<LookupElement> result) {\n        result.clearResults();\n        CompletionContext context = parameters.getPosition().getUserData(CompletionContext.COMPLETION_CONTEXT_KEY);\n        final PsiElement element = parameters.getPosition();\n        final XmlTag parent = (XmlTag)element.getParent();\n        final String namespace = parent.getNamespace();\n        final XmlElementDescriptor parentDescriptor = parent.getDescriptor();\n        final String prefix = result.getPrefixMatcher().getPrefix();\n        final int pos = prefix.indexOf(':');\n        final String namespacePrefix = pos > 0 ? prefix.substring(0, pos) : null;\n\n        final PsiReference reference = parent.getReference();\n        if (reference != null && namespace.length() > 0 && parentDescriptor != null && !(parentDescriptor instanceof AnyXmlElementDescriptor)) {\n          final Set<LookupItem> set = new HashSet<LookupItem>();\n          new XmlCompletionData().completeReference(reference, set, element, result.getPrefixMatcher(), context.file, context.getStartOffset());\n          result.addAllElements(set);\n        } else {\n\n          result.setPrefixMatcher(pos >= 0 ? prefix.substring(pos + 1) : prefix);\n\n          final XmlFile file = (XmlFile)parameters.getOriginalFile();\n          final XmlExtension extension = XmlExtension.getExtension(file);\n          final List<Pair<String,String>> names = extension.getAvailableTagNames(file, parent);\n          if (names.isEmpty()) {\n            return;\n          }\n          for (Pair<String, String> pair : names) {\n            final String name = pair.getFirst();\n            if (result.getPrefixMatcher().prefixMatches(name)) {\n              final String ns = pair.getSecond();\n              final LookupItem item = new LookupItem<String>(name, name);\n              final XmlTagInsertHandler insertHandler = new ExtendedTagInsertHandler(name, ns, namespacePrefix);\n              item.setInsertHandler(insertHandler);\n              if (!StringUtil.isEmpty(ns)) {\n                item.setAttribute(LookupItem.TAIL_TEXT_ATTR, \" (\" + ns + \")\");\n                item.setAttribute(LookupItem.TAIL_TEXT_SMALL_ATTR, \"\");\n              }\n              result.addElement(item);\n            }\n          }\n        }\n      }\n    });\n  }","commit_id":"518e71389f308d7a3a517bfd703422d839b257dd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public abstract Set<String> getAvailableTagNames(@NotNull final XmlFile file, @NotNull final XmlTag context);","id":52466,"modified_method":"@NotNull\n  public abstract List<Pair<String,String>> getAvailableTagNames(@NotNull final XmlFile file, @NotNull final XmlTag context);","commit_id":"518e71389f308d7a3a517bfd703422d839b257dd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  protected String suggestPrefix(XmlFile file) {\n    if (myNamespace == null) {\n      return null;\n    }\n    final XmlSchemaProvider provider = XmlSchemaProvider.getAvailableProvider(file);\n    return provider == null ? null : provider.getDefaultPrefix(myNamespace, file);\n  }","id":52467,"modified_method":"@Nullable\n  protected String suggestPrefix(XmlFile file) {\n    if (myNamespace == null) {\n      return null;\n    }\n    for (XmlSchemaProvider provider : XmlSchemaProvider.getAvailableProviders(file)) {\n      String prefix = provider.getDefaultPrefix(myNamespace, file);\n      if (prefix != null) {\n        return prefix;\n      }\n    }\n    return null; \n  }","commit_id":"d752170f8cb02f7b7627ed5b1d5b22938efd0f76","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Object[] getVariants() {\n    final XmlFile file = (XmlFile)myElement.getContainingFile();\n    final XmlSchemaProvider provider = XmlSchemaProvider.getAvailableProvider(file);\n    if (provider != null) {\n      final Set<String> strings = provider.getAvailableNamespaces(file, null);\n      return ArrayUtil.toObjectArray(strings);\n    }\n    String[] resourceUrls = ExternalResourceManager.getInstance().getResourceUrls(null, true);\n    final XmlDocument document = file.getDocument();\n    assert document != null;\n    XmlTag rootTag = document.getRootTag();\n    final ArrayList<String> additionalNs = new ArrayList<String>();\n    if (rootTag != null) processWsdlSchemas(rootTag, new Processor<XmlTag>() {\n      public boolean process(final XmlTag xmlTag) {\n        final String s = xmlTag.getAttributeValue(TARGET_NAMESPACE_ATTR_NAME);\n        if (s != null) { additionalNs.add(s); }\n        return true;\n      }\n    });\n    resourceUrls = ArrayUtil.mergeArrays(resourceUrls, ArrayUtil.toStringArray(additionalNs), String.class);\n    return resourceUrls;\n  }","id":52468,"modified_method":"@NotNull\n  public Object[] getVariants() {\n    final XmlFile file = (XmlFile)myElement.getContainingFile();\n    Set<String> list = new HashSet<String>();\n    for (XmlSchemaProvider provider : Extensions.getExtensions(XmlSchemaProvider.EP_NAME)) {\n      if (provider.isAvailable(file)) {\n        list.addAll(provider.getAvailableNamespaces(file, null));\n      }\n    }\n    if (!list.isEmpty()) {\n      return ArrayUtil.toObjectArray(list);\n    }\n    String[] resourceUrls = ExternalResourceManager.getInstance().getResourceUrls(null, true);\n    final XmlDocument document = file.getDocument();\n    assert document != null;\n    XmlTag rootTag = document.getRootTag();\n    final ArrayList<String> additionalNs = new ArrayList<String>();\n    if (rootTag != null) processWsdlSchemas(rootTag, new Processor<XmlTag>() {\n      public boolean process(final XmlTag xmlTag) {\n        final String s = xmlTag.getAttributeValue(TARGET_NAMESPACE_ATTR_NAME);\n        if (s != null) { additionalNs.add(s); }\n        return true;\n      }\n    });\n    resourceUrls = ArrayUtil.mergeArrays(resourceUrls, ArrayUtil.toStringArray(additionalNs), String.class);\n    return resourceUrls;\n  }","commit_id":"d752170f8cb02f7b7627ed5b1d5b22938efd0f76","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public PsiReference[] getReferences() {\n    final XmlElement dtdUrlElement = getDtdUrlElement();\n    final PsiElement docTypePublic = findChildByRoleAsPsiElement(XmlChildRole.XML_DOCTYPE_PUBLIC);\n    PsiReference uriRefs[] = null;\n\n    if (dtdUrlElement != null) {\n      uriRefs = new PsiReference[1];\n      uriRefs[0] = new URLReference(XmlDoctypeImpl.this) {\n        public Object[] getVariants() {\n          return (docTypePublic != null)?\n                 super.getVariants(): PsiReference.EMPTY_ARRAY;\n        }\n        public String getCanonicalText() {\n          return extractValue(dtdUrlElement);\n        }\n        public TextRange getRangeInElement() {\n          return TextRange.from(dtdUrlElement.getTextRange().getStartOffset() - getTextRange().getStartOffset() + 1, Math.max(dtdUrlElement.getTextRange().getLength() - 2, 0));\n        }\n      };\n    }\n\n    final PsiReference[] referencesFromProviders = ReferenceProvidersRegistry.getReferencesFromProviders(this,XmlDoctype.class);\n\n    return ArrayUtil.mergeArrays(\n      uriRefs != null? uriRefs: PsiReference.EMPTY_ARRAY,\n      referencesFromProviders,\n      PsiReference.class\n    );\n  }","id":52469,"modified_method":"@NotNull\n  public PsiReference[] getReferences() {\n    final XmlElement dtdUrlElement = getDtdUrlElement();\n    final PsiElement docTypePublic = findChildByRoleAsPsiElement(XmlChildRole.XML_DOCTYPE_PUBLIC);\n    PsiReference uriRefs[] = null;\n\n    if (dtdUrlElement != null) {\n      uriRefs = new PsiReference[1];\n      uriRefs[0] = new URLReference(XmlDoctypeImpl.this) {\n        @NotNull\n        public Object[] getVariants() {\n          return (docTypePublic != null)?\n                 super.getVariants(): EMPTY_ARRAY;\n        }\n        public String getCanonicalText() {\n          return extractValue(dtdUrlElement);\n        }\n        public TextRange getRangeInElement() {\n          return TextRange.from(dtdUrlElement.getTextRange().getStartOffset() - getTextRange().getStartOffset() + 1, Math.max(dtdUrlElement.getTextRange().getLength() - 2, 0));\n        }\n      };\n    }\n\n    final PsiReference[] referencesFromProviders = ReferenceProvidersRegistry.getReferencesFromProviders(this,XmlDoctype.class);\n\n    return ArrayUtil.mergeArrays(\n      uriRefs != null? uriRefs: PsiReference.EMPTY_ARRAY,\n      referencesFromProviders,\n      PsiReference.class\n    );\n  }","commit_id":"d752170f8cb02f7b7627ed5b1d5b22938efd0f76","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public static XmlSchemaProvider getAvailableProvider(final @NotNull XmlFile file) {\n    for (XmlSchemaProvider provider: Extensions.getExtensions(EP_NAME)) {\n      if (provider.isAvailable(file)) {\n        return provider;\n      }\n    }\n    return null;    \n  }","id":52470,"modified_method":"/**\n   * @see #getAvailableProviders(com.intellij.psi.xml.XmlFile)\n   */\n  @Deprecated\n  @Nullable\n  public static XmlSchemaProvider getAvailableProvider(final @NotNull XmlFile file) {\n    for (XmlSchemaProvider provider: Extensions.getExtensions(EP_NAME)) {\n      if (provider.isAvailable(file)) {\n        return provider;\n      }\n    }\n    return null;    \n  }","commit_id":"d752170f8cb02f7b7627ed5b1d5b22938efd0f76","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public OsgInternalS3Client(AWSCredentials credentials, boolean https) {\n        ClientConfiguration config = new ClientConfiguration();\n        config.setConnectionTimeout(CONNECTION_TIMEOUT_MS); //very short timeout\n        config.setSocketTimeout(OSG_SOCKET_TIMEOUT_MS);\n        config.setUseReaper(true);\n        config.setMaxConnections(OSG_MAX_CONNECTIONS);\n        Protocol protocol = https ? Protocol.HTTPS : Protocol.HTTP;\n        config.setProtocol(protocol);\n        s3Client = new AmazonS3Client(credentials, config);\n        ops = new S3ClientOptions();\n        s3Client.setS3ClientOptions(ops);\n    }","id":52471,"modified_method":"public OsgInternalS3Client(AWSCredentials credentials, boolean https) {\n        ClientConfiguration config = new ClientConfiguration();\n        config.setConnectionTimeout(CONNECTION_TIMEOUT_MS); //very short timeout\n        config.setSocketTimeout(OSG_SOCKET_TIMEOUT_MS);\n        config.setUseReaper(true);\n        config.setMaxConnections(OSG_MAX_CONNECTIONS);\n        Protocol protocol = https ? Protocol.HTTPS : Protocol.HTTP;\n        config.setProtocol(protocol);\n        s3Client = new AmazonS3Client(credentials, config);\n        ops = new S3ClientOptions();\n        s3Client.setS3ClientOptions(ops);\n        instantiated = new Date();\n    }","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public ListMultipartUploadsResponseType listMultipartUploads(\n            ListMultipartUploadsType request) throws S3Exception {\n        ListMultipartUploadsResponseType reply = request.getReply();\n        User requestUser = getRequestUser(request);\n        AmazonS3Client s3Client = getS3Client(requestUser);\n        String bucketName = request.getBucket();\n        ListMultipartUploadsRequest listMultipartUploadsRequest = new ListMultipartUploadsRequest(bucketName);\n        listMultipartUploadsRequest.setMaxUploads(request.getMaxUploads());\n        listMultipartUploadsRequest.setKeyMarker(request.getKeyMarker());\n        listMultipartUploadsRequest.setDelimiter(request.getDelimiter());\n        listMultipartUploadsRequest.setPrefix(request.getPrefix());\n        listMultipartUploadsRequest.setUploadIdMarker(request.getUploadIdMarker());\n        try {\n            MultipartUploadListing listing = s3Client.listMultipartUploads(listMultipartUploadsRequest);\n            reply.setBucket(listing.getBucketName());\n            reply.setKeyMarker(listing.getKeyMarker());\n            reply.setUploadIdMarker(listing.getUploadIdMarker());\n            reply.setNextKeyMarker(listing.getNextKeyMarker());\n            reply.setNextUploadIdMarker(listing.getNextUploadIdMarker());\n            reply.setMaxUploads(listing.getMaxUploads());\n            reply.setIsTruncated(listing.isTruncated());\n            reply.setPrefix(listing.getPrefix());\n            reply.setDelimiter(listing.getDelimiter());\n\n            List<String> commonPrefixes = listing.getCommonPrefixes();\n            List<MultipartUpload> multipartUploads = listing.getMultipartUploads();\n\n            List<com.eucalyptus.storage.msgs.s3.Upload> uploads = reply.getUploads();\n            List<CommonPrefixesEntry> prefixes = reply.getCommonPrefixes();\n\n            for(MultipartUpload multipartUpload : multipartUploads) {\n                uploads.add(new com.eucalyptus.storage.msgs.s3.Upload(multipartUpload.getKey(),\n                        multipartUpload.getUploadId(),\n                        new Initiator(multipartUpload.getInitiator().getId(),\n                                multipartUpload.getInitiator().getDisplayName()),\n                        new CanonicalUser(multipartUpload.getOwner().getId(),\n                                multipartUpload.getOwner().getDisplayName()),\n                        multipartUpload.getStorageClass(),\n                        multipartUpload.getInitiated()\n                ));\n            }\n            for(String commonPrefix : commonPrefixes) {\n                prefixes.add(new CommonPrefixesEntry(commonPrefix));\n            }\n            return reply;\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n    }","id":52472,"modified_method":"@Override\n    public ListMultipartUploadsResponseType listMultipartUploads(\n            ListMultipartUploadsType request) throws S3Exception {\n        ListMultipartUploadsResponseType reply = request.getReply();\n        User requestUser = getRequestUser(request);\n        OsgInternalS3Client internalS3Client = null;\n\n        String bucketName = request.getBucket();\n        ListMultipartUploadsRequest listMultipartUploadsRequest = new ListMultipartUploadsRequest(bucketName);\n        listMultipartUploadsRequest.setMaxUploads(request.getMaxUploads());\n        listMultipartUploadsRequest.setKeyMarker(request.getKeyMarker());\n        listMultipartUploadsRequest.setDelimiter(request.getDelimiter());\n        listMultipartUploadsRequest.setPrefix(request.getPrefix());\n        listMultipartUploadsRequest.setUploadIdMarker(request.getUploadIdMarker());\n        try {\n            internalS3Client = getS3Client(requestUser);\n            AmazonS3Client s3Client = internalS3Client.getS3Client();\n\n            MultipartUploadListing listing = s3Client.listMultipartUploads(listMultipartUploadsRequest);\n            reply.setBucket(listing.getBucketName());\n            reply.setKeyMarker(listing.getKeyMarker());\n            reply.setUploadIdMarker(listing.getUploadIdMarker());\n            reply.setNextKeyMarker(listing.getNextKeyMarker());\n            reply.setNextUploadIdMarker(listing.getNextUploadIdMarker());\n            reply.setMaxUploads(listing.getMaxUploads());\n            reply.setIsTruncated(listing.isTruncated());\n            reply.setPrefix(listing.getPrefix());\n            reply.setDelimiter(listing.getDelimiter());\n\n            List<String> commonPrefixes = listing.getCommonPrefixes();\n            List<MultipartUpload> multipartUploads = listing.getMultipartUploads();\n\n            List<com.eucalyptus.storage.msgs.s3.Upload> uploads = reply.getUploads();\n            List<CommonPrefixesEntry> prefixes = reply.getCommonPrefixes();\n\n            for(MultipartUpload multipartUpload : multipartUploads) {\n                uploads.add(new com.eucalyptus.storage.msgs.s3.Upload(multipartUpload.getKey(),\n                        multipartUpload.getUploadId(),\n                        new Initiator(multipartUpload.getInitiator().getId(),\n                                multipartUpload.getInitiator().getDisplayName()),\n                        new CanonicalUser(multipartUpload.getOwner().getId(),\n                                multipartUpload.getOwner().getDisplayName()),\n                        multipartUpload.getStorageClass(),\n                        multipartUpload.getInitiated()\n                ));\n            }\n            for(String commonPrefix : commonPrefixes) {\n                prefixes.add(new CommonPrefixesEntry(commonPrefix));\n            }\n            return reply;\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n        finally {\n            if (internalS3Client != null && requestUser != null) {\n                returnS3Client(requestUser, internalS3Client);\n            }\n        }\n    }","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public InitiateMultipartUploadResponseType initiateMultipartUpload(\n            InitiateMultipartUploadType request)\n            throws S3Exception {\n        InitiateMultipartUploadResponseType reply = request.getReply();\n        User requestUser = getRequestUser(request);\n        AmazonS3Client s3Client = getS3Client(requestUser);\n        String bucketName = request.getBucket();\n        String key = request.getKey();\n        InitiateMultipartUploadRequest initiateMultipartUploadRequest = new InitiateMultipartUploadRequest(bucketName, key);\n        ObjectMetadata metadata = new ObjectMetadata();\n        for(MetaDataEntry meta : request.getMetaData() ) {\n            metadata.addUserMetadata(meta.getName(), meta.getValue());\n        }\n\n        initiateMultipartUploadRequest.setObjectMetadata(metadata);\n        try {\n            InitiateMultipartUploadResult result = s3Client.initiateMultipartUpload(initiateMultipartUploadRequest);\n            reply.setUploadId(result.getUploadId());\n            reply.setBucket(bucketName);\n            reply.setKey(key);\n            return reply;\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n    }","id":52473,"modified_method":"@Override\n    public InitiateMultipartUploadResponseType initiateMultipartUpload(\n            InitiateMultipartUploadType request)\n            throws S3Exception {\n        InitiateMultipartUploadResponseType reply = request.getReply();\n        User requestUser = getRequestUser(request);\n        OsgInternalS3Client internalS3Client = null;\n\n        String bucketName = request.getBucket();\n        String key = request.getKey();\n        InitiateMultipartUploadRequest initiateMultipartUploadRequest = new InitiateMultipartUploadRequest(bucketName, key);\n        ObjectMetadata metadata = new ObjectMetadata();\n        for(MetaDataEntry meta : request.getMetaData() ) {\n            metadata.addUserMetadata(meta.getName(), meta.getValue());\n        }\n\n        initiateMultipartUploadRequest.setObjectMetadata(metadata);\n        try {\n            internalS3Client = getS3Client(requestUser);\n            AmazonS3Client s3Client = internalS3Client.getS3Client();\n            InitiateMultipartUploadResult result = s3Client.initiateMultipartUpload(initiateMultipartUploadRequest);\n            reply.setUploadId(result.getUploadId());\n            reply.setBucket(bucketName);\n            reply.setKey(key);\n            return reply;\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n        finally {\n            if (internalS3Client != null && requestUser != null) {\n                returnS3Client(requestUser, internalS3Client);\n            }\n        }\n    }","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n\tpublic DeleteBucketResponseType deleteBucket(DeleteBucketType request) throws S3Exception {\n\t\tDeleteBucketResponseType reply = request.getReply();\n\t\tUser requestUser = getRequestUser(request);\n\t\t\n\t\t// call the storage manager to save the bucket to disk\n\t\ttry {\n\t\t\tAmazonS3Client s3Client = getS3Client(requestUser);\n\t\t\ts3Client.deleteBucket(request.getBucket());\n\t\t} catch(AmazonServiceException ex) {\n            LOG.debug(\"Got service error from backend: \" + ex.getMessage(), ex);\n            throw S3ExceptionMapper.fromAWSJavaSDK(ex);\n        }\n\n\t\treturn reply;\t\t\n\t}","id":52474,"modified_method":"@Override\n\tpublic DeleteBucketResponseType deleteBucket(DeleteBucketType request) throws S3Exception {\n\t\tDeleteBucketResponseType reply = request.getReply();\n\t\tUser requestUser = getRequestUser(request);\n        OsgInternalS3Client internalS3Client = null ;\n\t\t// call the storage manager to save the bucket to disk\n\t\ttry {\n            internalS3Client = getS3Client(requestUser);\n            AmazonS3Client s3Client = internalS3Client.getS3Client();\n\t\t\ts3Client.deleteBucket(request.getBucket());\n\t\t} catch(AmazonServiceException ex) {\n            LOG.debug(\"Got service error from backend: \" + ex.getMessage(), ex);\n            throw S3ExceptionMapper.fromAWSJavaSDK(ex);\n        }\n        finally {\n            if (internalS3Client != null && requestUser != null) {\n                returnS3Client(requestUser, internalS3Client);\n            }\n        }\n\t\treturn reply;\t\t\n\t}","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public AbortMultipartUploadResponseType abortMultipartUpload(\n            AbortMultipartUploadType request) throws S3Exception {\n        AbortMultipartUploadResponseType reply = request.getReply();\n        User requestUser = getRequestUser(request);\n        AmazonS3Client s3Client = getS3Client(requestUser);\n        String bucketName = request.getBucket();\n        String key = request.getKey();\n        String uploadId = request.getUploadId();\n        AbortMultipartUploadRequest abortMultipartUploadRequest = new AbortMultipartUploadRequest(bucketName, key, uploadId);\n        try {\n            s3Client.abortMultipartUpload(abortMultipartUploadRequest);\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n        return reply;\n    }","id":52475,"modified_method":"@Override\n    public AbortMultipartUploadResponseType abortMultipartUpload(\n            AbortMultipartUploadType request) throws S3Exception {\n        AbortMultipartUploadResponseType reply = request.getReply();\n        User requestUser = getRequestUser(request);\n        OsgInternalS3Client internalS3Client = null;\n\n        String bucketName = request.getBucket();\n        String key = request.getKey();\n        String uploadId = request.getUploadId();\n        AbortMultipartUploadRequest abortMultipartUploadRequest = new AbortMultipartUploadRequest(bucketName, key, uploadId);\n        try {\n            internalS3Client = getS3Client(requestUser);\n            AmazonS3Client s3Client = internalS3Client.getS3Client();\n\n            s3Client.abortMultipartUpload(abortMultipartUploadRequest);\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n        finally {\n            if (internalS3Client != null && requestUser != null) {\n                returnS3Client(requestUser, internalS3Client);\n            }\n        }\n        return reply;\n    }","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n\tpublic GetBucketAccessControlPolicyResponseType getBucketAccessControlPolicy(\n\t\t\tGetBucketAccessControlPolicyType request)\n\t\t\t\t\tthrows S3Exception {\n\t\tGetBucketAccessControlPolicyResponseType reply = request.getReply();\n\t\tUser requestUser = getRequestUser(request);\n\t\t\n\t\ttry {\n\t\t\tAmazonS3Client s3Client = getS3Client(requestUser);\n\t\t\tcom.amazonaws.services.s3.model.AccessControlList acl = s3Client.getBucketAcl(request.getBucket());\n\t\t\treply.setAccessControlPolicy(sdkAclToEucaAcl(acl));\t\t\t\n\t\t} catch(AmazonServiceException ex) {\n\t\t\tLOG.debug(\"Got service error from backend: \" + ex.getMessage(), ex);\n            throw S3ExceptionMapper.fromAWSJavaSDK(ex);\n\t\t}\n\n\t\treturn reply;\n\t}","id":52476,"modified_method":"@Override\n\tpublic GetBucketAccessControlPolicyResponseType getBucketAccessControlPolicy(\n\t\t\tGetBucketAccessControlPolicyType request)\n\t\t\t\t\tthrows S3Exception {\n\t\tGetBucketAccessControlPolicyResponseType reply = request.getReply();\n\t\tUser requestUser = getRequestUser(request);\n        OsgInternalS3Client internalS3Client = null ;\n\t\ttry {\n            internalS3Client = getS3Client(requestUser);\n            AmazonS3Client s3Client = internalS3Client.getS3Client();\n\t\t\tcom.amazonaws.services.s3.model.AccessControlList acl = s3Client.getBucketAcl(request.getBucket());\n\t\t\treply.setAccessControlPolicy(sdkAclToEucaAcl(acl));\t\t\t\n\t\t} catch(AmazonServiceException ex) {\n\t\t\tLOG.debug(\"Got service error from backend: \" + ex.getMessage(), ex);\n            throw S3ExceptionMapper.fromAWSJavaSDK(ex);\n\t\t}\n        finally {\n            if (internalS3Client != null && requestUser != null) {\n                returnS3Client(requestUser, internalS3Client);\n            }\n        }\n\t\treturn reply;\n\t}","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n\tpublic PutObjectResponseType putObject(PutObjectType request, InputStream inputData) throws S3Exception {\n\t\ttry {\n\t\t\tUser requestUser = getRequestUser(request);\n\t\t\tAmazonS3Client s3Client = getS3Client(requestUser);\n\t\t\tPutObjectResult result;\n            ObjectMetadata metadata = getS3ObjectMetadata(request);\n            //Set the acl to private.\n            PutObjectRequest putRequest = new PutObjectRequest(request.getBucket(),\n                    request.getKey(),\n                    inputData,\n                    metadata).withCannedAcl(CannedAccessControlList.Private);\n            result = s3Client.putObject(putRequest);\n\n\t\t\tPutObjectResponseType reply = request.getReply();\n\t\t\tif(result == null) {\n\t\t\t\tthrow new InternalErrorException(\"Null result from backend\");\n\t\t\t} else {\n\t\t\t\treply.setEtag(result.getETag());\n\t\t\t\treply.setVersionId(result.getVersionId());\n\t\t\t\treply.setLastModified(new Date());\n\t\t\t}\n\t\t\treturn reply;\n\t\t} catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n\t\t}\n\t}","id":52477,"modified_method":"@Override\n\tpublic PutObjectResponseType putObject(PutObjectType request, InputStream inputData) throws S3Exception {\n        User requestUser = getRequestUser(request);\n        OsgInternalS3Client internalS3Client = null ;\n        try {\n            internalS3Client = getS3Client(requestUser);\n            AmazonS3Client s3Client = internalS3Client.getS3Client();\n\t\t\tPutObjectResult result;\n            ObjectMetadata metadata = getS3ObjectMetadata(request);\n            //Set the acl to private.\n            PutObjectRequest putRequest = new PutObjectRequest(request.getBucket(),\n                    request.getKey(),\n                    inputData,\n                    metadata).withCannedAcl(CannedAccessControlList.Private);\n            result = s3Client.putObject(putRequest);\n\n\t\t\tPutObjectResponseType reply = request.getReply();\n\t\t\tif(result == null) {\n\t\t\t\tthrow new InternalErrorException(\"Null result from backend\");\n\t\t\t} else {\n\t\t\t\treply.setEtag(result.getETag());\n\t\t\t\treply.setVersionId(result.getVersionId());\n\t\t\t\treply.setLastModified(new Date());\n\t\t\t}\n\t\t\treturn reply;\n\t\t} catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n\t\t}\n        finally {\n            if (internalS3Client != null && requestUser != null) {\n                returnS3Client(requestUser, internalS3Client);\n            }\n        }\n\t}","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public SetBucketVersioningStatusResponseType setBucketVersioningStatus(\n            SetBucketVersioningStatusType request)\n            throws S3Exception {\n        SetBucketVersioningStatusResponseType reply = request.getReply();\n        User requestUser = getRequestUser(request);\n\n        try {\n            AmazonS3Client s3Client = getS3Client(requestUser);\n            BucketVersioningConfiguration config = new BucketVersioningConfiguration().withStatus(request.getVersioningStatus());\n            SetBucketVersioningConfigurationRequest configRequest = new SetBucketVersioningConfigurationRequest(request.getBucket(), config);\n            s3Client.setBucketVersioningConfiguration(configRequest);\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n\n        return reply;\n    }","id":52478,"modified_method":"@Override\n    public SetBucketVersioningStatusResponseType setBucketVersioningStatus(\n            SetBucketVersioningStatusType request)\n            throws S3Exception {\n        SetBucketVersioningStatusResponseType reply = request.getReply();\n        User requestUser = getRequestUser(request);\n        OsgInternalS3Client internalS3Client = null;\n\n        try {\n            internalS3Client = getS3Client(requestUser);\n            AmazonS3Client s3Client = internalS3Client.getS3Client();\n            BucketVersioningConfiguration config = new BucketVersioningConfiguration().withStatus(request.getVersioningStatus());\n            SetBucketVersioningConfigurationRequest configRequest = new SetBucketVersioningConfigurationRequest(request.getBucket(), config);\n            s3Client.setBucketVersioningConfiguration(configRequest);\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n        finally {\n            if (internalS3Client != null && requestUser != null) {\n                returnS3Client(requestUser, internalS3Client);\n            }\n        }\n\n        return reply;\n    }","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"/**\n\t * Handles a HEAD request to the bucket. Just returns 200ok if bucket exists and user has access. Otherwise\n\t * returns 404 if not found or 403 if no accesss.\n\t * @param request\n\t * @return\n\t * @throws S3Exception\n\t */\n\t@Override\n\tpublic HeadBucketResponseType headBucket(HeadBucketType request) throws S3Exception {\n\t\tHeadBucketResponseType reply = request.getReply();\n\t\tUser requestUser = getRequestUser(request);\n\n\t\t// call the storage manager to save the bucket to disk\n\t\ttry {\n\t\t\tAmazonS3Client s3Client = getS3Client(requestUser);\n\t\t\tcom.amazonaws.services.s3.model.AccessControlList responseList = s3Client.getBucketAcl(request.getBucket());\n\t\t\treply.setBucket(request.getBucket());\n\t\t} catch(AmazonServiceException ex) {\n\t\t\tLOG.debug(\"Got service error from backend: \" + ex.getMessage(), ex);\n            throw S3ExceptionMapper.fromAWSJavaSDK(ex);\n        }\n\n\t\treturn reply;\t\t\n\n\t}","id":52479,"modified_method":"/**\n\t * Handles a HEAD request to the bucket. Just returns 200ok if bucket exists and user has access. Otherwise\n\t * returns 404 if not found or 403 if no accesss.\n\t * @param request\n\t * @return\n\t * @throws S3Exception\n\t */\n\t@Override\n\tpublic HeadBucketResponseType headBucket(HeadBucketType request) throws S3Exception {\n\t\tHeadBucketResponseType reply = request.getReply();\n\t\tUser requestUser = getRequestUser(request);\n        OsgInternalS3Client internalS3Client = null ;\n\t\t// call the storage manager to save the bucket to disk\n\t\ttry {\n            internalS3Client = getS3Client(requestUser);\n            AmazonS3Client s3Client = internalS3Client.getS3Client();\n\t\t\tcom.amazonaws.services.s3.model.AccessControlList responseList = s3Client.getBucketAcl(request.getBucket());\n\t\t\treply.setBucket(request.getBucket());\n\t\t} catch(AmazonServiceException ex) {\n\t\t\tLOG.debug(\"Got service error from backend: \" + ex.getMessage(), ex);\n            throw S3ExceptionMapper.fromAWSJavaSDK(ex);\n        }\n        finally {\n            if (internalS3Client != null && requestUser != null) {\n                returnS3Client(requestUser, internalS3Client);\n            }\n        }\n\t\treturn reply;\t\t\n\n\t}","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n\tpublic ListAllMyBucketsResponseType listAllMyBuckets(ListAllMyBucketsType request) throws S3Exception {\n\t\tListAllMyBucketsResponseType reply = request.getReply();\n\t\ttry {\n            User requestUser = getRequestUser(request);\n\t\t\t//The euca-types\n\t\t\tListAllMyBucketsList myBucketList = new ListAllMyBucketsList();\n\t\t\tmyBucketList.setBuckets(new ArrayList<BucketListEntry>());\n\n\n\t\t\t//The s3 client types\n\t\t\tAmazonS3Client s3Client = this.getS3Client(requestUser);\n\t\t\tListBucketsRequest listRequest = new ListBucketsRequest();\n\n\t\t\t//Map s3 client result to euca response message\n\t\t\tList<Bucket> result = s3Client.listBuckets(listRequest);\n\t\t\tfor(Bucket b : result) {\n\t\t\t\tmyBucketList.getBuckets().add(new BucketListEntry(b.getName(), DateFormatter.dateToHeaderFormattedString(b.getCreationDate())));\n\t\t\t}\n\n\t\t\treply.setBucketList(myBucketList);\n        } catch(AmazonServiceException ex) {\n            LOG.debug(\"Got service error from backend: \" + ex.getMessage(), ex);\n            throw S3ExceptionMapper.fromAWSJavaSDK(ex);\n        }\n\t\treturn reply;\t\t\n\t}","id":52480,"modified_method":"@Override\n\tpublic ListAllMyBucketsResponseType listAllMyBuckets(ListAllMyBucketsType request) throws S3Exception {\n\t\tListAllMyBucketsResponseType reply = request.getReply();\n\t\tOsgInternalS3Client internalS3Client = null ;\n        User requestUser = null;\n        try {\n            requestUser = getRequestUser(request);\n\t\t\t//The euca-types\n\t\t\tListAllMyBucketsList myBucketList = new ListAllMyBucketsList();\n\t\t\tmyBucketList.setBuckets(new ArrayList<BucketListEntry>());\n\n\n\t\t\t//The s3 client types\n            internalS3Client = getS3Client(requestUser);\n\t\t\tAmazonS3Client s3Client = internalS3Client.getS3Client();\n\t\t\tListBucketsRequest listRequest = new ListBucketsRequest();\n\n\t\t\t//Map s3 client result to euca response message\n\t\t\tList<Bucket> result = s3Client.listBuckets(listRequest);\n\t\t\tfor(Bucket b : result) {\n\t\t\t\tmyBucketList.getBuckets().add(new BucketListEntry(b.getName(), DateFormatter.dateToHeaderFormattedString(b.getCreationDate())));\n\t\t\t}\n\n\t\t\treply.setBucketList(myBucketList);\n        } catch(AmazonServiceException ex) {\n            LOG.debug(\"Got service error from backend: \" + ex.getMessage(), ex);\n            throw S3ExceptionMapper.fromAWSJavaSDK(ex);\n        }\n        finally {\n            if (internalS3Client != null && requestUser != null) {\n                returnS3Client(requestUser, internalS3Client);\n            }\n        }\n        return reply;\n\t}","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public CompleteMultipartUploadResponseType completeMultipartUpload(\n            CompleteMultipartUploadType request)\n            throws S3Exception {\n        CompleteMultipartUploadResponseType reply = request.getReply();\n        User requestUser = getRequestUser(request);\n        AmazonS3Client s3Client = getS3Client(requestUser);\n        String bucketName = request.getBucket();\n        String key = request.getKey();\n        String uploadId = request.getUploadId();\n        List<Part> parts = request.getParts();\n        List<PartETag> partETags = new ArrayList<>();\n        for (Part part : parts) {\n            PartETag partETag = new PartETag(part.getPartNumber(), part.getEtag());\n            partETags.add(partETag);\n        }\n        CompleteMultipartUploadRequest multipartRequest = new CompleteMultipartUploadRequest(bucketName, key, uploadId, partETags);\n        try {\n            CompleteMultipartUploadResult result = s3Client.completeMultipartUpload(multipartRequest);\n            reply.setEtag(result.getETag());\n            reply.setBucket(bucketName);\n            reply.setKey(key);\n            reply.setLocation(result.getLocation());\n            reply.setLastModified(new Date());\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n        return reply;\n    }","id":52481,"modified_method":"@Override\n    public CompleteMultipartUploadResponseType completeMultipartUpload(\n            CompleteMultipartUploadType request)\n            throws S3Exception {\n        CompleteMultipartUploadResponseType reply = request.getReply();\n        User requestUser = getRequestUser(request);\n        OsgInternalS3Client internalS3Client = null;\n\n        String bucketName = request.getBucket();\n        String key = request.getKey();\n        String uploadId = request.getUploadId();\n        List<Part> parts = request.getParts();\n        List<PartETag> partETags = new ArrayList<>();\n        for (Part part : parts) {\n            PartETag partETag = new PartETag(part.getPartNumber(), part.getEtag());\n            partETags.add(partETag);\n        }\n        CompleteMultipartUploadRequest multipartRequest = new CompleteMultipartUploadRequest(bucketName, key, uploadId, partETags);\n        try {\n            internalS3Client = getS3Client(requestUser);\n            AmazonS3Client s3Client = internalS3Client.getS3Client();\n\n            CompleteMultipartUploadResult result = s3Client.completeMultipartUpload(multipartRequest);\n            reply.setEtag(result.getETag());\n            reply.setBucket(bucketName);\n            reply.setKey(key);\n            reply.setLocation(result.getLocation());\n            reply.setLastModified(new Date());\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n        finally {\n            if (internalS3Client != null && requestUser != null) {\n                returnS3Client(requestUser, internalS3Client);\n            }\n        }\n        return reply;\n    }","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n\tpublic void check() throws EucalyptusCloudException {\n\t\tLOG.debug(\"Checking\");\n        Socket s = null;\n\t\ttry {\n            s = new Socket(S3ProviderConfiguration.getS3EndpointHost(), S3ProviderConfiguration.getS3EndpointPort());\n\t\t} catch (UnknownHostException e) {\n\t\t\t//it is safe to do this because we won't try to execute an operation until enable returns successfully.\n\t\t\tosgInternalS3Client = null;\n\t\t\tthrow new EucalyptusCloudException(\"Host Exception. Unable to connect to S3 Endpoint: \" + S3ProviderConfiguration.getS3Endpoint() + \". Please check configuration and network connection\");\n\t\t} catch (IOException e) {\n\t\t\tosgInternalS3Client = null;\n\t\t\tthrow new EucalyptusCloudException(\"Unable to connect to S3 Endpoint: \" + S3ProviderConfiguration.getS3Endpoint() + \". Please check configuration and network connection\");\n\t\t} finally {\n            try {\n                if( s != null && !s.isClosed()) {\n                    s.close();\n                }\n            } catch(IOException e) {\n                LOG.warn(\"Failed closing socked used to check remote S3 endpoint\",e);\n            }\n        }\n\t\tLOG.debug(\"Check completed successfully\");\t\t\n\t}","id":52482,"modified_method":"@Override\n\tpublic void check() throws EucalyptusCloudException {\n\t\tLOG.debug(\"Checking\");\n        Socket s = null;\n\t\ttry {\n            s = new Socket(S3ProviderConfiguration.getS3ProviderConfiguration().getS3EndpointHost(),\n                    S3ProviderConfiguration.getS3ProviderConfiguration().getS3EndpointPort());\n\t\t} catch (UnknownHostException e) {\n\t\t\t//it is safe to do this because we won't try to execute an operation until enable returns successfully.\n\t\t\tthrow new EucalyptusCloudException(\"Host Exception. Unable to connect to S3 Endpoint: \" + S3ProviderConfiguration.getS3ProviderConfiguration().getS3Endpoint() + \". Please check configuration and network connection\");\n\t\t} catch (IOException e) {\n\t\t\tthrow new EucalyptusCloudException(\"Unable to connect to S3 Endpoint: \" + S3ProviderConfiguration.getS3ProviderConfiguration().getS3Endpoint() + \". Please check configuration and network connection\");\n\t\t} finally {\n            try {\n                if( s != null && !s.isClosed()) {\n                    s.close();\n                }\n            } catch(IOException e) {\n                LOG.warn(\"Failed closing socked used to check remote S3 endpoint\",e);\n            }\n        }\n\t\tLOG.debug(\"Check completed successfully\");\t\t\n\t}","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public GetBucketLocationResponseType getBucketLocation(\n            GetBucketLocationType request) throws S3Exception {\n        GetBucketLocationResponseType reply = request.getReply();\n        User requestUser = getRequestUser(request);\n\n        try {\n            AmazonS3Client s3Client = getS3Client(requestUser);\n            String bucketLocation = s3Client.getBucketLocation(request.getBucket());\n            reply.setLocationConstraint(bucketLocation);\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n\n        return reply;\n    }","id":52483,"modified_method":"@Override\n    public GetBucketLocationResponseType getBucketLocation(\n            GetBucketLocationType request) throws S3Exception {\n        GetBucketLocationResponseType reply = request.getReply();\n        User requestUser = getRequestUser(request);\n        OsgInternalS3Client internalS3Client = null;\n        try {\n            internalS3Client = getS3Client(requestUser);\n            AmazonS3Client s3Client = internalS3Client.getS3Client();\n            String bucketLocation = s3Client.getBucketLocation(request.getBucket());\n            reply.setLocationConstraint(bucketLocation);\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n        finally {\n            if (internalS3Client != null && requestUser != null) {\n                returnS3Client(requestUser, internalS3Client);\n            }\n        }\n\n        return reply;\n    }","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public GetObjectResponseType getObject(final GetObjectType request) throws S3Exception {\n        User requestUser = getRequestUser(request);\n\n        AmazonS3Client s3Client = getS3Client(requestUser);\n        GetObjectRequest getRequest = new GetObjectRequest(request.getBucket(), request.getKey());\n        try {\n            GetObjectResponseType reply = request.getReply();\n            S3Object response;\n            response = s3Client.getObject(getRequest);\n            populateResponseMetadata(reply, response.getObjectMetadata());\n            reply.setDataInputStream(response.getObjectContent());\n            return reply;\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n    }","id":52484,"modified_method":"@Override\n    public GetObjectResponseType getObject(final GetObjectType request) throws S3Exception {\n        User requestUser = getRequestUser(request);\n        OsgInternalS3Client internalS3Client = null;\n        GetObjectRequest getRequest = new GetObjectRequest(request.getBucket(), request.getKey());\n        try {\n            internalS3Client = getS3Client(requestUser);\n            AmazonS3Client s3Client = internalS3Client.getS3Client();\n            GetObjectResponseType reply = request.getReply();\n            S3Object response;\n            response = s3Client.getObject(getRequest);\n            populateResponseMetadata(reply, response.getObjectMetadata());\n            reply.setDataInputStream(response.getObjectContent());\n            return reply;\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n        finally {\n            if (internalS3Client != null && requestUser != null) {\n                returnS3Client(requestUser, internalS3Client);\n            }\n        }\n    }","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public ListPartsResponseType listParts(ListPartsType request)\n            throws S3Exception {\n        ListPartsResponseType reply = request.getReply();\n        User requestUser = getRequestUser(request);\n        AmazonS3Client s3Client = getS3Client(requestUser);\n        String bucketName = request.getBucket();\n        String key = request.getKey();\n        String uploadId = request.getUploadId();\n        ListPartsRequest listPartsRequest = new ListPartsRequest(bucketName, key, uploadId);\n        if (request.getMaxParts() != null) {\n            listPartsRequest.setMaxParts(request.getMaxParts());\n        }\n        if(request.getPartNumberMarker() != null) {\n            listPartsRequest.setPartNumberMarker(request.getPartNumberMarker());\n        }\n        try {\n            PartListing listing = s3Client.listParts(listPartsRequest);\n            reply.setBucket(bucketName);\n            reply.setKey(key);\n            reply.setUploadId(uploadId);\n            Initiator initiator = new Initiator(\n                    listing.getInitiator().getId(),\n                    listing.getInitiator().getDisplayName());\n            reply.setInitiator(initiator);\n            CanonicalUser owner = new CanonicalUser(\n                    listing.getOwner().getId(),\n                    listing.getOwner().getDisplayName());\n            reply.setOwner(owner);\n            reply.setStorageClass(listing.getStorageClass());\n            reply.setPartNumberMarker(listing.getPartNumberMarker());\n            reply.setNextPartNumberMarker(listing.getNextPartNumberMarker());\n            reply.setMaxParts(listing.getMaxParts());\n            reply.setIsTruncated(listing.isTruncated());\n            List<PartSummary> parts = listing.getParts();\n            List<Part> replyParts = reply.getParts();\n            for(PartSummary part : parts) {\n                replyParts.add(new Part(\n                        part.getPartNumber(),\n                        part.getETag(),\n                        part.getLastModified(),\n                        part.getSize()\n                ));\n            }\n        } catch(AmazonServiceException ex) {\n            LOG.debug(\"Got service error from backend: \" + ex.getMessage(), ex);\n            throw S3ExceptionMapper.fromAWSJavaSDK(ex);\n        }\n\n        return reply;\n    }","id":52485,"modified_method":"@Override\n    public ListPartsResponseType listParts(ListPartsType request)\n            throws S3Exception {\n        ListPartsResponseType reply = request.getReply();\n        User requestUser = getRequestUser(request);\n        OsgInternalS3Client internalS3Client = null;\n\n        String bucketName = request.getBucket();\n        String key = request.getKey();\n        String uploadId = request.getUploadId();\n        ListPartsRequest listPartsRequest = new ListPartsRequest(bucketName, key, uploadId);\n        if (request.getMaxParts() != null) {\n            listPartsRequest.setMaxParts(request.getMaxParts());\n        }\n        if(request.getPartNumberMarker() != null) {\n            listPartsRequest.setPartNumberMarker(request.getPartNumberMarker());\n        }\n        try {\n            internalS3Client = getS3Client(requestUser);\n            AmazonS3Client s3Client = internalS3Client.getS3Client();\n\n            PartListing listing = s3Client.listParts(listPartsRequest);\n            reply.setBucket(bucketName);\n            reply.setKey(key);\n            reply.setUploadId(uploadId);\n            Initiator initiator = new Initiator(\n                    listing.getInitiator().getId(),\n                    listing.getInitiator().getDisplayName());\n            reply.setInitiator(initiator);\n            CanonicalUser owner = new CanonicalUser(\n                    listing.getOwner().getId(),\n                    listing.getOwner().getDisplayName());\n            reply.setOwner(owner);\n            reply.setStorageClass(listing.getStorageClass());\n            reply.setPartNumberMarker(listing.getPartNumberMarker());\n            reply.setNextPartNumberMarker(listing.getNextPartNumberMarker());\n            reply.setMaxParts(listing.getMaxParts());\n            reply.setIsTruncated(listing.isTruncated());\n            List<PartSummary> parts = listing.getParts();\n            List<Part> replyParts = reply.getParts();\n            for(PartSummary part : parts) {\n                replyParts.add(new Part(\n                        part.getPartNumber(),\n                        part.getETag(),\n                        part.getLastModified(),\n                        part.getSize()\n                ));\n            }\n        } catch(AmazonServiceException ex) {\n            LOG.debug(\"Got service error from backend: \" + ex.getMessage(), ex);\n            throw S3ExceptionMapper.fromAWSJavaSDK(ex);\n        }\n        finally {\n            if (internalS3Client != null && requestUser != null) {\n                returnS3Client(requestUser, internalS3Client);\n            }\n        }\n\n        return reply;\n    }","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public CopyObjectResponseType copyObject(CopyObjectType request)\n            throws S3Exception {\n        CopyObjectResponseType reply = request.getReply();\n        User requestUser = getRequestUser(request);\n\n        String sourceBucket = request.getSourceBucket();\n        String sourceKey = request.getSourceObject();\n        String sourceVersionId = request.getSourceVersionId();\n        String destinationBucket = request.getDestinationBucket();\n        String destinationKey = request.getDestinationObject();\n        String copyIfMatch = request.getCopySourceIfMatch();\n        String copyIfNoneMatch = request.getCopySourceIfNoneMatch();\n        Date copyIfUnmodifiedSince = request.getCopySourceIfUnmodifiedSince();\n        Date copyIfModifiedSince = request.getCopySourceIfModifiedSince();\n        try {\n            CopyObjectRequest copyRequest = new CopyObjectRequest(sourceBucket, sourceKey, sourceVersionId, destinationBucket, destinationKey);\n            copyRequest.setModifiedSinceConstraint(copyIfModifiedSince);\n            copyRequest.setUnmodifiedSinceConstraint(copyIfUnmodifiedSince);\n            if (copyIfMatch != null) {\n                List<String> copyIfMatchConstraint = new ArrayList<String>();\n                copyIfMatchConstraint.add(copyIfMatch);\n                copyRequest.setMatchingETagConstraints(copyIfMatchConstraint);\n            }\n            if (copyIfNoneMatch != null) {\n                List<String> copyIfNoneMatchConstraint = new ArrayList<String>();\n                copyIfNoneMatchConstraint.add(copyIfNoneMatch);\n                copyRequest.setNonmatchingETagConstraints(copyIfNoneMatchConstraint);\n            }\n            //TODO: Need to set canned ACL if specified\n            AmazonS3Client s3Client = getS3Client(requestUser);\n            CopyObjectResult result = s3Client.copyObject(copyRequest);\n            reply.setEtag(result.getETag());\n            reply.setLastModified(DateFormatter.dateToListingFormattedString(result.getLastModifiedDate()));\n            String destinationVersionId = result.getVersionId();\n            if (destinationVersionId != null) {\n                reply.setCopySourceVersionId(sourceVersionId);\n                reply.setVersionId(destinationVersionId);\n            }\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n        return reply;\n\n    }","id":52486,"modified_method":"@Override\n    public CopyObjectResponseType copyObject(CopyObjectType request)\n            throws S3Exception {\n        CopyObjectResponseType reply = request.getReply();\n        User requestUser = getRequestUser(request);\n        OsgInternalS3Client internalS3Client = null;\n\n        String sourceBucket = request.getSourceBucket();\n        String sourceKey = request.getSourceObject();\n        String sourceVersionId = request.getSourceVersionId();\n        String destinationBucket = request.getDestinationBucket();\n        String destinationKey = request.getDestinationObject();\n        String copyIfMatch = request.getCopySourceIfMatch();\n        String copyIfNoneMatch = request.getCopySourceIfNoneMatch();\n        Date copyIfUnmodifiedSince = request.getCopySourceIfUnmodifiedSince();\n        Date copyIfModifiedSince = request.getCopySourceIfModifiedSince();\n        try {\n            CopyObjectRequest copyRequest = new CopyObjectRequest(sourceBucket, sourceKey, sourceVersionId, destinationBucket, destinationKey);\n            copyRequest.setModifiedSinceConstraint(copyIfModifiedSince);\n            copyRequest.setUnmodifiedSinceConstraint(copyIfUnmodifiedSince);\n            if (copyIfMatch != null) {\n                List<String> copyIfMatchConstraint = new ArrayList<String>();\n                copyIfMatchConstraint.add(copyIfMatch);\n                copyRequest.setMatchingETagConstraints(copyIfMatchConstraint);\n            }\n            if (copyIfNoneMatch != null) {\n                List<String> copyIfNoneMatchConstraint = new ArrayList<String>();\n                copyIfNoneMatchConstraint.add(copyIfNoneMatch);\n                copyRequest.setNonmatchingETagConstraints(copyIfNoneMatchConstraint);\n            }\n            //TODO: Need to set canned ACL if specified\n            internalS3Client = getS3Client(requestUser);\n            AmazonS3Client s3Client = internalS3Client.getS3Client();\n            CopyObjectResult result = s3Client.copyObject(copyRequest);\n            reply.setEtag(result.getETag());\n            reply.setLastModified(DateFormatter.dateToListingFormattedString(result.getLastModifiedDate()));\n            String destinationVersionId = result.getVersionId();\n            if (destinationVersionId != null) {\n                reply.setCopySourceVersionId(sourceVersionId);\n                reply.setVersionId(destinationVersionId);\n            }\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n        finally {\n            if (internalS3Client != null && requestUser != null) {\n                returnS3Client(requestUser, internalS3Client);\n            }\n        }\n        return reply;\n\n    }","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public GetBucketVersioningStatusResponseType getBucketVersioningStatus(GetBucketVersioningStatusType request)\n            throws S3Exception {\n        GetBucketVersioningStatusResponseType reply = request.getReply();\n        User requestUser = getRequestUser(request);\n\n        try {\n            AmazonS3Client s3Client = getS3Client(requestUser);\n            BucketVersioningConfiguration versioning = s3Client.getBucketVersioningConfiguration(request.getBucket());\n            reply.setVersioningStatus(versioning.getStatus());\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n\n        return reply;\n    }","id":52487,"modified_method":"@Override\n    public GetBucketVersioningStatusResponseType getBucketVersioningStatus(GetBucketVersioningStatusType request)\n            throws S3Exception {\n        GetBucketVersioningStatusResponseType reply = request.getReply();\n        User requestUser = getRequestUser(request);\n        OsgInternalS3Client internalS3Client = null;\n\n        try {\n            internalS3Client = getS3Client(requestUser);\n            AmazonS3Client s3Client = internalS3Client.getS3Client();\n            BucketVersioningConfiguration versioning = s3Client.getBucketVersioningConfiguration(request.getBucket());\n            reply.setVersioningStatus(versioning.getStatus());\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n        finally {\n            if (internalS3Client != null && requestUser != null) {\n                returnS3Client(requestUser, internalS3Client);\n            }\n        }\n\n        return reply;\n    }","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public SetBucketLoggingStatusResponseType setBucketLoggingStatus(\n            SetBucketLoggingStatusType request) throws S3Exception {\n        SetBucketLoggingStatusResponseType reply = request.getReply();\n        User requestUser = getRequestUser(request);\n\n        try {\n            AmazonS3Client s3Client = getS3Client(requestUser);\n            BucketLoggingConfiguration config = new BucketLoggingConfiguration();\n            LoggingEnabled requestConfig = request.getLoggingEnabled();\n            config.setDestinationBucketName(requestConfig == null ? null : requestConfig.getTargetBucket());\n            config.setLogFilePrefix(requestConfig == null ? null : requestConfig.getTargetPrefix());\n\n            SetBucketLoggingConfigurationRequest loggingRequest = new SetBucketLoggingConfigurationRequest(request.getBucket(), config);\n            s3Client.setBucketLoggingConfiguration(loggingRequest);\n            reply.setStatus(HttpResponseStatus.OK);\n            reply.setStatusMessage(\"OK\");\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n\n        return reply;\n    }","id":52488,"modified_method":"@Override\n    public SetBucketLoggingStatusResponseType setBucketLoggingStatus(\n            SetBucketLoggingStatusType request) throws S3Exception {\n        SetBucketLoggingStatusResponseType reply = request.getReply();\n        User requestUser = getRequestUser(request);\n        OsgInternalS3Client internalS3Client = null;\n\n        try {\n            internalS3Client = getS3Client(requestUser);\n            AmazonS3Client s3Client = internalS3Client.getS3Client();\n            BucketLoggingConfiguration config = new BucketLoggingConfiguration();\n            LoggingEnabled requestConfig = request.getLoggingEnabled();\n            config.setDestinationBucketName(requestConfig == null ? null : requestConfig.getTargetBucket());\n            config.setLogFilePrefix(requestConfig == null ? null : requestConfig.getTargetPrefix());\n\n            SetBucketLoggingConfigurationRequest loggingRequest = new SetBucketLoggingConfigurationRequest(request.getBucket(), config);\n            s3Client.setBucketLoggingConfiguration(loggingRequest);\n            reply.setStatus(HttpResponseStatus.OK);\n            reply.setStatusMessage(\"OK\");\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n        finally {\n            if (internalS3Client != null && requestUser != null) {\n                returnS3Client(requestUser, internalS3Client);\n            }\n        }\n        return reply;\n    }","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n\tpublic ListBucketResponseType listBucket(ListBucketType request) throws S3Exception {\n\t\tListBucketResponseType reply = request.getReply();\n\t\ttry {\n\t\t\tUser requestUser = getRequestUser(request);\n\t\t\t\n\t\t\tAmazonS3Client s3Client = getS3Client(requestUser);\n\t\t\tListObjectsRequest listRequest = new ListObjectsRequest();\n\t\t\tlistRequest.setBucketName(request.getBucket());\n\t\t\tlistRequest.setDelimiter(Strings.isNullOrEmpty(request.getDelimiter()) ? null : request.getDelimiter());\n\t\t\tlistRequest.setMarker(Strings.isNullOrEmpty(request.getMarker()) ? null : request.getMarker());\n\t\t\tlistRequest.setMaxKeys((request.getMaxKeys() == null ? null : Integer.parseInt(request.getMaxKeys())));\n\t\t\tlistRequest.setPrefix(Strings.isNullOrEmpty(request.getPrefix()) ? null : request.getPrefix());\n\n\t\t\tObjectListing response = s3Client.listObjects(listRequest);\n\n\t\t\t/* Non-optional, must have non-null values */\n            reply.setName(request.getBucket());\n            reply.setMaxKeys(response.getMaxKeys());\n            reply.setMarker(response.getMarker() == null ? \"\" : response.getMarker());\n            reply.setPrefix(response.getPrefix() == null ? \"\" : response.getPrefix());\n            reply.setIsTruncated(response.isTruncated());\n\n\t\t\t/* Optional */\n            reply.setNextMarker(response.getNextMarker());\n            reply.setDelimiter(response.getDelimiter());\n            if(reply.getContents() == null) {\n                reply.setContents(new ArrayList<ListEntry>());\n            }\n            if(reply.getCommonPrefixesList() == null) {\n                reply.setCommonPrefixesList(new ArrayList<CommonPrefixesEntry>());\n            }\n\n            for(S3ObjectSummary obj : response.getObjectSummaries()) {\n                //Add entry, note that the canonical user is set based on requesting user, not returned user\n                reply.getContents().add(new ListEntry(\n                        obj.getKey(),\n                        DateFormatter.dateToHeaderFormattedString(obj.getLastModified()),\n                        obj.getETag(),\n                        obj.getSize(),\n                        getCanonicalUser(requestUser),\n                        obj.getStorageClass()));\n            }\n\n            if(response.getCommonPrefixes() != null && response.getCommonPrefixes().size() > 0) {\n                reply.setCommonPrefixesList(new ArrayList<CommonPrefixesEntry>());\n\n                for(String s : response.getCommonPrefixes()) {\n                    reply.getCommonPrefixesList().add(new CommonPrefixesEntry(s));\n                }\n            }\n\n            return reply;\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n    }","id":52489,"modified_method":"@Override\n\tpublic ListBucketResponseType listBucket(ListBucketType request) throws S3Exception {\n\t\tListBucketResponseType reply = request.getReply();\n        User requestUser = getRequestUser(request);\n        OsgInternalS3Client internalS3Client = null ;\n\t\ttry {\n            internalS3Client = getS3Client(requestUser);\n            AmazonS3Client s3Client = internalS3Client.getS3Client();\n\t\t\tListObjectsRequest listRequest = new ListObjectsRequest();\n\t\t\tlistRequest.setBucketName(request.getBucket());\n\t\t\tlistRequest.setDelimiter(Strings.isNullOrEmpty(request.getDelimiter()) ? null : request.getDelimiter());\n\t\t\tlistRequest.setMarker(Strings.isNullOrEmpty(request.getMarker()) ? null : request.getMarker());\n\t\t\tlistRequest.setMaxKeys((request.getMaxKeys() == null ? null : Integer.parseInt(request.getMaxKeys())));\n\t\t\tlistRequest.setPrefix(Strings.isNullOrEmpty(request.getPrefix()) ? null : request.getPrefix());\n\n\t\t\tObjectListing response = s3Client.listObjects(listRequest);\n\n\t\t\t/* Non-optional, must have non-null values */\n            reply.setName(request.getBucket());\n            reply.setMaxKeys(response.getMaxKeys());\n            reply.setMarker(response.getMarker() == null ? \"\" : response.getMarker());\n            reply.setPrefix(response.getPrefix() == null ? \"\" : response.getPrefix());\n            reply.setIsTruncated(response.isTruncated());\n\n\t\t\t/* Optional */\n            reply.setNextMarker(response.getNextMarker());\n            reply.setDelimiter(response.getDelimiter());\n            if(reply.getContents() == null) {\n                reply.setContents(new ArrayList<ListEntry>());\n            }\n            if(reply.getCommonPrefixesList() == null) {\n                reply.setCommonPrefixesList(new ArrayList<CommonPrefixesEntry>());\n            }\n\n            for(S3ObjectSummary obj : response.getObjectSummaries()) {\n                //Add entry, note that the canonical user is set based on requesting user, not returned user\n                reply.getContents().add(new ListEntry(\n                        obj.getKey(),\n                        DateFormatter.dateToHeaderFormattedString(obj.getLastModified()),\n                        obj.getETag(),\n                        obj.getSize(),\n                        getCanonicalUser(requestUser),\n                        obj.getStorageClass()));\n            }\n\n            if(response.getCommonPrefixes() != null && response.getCommonPrefixes().size() > 0) {\n                reply.setCommonPrefixesList(new ArrayList<CommonPrefixesEntry>());\n\n                for(String s : response.getCommonPrefixes()) {\n                    reply.getCommonPrefixesList().add(new CommonPrefixesEntry(s));\n                }\n            }\n\n            return reply;\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n        finally {\n            if (internalS3Client != null && requestUser != null) {\n                returnS3Client(requestUser, internalS3Client);\n            }\n        }\n    }","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public GetBucketLoggingStatusResponseType getBucketLoggingStatus(\n            GetBucketLoggingStatusType request) throws S3Exception {\n        GetBucketLoggingStatusResponseType reply = request.getReply();\n        User requestUser = getRequestUser(request);\n\n        try {\n            AmazonS3Client s3Client = getS3Client(requestUser);\n            BucketLoggingConfiguration loggingConfig = s3Client.getBucketLoggingConfiguration(request.getBucket());\n            LoggingEnabled loggingEnabled = new LoggingEnabled();\n            if(loggingConfig == null || !loggingConfig.isLoggingEnabled()) {\n                //Do nothing, logging is disabled\n            } else {\n                //S3 SDK does not provide a way to fetch the grants on the destination logging\n                loggingEnabled.setTargetBucket(loggingConfig.getDestinationBucketName());\n                loggingEnabled.setTargetPrefix(loggingConfig.getLogFilePrefix());\n            }\n            reply.setLoggingEnabled(loggingEnabled);\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n\n        return reply;\n    }","id":52490,"modified_method":"@Override\n    public GetBucketLoggingStatusResponseType getBucketLoggingStatus(\n            GetBucketLoggingStatusType request) throws S3Exception {\n        GetBucketLoggingStatusResponseType reply = request.getReply();\n        User requestUser = getRequestUser(request);\n        OsgInternalS3Client internalS3Client = null;\n\n        try {\n            internalS3Client = getS3Client(requestUser);\n            AmazonS3Client s3Client = internalS3Client.getS3Client();\n            BucketLoggingConfiguration loggingConfig = s3Client.getBucketLoggingConfiguration(request.getBucket());\n            LoggingEnabled loggingEnabled = new LoggingEnabled();\n            if(loggingConfig == null || !loggingConfig.isLoggingEnabled()) {\n                //Do nothing, logging is disabled\n            } else {\n                //S3 SDK does not provide a way to fetch the grants on the destination logging\n                loggingEnabled.setTargetBucket(loggingConfig.getDestinationBucketName());\n                loggingEnabled.setTargetPrefix(loggingConfig.getLogFilePrefix());\n            }\n            reply.setLoggingEnabled(loggingEnabled);\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n        finally {\n            if (internalS3Client != null && requestUser != null) {\n                returnS3Client(requestUser, internalS3Client);\n            }\n        }\n\n        return reply;\n    }","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"/**\n\t * Returns a usable S3 Client configured to send requests to the currently configured\n\t * endpoint with the currently configured credentials.\n\t * @return\n\t */\n\tprotected AmazonS3Client getS3Client(User requestUser) throws InternalErrorException {\n\t\t//TODO: this should be enhanced to share clients/use a pool for efficiency.\n\t\tif (osgInternalS3Client == null) {\n\t\t\tsynchronized(this) {\t\t\n\t\t\t\tProtocol protocol = null;\n\t\t\t\tboolean useHttps = false;\n\t\t\t\tif(S3ProviderConfiguration.getS3UseHttps() != null && S3ProviderConfiguration.getS3UseHttps()) {\n\t\t\t\t\tuseHttps = true;\n\t\t\t\t}\n                AWSCredentials credentials;\n                try {\n                    credentials = mapCredentials(requestUser);\n                } catch(Exception e) {\n                    LOG.error(\"Error mapping credentials for user \" + (requestUser != null ? requestUser.getUserId() : \"null\") + \" for walrus backend call.\", e);\n                    InternalErrorException ex = new InternalErrorException(\"Cannot construct s3client due to inability to map credentials for user: \" +  (requestUser != null ? requestUser.getUserId() : \"null\"));\n                    ex.initCause(e);\n                    throw ex;\n                }\n\n\t\t\t\tosgInternalS3Client = new OsgInternalS3Client(credentials, useHttps);\n\t\t\t\tosgInternalS3Client.setS3Endpoint(S3ProviderConfiguration.getS3Endpoint());\n\t\t\t\tosgInternalS3Client.setUsePathStyle(!S3ProviderConfiguration.getS3UseBackendDns());\n\t\t\t\tLOG.debug(\"Setting system property com.amazonaws.services.s3.disableGetObjectMD5Validation=true\");\n\t\t\t\tSystem.setProperty(\"com.amazonaws.services.s3.disableGetObjectMD5Validation\", Boolean.TRUE.toString());\n\t\t\t}\n\t\t}\n\t\treturn osgInternalS3Client.getS3Client();\n\t}","id":52491,"modified_method":"/**\n\t * Returns a usable S3 Client configured to send requests to the currently configured\n\t * endpoint with the currently configured credentials.\n\t * @return\n\t */\n\tprotected OsgInternalS3Client getS3Client(User requestUser) throws InternalErrorException {\n\n        AWSCredentials credentials;\n        try {\n            credentials = mapCredentials(requestUser);\n        } catch(Exception e) {\n            LOG.error(\"Error mapping credentials for user \" + (requestUser != null ? requestUser.getUserId() : \"null\") + \" for walrus backend call.\", e);\n            InternalErrorException ex = new InternalErrorException(\"Cannot construct s3client due to inability to map credentials for user: \" +  (requestUser != null ? requestUser.getUserId() : \"null\"));\n            ex.initCause(e);\n            throw ex;\n        }\n        try {\n            OsgInternalS3Client internalS3Client =\n                    getClientPool( credentials, this.getUpstreamEndpoint(), this.doUsePathStyle() ).borrowObject();\n            return internalS3Client;\n        } catch (Exception e) {\n            LOG.error(\"exception thrown retrieving internal s3 client\", e);\n            return null;\n        }\n\t}","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public HeadObjectResponseType headObject(final HeadObjectType request)\n            throws S3Exception {\n        User requestUser = getRequestUser(request);\n\n        AmazonS3Client s3Client = getS3Client(requestUser);\n        GetObjectMetadataRequest getMetadataRequest = new GetObjectMetadataRequest(request.getBucket(), request.getKey());\n        getMetadataRequest.setVersionId(request.getVersionId());\n        try {\n            ObjectMetadata metadata;\n            metadata = s3Client.getObjectMetadata(getMetadataRequest);\n\n            HeadObjectResponseType reply = request.getReply();\n            populateResponseMetadata(reply, metadata);\n            return reply;\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n    }","id":52492,"modified_method":"@Override\n    public HeadObjectResponseType headObject(final HeadObjectType request)\n            throws S3Exception {\n        User requestUser = getRequestUser(request);\n        OsgInternalS3Client internalS3Client = null;\n\n        GetObjectMetadataRequest getMetadataRequest = new GetObjectMetadataRequest(request.getBucket(), request.getKey());\n        getMetadataRequest.setVersionId(request.getVersionId());\n        try {\n            internalS3Client = getS3Client(requestUser);\n            AmazonS3Client s3Client = internalS3Client.getS3Client();\n            ObjectMetadata metadata;\n            metadata = s3Client.getObjectMetadata(getMetadataRequest);\n\n            HeadObjectResponseType reply = request.getReply();\n            populateResponseMetadata(reply, metadata);\n            return reply;\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n        finally {\n            if (internalS3Client != null && requestUser != null) {\n                returnS3Client(requestUser, internalS3Client);\n            }\n        }\n    }","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n\tpublic CreateBucketResponseType createBucket(CreateBucketType request) throws S3Exception {\n\t\tCreateBucketResponseType reply = request.getReply();\n\t\tUser requestUser = getRequestUser(request);\n\t\t\n\t\ttry {\n\t\t\tAmazonS3Client s3Client = getS3Client(requestUser);\n\t\t\tBucket responseBucket = s3Client.createBucket(request.getBucket());\n\t\t\t//Save the owner info in response?\n\t\t\treply.setBucket(request.getBucket());\n\t\t\treply.setStatus(HttpResponseStatus.OK);\n\t\t\treply.setStatusMessage(\"OK\");\n\t\t} catch(AmazonServiceException ex) {\n            LOG.debug(\"Got service error from backend: \" + ex.getMessage(), ex);\n            throw S3ExceptionMapper.fromAWSJavaSDK(ex);\n\t\t}\n\n\t\treturn reply;\t\t\n\t}","id":52493,"modified_method":"@Override\n\tpublic CreateBucketResponseType createBucket(CreateBucketType request) throws S3Exception {\n\t\tCreateBucketResponseType reply = request.getReply();\n\t\tUser requestUser = getRequestUser(request);\n        OsgInternalS3Client internalS3Client = null ;\n\t\ttry {\n            internalS3Client = getS3Client(requestUser);\n            AmazonS3Client s3Client = internalS3Client.getS3Client();\n\t\t\tBucket responseBucket = s3Client.createBucket(request.getBucket());\n\t\t\t//Save the owner info in response?\n\t\t\treply.setBucket(request.getBucket());\n\t\t\treply.setStatus(HttpResponseStatus.OK);\n\t\t\treply.setStatusMessage(\"OK\");\n\t\t} catch(AmazonServiceException ex) {\n            LOG.debug(\"Got service error from backend: \" + ex.getMessage(), ex);\n            throw S3ExceptionMapper.fromAWSJavaSDK(ex);\n\t\t}\n        finally {\n            if (internalS3Client != null && requestUser != null) {\n                returnS3Client(requestUser, internalS3Client);\n            }\n        }\n\t\treturn reply;\t\t\n\t}","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public ListVersionsResponseType listVersions(ListVersionsType request) throws S3Exception {\n        ListVersionsResponseType reply = request.getReply();\n        User requestUser = getRequestUser(request);\n\n        try {\n            AmazonS3Client s3Client = getS3Client(requestUser);\n            ListVersionsRequest listVersionsRequest = new ListVersionsRequest(request.getBucket(),\n                    request.getPrefix(),\n                    request.getKeyMarker(),\n                    request.getVersionIdMarker(),\n                    request.getDelimiter(), Integer.parseInt(request.getMaxKeys()));\n            VersionListing result = s3Client.listVersions(listVersionsRequest);\n\n            CanonicalUser owner;\n            try {\n                owner = AclUtils.buildCanonicalUser(requestUser.getAccount());\n            } catch(AuthException e) {\n                LOG.error(\"Error getting request user's account during bucket version listing\",e);\n                owner = null;\n                throw new AccountProblemException(\"Account for user \" + requestUser.getUserId());\n            }\n\n            //Populate result to euca\n            reply.setBucket(request.getBucket());\n            reply.setMaxKeys(result.getMaxKeys());\n            reply.setDelimiter(result.getDelimiter());\n            reply.setNextKeyMarker(result.getNextKeyMarker());\n            reply.setNextVersionIdMarker(result.getNextVersionIdMarker());\n            reply.setIsTruncated(result.isTruncated());\n            reply.setVersionIdMarker(result.getVersionIdMarker());\n            reply.setKeyMarker(result.getKeyMarker());\n\n            if(result.getCommonPrefixes() != null && result.getCommonPrefixes().size() > 0) {\n                reply.setCommonPrefixesList(new ArrayList<CommonPrefixesEntry>());\n\n                for(String s : result.getCommonPrefixes()) {\n                    reply.getCommonPrefixesList().add(new CommonPrefixesEntry(s));\n                }\n            }\n\n            ArrayList<KeyEntry> versions = new ArrayList<>();\n            VersionEntry v;\n            DeleteMarkerEntry d;\n            for(S3VersionSummary summary: result.getVersionSummaries()) {\n                if(!summary.isDeleteMarker()) {\n                    v = new VersionEntry();\n                    v.setKey(summary.getKey());\n                    v.setVersionId(summary.getVersionId());\n                    v.setLastModified(DateFormatter.dateToHeaderFormattedString(summary.getLastModified()));\n                    v.setEtag(summary.getETag());\n                    v.setIsLatest(summary.isLatest());\n                    v.setOwner(owner);\n                    v.setSize(summary.getSize());\n                    versions.add(v);\n                } else {\n                    d = new DeleteMarkerEntry();\n                    d.setIsLatest(summary.isLatest());\n                    d.setKey(summary.getKey());\n                    d.setLastModified(DateFormatter.dateToHeaderFormattedString(summary.getLastModified()));\n                    d.setOwner(owner);\n                    d.setVersionId(summary.getVersionId());\n                    versions.add(d);\n                }\n            }\n            //Again, this is wrong, should be a single listing\n            reply.setKeyEntries(versions);\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n\n        return reply;\n    }","id":52494,"modified_method":"@Override\n    public ListVersionsResponseType listVersions(ListVersionsType request) throws S3Exception {\n        ListVersionsResponseType reply = request.getReply();\n        User requestUser = getRequestUser(request);\n        OsgInternalS3Client internalS3Client = null;\n\n        try {\n            internalS3Client = getS3Client(requestUser);\n            AmazonS3Client s3Client = internalS3Client.getS3Client();\n            ListVersionsRequest listVersionsRequest = new ListVersionsRequest(request.getBucket(),\n                    request.getPrefix(),\n                    request.getKeyMarker(),\n                    request.getVersionIdMarker(),\n                    request.getDelimiter(), Integer.parseInt(request.getMaxKeys()));\n            VersionListing result = s3Client.listVersions(listVersionsRequest);\n\n            CanonicalUser owner;\n            try {\n                owner = AclUtils.buildCanonicalUser(requestUser.getAccount());\n            } catch(AuthException e) {\n                LOG.error(\"Error getting request user's account during bucket version listing\",e);\n                owner = null;\n                throw new AccountProblemException(\"Account for user \" + requestUser.getUserId());\n            }\n\n            //Populate result to euca\n            reply.setBucket(request.getBucket());\n            reply.setMaxKeys(result.getMaxKeys());\n            reply.setDelimiter(result.getDelimiter());\n            reply.setNextKeyMarker(result.getNextKeyMarker());\n            reply.setNextVersionIdMarker(result.getNextVersionIdMarker());\n            reply.setIsTruncated(result.isTruncated());\n            reply.setVersionIdMarker(result.getVersionIdMarker());\n            reply.setKeyMarker(result.getKeyMarker());\n\n            if(result.getCommonPrefixes() != null && result.getCommonPrefixes().size() > 0) {\n                reply.setCommonPrefixesList(new ArrayList<CommonPrefixesEntry>());\n\n                for(String s : result.getCommonPrefixes()) {\n                    reply.getCommonPrefixesList().add(new CommonPrefixesEntry(s));\n                }\n            }\n\n            ArrayList<KeyEntry> versions = new ArrayList<>();\n            VersionEntry v;\n            DeleteMarkerEntry d;\n            for(S3VersionSummary summary: result.getVersionSummaries()) {\n                if(!summary.isDeleteMarker()) {\n                    v = new VersionEntry();\n                    v.setKey(summary.getKey());\n                    v.setVersionId(summary.getVersionId());\n                    v.setLastModified(DateFormatter.dateToHeaderFormattedString(summary.getLastModified()));\n                    v.setEtag(summary.getETag());\n                    v.setIsLatest(summary.isLatest());\n                    v.setOwner(owner);\n                    v.setSize(summary.getSize());\n                    versions.add(v);\n                } else {\n                    d = new DeleteMarkerEntry();\n                    d.setIsLatest(summary.isLatest());\n                    d.setKey(summary.getKey());\n                    d.setLastModified(DateFormatter.dateToHeaderFormattedString(summary.getLastModified()));\n                    d.setOwner(owner);\n                    d.setVersionId(summary.getVersionId());\n                    versions.add(d);\n                }\n            }\n            //Again, this is wrong, should be a single listing\n            reply.setKeyEntries(versions);\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n        finally {\n            if (internalS3Client != null && requestUser != null) {\n                returnS3Client(requestUser, internalS3Client);\n            }\n        }\n\n        return reply;\n    }","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n\tpublic DeleteObjectResponseType deleteObject(DeleteObjectType request) throws S3Exception {\n\t\ttry {\n\t\t\tUser requestUser = getRequestUser(request);\n\n            DeleteObjectResponseType reply = request.getReply();\n            reply.setStatus(HttpResponseStatus.NO_CONTENT);\n            reply.setStatusMessage(\"NO CONTENT\");\n\n            AmazonS3Client s3Client = getS3Client(requestUser);\n            s3Client.deleteObject(request.getBucket(), request.getKey());\n            return reply;\n        } catch(AmazonServiceException ex) {\n            LOG.debug(\"Error from backend\", ex);\n            throw S3ExceptionMapper.fromAWSJavaSDK(ex);\n        }\n\t}","id":52495,"modified_method":"@Override\n\tpublic DeleteObjectResponseType deleteObject(DeleteObjectType request) throws S3Exception {\n        User requestUser = getRequestUser(request);\n        OsgInternalS3Client internalS3Client = null ;\n        try {\n            DeleteObjectResponseType reply = request.getReply();\n            reply.setStatus(HttpResponseStatus.NO_CONTENT);\n            reply.setStatusMessage(\"NO CONTENT\");\n\n            internalS3Client = getS3Client(requestUser);\n            AmazonS3Client s3Client = internalS3Client.getS3Client();\n            s3Client.deleteObject(request.getBucket(), request.getKey());\n            return reply;\n        } catch(AmazonServiceException ex) {\n            LOG.debug(\"Error from backend\", ex);\n            throw S3ExceptionMapper.fromAWSJavaSDK(ex);\n        }\n        finally {\n            if (internalS3Client != null && requestUser != null) {\n                returnS3Client(requestUser, internalS3Client);\n            }\n        }\n\t}","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"/**\n\t * Maps the request credentials to another set of credentials. This implementation maps\n\t * all Eucalyptus credentials to a single s3/backend credential.\n\t * \n\t * @param requestUser The Eucalyptus user that generated the request\n\t * @return a BasicAWSCredentials object initialized with the credentials to use\n\t * @throws NoSuchElementException\n\t * @throws IllegalArgumentException\n\t */\n\tprotected BasicAWSCredentials mapCredentials(User requestUser) throws AuthException, IllegalArgumentException {\n\t\treturn new BasicAWSCredentials(S3ProviderConfiguration.getS3AccessKey(), S3ProviderConfiguration.getS3SecretKey());\n\t}","id":52496,"modified_method":"/**\n\t * Maps the request credentials to another set of credentials. This implementation maps\n\t * all Eucalyptus credentials to a single s3/backend credential.\n\t * \n\t * @param requestUser The Eucalyptus user that generated the request\n\t * @return a BasicAWSCredentials object initialized with the credentials to use\n\t * @throws NoSuchElementException\n\t * @throws IllegalArgumentException\n\t */\n\tprotected BasicAWSCredentials mapCredentials(User requestUser) throws AuthException, IllegalArgumentException {\n\t\treturn new BasicAWSCredentials(\n                S3ProviderConfiguration.getS3ProviderConfiguration().getS3AccessKey(),\n                S3ProviderConfiguration.getS3ProviderConfiguration().getS3SecretKey());\n\t}","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public GetObjectAccessControlPolicyResponseType getObjectAccessControlPolicy(GetObjectAccessControlPolicyType request) throws S3Exception {\n        GetObjectAccessControlPolicyResponseType reply = request.getReply();\n        User requestUser = getRequestUser(request);\n\n        try {\n            AmazonS3Client s3Client = getS3Client(requestUser);\n            com.amazonaws.services.s3.model.AccessControlList acl = s3Client.getObjectAcl(request.getBucket(),request.getKey(), request.getVersionId());\n            reply.setAccessControlPolicy(sdkAclToEucaAcl(acl));\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n\n        return reply;\n    }","id":52497,"modified_method":"@Override\n    public GetObjectAccessControlPolicyResponseType getObjectAccessControlPolicy(GetObjectAccessControlPolicyType request) throws S3Exception {\n        GetObjectAccessControlPolicyResponseType reply = request.getReply();\n        User requestUser = getRequestUser(request);\n        OsgInternalS3Client internalS3Client = null ;\n        try {\n            internalS3Client = getS3Client(requestUser);\n            AmazonS3Client s3Client = internalS3Client.getS3Client();\n            com.amazonaws.services.s3.model.AccessControlList acl = s3Client.getObjectAcl(request.getBucket(),request.getKey(), request.getVersionId());\n            reply.setAccessControlPolicy(sdkAclToEucaAcl(acl));\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n        finally {\n            if (internalS3Client != null && requestUser != null) {\n                returnS3Client(requestUser, internalS3Client);\n            }\n        }\n        return reply;\n    }","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public DeleteVersionResponseType deleteVersion(DeleteVersionType request) throws S3Exception {\n        try {\n            User requestUser = getRequestUser(request);\n\n            AmazonS3Client s3Client = getS3Client(requestUser);\n            s3Client.deleteVersion(request.getBucket(), request.getKey(), request.getVersionId());\n            DeleteVersionResponseType reply = request.getReply();\n            reply.setStatus(HttpResponseStatus.NO_CONTENT);\n            reply.setStatusMessage(\"NO CONTENT\");\n            return reply;\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n    }","id":52498,"modified_method":"@Override\n    public DeleteVersionResponseType deleteVersion(DeleteVersionType request) throws S3Exception {\n        User requestUser = getRequestUser(request);\n        OsgInternalS3Client internalS3Client = null;\n        try {\n            internalS3Client = getS3Client(requestUser);\n            AmazonS3Client s3Client = internalS3Client.getS3Client();\n            s3Client.deleteVersion(request.getBucket(), request.getKey(), request.getVersionId());\n            DeleteVersionResponseType reply = request.getReply();\n            reply.setStatus(HttpResponseStatus.NO_CONTENT);\n            reply.setStatusMessage(\"NO CONTENT\");\n            return reply;\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n        finally {\n            if (internalS3Client != null && requestUser != null) {\n                returnS3Client(requestUser, internalS3Client);\n            }\n        }\n    }","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public UploadPartResponseType uploadPart(UploadPartType request, InputStream dataContent)\n            throws S3Exception {\n        String bucketName = request.getBucket();\n        String key = request.getKey();\n\n        try {\n            User requestUser = getRequestUser(request);\n\n            AmazonS3Client s3Client = getS3Client(requestUser);\n            UploadPartResult result;\n            UploadPartRequest uploadPartRequest = new UploadPartRequest();\n            uploadPartRequest.setBucketName(bucketName);\n            uploadPartRequest.setKey(key);\n            uploadPartRequest.setInputStream(dataContent);\n            uploadPartRequest.setUploadId(request.getUploadId());\n            uploadPartRequest.setPartNumber(Integer.valueOf(request.getPartNumber()));\n            uploadPartRequest.setMd5Digest(request.getContentMD5());\n            uploadPartRequest.setPartSize(Long.valueOf(request.getContentLength()));\n            try {\n                result = s3Client.uploadPart(uploadPartRequest);\n            } catch(AmazonServiceException e) {\n                LOG.debug(\"Error from backend\", e);\n                throw S3ExceptionMapper.fromAWSJavaSDK(e);\n            }\n            UploadPartResponseType reply = request.getReply();\n            reply.setEtag(result.getETag());\n            reply.setLastModified(new Date());\n            return reply;\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n\n    }","id":52499,"modified_method":"@Override\n    public UploadPartResponseType uploadPart(UploadPartType request, InputStream dataContent)\n            throws S3Exception {\n        String bucketName = request.getBucket();\n        String key = request.getKey();\n\n        User requestUser = getRequestUser(request);\n        OsgInternalS3Client internalS3Client = null;\n        try {\n            internalS3Client = getS3Client(requestUser);\n            AmazonS3Client s3Client = internalS3Client.getS3Client();\n\n            UploadPartResult result;\n            UploadPartRequest uploadPartRequest = new UploadPartRequest();\n            uploadPartRequest.setBucketName(bucketName);\n            uploadPartRequest.setKey(key);\n            uploadPartRequest.setInputStream(dataContent);\n            uploadPartRequest.setUploadId(request.getUploadId());\n            uploadPartRequest.setPartNumber(Integer.valueOf(request.getPartNumber()));\n            uploadPartRequest.setMd5Digest(request.getContentMD5());\n            uploadPartRequest.setPartSize(Long.valueOf(request.getContentLength()));\n            try {\n                result = s3Client.uploadPart(uploadPartRequest);\n            } catch(AmazonServiceException e) {\n                LOG.debug(\"Error from backend\", e);\n                throw S3ExceptionMapper.fromAWSJavaSDK(e);\n            }\n            UploadPartResponseType reply = request.getReply();\n            reply.setEtag(result.getETag());\n            reply.setLastModified(new Date());\n            return reply;\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n        finally {\n            if (internalS3Client != null && requestUser != null) {\n                returnS3Client(requestUser, internalS3Client);\n            }\n        }\n    }","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n\tpublic void stop() throws EucalyptusCloudException {\n\t\tLOG.debug(\"Stopping\");\n\t\t//Force a new load of this on startup.\n\t\tthis.osgInternalS3Client = null;\n\t\tLOG.debug(\"Stop completed successfully\");\t\t\n\t}","id":52500,"modified_method":"@Override\n\tpublic void stop() throws EucalyptusCloudException {\n\t\tLOG.debug(\"Stopping\");\n\t\t//Force a new load of this on startup.\n        flushClientPools();\n\t\tLOG.debug(\"Stop completed successfully\");\t\t\n\t}","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public GetObjectExtendedResponseType getObjectExtended(final GetObjectExtendedType request) throws S3Exception {\n        User requestUser = getRequestUser(request);\n\n        Boolean getMetaData = request.getGetMetaData();\n        Long byteRangeStart = request.getByteRangeStart();\n        Long byteRangeEnd = request.getByteRangeEnd();\n        Date ifModifiedSince = request.getIfModifiedSince();\n        Date ifUnmodifiedSince = request.getIfUnmodifiedSince();\n        String ifMatch = request.getIfMatch();\n        String ifNoneMatch = request.getIfNoneMatch();\n\n        GetObjectRequest getRequest = new GetObjectRequest(request.getBucket(), request.getKey());\n        if(byteRangeStart == null) {\n            byteRangeStart = 0L;\n        }\n        if(byteRangeEnd != null) {\n            getRequest.setRange(byteRangeStart, byteRangeEnd);\n        }\n        if(getMetaData != null) {\n            //Get object metadata\n        }\n        if(ifModifiedSince != null) {\n            getRequest.setModifiedSinceConstraint(ifModifiedSince);\n        }\n        if(ifUnmodifiedSince != null) {\n            getRequest.setUnmodifiedSinceConstraint(ifUnmodifiedSince);\n        }\n        if(ifMatch != null) {\n            List matchList = new ArrayList();\n            matchList.add(ifMatch);\n            getRequest.setMatchingETagConstraints(matchList);\n        }\n        if(ifNoneMatch != null) {\n            List nonMatchList = new ArrayList();\n            nonMatchList.add(ifNoneMatch);\n            getRequest.setNonmatchingETagConstraints(nonMatchList);\n        }\n        try {\n            AmazonS3Client s3Client = this.getS3Client(requestUser);\n            S3Object response = s3Client.getObject(getRequest);\n\n            GetObjectExtendedResponseType reply = request.getReply();\n            populateResponseMetadata(reply, response.getObjectMetadata());\n            reply.setDataInputStream(response.getObjectContent());\n            reply.setByteRangeStart(request.getByteRangeStart());\n            reply.setByteRangeEnd(request.getByteRangeEnd());\n            return reply;\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n    }","id":52501,"modified_method":"@Override\n    public GetObjectExtendedResponseType getObjectExtended(final GetObjectExtendedType request) throws S3Exception {\n        User requestUser = getRequestUser(request);\n        OsgInternalS3Client internalS3Client = null;\n\n        Boolean getMetaData = request.getGetMetaData();\n        Long byteRangeStart = request.getByteRangeStart();\n        Long byteRangeEnd = request.getByteRangeEnd();\n        Date ifModifiedSince = request.getIfModifiedSince();\n        Date ifUnmodifiedSince = request.getIfUnmodifiedSince();\n        String ifMatch = request.getIfMatch();\n        String ifNoneMatch = request.getIfNoneMatch();\n\n        GetObjectRequest getRequest = new GetObjectRequest(request.getBucket(), request.getKey());\n        if(byteRangeStart == null) {\n            byteRangeStart = 0L;\n        }\n        if(byteRangeEnd != null) {\n            getRequest.setRange(byteRangeStart, byteRangeEnd);\n        }\n        if(getMetaData != null) {\n            //Get object metadata\n        }\n        if(ifModifiedSince != null) {\n            getRequest.setModifiedSinceConstraint(ifModifiedSince);\n        }\n        if(ifUnmodifiedSince != null) {\n            getRequest.setUnmodifiedSinceConstraint(ifUnmodifiedSince);\n        }\n        if(ifMatch != null) {\n            List matchList = new ArrayList();\n            matchList.add(ifMatch);\n            getRequest.setMatchingETagConstraints(matchList);\n        }\n        if(ifNoneMatch != null) {\n            List nonMatchList = new ArrayList();\n            nonMatchList.add(ifNoneMatch);\n            getRequest.setNonmatchingETagConstraints(nonMatchList);\n        }\n        try {\n            internalS3Client = getS3Client(requestUser);\n            AmazonS3Client s3Client = internalS3Client.getS3Client();\n            S3Object response = s3Client.getObject(getRequest);\n\n            GetObjectExtendedResponseType reply = request.getReply();\n            populateResponseMetadata(reply, response.getObjectMetadata());\n            reply.setDataInputStream(response.getObjectContent());\n            reply.setByteRangeStart(request.getByteRangeStart());\n            reply.setByteRangeEnd(request.getByteRangeEnd());\n            return reply;\n        } catch(AmazonServiceException e) {\n            LOG.debug(\"Error from backend\", e);\n            throw S3ExceptionMapper.fromAWSJavaSDK(e);\n        }\n        finally {\n            if (internalS3Client != null && requestUser != null) {\n                returnS3Client(requestUser, internalS3Client);\n            }\n        }\n    }","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static boolean getS3UseBackendDns() {\n\t\treturn S3UseBackendDns;\n\t}","id":52502,"modified_method":"public boolean getS3UseBackendDns() {\n\t\treturn S3UseBackendDns;\n\t}","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static String getS3Endpoint() {\n\t\treturn S3Endpoint;\n\t}","id":52503,"modified_method":"public String getS3Endpoint() {\n\t\treturn S3Endpoint;\n\t}","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static String getS3SecretKey() {\n\t\treturn S3SecretKey;\n\t}","id":52504,"modified_method":"public String getS3SecretKey() {\n\t\treturn S3SecretKey;\n\t}","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static void setS3AccessKey(String s3AccessKey) {\n\t\tS3AccessKey = s3AccessKey;\n\t}","id":52505,"modified_method":"public void setS3AccessKey(String s3AccessKey) {\n\t\tS3AccessKey = s3AccessKey;\n\t}","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static void setS3UserBackendDns(boolean useDns) {\n\t\tS3UseBackendDns = useDns;\n\t}","id":52506,"modified_method":"public void setS3UserBackendDns(boolean useDns) {\n\t\tS3UseBackendDns = useDns;\n\t}","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static void setS3UseHttps(Boolean s3UseHttps) {\n\t\tS3UseHttps = s3UseHttps;\n\t}","id":52507,"modified_method":"public void setS3UseHttps(Boolean s3UseHttps) {\n\t\tS3UseHttps = s3UseHttps;\n\t}","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static void setS3SecretKey(String s3SecretKey) {\n\t\tS3SecretKey = s3SecretKey;\n\t}","id":52508,"modified_method":"public void setS3SecretKey(String s3SecretKey) {\n\t\tS3SecretKey = s3SecretKey;\n\t}","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static Boolean getS3UseHttps() {\n\t\treturn S3UseHttps;\n\t}","id":52509,"modified_method":"public Boolean getS3UseHttps() {\n\t\treturn S3UseHttps;\n\t}","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static void setS3Endpoint(String endPoint) {\n\t\tS3Endpoint = endPoint;\n\t}","id":52510,"modified_method":"public void setS3Endpoint(String endPoint) {\n\t\tS3Endpoint = endPoint;\n\t}","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static int getS3EndpointPort() {\n\t\tString[] s3EndpointParts = S3Endpoint.split(\":\");\n\t\tif (s3EndpointParts.length > 1) {\n\t\t\ttry {\n\t\t\t\treturn Integer.parseInt(s3EndpointParts[1]);\n\t\t\t} catch (NumberFormatException e) {\n\t\t\t\treturn 80;\n\t\t\t}\n\t\t} else {\n\t\t\treturn 80; //default http port\n\t\t}\n\t}","id":52511,"modified_method":"public int getS3EndpointPort() {\n\t\tString[] s3EndpointParts = S3Endpoint.split(\":\");\n\t\tif (s3EndpointParts.length > 1) {\n\t\t\ttry {\n\t\t\t\treturn Integer.parseInt(s3EndpointParts[1]);\n\t\t\t} catch (NumberFormatException e) {\n\t\t\t\treturn 80;\n\t\t\t}\n\t\t} else {\n\t\t\treturn 80; //default http port\n\t\t}\n\t}","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static String getS3AccessKey() {\n\t\treturn S3AccessKey;\n\t}","id":52512,"modified_method":"public String getS3AccessKey() {\n\t\treturn S3AccessKey;\n\t}","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static String getS3EndpointHost() {\n\t\tString[] s3EndpointParts = S3Endpoint.split(\":\");\n\t\tif (s3EndpointParts.length > 0) {\n\t\t\treturn s3EndpointParts[0];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}","id":52513,"modified_method":"public String getS3EndpointHost() {\n\t\tString[] s3EndpointParts = S3Endpoint.split(\":\");\n\t\tif (s3EndpointParts.length > 0) {\n\t\t\treturn s3EndpointParts[0];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}","commit_id":"3e44e03bad9aa266afedd88c2e296a21785d1e33","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private ArrowUpLineMarkerInfo(@NotNull PsiElement element, Icon icon, @NotNull MarkerType markerType) {\n      super(element, element.getTextRange(), icon, Pass.UPDATE_ALL, markerType.getTooltip(),\n            markerType.getNavigationHandler(), GutterIconRenderer.Alignment.LEFT);\n    }","id":52514,"modified_method":"private ArrowUpLineMarkerInfo(@NotNull PsiElement element, Icon icon, @NotNull MarkerType markerType) {\n      super(element, element.getTextRange(), icon, Pass.UPDATE_ALL, markerType.getTooltip(),\n            markerType.getNavigationHandler(), GutterIconRenderer.Alignment.LEFT);\n      setNavigateActionTextProvider(markerType.getNavigateActionText());\n    }","commit_id":"8da36e5a6f47dd46cf01128d22317405abd3b5c4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void collectOverridingAccessors(final Set<PsiMethod> methods, Collection<LineMarkerInfo> result) {\n    final Set<PsiMethod> overridden = new HashSet<PsiMethod>();\n    Set<PsiClass> classes = new THashSet<PsiClass>();\n    for (PsiMethod method : methods) {\n      ProgressManager.checkCanceled();\n      final PsiClass parentClass = method.getContainingClass();\n      if (!CommonClassNames.JAVA_LANG_OBJECT.equals(parentClass.getQualifiedName())) {\n        classes.add(parentClass);\n      }\n    }\n\n    for (final PsiClass aClass : classes) {\n      AllOverridingMethodsSearch.search(aClass).forEach(new Processor<Pair<PsiMethod, PsiMethod>>() {\n        @Override\n        public boolean process(final Pair<PsiMethod, PsiMethod> pair) {\n          ProgressManager.checkCanceled();\n\n          final PsiMethod superMethod = pair.getFirst();\n          if (methods.remove(superMethod)) {\n            overridden.add(superMethod);\n          }\n          return !methods.isEmpty();\n        }\n      });\n    }\n\n    if (!methods.isEmpty()) {\n      for (PsiClass aClass : classes) {\n        final PsiMethod interfaceMethod = LambdaUtil.getFunctionalInterfaceMethod(aClass);\n        if (interfaceMethod != null) {\n          if (FunctionalExpressionSearch.search(aClass).findFirst() != null) {\n            overridden.add(interfaceMethod);\n          }\n        }\n      }\n    }\n\n    for (PsiMethod method : overridden) {\n      ProgressManager.checkCanceled();\n      boolean overrides = !method.hasModifierProperty(PsiModifier.ABSTRACT);\n\n      final Icon icon = overrides ? AllIcons.Gutter.OverridenMethod : AllIcons.Gutter.ImplementedMethod;\n      PsiElement range;\n      if (method.isPhysical()) {\n        range = method.getNameIdentifier();\n      }\n      else {\n        final PsiElement navigationElement = method.getNavigationElement();\n        if (navigationElement instanceof PsiNameIdentifierOwner) {\n          range = ((PsiNameIdentifierOwner)navigationElement).getNameIdentifier();\n        }\n        else {\n          range = navigationElement;\n        }\n      }\n      if (range == null) range = method;\n      final MarkerType type = MarkerType.OVERRIDEN_METHOD;\n      LineMarkerInfo info = new LineMarkerInfo<PsiElement>(range, range.getTextRange(),\n                                                           icon, Pass.UPDATE_OVERRIDEN_MARKERS, type.getTooltip(),\n                                                           type.getNavigationHandler(),\n                                                           GutterIconRenderer.Alignment.RIGHT);\n      result.add(info);\n    }\n  }","id":52515,"modified_method":"private static void collectOverridingAccessors(final Set<PsiMethod> methods, Collection<LineMarkerInfo> result) {\n    final Set<PsiMethod> overridden = new HashSet<PsiMethod>();\n    Set<PsiClass> classes = new THashSet<PsiClass>();\n    for (PsiMethod method : methods) {\n      ProgressManager.checkCanceled();\n      final PsiClass parentClass = method.getContainingClass();\n      if (!CommonClassNames.JAVA_LANG_OBJECT.equals(parentClass.getQualifiedName())) {\n        classes.add(parentClass);\n      }\n    }\n\n    for (final PsiClass aClass : classes) {\n      AllOverridingMethodsSearch.search(aClass).forEach(new Processor<Pair<PsiMethod, PsiMethod>>() {\n        @Override\n        public boolean process(final Pair<PsiMethod, PsiMethod> pair) {\n          ProgressManager.checkCanceled();\n\n          final PsiMethod superMethod = pair.getFirst();\n          if (methods.remove(superMethod)) {\n            overridden.add(superMethod);\n          }\n          return !methods.isEmpty();\n        }\n      });\n    }\n\n    if (!methods.isEmpty()) {\n      for (PsiClass aClass : classes) {\n        final PsiMethod interfaceMethod = LambdaUtil.getFunctionalInterfaceMethod(aClass);\n        if (interfaceMethod != null) {\n          if (FunctionalExpressionSearch.search(aClass).findFirst() != null) {\n            overridden.add(interfaceMethod);\n          }\n        }\n      }\n    }\n\n    for (PsiMethod method : overridden) {\n      ProgressManager.checkCanceled();\n      boolean overrides = !method.hasModifierProperty(PsiModifier.ABSTRACT);\n\n      final Icon icon = overrides ? AllIcons.Gutter.OverridenMethod : AllIcons.Gutter.ImplementedMethod;\n      PsiElement range;\n      if (method.isPhysical()) {\n        range = method.getNameIdentifier();\n      }\n      else {\n        final PsiElement navigationElement = method.getNavigationElement();\n        if (navigationElement instanceof PsiNameIdentifierOwner) {\n          range = ((PsiNameIdentifierOwner)navigationElement).getNameIdentifier();\n        }\n        else {\n          range = navigationElement;\n        }\n      }\n      if (range == null) range = method;\n      final MarkerType type = MarkerType.OVERRIDEN_METHOD;\n      LineMarkerInfo<PsiElement> info = new LineMarkerInfo<PsiElement>(range, range.getTextRange(),\n                                                           icon, Pass.UPDATE_OVERRIDEN_MARKERS, type.getTooltip(),\n                                                           type.getNavigationHandler(),\n                                                           GutterIconRenderer.Alignment.RIGHT);\n      info.setNavigateActionTextProvider(type.getNavigateActionText());\n      result.add(info);\n    }\n  }","commit_id":"8da36e5a6f47dd46cf01128d22317405abd3b5c4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public String getLineMarkerTooltip() {\n    T element = getElement();\n    if (element == null || !element.isValid()) return null;\n    if (myTooltipProvider != null) return myTooltipProvider.fun(element);\n    return null;\n  }","id":52516,"modified_method":"@Nullable\n  public String getLineMarkerTooltip() {\n    if (myTooltipProvider == null) return null;\n    T element = getElement();\n    return element == null || !element.isValid() ? null : myTooltipProvider.fun(element);\n  }","commit_id":"8da36e5a6f47dd46cf01128d22317405abd3b5c4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public MarkerType(@NotNull Function<PsiElement, String> tooltip, @NotNull final LineMarkerNavigator navigator) {\n    myTooltip = tooltip;\n    handler = new GutterIconNavigationHandler<PsiElement>() {\n      @Override\n      public void navigate(MouseEvent e, PsiElement elt) {\n        navigator.browse(e, elt);\n      }\n    };\n  }","id":52517,"modified_method":"public MarkerType(@NotNull Function<PsiElement, String> tooltip, @NotNull final LineMarkerNavigator navigator) {\n    this(tooltip, navigator, null);\n  }","commit_id":"8da36e5a6f47dd46cf01128d22317405abd3b5c4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public final T getValue(@NotNull H h) {\n    while (true) {\n      Pair<Long, T> data = h.getUserData(this);\n\n      final long count = h.getManager().getModificationTracker().getJavaStructureModificationCount();\n      if (data == null) {\n        data = new Pair<Long, T>(count, myFunction.fun(h));\n        data = ((UserDataHolderEx)h).putUserDataIfAbsent(this, data);\n      }\n      else if (data.getFirst() != count) {\n        Pair<Long, T> newData = new Pair<Long, T>(count, myFunction.fun(h));\n        if (((UserDataHolderEx)h).replace(this, data, newData)) {\n          data = newData;\n        }\n        else {\n          continue;\n        }\n      }\n\n      return data.getSecond();\n    }\n  }","id":52518,"modified_method":"public final T getValue(@NotNull H h) {\n    T result = getCachedValueOrNull(h);\n    if (result != null) {\n      return result;\n    }\n\n    result = myFunction.fun(h);\n    final long count = h.getManager().getModificationTracker().getJavaStructureModificationCount();\n    h.putUserData(this, new SoftReference<Pair<Long, T>>(new Pair<Long, T>(count, result)));\n    return result;\n  }","commit_id":"03ef367fc520fe7bfb84de1e3cb1c96ab46929a1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public final T getCachedValueOrNull(@NotNull H h) {\n    Pair<Long, T> data = h.getUserData(this);\n    final long count = h.getManager().getModificationTracker().getJavaStructureModificationCount();\n    if (data == null || data.getFirst() != count) {\n      return null;\n    }\n\n    return data.getSecond();\n  }","id":52519,"modified_method":"@Nullable\n  public final T getCachedValueOrNull(@NotNull H h) {\n    SoftReference<Pair<Long, T>> ref = h.getUserData(this);\n    Pair<Long, T> data = ref == null ? null : ref.get();\n    if (data == null || data.getFirst() != h.getManager().getModificationTracker().getJavaStructureModificationCount()) {\n      return null;\n    }\n\n    return data.getSecond();\n  }","commit_id":"03ef367fc520fe7bfb84de1e3cb1c96ab46929a1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public PsiReference[] getReferencesByElement(PsiElement element, String text, int offset, final boolean soft) {\n    return new FileReferenceSet(text, element, offset, ReferenceType.FILE_TYPE, this, true) {\n      protected boolean isSoft() {\n        return soft;\n      }\n\n      @NotNull public Collection<PsiFileSystemItem> computeDefaultContexts() {\n        return getRoots(getElement());\n      }\n\n      public FileReference createFileReference(final TextRange range, final int index, final String text) {\n        return FilePathReferenceProvider.this.createFileReference(this, range, index, text);\n      }\n\n      protected PsiScopeProcessor createProcessor(final List<CandidateInfo> result, List<Class> allowedClasses, List<PsiConflictResolver> resolvers)\n        throws ProcessorRegistry.IncompatibleReferenceTypeException {\n        final PsiScopeProcessor baseProcessor = super.createProcessor(result, allowedClasses, resolvers);\n        return new PsiScopeProcessor() {\n          public boolean execute(PsiElement element, PsiSubstitutor substitutor) {\n            return element instanceof PsiJavaFile && element instanceof PsiCompiledElement\n                   || baseProcessor.execute(element, substitutor);\n          }\n\n          public <T> T getHint(Class<T> hintClass) {\n            return baseProcessor.getHint(hintClass);\n          }\n\n          public void handleEvent(Event event, Object associated) {\n            baseProcessor.handleEvent(event, associated);\n          }\n        };\n      }\n    }.getAllReferences();\n\n  }","id":52520,"modified_method":"@NotNull\n  public PsiReference[] getReferencesByElement(PsiElement element, String text, int offset, final boolean soft) {\n    return new FileReferenceSet(text, element, offset, ReferenceType.FILE_TYPE, this, true) {\n      protected boolean isSoft() {\n        return soft;\n      }\n\n      @NotNull public Collection<PsiFileSystemItem> computeDefaultContexts() {\n        final Module module = ModuleUtil.findModuleForPsiElement(getElement());\n        return getRoots(module, true);\n      }\n\n      public FileReference createFileReference(final TextRange range, final int index, final String text) {\n        return FilePathReferenceProvider.this.createFileReference(this, range, index, text);\n      }\n\n      protected PsiScopeProcessor createProcessor(final List<CandidateInfo> result, List<Class> allowedClasses, List<PsiConflictResolver> resolvers)\n        throws ProcessorRegistry.IncompatibleReferenceTypeException {\n        final PsiScopeProcessor baseProcessor = super.createProcessor(result, allowedClasses, resolvers);\n        return new PsiScopeProcessor() {\n          public boolean execute(PsiElement element, PsiSubstitutor substitutor) {\n            return element instanceof PsiJavaFile && element instanceof PsiCompiledElement\n                   || baseProcessor.execute(element, substitutor);\n          }\n\n          public <T> T getHint(Class<T> hintClass) {\n            return baseProcessor.getHint(hintClass);\n          }\n\n          public void handleEvent(Event event, Object associated) {\n            baseProcessor.handleEvent(event, associated);\n          }\n        };\n      }\n    }.getAllReferences();\n\n  }","commit_id":"53d38467d71b5b9ecc9bc0469c0893412ac652e6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public Collection<PsiFileSystemItem> computeDefaultContexts() {\n    final PsiFile file = getContainingFile();\n    if (file == null) return Collections.emptyList();\n    \n    if (myOptions != null) {\n      final Function<PsiFile, PsiFileSystemItem> value = DEFAULT_PATH_EVALUATOR_OPTION.getValue(myOptions);\n\n      if (value != null) {\n        final PsiFileSystemItem result = value.fun(file);\n        return result == null ? Collections.<PsiFileSystemItem>emptyList() : Collections.singleton(result);\n      }\n    }\n    if (isAbsolutePathReference()) {\n      return ContainerUtil.createMaybeSingletonList(getAbsoluteTopLevelDirLocation(file));\n    }\n\n    final CachedValueProvider<PsiFileSystemItem> myDefaultContextProvider = new CachedValueProvider<PsiFileSystemItem>() {\n      public Result<PsiFileSystemItem> compute() {\n        final PsiFileSystemItem context = getContextByFile(file);\n        return Result.createSingleDependency(context,\n                                             PsiModificationTracker.OUT_OF_CODE_BLOCK_MODIFICATION_COUNT);\n      }\n    };\n    final CachedValuesManager cachedValuesManager = PsiManager.getInstance(myElement.getProject()).getCachedValuesManager();\n    final PsiFileSystemItem value =\n      cachedValuesManager.getCachedValue(file, DEFAULT_CONTEXTS_KEY, myDefaultContextProvider, false);\n    return value == null ? Collections.<PsiFileSystemItem>emptyList() : Collections.singleton(value);\n  }","id":52521,"modified_method":"@NotNull\n  public Collection<PsiFileSystemItem> computeDefaultContexts() {\n    final PsiFile file = getContainingFile();\n    if (file == null) return Collections.emptyList();\n    \n    if (myOptions != null) {\n      final Function<PsiFile, Collection<PsiFileSystemItem>> value = DEFAULT_PATH_EVALUATOR_OPTION.getValue(myOptions);\n\n      if (value != null) {\n        return value.fun(file);\n      }\n    }\n    if (isAbsolutePathReference()) {\n      return getAbsoluteTopLevelDirLocations(file);\n    }\n\n    final CachedValueProvider<PsiFileSystemItem> myDefaultContextProvider = new CachedValueProvider<PsiFileSystemItem>() {\n      public Result<PsiFileSystemItem> compute() {\n        final PsiFileSystemItem context = getContextByFile(file);\n        return Result.createSingleDependency(context,\n                                             PsiModificationTracker.OUT_OF_CODE_BLOCK_MODIFICATION_COUNT);\n      }\n    };\n    final CachedValuesManager cachedValuesManager = PsiManager.getInstance(myElement.getProject()).getCachedValuesManager();\n    final PsiFileSystemItem value =\n      cachedValuesManager.getCachedValue(file, DEFAULT_CONTEXTS_KEY, myDefaultContextProvider, false);\n    return value == null ? Collections.<PsiFileSystemItem>emptyList() : Collections.singleton(value);\n  }","commit_id":"53d38467d71b5b9ecc9bc0469c0893412ac652e6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public static PsiFileSystemItem getAbsoluteTopLevelDirLocation(final @NotNull PsiFile file) {\n    final VirtualFile virtualFile = file.getVirtualFile();\n    if (virtualFile == null) return null;\n\n    final Project project = file.getProject();\n    for (final FileReferenceHelper helper : FileReferenceHelperRegistrar.getHelpers()) {\n      final PsiFileSystemItem element = helper.findRoot(project, virtualFile);\n      if (element != null) {\n        return element;\n      }\n    }\n\n    return null;\n  }","id":52522,"modified_method":"@NotNull\n  public static Collection<PsiFileSystemItem> getAbsoluteTopLevelDirLocations(final @NotNull PsiFile file) {\n    final Module module = ModuleUtil.findModuleForPsiElement(file);\n    if (module == null) return Collections.emptyList();\n\n    for (final FileReferenceHelper helper : FileReferenceHelperRegistrar.getHelpers()) {\n      final Collection<PsiFileSystemItem> roots = helper.getRoots(module);\n      if (roots.size() > 0) {\n        return roots;\n      }\n    }\n\n    return Collections.emptyList();\n  }","commit_id":"53d38467d71b5b9ecc9bc0469c0893412ac652e6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean createReferences(@NotNull final PsiElement psiElement, @NotNull final List<PsiReference> references, final boolean soft) {\n    FileReferenceSet set = FileReferenceSet.createSet(psiElement, soft, myEndingSlashNotAllowed, true);\n    if (set == null) {\n      return false;\n    }\n    if (!myRelativePathsAllowed) {\n      set.addCustomization(\n        FileReferenceSet.DEFAULT_PATH_EVALUATOR_OPTION,\n        new Function<PsiFile, PsiFileSystemItem>() {\n          @Nullable\n          public PsiFileSystemItem fun(final PsiFile file) {\n            return FileReferenceSet.getAbsoluteTopLevelDirLocation(file\n            );\n          }\n        }\n      );\n    }\n    Collections.addAll(references, set.getAllReferences());\n    return true;\n  }","id":52523,"modified_method":"public boolean createReferences(@NotNull final PsiElement psiElement, @NotNull final List<PsiReference> references, final boolean soft) {\n    FileReferenceSet set = FileReferenceSet.createSet(psiElement, soft, myEndingSlashNotAllowed, true);\n    if (set == null) {\n      return false;\n    }\n    if (!myRelativePathsAllowed) {\n      set.addCustomization(FileReferenceSet.DEFAULT_PATH_EVALUATOR_OPTION, FileReferenceSet.ABSOLUTE_TOP_LEVEL);\n    }\n    Collections.addAll(references, set.getAllReferences());\n    return true;\n  }","commit_id":"53d38467d71b5b9ecc9bc0469c0893412ac652e6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testAddPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\t\tselenium.waitForElementPresent(\"//a[@id='addPage']\");\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Session Expiration Test Page\"));\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Session Expiration Test Page\");\n\t\tselenium.clickAt(\"link=Session Expiration Test Page\",\n\t\t\tRuntimeVariables.replace(\"Session Expiration Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":52524,"modified_method":"public void testAddPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='addPage']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Page\"),\n\t\t\tselenium.getText(\"//a[@id='addPage']\"));\n\t\tselenium.clickAt(\"//a[@id='addPage']\", RuntimeVariables.replace(\"Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Session Expiration Test Page\"));\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Session Expiration Test Page\");\n\t\tselenium.clickAt(\"link=Session Expiration Test Page\",\n\t\t\tRuntimeVariables.replace(\"Session Expiration Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"c048c02075ac9860b0cecbc11b3b6b48fa47fa96","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfirmNoSessionExpire() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tThread.sleep(30000);\n\t\tThread.sleep(30000);\n\t\tselenium.waitForElementNotPresent(\"//input[@value='Extend']\");\n\t\tThread.sleep(30000);\n\t\tThread.sleep(30000);\n\t\tassertTrue(selenium.isElementNotPresent(\"//input[@value='Extend']\"));\n\t\tselenium.waitForElementPresent(\"link=Session Expiration Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Session Expiration Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":52525,"modified_method":"public void testConfirmNoSessionExpire() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Session Expiration Test Page\",\n\t\t\tRuntimeVariables.replace(\"Session Expiration Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(75000);\n\t\tassertTrue(selenium.isElementNotPresent(\"//input[@value='Extend']\"));\n\t\tselenium.clickAt(\"link=Session Expiration Test Page\",\n\t\t\tRuntimeVariables.replace(\"Session Expiration Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"link=Sign Out\"));\n\t}","commit_id":"c048c02075ac9860b0cecbc11b3b6b48fa47fa96","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfirmSessionExpire() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tThread.sleep(30000);\n\t\tThread.sleep(15000);\n\t\tselenium.waitForElementPresent(\"//input[@value='Extend']\");\n\t\tThread.sleep(30000);\n\t\tThread.sleep(30000);\n\t\tselenium.waitForTextPresent(\n\t\t\t\"Warning! Due to inactivity, your session has expired.\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForElementPresent(\"link=Session Expiration Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Session Expiration Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Sign In\"),\n\t\t\tselenium.getText(\"sign-in\"));\n\t}","id":52526,"modified_method":"public void testConfirmSessionExpire() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Session Expiration Test Page\",\n\t\t\tRuntimeVariables.replace(\"Session Expiration Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(60000);\n\t\tselenium.waitForVisible(\"//input[@value='Extend']\");\n\t\tThread.sleep(60000);\n\t\tselenium.waitForVisible(\"//div[@class='popup-alert-warning']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Warning! Due to inactivity, your session has expired. Please save any data you may have entered before refreshing the page.\"),\n\t\t\tselenium.getText(\"//div[@class='popup-alert-warning']\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"link=Session Expiration Test Page\",\n\t\t\tRuntimeVariables.replace(\"Session Expiration Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"link=Sign In\"));\n\t}","commit_id":"c048c02075ac9860b0cecbc11b3b6b48fa47fa96","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testExtendSession() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForElementPresent(\"link=Session Expiration Test Page\");\n\t\tThread.sleep(30000);\n\t\tThread.sleep(15000);\n\t\tselenium.waitForVisible(\"//input[@value='Extend']\");\n\t\tselenium.click(\"//input[@value='Extend']\");\n\t\tselenium.waitForNotVisible(\"//input[@value='Extend']\");\n\t}","id":52527,"modified_method":"public void testExtendSession() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Session Expiration Test Page\",\n\t\t\tRuntimeVariables.replace(\"Session Expiration Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(60000);\n\t\tselenium.waitForVisible(\"//input[@value='Extend']\");\n\t\tselenium.clickAt(\"//input[@value='Extend']\",\n\t\t\tRuntimeVariables.replace(\"Extend\"));\n\t\tselenium.waitForNotVisible(\"//input[@value='Extend']\");\n\t}","commit_id":"c048c02075ac9860b0cecbc11b3b6b48fa47fa96","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(SignInWithOutRememberMeTest.class);\n\t\ttestSuite.addTestSuite(ExtendSessionTest.class);\n\t\ttestSuite.addTestSuite(ConfirmSessionExpireTest.class);\n\t\ttestSuite.addTestSuite(RememberMeLoginTest.class);\n\t\ttestSuite.addTestSuite(ConfirmNoSessionExpireTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","id":52528,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(SignInWithOutRememberMeTest.class);\n\t\ttestSuite.addTestSuite(ExtendSessionTest.class);\n\t\ttestSuite.addTestSuite(ConfirmSessionExpireTest.class);\n\t\ttestSuite.addTestSuite(SignInTest.class);\n\t\ttestSuite.addTestSuite(ConfirmNoSessionExpireTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"c048c02075ac9860b0cecbc11b3b6b48fa47fa96","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSignInWithOutRememberMe() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForElementPresent(\"link=Sign Out\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"link=Sign In\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Sign In']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"link=Session Expiration Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Session Expiration Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":52529,"modified_method":"public void testSignInWithOutRememberMe() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"c048c02075ac9860b0cecbc11b3b6b48fa47fa96","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddFeed() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'http://localhost:8080/html/themes/classic/js/main.js')]\");\n\t\tselenium.waitForVisible(\"//div[2]/span/span/button[1]\");\n\t\tselenium.click(\"//div[2]/span/span/button[1]\");\n\t\tselenium.waitForVisible(\"//input[@id='_86_url3']\");\n\t\tselenium.type(\"//input[@id='_86_url3']\",\n\t\t\tRuntimeVariables.replace(\"http://digg.com/rss/topstories.xml\"));\n\t\tselenium.select(\"//select[@id='_86_entriesPerFeed']\",\n\t\t\tRuntimeVariables.replace(\"4\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@href='http://digg.com/rss/topstories.xml']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Digg Top Stories(Opens New Window)\"),\n\t\t\tselenium.getText(\"//a[@href='http://digg.com/rss/topstories.xml']\"));\n\t}","id":52530,"modified_method":"public void testAddFeed() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//button[contains(@class,'add-row')]/span\");\n\t\tselenium.click(\"//button[contains(@class,'add-row')]/span\");\n\t\tselenium.waitForVisible(\"//input[@id='_86_url3']\");\n\t\tselenium.type(\"//input[@id='_86_url3']\",\n\t\t\tRuntimeVariables.replace(\"http://digg.com/rss/topstories.xml\"));\n\t\tselenium.select(\"//select[@id='_86_entriesPerFeed']\",\n\t\t\tRuntimeVariables.replace(\"4\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@href='http://digg.com/rss/topstories.xml']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Digg Top Stories(Opens New Window)\"),\n\t\t\tselenium.getText(\"//a[@href='http://digg.com/rss/topstories.xml']\"));\n\t}","commit_id":"f5cf2fd6c505cc5b90e16e200cf5106fe2947b26","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletRSS2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"r\"));\n\t\tselenium.waitForVisible(\"//li[@title='RSS']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='RSS']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.waitForVisible(\"//div[2]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/section\"));\n\t}","id":52531,"modified_method":"public void testAddPortletRSS2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"r\"));\n\t\tselenium.waitForVisible(\"//li[@title='RSS']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='RSS']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//div[1]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[1]/section\"));\n\t\tselenium.waitForVisible(\"//div[2]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/section\"));\n\t}","commit_id":"f5cf2fd6c505cc5b90e16e200cf5106fe2947b26","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletRSS3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"r\"));\n\t\tselenium.waitForVisible(\"//li[@title='RSS']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='RSS']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.waitForVisible(\"//div[2]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/section\"));\n\t\tselenium.waitForVisible(\"//div[3]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[3]/section\"));\n\t}","id":52532,"modified_method":"public void testAddPortletRSS3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"r\"));\n\t\tselenium.waitForVisible(\"//li[@title='RSS']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='RSS']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//div[1]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[1]/section\"));\n\t\tselenium.waitForVisible(\"//div[2]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/section\"));\n\t\tselenium.waitForVisible(\"//div[3]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[3]/section\"));\n\t}","commit_id":"f5cf2fd6c505cc5b90e16e200cf5106fe2947b26","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemoveWCWebContentFooterRSS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tselenium.waitForVisible(\"//div[@class='portlet-content']/div/div/p\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Content\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-content']/div/div/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'http://localhost:8080/html/themes/classic/js/main.js')]\");\n\t\tselenium.waitForVisible(\"xPath=(//input[@id='_86_removeButton'])[2]\");\n\t\tselenium.clickAt(\"xPath=(//input[@id='_86_removeButton'])[2]\",\n\t\t\tRuntimeVariables.replace(\"Remove\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Content\"));\n\t}","id":52533,"modified_method":"public void testRemoveWCWebContentFooterRSS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tselenium.waitForVisible(\"//div[@class='portlet-content']/div/div/p\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Content\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-content']/div/div/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"xPath=(//input[@id='_86_removeButton'])[2]\");\n\t\tselenium.clickAt(\"xPath=(//input[@id='_86_removeButton'])[2]\",\n\t\t\tRuntimeVariables.replace(\"Remove Footer Web Content\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Title\"));\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Content\"));\n\t}","commit_id":"f5cf2fd6c505cc5b90e16e200cf5106fe2947b26","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemoveWCWebContentHeaderRSS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'http://localhost:8080/html/themes/classic/js/main.js')]\");\n\t\tselenium.waitForVisible(\"xPath=(//input[@id='_86_removeButton'])[1]\");\n\t\tselenium.clickAt(\"xPath=(//input[@id='_86_removeButton'])[1]\",\n\t\t\tRuntimeVariables.replace(\"Remove\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Content\"));\n\t}","id":52534,"modified_method":"public void testRemoveWCWebContentHeaderRSS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"xPath=(//input[@id='_86_removeButton'])[1]\");\n\t\tselenium.clickAt(\"xPath=(//input[@id='_86_removeButton'])[1]\",\n\t\t\tRuntimeVariables.replace(\"Remove Header Web Content\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Title\"));\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Content\"));\n\t}","commit_id":"f5cf2fd6c505cc5b90e16e200cf5106fe2947b26","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectWCWebContentFooterRSS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'http://localhost:8080/html/themes/classic/js/main.js')]\");\n\t\tselenium.waitForVisible(\"xPath=(//input[@id='_86_selectButton'])[2]\");\n\t\tselenium.clickAt(\"xPath=(//input[@id='_86_selectButton'])[2]\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//td[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Footer Web Content WC WebContent Title\"),\n\t\t\tselenium.getText(\"//div[2]/div[2]/fieldset/div/div[2]/div\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-content']/div/div/p\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Content\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-content']/div/div/p\"));\n\t}","id":52535,"modified_method":"public void testSelectWCWebContentFooterRSS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"xPath=(//input[@id='_86_selectButton'])[2]\");\n\t\tselenium.clickAt(\"xPath=(//input[@id='_86_selectButton'])[2]\",\n\t\t\tRuntimeVariables.replace(\"Select Footer Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//td[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Footer Web Content WC WebContent Title\"),\n\t\t\tselenium.getText(\"//div[2]/div[2]/fieldset/div/div[2]/div\"));\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-content']/div/div/p\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Content\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-content']/div/div/p\"));\n\t}","commit_id":"f5cf2fd6c505cc5b90e16e200cf5106fe2947b26","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectWCWebContentHeaderRSS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'http://localhost:8080/html/themes/classic/js/main.js')]\");\n\t\tselenium.waitForVisible(\"xPath=(//input[@id='_86_selectButton'])[1]\");\n\t\tselenium.clickAt(\"xPath=(//input[@id='_86_selectButton'])[1]\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//td[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Header Web Content WC WebContent Title\"),\n\t\t\tselenium.getText(\"//div[2]/div[2]/fieldset/div/div[1]/div\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-content']/div/div/p\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Content\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-content']/div/div/p\"));\n\t}","id":52536,"modified_method":"public void testSelectWCWebContentHeaderRSS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"xPath=(//input[@id='_86_selectButton'])[1]\");\n\t\tselenium.clickAt(\"xPath=(//input[@id='_86_selectButton'])[1]\",\n\t\t\tRuntimeVariables.replace(\"Select Header Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//td[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Header Web Content WC WebContent Title\"),\n\t\t\tselenium.getText(\"//div[2]/div[2]/fieldset/div/div[1]/div\"));\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-content']/div/div/p\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Content\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-content']/div/div/p\"));\n\t}","commit_id":"f5cf2fd6c505cc5b90e16e200cf5106fe2947b26","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void openPopUpMenu(View v,final AudioVideoNotesPlugin.Recording recording) {\n\t\tboolean light = getMyApplication().getSettings().isLightContent();\n\t\tfinal PopupMenu optionsMenu = new PopupMenu(getActivity(), v);\n\t\tDirectionsDialogs.setupPopUpMenuIcon(optionsMenu);\n\t\tMenuItem item;\n\t\tboolean isPhoto = recording.isPhoto();\n\t\tfinal int playIcon;\n\t\tif(isPhoto){\n\t\t\tplayIcon = light ? R.drawable.ic_action_eye_light : R.drawable.ic_action_eye_dark;\n\t\t} else {\n\t\t\tplayIcon = light ? R.drawable.ic_play_light : R.drawable.ic_play_dark;\n\t\t}\n\t\titem = optionsMenu.getMenu().add(isPhoto ?  R.string.watch : R.string.recording_context_menu_play)\n\t\t\t\t.setIcon(playIcon);\n\t\titem.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(MenuItem item) {\n\t\t\t\tplugin.playRecording(getActivity(), recording);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\titem = optionsMenu.getMenu().add(R.string.search_shown_on_map)\n\t\t\t\t.setIcon(light ? R.drawable.ic_action_map_marker_light : R.drawable.ic_action_map_marker_dark);\n\t\titem.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(MenuItem item) {\n\t\t\t\tgetMyApplication().getSettings().setMapLocationToShow(recording.getLatitude(), recording.getLongitude(), 15, null, recording.getName(),\n\t\t\t\t\t\trecording); //$NON-NLS-1$\n\t\t\t\tMapActivity.launchMapActivityMoveToTop(getActivity());\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\titem = optionsMenu.getMenu().add(R.string.share_fav)\n\t\t\t\t.setIcon(light ? R.drawable.ic_action_gshare_light : R.drawable.ic_action_gshare_dark);\n\t\titem.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(MenuItem item) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\titem = optionsMenu.getMenu().add(R.string.local_index_mi_rename)\n\t\t\t\t.setIcon(light ? R.drawable.ic_action_edit_light : R.drawable.ic_action_edit_dark);\n\t\titem.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(MenuItem item) {\n\t\t\t\teditNote(recording);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\titem = optionsMenu.getMenu().add(R.string.recording_context_menu_delete)\n\t\t\t\t.setIcon(light ? R.drawable.ic_action_delete_light : R.drawable.ic_action_delete_dark);\n\t\titem.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(MenuItem item) {\n\t\t\t\tAlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\n\t\t\t\tbuilder.setMessage(R.string.recording_delete_confirm);\n\t\t\t\tbuilder.setPositiveButton(R.string.default_buttons_yes, new DialogInterface.OnClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\tplugin.deleteRecording(recording);\n\t\t\t\t\t\tlistAdapter.remove(recording);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tbuilder.setNegativeButton(R.string.default_buttons_cancel, null);\n\t\t\t\tbuilder.show();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\toptionsMenu.show();\n\t}","id":52537,"modified_method":"private void openPopUpMenu(View v,final AudioVideoNotesPlugin.Recording recording) {\n\t\tboolean light = getMyApplication().getSettings().isLightContent();\n\t\tfinal PopupMenu optionsMenu = new PopupMenu(getActivity(), v);\n\t\tDirectionsDialogs.setupPopUpMenuIcon(optionsMenu);\n\t\tMenuItem item;\n\t\tboolean isPhoto = recording.isPhoto();\n\t\tfinal int playIcon;\n\t\tif(isPhoto){\n\t\t\tplayIcon = light ? R.drawable.ic_action_eye_light : R.drawable.ic_action_eye_dark;\n\t\t} else {\n\t\t\tplayIcon = light ? R.drawable.ic_play_light : R.drawable.ic_play_dark;\n\t\t}\n\t\titem = optionsMenu.getMenu().add(isPhoto ?  R.string.watch : R.string.recording_context_menu_play)\n\t\t\t\t.setIcon(playIcon);\n\t\titem.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(MenuItem item) {\n\t\t\t\tplugin.playRecording(getActivity(), recording);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\titem = optionsMenu.getMenu().add(R.string.search_shown_on_map)\n\t\t\t\t.setIcon(light ? R.drawable.ic_action_map_marker_light : R.drawable.ic_action_map_marker_dark);\n\t\titem.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(MenuItem item) {\n\t\t\t\tgetMyApplication().getSettings().setMapLocationToShow(recording.getLatitude(), recording.getLongitude(), 15, null, recording.getName(),\n\t\t\t\t\t\trecording); //$NON-NLS-1$\n\t\t\t\tMapActivity.launchMapActivityMoveToTop(getActivity());\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\titem = optionsMenu.getMenu().add(R.string.share_fav)\n\t\t\t\t.setIcon(light ? R.drawable.ic_action_gshare_light : R.drawable.ic_action_gshare_dark);\n\t\titem.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(MenuItem item) {\n\t\t\t\tIntent sharingIntent = new Intent(Intent.ACTION_SEND);\n\t\t\t\tif (recording.isPhoto()) {\n\t\t\t\t\tUri screenshotUri = Uri.parse(recording.file.getAbsolutePath());\n\t\t\t\t\tsharingIntent.setType(\"image/*\");\n\t\t\t\t\tsharingIntent.putExtra(Intent.EXTRA_STREAM, screenshotUri);\n\t\t\t\t} else if (recording.isAudio()) {\n\t\t\t\t\tUri audioUri = Uri.parse(recording.file.getAbsolutePath());\n\t\t\t\t\tsharingIntent.setType(\"audio/*\");\n\t\t\t\t\tsharingIntent.putExtra(Intent.EXTRA_STREAM, audioUri);\n\t\t\t\t} else if (recording.isVideo()) {\n\t\t\t\t\tUri videoUri = Uri.parse(recording.file.getAbsolutePath());\n\t\t\t\t\tsharingIntent.setType(\"video/*\");\n\t\t\t\t\tsharingIntent.putExtra(Intent.EXTRA_STREAM, videoUri);\n\t\t\t\t}\n\t\t\t\tstartActivity(Intent.createChooser(sharingIntent, getString(R.string.share_note)));\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\titem = optionsMenu.getMenu().add(R.string.local_index_mi_rename)\n\t\t\t\t.setIcon(light ? R.drawable.ic_action_edit_light : R.drawable.ic_action_edit_dark);\n\t\titem.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(MenuItem item) {\n\t\t\t\teditNote(recording);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\titem = optionsMenu.getMenu().add(R.string.recording_context_menu_delete)\n\t\t\t\t.setIcon(light ? R.drawable.ic_action_delete_light : R.drawable.ic_action_delete_dark);\n\t\titem.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(MenuItem item) {\n\t\t\t\tAlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\n\t\t\t\tbuilder.setMessage(R.string.recording_delete_confirm);\n\t\t\t\tbuilder.setPositiveButton(R.string.default_buttons_yes, new DialogInterface.OnClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\tplugin.deleteRecording(recording);\n\t\t\t\t\t\tlistAdapter.remove(recording);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tbuilder.setNegativeButton(R.string.default_buttons_cancel, null);\n\t\t\t\tbuilder.show();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\toptionsMenu.show();\n\t}","commit_id":"e3bfdc912dcc74c58e6a75711bbee853ecab0205","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic boolean onCreateOptionsMenu(Menu menu) {\n\t\tboolean light = getMyApplication().getSettings().isLightActionBar();\n\t\tsearchPOILevel = menu.add(0, SEARCH_MORE, 0, R.string.search_POI_level_btn).setShowAsActionFlags(\n\t\t\t\tMenuItem.SHOW_AS_ACTION_ALWAYS | MenuItem.SHOW_AS_ACTION_WITH_TEXT);\n\t\tsearchPOILevel.setOnMenuItemClickListener(new OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem item) {\n\n\t\t\t\tString query = searchFilter.getText().toString().trim();\n\t\t\t\tif (query.length() < 2 && (isNameFinderFilter() || isSearchByNameFilter())) {\n\t\t\t\t\tAccessibleToast.makeText(SearchPOIActivity.this, R.string.poi_namefinder_query_empty, Toast.LENGTH_LONG).show();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (isNameFinderFilter() && !Algorithms.objectEquals(((NameFinderPoiFilter) filter).getQuery(), query)) {\n\t\t\t\t\tfilter.clearPreviousZoom();\n\t\t\t\t\t((NameFinderPoiFilter) filter).setQuery(query);\n\t\t\t\t\trunNewSearchQuery(SearchAmenityRequest.buildRequest(location, SearchAmenityRequest.NEW_SEARCH_INIT));\n\t\t\t\t} else if (isSearchByNameFilter() && !Algorithms.objectEquals(((SearchByNameFilter) filter).getQuery(), query)) {\n\t\t\t\t\tshowFilterItem.setVisible(false);\n\t\t\t\t\tfilter.clearPreviousZoom();\n\t\t\t\t\tshowPoiCategoriesByNameFilter(query, location);\n\t\t\t\t\t((SearchByNameFilter) filter).setQuery(query);\n\t\t\t\t\trunNewSearchQuery(SearchAmenityRequest.buildRequest(location, SearchAmenityRequest.NEW_SEARCH_INIT));\n\t\t\t\t} else {\n\t\t\t\t\trunNewSearchQuery(SearchAmenityRequest.buildRequest(location, SearchAmenityRequest.SEARCH_FURTHER));\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\tupdateSearchPoiTextButton(false);\n\t\t\n\t\tshowFilterItem = menu.add(0, FILTER, 0, R.string.search_poi_filter).setShowAsActionFlags(\n\t\t\t\tMenuItem.SHOW_AS_ACTION_ALWAYS | MenuItem.SHOW_AS_ACTION_WITH_TEXT);\n\t\tshowFilterItem = showFilterItem.setIcon(light ? R.drawable.ic_action_filter_light: R.drawable.ic_action_filter_dark);\n\t\tshowFilterItem.setOnMenuItemClickListener(new OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem item) {\n\t\t\t\tif(isSearchByNameFilter()){\n\t\t\t\t\tIntent newIntent = new Intent(SearchPOIActivity.this, EditPOIFilterActivity.class);\n\t\t\t\t\tnewIntent.putExtra(EditPOIFilterActivity.AMENITY_FILTER, PoiFilter.CUSTOM_FILTER_ID);\n\t\t\t\t\tif(location != null) {\n\t\t\t\t\t\tnewIntent.putExtra(EditPOIFilterActivity.SEARCH_LAT, location.getLatitude());\n\t\t\t\t\t\tnewIntent.putExtra(EditPOIFilterActivity.SEARCH_LON, location.getLongitude());\n\t\t\t\t\t}\n\t\t\t\t\tstartActivity(newIntent);\n\t\t\t\t} else {\n\t\t\t\t\tif (searchFilterLayout.getVisibility() == View.GONE) {\n\t\t\t\t\t\tsearchFilterLayout.setVisibility(View.VISIBLE);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsearchFilter.setText(\"\"); //$NON-NLS-1$\n\t\t\t\t\t\tsearchFilterLayout.setVisibility(View.GONE);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\tupdateShowFilterItem();\n\t\tif(isSearchByNameFilter() || isNameFinderFilter()) {\n\t\t\tshowFilterItem.setVisible(false);\n\t\t}\n\t\t\n\n\t\tshowOnMapItem = menu.add(0, SHOW_ON_MAP, 0, R.string.search_shown_on_map).setShowAsActionFlags(\n\t\t\t\tMenuItem.SHOW_AS_ACTION_ALWAYS | MenuItem.SHOW_AS_ACTION_WITH_TEXT);\n\t\tshowOnMapItem = showOnMapItem.setIcon(light ? R.drawable.ic_action_map_marker_light : R.drawable.ic_action_map_marker_dark);\n\t\tshowOnMapItem.setOnMenuItemClickListener(new OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem item) {\n\t\t\t\tif (searchFilter.getVisibility() == View.VISIBLE) {\n\t\t\t\t\tfilter.setNameFilter(searchFilter.getText().toString());\n\t\t\t\t}\n\t\t\t\tsettings.setPoiFilterForMap(filter.getFilterId());\n\t\t\t\tsettings.SHOW_POI_OVER_MAP.set(true);\n\t\t\t\tif (location != null) {\n\t\t\t\t\tsettings.setMapLocationToShow(location.getLatitude(), location.getLongitude(), 15);\n\t\t\t\t}\n\t\t\t\tMapActivity.launchMapActivityMoveToTop(SearchPOIActivity.this);\n\t\t\t\treturn true;\n\n\t\t\t}\n\t\t});\n\t\treturn true;\n\t}","id":52538,"modified_method":"@Override\n\tpublic boolean onCreateOptionsMenu(Menu menu) {\n\t\tboolean light = getMyApplication().getSettings().isLightActionBar();\n\t\tsearchPOILevel = menu.add(0, SEARCH_MORE, 0, R.string.search_POI_level_btn).setShowAsActionFlags(\n\t\t\t\tMenuItem.SHOW_AS_ACTION_ALWAYS | MenuItem.SHOW_AS_ACTION_WITH_TEXT);\n\t\tsearchPOILevel.setOnMenuItemClickListener(new OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem item) {\n\n\t\t\t\treturn searchMore();\n\t\t\t}\n\n\t\t});\n\t\tupdateSearchPoiTextButton(false);\n\t\t\n\t\tshowFilterItem = menu.add(0, FILTER, 0, R.string.search_poi_filter).setShowAsActionFlags(\n\t\t\t\tMenuItem.SHOW_AS_ACTION_ALWAYS | MenuItem.SHOW_AS_ACTION_WITH_TEXT);\n\t\tshowFilterItem = showFilterItem.setIcon(light ? R.drawable.ic_action_filter_light: R.drawable.ic_action_filter_dark);\n\t\tshowFilterItem.setOnMenuItemClickListener(new OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem item) {\n\t\t\t\tif(isSearchByNameFilter()){\n\t\t\t\t\tIntent newIntent = new Intent(SearchPOIActivity.this, EditPOIFilterActivity.class);\n\t\t\t\t\tnewIntent.putExtra(EditPOIFilterActivity.AMENITY_FILTER, PoiFilter.CUSTOM_FILTER_ID);\n\t\t\t\t\tif(location != null) {\n\t\t\t\t\t\tnewIntent.putExtra(EditPOIFilterActivity.SEARCH_LAT, location.getLatitude());\n\t\t\t\t\t\tnewIntent.putExtra(EditPOIFilterActivity.SEARCH_LON, location.getLongitude());\n\t\t\t\t\t}\n\t\t\t\t\tstartActivity(newIntent);\n\t\t\t\t} else {\n\t\t\t\t\tif (searchFilterLayout.getVisibility() == View.GONE) {\n\t\t\t\t\t\tsearchFilterLayout.setVisibility(View.VISIBLE);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsearchFilter.setText(\"\"); //$NON-NLS-1$\n\t\t\t\t\t\tsearchFilterLayout.setVisibility(View.GONE);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\tupdateShowFilterItem();\n\t\tif(isSearchByNameFilter() || isNameFinderFilter()) {\n\t\t\tshowFilterItem.setVisible(false);\n\t\t}\n\t\t\n\n\t\tshowOnMapItem = menu.add(0, SHOW_ON_MAP, 0, R.string.search_shown_on_map).setShowAsActionFlags(\n\t\t\t\tMenuItem.SHOW_AS_ACTION_ALWAYS | MenuItem.SHOW_AS_ACTION_WITH_TEXT);\n\t\tshowOnMapItem = showOnMapItem.setIcon(light ? R.drawable.ic_action_map_marker_light : R.drawable.ic_action_map_marker_dark);\n\t\tshowOnMapItem.setOnMenuItemClickListener(new OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem item) {\n\t\t\t\tif (searchFilter.getVisibility() == View.VISIBLE) {\n\t\t\t\t\tfilter.setNameFilter(searchFilter.getText().toString());\n\t\t\t\t}\n\t\t\t\tsettings.setPoiFilterForMap(filter.getFilterId());\n\t\t\t\tsettings.SHOW_POI_OVER_MAP.set(true);\n\t\t\t\tif (location != null) {\n\t\t\t\t\tsettings.setMapLocationToShow(location.getLatitude(), location.getLongitude(), 15);\n\t\t\t\t}\n\t\t\t\tMapActivity.launchMapActivityMoveToTop(SearchPOIActivity.this);\n\t\t\t\treturn true;\n\n\t\t\t}\n\t\t});\n\t\treturn true;\n\t}","commit_id":"c111a7701837e9ec8fdb51173ab09689389a9fff","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\t\tprotected void onPreExecute() {\n\t\t\tgetSherlock().setProgressBarIndeterminateVisibility(true);\n\t\t\tif(searchPOILevel != null) {\n\t\t\t\tsearchPOILevel.setEnabled(false);\n\t\t\t}\n\t\t\texistingObjects = new TLongHashSet();\n\t\t\tupdateExisting = new TLongHashSet();\n\t\t\tif(request.type == SearchAmenityRequest.NEW_SEARCH_INIT){\n\t\t\t\tamenityAdapter.clear();\n\t\t\t} else if (request.type == SearchAmenityRequest.SEARCH_FURTHER) {\n\t\t\t\tList<Amenity> list = amenityAdapter.getOriginalAmenityList();\n\t\t\t\tfor (Amenity a : list) {\n\t\t\t\t\tupdateExisting.add(getAmenityId(a));\n\t\t\t\t}\n\t\t\t}\n\t\t}","id":52539,"modified_method":"@Override\n\t\tprotected void onPreExecute() {\n\t\t\tgetSherlock().setProgressBarIndeterminateVisibility(true);\n\t\t\tif(searchPOILevel != null) {\n\t\t\t\tsearchPOILevel.setEnabled(false);\n\t\t\t}\n\t\t\tsearchFooterButton.setEnabled(false);\n\t\t\texistingObjects = new TLongHashSet();\n\t\t\tupdateExisting = new TLongHashSet();\n\t\t\tif(request.type == SearchAmenityRequest.NEW_SEARCH_INIT){\n\t\t\t\tamenityAdapter.clear();\n\t\t\t} else if (request.type == SearchAmenityRequest.SEARCH_FURTHER) {\n\t\t\t\tList<Amenity> list = amenityAdapter.getOriginalAmenityList();\n\t\t\t\tfor (Amenity a : list) {\n\t\t\t\t\tupdateExisting.add(getAmenityId(a));\n\t\t\t\t}\n\t\t\t}\n\t\t}","commit_id":"c111a7701837e9ec8fdb51173ab09689389a9fff","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private void updateSearchPoiTextButton(boolean taskAlreadyFinished){\n\t\tif (searchPOILevel != null) {\n\t\t\tif (location == null) {\n\t\t\t\tsearchPOILevel.setTitle(R.string.search_poi_location);\n\t\t\t\tsearchPOILevel.setEnabled(false);\n\t\t\t} else if (!isNameFinderFilter() && !isSearchByNameFilter()) {\n\t\t\t\tsearchPOILevel.setTitle(R.string.search_POI_level_btn);\n\t\t\t\tsearchPOILevel.setEnabled((taskAlreadyFinished || currentSearchTask.getStatus() != Status.RUNNING) && filter.isSearchFurtherAvailable());\n\t\t\t} else if(filter != null){\n\t\t\t\tsearchPOILevel.setTitle(R.string.search_button);\n\t\t\t\tsearchPOILevel.setEnabled((taskAlreadyFinished || currentSearchTask.getStatus() != Status.RUNNING) && filter.isSearchFurtherAvailable());\n\t\t\t} else {\n\t\t\t\tsearchPOILevel.setTitle(R.string.search_POI_level_btn);\n\t\t\t\tsearchPOILevel.setEnabled(false);\n\t\t\t}\n\t\t}\n\t}","id":52540,"modified_method":"private void updateSearchPoiTextButton(boolean taskAlreadyFinished) {\n\t\tboolean enabled = false;\n\t\tint title = R.string.search_POI_level_btn;\n\n\t\tif (location == null) {\n\t\t\ttitle = R.string.search_poi_location;\n\t\t\tenabled = false;\n\t\t} else if (!isNameFinderFilter() && !isSearchByNameFilter()) {\n\t\t\ttitle = R.string.search_POI_level_btn;\n\t\t\tenabled = (taskAlreadyFinished || currentSearchTask.getStatus() != Status.RUNNING) && filter.isSearchFurtherAvailable();\n\t\t} else if (filter != null) {\n\t\t\ttitle = R.string.search_button;\n\t\t\tenabled = (taskAlreadyFinished || currentSearchTask.getStatus() != Status.RUNNING) && filter.isSearchFurtherAvailable();\n\t\t}\n\t\tif (searchPOILevel != null) {\n\t\t\tsearchPOILevel.setEnabled(enabled);\n\t\t\tsearchPOILevel.setTitle(title);\n\t\t}\n\t\tif(ResourcesCompat.getResources_getBoolean(this, R.bool.abs__split_action_bar_is_narrow)) {\n\t\t\tsearchFooterButton.setVisibility(View.GONE);\n\t\t} else {\n\t\t\tsearchFooterButton.setVisibility(View.VISIBLE);\n\t\t\tsearchFooterButton.setEnabled(enabled);\n\t\t\tsearchFooterButton.setText(title);\n\t\t}\n\t}","commit_id":"c111a7701837e9ec8fdb51173ab09689389a9fff","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic void onCreate(Bundle icicle) {\n\t\trequestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);\n\t\tsuper.onCreate(icicle);\n\t\tsetContentView(R.layout.searchpoi);\n\t\t\n\t\tgetSupportActionBar().setTitle(R.string.searchpoi_activity);\n\t\tgetSupportActionBar().setIcon(R.drawable.tab_search_poi_icon);\n\t\tgetSherlock().setProgressBarIndeterminateVisibility(false);\n\t\t\n\t\tapp = (OsmandApplication)getApplication();\n\t\t\n\t\tuiHandler = new Handler();\n\t\tsearchFilter = (EditText) findViewById(R.id.SearchFilter);\n\t\tsearchFilterLayout = findViewById(R.id.SearchFilterLayout);\n\t\tdirectionPath = createDirectionPath();\n\t\t\n\t\tsettings = ((OsmandApplication) getApplication()).getSettings();\n\t\t\n\t\tsearchFilter.addTextChangedListener(new TextWatcher(){\n\t\t\t@Override\n\t\t\tpublic void afterTextChanged(Editable s) {\n\t\t\t\tif(!isNameFinderFilter() && !isSearchByNameFilter()){\n\t\t\t\t\tamenityAdapter.getFilter().filter(s);\n\t\t\t\t} else {\n\t\t\t\t\tif(searchPOILevel != null)  {\n\t\t\t\t\t\tsearchPOILevel.setEnabled(true);\n\t\t\t\t\t\tsearchPOILevel.setTitle(R.string.search_button);\n\t\t\t\t\t}\n\t\t\t\t\t// Cancel current search request here?\n\t\t\t\t}\n\t\t\t}\n\t\t\t@Override\n\t\t\tpublic void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void onTextChanged(CharSequence s, int start, int before, int count) {\n\t\t\t}\n\t\t});\n\t\tif(isNameFinderFilter()){\n\t\t\tsearchFilterLayout.setVisibility(View.VISIBLE);\n\t\t} else if(isSearchByNameFilter() ){\n\t\t\tsearchFilterLayout.setVisibility(View.VISIBLE);\n\t\t}\n\t\tamenityAdapter = new AmenityAdapter(new ArrayList<Amenity>());\n\t\tsetListAdapter(amenityAdapter);\n\t\t\n\t}","id":52541,"modified_method":"@Override\n\tpublic void onCreate(Bundle icicle) {\n\t\trequestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);\n\t\tsuper.onCreate(icicle);\n\t\tsetContentView(R.layout.searchpoi);\n\t\t\n\t\tgetSupportActionBar().setTitle(R.string.searchpoi_activity);\n\t\tgetSupportActionBar().setIcon(R.drawable.tab_search_poi_icon);\n\t\tgetSherlock().setProgressBarIndeterminateVisibility(false);\n\t\t\n\t\tapp = (OsmandApplication)getApplication();\n\t\t\n\t\tuiHandler = new Handler();\n\t\tsearchFilter = (EditText) findViewById(R.id.SearchFilter);\n\t\tsearchFilterLayout = findViewById(R.id.SearchFilterLayout);\n\t\tdirectionPath = createDirectionPath();\n\t\t\n\t\tsettings = ((OsmandApplication) getApplication()).getSettings();\n\t\t\n\t\tsearchFilter.addTextChangedListener(new TextWatcher(){\n\t\t\t@Override\n\t\t\tpublic void afterTextChanged(Editable s) {\n\t\t\t\tif(!isNameFinderFilter() && !isSearchByNameFilter()){\n\t\t\t\t\tamenityAdapter.getFilter().filter(s);\n\t\t\t\t} else {\n\t\t\t\t\tif(searchPOILevel != null)  {\n\t\t\t\t\t\tsearchPOILevel.setEnabled(true);\n\t\t\t\t\t\tsearchPOILevel.setTitle(R.string.search_button);\n\t\t\t\t\t}\n\t\t\t\t\tsearchFooterButton.setEnabled(true);\n\t\t\t\t\tsearchFooterButton.setText(R.string.search_button);\n\t\t\t\t\t// Cancel current search request here?\n\t\t\t\t}\n\t\t\t}\n\t\t\t@Override\n\t\t\tpublic void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void onTextChanged(CharSequence s, int start, int before, int count) {\n\t\t\t}\n\t\t});\n\t\tif(isNameFinderFilter()){\n\t\t\tsearchFilterLayout.setVisibility(View.VISIBLE);\n\t\t} else if(isSearchByNameFilter() ){\n\t\t\tsearchFilterLayout.setVisibility(View.VISIBLE);\n\t\t}\n\t\taddFooterView();\n\t\tamenityAdapter = new AmenityAdapter(new ArrayList<Amenity>());\n\t\tsetListAdapter(amenityAdapter);\n\t\t\n\t\t\n\t\t\n\t}","commit_id":"c111a7701837e9ec8fdb51173ab09689389a9fff","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\n\t\tmenu.clear();\n\n\t\tif (ScreenOrientationHelper.isOrientationPortrait(getActivity())) {\n\t\t\tmenu = ((FavoritesActivity) getActivity()).getClearToolbar(true).getMenu();\n\t\t} else {\n\t\t\t((FavoritesActivity) getActivity()).getClearToolbar(false);\n\t\t}\n\t\tMenuItem item = menu.add(R.string.local_openstreetmap_uploadall).\n\t\t\t\tsetIcon(R.drawable.ic_action_export);\n\t\titem.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(MenuItem item) {\n\t\t\t\ttoUpload = dataPoints.toArray(new OsmPoint[0]);\n\t\t\t\tshowUploadItemsDialog();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\tMenuItemCompat.setShowAsAction(item, MenuItemCompat.SHOW_AS_ACTION_ALWAYS);\n\n\t\titem = menu.add(R.string.local_osm_changes_backup).\n\t\t\t\tsetIcon(R.drawable.ic_action_gsave_dark);\n\t\tMenuItemCompat.setShowAsAction(item, MenuItemCompat.SHOW_AS_ACTION_ALWAYS);\n\t\titem.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(MenuItem item) {\n\t\t\t\tnew BackupOpenstreetmapPointAsyncTask().execute(dataPoints.toArray(new OsmPoint[0]));\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\titem = menu.add(R.string.shared_string_delete_all).\n\t\t\t\tsetIcon(R.drawable.ic_action_delete_dark);\n\t\tMenuItemCompat.setShowAsAction(item, MenuItemCompat.SHOW_AS_ACTION_ALWAYS);\n\t\titem.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(MenuItem item) {\n\t\t\t\tAlertDialog.Builder b = new AlertDialog.Builder(getActivity());\n\t\t\t\tb.setMessage(getString(R.string.local_osm_changes_delete_all_confirm, dataPoints.size()));\n\t\t\t\tb.setPositiveButton(R.string.shared_string_delete, new DialogInterface.OnClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\tIterator<OsmPoint> it = dataPoints.iterator();\n\t\t\t\t\t\twhile (it.hasNext()) {\n\t\t\t\t\t\t\tOsmPoint info = it.next();\n\t\t\t\t\t\t\tif (info.getGroup() == OsmPoint.Group.POI) {\n\t\t\t\t\t\t\t\tdbpoi.deletePOI((OpenstreetmapPoint) info);\n\t\t\t\t\t\t\t} else if (info.getGroup() == OsmPoint.Group.BUG) {\n\t\t\t\t\t\t\t\tdbbug.deleteAllBugModifications((OsmNotesPoint) info);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tit.remove();\n\t\t\t\t\t\t\tlistAdapter.delete(info);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlistAdapter.notifyDataSetChanged();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tb.setNegativeButton(R.string.shared_string_cancel, null);\n\t\t\t\tb.show();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t}","id":52542,"modified_method":"@Override\n\tpublic void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\n\t\tmenu.clear();\n\n\t\tif (ScreenOrientationHelper.isOrientationPortrait(getActivity())) {\n\t\t\tmenu = ((FavoritesActivity) getActivity()).getClearToolbar(true).getMenu();\n\t\t} else {\n\t\t\t((FavoritesActivity) getActivity()).getClearToolbar(false);\n\t\t}\n\t\tMenuItem item = menu.add(R.string.local_openstreetmap_uploadall).\n\t\t\t\tsetIcon(R.drawable.ic_action_export);\n\t\titem.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(MenuItem item) {\n\t\t\t\tuploadItems(dataPoints.toArray(new OsmPoint[0]));\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\tMenuItemCompat.setShowAsAction(item, MenuItemCompat.SHOW_AS_ACTION_ALWAYS);\n\n\t\titem = menu.add(R.string.local_osm_changes_backup).\n\t\t\t\tsetIcon(R.drawable.ic_action_gsave_dark);\n\t\tMenuItemCompat.setShowAsAction(item, MenuItemCompat.SHOW_AS_ACTION_ALWAYS);\n\t\titem.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(MenuItem item) {\n\t\t\t\tnew BackupOpenstreetmapPointAsyncTask().execute(dataPoints.toArray(new OsmPoint[0]));\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\titem = menu.add(R.string.shared_string_delete_all).\n\t\t\t\tsetIcon(R.drawable.ic_action_delete_dark);\n\t\tMenuItemCompat.setShowAsAction(item, MenuItemCompat.SHOW_AS_ACTION_ALWAYS);\n\t\titem.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(MenuItem item) {\n\t\t\t\tdeleteItems(dataPoints);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t}","commit_id":"1c305624640f115afe7342f4c0a1d607d037c70e","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private void showUploadItemsDialog() {\n\t\tdialog = ProgressImplementation.createProgressDialog(\n\t\t\t\tgetActivity(),\n\t\t\t\tgetString(R.string.uploading),\n\t\t\t\tgetString(R.string.local_openstreetmap_uploading),\n\t\t\t\tProgressDialog.STYLE_HORIZONTAL).getDialog();\n\t\tUploadOpenstreetmapPointAsyncTask uploadTask = new UploadOpenstreetmapPointAsyncTask(dialog, this, remotepoi,\n\t\t\t\tremotebug, toUpload.length);\n\t\tuploadTask.execute(toUpload);\n\n\t\tdialog.show();\n\t}","id":52543,"modified_method":"private void showUploadItemsProgressDialog() {\n\t\tdialog = ProgressImplementation.createProgressDialog(\n\t\t\t\tgetActivity(),\n\t\t\t\tgetString(R.string.uploading),\n\t\t\t\tgetString(R.string.local_openstreetmap_uploading),\n\t\t\t\tProgressDialog.STYLE_HORIZONTAL).getDialog();\n\t\tUploadOpenstreetmapPointAsyncTask uploadTask = new UploadOpenstreetmapPointAsyncTask(dialog, this, remotepoi,\n\t\t\t\tremotebug, toUpload.length);\n\t\tuploadTask.execute(toUpload);\n\n\t\tdialog.show();\n\t}","commit_id":"1c305624640f115afe7342f4c0a1d607d037c70e","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private void openPopUpMenu(View v, final OsmPoint info) {\n\t\tOsmandApplication app = getMyApplication();\n\t\tfinal PopupMenu optionsMenu = new PopupMenu(getActivity(), v);\n\t\tDirectionsDialogs.setupPopUpMenuIcon(optionsMenu);\n\t\tMenuItem item = optionsMenu.getMenu().add(R.string.shared_string_show_on_map).\n\t\t\t\tsetIcon(app.getIconsCache().getContentIcon(R.drawable.ic_show_on_map));\n\t\titem.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(MenuItem item) {\n\t\t\t\tOsmandSettings settings = getMyApplication().getSettings();\n\t\t\t\tsettings.setMapLocationToShow(info.getLatitude(), info.getLongitude(), settings.getLastKnownMapZoom());\n\t\t\t\tMapActivity.launchMapActivityMoveToTop(getActivity());\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\titem = optionsMenu.getMenu().add(R.string.shared_string_delete).\n\t\t\t\tsetIcon(app.getIconsCache().getContentIcon(R.drawable.ic_action_delete_dark));\n\t\titem.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(MenuItem item) {\n\t\t\t\tAlertDialog.Builder b = new AlertDialog.Builder(getActivity());\n\t\t\t\tb.setMessage(getString(R.string.local_osm_changes_delete_all_confirm, 1));\n\t\t\t\tb.setPositiveButton(R.string.shared_string_delete, new DialogInterface.OnClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\tif (info.getGroup() == OsmPoint.Group.POI) {\n\t\t\t\t\t\t\tdbpoi.deletePOI((OpenstreetmapPoint) info);\n\t\t\t\t\t\t} else if (info.getGroup() == OsmPoint.Group.BUG) {\n\t\t\t\t\t\t\tdbbug.deleteAllBugModifications((OsmNotesPoint) info);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlistAdapter.delete(info);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tb.setNegativeButton(R.string.shared_string_cancel, null);\n\t\t\t\tb.show();\n\t\t\t\treturn true;\n\n\t\t\t}\n\t\t});\n\t\titem = optionsMenu.getMenu().add(R.string.local_openstreetmap_upload).\n\t\t\t\tsetIcon(app.getIconsCache().getContentIcon(R.drawable.ic_action_export));\n\t\titem.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(MenuItem item) {\n\t\t\t\ttoUpload = new OsmPoint[]{info};\n\t\t\t\tshowUploadItemsDialog();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\toptionsMenu.show();\n\t}","id":52544,"modified_method":"private void openPopUpMenu(View v, final OsmPoint info) {\n\t\tOsmandApplication app = getMyApplication();\n\t\tfinal PopupMenu optionsMenu = new PopupMenu(getActivity(), v);\n\t\tDirectionsDialogs.setupPopUpMenuIcon(optionsMenu);\n\t\tMenuItem item = optionsMenu.getMenu().add(R.string.shared_string_show_on_map).\n\t\t\t\tsetIcon(app.getIconsCache().getContentIcon(R.drawable.ic_show_on_map));\n\t\titem.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(MenuItem item) {\n\t\t\t\tOsmandSettings settings = getMyApplication().getSettings();\n\t\t\t\tsettings.setMapLocationToShow(info.getLatitude(), info.getLongitude(), settings.getLastKnownMapZoom());\n\t\t\t\tMapActivity.launchMapActivityMoveToTop(getActivity());\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\titem = optionsMenu.getMenu().add(R.string.shared_string_delete).\n\t\t\t\tsetIcon(app.getIconsCache().getContentIcon(R.drawable.ic_action_delete_dark));\n\t\titem.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(MenuItem item) {\n\t\t\t\tArrayList<OsmPoint> points = new ArrayList<OsmPoint>();\n\t\t\t\tpoints.add(info);\n\t\t\t\tdeleteItems(new ArrayList<OsmPoint>(points));\n\t\t\t\treturn true;\n\n\t\t\t}\n\t\t});\n\t\titem = optionsMenu.getMenu().add(R.string.local_openstreetmap_upload).\n\t\t\t\tsetIcon(app.getIconsCache().getContentIcon(R.drawable.ic_action_export));\n\t\titem.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(MenuItem item) {\n\t\t\t\tuploadItems(new OsmPoint[]{info});\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\toptionsMenu.show();\n\t}","commit_id":"1c305624640f115afe7342f4c0a1d607d037c70e","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public Object invoke(final DomInvocationHandler<?> handler, final Object[] args) throws Throwable {\n    for (final CollectionChildDescriptionImpl qname : myQnames) {\n      handler.getCollectionChildren(qname, qname.getTagsGetter());\n    }\n\n    final XmlTag tag = handler.ensureTagExists();\n    int index = args != null && args.length == 1 ? (Integer)args[0] : Integer.MAX_VALUE;\n\n    XmlTag lastTag = null;\n    int i = 0;\n    final XmlTag[] tags = tag.getSubTags();\n    for (final XmlTag subTag : tags) {\n      if (i == index) break;\n      if (DomImplUtil.containsTagName(myQnames, subTag, handler)) {\n        final DomInvocationHandler element = handler.getManager().getCachedHandler(subTag);\n        if (element instanceof CollectionElementInvocationHandler) {\n          lastTag = subTag;\n          i++;\n        }\n      }\n    }\n    final DomManagerImpl manager = handler.getManager();\n    final boolean b = manager.setChanging(true);\n    try {\n      final EvaluatedXmlName evaluatedXmlName = handler.createEvaluatedXmlName(myMainDescription.getXmlName());\n      final XmlTag emptyTag = handler.createChildTag(evaluatedXmlName);\n      final XmlTag newTag;\n      if (lastTag == null) {\n        if (tags.length == 0) {\n          newTag = (XmlTag)tag.add(emptyTag);\n        }\n        else {\n          newTag = (XmlTag)tag.addBefore(emptyTag, tags[0]);\n        }\n      }\n      else {\n        newTag = (XmlTag)tag.addAfter(emptyTag, lastTag);\n      }\n\n      return new CollectionElementInvocationHandler(myType, newTag, myMainDescription, handler).getProxy();\n    }\n    finally {\n      manager.setChanging(b);\n    }\n  }","id":52545,"modified_method":"public Object invoke(final DomInvocationHandler<?> handler, final Object[] args) throws Throwable {\n    Set<XmlTag> set = CollectionFactory.newTroveSet();\n    for (final CollectionChildDescriptionImpl qname : myQnames) {\n      set.addAll(qname.getTagsGetter().fun(handler));\n    }\n\n    final XmlTag tag = handler.ensureTagExists();\n    int index = args != null && args.length == 1 ? (Integer)args[0] : Integer.MAX_VALUE;\n\n    XmlTag lastTag = null;\n    int i = 0;\n    final XmlTag[] tags = tag.getSubTags();\n    for (final XmlTag subTag : tags) {\n      if (i == index) break;\n      if (set.contains(subTag)) {\n        lastTag = subTag;\n        i++;\n      }\n    }\n    final DomManagerImpl manager = handler.getManager();\n    final boolean b = manager.setChanging(true);\n    try {\n      final EvaluatedXmlName evaluatedXmlName = handler.createEvaluatedXmlName(myMainDescription.getXmlName());\n      final XmlTag emptyTag = handler.createChildTag(evaluatedXmlName);\n      final XmlTag newTag;\n      if (lastTag == null) {\n        if (tags.length == 0) {\n          newTag = (XmlTag)tag.add(emptyTag);\n        }\n        else {\n          newTag = (XmlTag)tag.addBefore(emptyTag, tags[0]);\n        }\n      }\n      else {\n        newTag = (XmlTag)tag.addAfter(emptyTag, lastTag);\n      }\n\n      return new CollectionElementInvocationHandler(myType, newTag, myMainDescription, handler).getProxy();\n    }\n    finally {\n      manager.setChanging(b);\n    }\n  }","commit_id":"13b97a1c72c14133ee3c056938dca8b8207708c2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@SuppressWarnings({\"unchecked\"})\n  @NotNull\n  final <T extends DomElement> FileDescriptionCachedValueProvider<T> getOrCreateCachedValueProvider(final XmlFile xmlFile) {\n    ApplicationManager.getApplication().assertReadAccessAllowed();\n    FileDescriptionCachedValueProvider provider = (FileDescriptionCachedValueProvider)myHandlerCache.get(xmlFile);\n    if (provider == null) {\n      myHandlerCache.put(xmlFile, provider = new FileDescriptionCachedValueProvider(this, xmlFile));\n    }\n    return provider;\n  }","id":52546,"modified_method":"@SuppressWarnings({\"unchecked\"})\n  @NotNull\n  final <T extends DomElement> FileDescriptionCachedValueProvider<T> getOrCreateCachedValueProvider(final XmlFile xmlFile) {\n    ApplicationManager.getApplication().assertReadAccessAllowed();\n    FileDescriptionCachedValueProvider provider = (FileDescriptionCachedValueProvider)myHandlerCache.get(xmlFile);\n    if (provider == null) {\n      return (FileDescriptionCachedValueProvider<T>)ConcurrencyUtil.cacheOrGet(myHandlerCache, xmlFile, new FileDescriptionCachedValueProvider(this, xmlFile));\n    }\n    return provider;\n  }","commit_id":"13b97a1c72c14133ee3c056938dca8b8207708c2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  DomInvocationHandler getDomHandler(final XmlTag tag) {\n    if (tag == null) return null;\n\n    DomInvocationHandler invocationHandler = getCachedHandler(tag);\n    if (invocationHandler != null) return invocationHandler;\n\n    final XmlTag parentTag = tag.getParentTag();\n    if (parentTag == null) {\n      final PsiFile psiFile = tag.getContainingFile();\n      if (psiFile instanceof XmlFile) {\n        final DomRootInvocationHandler handler = getRootInvocationHandler((XmlFile)psiFile);\n        return handler != null && handler.getXmlTag() == tag ? handler : null;\n      }\n      return null;\n    }\n\n    DomInvocationHandler parent = getDomHandler(parentTag);\n    if (parent == null) return null;\n\n    final AbstractDomChildrenDescription childDescription = findChildrenDescription(tag, parent);\n    if (childDescription == null) return null;\n\n    childDescription.getValues(parent.getProxy());\n    return getCachedHandler(tag);\n  }","id":52547,"modified_method":"@Nullable\n  DomInvocationHandler getDomHandler(final XmlTag tag) {\n    if (tag == null) return null;\n\n    DomInvocationHandler invocationHandler = getCachedHandler(tag);\n    if (invocationHandler != null) return invocationHandler;\n\n    final XmlTag parentTag = tag.getParentTag();\n    if (parentTag == null) {\n      final PsiFile psiFile = tag.getContainingFile();\n      if (psiFile instanceof XmlFile) {\n        final DomRootInvocationHandler handler = getRootInvocationHandler((XmlFile)psiFile);\n        return handler != null && handler.getXmlTag() == tag ? handler : null;\n      }\n      return null;\n    }\n\n    DomInvocationHandler parent = getDomHandler(parentTag);\n    if (parent == null) return null;\n\n    final AbstractDomChildrenDescription childDescription = findChildrenDescription(tag, parent);\n    if (childDescription == null) return null;\n\n    for (DomElement element : childDescription.getValues(parent.getProxy())) {\n      DomInvocationHandler handler = getDomInvocationHandler(element);\n      if (handler != null && tag.equals(handler.getXmlTag())) {\n        return handler;\n      }\n    }\n    return null;\n  }","commit_id":"13b97a1c72c14133ee3c056938dca8b8207708c2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void cacheHandler(XmlElement element, DomInvocationHandler handler) {\n    ApplicationManager.getApplication().assertReadAccessAllowed();\n    if (handler != null) {\n      myHandlerCache.put(element, handler);\n    } else {\n      myHandlerCache.remove(element);\n    }\n    element.putUserData(CACHED_DOM_HANDLER, handler);\n  }","id":52548,"modified_method":"public void cacheHandler(XmlElement element, DomInvocationHandler handler) {\n    if (handler != null) {\n      myHandlerCache.put(element, handler);\n    } else {\n      myHandlerCache.remove(element);\n    }\n    element.putUserData(CACHED_DOM_HANDLER, handler);\n  }","commit_id":"13b97a1c72c14133ee3c056938dca8b8207708c2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public DomManagerImpl(final PomModel pomModel,\n                        final Project project, final PsiManager psiManager,\n                        final XmlAspect xmlAspect, final DomElementAnnotationsManager annotationsManager,\n                        final VirtualFileManager virtualFileManager,\n                        final StartupManager startupManager,\n                        final ProjectRootManager projectRootManager,\n                        final DomApplicationComponent applicationComponent,\n                        final ConverterManager converterManager) {\n    myProject = project;\n    myConverterManager = (ConverterManagerImpl)converterManager;\n    myApplicationComponent = applicationComponent;\n    myAnnotationsManager = (DomElementAnnotationsManagerImpl)annotationsManager;\n    pomModel.addModelListener(new PomModelListener() {\n      public void modelChanged(PomModelEvent event) {\n        final XmlChangeSet changeSet = (XmlChangeSet)event.getChangeSet(xmlAspect);\n        if (changeSet != null) {\n          if (!myChanging) {\n            new ExternalChangeProcessor(DomManagerImpl.this, changeSet).processChanges();\n          }\n        }\n      }\n\n      public boolean isAspectChangeInteresting(PomModelAspect aspect) {\n        return xmlAspect.equals(aspect);\n      }\n    }, project);\n\n    project.getMessageBus().connect().subscribe(ProjectTopics.MODIFICATION_TRACKER, new PsiModificationTracker.Listener() {\n      public void modificationCountChanged() {\n        ApplicationManager.getApplication().assertWriteAccessAllowed();\n        if (!myBulkChange) {\n          myHandlerCache.clear();\n        }\n      }\n    });\n\n    myFileFactory = PsiFileFactory.getInstance(project);\n\n    final Runnable setupVfsListeners = new Runnable() {\n      public void run() {\n        final VirtualFileAdapter listener = new VirtualFileAdapter() {\n          private final List<XmlFile> myDeletedFiles = new SmartList<XmlFile>();\n\n          public void contentsChanged(VirtualFileEvent event) {\n            if (event.isFromSave()) return;\n\n            processVfsChange(event.getFile());\n          }\n\n          public void fileCreated(VirtualFileEvent event) {\n            processVfsChange(event.getFile());\n          }\n\n          public void beforeFileDeletion(final VirtualFileEvent event) {\n            beforeFileDeletion(event.getFile());\n          }\n\n          private void beforeFileDeletion(final VirtualFile file) {\n            if (project.isDisposed()) return;\n\n            if (file.isDirectory() && file instanceof NewVirtualFile) {\n              for (final VirtualFile child : ((NewVirtualFile)file).getCachedChildren()) {\n                beforeFileDeletion(child);\n              }\n              return;\n            }\n\n            if (StdFileTypes.XML.equals(file.getFileType())) {\n              final PsiFile psiFile = psiManager.findFile(file);\n              if (psiFile instanceof XmlFile) {\n                myDeletedFiles.add((XmlFile)psiFile);\n              }\n            }\n          }\n\n          public void fileDeleted(VirtualFileEvent event) {\n            if (!myDeletedFiles.isEmpty()) {\n              if (!project.isDisposed()) {\n                for (final XmlFile file : myDeletedFiles) {\n                  processXmlFileChange(file, true);\n                }\n              }\n              myDeletedFiles.clear();\n            }\n          }\n\n          public void propertyChanged(VirtualFilePropertyEvent event) {\n            final VirtualFile file = event.getFile();\n            if (!file.isDirectory() && VirtualFile.PROP_NAME.equals(event.getPropertyName())) {\n              processVfsChange(file);\n            }\n          }\n        };\n        virtualFileManager.addVirtualFileListener(listener, project);\n      }\n    };\n    if (!((StartupManagerEx)startupManager).startupActivityPassed()) {\n      startupManager.registerStartupActivity(setupVfsListeners);\n    } else {\n      setupVfsListeners.run();\n    }\n\n    myFileIndex = projectRootManager.getFileIndex();\n\n    for (final DomFileDescription description : Extensions.getExtensions(DomFileDescription.EP_NAME)) {\n      _registerFileDescription(description);\n    }\n  }","id":52549,"modified_method":"public DomManagerImpl(final PomModel pomModel,\n                        final Project project, final PsiManager psiManager,\n                        final XmlAspect xmlAspect, final DomElementAnnotationsManager annotationsManager,\n                        final VirtualFileManager virtualFileManager,\n                        final StartupManager startupManager,\n                        final ProjectRootManager projectRootManager,\n                        final DomApplicationComponent applicationComponent,\n                        final ConverterManager converterManager) {\n    myProject = project;\n    myConverterManager = (ConverterManagerImpl)converterManager;\n    myApplicationComponent = applicationComponent;\n    myAnnotationsManager = (DomElementAnnotationsManagerImpl)annotationsManager;\n    pomModel.addModelListener(new PomModelListener() {\n      public void modelChanged(PomModelEvent event) {\n        final XmlChangeSet changeSet = (XmlChangeSet)event.getChangeSet(xmlAspect);\n        if (changeSet != null) {\n          if (!myChanging) {\n            new ExternalChangeProcessor(DomManagerImpl.this, changeSet).processChanges();\n          }\n        }\n      }\n\n      public boolean isAspectChangeInteresting(PomModelAspect aspect) {\n        return xmlAspect.equals(aspect);\n      }\n    }, project);\n\n    project.getMessageBus().connect().subscribe(ProjectTopics.MODIFICATION_TRACKER, new PsiModificationTracker.Listener() {\n      public void modificationCountChanged() {\n        if (!myBulkChange) {\n          myHandlerCache.clear();\n        }\n      }\n    });\n\n    ((PsiManagerEx)psiManager).registerRunnableToRunOnChange(new Runnable() {\n      public void run() {\n        if (!myBulkChange) {\n          myHandlerCache.clear();\n        }\n      }\n    });\n\n    myFileFactory = PsiFileFactory.getInstance(project);\n\n    final Runnable setupVfsListeners = new Runnable() {\n      public void run() {\n        final VirtualFileAdapter listener = new VirtualFileAdapter() {\n          private final List<XmlFile> myDeletedFiles = new SmartList<XmlFile>();\n\n          public void contentsChanged(VirtualFileEvent event) {\n            if (event.isFromSave()) return;\n\n            processVfsChange(event.getFile());\n          }\n\n          public void fileCreated(VirtualFileEvent event) {\n            processVfsChange(event.getFile());\n          }\n\n          public void beforeFileDeletion(final VirtualFileEvent event) {\n            beforeFileDeletion(event.getFile());\n          }\n\n          private void beforeFileDeletion(final VirtualFile file) {\n            if (project.isDisposed()) return;\n\n            if (file.isDirectory() && file instanceof NewVirtualFile) {\n              for (final VirtualFile child : ((NewVirtualFile)file).getCachedChildren()) {\n                beforeFileDeletion(child);\n              }\n              return;\n            }\n\n            if (StdFileTypes.XML.equals(file.getFileType())) {\n              final PsiFile psiFile = psiManager.findFile(file);\n              if (psiFile instanceof XmlFile) {\n                myDeletedFiles.add((XmlFile)psiFile);\n              }\n            }\n          }\n\n          public void fileDeleted(VirtualFileEvent event) {\n            if (!myDeletedFiles.isEmpty()) {\n              if (!project.isDisposed()) {\n                for (final XmlFile file : myDeletedFiles) {\n                  processXmlFileChange(file, true);\n                }\n              }\n              myDeletedFiles.clear();\n            }\n          }\n\n          public void propertyChanged(VirtualFilePropertyEvent event) {\n            final VirtualFile file = event.getFile();\n            if (!file.isDirectory() && VirtualFile.PROP_NAME.equals(event.getPropertyName())) {\n              processVfsChange(file);\n            }\n          }\n        };\n        virtualFileManager.addVirtualFileListener(listener, project);\n      }\n    };\n    if (!((StartupManagerEx)startupManager).startupActivityPassed()) {\n      startupManager.registerStartupActivity(setupVfsListeners);\n    } else {\n      setupVfsListeners.run();\n    }\n\n    myFileIndex = projectRootManager.getFileIndex();\n\n    for (final DomFileDescription description : Extensions.getExtensions(DomFileDescription.EP_NAME)) {\n      _registerFileDescription(description);\n    }\n  }","commit_id":"13b97a1c72c14133ee3c056938dca8b8207708c2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public DomInvocationHandler getCachedHandler(XmlElement element) {\n    ApplicationManager.getApplication().assertReadAccessAllowed();\n    return (DomInvocationHandler)myHandlerCache.get(element);\n  }","id":52550,"modified_method":"public DomInvocationHandler getCachedHandler(XmlElement element) {\n    return (DomInvocationHandler)myHandlerCache.get(element);\n  }","commit_id":"13b97a1c72c14133ee3c056938dca8b8207708c2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Object invoke(final DomInvocationHandler<?> handler, final Object[] args) throws Throwable {\n    handler.checkIsValid();\n    for (final CollectionChildDescriptionImpl qname : myQnames) {\n      handler.getCollectionChildren(qname, qname.getTagsGetter());\n    }\n    final XmlTag tag = handler.getXmlTag();\n    if (tag == null) return Collections.emptyList();\n\n    final List<DomElement> list = new ArrayList<DomElement>();\n    for (final XmlTag subTag : tag.getSubTags()) {\n      if (DomImplUtil.containsTagName(myQnames, subTag, handler)) {\n        final DomInvocationHandler element = handler.getManager().getCachedHandler(subTag);\n        if (element instanceof CollectionElementInvocationHandler) {\n          list.add(element.getProxy());\n        }\n      }\n    }\n    return list;\n  }","id":52551,"modified_method":"public Object invoke(final DomInvocationHandler<?> handler, final Object[] args) throws Throwable {\n    handler.checkIsValid();\n    Map<XmlTag,DomElement> map = new THashMap<XmlTag, DomElement>();\n    for (final CollectionChildDescriptionImpl qname : myQnames) {\n      for (DomElement element : handler.getCollectionChildren(qname, qname.getTagsGetter())) {\n        map.put(element.getXmlTag(), element);\n      }\n    }\n    final XmlTag tag = handler.getXmlTag();\n    if (tag == null) return Collections.emptyList();\n\n    final List<DomElement> list = new ArrayList<DomElement>();\n    for (final XmlTag subTag : tag.getSubTags()) {\n      ContainerUtil.addIfNotNull(map.get(subTag), list);\n    }\n    return list;\n  }","commit_id":"13b97a1c72c14133ee3c056938dca8b8207708c2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean isInDefaultState() {\n    return myUserProperties.isEmpty();\n  }","id":52552,"modified_method":"boolean isInDefaultState() {\n    return myUserProperties.isEmpty();\n  }","commit_id":"9a19c43084fac32826e61b8c0e1f744f778f1163","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void restoreDefaults() {\n    Map<String, String> old = new HashMap<String, String>();\n    old.putAll(myUserProperties);\n    for (String each : old.keySet()) {\n      try {\n        get(each).resetToDefault();\n      }\n      catch (MissingResourceException e) {\n        // outdated property that is not declared in registry.properties anymore\n        myValues.remove(each);\n      }\n    }\n  }","id":52553,"modified_method":"void restoreDefaults() {\n    Map<String, String> old = new HashMap<String, String>();\n    old.putAll(myUserProperties);\n    for (String each : old.keySet()) {\n      try {\n        get(each).resetToDefault();\n      }\n      catch (MissingResourceException e) {\n        // outdated property that is not declared in registry.properties anymore\n        myValues.remove(each);\n      }\n    }\n  }","commit_id":"9a19c43084fac32826e61b8c0e1f744f778f1163","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean isRestartNeeded() {\n    return isRestartNeeded(myUserProperties);\n  }","id":52554,"modified_method":"boolean isRestartNeeded() {\n    return isRestartNeeded(myUserProperties);\n  }","commit_id":"9a19c43084fac32826e61b8c0e1f744f778f1163","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Color asColor(Color defaultValue) {\n    final String s = get(myKey, null, true);\n    if (s != null) {\n      final String[] rgb = s.split(\",\");\n      if (rgb.length == 3) {\n        try {\n          return new Color(Integer.parseInt(rgb[0]), Integer.parseInt(rgb[1]), Integer.parseInt(rgb[2]));\n        }\n        catch (Exception e) {//\n        }\n      }\n    }\n    return defaultValue;\n  }","id":52555,"modified_method":"Color asColor(Color defaultValue) {\n    final String s = get(myKey, null, true);\n    if (s != null) {\n      final String[] rgb = s.split(\",\");\n      if (rgb.length == 3) {\n        try {\n          return new Color(Integer.parseInt(rgb[0]), Integer.parseInt(rgb[1]), Integer.parseInt(rgb[2]));\n        }\n        catch (Exception e) {\n        }\n      }\n    }\n    return defaultValue;\n  }","commit_id":"9a19c43084fac32826e61b8c0e1f744f778f1163","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private String get(@NotNull String key, String defaultValue, boolean isValue) throws MissingResourceException {\n    if (isValue) {\n      if (myStringCachedValue == null) {\n        myStringCachedValue = _get(key, defaultValue, isValue);\n        if (isBoolean()) {\n          myStringCachedValue = Boolean.valueOf(myStringCachedValue).toString();\n        }\n      }\n      return myStringCachedValue;\n    }\n    return _get(key, defaultValue, isValue);\n  }","id":52556,"modified_method":"private String get(@NotNull String key, String defaultValue, boolean isValue) throws MissingResourceException {\n    if (isValue) {\n      String stringCachedValue = myStringCachedValue;\n      if (stringCachedValue == null) {\n        stringCachedValue = _get(key, defaultValue, true);\n        if (isBoolean()) {\n          stringCachedValue = Boolean.valueOf(stringCachedValue).toString();\n        }\n        myStringCachedValue = stringCachedValue;\n      }\n      return stringCachedValue;\n    }\n    return _get(key, defaultValue, false);\n  }","commit_id":"9a19c43084fac32826e61b8c0e1f744f778f1163","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean isChangedSinceAppStart() {\n    return myChangedSinceStart;\n  }","id":52557,"modified_method":"boolean isChangedSinceAppStart() {\n    return myChangedSinceStart;\n  }","commit_id":"9a19c43084fac32826e61b8c0e1f744f778f1163","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean isRestartRequired() {\n    return Boolean.valueOf(get(myKey + \".restartRequired\", \"false\", false));\n  }","id":52558,"modified_method":"boolean isRestartRequired() {\n    return Boolean.valueOf(get(myKey + \".restartRequired\", \"false\", false));\n  }","commit_id":"9a19c43084fac32826e61b8c0e1f744f778f1163","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void registerProvider(@NonNls String[] names, ElementFilter filter, boolean caseSensitive, PsiReferenceProvider provider) {\n    if (names == null || names.length == 0) {\n      myProvidersWithoutNames.add(new Pair<PsiReferenceProvider, ElementFilter>(provider, filter));\n    }\n    else {\n      final Map<String, List<Pair<PsiReferenceProvider, ElementFilter>>> map =\n        caseSensitive ? myNamesToProvidersMap : myNamesToProvidersMapInsensitive;\n\n      for (final String attributeName : names) {\n        List<Pair<PsiReferenceProvider, ElementFilter>> psiReferenceProviders = map.get(attributeName);\n\n        if (psiReferenceProviders == null) {\n          psiReferenceProviders = new ArrayList<Pair<PsiReferenceProvider, ElementFilter>>(1);\n          map.put(caseSensitive ? attributeName : attributeName.toLowerCase(), psiReferenceProviders);\n        }\n\n        psiReferenceProviders.add(new Pair<PsiReferenceProvider, ElementFilter>(provider, filter));\n      }\n    }\n  }","id":52559,"modified_method":"public void registerProvider(@NonNls String[] names, ElementFilter filter, boolean caseSensitive, PsiReferenceProvider provider) {\n    if (names == null || names.length == 0) {\n      myProvidersWithoutNames.add(new Pair<PsiReferenceProvider, ElementFilter>(provider, filter));\n    }\n    else {\n      final ConcurrentMap<String, CopyOnWriteArrayList<Pair<PsiReferenceProvider, ElementFilter>>> map = caseSensitive ? myNamesToProvidersMap : myNamesToProvidersMapInsensitive;\n\n      for (final String attributeName : names) {\n        CopyOnWriteArrayList<Pair<PsiReferenceProvider, ElementFilter>> psiReferenceProviders = map.get(attributeName);\n\n        if (psiReferenceProviders == null) {\n          psiReferenceProviders = ConcurrencyUtil.cacheOrGet(map, caseSensitive ? attributeName : attributeName.toLowerCase(), new CopyOnWriteArrayList<Pair<PsiReferenceProvider, ElementFilter>>());\n        }\n\n        psiReferenceProviders.add(new Pair<PsiReferenceProvider, ElementFilter>(provider, filter));\n      }\n    }\n  }","commit_id":"f5dc81e1d15443fd755c4bd39d9f3539696f90c8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void registerNamedReferenceProvider(\n    @Nullable @NonNls String[] names,\n    @Nullable ElementFilter elementFilter,\n    @NotNull Class<? extends NamedObjectProviderBinding> bindingClass,\n    @NotNull Class scopeClass,\n    boolean caseSensitive,\n    @NotNull PsiReferenceProvider provider\n  ) {\n    NamedObjectProviderBinding providerBinding = (NamedObjectProviderBinding)myBindingsMap.get(scopeClass);\n\n    if (providerBinding == null) {\n      try {\n        providerBinding = bindingClass.newInstance();\n        myBindingsMap.put(scopeClass, providerBinding);\n      }\n      catch (Exception e) {\n        LOG.error(e);\n        return;\n      }\n    }\n\n    providerBinding.registerProvider(\n      names,\n      elementFilter,\n      caseSensitive,\n      provider\n    );\n  }","id":52560,"modified_method":"private void registerNamedReferenceProvider(\n    @Nullable @NonNls String[] names,\n    @Nullable ElementFilter elementFilter,\n    @NotNull Class<? extends NamedObjectProviderBinding> bindingClass,\n    @NotNull Class scopeClass,\n    boolean caseSensitive,\n    @NotNull PsiReferenceProvider provider\n  ) {\n    NamedObjectProviderBinding providerBinding = (NamedObjectProviderBinding)myBindingsMap.get(scopeClass);\n\n    if (providerBinding == null) {\n      try {\n        providerBinding = (NamedObjectProviderBinding)ConcurrencyUtil.cacheOrGet(myBindingsMap, scopeClass, bindingClass.newInstance());\n      }\n      catch (Exception e) {\n        LOG.error(e);\n        return;\n      }\n    }\n\n    providerBinding.registerProvider(\n      names,\n      elementFilter,\n      caseSensitive,\n      provider\n    );\n  }","commit_id":"f5dc81e1d15443fd755c4bd39d9f3539696f90c8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public synchronized void registerReferenceProvider(@Nullable ElementFilter elementFilter,\n                                                     @NotNull Class scope,\n                                                     @NotNull PsiReferenceProvider provider) {\n    if (scope == XmlAttributeValue.class) {\n      registerXmlAttributeValueReferenceProvider(null, elementFilter, provider);\n      return;\n    }\n    else if (scope == XmlTag.class) {\n      registerXmlTagReferenceProvider(null, elementFilter, false, provider);\n      return;\n    }\n\n    final ProviderBinding providerBinding = myBindingsMap.get(scope);\n    if (providerBinding != null) {\n      ((SimpleProviderBinding)providerBinding).registerProvider(provider, elementFilter);\n      return;\n    }\n\n    final SimpleProviderBinding binding = new SimpleProviderBinding(scope);\n    binding.registerProvider(provider, elementFilter);\n    myBindingsMap.put(scope, binding);\n  }","id":52561,"modified_method":"public void registerReferenceProvider(@Nullable ElementFilter elementFilter,\n                                                     @NotNull Class scope,\n                                                     @NotNull PsiReferenceProvider provider) {\n    if (scope == XmlAttributeValue.class) {\n      registerXmlAttributeValueReferenceProvider(null, elementFilter, provider);\n      return;\n    }\n    else if (scope == XmlTag.class) {\n      registerXmlTagReferenceProvider(null, elementFilter, false, provider);\n      return;\n    }\n\n    for (;;) {\n      final ProviderBinding providerBinding = myBindingsMap.get(scope);\n      if (providerBinding != null) {\n        ((SimpleProviderBinding)providerBinding).registerProvider(provider, elementFilter);\n        return;\n      }\n\n      final SimpleProviderBinding binding = new SimpleProviderBinding(scope);\n      binding.registerProvider(provider, elementFilter);\n      if (myBindingsMap.putIfAbsent(scope, binding) == null) break;\n    }\n  }","commit_id":"f5dc81e1d15443fd755c4bd39d9f3539696f90c8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public synchronized void registerXmlAttributeValueReferenceProvider(@Nullable @NonNls String[] attributeNames,\n                                                         @Nullable ElementFilter elementFilter,\n                                                         boolean caseSensitive,\n                                                         @NotNull PsiReferenceProvider provider) {\n    registerNamedReferenceProvider(\n      attributeNames,\n      elementFilter,\n      XmlAttributeValueProviderBinding.class,\n      XmlAttributeValue.class,\n      caseSensitive,\n      provider\n    );\n  }","id":52562,"modified_method":"public void registerXmlAttributeValueReferenceProvider(@Nullable @NonNls String[] attributeNames,\n                                                         @Nullable ElementFilter elementFilter,\n                                                         boolean caseSensitive,\n                                                         @NotNull PsiReferenceProvider provider) {\n    registerNamedReferenceProvider(\n      attributeNames,\n      elementFilter,\n      XmlAttributeValueProviderBinding.class,\n      XmlAttributeValue.class,\n      caseSensitive,\n      provider\n    );\n  }","commit_id":"f5dc81e1d15443fd755c4bd39d9f3539696f90c8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public synchronized void registerXmlTagReferenceProvider(@NonNls String[] names, @Nullable ElementFilter elementFilter,\n                                              boolean caseSensitive, @NotNull PsiReferenceProvider provider) {\n    registerNamedReferenceProvider(names, elementFilter, XmlTagProviderBinding.class,XmlTag.class,caseSensitive, provider);\n  }","id":52563,"modified_method":"public void registerXmlTagReferenceProvider(@NonNls String[] names, @Nullable ElementFilter elementFilter,\n                                              boolean caseSensitive, @NotNull PsiReferenceProvider provider) {\n    registerNamedReferenceProvider(names, elementFilter, XmlTagProviderBinding.class,XmlTag.class,caseSensitive, provider);\n  }","commit_id":"f5dc81e1d15443fd755c4bd39d9f3539696f90c8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public synchronized void registerReferenceProvider(@NotNull Class scope, @NotNull PsiReferenceProvider provider) {\n    registerReferenceProvider(null, scope, provider);\n  }","id":52564,"modified_method":"public void registerReferenceProvider(@NotNull Class scope, @NotNull PsiReferenceProvider provider) {\n    registerReferenceProvider(null, scope, provider);\n  }","commit_id":"f5dc81e1d15443fd755c4bd39d9f3539696f90c8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public synchronized void registerXmlAttributeValueReferenceProvider(@Nullable @NonNls String[] attributeNames,\n                                                         @Nullable ElementFilter elementFilter,\n                                                         @NotNull PsiReferenceProvider provider) {\n    registerXmlAttributeValueReferenceProvider(attributeNames, elementFilter, true, provider);\n  }","id":52565,"modified_method":"public void registerXmlAttributeValueReferenceProvider(@Nullable @NonNls String[] attributeNames,\n                                                         @Nullable ElementFilter elementFilter,\n                                                         @NotNull PsiReferenceProvider provider) {\n    registerXmlAttributeValueReferenceProvider(attributeNames, elementFilter, true, provider);\n  }","commit_id":"f5dc81e1d15443fd755c4bd39d9f3539696f90c8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public synchronized @NotNull PsiReferenceProvider getProviderByType(@NotNull ReferenceProviderType type) {\n    return myReferenceTypeToProviderMap.get(type);\n  }","id":52566,"modified_method":"public @NotNull PsiReferenceProvider getProviderByType(@NotNull ReferenceProviderType type) {\n    return myReferenceTypeToProviderMap.get(type);\n  }","commit_id":"f5dc81e1d15443fd755c4bd39d9f3539696f90c8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public synchronized void registerTypeWithProvider(@NotNull ReferenceProviderType type, @NotNull PsiReferenceProvider provider) {\n    myReferenceTypeToProviderMap.put(type, provider);\n  }","id":52567,"modified_method":"public void registerTypeWithProvider(@NotNull ReferenceProviderType type, @NotNull PsiReferenceProvider provider) {\n    myReferenceTypeToProviderMap.put(type, provider);\n  }","commit_id":"f5dc81e1d15443fd755c4bd39d9f3539696f90c8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public synchronized @Nullable <T extends PsiElement> ElementManipulator<T> getManipulator(@NotNull T element) {\n    for (final Pair<Class<?>,ElementManipulator<?>> pair : myManipulators) {\n      if (ReflectionCache.isAssignable(pair.getFirst(), element.getClass())) {\n        return (ElementManipulator<T>)pair.getSecond();\n      }\n    }\n\n    return null;\n  }","id":52568,"modified_method":"public @Nullable <T extends PsiElement> ElementManipulator<T> getManipulator(@NotNull T element) {\n    for (final Pair<Class<?>,ElementManipulator<?>> pair : myManipulators) {\n      if (ReflectionCache.isAssignable(pair.getFirst(), element.getClass())) {\n        return (ElementManipulator<T>)pair.getSecond();\n      }\n    }\n\n    return null;\n  }","commit_id":"f5dc81e1d15443fd755c4bd39d9f3539696f90c8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public synchronized <T extends PsiElement> void registerManipulator(@NotNull Class<T> elementClass, @NotNull ElementManipulator<T> manipulator) {\n    myManipulators.add(new Pair<Class<?>, ElementManipulator<?>>(elementClass, manipulator));\n  }","id":52569,"modified_method":"public <T extends PsiElement> void registerManipulator(@NotNull Class<T> elementClass, @NotNull ElementManipulator<T> manipulator) {\n    myManipulators.add(new Pair<Class<?>, ElementManipulator<?>>(elementClass, manipulator));\n  }","commit_id":"f5dc81e1d15443fd755c4bd39d9f3539696f90c8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public synchronized @NotNull PsiReferenceProvider[] getProvidersByElement(@NotNull PsiElement element, @NotNull Class clazz) {\n    assert clazz.isInstance(element);\n\n    List<PsiReferenceProvider> ret = new ArrayList<PsiReferenceProvider>(1);\n    PsiElement current;\n    do {\n      current = element;\n\n      final ProviderBinding providerBinding = myBindingsMap.get(clazz);\n      if (providerBinding != null) providerBinding.addAcceptableReferenceProviders(current, ret);\n\n      element = ResolveUtil.getContext(element);\n    }\n    while (!isScopeFinal(current.getClass()));\n\n    return ret.isEmpty() ? PsiReferenceProvider.EMPTY_ARRAY : ret.toArray(new PsiReferenceProvider[ret.size()]);\n  }","id":52570,"modified_method":"public @NotNull PsiReferenceProvider[] getProvidersByElement(@NotNull PsiElement element, @NotNull Class clazz) {\n    assert clazz.isInstance(element);\n\n    List<PsiReferenceProvider> ret = new ArrayList<PsiReferenceProvider>(1);\n    PsiElement current;\n    do {\n      current = element;\n\n      final ProviderBinding providerBinding = myBindingsMap.get(clazz);\n      if (providerBinding != null) providerBinding.addAcceptableReferenceProviders(current, ret);\n\n      element = ResolveUtil.getContext(element);\n    }\n    while (!isScopeFinal(current.getClass()));\n\n    return ret.isEmpty() ? PsiReferenceProvider.EMPTY_ARRAY : ret.toArray(new PsiReferenceProvider[ret.size()]);\n  }","commit_id":"f5dc81e1d15443fd755c4bd39d9f3539696f90c8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean ifStatementMayCompleteNormally(@NotNull PsiIfStatement ifStatement) {\n    final PsiExpression condition = ifStatement.getCondition();\n    final Object value = ExpressionUtils.computeConstantExpression(condition);\n    final PsiStatement thenBranch = ifStatement.getThenBranch();\n    final boolean thenCompletesNormally = statementMayCompleteNormally(thenBranch);\n    if (value == Boolean.TRUE) {\n      return thenCompletesNormally;\n    }\n    final PsiStatement elseBranch = ifStatement.getElseBranch();\n    final boolean elseCompletesNormally = statementMayCompleteNormally(elseBranch);\n    if (value == Boolean.FALSE) {\n      return elseCompletesNormally;\n    }\n    return thenCompletesNormally || elseCompletesNormally;\n  }","id":52571,"modified_method":"private static boolean ifStatementMayCompleteNormally(@NotNull PsiIfStatement ifStatement) {\n    final PsiExpression condition = ifStatement.getCondition();\n    final Object value = ExpressionUtils.computeConstantExpression(condition);\n    final PsiStatement thenBranch = ifStatement.getThenBranch();\n    if (value == Boolean.TRUE) {\n      return statementMayCompleteNormally(thenBranch);\n    }\n    final PsiStatement elseBranch = ifStatement.getElseBranch();\n    if (value == Boolean.FALSE) {\n      return statementMayCompleteNormally(elseBranch);\n    }\n    // process branch with fewer statements first\n    PsiStatement branch1;\n    PsiStatement branch2;\n    if ((thenBranch == null ? 0 : thenBranch.getTextLength()) < (elseBranch == null ? 0 : elseBranch.getTextLength())) {\n      branch1 = thenBranch;\n      branch2 = elseBranch;\n    }\n    else {\n      branch2 = thenBranch;\n      branch1 = elseBranch;\n    }\n    if (statementMayCompleteNormally(branch1)) return true;\n    if (statementMayCompleteNormally(branch2)) return true;\n    return false;\n  }","commit_id":"8c60feb57bbcc3be80c9c19121eb1a4a9466db53","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public CategoryHopCriteria(String categoryName) {\n\t\tm_categoryName = categoryName;\n        setLabel(m_categoryName);\n\t}","id":52572,"modified_method":"public CategoryHopCriteria(String categoryName) {\n\t\tm_categoryName = categoryName;\n        setLabel(m_categoryName);\n        m_collapsedVertex = new CategoryVertex(\"nodes\", \"category:\" + m_categoryName, m_categoryName);\n\t}","commit_id":"6e44987a210c942d3a54c9fd8e0482ed2d3e5272","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n\tpublic List<Vertex> getVertices(Criteria... criteria) {\n\n\t\tSet<VertexRef> focusNodes = getFocusNodes(criteria);\n\t\tint maxSemanticZoomLevel = getMaxSemanticZoomLevel(criteria);\n\t\t\n\t\t// Clear the existing semantic zoom level values\n\t\tm_semanticZoomLevels.clear();\n\t\tint semanticZoomLevel = 0;\n\n\t\t// If we didn't find any matching nodes among the focus nodes...\n\t\tif (focusNodes.size() < 1) {\n\t\t\t// ...then return an empty list of vertices\n\t\t\treturn Collections.emptyList();\n//            return allVertices;\n\t\t}\n\t\t\n\n\t\tMap<VertexRef, Set<VertexRef>> neighborMap = new HashMap<VertexRef, Set<VertexRef>>();\n\t\tList<Edge> edges = m_delegate.getEdges(criteria);\n\t\tfor(Edge edge : edges) {\n\t\t\tVertexRef src = edge.getSource().getVertex();\n\t\t\tVertexRef tgt = edge.getTarget().getVertex();\n\t\t\tSet<VertexRef> srcNeighbors = neighborMap.get(src);\n\t\t\tif (srcNeighbors == null) {\n\t\t\t\tsrcNeighbors = new HashSet<VertexRef>();\n\t\t\t\tneighborMap.put(src, srcNeighbors);\n\t\t\t}\n\t\t\tsrcNeighbors.add(tgt);\n\t\t\t\n\t\t\tSet<VertexRef> tgtNeighbors = neighborMap.get(tgt);\n\t\t\tif (tgtNeighbors == null) {\n\t\t\t\ttgtNeighbors = new HashSet<VertexRef>();\n\t\t\t\tneighborMap.put(tgt, tgtNeighbors);\n\t\t\t}\n\t\t\ttgtNeighbors.add(src);\n\t\t}\n\t\t\n\t\tSet<Vertex> processed = new HashSet<Vertex>();\n\t\tSet<VertexRef> neighbors = new HashSet<VertexRef>();\n\t\tSet<VertexRef> workingSet = new HashSet<VertexRef>(focusNodes);\n\t\t// Put a limit on the SZL in case we infinite loop for some reason\n\t\twhile (semanticZoomLevel <= maxSemanticZoomLevel && workingSet.size() > 0) {\n\t\t\tneighbors.clear();\n\n\t\t\tfor(VertexRef vertexRef : workingSet) {\n\t\t\t\tif (m_semanticZoomLevels.containsKey(vertexRef)) {\n\t\t\t\t\tthrow new IllegalStateException(\"Calculating semantic zoom level for vertex that has already been calculated: \" + vertexRef.toString());\n\t\t\t\t}\n\t\t\t\tm_semanticZoomLevels.put(vertexRef, semanticZoomLevel);\n                Set<VertexRef> refs = neighborMap.get(vertexRef);\n                if (refs != null) {\n                \tneighbors.addAll(refs);\n                }\n                Vertex vertex = getVertex(vertexRef);\n                if (vertex != null) {\n                \tprocessed.add(getVertex(vertexRef));\n                }\n\t\t\t}\n\n\t\t\tneighbors.removeAll(processed);\n\t\t\t\n\t\t\tworkingSet.clear();\n\t\t\tworkingSet.addAll(neighbors);\n\n\t\t\t// Increment the semantic zoom level\n\t\t\tsemanticZoomLevel++;\n\t\t}\n\n\t\treturn new ArrayList<Vertex>(processed);\n\t}","id":52573,"modified_method":"@Override\n\tpublic List<Vertex> getVertices(Criteria... criteria) {\n\n\t\tSet<VertexRef> focusNodes = getFocusNodes(criteria);\n\t\tint maxSemanticZoomLevel = getMaxSemanticZoomLevel(criteria);\n\t\t\n\t\t// Clear the existing semantic zoom level values\n\t\tm_semanticZoomLevels.clear();\n\t\tint semanticZoomLevel = 0;\n\n\t\t// If we didn't find any matching nodes among the focus nodes...\n\t\tif (focusNodes.size() < 1) {\n\t\t\t// ...then return an empty list of vertices\n\t\t\treturn Collections.emptyList();\n//            return allVertices;\n\t\t}\n\t\t\n\n\t\tMap<VertexRef, Set<VertexRef>> neighborMap = new HashMap<VertexRef, Set<VertexRef>>();\n\t\tList<Edge> edges = m_delegate.getEdges(criteria);\n\t\tfor(Edge edge : edges) {\n\t\t\tVertexRef src = edge.getSource().getVertex();\n\t\t\tVertexRef tgt = edge.getTarget().getVertex();\n\t\t\tSet<VertexRef> srcNeighbors = neighborMap.get(src);\n\t\t\tif (srcNeighbors == null) {\n\t\t\t\tsrcNeighbors = new HashSet<VertexRef>();\n\t\t\t\tneighborMap.put(src, srcNeighbors);\n\t\t\t}\n\t\t\tsrcNeighbors.add(tgt);\n\t\t\t\n\t\t\tSet<VertexRef> tgtNeighbors = neighborMap.get(tgt);\n\t\t\tif (tgtNeighbors == null) {\n\t\t\t\ttgtNeighbors = new HashSet<VertexRef>();\n\t\t\t\tneighborMap.put(tgt, tgtNeighbors);\n\t\t\t}\n\t\t\ttgtNeighbors.add(src);\n\t\t}\n\t\t\n\t\tSet<Vertex> processed = new HashSet<Vertex>();\n\t\tSet<VertexRef> neighbors = new HashSet<VertexRef>();\n\t\tSet<VertexRef> workingSet = new HashSet<VertexRef>(focusNodes);\n\t\t// Put a limit on the SZL in case we infinite loop for some reason\n\t\twhile (semanticZoomLevel <= maxSemanticZoomLevel && workingSet.size() > 0) {\n\t\t\tneighbors.clear();\n\n\t\t\tfor(VertexRef vertexRef : workingSet) {\n\t\t\t\tif (m_semanticZoomLevels.containsKey(vertexRef)) {\n\t\t\t\t\tthrow new IllegalStateException(\"Calculating semantic zoom level for vertex that has already been calculated: \" + vertexRef.toString());\n\t\t\t\t}\n\t\t\t\tm_semanticZoomLevels.put(vertexRef, semanticZoomLevel);\n                Set<VertexRef> refs = neighborMap.get(vertexRef);\n                if (refs != null) {\n                \tneighbors.addAll(refs);\n                }\n                Vertex vertex = getVertex(vertexRef);\n                if (vertex != null) {\n                \tprocessed.add(getVertex(vertexRef));\n                }\n\t\t\t}\n\n\t\t\tneighbors.removeAll(processed);\n\t\t\t\n\t\t\tworkingSet.clear();\n\t\t\tworkingSet.addAll(neighbors);\n\n\t\t\t// Increment the semantic zoom level\n\t\t\tsemanticZoomLevel++;\n\t\t}\n\n\t\tprocessed = collapseVertices(processed, getCollapsedCriteria(criteria));\n\n\t\treturn new ArrayList<Vertex>(processed);\n\t}","commit_id":"6e44987a210c942d3a54c9fd8e0482ed2d3e5272","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n\t * TODO OVERRIDE THIS FUNCTION?\n\t */\n\t@Override\n\tpublic List<Edge> getEdges(Criteria... criteria) {\n\t\treturn m_delegate.getEdges(criteria);\n\t}","id":52574,"modified_method":"/**\n\t * TODO OVERRIDE THIS FUNCTION?\n\t */\n\t@Override\n\tpublic List<Edge> getEdges(Criteria... criteria) {\n\t\tList<Edge> retval = m_delegate.getEdges(criteria);\n\t\tretval = collapseEdges(retval, getCollapsedCriteria(criteria));\n\t\treturn retval;\n\t}","commit_id":"6e44987a210c942d3a54c9fd8e0482ed2d3e5272","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Map<Node, Point> placeCoordinates(Graph graph, NodeLayeredOrder order) {\n    Map<Node, Point> placement = MapSequence.fromMap(new HashMap<Node, Point>());\n    for (int layer = 0; layer <= order.getMaxLayer(); layer++) {\n      List<Node> layerOrder = order.getOrder(layer);\n      int xCoord = 0;\n      for (Node node : ListSequence.fromList(layerOrder)) {\n        MapSequence.fromMap(placement).put(node, new Point(xCoord, layer));\n        xCoord++;\n      }\n    }\n    return placement;\n  }","id":52575,"modified_method":"public Map<Node, Point> placeCoordinates(Graph graph, NodeLayeredOrder order) {\n    Map<Node, Point> placement = MapSequence.fromMap(new HashMap<Node, Point>());\n    for (int layer = 0; layer < order.getNumLayers(); layer++) {\n      List<Node> layerOrder = order.getOrder(layer);\n      int xCoord = 0;\n      for (Node node : ListSequence.fromList(layerOrder)) {\n        MapSequence.fromMap(placement).put(node, new Point(xCoord, layer));\n        xCoord++;\n      }\n    }\n    return placement;\n  }","commit_id":"1b7e65c95d567930cf850a50052d7d8cbd72b416","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static boolean hasBadEdges(Graph graph, NodeLayers layers) {\n    for (Node node : ListSequence.fromList(graph.getNodes())) {\n      for (Edge edge : ListSequence.fromList(node.getOutEdges())) {\n        if (layers.get(edge.getSource()) + 1 != layers.get(edge.getTarget())) {\n          return true;\n        }\n      }\n      for (Edge edge : ListSequence.fromList(node.getInEdges())) {\n        if (layers.get(edge.getSource()) + 1 != layers.get(edge.getTarget())) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }","id":52576,"modified_method":"public static boolean hasBadEdges(Graph graph, NodeLayers layers) {\n    for (Node node : ListSequence.fromList(graph.getNodes())) {\n      for (Edge edge : ListSequence.fromList(node.getOutEdges())) {\n        if (layers.get(edge.getSource()) > layers.get(edge.getTarget())) {\n          return true;\n        }\n      }\n      for (Edge edge : ListSequence.fromList(node.getInEdges())) {\n        if (layers.get(edge.getSource()) > layers.get(edge.getTarget())) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }","commit_id":"1b7e65c95d567930cf850a50052d7d8cbd72b416","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  protected void processEdge(Edge edge) {\n    Node target = edge.getTarget();\n    int state = MapSequence.fromMap(getDfsState()).get(target);\n    if (state == 1) {\n      SetSequence.fromSet(myToRevert).addElement(edge);\n    }\n  }","id":52577,"modified_method":"@Override\n  protected void processEdge(Edge edge) {\n    Node target = edge.getTarget();\n    int state = MapSequence.fromMap(getDfsState()).get(target);\n    if (state == Dfs.DURING) {\n      SetSequence.fromSet(myToRevert).addElement(edge);\n    }\n  }","commit_id":"1b7e65c95d567930cf850a50052d7d8cbd72b416","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void test_cycle() throws Exception {\n    Graph cycle = SimpleDirectedGraphs.cycle(10);\n    testCycles(cycle, new DFSEdgeReverter());\n  }","id":52578,"modified_method":"public void test_cycle() throws Exception {\n    Graph cycle = SimpleDirectedGraphs.cycle(10);\n    new EdgeReverterProxy(new DFSEdgeReverter()).revertEdges(cycle);\n  }","commit_id":"1b7e65c95d567930cf850a50052d7d8cbd72b416","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void dfs(Node node) {\n    MapSequence.fromMap(myDfsState).put(node, 1);\n    preprocess(node);\n    for (Edge edge : ListSequence.fromList(node.getOutEdges())) {\n      processEdge(edge);\n      Node target = edge.getTarget();\n      if (MapSequence.fromMap(myDfsState).get(target) == 0) {\n        dfs(target);\n      }\n    }\n    postprocess(node);\n    MapSequence.fromMap(myDfsState).put(node, 2);\n  }","id":52579,"modified_method":"private void dfs(Node node) {\n    MapSequence.fromMap(myDfsState).put(node, DURING);\n    preprocess(node);\n    for (Edge edge : ListSequence.fromList(node.getOutEdges())) {\n      processEdge(edge);\n      Node target = edge.getTarget();\n      if (MapSequence.fromMap(myDfsState).get(target) == BEFORE) {\n        dfs(target);\n      }\n    }\n    postprocess(node);\n    MapSequence.fromMap(myDfsState).put(node, AFTER);\n  }","commit_id":"1b7e65c95d567930cf850a50052d7d8cbd72b416","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void init() {\n    myDfsState = MapSequence.fromMap(new HashMap<Node, Integer>());\n    for (Node node : ListSequence.fromList(myGraph.getNodes())) {\n      MapSequence.fromMap(myDfsState).put(node, 0);\n    }\n  }","id":52580,"modified_method":"private void init() {\n    myDfsState = MapSequence.fromMap(new HashMap<Node, Integer>());\n    for (Node node : ListSequence.fromList(myGraph.getNodes())) {\n      MapSequence.fromMap(myDfsState).put(node, BEFORE);\n    }\n  }","commit_id":"1b7e65c95d567930cf850a50052d7d8cbd72b416","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doDfs(Graph graph) {\n    myGraph = graph;\n    init();\n    for (Node node : ListSequence.fromList(myGraph.getNodes())) {\n      if (MapSequence.fromMap(myDfsState).get(node) == 0) {\n        dfs(node);\n      }\n    }\n  }","id":52581,"modified_method":"public void doDfs(Graph graph) {\n    myGraph = graph;\n    init();\n    for (Node node : ListSequence.fromList(myGraph.getNodes())) {\n      if (MapSequence.fromMap(myDfsState).get(node) == BEFORE) {\n        dfs(node);\n      }\n    }\n  }","commit_id":"1b7e65c95d567930cf850a50052d7d8cbd72b416","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Node addNode() {\n    return ListSequence.fromList(myNodes).addElement(new Node(ListSequence.fromList(myNodes).count()));\n  }","id":52582,"modified_method":"public Node addNode() {\n    return ListSequence.fromList(myNodes).addElement(new Node(ListSequence.fromList(myNodes).count(), false));\n  }","commit_id":"1b7e65c95d567930cf850a50052d7d8cbd72b416","url":"https://github.com/JetBrains/MPS"},{"original_method":"public GraphLayout doLayout(Graph graph) {\n    Set<Edge> reverted = myReverter.revertEdges(graph);\n    NodeLayers layers = myLayerer.computeLayers(graph);\n    final int numRealVertices = graph.getNumNodes();\n    Map<Edge, List<Edge>> substituteEdgeMap = insertDummyNodes(graph, layers);\n    NodeLayeredOrder order = mySorter.sortNodes(graph, layers);\n    Map<Node, Point> nodeCoordinates = myPlacer.placeCoordinates(graph, order);\n    GraphLayout graphLayout = new GraphLayout(graph);\n    for (Edge deletedEdge : SetSequence.fromSet(MapSequence.fromMap(substituteEdgeMap).keySet())) {\n      List<Point> edgeLayout = ListSequence.fromList(new ArrayList<Point>());\n      ListSequence.fromList(edgeLayout).addElement(MapSequence.fromMap(nodeCoordinates).get(deletedEdge.getSource()));\n      for (Edge newEdge : ListSequence.fromList(MapSequence.fromMap(substituteEdgeMap).get(deletedEdge))) {\n        ListSequence.fromList(edgeLayout).addElement(MapSequence.fromMap(nodeCoordinates).get(newEdge.getTarget()));\n        newEdge.removeFromGraph();\n      }\n      graphLayout.setLayoutFor(deletedEdge, edgeLayout);\n      graph.addEdge(deletedEdge);\n    }\n    ListSequence.fromList(graph.getNodes()).removeWhere(new IWhereFilter<Node>() {\n      public boolean accept(Node it) {\n        return it.getIndex() >= numRealVertices;\n      }\n    });\n    for (Node node : ListSequence.fromList(graph.getNodes())) {\n      graphLayout.setLayoutFor(node, MapSequence.fromMap(nodeCoordinates).get(node));\n      for (Edge edge : ListSequence.fromList(node.getOutEdges())) {\n        if (MapSequence.fromMap(substituteEdgeMap).containsKey(edge)) {\n          continue;\n        }\n        graphLayout.setLayoutFor(edge, ListSequence.fromListAndArray(new ArrayList<Point>(), MapSequence.fromMap(nodeCoordinates).get(edge.getSource()), MapSequence.fromMap(nodeCoordinates).get(edge.getTarget())));\n      }\n    }\n    return graphLayout;\n  }","id":52583,"modified_method":"public GraphLayout doLayout(Graph graph) {\n    Set<Edge> reverted = myReverter.revertEdges(graph);\n    NodeLayers layers = myLayerer.computeLayers(graph);\n    Map<Edge, List<Edge>> substituteEdgeMap = insertDummyNodes(graph, layers);\n    NodeLayeredOrder order = mySorter.sortNodes(graph, layers);\n    Map<Node, Point> nodeCoordinates = myPlacer.placeCoordinates(graph, order);\n    GraphLayout graphLayout = new GraphLayout(graph);\n    for (Edge deletedEdge : SetSequence.fromSet(MapSequence.fromMap(substituteEdgeMap).keySet())) {\n      List<Point> edgeLayout = ListSequence.fromList(new ArrayList<Point>());\n      ListSequence.fromList(edgeLayout).addElement(MapSequence.fromMap(nodeCoordinates).get(deletedEdge.getSource()));\n      for (Edge newEdge : ListSequence.fromList(MapSequence.fromMap(substituteEdgeMap).get(deletedEdge))) {\n        ListSequence.fromList(edgeLayout).addElement(MapSequence.fromMap(nodeCoordinates).get(newEdge.getTarget()));\n        newEdge.removeFromGraph();\n      }\n      graphLayout.setLayoutFor(deletedEdge, edgeLayout);\n      graph.addEdge(deletedEdge);\n    }\n    ListSequence.fromList(graph.getNodes()).removeWhere(new IWhereFilter<Node>() {\n      public boolean accept(Node it) {\n        return it.isDummy();\n      }\n    });\n    for (Node node : ListSequence.fromList(graph.getNodes())) {\n      graphLayout.setLayoutFor(node, MapSequence.fromMap(nodeCoordinates).get(node));\n      for (Edge edge : ListSequence.fromList(node.getOutEdges())) {\n        if (MapSequence.fromMap(substituteEdgeMap).containsKey(edge)) {\n          continue;\n        }\n        graphLayout.setLayoutFor(edge, ListSequence.fromListAndArray(new ArrayList<Point>(), MapSequence.fromMap(nodeCoordinates).get(edge.getSource()), MapSequence.fromMap(nodeCoordinates).get(edge.getTarget())));\n      }\n    }\n    return graphLayout;\n  }","commit_id":"1b7e65c95d567930cf850a50052d7d8cbd72b416","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static Map<Edge, List<Edge>> insertDummyNodes(Graph graph, NodeLayers layers) {\n    Map<Edge, List<Edge>> substituteMap = MapSequence.fromMap(new HashMap<Edge, List<Edge>>());\n    int numOfRealNodes = graph.getNumNodes();\n    Set<Edge> toDelete = SetSequence.fromSet(new HashSet<Edge>());\n    for (int index = 0; index < numOfRealNodes; index++) {\n      Node node = graph.getNode(index);\n      for (Edge edge : ListSequence.fromList(node.getOutEdges())) {\n        int sourceLayer = layers.get(edge.getSource());\n        int targetLayer = layers.get(edge.getTarget());\n        if (targetLayer > sourceLayer + 1) {\n          MapSequence.fromMap(substituteMap).put(edge, ListSequence.fromList(new ArrayList<Edge>()));\n          Node cur = edge.getSource();\n          for (int i = sourceLayer + 1; i <= targetLayer; i++) {\n            Node newTarget;\n            if (i < targetLayer) {\n              newTarget = graph.addNode();\n              layers.set(newTarget, i);\n            } else {\n              newTarget = edge.getTarget();\n            }\n            ListSequence.fromList(MapSequence.fromMap(substituteMap).get(edge)).addElement(new Edge(cur, newTarget));\n            cur = newTarget;\n          }\n        }\n      }\n    }\n    for (Edge deletedEdge : SetSequence.fromSet(MapSequence.fromMap(substituteMap).keySet())) {\n      deletedEdge.removeFromGraph();\n      for (Edge newEdge : ListSequence.fromList(MapSequence.fromMap(substituteMap).get(deletedEdge))) {\n        graph.addEdge(newEdge);\n      }\n    }\n    return substituteMap;\n  }","id":52584,"modified_method":"public static Map<Edge, List<Edge>> insertDummyNodes(Graph graph, NodeLayers layers) {\n    Map<Edge, List<Edge>> substituteMap = MapSequence.fromMap(new HashMap<Edge, List<Edge>>());\n    int numOfRealNodes = graph.getNumNodes();\n    for (int index = 0; index < numOfRealNodes; index++) {\n      Node node = graph.getNode(index);\n      for (Edge edge : ListSequence.fromList(node.getOutEdges())) {\n        int sourceLayer = layers.get(edge.getSource());\n        int targetLayer = layers.get(edge.getTarget());\n        if (targetLayer > sourceLayer + 1) {\n          MapSequence.fromMap(substituteMap).put(edge, ListSequence.fromList(new ArrayList<Edge>()));\n          Node cur = edge.getSource();\n          for (int i = sourceLayer + 1; i <= targetLayer; i++) {\n            Node newTarget;\n            if (i < targetLayer) {\n              newTarget = graph.addDummyNode();\n              layers.set(newTarget, i);\n            } else {\n              newTarget = edge.getTarget();\n            }\n            ListSequence.fromList(MapSequence.fromMap(substituteMap).get(edge)).addElement(new Edge(cur, newTarget));\n            cur = newTarget;\n          }\n        }\n      }\n    }\n    for (Edge deletedEdge : SetSequence.fromSet(MapSequence.fromMap(substituteMap).keySet())) {\n      deletedEdge.removeFromGraph();\n      for (Edge newEdge : ListSequence.fromList(MapSequence.fromMap(substituteMap).get(deletedEdge))) {\n        graph.addEdge(newEdge);\n      }\n    }\n    return substituteMap;\n  }","commit_id":"1b7e65c95d567930cf850a50052d7d8cbd72b416","url":"https://github.com/JetBrains/MPS"},{"original_method":"public double computeBarycenter(Node node, Map<Integer, Integer> nodesOrder, Edge.Direction dir) {\n    double barycenter = 0;\n    for (Edge edge : ListSequence.fromList(node.getEdges(dir))) {\n      barycenter += MapSequence.fromMap(nodesOrder).get(edge.getTarget(dir).getIndex());\n    }\n    return barycenter / ListSequence.fromList(node.getEdges(dir)).count();\n  }","id":52585,"modified_method":"public double computeBarycenter(Node node, Map<Integer, Integer> nodesOrder, Edge.Direction dir) {\n    double barycenter = 0;\n    List<Edge> edges = node.getEdges(dir);\n    if (ListSequence.fromList(edges).count() > 0) {\n      for (Edge edge : ListSequence.fromList(edges)) {\n        barycenter += MapSequence.fromMap(nodesOrder).get(edge.getTarget(dir).getIndex());\n      }\n      barycenter = barycenter / ListSequence.fromList(edges).count();\n    }\n    return barycenter;\n  }","commit_id":"1b7e65c95d567930cf850a50052d7d8cbd72b416","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void layoutGraph() {\n    Scanner scanner = new Scanner(myTextArea.getText());\n    try {\n      Graph g = GraphScanner.scanGraph(scanner);\n      myCurrentLayout = myLayouter.doLayout(g);\n    } catch (IllegalArgumentException e) {\n      JOptionPane.showMessageDialog(this, \"something is wrong in graph...\");\n    }\n  }","id":52586,"modified_method":"private void layoutGraph() {\n    Scanner scanner = new Scanner(myTextArea.getText());\n    try {\n      Graph g = GraphIO.scanGraph(scanner);\n      myCurrentLayout = myLayouter.doLayout(g);\n    } catch (IllegalArgumentException e) {\n      JOptionPane.showMessageDialog(this, \"something is wrong in graph...\");\n    }\n  }","commit_id":"1b7e65c95d567930cf850a50052d7d8cbd72b416","url":"https://github.com/JetBrains/MPS"},{"original_method":"/**\n\t * TODO OVERRIDE THIS FUNCTION?\n\t */\n\t@Override\n\tpublic List<Edge> getEdges(Criteria... criteria) {\n\t\tList<Edge> retval = m_delegate.getEdges(criteria);\n\t\tretval = collapseEdges(retval, getCollapsedCriteria(criteria));\n\t\treturn retval;\n\t}","id":52587,"modified_method":"@Override\n\tpublic List<Edge> getEdges(Criteria... criteria) {\n\t\tSet<Edge> retval = new HashSet<Edge>(m_delegate.getEdges(criteria));\n\t\tretval = collapseEdges(retval, getCollapsedCriteria(criteria));\n\t\treturn new ArrayList<Edge>(retval);\n\t}","commit_id":"01e759c71533f70d2ebf53226bec11411718b9a3","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n\t * This function assumes that all criteria passed in are marked as collapsed.\n\t * @param edges\n\t * @param criteria\n\t * @return\n\t */\n\tpublic static List<Edge> collapseEdges(Collection<Edge> edges, CollapsibleCriteria[] criteria) {\n\n\t\t// Make a map of all of the vertices to their new collapsed representations\n\t\tMap<VertexRef,Set<VertexRef>> vertexToCollapsedVertices = new TreeMap<VertexRef,Set<VertexRef>>(new RefComparator());\n\t\tfor (CollapsibleCriteria criterium : criteria) {\n\t\t\tSet<VertexRef> criteriaVertices = criterium.getVertices();\n\t\t\tif (criteriaVertices.size() > 0) {\n\t\t\t\tVertex collapsedVertex = criterium.getCollapsedRepresentation();\n\t\t\t\tfor (VertexRef criteriaVertex : criteriaVertices) {\n\t\t\t\t\tSet<VertexRef> collapsedVertices = vertexToCollapsedVertices.get(criteriaVertex);\n\t\t\t\t\tif (collapsedVertices == null) {\n\t\t\t\t\t\tcollapsedVertices = new HashSet<VertexRef>();\n\t\t\t\t\t\tvertexToCollapsedVertices.put(criteriaVertex, collapsedVertices);\n\t\t\t\t\t}\n\t\t\t\t\tcollapsedVertices.add(collapsedVertex);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tList<Edge> retval = new ArrayList<Edge>();\n\t\tfor (Edge edge : edges) {\n\t\t\t// Add the original edge to retval unless we replace it with an edge that points to a\n\t\t\t// collapsed vertex\n\t\t\tboolean addOriginalEdge = true;\n\n\t\t\t// If the source vertex is in the collapsed list...\n\t\t\tSet<VertexRef> collapsedVertices = vertexToCollapsedVertices.get(edge.getSource().getVertex());\n\t\t\tif (collapsedVertices != null) {\n\t\t\t\tfor (VertexRef collapsedEndpoint : collapsedVertices) {\n\t\t\t\t\t// Add a new edge with the source as the collapsed vertex\n\t\t\t\t\tEdge newCollapsedEdge = edge.clone();\n\t\t\t\t\tnewCollapsedEdge.getSource().setVertex(collapsedEndpoint);\n\t\t\t\t\tretval.add(newCollapsedEdge);\n\t\t\t\t}\n\t\t\t\t// Since we just added a replacement edge, don't add the original\n\t\t\t\taddOriginalEdge = false;\n\t\t\t} \n\n\t\t\tcollapsedVertices = vertexToCollapsedVertices.get(edge.getTarget().getVertex());\n\t\t\tif (collapsedVertices != null) {\n\t\t\t\tfor (VertexRef collapsedEndpoint : collapsedVertices) {\n\t\t\t\t\t// Add a new edge with the target as the collapsed vertex\n\t\t\t\t\tEdge newCollapsedEdge = edge.clone();\n\t\t\t\t\tnewCollapsedEdge.getTarget().setVertex(collapsedEndpoint);\n\t\t\t\t\tretval.add(newCollapsedEdge);\n\t\t\t\t}\n\t\t\t\t// Since we just added a replacement edge, don't add the original\n\t\t\t\taddOriginalEdge = false;\n\t\t\t}\n\n\t\t\t// Add the original edge if it wasn't replaced with an edge to a collapsed vertex\n\t\t\tif (addOriginalEdge) {\n\t\t\t\tretval.add(edge);\n\t\t\t}\n\t\t}\n\t\treturn retval;\n\t}","id":52588,"modified_method":"/**\n\t * This function assumes that all criteria passed in are marked as collapsed.\n\t * @param edges\n\t * @param criteria\n\t * @return\n\t */\n\tpublic static Set<Edge> collapseEdges(Set<Edge> edges, CollapsibleCriteria[] criteria) {\n\n\t\t// Make a map of all of the vertices to their new collapsed representations\n\t\tMap<VertexRef,Set<Vertex>> vertexToCollapsedVertices = getMapOfVerticesToCollapsedVertices(criteria);\n\n\t\tif (vertexToCollapsedVertices.size() > 0) {\n\t\t\tSet<Edge> retval = new HashSet<Edge>();\n\t\t\tfor (Edge edge : edges) {\n\t\t\t\t// Add the original edge to retval unless we replace it with an edge that points to a\n\t\t\t\t// collapsed vertex\n\t\t\t\tboolean addOriginalEdge = true;\n\t\n\t\t\t\t// If the source vertex is in the collapsed list...\n\t\t\t\tSet<Vertex> collapsedVertices = vertexToCollapsedVertices.get(edge.getSource().getVertex());\n\t\t\t\tif (collapsedVertices != null) {\n\t\t\t\t\tfor (VertexRef collapsedEndpoint : collapsedVertices) {\n\t\t\t\t\t\t// Add a new edge with the source as the collapsed vertex\n\t\t\t\t\t\tEdge newCollapsedEdge = edge.clone();\n\t\t\t\t\t\tnewCollapsedEdge.getSource().setVertex(collapsedEndpoint);\n\t\t\t\t\t\tretval.add(newCollapsedEdge);\n\t\t\t\t\t}\n\t\t\t\t\t// Since we just added a replacement edge, don't add the original\n\t\t\t\t\taddOriginalEdge = false;\n\t\t\t\t} \n\t\n\t\t\t\tcollapsedVertices = vertexToCollapsedVertices.get(edge.getTarget().getVertex());\n\t\t\t\tif (collapsedVertices != null) {\n\t\t\t\t\tfor (VertexRef collapsedEndpoint : collapsedVertices) {\n\t\t\t\t\t\t// Add a new edge with the target as the collapsed vertex\n\t\t\t\t\t\tEdge newCollapsedEdge = edge.clone();\n\t\t\t\t\t\tnewCollapsedEdge.getTarget().setVertex(collapsedEndpoint);\n\t\t\t\t\t\tretval.add(newCollapsedEdge);\n\t\t\t\t\t}\n\t\t\t\t\t// Since we just added a replacement edge, don't add the original\n\t\t\t\t\taddOriginalEdge = false;\n\t\t\t\t}\n\t\n\t\t\t\t// Add the original edge if it wasn't replaced with an edge to a collapsed vertex\n\t\t\t\tif (addOriginalEdge) {\n\t\t\t\t\tretval.add(edge);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn retval;\n\t\t} else {\n\t\t\treturn edges;\n\t\t}\n\t}","commit_id":"01e759c71533f70d2ebf53226bec11411718b9a3","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public static Set<Vertex> collapseVertices(Collection<Vertex> vertices, CollapsibleCriteria[] criteria) {\n\t\tSet<Vertex> retval = new HashSet<Vertex>(vertices);\n\t\tSet<Vertex> addMe = new HashSet<Vertex>();\n\n\t\tfor (Iterator<Vertex> itr = retval.iterator(); itr.hasNext();) {\n\t\t\tVertex vertex = itr.next();\n\n\t\t\tnextVertex:\n\t\t\tfor (CollapsibleCriteria criterium : criteria) {\n\t\t\t\tSet<VertexRef> criteriaVertices = new HashSet<VertexRef>(criterium.getVertices());\n\t\t\t\tfor (Iterator<VertexRef> critItr = criteriaVertices.iterator(); critItr.hasNext();) {\n\t\t\t\t\tVertexRef criteriaVertex = critItr.next();\n\t\t\t\t\tif (new RefComparator().compare(vertex, criteriaVertex) == 0) {\n\t\t\t\t\t\t// Remove the vertex from the return value\n\t\t\t\t\t\titr.remove();\n\t\t\t\t\t\t// Add the collapsed representation\n\t\t\t\t\t\taddMe.add(criterium.getCollapsedRepresentation());\n\t\t\t\t\t\tbreak nextVertex;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tretval.addAll(addMe);\n\t\treturn retval;\n\t}","id":52589,"modified_method":"public static Set<Vertex> collapseVertices(Set<Vertex> vertices, CollapsibleCriteria[] criteria) {\n\t\t// Make a map of all of the vertices to their new collapsed representations\n\t\tMap<VertexRef,Set<Vertex>> vertexToCollapsedVertices = getMapOfVerticesToCollapsedVertices(criteria);\n\n\t\tif (vertexToCollapsedVertices.size() > 0) {\n\t\t\tSet<Vertex> retval = new HashSet<Vertex>();\n\t\t\tfor (Vertex vertex : vertices) {\n\t\t\t\t// If the source vertex is in the collapsed list...\n\t\t\t\tSet<Vertex> collapsedVertices = vertexToCollapsedVertices.get(vertex);\n\t\t\t\tif (collapsedVertices != null) {\n\t\t\t\t\tfor (Vertex collapsedEndpoint : collapsedVertices) {\n\t\t\t\t\t\tretval.add(collapsedEndpoint);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tretval.add(vertex);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn retval;\n\t\t} else {\n\t\t\treturn vertices;\n\t\t}\n\t}","commit_id":"01e759c71533f70d2ebf53226bec11411718b9a3","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n\tpublic void testCollapseEdges() {\n\t\tCollapsibleCriteria collapseMe = new CollapsibleCriteria() {\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic void setCollapsed(boolean collapsed) {}\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic boolean isCollapsed() {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic Set<VertexRef> getVertices() {\n\t\t\t\tSet<VertexRef> retval = new HashSet<VertexRef>();\n\t\t\t\tretval.add(new AbstractVertexRef(\"nodes\", \"g2\"));\n\t\t\t\treturn retval;\n\t\t\t}\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic String getNamespace() {\n\t\t\t\treturn \"nodes\";\n\t\t\t}\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic String getLabel() {\n\t\t\t\treturn \"Test Criteria\";\n\t\t\t}\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic String getId() {\n\t\t\t\treturn \"Test Criteria\";\n\t\t\t}\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic Vertex getCollapsedRepresentation() {\n\t\t\t\treturn new AbstractVertex(\"category\", \"c\");\n\t\t\t}\n\t\t};\n\n\t\tList<Edge> edges = VertexHopGraphProvider.collapseEdges(new HashSet<Edge>(m_provider.getEdges()), new CollapsibleCriteria[] { collapseMe });\n\t\tfor (Edge edge : edges) {\n\t\t\tassertEquals(\"nodes\", edge.getNamespace());\n\n\t\t\t/*\n\t\t\tHere's the original list of edges\n\n\t\t\t.edge(\"e1\", \"g0\", \"g1\").eLabel(\"edge1\").eStyleName(\"edge\")\n\t\t\t.edge(\"e2\", \"g0\", \"g2\").eLabel(\"edge2\").eStyleName(\"edge\")\n\t\t\t.edge(\"e3\", \"g1\", \"v1\").eLabel(\"edge3\").eStyleName(\"edge\")\n\t\t\t.edge(\"e4\", \"g1\", \"v2\").eLabel(\"edge4\").eStyleName(\"edge\")\n\t\t\t.edge(\"e5\", \"g2\", \"v3\").eLabel(\"edge5\").eStyleName(\"edge\")\n\t\t\t.edge(\"e6\", \"g2\", \"v4\").eLabel(\"edge6\").eStyleName(\"edge\")\n\t\t\t*/\n\t\t\tif (edge.getId().equals(\"e1\")) {\n\t\t\t\tassertEquals(\"nodes\", edge.getSource().getVertex().getNamespace());\n\t\t\t\tassertEquals(\"g0\", edge.getSource().getVertex().getId());\n\t\t\t\tassertEquals(\"nodes\", edge.getTarget().getVertex().getNamespace());\n\t\t\t\tassertEquals(\"g1\", edge.getTarget().getVertex().getId());\n\t\t\t} else if (edge.getId().equals(\"e2\")) {\n\t\t\t\tassertEquals(\"nodes\", edge.getSource().getVertex().getNamespace());\n\t\t\t\tassertEquals(\"g0\", edge.getSource().getVertex().getId());\n\t\t\t\tassertEquals(\"category\", edge.getTarget().getVertex().getNamespace());\n\t\t\t\tassertEquals(\"c\", edge.getTarget().getVertex().getId());\n\t\t\t} else if (edge.getId().equals(\"e3\")) {\n\t\t\t\tassertEquals(\"nodes\", edge.getSource().getVertex().getNamespace());\n\t\t\t\tassertEquals(\"g1\", edge.getSource().getVertex().getId());\n\t\t\t\tassertEquals(\"nodes\", edge.getTarget().getVertex().getNamespace());\n\t\t\t\tassertEquals(\"v1\", edge.getTarget().getVertex().getId());\n\t\t\t} else if (edge.getId().equals(\"e4\")) {\n\t\t\t\tassertEquals(\"nodes\", edge.getSource().getVertex().getNamespace());\n\t\t\t\tassertEquals(\"g1\", edge.getSource().getVertex().getId());\n\t\t\t\tassertEquals(\"nodes\", edge.getTarget().getVertex().getNamespace());\n\t\t\t\tassertEquals(\"v2\", edge.getTarget().getVertex().getId());\n\t\t\t} else if (edge.getId().equals(\"e5\")) {\n\t\t\t\tassertEquals(\"category\", edge.getSource().getVertex().getNamespace());\n\t\t\t\tassertEquals(\"c\", edge.getSource().getVertex().getId());\n\t\t\t\tassertEquals(\"nodes\", edge.getTarget().getVertex().getNamespace());\n\t\t\t\tassertEquals(\"v3\", edge.getTarget().getVertex().getId());\n\t\t\t} else if (edge.getId().equals(\"e6\")) {\n\t\t\t\tassertEquals(\"category\", edge.getSource().getVertex().getNamespace());\n\t\t\t\tassertEquals(\"c\", edge.getSource().getVertex().getId());\n\t\t\t\tassertEquals(\"nodes\", edge.getTarget().getVertex().getNamespace());\n\t\t\t\tassertEquals(\"v4\", edge.getTarget().getVertex().getId());\n\t\t\t} else {\n\t\t\t\tfail(\"Unexpected edge found: \" + edge.toString());\n\t\t\t}\n\t\t}\n\t}","id":52590,"modified_method":"@Test\n\tpublic void testCollapseEdges() {\n\t\tCollapsibleCriteria collapseMe = new CollapsibleCriteria() {\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic void setCollapsed(boolean collapsed) {}\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic boolean isCollapsed() {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic Set<VertexRef> getVertices() {\n\t\t\t\tSet<VertexRef> retval = new HashSet<VertexRef>();\n\t\t\t\tretval.add(new AbstractVertexRef(\"nodes\", \"g2\"));\n\t\t\t\treturn retval;\n\t\t\t}\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic String getNamespace() {\n\t\t\t\treturn \"nodes\";\n\t\t\t}\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic String getLabel() {\n\t\t\t\treturn \"Test Criteria\";\n\t\t\t}\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic String getId() {\n\t\t\t\treturn \"Test Criteria\";\n\t\t\t}\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic Vertex getCollapsedRepresentation() {\n\t\t\t\treturn new AbstractVertex(\"category\", \"c\");\n\t\t\t}\n\t\t};\n\n\t\tSet<Edge> edges = VertexHopGraphProvider.collapseEdges(new HashSet<Edge>(m_provider.getEdges()), new CollapsibleCriteria[] { collapseMe });\n\t\tfor (Edge edge : edges) {\n\t\t\tassertEquals(\"nodes\", edge.getNamespace());\n\n\t\t\t/*\n\t\t\tHere's the original list of edges\n\n\t\t\t.edge(\"e1\", \"g0\", \"g1\").eLabel(\"edge1\").eStyleName(\"edge\")\n\t\t\t.edge(\"e2\", \"g0\", \"g2\").eLabel(\"edge2\").eStyleName(\"edge\")\n\t\t\t.edge(\"e3\", \"g1\", \"v1\").eLabel(\"edge3\").eStyleName(\"edge\")\n\t\t\t.edge(\"e4\", \"g1\", \"v2\").eLabel(\"edge4\").eStyleName(\"edge\")\n\t\t\t.edge(\"e5\", \"g2\", \"v3\").eLabel(\"edge5\").eStyleName(\"edge\")\n\t\t\t.edge(\"e6\", \"g2\", \"v4\").eLabel(\"edge6\").eStyleName(\"edge\")\n\t\t\t*/\n\t\t\tif (edge.getId().equals(\"e1\")) {\n\t\t\t\tassertEquals(\"nodes\", edge.getSource().getVertex().getNamespace());\n\t\t\t\tassertEquals(\"g0\", edge.getSource().getVertex().getId());\n\t\t\t\tassertEquals(\"nodes\", edge.getTarget().getVertex().getNamespace());\n\t\t\t\tassertEquals(\"g1\", edge.getTarget().getVertex().getId());\n\t\t\t} else if (edge.getId().equals(\"e2\")) {\n\t\t\t\tassertEquals(\"nodes\", edge.getSource().getVertex().getNamespace());\n\t\t\t\tassertEquals(\"g0\", edge.getSource().getVertex().getId());\n\t\t\t\tassertEquals(\"category\", edge.getTarget().getVertex().getNamespace());\n\t\t\t\tassertEquals(\"c\", edge.getTarget().getVertex().getId());\n\t\t\t} else if (edge.getId().equals(\"e3\")) {\n\t\t\t\tassertEquals(\"nodes\", edge.getSource().getVertex().getNamespace());\n\t\t\t\tassertEquals(\"g1\", edge.getSource().getVertex().getId());\n\t\t\t\tassertEquals(\"nodes\", edge.getTarget().getVertex().getNamespace());\n\t\t\t\tassertEquals(\"v1\", edge.getTarget().getVertex().getId());\n\t\t\t} else if (edge.getId().equals(\"e4\")) {\n\t\t\t\tassertEquals(\"nodes\", edge.getSource().getVertex().getNamespace());\n\t\t\t\tassertEquals(\"g1\", edge.getSource().getVertex().getId());\n\t\t\t\tassertEquals(\"nodes\", edge.getTarget().getVertex().getNamespace());\n\t\t\t\tassertEquals(\"v2\", edge.getTarget().getVertex().getId());\n\t\t\t} else if (edge.getId().equals(\"e5\")) {\n\t\t\t\tassertEquals(\"category\", edge.getSource().getVertex().getNamespace());\n\t\t\t\tassertEquals(\"c\", edge.getSource().getVertex().getId());\n\t\t\t\tassertEquals(\"nodes\", edge.getTarget().getVertex().getNamespace());\n\t\t\t\tassertEquals(\"v3\", edge.getTarget().getVertex().getId());\n\t\t\t} else if (edge.getId().equals(\"e6\")) {\n\t\t\t\tassertEquals(\"category\", edge.getSource().getVertex().getNamespace());\n\t\t\t\tassertEquals(\"c\", edge.getSource().getVertex().getId());\n\t\t\t\tassertEquals(\"nodes\", edge.getTarget().getVertex().getNamespace());\n\t\t\t\tassertEquals(\"v4\", edge.getTarget().getVertex().getId());\n\t\t\t} else {\n\t\t\t\tfail(\"Unexpected edge found: \" + edge.toString());\n\t\t\t}\n\t\t}\n\t}","commit_id":"01e759c71533f70d2ebf53226bec11411718b9a3","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Can {@link #rewriteHudsonWar(File)} work?\n     */\n    public boolean canRewriteHudsonWar() {\n        // if we don't know where jenkins.war is, it's impossible to replace.\n        File f = getHudsonWar();\n        return f!=null && f.canWrite();\n    }","id":52591,"modified_method":"/**\n     * Can {@link #rewriteHudsonWar(File)} work?\n     */\n    public boolean canRewriteHudsonWar() {\n        // if we don't know where jenkins.war is, it's impossible to replace.\n        File f = getHudsonWar();\n        if (f == null || !f.canWrite()) {\n            return false;\n        }\n        File parent = f.getParentFile();\n        if (parent == null || !parent.canWrite()) {\n            return false;\n        }\n        return true;\n    }","commit_id":"b06e2aa3414d480d8b44459b0632226921be85f6","url":"https://github.com/kohsuke/hudson"},{"original_method":"protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes) {\n\t\tthis.defaultCharset = defaultCharset;\n\t\tsetSupportedMediaTypes(Arrays.asList(supportedMediaTypes));\n\t}","id":52592,"modified_method":"/**\n\t * Construct an {@code AbstractHttpMessageConverter} with a default charset and\n\t * multiple supported media types.\n\t * @param defaultCharset the default character set\n\t * @param supportedMediaTypes the supported media types\n\t * @since 4.3\n\t */\n\tprotected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes) {\n\t\tthis.defaultCharset = defaultCharset;\n\t\tsetSupportedMediaTypes(Arrays.asList(supportedMediaTypes));\n\t}","commit_id":"e3667467f627bc60e4e72df766facec66d37ec86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public Charset getDefaultCharset() {\n\t\treturn defaultCharset;\n\t}","id":52593,"modified_method":"/**\n\t * Return the default character set, if any.\n\t * @since 4.3\n\t */\n\tpublic Charset getDefaultCharset() {\n\t\treturn this.defaultCharset;\n\t}","commit_id":"e3667467f627bc60e4e72df766facec66d37ec86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic boolean canRead(Type type, Class<?> contextClass, MediaType mediaType) {\n\t\tJavaType javaType = getJavaType(type, contextClass);\n\t\tif (!logger.isWarnEnabled()) {\n\t\t\treturn (this.objectMapper.canDeserialize(javaType) && canRead(mediaType));\n\t\t}\n\t\tAtomicReference<Throwable> causeRef = new AtomicReference<Throwable>();\n\t\tif (this.objectMapper.canDeserialize(javaType, causeRef) && canRead(mediaType)) {\n\t\t\treturn true;\n\t\t}\n\t\tThrowable cause = causeRef.get();\n\t\tif (cause != null) {\n\t\t\tString msg = \"Failed to evaluate deserialization for type \" + javaType;\n\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\tlogger.warn(msg, cause);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlogger.warn(msg + \": \" + cause);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}","id":52594,"modified_method":"@Override\n\tpublic boolean canRead(Type type, Class<?> contextClass, MediaType mediaType) {\n\t\tJavaType javaType = getJavaType(type, contextClass);\n\t\tif (!canRead(mediaType)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!logger.isWarnEnabled()) {\n\t\t\treturn this.objectMapper.canDeserialize(javaType);\n\t\t}\n\t\tAtomicReference<Throwable> causeRef = new AtomicReference<Throwable>();\n\t\tif (this.objectMapper.canDeserialize(javaType, causeRef)) {\n\t\t\treturn true;\n\t\t}\n\t\tThrowable cause = causeRef.get();\n\t\tif (cause != null) {\n\t\t\tString msg = \"Failed to evaluate deserialization for type \" + javaType;\n\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\tlogger.warn(msg, cause);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlogger.warn(msg + \": \" + cause);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}","commit_id":"e3667467f627bc60e4e72df766facec66d37ec86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic boolean canWrite(Class<?> clazz, MediaType mediaType) {\n\t\tif (!logger.isWarnEnabled()) {\n\t\t\treturn (this.objectMapper.canSerialize(clazz) && canWrite(mediaType));\n\t\t}\n\t\tAtomicReference<Throwable> causeRef = new AtomicReference<Throwable>();\n\t\tif (this.objectMapper.canSerialize(clazz, causeRef) && canWrite(mediaType)) {\n\t\t\treturn true;\n\t\t}\n\t\tThrowable cause = causeRef.get();\n\t\tif (cause != null) {\n\t\t\tString msg = \"Failed to evaluate serialization for type [\" + clazz + \"]\";\n\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\tlogger.warn(msg, cause);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlogger.warn(msg + \": \" + cause);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}","id":52595,"modified_method":"@Override\n\tpublic boolean canWrite(Class<?> clazz, MediaType mediaType) {\n\t\tif (!canWrite(mediaType)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!logger.isWarnEnabled()) {\n\t\t\treturn this.objectMapper.canSerialize(clazz);\n\t\t}\n\t\tAtomicReference<Throwable> causeRef = new AtomicReference<Throwable>();\n\t\tif (this.objectMapper.canSerialize(clazz, causeRef)) {\n\t\t\treturn true;\n\t\t}\n\t\tThrowable cause = causeRef.get();\n\t\tif (cause != null) {\n\t\t\tString msg = \"Failed to evaluate serialization for type [\" + clazz + \"]\";\n\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\tlogger.warn(msg, cause);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlogger.warn(msg + \": \" + cause);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}","commit_id":"e3667467f627bc60e4e72df766facec66d37ec86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic boolean canWrite(Class<?> contextClass, MediaType mediaType) {\n\t\treturn canWrite(null, contextClass, mediaType);\n\t}","id":52596,"modified_method":"@Override\n\tpublic boolean canWrite(Type type, Class<?> contextClass, MediaType mediaType) {\n\t\treturn canWrite(contextClass, mediaType);\n\t}","commit_id":"289f35da3a57bb5e491b30c7351072b4e801c519","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic boolean canWrite(Type type, Class<?> clazz, MediaType mediaType) {\n\t\tif (!jackson23Available || !logger.isWarnEnabled()) {\n\t\t\treturn (this.objectMapper.canSerialize(clazz) && canWrite(mediaType));\n\t\t}\n\t\tAtomicReference<Throwable> causeRef = new AtomicReference<Throwable>();\n\t\tif (this.objectMapper.canSerialize(clazz, causeRef) && canWrite(mediaType)) {\n\t\t\treturn true;\n\t\t}\n\t\tThrowable cause = causeRef.get();\n\t\tif (cause != null) {\n\t\t\tString msg = \"Failed to evaluate serialization for type [\" + clazz + \"]\";\n\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\tlogger.warn(msg, cause);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlogger.warn(msg + \": \" + cause);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}","id":52597,"modified_method":"@Override\n\tpublic boolean canWrite(Class<?> clazz, MediaType mediaType) {\n\t\tif (!jackson23Available || !logger.isWarnEnabled()) {\n\t\t\treturn (this.objectMapper.canSerialize(clazz) && canWrite(mediaType));\n\t\t}\n\t\tAtomicReference<Throwable> causeRef = new AtomicReference<Throwable>();\n\t\tif (this.objectMapper.canSerialize(clazz, causeRef) && canWrite(mediaType)) {\n\t\t\treturn true;\n\t\t}\n\t\tThrowable cause = causeRef.get();\n\t\tif (cause != null) {\n\t\t\tString msg = \"Failed to evaluate serialization for type [\" + clazz + \"]\";\n\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\tlogger.warn(msg, cause);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlogger.warn(msg + \": \" + cause);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}","commit_id":"289f35da3a57bb5e491b30c7351072b4e801c519","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Writes the given return type to the given output message.\n\t * @param returnValue the value to write to the output message\n\t * @param returnType the type of the value\n\t * @param inputMessage the input messages. Used to inspect the {@code Accept} header.\n\t * @param outputMessage the output message to write to\n\t * @throws IOException thrown in case of I/O errors\n\t * @throws HttpMediaTypeNotAcceptableException thrown when the conditions indicated by {@code Accept} header on\n\t * the request cannot be met by the message converters\n\t */\n\t@SuppressWarnings(\"unchecked\")\n\tprotected <T> void writeWithMessageConverters(T returnValue, MethodParameter returnType,\n\t\t\tServletServerHttpRequest inputMessage, ServletServerHttpResponse outputMessage)\n\t\t\tthrows IOException, HttpMediaTypeNotAcceptableException {\n\n\t\tClass<?> returnValueClass = getReturnValueType(returnValue, returnType);\n\t\tHttpServletRequest servletRequest = inputMessage.getServletRequest();\n\t\tList<MediaType> requestedMediaTypes = getAcceptableMediaTypes(servletRequest);\n\t\tList<MediaType> producibleMediaTypes = getProducibleMediaTypes(servletRequest, returnValueClass);\n\n\t\tAssert.isTrue(returnValue == null || !producibleMediaTypes.isEmpty(),\n\t\t\t\t\"No converter found for return value of type: \" + returnValueClass);\n\n\t\tSet<MediaType> compatibleMediaTypes = new LinkedHashSet<MediaType>();\n\t\tfor (MediaType requestedType : requestedMediaTypes) {\n\t\t\tfor (MediaType producibleType : producibleMediaTypes) {\n\t\t\t\tif (requestedType.isCompatibleWith(producibleType)) {\n\t\t\t\t\tcompatibleMediaTypes.add(getMostSpecificMediaType(requestedType, producibleType));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (compatibleMediaTypes.isEmpty()) {\n\t\t\tif (returnValue != null) {\n\t\t\t\tthrow new HttpMediaTypeNotAcceptableException(producibleMediaTypes);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tList<MediaType> mediaTypes = new ArrayList<MediaType>(compatibleMediaTypes);\n\t\tMediaType.sortBySpecificityAndQuality(mediaTypes);\n\n\t\tMediaType selectedMediaType = null;\n\t\tfor (MediaType mediaType : mediaTypes) {\n\t\t\tif (mediaType.isConcrete()) {\n\t\t\t\tselectedMediaType = mediaType;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (mediaType.equals(MediaType.ALL) || mediaType.equals(MEDIA_TYPE_APPLICATION)) {\n\t\t\t\tselectedMediaType = MediaType.APPLICATION_OCTET_STREAM;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (selectedMediaType != null) {\n\t\t\tselectedMediaType = selectedMediaType.removeQualityValue();\n\t\t\tfor (HttpMessageConverter<?> messageConverter : this.messageConverters) {\n\t\t\t\tif (messageConverter.canWrite(returnValueClass, selectedMediaType)) {\n\t\t\t\t\treturnValue = (T) getAdvice().beforeBodyWrite(returnValue, returnType, selectedMediaType,\n\t\t\t\t\t\t\t(Class<? extends HttpMessageConverter<?>>) messageConverter.getClass(),\n\t\t\t\t\t\t\tinputMessage, outputMessage);\n\t\t\t\t\tif (returnValue != null) {\n\t\t\t\t\t\tif (messageConverter instanceof GenericHttpMessageConverter) {\n\t\t\t\t\t\t\tType type;\n\t\t\t\t\t\t\tif (HttpEntity.class.isAssignableFrom(returnType.getParameterType())) {\n\t\t\t\t\t\t\t\treturnType.increaseNestingLevel();\n\t\t\t\t\t\t\t\ttype = returnType.getNestedGenericParameterType();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ttype = returnType.getGenericParameterType();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t((GenericHttpMessageConverter<T>) messageConverter).write(returnValue, type, selectedMediaType, outputMessage);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t((HttpMessageConverter<T>) messageConverter).write(returnValue, selectedMediaType, outputMessage);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\t\t\t\tlogger.debug(\"Written [\" + returnValue + \"] as \\\"\" +\n\t\t\t\t\t\t\t\t\tselectedMediaType + \"\\\" using [\" + messageConverter + \"]\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (returnValue != null) {\n\t\t\tthrow new HttpMediaTypeNotAcceptableException(this.allSupportedMediaTypes);\n\t\t}\n\t}","id":52598,"modified_method":"/**\n\t * Writes the given return type to the given output message.\n\t * @param returnValue the value to write to the output message\n\t * @param returnType the type of the value\n\t * @param inputMessage the input messages. Used to inspect the {@code Accept} header.\n\t * @param outputMessage the output message to write to\n\t * @throws IOException thrown in case of I/O errors\n\t * @throws HttpMediaTypeNotAcceptableException thrown when the conditions indicated by {@code Accept} header on\n\t * the request cannot be met by the message converters\n\t */\n\t@SuppressWarnings(\"unchecked\")\n\tprotected <T> void writeWithMessageConverters(T returnValue, MethodParameter returnType,\n\t\t\tServletServerHttpRequest inputMessage, ServletServerHttpResponse outputMessage)\n\t\t\tthrows IOException, HttpMediaTypeNotAcceptableException {\n\n\t\tClass<?> returnValueClass = getReturnValueType(returnValue, returnType);\n\t\tType returnValueType = getGenericType(returnType);\n\t\tHttpServletRequest servletRequest = inputMessage.getServletRequest();\n\t\tList<MediaType> requestedMediaTypes = getAcceptableMediaTypes(servletRequest);\n\t\tList<MediaType> producibleMediaTypes = getProducibleMediaTypes(servletRequest, returnValueClass, returnValueType);\n\n\t\tAssert.isTrue(returnValue == null || !producibleMediaTypes.isEmpty(),\n\t\t\t\t\"No converter found for return value of type: \" + returnValueClass);\n\n\t\tSet<MediaType> compatibleMediaTypes = new LinkedHashSet<MediaType>();\n\t\tfor (MediaType requestedType : requestedMediaTypes) {\n\t\t\tfor (MediaType producibleType : producibleMediaTypes) {\n\t\t\t\tif (requestedType.isCompatibleWith(producibleType)) {\n\t\t\t\t\tcompatibleMediaTypes.add(getMostSpecificMediaType(requestedType, producibleType));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (compatibleMediaTypes.isEmpty()) {\n\t\t\tif (returnValue != null) {\n\t\t\t\tthrow new HttpMediaTypeNotAcceptableException(producibleMediaTypes);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tList<MediaType> mediaTypes = new ArrayList<MediaType>(compatibleMediaTypes);\n\t\tMediaType.sortBySpecificityAndQuality(mediaTypes);\n\n\t\tMediaType selectedMediaType = null;\n\t\tfor (MediaType mediaType : mediaTypes) {\n\t\t\tif (mediaType.isConcrete()) {\n\t\t\t\tselectedMediaType = mediaType;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (mediaType.equals(MediaType.ALL) || mediaType.equals(MEDIA_TYPE_APPLICATION)) {\n\t\t\t\tselectedMediaType = MediaType.APPLICATION_OCTET_STREAM;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (selectedMediaType != null) {\n\t\t\tselectedMediaType = selectedMediaType.removeQualityValue();\n\t\t\tfor (HttpMessageConverter<?> messageConverter : this.messageConverters) {\n\t\t\t\tif (messageConverter instanceof GenericHttpMessageConverter) {\n\t\t\t\t\tif (((GenericHttpMessageConverter<T>) messageConverter).canWrite(returnValueType,\n\t\t\t\t\t\t\treturnValueClass, selectedMediaType)) {\n\t\t\t\t\t\treturnValue = (T) getAdvice().beforeBodyWrite(returnValue, returnType, selectedMediaType,\n\t\t\t\t\t\t\t\t(Class<? extends HttpMessageConverter<?>>) messageConverter.getClass(),\n\t\t\t\t\t\t\t\tinputMessage, outputMessage);\n\t\t\t\t\t\tif (returnValue != null) {\n\t\t\t\t\t\t\t((GenericHttpMessageConverter<T>) messageConverter).write(returnValue,\n\t\t\t\t\t\t\t\t\treturnValueType, selectedMediaType, outputMessage);\n\t\t\t\t\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\t\t\t\t\tlogger.debug(\"Written [\" + returnValue + \"] as \\\"\" +\n\t\t\t\t\t\t\t\t\t\tselectedMediaType + \"\\\" using [\" + messageConverter + \"]\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (messageConverter.canWrite(returnValueClass, selectedMediaType)) {\n\t\t\t\t\treturnValue = (T) getAdvice().beforeBodyWrite(returnValue, returnType, selectedMediaType,\n\t\t\t\t\t\t\t(Class<? extends HttpMessageConverter<?>>) messageConverter.getClass(),\n\t\t\t\t\t\t\tinputMessage, outputMessage);\n\t\t\t\t\tif (returnValue != null) {\n\t\t\t\t\t\t((HttpMessageConverter<T>) messageConverter).write(returnValue,\n\t\t\t\t\t\t\t\tselectedMediaType, outputMessage);\n\t\t\t\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\t\t\t\tlogger.debug(\"Written [\" + returnValue + \"] as \\\"\" +\n\t\t\t\t\t\t\t\t\tselectedMediaType + \"\\\" using [\" + messageConverter + \"]\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (returnValue != null) {\n\t\t\tthrow new HttpMediaTypeNotAcceptableException(this.allSupportedMediaTypes);\n\t\t}\n\t}","commit_id":"289f35da3a57bb5e491b30c7351072b4e801c519","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Returns the media types that can be produced:\n\t * <ul>\n\t * <li>The producible media types specified in the request mappings, or\n\t * <li>Media types of configured converters that can write the specific return value, or\n\t * <li>{@link MediaType#ALL}\n\t * <\/ul>\n\t */\n\t@SuppressWarnings(\"unchecked\")\n\tprotected List<MediaType> getProducibleMediaTypes(HttpServletRequest request, Class<?> returnValueClass) {\n\t\tSet<MediaType> mediaTypes = (Set<MediaType>) request.getAttribute(HandlerMapping.PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE);\n\t\tif (!CollectionUtils.isEmpty(mediaTypes)) {\n\t\t\treturn new ArrayList<MediaType>(mediaTypes);\n\t\t}\n\t\telse if (!this.allSupportedMediaTypes.isEmpty()) {\n\t\t\tList<MediaType> result = new ArrayList<MediaType>();\n\t\t\tfor (HttpMessageConverter<?> converter : this.messageConverters) {\n\t\t\t\tif (converter.canWrite(returnValueClass, null)) {\n\t\t\t\t\tresult.addAll(converter.getSupportedMediaTypes());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\telse {\n\t\t\treturn Collections.singletonList(MediaType.ALL);\n\t\t}\n\t}","id":52599,"modified_method":"/**\n\t * @see #getProducibleMediaTypes(HttpServletRequest, Class, Type)\n\t */\n\t@SuppressWarnings(\"unchecked\")\n\tprotected List<MediaType> getProducibleMediaTypes(HttpServletRequest request, Class<?> returnValueClass) {\n\t\treturn getProducibleMediaTypes(request, returnValueClass, null);\n\t}","commit_id":"289f35da3a57bb5e491b30c7351072b4e801c519","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic boolean canWrite(Type type, Class<?> clazz, MediaType mediaType) {\n\t\treturn canWrite(mediaType);\n\t}","id":52600,"modified_method":"@Override\n\tpublic boolean canWrite(Class<?> clazz, MediaType mediaType) {\n\t\treturn canWrite(mediaType);\n\t}","commit_id":"289f35da3a57bb5e491b30c7351072b4e801c519","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n    public boolean destroyRouter(final long routerId) {\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Attempting to destroy router \" + routerId);\n        }\n\n        DomainRouterVO router = _routerDao.acquire(routerId);\n\n        if (router == null) {\n            s_logger.debug(\"Unable to acquire lock on router \" + routerId);\n            return false;\n        }\n\n        try {\n            if (router.getState() == State.Destroyed || router.getState() == State.Expunging || router.getRemoved() != null) {\n                if (s_logger.isDebugEnabled()) {\n                    s_logger.debug(\"Unable to find router or router is destroyed: \" + routerId);\n                }\n                return true;\n            }\n\n            if (!stop(router, 0)) {\n                s_logger.debug(\"Unable to stop the router: \" + routerId);\n                return false;\n            }\n            router = _routerDao.findById(routerId);\n            if (!_routerDao.updateIf(router, Event.DestroyRequested, router.getHostId())) {\n                s_logger.debug(\"VM \" + router.toString() + \" is not in a state to be destroyed.\");\n                return false;\n            }\n        } finally {\n            if (s_logger.isDebugEnabled())\n                s_logger.debug(\"Release lock on router \" + routerId + \" for stop\");\n            _routerDao.release(routerId);\n        }\n                        \n        router.setPublicIpAddress(null);\n        router.setVlanDbId(null);\n        _routerDao.update(router.getId(), router);\n        _routerDao.remove(router.getId());\n\n        List<VolumeVO> vols = _volsDao.findByInstance(routerId);\n        _storageMgr.destroy(router, vols);\n        \n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Successfully destroyed router: \" + routerId);\n        }\n        \n        final EventVO event = new EventVO();\n        event.setUserId(User.UID_SYSTEM);\n        event.setAccountId(router.getAccountId());\n        event.setType(EventTypes.EVENT_ROUTER_DESTROY);\n        event.setParameters(\"id=\" + router.getId());\n        event.setDescription(\"successfully destroyed router : \" + router.getName());\n        _eventDao.persist(event);\n\n        return true;\n    }","id":52601,"modified_method":"@Override\n    public boolean destroyRouter(final long routerId) {\n        \n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Attempting to destroy router \" + routerId);\n        }\n\n        DomainRouterVO router = _routerDao.acquire(routerId);\n\n        if (router == null) {\n            s_logger.debug(\"Unable to acquire lock on router \" + routerId);\n            return false;\n        }\n        \n        EventVO event = new EventVO();\n        event.setUserId(User.UID_SYSTEM);\n        event.setAccountId(router.getAccountId());\n        event.setType(EventTypes.EVENT_ROUTER_DESTROY);\n        event.setState(EventState.Started);\n        event.setParameters(\"id=\" + routerId);\n        event.setDescription(\"Starting to destroy router : \" + router.getName());\n        event = _eventDao.persist(event);\n\n        try {\n            if (router.getState() == State.Destroyed || router.getState() == State.Expunging || router.getRemoved() != null) {\n                if (s_logger.isDebugEnabled()) {\n                    s_logger.debug(\"Unable to find router or router is destroyed: \" + routerId);\n                }\n                return true;\n            }\n\n            if (!stop(router, 0)) {\n                s_logger.debug(\"Unable to stop the router: \" + routerId);\n                return false;\n            }\n            router = _routerDao.findById(routerId);\n            if (!_routerDao.updateIf(router, Event.DestroyRequested, router.getHostId())) {\n                s_logger.debug(\"VM \" + router.toString() + \" is not in a state to be destroyed.\");\n                return false;\n            }\n        } finally {\n            if (s_logger.isDebugEnabled())\n                s_logger.debug(\"Release lock on router \" + routerId + \" for stop\");\n            _routerDao.release(routerId);\n        }\n                        \n        router.setPublicIpAddress(null);\n        router.setVlanDbId(null);\n        _routerDao.update(router.getId(), router);\n        _routerDao.remove(router.getId());\n\n        List<VolumeVO> vols = _volsDao.findByInstance(routerId);\n        _storageMgr.destroy(router, vols);\n        \n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Successfully destroyed router: \" + routerId);\n        }\n        \n        EventVO completedEvent = new EventVO();\n        completedEvent.setUserId(User.UID_SYSTEM);\n        completedEvent.setAccountId(router.getAccountId());\n        completedEvent.setType(EventTypes.EVENT_ROUTER_DESTROY);\n        completedEvent.setStartId(event.getId());\n        completedEvent.setParameters(\"id=\" + routerId);        \n        completedEvent.setDescription(\"successfully destroyed router : \" + router.getName());\n        _eventDao.persist(completedEvent);\n\n        return true;\n    }","commit_id":"25b78d962f23a735883d1d55ca6485fc44c9c248","url":"https://github.com/apache/cloudstack"},{"original_method":"private ProgramStatus getProgramStatus(AuthToken token, ProgramId id)\n    throws ServerException, AppFabricServiceException {\n\n      return status(token, id);\n  }","id":52602,"modified_method":"/**\n   * checks the status of the program\n   */\n  private synchronized ProgramStatus getProgramStatus(AuthToken token, ProgramId id)\n    throws AppFabricServiceException {\n\n    try {\n      ProgramRuntimeService.RuntimeInfo runtimeInfo = findRuntimeInfo(id);\n\n      if (runtimeInfo == null) {\n        if (id.getType() != EntityType.WEBAPP) {\n          //Runtime info not found. Check to see if the program exists.\n          String spec = getSpecification(id);\n          if (spec == null || spec.isEmpty()) {\n            // program doesn't exist\n            return new ProgramStatus(id.getApplicationId(), id.getFlowId(), null, \"NOT_FOUND\");\n          } else {\n            // program exists and not running. so return stopped.\n            return new ProgramStatus(id.getApplicationId(), id.getFlowId(), null,\n                                     ProgramController.State.STOPPED.toString());\n          }\n        } else {\n          // TODO: Fetching webapp status is a hack. This will be fixed when webapp spec is added.\n          Location webappLoc = null;\n          try {\n            Id.Program programId = Id.Program.from(id.getAccountId(), id.getApplicationId(), id.getFlowId());\n            webappLoc = Programs.programLocation(locationFactory, appFabricDir, programId, Type.WEBAPP);\n          } catch (FileNotFoundException e) {\n            // No location found for webapp, no need to log this exception\n          }\n\n          if (webappLoc != null && webappLoc.exists()) {\n            // webapp exists and not running. so return stopped.\n            return new ProgramStatus(id.getApplicationId(), id.getFlowId(), null,\n                                     ProgramController.State.STOPPED.toString());\n          } else {\n            // webapp doesn't exist\n            return new ProgramStatus(id.getApplicationId(), id.getFlowId(), null, \"NOT_FOUND\");\n          }\n        }\n      }\n\n      Id.Program programId = runtimeInfo.getProgramId();\n      RunIdentifier runId = new RunIdentifier(runtimeInfo.getController().getRunId().getId());\n      String status = controllerStateToString(runtimeInfo.getController().getState());\n      return new ProgramStatus(programId.getApplicationId(), programId.getId(), runId, status);\n    } catch (Throwable throwable) {\n      LOG.warn(throwable.getMessage(), throwable);\n      throw new AppFabricServiceException(throwable.getMessage());\n    }\n  }","commit_id":"36948bb04d91a3b4b42b6b6f705320a93c5e30fc","url":"https://github.com/caskdata/cdap"},{"original_method":"private String controllerStateToString(ProgramController.State state) {\n    if (state == ProgramController.State.ALIVE) {\n      return \"RUNNING\";\n    }\n    if (state == ProgramController.State.ERROR) {\n      return \"FAILED\";\n    }\n    return state.toString();\n  }","id":52603,"modified_method":"/** NOTE: This was a temporary hack done to map the status to something that is\n   * UI friendly. Internal states of program controller are reasonable and hence\n   * no point in changing them.\n   */\n  private String controllerStateToString(ProgramController.State state) {\n    if (state == ProgramController.State.ALIVE) {\n      return \"RUNNING\";\n    }\n    if (state == ProgramController.State.ERROR) {\n      return \"FAILED\";\n    }\n    return state.toString();\n  }","commit_id":"36948bb04d91a3b4b42b6b6f705320a93c5e30fc","url":"https://github.com/caskdata/cdap"},{"original_method":"public static String getRoutingPath(String requestPath){\n\n    for (Map.Entry<Pattern, String> uriPattern : RoutingPath.entrySet()) {\n      Matcher match = uriPattern.getKey().matcher(requestPath);\n      if (match.find()) {\n        LOG.info(\"Status call from RouterPathLookup. matched {}\", requestPath);\n        return uriPattern.getValue();\n      }\n    }\n    return null;\n   }","id":52604,"modified_method":"public static String getRoutingPath(String requestPath){\n\n    for (Map.Entry<Pattern, String> uriPattern : ROUTING_MAP.entrySet()) {\n      Matcher match = uriPattern.getKey().matcher(requestPath);\n      if (match.find()) {\n        return uriPattern.getValue();\n      }\n    }\n    return null;\n   }","commit_id":"36948bb04d91a3b4b42b6b6f705320a93c5e30fc","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n     * Returns the discoverable mapped to the given port.\n     *\n     * @param port port to lookup.\n     * @param hostHeaderSupplier supplies the header information for the lookup.\n     * @return discoverable based on port and host header.\n     */\n  public Discoverable getDiscoverable(int port, Supplier<HeaderDecoder.HeaderInfo> hostHeaderSupplier)\n    throws Exception {\n    final String service = serviceMapRef.get().get(port);\n    if (service == null) {\n      LOG.debug(\"No service found for port {}\", port);\n      return null;\n    }\n\n    HeaderDecoder.HeaderInfo headerInfo = hostHeaderSupplier.get();\n    if (headerInfo == null) {\n      LOG.debug(\"Cannot find host header for service {} on port {}\", service, port);\n      return null;\n    }\n\n    try {\n      String path = headerInfo.getPath();\n      String destService = RouterPathLookup.getRoutingPath(path);\n      LOG.info(\"path is {}\", path);\n      CacheKey cacheKey;\n      if (destService != null) {\n        cacheKey = new CacheKey(destService, headerInfo);\n\n        LOG.info(\"Status call from RouterServiceLookup for service:{}\", destService);\n      }\n      else {\n        cacheKey = new CacheKey(service, headerInfo);\n        LOG.info(\"Status call from RouterServiceLookup for service:{}\", service);\n      }\n      Discoverable discoverable = discoverableCache.get(cacheKey).pick();\n      if (discoverable == null) {\n        // Looks like the service is no longer running.\n        LOG.debug(\"Invalidating cache for service {} on port {}\", service, port);\n        discoverableCache.invalidate(cacheKey);\n      }\n      return discoverable;\n    } catch (ExecutionException e) {\n      return null;\n    }\n  }","id":52605,"modified_method":"/**\n     * Returns the discoverable mapped to the given port.\n     *\n     * @param port port to lookup.\n     * @param hostHeaderSupplier supplies the header information for the lookup.\n     * @return discoverable based on port and host header.\n     */\n  public Discoverable getDiscoverable(int port, Supplier<HeaderDecoder.HeaderInfo> hostHeaderSupplier)\n    throws Exception {\n    final String service = serviceMapRef.get().get(port);\n    if (service == null) {\n      LOG.debug(\"No service found for port {}\", port);\n      return null;\n    }\n\n    HeaderDecoder.HeaderInfo headerInfo = hostHeaderSupplier.get();\n    if (headerInfo == null) {\n      LOG.debug(\"Cannot find host header for service {} on port {}\", service, port);\n      return null;\n    }\n\n    try {\n      String path = headerInfo.getPath();\n      String destService = RouterPathLookup.getRoutingPath(path);\n      LOG.info(\"path is {}\", path);\n      CacheKey cacheKey;\n      if (destService != null) {\n        cacheKey = new CacheKey(destService, headerInfo);\n        LOG.info(\"Request was routed to :{}\", destService);\n      } else {\n        cacheKey = new CacheKey(service, headerInfo);\n        LOG.info(\"Request was routed to:{}\", service);\n      }\n      Discoverable discoverable = discoverableCache.get(cacheKey).pick();\n      if (discoverable == null) {\n        // Looks like the service is no longer running.\n        LOG.debug(\"Invalidating cache for service {} on port {}\", service, port);\n        discoverableCache.invalidate(cacheKey);\n      }\n      return discoverable;\n    } catch (ExecutionException e) {\n      return null;\n    }\n  }","commit_id":"36948bb04d91a3b4b42b6b6f705320a93c5e30fc","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n     * Sends the <tt>message<\/tt> to the destination indicated by the\n     * <tt>to<\/tt> contact.\n     *\n     * @param to the <tt>Contact<\/tt> to send <tt>message<\/tt> to\n     * @param message the <tt>Message<\/tt> to send.\n     * @throws java.lang.IllegalStateException if the underlying ICQ stack is\n     * not registered and initialized.\n     * @throws java.lang.IllegalArgumentException if <tt>to<\/tt> is not an\n     * instance of ContactIcqImpl.\n     */\n    public void sendInstantMessage(Contact to, Message message)\n        throws IllegalStateException, IllegalArgumentException\n    {\n        assertConnected();\n\n        if( !(to instanceof ContactIcqImpl) )\n           throw new IllegalArgumentException(\n               \"The specified contact is not a Icq contact.\"\n               + to);\n\n        ImConversation imConversation =\n                icqProvider.getAimConnection().getIcbmService().\n                getImConversation(\n                    new Screenname(to.getAddress()));\n\n        String messageContent;\n        if (message.getContentType().equals(HTML_MIME_TYPE)\n            && !message.getContent().startsWith(defaultHtmlStartTag))\n        {\n            messageContent = defaultHtmlStartTag\n                                + message.getContent()\n                                + defaultHtmlEndTag;\n        }\n        else\n            messageContent = message.getContent();\n\n        MessageDeliveredEvent msgDeliveryPendingEvt\n            = new MessageDeliveredEvent(message, to);\n        \n        msgDeliveryPendingEvt = this.messageDeliveryPendingTransform(msgDeliveryPendingEvt);\n        \n        if (msgDeliveryPendingEvt == null)\n            return;\n        \n        String transformedContent = msgDeliveryPendingEvt.getSourceMessage().getContent();\n        \n        if (to.getPresenceStatus().isOnline())\n        {\n            //do not add the conversation listener in here. we'll add it\n            //inside the icbm listener\n            imConversation.sendMessage(new SimpleMessage(transformedContent));\n        }\n        else\n            imConversation.sendMessage(new SimpleMessage(transformedContent), true);\n\n        MessageDeliveredEvent msgDeliveredEvt\n            = new MessageDeliveredEvent(message, to);\n\n        // msgDeliveredEvt = this.messageDeliveredTransform(msgDeliveredEvt);\n        \n        if (msgDeliveredEvt != null)\n            fireMessageEvent(msgDeliveredEvt);\n    }","id":52606,"modified_method":"/**\n     * Sends the <tt>message<\/tt> to the destination indicated by the\n     * <tt>to<\/tt> contact.\n     *\n     * @param to the <tt>Contact<\/tt> to send <tt>message<\/tt> to\n     * @param message the <tt>Message<\/tt> to send.\n     * @throws java.lang.IllegalStateException if the underlying ICQ stack is\n     * not registered and initialized.\n     * @throws java.lang.IllegalArgumentException if <tt>to<\/tt> is not an\n     * instance of ContactIcqImpl.\n     */\n    public void sendInstantMessage(Contact to, Message message)\n        throws IllegalStateException, IllegalArgumentException\n    {\n        assertConnected();\n\n        if( !(to instanceof ContactIcqImpl) )\n           throw new IllegalArgumentException(\n               \"The specified contact is not a Icq contact.\"\n               + to);\n\n        ImConversation imConversation =\n                icqProvider.getAimConnection().getIcbmService().\n                getImConversation(\n                    new Screenname(to.getAddress()));\n\n        /*\n         * FIXME Does the fact that messageContent is not used mean that HTML\n         * messages are not correctly constructed?\n         */ \n        String messageContent;\n        if (message.getContentType().equals(HTML_MIME_TYPE)\n                && !message.getContent().startsWith(HTML_START_TAG))\n            messageContent\n                = HTML_START_TAG + message.getContent() + HTML_END_TAG;\n        else\n            messageContent = message.getContent();\n\n        MessageDeliveredEvent msgDeliveryPendingEvt\n            = new MessageDeliveredEvent(message, to);\n        \n        msgDeliveryPendingEvt = this.messageDeliveryPendingTransform(msgDeliveryPendingEvt);\n        \n        if (msgDeliveryPendingEvt == null)\n            return;\n        \n        String transformedContent = msgDeliveryPendingEvt.getSourceMessage().getContent();\n        \n        if (to.getPresenceStatus().isOnline())\n        {\n            //do not add the conversation listener in here. we'll add it\n            //inside the icbm listener\n            imConversation.sendMessage(new SimpleMessage(transformedContent));\n        }\n        else\n            imConversation.sendMessage(new SimpleMessage(transformedContent), true);\n\n        MessageDeliveredEvent msgDeliveredEvt\n            = new MessageDeliveredEvent(message, to);\n\n        // msgDeliveredEvt = this.messageDeliveredTransform(msgDeliveredEvt);\n        \n        if (msgDeliveredEvt != null)\n            fireMessageEvent(msgDeliveredEvt);\n    }","commit_id":"cbd5574fb59467140a462110844e3cad00255197","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n         * Create a corresponding message object and fire a\n         * <tt>MessageReceivedEvent<\/tt>.\n         *\n         * @param conversation the conversation where the message is received in.\n         * @param minfo informtion about the received message\n         */\n        public void gotMessage(Conversation conversation, MessageInfo minfo)\n        {\n            String msgBody = minfo.getMessage().getMessageBody();\n\n            if(logger.isDebugEnabled())\n                logger.debug(\"Received from \"\n                             + conversation.getBuddy()\n                             + \" the message \"\n                             + msgBody);\n\n            if(msgBody.startsWith(SYS_MSG_PREFIX_TEST)\n                && conversation.getBuddy().getFormatted().\n                    equals(icqProvider.getAccountID().getUserID()))\n            {\n                receivedKeepAlivePackets.addLast(msgBody);\n                return;\n            }\n\n            String msgContent;\n            String msgContentType;\n            if (msgBody.startsWith(defaultHtmlStartTag))\n            {\n                msgContent = msgBody.substring(\n                    msgBody.indexOf(defaultHtmlStartTag)\n                        + defaultHtmlStartTag.length(),\n                    msgBody.indexOf(defaultHtmlEndTag));\n\n                msgContentType = HTML_MIME_TYPE;\n            }\n            else\n            {\n                msgContent = msgBody;\n                msgContentType = DEFAULT_MIME_TYPE;\n            }\n\n            Message newMessage =\n                createMessage(msgContent, msgContentType,\n                    DEFAULT_MIME_ENCODING, null);\n\n            Contact sourceContact =\n                opSetPersPresence.findContactByID( conversation.getBuddy()\n                                                             .getFormatted());\n            if(sourceContact == null)\n            {\n                logger.debug(\"received a message from a unknown contact: \"\n                                   + conversation.getBuddy());\n                //create the volatile contact\n                sourceContact = opSetPersPresence\n                    .createVolatileContact(\n                        conversation.getBuddy().getFormatted());\n\n            }\n\n            //some messages arrive far away in the future for some\n            //reason that I currently don't know. Until we find it\n            //(which may well be never) we are putting in an agly hack\n            //ignoring messages with a date beyond tomorrow.\n            long current = System.currentTimeMillis();\n            long msgDate = minfo.getTimestamp().getTime();\n\n            if ( (current + ONE_DAY) > msgDate)\n                msgDate = current;\n\n\n            MessageReceivedEvent msgReceivedEvt = \n                new MessageReceivedEvent(newMessage, sourceContact, msgDate);\n\n            // msgReceivedEvt = messageReceivedTransform(msgReceivedEvt);\n            \n            if (msgReceivedEvt != null)\n            {\n                logger.debug(\"fire msg received for : \" +\n                    newMessage);\n                fireMessageEvent(msgReceivedEvt);\n            }\n        }","id":52607,"modified_method":"/**\n         * Create a corresponding message object and fire a\n         * <tt>MessageReceivedEvent<\/tt>.\n         *\n         * @param conversation the conversation where the message is received in.\n         * @param minfo informtion about the received message\n         */\n        public void gotMessage(Conversation conversation, MessageInfo minfo)\n        {\n            String msgBody = minfo.getMessage().getMessageBody();\n\n            if (logger.isDebugEnabled())\n                logger.debug(\"Received from \"\n                             + conversation.getBuddy()\n                             + \" the message \"\n                             + msgBody);\n\n            if(msgBody.startsWith(SYS_MSG_PREFIX_TEST)\n                && conversation.getBuddy().getFormatted().\n                    equals(icqProvider.getAccountID().getUserID()))\n            {\n                receivedKeepAlivePackets.addLast(msgBody);\n                return;\n            }\n\n            String msgContent;\n            String msgContentType;\n            if (msgBody.startsWith(HTML_START_TAG))\n            {\n                msgContent = msgBody.substring(\n                    msgBody.indexOf(HTML_START_TAG) + HTML_START_TAG.length(),\n                    msgBody.indexOf(HTML_END_TAG));\n\n                msgContentType = HTML_MIME_TYPE;\n            }\n            else\n            {\n                msgContent = msgBody;\n                msgContentType = DEFAULT_MIME_TYPE;\n            }\n\n            Message newMessage =\n                createMessage(msgContent, msgContentType,\n                    DEFAULT_MIME_ENCODING, null);\n\n            Contact sourceContact =\n                opSetPersPresence.findContactByID( conversation.getBuddy()\n                                                             .getFormatted());\n            if(sourceContact == null)\n            {\n                logger.debug(\"received a message from a unknown contact: \"\n                                   + conversation.getBuddy());\n                //create the volatile contact\n                sourceContact = opSetPersPresence\n                    .createVolatileContact(\n                        conversation.getBuddy().getFormatted());\n\n            }\n\n            //some messages arrive far away in the future for some\n            //reason that I currently don't know. Until we find it\n            //(which may well be never) we are putting in an agly hack\n            //ignoring messages with a date beyond tomorrow.\n            long current = System.currentTimeMillis();\n            long msgDate = minfo.getTimestamp().getTime();\n\n            if ( (current + ONE_DAY) > msgDate)\n                msgDate = current;\n\n\n            MessageReceivedEvent msgReceivedEvt = \n                new MessageReceivedEvent(newMessage, sourceContact, msgDate);\n\n            // msgReceivedEvt = messageReceivedTransform(msgReceivedEvt);\n\n            if (logger.isDebugEnabled())\n                logger.debug(\"fire msg received for : \" + newMessage);\n            fireMessageEvent(msgReceivedEvt);\n        }","commit_id":"cbd5574fb59467140a462110844e3cad00255197","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n         * The method is called by a ProtocolProvider implementation whenever\n         * a change in the registration state of the corresponding provider had\n         * occurred.\n         * @param evt ProviderStatusChangeEvent the event describing the status\n         * change.\n         */\n        public void registrationStateChanged(RegistrationStateChangeEvent evt)\n        {\n            if (logger.isDebugEnabled())\n                logger.debug(\"The provider changed state from: \"\n                         + evt.getOldState()\n                         + \" to: \" + evt.getNewState());\n\n            if (evt.getNewState() == RegistrationState.REGISTERED)\n            {\n                opSetPersPresence =\n                    (OperationSetPersistentPresenceMsnImpl) msnProvider\n                        .getOperationSet(OperationSetPersistentPresence.class);\n\n                MsnMessenger msnMessenger = msnProvider.getMessenger();\n\n                /*\n                 * FIXME What's the point of having two MsnMessageListener\n                 * instances?\n                 */\n                msnMessenger.addMessageListener(new MsnMessageListener());\n                msnMessenger.addEmailListener(new MsnMessageListener());\n            }\n        }","id":52608,"modified_method":"/**\n         * The method is called by a ProtocolProvider implementation whenever\n         * a change in the registration state of the corresponding provider had\n         * occurred.\n         * @param evt ProviderStatusChangeEvent the event describing the status\n         * change.\n         */\n        public void registrationStateChanged(RegistrationStateChangeEvent evt)\n        {\n            if (logger.isDebugEnabled())\n                logger.debug(\"The provider changed state from: \"\n                         + evt.getOldState()\n                         + \" to: \" + evt.getNewState());\n\n            if (evt.getNewState() == RegistrationState.REGISTERED)\n            {\n                opSetPersPresence =\n                    (OperationSetPersistentPresenceMsnImpl) msnProvider\n                        .getOperationSet(OperationSetPersistentPresence.class);\n\n                MsnMessenger msnMessenger = msnProvider.getMessenger();\n\n                /*\n                 * FIXME What's the point of having two MsnMessageListener\n                 * instances?\n                 */\n                msnMessenger.addMessageListener(new MsnMessageListener());\n                msnMessenger.addEmailListener(new MsnMessageListener());\n            }\n            else if(evt.getNewState() == RegistrationState.UNREGISTERED\n                || evt.getNewState() == RegistrationState.CONNECTION_FAILED\n                || evt.getNewState() == RegistrationState.AUTHENTICATION_FAILED)\n            {\n                if(senderThread != null)\n                {\n                    senderThread.stopRunning();\n                    senderThread = null;\n                }\n            }\n        }","commit_id":"086f50cb961273f081918ee2c0741442b2978708","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Sends the <tt>message<\/tt> to the destination indicated by the\n     * <tt>to<\/tt> contact.\n     *\n     * @param to the <tt>Contact<\/tt> to send <tt>message<\/tt> to\n     * @param message the <tt>Message<\/tt> to send.\n     * @throws java.lang.IllegalStateException if the underlying stack is\n     * not registered and initialized.\n     * @throws java.lang.IllegalArgumentException if <tt>to<\/tt> is not an\n     * instance of ContactImpl.\n     */\n    public void sendInstantMessage(final Contact to, Message message)\n        throws IllegalStateException, IllegalArgumentException\n    {\n        assertConnected();\n\n        if( !(to instanceof ContactMsnImpl) )\n           throw new IllegalArgumentException(\n               \"The specified contact is not an MSN contact.\"\n               + to);\n\n        final MessageDeliveredEvent msgDeliveryPendingEvt\n            = messageDeliveryPendingTransform(\n                new MessageDeliveredEvent(message, to));\n\n        if (msgDeliveryPendingEvt == null)\n            return;\n\n        MessageDeliveredEvent msgDeliveredEvt\n            = new MessageDeliveredEvent(message, to);\n\n        // msgDeliveredEvt = messageDeliveredTransform(msgDeliveredEvt);\n        \n        if (msgDeliveredEvt != null)\n            fireMessageEvent(msgDeliveredEvt);\n\n        // send message in separate thread so we won't block ui if\n        // it takes time. When sending offline messages msn uses soap\n        // and http and xml exchange can be time consuming.\n        new Thread()\n        {\n            @Override\n            public void run()\n            {\n                msnProvider.getMessenger().\n                    sendText(\n                        ((ContactMsnImpl)to).getSourceContact().getEmail(),\n                    msgDeliveryPendingEvt.getSourceMessage().getContent());\n            }\n        }.start();\n    }","id":52609,"modified_method":"/**\n     * Sends the <tt>message<\/tt> to the destination indicated by the\n     * <tt>to<\/tt> contact.\n     *\n     * @param to the <tt>Contact<\/tt> to send <tt>message<\/tt> to\n     * @param message the <tt>Message<\/tt> to send.\n     * @throws java.lang.IllegalStateException if the underlying stack is\n     * not registered and initialized.\n     * @throws java.lang.IllegalArgumentException if <tt>to<\/tt> is not an\n     * instance of ContactImpl.\n     */\n    public void sendInstantMessage(final Contact to, Message message)\n        throws IllegalStateException, IllegalArgumentException\n    {\n        assertConnected();\n\n        if( !(to instanceof ContactMsnImpl) )\n           throw new IllegalArgumentException(\n               \"The specified contact is not an MSN contact.\"\n               + to);\n\n        final MessageDeliveredEvent msgDeliveryPendingEvt\n            = messageDeliveryPendingTransform(\n                new MessageDeliveredEvent(message, to));\n\n        if (msgDeliveryPendingEvt == null)\n            return;\n\n        MessageDeliveredEvent msgDeliveredEvt\n            = new MessageDeliveredEvent(message, to);\n\n        fireMessageEvent(msgDeliveredEvt);\n\n        // send message in separate thread so we won't block ui if\n        // it takes time.\n        if(senderThread == null)\n        {\n            senderThread = new SenderThread();\n            senderThread.start();\n        }\n\n        senderThread.sendMessage(\n                (ContactMsnImpl)to,\n                msgDeliveryPendingEvt.getSourceMessage().getContent());\n    }","commit_id":"086f50cb961273f081918ee2c0741442b2978708","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Sends the <tt>message<\/tt> to the destination indicated by the\n     * <tt>to<\/tt> contact.\n     *\n     * @param to the <tt>Contact<\/tt> to send <tt>message<\/tt> to\n     * @param message the <tt>Message<\/tt> to send.\n     * @throws java.lang.IllegalStateException if the underlying ICQ stack is\n     * not registered and initialized.\n     * @throws java.lang.IllegalArgumentException if <tt>to<\/tt> is not an\n     * instance of ContactIcqImpl.\n     */\n    public void sendInstantMessage(Contact to, Message message)\n        throws IllegalStateException, IllegalArgumentException\n    {\n        assertConnected();\n\n        if( !(to instanceof ContactIcqImpl) )\n           throw new IllegalArgumentException(\n               \"The specified contact is not a Icq contact.\"\n               + to);\n\n\n        ImConversation imConversation =\n                icqProvider.getAimConnection().getIcbmService().\n                getImConversation(\n                    new Screenname(to.getAddress()));\n\n        //split the message in multiple parts in case it is bigger than the\n        //max message length\n        LinkedList messageParts = new LinkedList();\n        String messageContent = message.getContent();\n\n        while (messageContent.length() > MAX_MSG_LEN)\n        {\n            messageParts.add(messageContent.substring(0, MAX_MSG_LEN));\n            messageContent = messageContent.substring(MAX_MSG_LEN);\n        }\n\n        if (messageContent.length() > 0)\n            messageParts.add(messageContent);\n\n        //now send the all the parts\n        for(int i = 0; i < messageParts.size(); i++)\n        {\n            String messageSegment = (String)messageParts.get(i);\n            if (to.getPresenceStatus().isOnline())\n            {\n                //do not add the conversation listener in here. we'll add it\n                //inside the icbm listener\n                imConversation.sendMessage(new SimpleMessage(messageSegment));\n            }\n            else\n            {\n                imConversation.sendMessage(new SimpleMessage(messageSegment)\n                                           , true);\n            }\n\n            //temporarily and uglity fire the sent event here.\n            /** @todo move elsewhere */\n            //in case we have a multi part message, make sure that at least\n            //the first message delivered event is for a message with the same\n            //uid as the one that was passed to us.\n            MessageDeliveredEvent msgDeliveredEvt\n                = new MessageDeliveredEvent(\n                    new MessageIcqImpl(messageSegment\n                                       , message.getContentType()\n                                       , message.getEncoding()\n                                       , message.getSubject()\n                                       , (i == 0)\n                                           ? message.getMessageUID()\n                                           : null)\n                        , to\n                        , new Date());\n\n            fireMessageEvent(msgDeliveredEvt);\n        }\n    }","id":52610,"modified_method":"/**\n     * Sends the <tt>message<\/tt> to the destination indicated by the\n     * <tt>to<\/tt> contact.\n     *\n     * @param to the <tt>Contact<\/tt> to send <tt>message<\/tt> to\n     * @param message the <tt>Message<\/tt> to send.\n     * @throws java.lang.IllegalStateException if the underlying ICQ stack is\n     * not registered and initialized.\n     * @throws java.lang.IllegalArgumentException if <tt>to<\/tt> is not an\n     * instance of ContactIcqImpl.\n     */\n    public void sendInstantMessage(Contact to, Message message)\n        throws IllegalStateException, IllegalArgumentException\n    {\n        assertConnected();\n\n        if( !(to instanceof ContactIcqImpl) )\n           throw new IllegalArgumentException(\n               \"The specified contact is not a Icq contact.\"\n               + to);\n\n        ImConversation imConversation =\n                icqProvider.getAimConnection().getIcbmService().\n                getImConversation(\n                    new Screenname(to.getAddress()));\n\n        if (to.getPresenceStatus().isOnline())\n        {\n            //do not add the conversation listener in here. we'll add it\n            //inside the icbm listener\n            imConversation.sendMessage(new SimpleMessage(message.getContent()));\n        }\n        else\n            imConversation.sendMessage(new SimpleMessage(message.getContent())\n                                       , true);\n\n        //temporarily and uglity fire the sent event here.\n        /** @todo move elsewhaere */\n        MessageDeliveredEvent msgDeliveredEvt\n            = new MessageDeliveredEvent(\n                message, to, new Date());\n\n        fireMessageEvent(msgDeliveredEvt);\n    }","commit_id":"53d2c426cbf42cffeb6bc5d888ba8d08448877c0","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void testAddCA() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Users\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Add User']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_79_screenName\", RuntimeVariables.replace(\"CA\"));\n\t\tselenium.type(\"_79_screenName\", RuntimeVariables.replace(\"CA\"));\n\t\tselenium.type(\"_79_emailAddress\",\n\t\t\tRuntimeVariables.replace(\"CA@liferay.com\"));\n\t\tselenium.select(\"_79_prefixId\", RuntimeVariables.replace(\"label=Mrs.\"));\n\t\tselenium.typeKeys(\"_79_firstName\", RuntimeVariables.replace(\"CA\"));\n\t\tselenium.type(\"_79_firstName\", RuntimeVariables.replace(\"CA\"));\n\t\tselenium.typeKeys(\"_79_lastName\", RuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.type(\"_79_lastName\", RuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.select(\"_79_suffixId\", RuntimeVariables.replace(\"label=PhD.\"));\n\t\tselenium.select(\"_79_birthdayMonth\",\n\t\t\tRuntimeVariables.replace(\"label=July\"));\n\t\tselenium.select(\"_79_birthdayDay\", RuntimeVariables.replace(\"label=26\"));\n\t\tselenium.select(\"_79_birthdayYear\",\n\t\t\tRuntimeVariables.replace(\"label=1987\"));\n\t\tselenium.select(\"_79_male\", RuntimeVariables.replace(\"label=Female\"));\n\t\tselenium.typeKeys(\"_79_jobTitle\",\n\t\t\tRuntimeVariables.replace(\"Community Admin\"));\n\t\tselenium.type(\"_79_jobTitle\",\n\t\t\tRuntimeVariables.replace(\"Community Admin\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Password\");\n\t\tselenium.type(\"_79_password1\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.type(\"_79_password2\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Regular Roles\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Assign Regular Roles']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Available\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//tr[4]/td[1]/input\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Update Associations']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"_79_tabs2TabsBack\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":52611,"modified_method":"public void testAddCA() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Users\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Add User\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_79_screenName\", RuntimeVariables.replace(\"CA\"));\n\t\tselenium.type(\"_79_screenName\", RuntimeVariables.replace(\"CA\"));\n\t\tselenium.type(\"_79_emailAddress\",\n\t\t\tRuntimeVariables.replace(\"CA@liferay.com\"));\n\t\tselenium.select(\"_79_prefixId\", RuntimeVariables.replace(\"label=Mrs.\"));\n\t\tselenium.typeKeys(\"_79_firstName\", RuntimeVariables.replace(\"CA\"));\n\t\tselenium.type(\"_79_firstName\", RuntimeVariables.replace(\"CA\"));\n\t\tselenium.typeKeys(\"_79_lastName\", RuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.type(\"_79_lastName\", RuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.select(\"_79_suffixId\", RuntimeVariables.replace(\"label=PhD.\"));\n\t\tselenium.select(\"_79_birthdayMonth\",\n\t\t\tRuntimeVariables.replace(\"label=July\"));\n\t\tselenium.select(\"_79_birthdayDay\", RuntimeVariables.replace(\"label=26\"));\n\t\tselenium.select(\"_79_birthdayYear\",\n\t\t\tRuntimeVariables.replace(\"label=1987\"));\n\t\tselenium.select(\"_79_male\", RuntimeVariables.replace(\"label=Female\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"passwordLink\");\n\t\tselenium.type(\"_79_password1\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.type(\"_79_password2\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"rolesLink\");\n\t\tselenium.click(\"//div[@id='roles']/nobr/a[2]\");\n\t\tselenium.waitForPopUp(\"regularRole\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"name=regularRole\");\n\t\tselenium.click(\"link=Community Admin\");\n\t\tselenium.selectWindow(\"name=null\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"1cad833703516b801f0a25523170990009259508","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMember() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Users\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Add User']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_79_screenName\", RuntimeVariables.replace(\"Member\"));\n\t\tselenium.type(\"_79_screenName\", RuntimeVariables.replace(\"Member\"));\n\t\tselenium.type(\"_79_emailAddress\",\n\t\t\tRuntimeVariables.replace(\"Member@liferay.com\"));\n\t\tselenium.typeKeys(\"_79_prefixId\", RuntimeVariables.replace(\"label=Mr.\"));\n\t\tselenium.type(\"_79_prefixId\", RuntimeVariables.replace(\"label=Mr.\"));\n\t\tselenium.typeKeys(\"_79_firstName\", RuntimeVariables.replace(\"Member\"));\n\t\tselenium.type(\"_79_firstName\", RuntimeVariables.replace(\"Member\"));\n\t\tselenium.typeKeys(\"_79_lastName\", RuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.type(\"_79_lastName\", RuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.select(\"_79_suffixId\", RuntimeVariables.replace(\"label=PhD.\"));\n\t\tselenium.select(\"_79_birthdayMonth\",\n\t\t\tRuntimeVariables.replace(\"label=April\"));\n\t\tselenium.select(\"_79_birthdayDay\", RuntimeVariables.replace(\"label=10\"));\n\t\tselenium.select(\"_79_birthdayYear\",\n\t\t\tRuntimeVariables.replace(\"label=1986\"));\n\t\tselenium.select(\"_79_male\", RuntimeVariables.replace(\"label=Male\"));\n\t\tselenium.typeKeys(\"_79_jobTitle\",\n\t\t\tRuntimeVariables.replace(\"Community Member\"));\n\t\tselenium.type(\"_79_jobTitle\",\n\t\t\tRuntimeVariables.replace(\"Community Member\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Password\");\n\t\tselenium.type(\"_79_password1\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.type(\"_79_password2\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Regular Roles\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Assign Regular Roles']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Available\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//tr[6]/td[1]/input\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Update Associations']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"_79_tabs2TabsBack\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":52612,"modified_method":"public void testAddMember() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Users\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Add User\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_79_screenName\", RuntimeVariables.replace(\"Member\"));\n\t\tselenium.type(\"_79_screenName\", RuntimeVariables.replace(\"Member\"));\n\t\tselenium.type(\"_79_emailAddress\",\n\t\t\tRuntimeVariables.replace(\"Member@liferay.com\"));\n\t\tselenium.typeKeys(\"_79_prefixId\", RuntimeVariables.replace(\"label=Mr.\"));\n\t\tselenium.type(\"_79_prefixId\", RuntimeVariables.replace(\"label=Mr.\"));\n\t\tselenium.typeKeys(\"_79_firstName\", RuntimeVariables.replace(\"Member\"));\n\t\tselenium.type(\"_79_firstName\", RuntimeVariables.replace(\"Member\"));\n\t\tselenium.typeKeys(\"_79_lastName\", RuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.type(\"_79_lastName\", RuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.select(\"_79_suffixId\", RuntimeVariables.replace(\"label=PhD.\"));\n\t\tselenium.select(\"_79_birthdayMonth\",\n\t\t\tRuntimeVariables.replace(\"label=April\"));\n\t\tselenium.select(\"_79_birthdayDay\", RuntimeVariables.replace(\"label=10\"));\n\t\tselenium.select(\"_79_birthdayYear\",\n\t\t\tRuntimeVariables.replace(\"label=1986\"));\n\t\tselenium.select(\"_79_male\", RuntimeVariables.replace(\"label=Male\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"passwordLink\");\n\t\tselenium.type(\"_79_password1\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.type(\"_79_password2\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"rolesLink\");\n\t\tselenium.click(\"//div[@id='roles']/nobr/a[2]\");\n\t\tselenium.waitForPopUp(\"regularRole\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"name=regularRole\");\n\t\tselenium.click(\"link=Member\");\n\t\tselenium.selectWindow(\"name=null\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"1cad833703516b801f0a25523170990009259508","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPublisher() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Users\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Add User']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_79_screenName\",\n\t\t\tRuntimeVariables.replace(\"Publisher\"));\n\t\tselenium.type(\"_79_screenName\", RuntimeVariables.replace(\"Publisher\"));\n\t\tselenium.type(\"_79_emailAddress\",\n\t\t\tRuntimeVariables.replace(\"Publisher@liferay.com\"));\n\t\tselenium.select(\"_79_prefixId\", RuntimeVariables.replace(\"label=Mrs.\"));\n\t\tselenium.typeKeys(\"_79_firstName\", RuntimeVariables.replace(\"Publisher\"));\n\t\tselenium.type(\"_79_firstName\", RuntimeVariables.replace(\"Publisher\"));\n\t\tselenium.typeKeys(\"_79_lastName\", RuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.type(\"_79_lastName\", RuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.select(\"_79_suffixId\", RuntimeVariables.replace(\"label=PhD.\"));\n\t\tselenium.select(\"_79_birthdayMonth\",\n\t\t\tRuntimeVariables.replace(\"label=September\"));\n\t\tselenium.select(\"_79_birthdayDay\", RuntimeVariables.replace(\"label=24\"));\n\t\tselenium.select(\"_79_birthdayYear\",\n\t\t\tRuntimeVariables.replace(\"label=1984\"));\n\t\tselenium.select(\"_79_male\", RuntimeVariables.replace(\"label=Female\"));\n\t\tselenium.typeKeys(\"_79_jobTitle\", RuntimeVariables.replace(\"Publisher\"));\n\t\tselenium.type(\"_79_jobTitle\", RuntimeVariables.replace(\"Publisher\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Password\");\n\t\tselenium.type(\"_79_password1\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.type(\"_79_password2\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Regular Roles\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Assign Regular Roles']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Available\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//tr[9]/td[1]/input\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Update Associations']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"_79_tabs2TabsBack\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":52613,"modified_method":"public void testAddPublisher() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Users\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Add User\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_79_screenName\",\n\t\t\tRuntimeVariables.replace(\"Publisher\"));\n\t\tselenium.type(\"_79_screenName\", RuntimeVariables.replace(\"Publisher\"));\n\t\tselenium.type(\"_79_emailAddress\",\n\t\t\tRuntimeVariables.replace(\"Publisher@liferay.com\"));\n\t\tselenium.select(\"_79_prefixId\", RuntimeVariables.replace(\"label=Mrs.\"));\n\t\tselenium.typeKeys(\"_79_firstName\", RuntimeVariables.replace(\"Publisher\"));\n\t\tselenium.type(\"_79_firstName\", RuntimeVariables.replace(\"Publisher\"));\n\t\tselenium.typeKeys(\"_79_lastName\", RuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.type(\"_79_lastName\", RuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.select(\"_79_suffixId\", RuntimeVariables.replace(\"label=PhD.\"));\n\t\tselenium.select(\"_79_birthdayMonth\",\n\t\t\tRuntimeVariables.replace(\"label=September\"));\n\t\tselenium.select(\"_79_birthdayDay\", RuntimeVariables.replace(\"label=24\"));\n\t\tselenium.select(\"_79_birthdayYear\",\n\t\t\tRuntimeVariables.replace(\"label=1984\"));\n\t\tselenium.select(\"_79_male\", RuntimeVariables.replace(\"label=Female\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"passwordLink\");\n\t\tselenium.type(\"_79_password1\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.type(\"_79_password2\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"rolesLink\");\n\t\tselenium.click(\"//div[@id='roles']/nobr/a[2]\");\n\t\tselenium.waitForPopUp(\"regularRole\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"name=regularRole\");\n\t\tselenium.click(\"link=Publisher\");\n\t\tselenium.selectWindow(\"name=null\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"1cad833703516b801f0a25523170990009259508","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWriter() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Users\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Add User']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_79_screenName\", RuntimeVariables.replace(\"Writer\"));\n\t\tselenium.type(\"_79_screenName\", RuntimeVariables.replace(\"Writer\"));\n\t\tselenium.type(\"_79_emailAddress\",\n\t\t\tRuntimeVariables.replace(\"Writer@liferay.com\"));\n\t\tselenium.typeKeys(\"_79_prefixId\", RuntimeVariables.replace(\"label=Mr.\"));\n\t\tselenium.type(\"_79_prefixId\", RuntimeVariables.replace(\"label=Mr.\"));\n\t\tselenium.typeKeys(\"_79_firstName\", RuntimeVariables.replace(\"Writer\"));\n\t\tselenium.type(\"_79_firstName\", RuntimeVariables.replace(\"Writer\"));\n\t\tselenium.typeKeys(\"_79_lastName\", RuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.type(\"_79_lastName\", RuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.select(\"_79_suffixId\", RuntimeVariables.replace(\"label=PhD.\"));\n\t\tselenium.select(\"_79_birthdayMonth\",\n\t\t\tRuntimeVariables.replace(\"label=May\"));\n\t\tselenium.select(\"_79_birthdayDay\", RuntimeVariables.replace(\"label=22\"));\n\t\tselenium.select(\"_79_birthdayYear\",\n\t\t\tRuntimeVariables.replace(\"label=1985\"));\n\t\tselenium.select(\"_79_male\", RuntimeVariables.replace(\"label=Male\"));\n\t\tselenium.typeKeys(\"_79_jobTitle\", RuntimeVariables.replace(\"Writer\"));\n\t\tselenium.type(\"_79_jobTitle\", RuntimeVariables.replace(\"Writer\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Password\");\n\t\tselenium.type(\"_79_password1\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.type(\"_79_password2\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Regular Roles\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Assign Regular Roles']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Available\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//tr[11]/td[1]/input\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Update Associations']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"_79_tabs2TabsBack\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":52614,"modified_method":"public void testAddWriter() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Users\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Add User\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_79_screenName\", RuntimeVariables.replace(\"Writer\"));\n\t\tselenium.type(\"_79_screenName\", RuntimeVariables.replace(\"Writer\"));\n\t\tselenium.type(\"_79_emailAddress\",\n\t\t\tRuntimeVariables.replace(\"Writer@liferay.com\"));\n\t\tselenium.typeKeys(\"_79_prefixId\", RuntimeVariables.replace(\"label=Mr.\"));\n\t\tselenium.type(\"_79_prefixId\", RuntimeVariables.replace(\"label=Mr.\"));\n\t\tselenium.typeKeys(\"_79_firstName\", RuntimeVariables.replace(\"Writer\"));\n\t\tselenium.type(\"_79_firstName\", RuntimeVariables.replace(\"Writer\"));\n\t\tselenium.typeKeys(\"_79_lastName\", RuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.type(\"_79_lastName\", RuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.select(\"_79_suffixId\", RuntimeVariables.replace(\"label=PhD.\"));\n\t\tselenium.select(\"_79_birthdayMonth\",\n\t\t\tRuntimeVariables.replace(\"label=May\"));\n\t\tselenium.select(\"_79_birthdayDay\", RuntimeVariables.replace(\"label=22\"));\n\t\tselenium.select(\"_79_birthdayYear\",\n\t\t\tRuntimeVariables.replace(\"label=1985\"));\n\t\tselenium.select(\"_79_male\", RuntimeVariables.replace(\"label=Male\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"passwordLink\");\n\t\tselenium.type(\"_79_password1\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.type(\"_79_password2\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"rolesLink\");\n\t\tselenium.click(\"//div[@id='roles']/nobr/a[2]\");\n\t\tselenium.waitForPopUp(\"regularRole\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"name=regularRole\");\n\t\tselenium.click(\"link=Writer\");\n\t\tselenium.selectWindow(\"name=null\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"1cad833703516b801f0a25523170990009259508","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n    public void remove() {\n      if (currentRemoved)\n        throw new IllegalStateException(\"Current element has already been removed\");\n\n      if (currentValue == null)\n        throw new IllegalStateException(\"Next method was not called for given iterator\");\n\n      if (removeFromNewEntries(currentValue)) {\n        if (size >= 0)\n          size--;\n      } else {\n        Change counter = changedValues.get(currentValue);\n        if (counter != null) {\n          counter.decrement();\n          if (size >= 0)\n            if (counter.isUndefined())\n              size = -1;\n            else\n              size--;\n        } else {\n          if (nextChange != null) {\n            changedValues.put(currentValue, new DiffChange(-1));\n            changedValuesIterator = changedValues.tailMap(nextChange.getKey(), false).entrySet().iterator();\n          } else {\n            changedValues.put(currentValue, new DiffChange(-1));\n          }\n\n          size = -1;\n        }\n      }\n\n      fireCollectionChangedEvent(new OMultiValueChangeEvent<OIdentifiable, OIdentifiable>(\n          OMultiValueChangeEvent.OChangeType.REMOVE, currentValue, null, currentValue));\n      currentRemoved = true;\n    }","id":52615,"modified_method":"@Override\n    public void remove() {\n      if (currentRemoved)\n        throw new IllegalStateException(\"Current element has already been removed\");\n\n      if (currentValue == null)\n        throw new IllegalStateException(\"Next method was not called for given iterator\");\n\n      if (removeFromNewEntries(currentValue)) {\n        if (size >= 0)\n          size--;\n      } else {\n        Change counter = changedValues.get(currentValue);\n        if (counter != null) {\n          counter.decrement();\n          if (size >= 0)\n            if (counter.isUndefined())\n              size = -1;\n            else\n              size--;\n        } else {\n          if (nextChange != null) {\n            changedValues.put(currentValue, new DiffChange(-1));\n            changedValuesIterator = changedValues.tailMap(nextChange.getKey(), false).entrySet().iterator();\n          } else {\n            changedValues.put(currentValue, new DiffChange(-1));\n          }\n\n          size = -1;\n        }\n      }\n\n      if( updateOwner )\n        fireCollectionChangedEvent(new OMultiValueChangeEvent<OIdentifiable, OIdentifiable>(\n          OMultiValueChangeEvent.OChangeType.REMOVE, currentValue, null, currentValue));\n      currentRemoved = true;\n    }","commit_id":"61b8d15f81545bba321f3e2c3b0a99dfa0c4abb6","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void add(OIdentifiable identifiable) {\n    if (identifiable.getIdentity().isValid()) {\n      Change counter = changes.get(identifiable);\n      if (counter == null)\n        changes.put(identifiable, new DiffChange(1));\n      else {\n        if (counter.isUndefined()) {\n          counter = getAbsoluteValue(identifiable);\n          changes.put(identifiable, counter);\n        }\n        counter.increment();\n      }\n    } else {\n      OModifiableInteger counter = newEntries.get(identifiable);\n      if (counter == null)\n        newEntries.put(identifiable, new OModifiableInteger(1));\n      else\n        counter.increment();\n    }\n\n    if (size >= 0)\n      size++;\n\n    fireCollectionChangedEvent(new OMultiValueChangeEvent<OIdentifiable, OIdentifiable>(OMultiValueChangeEvent.OChangeType.ADD,\n        identifiable, identifiable));\n  }","id":52616,"modified_method":"public void add(OIdentifiable identifiable) {\n    if (identifiable.getIdentity().isValid()) {\n      Change counter = changes.get(identifiable);\n      if (counter == null)\n        changes.put(identifiable, new DiffChange(1));\n      else {\n        if (counter.isUndefined()) {\n          counter = getAbsoluteValue(identifiable);\n          changes.put(identifiable, counter);\n        }\n        counter.increment();\n      }\n    } else {\n      OModifiableInteger counter = newEntries.get(identifiable);\n      if (counter == null)\n        newEntries.put(identifiable, new OModifiableInteger(1));\n      else\n        counter.increment();\n    }\n\n    if (size >= 0)\n      size++;\n\n    if( updateOwner )\n      fireCollectionChangedEvent(new OMultiValueChangeEvent<OIdentifiable, OIdentifiable>(OMultiValueChangeEvent.OChangeType.ADD,\n          identifiable, identifiable));\n  }","commit_id":"61b8d15f81545bba321f3e2c3b0a99dfa0c4abb6","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void remove(OIdentifiable identifiable) {\n    if (removeFromNewEntries(identifiable)) {\n      if (size >= 0)\n        size--;\n    } else {\n      final Change counter = changes.get(identifiable);\n      if (counter == null) {\n        // Not persistent keys can only be in changes or newEntries\n        if (identifiable.getIdentity().isPersistent()) {\n          changes.put(identifiable, new DiffChange(-1));\n          size = -1;\n        } else\n          // Return immediately to prevent firing of event\n          return;\n      } else {\n        counter.decrement();\n\n        if (size >= 0)\n          if (counter.isUndefined())\n            size = -1;\n          else\n            size--;\n      }\n    }\n\n    fireCollectionChangedEvent(new OMultiValueChangeEvent<OIdentifiable, OIdentifiable>(OMultiValueChangeEvent.OChangeType.REMOVE,\n        identifiable, null, identifiable));\n  }","id":52617,"modified_method":"public void remove(OIdentifiable identifiable) {\n    if (removeFromNewEntries(identifiable)) {\n      if (size >= 0)\n        size--;\n    } else {\n      final Change counter = changes.get(identifiable);\n      if (counter == null) {\n        // Not persistent keys can only be in changes or newEntries\n        if (identifiable.getIdentity().isPersistent()) {\n          changes.put(identifiable, new DiffChange(-1));\n          size = -1;\n        } else\n          // Return immediately to prevent firing of event\n          return;\n      } else {\n        counter.decrement();\n\n        if (size >= 0)\n          if (counter.isUndefined())\n            size = -1;\n          else\n            size--;\n      }\n    }\n\n    if( updateOwner )\n      fireCollectionChangedEvent(new OMultiValueChangeEvent<OIdentifiable, OIdentifiable>(OMultiValueChangeEvent.OChangeType.REMOVE,\n          identifiable, null, identifiable));\n  }","commit_id":"61b8d15f81545bba321f3e2c3b0a99dfa0c4abb6","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"protected void setUp() throws Exception {\n    super.setUp();\n\n    final TestFixtureBuilder<IdeaProjectTestFixture> projectBuilder = JavaTestFixtureFactory.getFixtureFactory().createLightFixtureBuilder();\n    myFixture = IdeaTestFixtureFactory.getFixtureFactory().createCodeInsightFixture(projectBuilder.getFixture());\n\n    myFixture.setUp();\n    myFixture.setTestDataPath(getTestDataPath());\n  }","id":52618,"modified_method":"protected void setUp() throws Exception {\n    super.setUp();\n\n    IdeaTestFixtureFactory factory = IdeaTestFixtureFactory.getFixtureFactory();\n    TestFixtureBuilder<IdeaProjectTestFixture> fixtureBuilder = factory.createLightFixtureBuilder(getProjectDescriptor());\n    final IdeaProjectTestFixture fixture = fixtureBuilder.getFixture();\n    myFixture = JavaTestFixtureFactory.getFixtureFactory().createCodeInsightFixture(fixture, new LightTempDirTestFixtureImpl());\n\n    myFixture.setUp();\n    myFixture.setTestDataPath(getTestDataPath());\n  }","commit_id":"9c5465d7c996f30396b54ac7ff47d8cf94ed8a15","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void setUp() throws Exception {\n        super.setUp();\n\n        // this will throw an exception if we don't have a full Android SDK, so we need to do this first thing before any other setup\n        String sdkPath = getTestSdkPath();\n\n        final TestFixtureBuilder<IdeaProjectTestFixture> projectBuilder =\n                IdeaTestFixtureFactory.getFixtureFactory().createFixtureBuilder(getName());\n        myFixture = JavaTestFixtureFactory.getFixtureFactory().createCodeInsightFixture(projectBuilder.getFixture());\n        final JavaModuleFixtureBuilder moduleFixtureBuilder = projectBuilder.addModule(JavaModuleFixtureBuilder.class);\n        final String dirPath = myFixture.getTempDirPath() + getContentRootPath();\n        final File dir = new File(dirPath);\n\n        if (!dir.exists()) {\n            assertTrue(dir.mkdirs());\n        }\n        tuneModule(moduleFixtureBuilder, dirPath);\n\n        final ArrayList<MyAdditionalModuleData> modules = new ArrayList<MyAdditionalModuleData>();\n        configureAdditionalModules(projectBuilder, modules);\n\n        myFixture.setUp();\n        myFixture.setTestDataPath(getTestDataPath());\n        myModule = moduleFixtureBuilder.getFixture().getModule();\n\n        // Must be done before addAndroidFacet, and must always be done, even if !myCreateManifest.\n        // We will delete it at the end of setUp; this is needed when unit tests want to rewrite\n        // the manifest on their own.\n        createManifest();\n\n        myFacet = addAndroidFacet(myModule, sdkPath, getPlatformDir(), isToAddSdk());\n\n        myAdditionalModules = new ArrayList<Module>();\n\n        for (MyAdditionalModuleData data : modules) {\n            final Module additionalModule = data.myModuleFixtureBuilder.getFixture().getModule();\n            myAdditionalModules.add(additionalModule);\n            final AndroidFacet facet = addAndroidFacet(additionalModule, sdkPath, getPlatformDir());\n            facet.setLibraryProject(data.myLibrary);\n            final String rootPath = getContentRootPath(data.myDirName);\n            myFixture.copyDirectoryToProject(\"res\", rootPath + \"/res\");\n            myFixture.copyFileToProject(SdkConstants.FN_ANDROID_MANIFEST_XML,\n                                        rootPath + '/' + SdkConstants.FN_ANDROID_MANIFEST_XML);\n            ModuleRootModificationUtil.addDependency(myModule, additionalModule);\n        }\n\n        if (!myCreateManifest) {\n            deleteManifest();\n        }\n\n        if (RenderSecurityManager.RESTRICT_READS) {\n            // Unit test class loader includes disk directories which security manager does not allow access to\n            RenderSecurityManager.sEnabled = false;\n        }\n\n        ((StartupManagerImpl) StartupManager.getInstance(getProject())).runPostStartupActivities();\n        VfsRootAccess.allowRootAccess(JetTestCaseBuilder.getHomeDirectory());\n\n        kotlinInternalModeOriginalValue = KotlinInternalMode.OBJECT$.getEnabled();\n        KotlinInternalMode.OBJECT$.setEnabled(true);\n    }","id":52619,"modified_method":"@Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        String sdkPath = getTestSdkPath();\n\n\n        IdeaTestFixtureFactory factory = IdeaTestFixtureFactory.getFixtureFactory();\n        //TestFixtureBuilder<IdeaProjectTestFixture> fixtureBuilder = factory.createLightFixtureBuilder(JetLightProjectDescriptor.INSTANCE);\n        TestFixtureBuilder<IdeaProjectTestFixture> fixtureBuilder = factory.createLightFixtureBuilder(new LightAndroidProjectDescriptor());\n        //final TestFixtureBuilder<IdeaProjectTestFixture> fixtureBuilder = factory.createLightFixtureBuilder(getName());\n        final IdeaProjectTestFixture fixture = fixtureBuilder.getFixture();\n        myFixture = IdeaTestFixtureFactory.getFixtureFactory().createCodeInsightFixture(fixture, new LightTempDirTestFixtureImpl(true));\n\n        final String dirPath = myFixture.getTempDirPath() + getContentRootPath();\n        final File dir = new File(dirPath);\n\n        if (!dir.exists()) {\n            assertTrue(dir.mkdirs());\n        }\n\n        myFixture.setUp();\n        myFixture.setTestDataPath(getTestDataPath());\n\n        myModule = myFixture.getModule();\n\n        createManifest();\n\n        myFacet = addAndroidFacet(myModule, sdkPath, getPlatformDir(), isToAddSdk());\n\n        if (!myCreateManifest) {\n            deleteManifest();\n        }\n\n        if (RenderSecurityManager.RESTRICT_READS) {\n            // Unit test class loader includes disk directories which security manager does not allow access to\n            RenderSecurityManager.sEnabled = false;\n        }\n\n        ((StartupManagerImpl) StartupManager.getInstance(getProject())).runPostStartupActivities();\n        VfsRootAccess.allowRootAccess(JetTestCaseBuilder.getHomeDirectory());\n\n        kotlinInternalModeOriginalValue = KotlinInternalMode.OBJECT$.getEnabled();\n        KotlinInternalMode.OBJECT$.setEnabled(true);\n    }","commit_id":"1912b2b0ec8ba76238353002157743cb47ca6c02","url":"https://github.com/JetBrains/kotlin"},{"original_method":"protected void addAndroidSdk(Module module, String sdkPath, String platformDir) {\n        Sdk androidSdk = createAndroidSdk(sdkPath, platformDir);\n        ModuleRootModificationUtil.setModuleSdk(module, androidSdk);\n    }","id":52620,"modified_method":"protected void addAndroidSdk(Module module, String sdkPath, String platformDir) {\n        assert androidSdk != null : \"android sdk must be initialized\";\n        ModuleRootModificationUtil.setModuleSdk(module, androidSdk);\n    }","commit_id":"1912b2b0ec8ba76238353002157743cb47ca6c02","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public Sdk createAndroidSdk(String sdkPath, String platformDir) {\n        Sdk sdk = ProjectJdkTable.getInstance().createSdk(\"android_test_sdk\", AndroidSdkType.getInstance());\n        SdkModificator sdkModificator = sdk.getSdkModificator();\n        sdkModificator.setHomePath(sdkPath);\n\n        VirtualFile androidJar;\n        if (platformDir.equals(getDefaultPlatformDir())) {\n            // Compatibility: the unit tests were using android.jar outside the sdk1.5 install;\n            // we need to use that one, rather than the real one in sdk1.5, in order for the\n            // tests to pass. Longer term, we should switch the unit tests over to all using\n            // a valid SDK.\n            String androidJarPath = sdkPath + \"/../android.jar!/\";\n            androidJar = JarFileSystem.getInstance().findFileByPath(androidJarPath);\n        } else {\n            androidJar = LocalFileSystem.getInstance().findFileByPath(sdkPath + \"/platforms/\" + platformDir + \"/android.jar\");\n        }\n        sdkModificator.addRoot(androidJar, OrderRootType.CLASSES);\n\n        VirtualFile resFolder = LocalFileSystem.getInstance().findFileByPath(sdkPath + \"/platforms/\" + platformDir + \"/data/res\");\n        sdkModificator.addRoot(resFolder, OrderRootType.CLASSES);\n\n        VirtualFile docsFolder = LocalFileSystem.getInstance().findFileByPath(sdkPath + \"/docs/reference\");\n        if (docsFolder != null) {\n            sdkModificator.addRoot(docsFolder, JavadocOrderRootType.getInstance());\n        }\n\n        AndroidSdkAdditionalData data = new AndroidSdkAdditionalData(sdk);\n        AndroidSdkData sdkData = AndroidSdkData.getSdkData(sdkPath);\n        assertNotNull(sdkData);\n        IAndroidTarget target = sdkData.findTargetByName(\"Android 4.2\"); // TODO: Get rid of this hardcoded version number\n        if (target == null) {\n            IAndroidTarget[] targets = sdkData.getTargets();\n            for (IAndroidTarget t : targets) {\n                if (t.getLocation().contains(platformDir)) {\n                    target = t;\n                    break;\n                }\n            }\n            if (target == null && targets.length > 0) {\n                target = targets[targets.length - 1];\n            }\n        }\n        assertNotNull(target);\n        data.setBuildTarget(target);\n        sdkModificator.setSdkAdditionalData(data);\n        sdkModificator.commitChanges();\n        return sdk;\n    }","id":52621,"modified_method":"public Sdk createAndroidSdk(String sdkPath, String platformDir) {\n        Sdk sdk = ProjectJdkTable.getInstance().createSdk(\"android_test_sdk\", AndroidSdkType.getInstance());\n        SdkModificator sdkModificator = sdk.getSdkModificator();\n        sdkModificator.setHomePath(sdkPath);\n\n        VirtualFile androidJar;\n        if (platformDir.equals(getDefaultPlatformDir())) {\n            // Compatibility: the unit tests were using android.jar outside the sdk1.5 install;\n            // we need to use that one, rather than the real one in sdk1.5, in order for the\n            // tests to pass. Longer term, we should switch the unit tests over to all using\n            // a valid SDK.\n            String androidJarPath = sdkPath + \"/../android.jar!/\";\n            androidJar = JarFileSystem.getInstance().findFileByPath(androidJarPath);\n        } else {\n            androidJar = LocalFileSystem.getInstance().findFileByPath(sdkPath + \"/platforms/\" + platformDir + \"/android.jar\");\n        }\n        sdkModificator.addRoot(androidJar, OrderRootType.CLASSES);\n\n        VirtualFile resFolder = LocalFileSystem.getInstance().findFileByPath(sdkPath + \"/platforms/\" + platformDir + \"/data/res\");\n        sdkModificator.addRoot(resFolder, OrderRootType.CLASSES);\n\n        VirtualFile docsFolder = LocalFileSystem.getInstance().findFileByPath(sdkPath + \"/docs/reference\");\n        if (docsFolder != null) {\n            sdkModificator.addRoot(docsFolder, JavadocOrderRootType.getInstance());\n        }\n\n        AndroidSdkAdditionalData data = new AndroidSdkAdditionalData(sdk);\n        AndroidSdkData sdkData = AndroidSdkData.getSdkData(sdkPath);\n        assertNotNull(sdkData);\n        IAndroidTarget target = sdkData.findTargetByName(\"Android 4.2\"); // TODO: Get rid of this hardcoded version number\n        if (target == null) {\n            IAndroidTarget[] targets = sdkData.getTargets();\n            for (IAndroidTarget t : targets) {\n                if (t.getLocation().contains(platformDir)) {\n                    target = t;\n                    break;\n                }\n            }\n            if (target == null && targets.length > 0) {\n                target = targets[targets.length - 1];\n            }\n        }\n        assertNotNull(target);\n        data.setBuildTarget(target);\n        data.setJavaSdk(PluginTestCaseBase.fullJdk());\n        // Srsly, WTF? Why do i have to manually add jdk classes to android sdk roots? Even with setJavaSdk(PluginTestCaseBase.fullJdk())\n        for (VirtualFile f : PluginTestCaseBase.fullJdk().getRootProvider().getFiles(OrderRootType.CLASSES)) {\n            sdkModificator.addRoot(f, OrderRootType.CLASSES);\n        }\n        sdkModificator.setSdkAdditionalData(data);\n        sdkModificator.commitChanges();\n        return sdk;\n    }","commit_id":"1912b2b0ec8ba76238353002157743cb47ca6c02","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        String sdkPath = getTestSdkPath();\n\n\n        IdeaTestFixtureFactory factory = IdeaTestFixtureFactory.getFixtureFactory();\n        //TestFixtureBuilder<IdeaProjectTestFixture> fixtureBuilder = factory.createLightFixtureBuilder(JetLightProjectDescriptor.INSTANCE);\n        TestFixtureBuilder<IdeaProjectTestFixture> fixtureBuilder = factory.createLightFixtureBuilder(new LightAndroidProjectDescriptor());\n        //final TestFixtureBuilder<IdeaProjectTestFixture> fixtureBuilder = factory.createLightFixtureBuilder(getName());\n        final IdeaProjectTestFixture fixture = fixtureBuilder.getFixture();\n        myFixture = IdeaTestFixtureFactory.getFixtureFactory().createCodeInsightFixture(fixture, new LightTempDirTestFixtureImpl(true));\n\n        final String dirPath = myFixture.getTempDirPath() + getContentRootPath();\n        final File dir = new File(dirPath);\n\n        if (!dir.exists()) {\n            assertTrue(dir.mkdirs());\n        }\n\n        myFixture.setUp();\n        myFixture.setTestDataPath(getTestDataPath());\n\n        myModule = myFixture.getModule();\n\n        createManifest();\n\n        myFacet = addAndroidFacet(myModule, sdkPath, getPlatformDir(), isToAddSdk());\n\n        if (!myCreateManifest) {\n            deleteManifest();\n        }\n\n        if (RenderSecurityManager.RESTRICT_READS) {\n            // Unit test class loader includes disk directories which security manager does not allow access to\n            RenderSecurityManager.sEnabled = false;\n        }\n\n        ((StartupManagerImpl) StartupManager.getInstance(getProject())).runPostStartupActivities();\n        VfsRootAccess.allowRootAccess(JetTestCaseBuilder.getHomeDirectory());\n\n        kotlinInternalModeOriginalValue = KotlinInternalMode.OBJECT$.getEnabled();\n        KotlinInternalMode.OBJECT$.setEnabled(true);\n    }","id":52622,"modified_method":"@Override\n    protected void setUp() throws Exception {\n        super.setUp();\n\n        // this will throw an exception if we don't have a full Android SDK, so we need to do this first thing before any other setup\n        String sdkPath = getTestSdkPath();\n\n        final TestFixtureBuilder<IdeaProjectTestFixture> projectBuilder =\n                IdeaTestFixtureFactory.getFixtureFactory().createFixtureBuilder(getName());\n        myFixture = JavaTestFixtureFactory.getFixtureFactory().createCodeInsightFixture(projectBuilder.getFixture());\n        final JavaModuleFixtureBuilder moduleFixtureBuilder = projectBuilder.addModule(JavaModuleFixtureBuilder.class);\n        final String dirPath = myFixture.getTempDirPath() + getContentRootPath();\n        final File dir = new File(dirPath);\n\n        if (!dir.exists()) {\n            assertTrue(dir.mkdirs());\n        }\n        tuneModule(moduleFixtureBuilder, dirPath);\n\n        final ArrayList<MyAdditionalModuleData> modules = new ArrayList<MyAdditionalModuleData>();\n        configureAdditionalModules(projectBuilder, modules);\n\n        myFixture.setUp();\n        myFixture.setTestDataPath(getTestDataPath());\n        myModule = moduleFixtureBuilder.getFixture().getModule();\n\n        // Must be done before addAndroidFacet, and must always be done, even if !myCreateManifest.\n        // We will delete it at the end of setUp; this is needed when unit tests want to rewrite\n        // the manifest on their own.\n        createManifest();\n\n        androidSdk = createAndroidSdk(getTestSdkPath(), getPlatformDir());\n        myFacet = addAndroidFacet(myModule, sdkPath, getPlatformDir(), isToAddSdk());\n        myFixture.copyDirectoryToProject(getResDir(), \"res\");\n\n        myAdditionalModules = new ArrayList<Module>();\n\n        for (MyAdditionalModuleData data : modules) {\n            final Module additionalModule = data.myModuleFixtureBuilder.getFixture().getModule();\n            myAdditionalModules.add(additionalModule);\n            final AndroidFacet facet = addAndroidFacet(additionalModule, sdkPath, getPlatformDir());\n            facet.setLibraryProject(data.myLibrary);\n            final String rootPath = getContentRootPath(data.myDirName);\n            myFixture.copyDirectoryToProject(\"res\", rootPath + \"/res\");\n            myFixture.copyFileToProject(SdkConstants.FN_ANDROID_MANIFEST_XML,\n                                        rootPath + '/' + SdkConstants.FN_ANDROID_MANIFEST_XML);\n            ModuleRootModificationUtil.addDependency(myModule, additionalModule);\n        }\n\n        if (!myCreateManifest) {\n            deleteManifest();\n        }\n\n        if (RenderSecurityManager.RESTRICT_READS) {\n            // Unit test class loader includes disk directories which security manager does not allow access to\n            RenderSecurityManager.sEnabled = false;\n        }\n\n        ((StartupManagerImpl) StartupManager.getInstance(getProject())).runPostStartupActivities();\n        VfsRootAccess.allowRootAccess(JetTestCaseBuilder.getHomeDirectory());\n\n        kotlinInternalModeOriginalValue = KotlinInternalMode.OBJECT$.getEnabled();\n        KotlinInternalMode.OBJECT$.setEnabled(true);\n    }","commit_id":"04a905c35c73b3205b196d09dfd197a915143def","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public Sdk createAndroidSdk(String sdkPath, String platformDir) {\n        Sdk sdk = ProjectJdkTable.getInstance().createSdk(\"android_test_sdk\", AndroidSdkType.getInstance());\n        SdkModificator sdkModificator = sdk.getSdkModificator();\n        sdkModificator.setHomePath(sdkPath);\n\n        VirtualFile androidJar;\n        if (platformDir.equals(getDefaultPlatformDir())) {\n            // Compatibility: the unit tests were using android.jar outside the sdk1.5 install;\n            // we need to use that one, rather than the real one in sdk1.5, in order for the\n            // tests to pass. Longer term, we should switch the unit tests over to all using\n            // a valid SDK.\n            String androidJarPath = sdkPath + \"/../android.jar!/\";\n            androidJar = JarFileSystem.getInstance().findFileByPath(androidJarPath);\n        } else {\n            androidJar = LocalFileSystem.getInstance().findFileByPath(sdkPath + \"/platforms/\" + platformDir + \"/android.jar\");\n        }\n        sdkModificator.addRoot(androidJar, OrderRootType.CLASSES);\n\n        VirtualFile resFolder = LocalFileSystem.getInstance().findFileByPath(sdkPath + \"/platforms/\" + platformDir + \"/data/res\");\n        sdkModificator.addRoot(resFolder, OrderRootType.CLASSES);\n\n        VirtualFile docsFolder = LocalFileSystem.getInstance().findFileByPath(sdkPath + \"/docs/reference\");\n        if (docsFolder != null) {\n            sdkModificator.addRoot(docsFolder, JavadocOrderRootType.getInstance());\n        }\n\n        AndroidSdkAdditionalData data = new AndroidSdkAdditionalData(sdk);\n        AndroidSdkData sdkData = AndroidSdkData.getSdkData(sdkPath);\n        assertNotNull(sdkData);\n        IAndroidTarget target = sdkData.findTargetByName(\"Android 4.2\"); // TODO: Get rid of this hardcoded version number\n        if (target == null) {\n            IAndroidTarget[] targets = sdkData.getTargets();\n            for (IAndroidTarget t : targets) {\n                if (t.getLocation().contains(platformDir)) {\n                    target = t;\n                    break;\n                }\n            }\n            if (target == null && targets.length > 0) {\n                target = targets[targets.length - 1];\n            }\n        }\n        assertNotNull(target);\n        data.setBuildTarget(target);\n        data.setJavaSdk(PluginTestCaseBase.fullJdk());\n        // Srsly, WTF? Why do i have to manually add jdk classes to android sdk roots? Even with setJavaSdk(PluginTestCaseBase.fullJdk())\n        for (VirtualFile f : PluginTestCaseBase.fullJdk().getRootProvider().getFiles(OrderRootType.CLASSES)) {\n            sdkModificator.addRoot(f, OrderRootType.CLASSES);\n        }\n        sdkModificator.setSdkAdditionalData(data);\n        sdkModificator.commitChanges();\n        return sdk;\n    }","id":52623,"modified_method":"public Sdk createAndroidSdk(String sdkPath, String platformDir) {\n        Sdk sdk = ProjectJdkTable.getInstance().createSdk(\"android_test_sdk\", AndroidSdkType.getInstance());\n        SdkModificator sdkModificator = sdk.getSdkModificator();\n        sdkModificator.setHomePath(sdkPath);\n\n        if (platformDir.equals(getDefaultPlatformDir())) {\n            // Compatibility: the unit tests were using android.jar outside the sdk1.5 install;\n            // we need to use that one, rather than the real one in sdk1.5, in order for the\n            // tests to pass. Longer term, we should switch the unit tests over to all using\n            // a valid SDK.\n            String androidJarPath = sdkPath + \"/../android.jar!/\";\n            androidJar = VirtualFileManager.getInstance().findFileByUrl(\"jar://\" + androidJarPath);\n        } else {\n            androidJar = VirtualFileManager.getInstance().findFileByUrl(\"jar://\" + sdkPath + \"/platforms/\" + platformDir + \"/android.jar!/\");\n        }\n        sdkModificator.addRoot(androidJar, OrderRootType.CLASSES);\n\n        VirtualFile resFolder = LocalFileSystem.getInstance().findFileByPath(sdkPath + \"/platforms/\" + platformDir + \"/data/res\");\n        sdkModificator.addRoot(resFolder, OrderRootType.CLASSES);\n\n        VirtualFile docsFolder = LocalFileSystem.getInstance().findFileByPath(sdkPath + \"/docs/reference\");\n        if (docsFolder != null) {\n            sdkModificator.addRoot(docsFolder, JavadocOrderRootType.getInstance());\n        }\n\n        AndroidSdkAdditionalData data = new AndroidSdkAdditionalData(sdk);\n        AndroidSdkData sdkData = AndroidSdkData.getSdkData(sdkPath);\n        assertNotNull(sdkData);\n        IAndroidTarget target = sdkData.findTargetByName(\"Android 4.2\"); // TODO: Get rid of this hardcoded version number\n        if (target == null) {\n            IAndroidTarget[] targets = sdkData.getTargets();\n            for (IAndroidTarget t : targets) {\n                if (t.getLocation().contains(platformDir)) {\n                    target = t;\n                    break;\n                }\n            }\n            if (target == null && targets.length > 0) {\n                target = targets[targets.length - 1];\n            }\n        }\n        assertNotNull(target);\n        data.setBuildTarget(target);\n        sdkModificator.setSdkAdditionalData(data);\n        sdkModificator.commitChanges();\n        return sdk;\n    }","commit_id":"04a905c35c73b3205b196d09dfd197a915143def","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Before\n\tpublic void setUp() {\n\t\tFinderCacheUtil.clearCache();\n\t}","id":52624,"modified_method":"@Before\n\tpublic void setUp() throws Exception {\n\t\tFinderCacheUtil.clearCache();\n\n\t\tgroup = ServiceTestUtil.addGroup();\n\t}","commit_id":"e503a40da7224f45b7411d186849b5d4238cd8d7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void trashVersionBaseModel(boolean delete) throws Exception {\n\t\tGroup group = ServiceTestUtil.addGroup();\n\n\t\tServiceContext serviceContext = ServiceTestUtil.getServiceContext();\n\n\t\tserviceContext.setScopeGroupId(group.getGroupId());\n\n\t\tBaseModel<?> parentBaseModel = getParentBaseModel(\n\t\t\tgroup, serviceContext);\n\n\t\tint initialBaseModelsCount = getBaseModelsNotInTrashCount(\n\t\t\tparentBaseModel);\n\t\tint initialBaseModelsSearchCount = 0;\n\t\tint initialTrashEntriesCount = getTrashEntriesCount(group.getGroupId());\n\t\tint initialTrashEntriesSearchCount = 0;\n\n\t\tif (isIndexableBaseModel()) {\n\t\t\tinitialBaseModelsSearchCount = searchBaseModelsCount(\n\t\t\t\tgetBaseModelClass(), group.getGroupId());\n\t\t\tinitialTrashEntriesSearchCount = searchTrashEntriesCount(\n\t\t\t\tgetSearchKeywords(), serviceContext);\n\t\t}\n\n\t\tBaseModel<?> baseModel = addBaseModel(\n\t\t\tparentBaseModel, true, serviceContext);\n\n\t\tbaseModel = updateBaseModel(\n\t\t\t(Long)baseModel.getPrimaryKeyObj(), serviceContext);\n\n\t\tAssert.assertEquals(\n\t\t\tinitialBaseModelsCount + 1,\n\t\t\tgetBaseModelsNotInTrashCount(parentBaseModel));\n\t\tAssert.assertEquals(\n\t\t\tinitialTrashEntriesCount, getTrashEntriesCount(group.getGroupId()));\n\n\t\tif (isIndexableBaseModel()) {\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialBaseModelsSearchCount + 1,\n\t\t\t\tsearchBaseModelsCount(getBaseModelClass(), group.getGroupId()));\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialTrashEntriesSearchCount,\n\t\t\t\tsearchTrashEntriesCount(getSearchKeywords(), serviceContext));\n\t\t}\n\n\t\tif (isAssetableModel()) {\n\t\t\tAssert.assertTrue(isAssetEntryVisible(baseModel));\n\t\t}\n\n\t\tmoveBaseModelToTrash((Long)baseModel.getPrimaryKeyObj());\n\n\t\tAssert.assertEquals(\n\t\t\tinitialBaseModelsCount,\n\t\t\tgetBaseModelsNotInTrashCount(parentBaseModel));\n\t\tAssert.assertEquals(\n\t\t\tinitialTrashEntriesCount + 1,\n\t\t\tgetTrashEntriesCount(group.getGroupId()));\n\n\t\tif (isIndexableBaseModel()) {\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialBaseModelsSearchCount,\n\t\t\t\tsearchBaseModelsCount(getBaseModelClass(), group.getGroupId()));\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialTrashEntriesSearchCount + 1,\n\t\t\t\tsearchTrashEntriesCount(getSearchKeywords(), serviceContext));\n\t\t}\n\n\t\tif (isAssetableModel()) {\n\t\t\tAssert.assertFalse(isAssetEntryVisible(baseModel));\n\t\t}\n\n\t\tTrashHandler trashHandler = TrashHandlerRegistryUtil.getTrashHandler(\n\t\t\tgetBaseModelClassName());\n\n\t\tif (delete) {\n\t\t\ttrashHandler.deleteTrashEntry(getTrashEntryClassPK(baseModel));\n\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialBaseModelsCount,\n\t\t\t\tgetBaseModelsNotInTrashCount(parentBaseModel));\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialTrashEntriesCount,\n\t\t\t\tgetTrashEntriesCount(group.getGroupId()));\n\n\t\t\tif (isIndexableBaseModel()) {\n\t\t\t\tAssert.assertEquals(\n\t\t\t\t\tinitialBaseModelsSearchCount,\n\t\t\t\t\tsearchBaseModelsCount(\n\t\t\t\t\t\tgetBaseModelClass(), group.getGroupId()));\n\t\t\t\tAssert.assertEquals(\n\t\t\t\t\tinitialTrashEntriesSearchCount,\n\t\t\t\t\tsearchTrashEntriesCount(\n\t\t\t\t\t\tgetSearchKeywords(), serviceContext));\n\t\t\t}\n\n\t\t\tAssert.assertNull(fetchAssetEntry(baseModel));\n\t\t}\n\t\telse {\n\t\t\ttrashHandler.restoreTrashEntry(getTrashEntryClassPK(baseModel));\n\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialBaseModelsCount + 1,\n\t\t\t\tgetBaseModelsNotInTrashCount(parentBaseModel));\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialTrashEntriesCount,\n\t\t\t\tgetTrashEntriesCount(group.getGroupId()));\n\n\t\t\tif (isIndexableBaseModel()) {\n\t\t\t\tAssert.assertEquals(\n\t\t\t\t\tinitialBaseModelsSearchCount + 1,\n\t\t\t\t\tsearchBaseModelsCount(\n\t\t\t\t\t\tgetBaseModelClass(), group.getGroupId()));\n\t\t\t\tAssert.assertEquals(\n\t\t\t\t\tinitialTrashEntriesSearchCount,\n\t\t\t\t\tsearchTrashEntriesCount(\n\t\t\t\t\t\tgetSearchKeywords(), serviceContext));\n\t\t\t}\n\n\t\t\tif (isAssetableModel()) {\n\t\t\t\tAssert.assertTrue(isAssetEntryVisible(baseModel));\n\t\t\t}\n\t\t}\n\t}","id":52625,"modified_method":"protected void trashVersionBaseModel(boolean delete) throws Exception {\n\t\tServiceContext serviceContext = ServiceTestUtil.getServiceContext();\n\n\t\tserviceContext.setScopeGroupId(group.getGroupId());\n\n\t\tBaseModel<?> parentBaseModel = getParentBaseModel(\n\t\t\tgroup, serviceContext);\n\n\t\tint initialBaseModelsCount = getBaseModelsNotInTrashCount(\n\t\t\tparentBaseModel);\n\t\tint initialBaseModelsSearchCount = 0;\n\t\tint initialTrashEntriesCount = getTrashEntriesCount(group.getGroupId());\n\t\tint initialTrashEntriesSearchCount = 0;\n\n\t\tif (isIndexableBaseModel()) {\n\t\t\tinitialBaseModelsSearchCount = searchBaseModelsCount(\n\t\t\t\tgetBaseModelClass(), group.getGroupId());\n\t\t\tinitialTrashEntriesSearchCount = searchTrashEntriesCount(\n\t\t\t\tgetSearchKeywords(), serviceContext);\n\t\t}\n\n\t\tbaseModel = addBaseModel(parentBaseModel, true, serviceContext);\n\n\t\tbaseModel = updateBaseModel(\n\t\t\t(Long)baseModel.getPrimaryKeyObj(), serviceContext);\n\n\t\tAssert.assertEquals(\n\t\t\tinitialBaseModelsCount + 1,\n\t\t\tgetBaseModelsNotInTrashCount(parentBaseModel));\n\t\tAssert.assertEquals(\n\t\t\tinitialTrashEntriesCount, getTrashEntriesCount(group.getGroupId()));\n\n\t\tif (isIndexableBaseModel()) {\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialBaseModelsSearchCount + 1,\n\t\t\t\tsearchBaseModelsCount(getBaseModelClass(), group.getGroupId()));\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialTrashEntriesSearchCount,\n\t\t\t\tsearchTrashEntriesCount(getSearchKeywords(), serviceContext));\n\t\t}\n\n\t\tif (isAssetableModel()) {\n\t\t\tAssert.assertTrue(isAssetEntryVisible(baseModel));\n\t\t}\n\n\t\tmoveBaseModelToTrash((Long)baseModel.getPrimaryKeyObj());\n\n\t\tAssert.assertEquals(\n\t\t\tinitialBaseModelsCount,\n\t\t\tgetBaseModelsNotInTrashCount(parentBaseModel));\n\t\tAssert.assertEquals(\n\t\t\tinitialTrashEntriesCount + 1,\n\t\t\tgetTrashEntriesCount(group.getGroupId()));\n\n\t\tif (isIndexableBaseModel()) {\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialBaseModelsSearchCount,\n\t\t\t\tsearchBaseModelsCount(getBaseModelClass(), group.getGroupId()));\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialTrashEntriesSearchCount + 1,\n\t\t\t\tsearchTrashEntriesCount(getSearchKeywords(), serviceContext));\n\t\t}\n\n\t\tif (isAssetableModel()) {\n\t\t\tAssert.assertFalse(isAssetEntryVisible(baseModel));\n\t\t}\n\n\t\tTrashHandler trashHandler = TrashHandlerRegistryUtil.getTrashHandler(\n\t\t\tgetBaseModelClassName());\n\n\t\tif (delete) {\n\t\t\ttrashHandler.deleteTrashEntry(getTrashEntryClassPK(baseModel));\n\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialBaseModelsCount,\n\t\t\t\tgetBaseModelsNotInTrashCount(parentBaseModel));\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialTrashEntriesCount,\n\t\t\t\tgetTrashEntriesCount(group.getGroupId()));\n\n\t\t\tif (isIndexableBaseModel()) {\n\t\t\t\tAssert.assertEquals(\n\t\t\t\t\tinitialBaseModelsSearchCount,\n\t\t\t\t\tsearchBaseModelsCount(\n\t\t\t\t\t\tgetBaseModelClass(), group.getGroupId()));\n\t\t\t\tAssert.assertEquals(\n\t\t\t\t\tinitialTrashEntriesSearchCount,\n\t\t\t\t\tsearchTrashEntriesCount(\n\t\t\t\t\t\tgetSearchKeywords(), serviceContext));\n\t\t\t}\n\n\t\t\tAssert.assertNull(fetchAssetEntry(baseModel));\n\t\t}\n\t\telse {\n\t\t\ttrashHandler.restoreTrashEntry(getTrashEntryClassPK(baseModel));\n\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialBaseModelsCount + 1,\n\t\t\t\tgetBaseModelsNotInTrashCount(parentBaseModel));\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialTrashEntriesCount,\n\t\t\t\tgetTrashEntriesCount(group.getGroupId()));\n\n\t\t\tif (isIndexableBaseModel()) {\n\t\t\t\tAssert.assertEquals(\n\t\t\t\t\tinitialBaseModelsSearchCount + 1,\n\t\t\t\t\tsearchBaseModelsCount(\n\t\t\t\t\t\tgetBaseModelClass(), group.getGroupId()));\n\t\t\t\tAssert.assertEquals(\n\t\t\t\t\tinitialTrashEntriesSearchCount,\n\t\t\t\t\tsearchTrashEntriesCount(\n\t\t\t\t\t\tgetSearchKeywords(), serviceContext));\n\t\t\t}\n\n\t\t\tif (isAssetableModel()) {\n\t\t\t\tAssert.assertTrue(isAssetEntryVisible(baseModel));\n\t\t\t}\n\t\t}\n\t}","commit_id":"e503a40da7224f45b7411d186849b5d4238cd8d7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void trashDuplicateBaseModel() throws Exception {\n\t\tGroup group = ServiceTestUtil.addGroup();\n\n\t\tServiceContext serviceContext = ServiceTestUtil.getServiceContext();\n\n\t\tserviceContext.setScopeGroupId(group.getGroupId());\n\n\t\tBaseModel<?> parentBaseModel = getParentBaseModel(\n\t\t\tgroup, serviceContext);\n\n\t\tint initialBaseModelsCount = getBaseModelsNotInTrashCount(\n\t\t\tparentBaseModel);\n\t\tint initialTrashEntriesCount = getTrashEntriesCount(group.getGroupId());\n\n\t\tBaseModel<?> baseModel = addBaseModel(\n\t\t\tparentBaseModel, true, serviceContext);\n\n\t\tmoveBaseModelToTrash((Long)baseModel.getPrimaryKeyObj());\n\n\t\tbaseModel = getBaseModel((Long)baseModel.getPrimaryKeyObj());\n\n\t\tAssert.assertEquals(\n\t\t\tinitialBaseModelsCount,\n\t\t\tgetBaseModelsNotInTrashCount(parentBaseModel));\n\t\tAssert.assertEquals(\n\t\t\tinitialTrashEntriesCount + 1,\n\t\t\tgetTrashEntriesCount(group.getGroupId()));\n\n\t\tAssert.assertTrue(isBaseModelTrashName(baseModel));\n\n\t\tBaseModel<?> duplicateBaseModel = addBaseModel(\n\t\t\tparentBaseModel, true, serviceContext);\n\n\t\tmoveBaseModelToTrash((Long)duplicateBaseModel.getPrimaryKeyObj());\n\n\t\tduplicateBaseModel = getBaseModel(\n\t\t\t(Long)duplicateBaseModel.getPrimaryKeyObj());\n\n\t\tAssert.assertEquals(\n\t\t\tinitialBaseModelsCount,\n\t\t\tgetBaseModelsNotInTrashCount(parentBaseModel));\n\t\tAssert.assertEquals(\n\t\t\tinitialTrashEntriesCount + 2,\n\t\t\tgetTrashEntriesCount(group.getGroupId()));\n\n\t\tAssert.assertTrue(isBaseModelTrashName(duplicateBaseModel));\n\t}","id":52626,"modified_method":"protected void trashDuplicateBaseModel() throws Exception {\n\t\tServiceContext serviceContext = ServiceTestUtil.getServiceContext();\n\n\t\tserviceContext.setScopeGroupId(group.getGroupId());\n\n\t\tBaseModel<?> parentBaseModel = getParentBaseModel(\n\t\t\tgroup, serviceContext);\n\n\t\tint initialBaseModelsCount = getBaseModelsNotInTrashCount(\n\t\t\tparentBaseModel);\n\t\tint initialTrashEntriesCount = getTrashEntriesCount(group.getGroupId());\n\n\t\tbaseModel = addBaseModel(parentBaseModel, true, serviceContext);\n\n\t\tmoveBaseModelToTrash((Long)baseModel.getPrimaryKeyObj());\n\n\t\tbaseModel = getBaseModel((Long)baseModel.getPrimaryKeyObj());\n\n\t\tAssert.assertEquals(\n\t\t\tinitialBaseModelsCount,\n\t\t\tgetBaseModelsNotInTrashCount(parentBaseModel));\n\t\tAssert.assertEquals(\n\t\t\tinitialTrashEntriesCount + 1,\n\t\t\tgetTrashEntriesCount(group.getGroupId()));\n\n\t\tAssert.assertTrue(isBaseModelTrashName(baseModel));\n\n\t\tBaseModel<?> duplicateBaseModel = addBaseModel(\n\t\t\tparentBaseModel, true, serviceContext);\n\n\t\tmoveBaseModelToTrash((Long)duplicateBaseModel.getPrimaryKeyObj());\n\n\t\tduplicateBaseModel = getBaseModel(\n\t\t\t(Long)duplicateBaseModel.getPrimaryKeyObj());\n\n\t\tAssert.assertEquals(\n\t\t\tinitialBaseModelsCount,\n\t\t\tgetBaseModelsNotInTrashCount(parentBaseModel));\n\t\tAssert.assertEquals(\n\t\t\tinitialTrashEntriesCount + 2,\n\t\t\tgetTrashEntriesCount(group.getGroupId()));\n\n\t\tAssert.assertTrue(isBaseModelTrashName(duplicateBaseModel));\n\t}","commit_id":"e503a40da7224f45b7411d186849b5d4238cd8d7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void trashBaseModel(boolean approved, boolean delete)\n\t\tthrows Exception {\n\n\t\tGroup group = ServiceTestUtil.addGroup();\n\n\t\tServiceContext serviceContext = ServiceTestUtil.getServiceContext();\n\n\t\tserviceContext.setScopeGroupId(group.getGroupId());\n\n\t\tBaseModel<?> parentBaseModel = getParentBaseModel(\n\t\t\tgroup, serviceContext);\n\n\t\tint initialBaseModelsCount = getBaseModelsNotInTrashCount(\n\t\t\tparentBaseModel);\n\t\tint initialBaseModelsSearchCount = 0;\n\t\tint initialTrashEntriesCount = getTrashEntriesCount(group.getGroupId());\n\t\tint initialTrashEntriesSearchCount = 0;\n\n\t\tif (isIndexableBaseModel()) {\n\t\t\tinitialBaseModelsSearchCount = searchBaseModelsCount(\n\t\t\t\tgetBaseModelClass(), group.getGroupId());\n\t\t\tinitialTrashEntriesSearchCount = searchTrashEntriesCount(\n\t\t\t\tgetSearchKeywords(), serviceContext);\n\t\t}\n\n\t\tBaseModel<?> baseModel = addBaseModel(\n\t\t\tparentBaseModel, approved, serviceContext);\n\n\t\tAssert.assertEquals(\n\t\t\tinitialBaseModelsCount + 1,\n\t\t\tgetBaseModelsNotInTrashCount(parentBaseModel));\n\n\t\tif (isIndexableBaseModel()) {\n\t\t\tif (approved) {\n\t\t\t\tAssert.assertEquals(\n\t\t\t\t\tinitialBaseModelsSearchCount + 1,\n\t\t\t\t\tsearchBaseModelsCount(\n\t\t\t\t\t\tgetBaseModelClass(), group.getGroupId()));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tAssert.assertEquals(\n\t\t\t\t\tinitialBaseModelsSearchCount,\n\t\t\t\t\tsearchBaseModelsCount(\n\t\t\t\t\t\tgetBaseModelClass(), group.getGroupId()));\n\t\t\t}\n\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialTrashEntriesSearchCount,\n\t\t\t\tsearchTrashEntriesCount(getSearchKeywords(), serviceContext));\n\t\t}\n\n\t\tAssert.assertEquals(\n\t\t\tinitialTrashEntriesCount, getTrashEntriesCount(group.getGroupId()));\n\n\t\tWorkflowedModel workflowedModel = getWorkflowedModel(baseModel);\n\n\t\tint oldStatus = workflowedModel.getStatus();\n\n\t\tif (isAssetableModel()) {\n\t\t\tAssert.assertEquals(approved, isAssetEntryVisible(baseModel));\n\t\t}\n\n\t\tmoveBaseModelToTrash((Long)baseModel.getPrimaryKeyObj());\n\n\t\tAssert.assertEquals(\n\t\t\tinitialBaseModelsCount,\n\t\t\tgetBaseModelsNotInTrashCount(parentBaseModel));\n\t\tAssert.assertEquals(\n\t\t\tinitialTrashEntriesCount + 1,\n\t\t\tgetTrashEntriesCount(group.getGroupId()));\n\n\t\tif (isIndexableBaseModel()) {\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialBaseModelsSearchCount,\n\t\t\t\tsearchBaseModelsCount(getBaseModelClass(), group.getGroupId()));\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialTrashEntriesSearchCount + 1,\n\t\t\t\tsearchTrashEntriesCount(getSearchKeywords(), serviceContext));\n\t\t}\n\n\t\tTrashEntry trashEntry = TrashEntryLocalServiceUtil.getEntry(\n\t\t\tgetBaseModelClassName(), getTrashEntryClassPK(baseModel));\n\n\t\tAssert.assertEquals(\n\t\t\tgetTrashEntryClassPK(baseModel),\n\t\t\tGetterUtil.getLong(trashEntry.getClassPK()));\n\n\t\tworkflowedModel = getWorkflowedModel(\n\t\t\tgetBaseModel((Long)baseModel.getPrimaryKeyObj()));\n\n\t\tAssert.assertEquals(\n\t\t\tWorkflowConstants.STATUS_IN_TRASH, workflowedModel.getStatus());\n\n\t\tif (isAssetableModel()) {\n\t\t\tAssert.assertFalse(isAssetEntryVisible(baseModel));\n\t\t}\n\n\t\tTrashHandler trashHandler = TrashHandlerRegistryUtil.getTrashHandler(\n\t\t\tgetBaseModelClassName());\n\n\t\tif (delete) {\n\t\t\ttrashHandler.deleteTrashEntry(getTrashEntryClassPK(baseModel));\n\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialBaseModelsCount,\n\t\t\t\tgetBaseModelsNotInTrashCount(parentBaseModel));\n\n\t\t\tif (isIndexableBaseModel()) {\n\t\t\t\tAssert.assertEquals(\n\t\t\t\t\tinitialBaseModelsSearchCount,\n\t\t\t\t\tsearchBaseModelsCount(\n\t\t\t\t\t\tgetBaseModelClass(), group.getGroupId()));\n\t\t\t\tAssert.assertEquals(\n\t\t\t\t\tinitialTrashEntriesSearchCount,\n\t\t\t\t\tsearchTrashEntriesCount(\n\t\t\t\t\t\tgetSearchKeywords(), serviceContext));\n\t\t\t}\n\n\t\t\tAssert.assertNull(fetchAssetEntry(baseModel));\n\t\t}\n\t\telse {\n\t\t\ttrashHandler.restoreTrashEntry(getTrashEntryClassPK(baseModel));\n\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialBaseModelsCount + 1,\n\t\t\t\tgetBaseModelsNotInTrashCount(parentBaseModel));\n\n\t\t\tif (isIndexableBaseModel()) {\n\t\t\t\tif (approved) {\n\t\t\t\t\tAssert.assertEquals(\n\t\t\t\t\t\tinitialBaseModelsSearchCount + 1,\n\t\t\t\t\t\tsearchBaseModelsCount(\n\t\t\t\t\t\t\tgetBaseModelClass(), group.getGroupId()));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tAssert.assertEquals(\n\t\t\t\t\t\tinitialBaseModelsSearchCount,\n\t\t\t\t\t\tsearchBaseModelsCount(\n\t\t\t\t\t\t\tgetBaseModelClass(), group.getGroupId()));\n\t\t\t\t}\n\n\t\t\t\tAssert.assertEquals(\n\t\t\t\t\tinitialTrashEntriesSearchCount,\n\t\t\t\t\tsearchTrashEntriesCount(\n\t\t\t\t\t\tgetSearchKeywords(), serviceContext));\n\t\t\t}\n\n\t\t\tbaseModel = getBaseModel((Long)baseModel.getPrimaryKeyObj());\n\n\t\t\tworkflowedModel = getWorkflowedModel(baseModel);\n\n\t\t\tAssert.assertEquals(oldStatus, workflowedModel.getStatus());\n\n\t\t\tif (isAssetableModel()) {\n\t\t\t\tAssert.assertEquals(approved, isAssetEntryVisible(baseModel));\n\t\t\t}\n\t\t}\n\t}","id":52627,"modified_method":"protected void trashBaseModel(boolean approved, boolean delete)\n\t\tthrows Exception {\n\n\t\tServiceContext serviceContext = ServiceTestUtil.getServiceContext();\n\n\t\tserviceContext.setScopeGroupId(group.getGroupId());\n\n\t\tBaseModel<?> parentBaseModel = getParentBaseModel(\n\t\t\tgroup, serviceContext);\n\n\t\tint initialBaseModelsCount = getBaseModelsNotInTrashCount(\n\t\t\tparentBaseModel);\n\t\tint initialBaseModelsSearchCount = 0;\n\t\tint initialTrashEntriesCount = getTrashEntriesCount(group.getGroupId());\n\t\tint initialTrashEntriesSearchCount = 0;\n\n\t\tif (isIndexableBaseModel()) {\n\t\t\tinitialBaseModelsSearchCount = searchBaseModelsCount(\n\t\t\t\tgetBaseModelClass(), group.getGroupId());\n\t\t\tinitialTrashEntriesSearchCount = searchTrashEntriesCount(\n\t\t\t\tgetSearchKeywords(), serviceContext);\n\t\t}\n\n\t\tbaseModel = addBaseModel(parentBaseModel, approved, serviceContext);\n\n\t\tAssert.assertEquals(\n\t\t\tinitialBaseModelsCount + 1,\n\t\t\tgetBaseModelsNotInTrashCount(parentBaseModel));\n\n\t\tif (isIndexableBaseModel()) {\n\t\t\tif (approved) {\n\t\t\t\tAssert.assertEquals(\n\t\t\t\t\tinitialBaseModelsSearchCount + 1,\n\t\t\t\t\tsearchBaseModelsCount(\n\t\t\t\t\t\tgetBaseModelClass(), group.getGroupId()));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tAssert.assertEquals(\n\t\t\t\t\tinitialBaseModelsSearchCount,\n\t\t\t\t\tsearchBaseModelsCount(\n\t\t\t\t\t\tgetBaseModelClass(), group.getGroupId()));\n\t\t\t}\n\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialTrashEntriesSearchCount,\n\t\t\t\tsearchTrashEntriesCount(getSearchKeywords(), serviceContext));\n\t\t}\n\n\t\tAssert.assertEquals(\n\t\t\tinitialTrashEntriesCount, getTrashEntriesCount(group.getGroupId()));\n\n\t\tWorkflowedModel workflowedModel = getWorkflowedModel(baseModel);\n\n\t\tint oldStatus = workflowedModel.getStatus();\n\n\t\tif (isAssetableModel()) {\n\t\t\tAssert.assertEquals(approved, isAssetEntryVisible(baseModel));\n\t\t}\n\n\t\tmoveBaseModelToTrash((Long)baseModel.getPrimaryKeyObj());\n\n\t\tAssert.assertEquals(\n\t\t\tinitialBaseModelsCount,\n\t\t\tgetBaseModelsNotInTrashCount(parentBaseModel));\n\t\tAssert.assertEquals(\n\t\t\tinitialTrashEntriesCount + 1,\n\t\t\tgetTrashEntriesCount(group.getGroupId()));\n\n\t\tif (isIndexableBaseModel()) {\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialBaseModelsSearchCount,\n\t\t\t\tsearchBaseModelsCount(getBaseModelClass(), group.getGroupId()));\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialTrashEntriesSearchCount + 1,\n\t\t\t\tsearchTrashEntriesCount(getSearchKeywords(), serviceContext));\n\t\t}\n\n\t\tTrashEntry trashEntry = TrashEntryLocalServiceUtil.getEntry(\n\t\t\tgetBaseModelClassName(), getTrashEntryClassPK(baseModel));\n\n\t\tAssert.assertEquals(\n\t\t\tgetTrashEntryClassPK(baseModel),\n\t\t\tGetterUtil.getLong(trashEntry.getClassPK()));\n\n\t\tworkflowedModel = getWorkflowedModel(\n\t\t\tgetBaseModel((Long)baseModel.getPrimaryKeyObj()));\n\n\t\tAssert.assertEquals(\n\t\t\tWorkflowConstants.STATUS_IN_TRASH, workflowedModel.getStatus());\n\n\t\tif (isAssetableModel()) {\n\t\t\tAssert.assertFalse(isAssetEntryVisible(baseModel));\n\t\t}\n\n\t\tTrashHandler trashHandler = TrashHandlerRegistryUtil.getTrashHandler(\n\t\t\tgetBaseModelClassName());\n\n\t\tif (delete) {\n\t\t\ttrashHandler.deleteTrashEntry(getTrashEntryClassPK(baseModel));\n\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialBaseModelsCount,\n\t\t\t\tgetBaseModelsNotInTrashCount(parentBaseModel));\n\n\t\t\tif (isIndexableBaseModel()) {\n\t\t\t\tAssert.assertEquals(\n\t\t\t\t\tinitialBaseModelsSearchCount,\n\t\t\t\t\tsearchBaseModelsCount(\n\t\t\t\t\t\tgetBaseModelClass(), group.getGroupId()));\n\t\t\t\tAssert.assertEquals(\n\t\t\t\t\tinitialTrashEntriesSearchCount,\n\t\t\t\t\tsearchTrashEntriesCount(\n\t\t\t\t\t\tgetSearchKeywords(), serviceContext));\n\t\t\t}\n\n\t\t\tAssert.assertNull(fetchAssetEntry(baseModel));\n\t\t}\n\t\telse {\n\t\t\ttrashHandler.restoreTrashEntry(getTrashEntryClassPK(baseModel));\n\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialBaseModelsCount + 1,\n\t\t\t\tgetBaseModelsNotInTrashCount(parentBaseModel));\n\n\t\t\tif (isIndexableBaseModel()) {\n\t\t\t\tif (approved) {\n\t\t\t\t\tAssert.assertEquals(\n\t\t\t\t\t\tinitialBaseModelsSearchCount + 1,\n\t\t\t\t\t\tsearchBaseModelsCount(\n\t\t\t\t\t\t\tgetBaseModelClass(), group.getGroupId()));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tAssert.assertEquals(\n\t\t\t\t\t\tinitialBaseModelsSearchCount,\n\t\t\t\t\t\tsearchBaseModelsCount(\n\t\t\t\t\t\t\tgetBaseModelClass(), group.getGroupId()));\n\t\t\t\t}\n\n\t\t\t\tAssert.assertEquals(\n\t\t\t\t\tinitialTrashEntriesSearchCount,\n\t\t\t\t\tsearchTrashEntriesCount(\n\t\t\t\t\t\tgetSearchKeywords(), serviceContext));\n\t\t\t}\n\n\t\t\tbaseModel = getBaseModel((Long)baseModel.getPrimaryKeyObj());\n\n\t\t\tworkflowedModel = getWorkflowedModel(baseModel);\n\n\t\t\tAssert.assertEquals(oldStatus, workflowedModel.getStatus());\n\n\t\t\tif (isAssetableModel()) {\n\t\t\t\tAssert.assertEquals(approved, isAssetEntryVisible(baseModel));\n\t\t\t}\n\t\t}\n\t}","commit_id":"e503a40da7224f45b7411d186849b5d4238cd8d7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void trashParentBaseModel(boolean delete) throws Exception {\n\t\tGroup group = ServiceTestUtil.addGroup();\n\n\t\tServiceContext serviceContext = ServiceTestUtil.getServiceContext();\n\n\t\tserviceContext.setScopeGroupId(group.getGroupId());\n\n\t\tBaseModel<?> parentBaseModel = getParentBaseModel(\n\t\t\tgroup, serviceContext);\n\n\t\tint initialBaseModelsCount = getBaseModelsNotInTrashCount(\n\t\t\tparentBaseModel);\n\t\tint initialTrashEntriesCount = getTrashEntriesCount(group.getGroupId());\n\n\t\tBaseModel<?> baseModel = addBaseModel(\n\t\t\tparentBaseModel, true, serviceContext);\n\n\t\tAssert.assertEquals(\n\t\t\tinitialBaseModelsCount + 1,\n\t\t\tgetBaseModelsNotInTrashCount(parentBaseModel));\n\t\tAssert.assertEquals(\n\t\t\tinitialTrashEntriesCount, getTrashEntriesCount(group.getGroupId()));\n\n\t\tmoveBaseModelToTrash((Long)baseModel.getPrimaryKeyObj());\n\n\t\tAssert.assertEquals(\n\t\t\tinitialBaseModelsCount,\n\t\t\tgetBaseModelsNotInTrashCount(parentBaseModel));\n\t\tAssert.assertEquals(\n\t\t\tinitialTrashEntriesCount + 1,\n\t\t\tgetTrashEntriesCount(group.getGroupId()));\n\n\t\tAssert.assertFalse(isInTrashFolder(baseModel));\n\n\t\tmoveParentBaseModelToTrash((Long)parentBaseModel.getPrimaryKeyObj());\n\n\t\tAssert.assertEquals(\n\t\t\tinitialTrashEntriesCount + 2,\n\t\t\tgetTrashEntriesCount(group.getGroupId()));\n\n\t\tAssert.assertTrue(isInTrashFolder(baseModel));\n\n\t\tif (isBaseModelMoveableFromTrash()) {\n\t\t\tif (delete) {\n\t\t\t\tTrashHandler trashHandler =\n\t\t\t\t\tTrashHandlerRegistryUtil.getTrashHandler(\n\t\t\t\t\t\tgetParentBaseModelClassName());\n\n\t\t\t\ttrashHandler.deleteTrashEntry(\n\t\t\t\t\t(Long)parentBaseModel.getPrimaryKeyObj());\n\n\t\t\t\tAssert.assertEquals(\n\t\t\t\t\tinitialBaseModelsCount,\n\t\t\t\t\tgetBaseModelsNotInTrashCount(parentBaseModel));\n\t\t\t\tAssert.assertEquals(\n\t\t\t\t\tinitialTrashEntriesCount + 1,\n\t\t\t\t\tgetTrashEntriesCount(group.getGroupId()));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tBaseModel<?> newParentBaseModel = moveBaseModelFromTrash(\n\t\t\t\t\tbaseModel, group, serviceContext);\n\n\t\t\t\tAssert.assertEquals(\n\t\t\t\t\tinitialBaseModelsCount + 1,\n\t\t\t\t\tgetBaseModelsNotInTrashCount(newParentBaseModel));\n\t\t\t\tAssert.assertEquals(\n\t\t\t\t\tinitialTrashEntriesCount + 1,\n\t\t\t\t\tgetTrashEntriesCount(group.getGroupId()));\n\t\t\t}\n\t\t}\n\t}","id":52628,"modified_method":"protected void trashParentBaseModel(boolean delete) throws Exception {\n\t\tServiceContext serviceContext = ServiceTestUtil.getServiceContext();\n\n\t\tserviceContext.setScopeGroupId(group.getGroupId());\n\n\t\tBaseModel<?> parentBaseModel = getParentBaseModel(\n\t\t\tgroup, serviceContext);\n\n\t\tint initialBaseModelsCount = getBaseModelsNotInTrashCount(\n\t\t\tparentBaseModel);\n\t\tint initialTrashEntriesCount = getTrashEntriesCount(group.getGroupId());\n\n\t\tbaseModel = addBaseModel(parentBaseModel, true, serviceContext);\n\n\t\tAssert.assertEquals(\n\t\t\tinitialBaseModelsCount + 1,\n\t\t\tgetBaseModelsNotInTrashCount(parentBaseModel));\n\t\tAssert.assertEquals(\n\t\t\tinitialTrashEntriesCount, getTrashEntriesCount(group.getGroupId()));\n\n\t\tmoveBaseModelToTrash((Long)baseModel.getPrimaryKeyObj());\n\n\t\tAssert.assertEquals(\n\t\t\tinitialBaseModelsCount,\n\t\t\tgetBaseModelsNotInTrashCount(parentBaseModel));\n\t\tAssert.assertEquals(\n\t\t\tinitialTrashEntriesCount + 1,\n\t\t\tgetTrashEntriesCount(group.getGroupId()));\n\n\t\tAssert.assertFalse(isInTrashFolder(baseModel));\n\n\t\tmoveParentBaseModelToTrash((Long)parentBaseModel.getPrimaryKeyObj());\n\n\t\tAssert.assertEquals(\n\t\t\tinitialTrashEntriesCount + 2,\n\t\t\tgetTrashEntriesCount(group.getGroupId()));\n\n\t\tAssert.assertTrue(isInTrashFolder(baseModel));\n\n\t\tif (isBaseModelMoveableFromTrash()) {\n\t\t\tif (delete) {\n\t\t\t\tTrashHandler trashHandler =\n\t\t\t\t\tTrashHandlerRegistryUtil.getTrashHandler(\n\t\t\t\t\t\tgetParentBaseModelClassName());\n\n\t\t\t\ttrashHandler.deleteTrashEntry(\n\t\t\t\t\t(Long)parentBaseModel.getPrimaryKeyObj());\n\n\t\t\t\tAssert.assertEquals(\n\t\t\t\t\tinitialBaseModelsCount,\n\t\t\t\t\tgetBaseModelsNotInTrashCount(parentBaseModel));\n\t\t\t\tAssert.assertEquals(\n\t\t\t\t\tinitialTrashEntriesCount + 1,\n\t\t\t\t\tgetTrashEntriesCount(group.getGroupId()));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tBaseModel<?> newParentBaseModel = moveBaseModelFromTrash(\n\t\t\t\t\tbaseModel, group, serviceContext);\n\n\t\t\t\tAssert.assertEquals(\n\t\t\t\t\tinitialBaseModelsCount + 1,\n\t\t\t\t\tgetBaseModelsNotInTrashCount(newParentBaseModel));\n\t\t\t\tAssert.assertEquals(\n\t\t\t\t\tinitialTrashEntriesCount + 1,\n\t\t\t\t\tgetTrashEntriesCount(group.getGroupId()));\n\t\t\t}\n\t\t}\n\t}","commit_id":"e503a40da7224f45b7411d186849b5d4238cd8d7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public boolean assign( String instanceId, String instanceAddr ) {\n    this.canHas.writeLock().lock();\n    try {\n      if ( UNASSIGNED_INSTANCEADDR.equals( instanceAddr ) ) return false;\n      this.instanceId = instanceId;\n      this.instanceAddress = instanceAddr;\n      return true;\n    } finally {\n      this.canHas.writeLock().unlock();\n      LOG.info( String.format( EucalyptusProperties.DEBUG_FSTRING, EucalyptusProperties.TokenState.allocated, this.toString( ) ) );\n    }\n  }","id":52629,"modified_method":"public boolean assign( String instanceId, String instanceAddr ) {//FIXME: have typed arguments here.\n    if ( !this.pending.compareAndSet( false, true ) ) {\n      throw new IllegalStateException( \"Trying to assign an address which is currently pending: \" + this );\n    } else if ( !this.state.compareAndSet( State.allocated, State.assigned ) ) {\n      this.pending.set( false );\n      throw new IllegalStateException( \"Address is not currently unassigned: \" + this );\n    } else {\n      this.canHas.writeLock( ).lock( );\n      try {\n        this.instanceId = instanceId;\n        this.instanceAddress = instanceAddr;\n        return true;\n      } finally {\n        this.canHas.writeLock( ).unlock( );\n        LOG.debug( EventRecord.caller( this.getClass( ), this.state.get( ), this.toString( ) ) );\n      }\n    }\n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public boolean allocate( String userId ) {\n    this.canHas.writeLock().lock();\n    try {\n      this.unassign();\n      if( this.userId != null && !this.userId.equals( UNALLOCATED_USERID ) ) return false;\n      this.setUserId( userId );\n      return true;\n    } finally {\n      this.canHas.writeLock().unlock();\n      LOG.info( String.format( EucalyptusProperties.DEBUG_FSTRING, EucalyptusProperties.TokenState.preallocate, this.toString( ) ) );\n    }\n  }","id":52630,"modified_method":"public boolean allocate( String userId ) {\n    if ( !this.pending.compareAndSet( false, false ) ) {\n      throw new IllegalStateException( \"Trying to allocate an address which is already pending: \" + this );\n    } else if ( !this.state.compareAndSet( State.unallocated, State.allocated ) ) {\n      this.pending.set( false );\n      throw new IllegalStateException( \"Trying to allocate an address which is already allocated: \" + this );\n    } else {\n      this.canHas.writeLock( ).lock( );\n      try {\n        this.doUnassign( );\n        this.setUserId( userId );\n        if ( Component.eucalyptus.name( ).equals( userId ) ) {\n          system = true;\n        }\n        return true;\n      } finally {\n        this.canHas.writeLock( ).unlock( );\n        addAddress( this.getName( ), this.getCluster( ), this.getUserId( ) );\n        LOG.debug( EventRecord.caller( this.getClass( ), this.state.get( ), this.toString( ) ) );\n        try {\n          Addresses.getInstance( ).register( this );\n        } catch ( NoSuchElementException e ) {\n          LOG.debug( e );\n        }\n      }\n    }\n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public void release() {\n    this.canHas.writeLock().lock();\n    try {\n      this.userId = UNALLOCATED_USERID;\n      this.unassign();\n      return;\n    } finally {\n      this.canHas.writeLock().unlock();\n      LOG.info( String.format( EucalyptusProperties.DEBUG_FSTRING, EucalyptusProperties.TokenState.returned, this.toString( )   ) );\n    }\n  }","id":52631,"modified_method":"public void release( ) {\n    this.canHas.writeLock( ).lock( );\n    try {\n      this.pending.set( false );\n      this.doUnassign( );\n      this.userId = UNALLOCATED_USERID;\n      this.system = false;\n      this.state.set( State.unallocated );\n      return;\n    } finally {\n      this.canHas.writeLock( ).unlock( );\n      removeAddress( this.name );\n      LOG.debug( EventRecord.caller( this.getClass( ), this.state.get( ), this.toString( ) ) );\n      try {\n        Addresses.getInstance( ).disable( this.getName( ) );\n      } catch ( NoSuchElementException e ) {\n        LOG.debug( e );\n      }\n    }\n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public Address( String address, String cluster ) {\n    this.name = address;\n    this.cluster = cluster;\n    this.userId = UNALLOCATED_USERID;\n    this.instanceId = UNASSIGNED_INSTANCEID;\n    this.instanceAddress = UNASSIGNED_INSTANCEADDR;\n  }","id":52632,"modified_method":"public Address( String address, String cluster ) {\n    this.name = address;\n    this.cluster = cluster;\n    this.state.set( State.unallocated );\n    this.userId = UNALLOCATED_USERID;\n    this.instanceId = UNASSIGNED_INSTANCEID;\n    this.instanceAddress = UNASSIGNED_INSTANCEADDR;\n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public boolean isPending() {\n    return PENDING_ASSIGNMENT.equals( this.instanceId ) && PENDING_ASSIGNMENT.equals( this.instanceAddress );\n  }","id":52633,"modified_method":"public boolean isPending( ) {\n    return this.pending.get( );\n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public boolean isAssigned() {\n    this.canHas.writeLock().lock();\n    try {\n      if ( UNASSIGNED_INSTANCEID.equals( this.instanceId ) || UNASSIGNED_INSTANCEADDR.equals( this.instanceAddress ) ) {\n        this.instanceId = UNASSIGNED_INSTANCEID;\n        this.instanceAddress = UNASSIGNED_INSTANCEADDR;\n        return false;\n      }\n      return true;\n    } finally {\n      this.canHas.writeLock().unlock();\n    }\n  }","id":52634,"modified_method":"public boolean isAssigned( ) {\n    return State.assigned.equals( this.state.get( ) );\n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public void unassign() {\n    this.canHas.writeLock().lock();\n    try {\n      this.instanceId = UNASSIGNED_INSTANCEID;\n      this.instanceAddress = UNASSIGNED_INSTANCEADDR;\n    } finally {\n      this.canHas.writeLock().unlock();\n      LOG.info( String.format( EucalyptusProperties.DEBUG_FSTRING, EucalyptusProperties.TokenState.unassigned, this.toString( )  ) );\n    }\n  }","id":52635,"modified_method":"public void unassign( ) {\n    if ( !this.pending.compareAndSet( false, true ) ) {\n      throw new IllegalStateException( \"Trying to unassign an address which is already pending: \" + this );\n    } else {\n      try {\n        if ( !this.state.compareAndSet( State.assigned, State.allocated ) ) {\n          this.pending.set( false );\n          throw new IllegalStateException( \"Trying to unassign an address which is not currently assigned: \" + this );\n        }\n      } finally {\n        this.state.set( State.allocated );\n      }\n    }\n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public Boolean getAssigned() {\n    return assigned;\n  }","id":52636,"modified_method":"public Boolean getAssigned( ) {\n    return this.assigned;\n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n  public String toString( ) {\n    return String.format( \"Address [assigned=%s, cluster=%s, instanceAddress=%s, instanceId=%s, name=%s, userId=%s]\",\n                          this.assigned, this.cluster, this.instanceAddress, this.instanceId, this.name, this.userId );\n  }","id":52637,"modified_method":"@Override\n  public String toString( ) {\n    return String.format(\n                          \"Address [cluster=%s, instanceAddress=%s, instanceId=%s, name=%s, pending=%s, state=%s, userId=%s]\",\n                          this.cluster, this.instanceAddress, this.instanceId, this.name, this.pending, this.state,\n                          this.userId );\n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public DisassociateAddressResponseType DisassociateAddress( DisassociateAddressType request ) throws EucalyptusCloudException {\n    AddressManager.updateAddressingMode();\n    DisassociateAddressResponseType reply = ( DisassociateAddressResponseType ) request.getReply();\n    reply.set_return( false );\n\n    LOG.debug( \"Disassociate: \" + request.getPublicIp()  );\n    Address address = null;\n    try {\n      address = Addresses.getInstance().lookup( request.getPublicIp() );\n    } catch ( NoSuchElementException e ) {\n      return reply;\n    }\n    LOG.debug( \"Found address: \" + address );\n\n    VmInstance vm = null;\n    try {\n      vm = VmInstances.getInstance().lookup( address.getInstanceId() );\n    } catch ( NoSuchElementException e ) {\n      return reply;\n    }\n    LOG.debug( \"Found vm: \" + vm );\n\n    if ( !request.isAdministrator() && !( request.getUserId().equals( address.getUserId() ) && request.getUserId().equals( vm.getOwnerId() ) ) )\n      return reply;\n\n    if( VmInstance.DEFAULT_IP.equals( vm.getInstanceId() ) )\n        return reply;\n\n    reply.set_return( true );\n    AddressManager.unassignAddressFromVm( address, vm );\n    AddressManager.tryAssignSystemAddress( vm );\n    return reply;\n  }","id":52638,"modified_method":"public DisassociateAddressResponseType DisassociateAddress( DisassociateAddressType request ) throws EucalyptusCloudException {\n    AddressUtil.updateAddressingMode();\n    DisassociateAddressResponseType reply = ( DisassociateAddressResponseType ) request.getReply();\n    reply.set_return( false );\n\n    LOG.debug( \"Disassociate: \" + request.getPublicIp()  );\n    Address address = null;\n    try {\n      address = Addresses.getInstance().lookup( request.getPublicIp() );\n    } catch ( NoSuchElementException e ) {\n      return reply;\n    }\n    LOG.debug( \"Found address: \" + address );\n\n    VmInstance vm = null;\n    try {\n      vm = VmInstances.getInstance().lookup( address.getInstanceId() );\n    } catch ( NoSuchElementException e ) {\n      return reply;\n    }\n    LOG.debug( \"Found vm: \" + vm );\n\n    if ( !request.isAdministrator() && !( request.getUserId().equals( address.getUserId() ) && request.getUserId().equals( vm.getOwnerId() ) ) )\n      return reply;\n\n    if( VmInstance.DEFAULT_IP.equals( vm.getInstanceId() ) )\n        return reply;\n\n    reply.set_return( true );\n    AddressUtil.unassignAddressFromVm( address, vm );\n    AddressUtil.tryAssignSystemAddress( vm );\n    return reply;\n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public DescribeAddressesResponseType DescribeAddresses( DescribeAddressesType request ) throws EucalyptusCloudException {\n    AddressManager.updateAddressingMode();\n    DescribeAddressesResponseType reply = ( DescribeAddressesResponseType ) request.getReply();\n\n\n    boolean isAdmin = request.isAdministrator();\n    for ( Address address : Addresses.getInstance().listValues() ) {\n      try {\n        VmInstances.getInstance().lookup( address.getInstanceId() );\n      } catch ( NoSuchElementException e ) {\n        EntityWrapper<Address> db = new EntityWrapper<Address>();\n        try {\n          Address addr = db.getUnique( new Address( address.getName() ) );\n          addr.unassign();\n          db.commit();\n        } catch ( EucalyptusCloudException ex ) {\n          db.rollback();\n        }\n        address.unassign();\n      }\n      if ( isAdmin || address.getUserId().equals( request.getUserId() ) ) {\n        reply.getAddressesSet().add( address.getDescription( isAdmin ) );\n      }\n    }\n    if ( request.isAdministrator() )\n      for ( Address address : Addresses.getInstance().listDisabledValues() )\n        reply.getAddressesSet().add( new DescribeAddressesResponseItemType( address.getName(), Address.UNALLOCATED_USERID ) );\n\n    return reply;\n  }","id":52639,"modified_method":"public DescribeAddressesResponseType DescribeAddresses( DescribeAddressesType request ) throws EucalyptusCloudException {\n    AddressUtil.updateAddressingMode();\n    DescribeAddressesResponseType reply = ( DescribeAddressesResponseType ) request.getReply();\n\n\n    boolean isAdmin = request.isAdministrator();\n    for ( Address address : Addresses.getInstance().listValues() ) {\n      if( address.isAssigned( ) ) {\n        try {\n          VmInstances.getInstance().lookup( address.getInstanceId() );\n        } catch ( NoSuchElementException e ) {\n          AddressUtil.markAddressUnassigned( address );\n        }\n      }\n      if ( isAdmin || address.getUserId().equals( request.getUserId() ) ) {\n        reply.getAddressesSet().add( address.getDescription( isAdmin ) );\n      }\n    }\n    if ( request.isAdministrator() )\n      for ( Address address : Addresses.getInstance().listDisabledValues() )\n        reply.getAddressesSet().add( new DescribeAddressesResponseItemType( address.getName(), Address.UNALLOCATED_USERID ) );\n\n    return reply;\n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public AssociateAddressResponseType AssociateAddress( AssociateAddressType request ) throws Exception {\n    AddressManager.updateAddressingMode();\n    AssociateAddressResponseType reply = ( AssociateAddressResponseType ) request.getReply();\n    reply.set_return( false );\n\n\n    LOG.debug( \"Associate: \" + request.getPublicIp() + \" => \" + request.getInstanceId() );\n    Address address = null;\n    try {\n      address = Addresses.getInstance().lookup( request.getPublicIp() );\n    } catch ( NoSuchElementException e ) {\n      return reply;\n    }\n    LOG.debug( \"Found address: \" + address );\n\n    VmInstance vm = null;\n    try {\n      vm = VmInstances.getInstance().lookup( request.getInstanceId() );\n    } catch ( NoSuchElementException e ) {\n      return reply;\n    }\n    LOG.debug( \"Found vm: \" + vm );\n\n    if ( !request.isAdministrator() && !( request.getUserId().equals( address.getUserId() ) && request.getUserId().equals( vm.getOwnerId() ) ) )\n      return reply;\n\n    //:: operation should be idempotent; request is legitimate so return true :://\n    reply.set_return( true );\n\n    //:: handle the address which may be currently assigned to the vm :://\n    if( !vm.getNetworkConfig().getIpAddress().equals( vm.getNetworkConfig().getIgnoredPublicIp() ) && !VmInstance.DEFAULT_IP.equals( vm.getNetworkConfig().getIgnoredPublicIp() ) ) {\n      String currentPublicIp = vm.getNetworkConfig().getIgnoredPublicIp();\n      try {\n        Address currentAddr = Addresses.getInstance().lookup( currentPublicIp );\n        boolean release = Component.eucalyptus.name().equals( currentAddr.getUserId() ) && edu.ucsb.eucalyptus.util.EucalyptusProperties.getSystemConfiguration( ).isDoDynamicPublicAddresses();\n        LOG.debug( \"Dispatching unassign message for: \" + address );\n        AddressManager.unassignAddressFromVm( currentAddr, vm );\n        if( release ) {\n          AddressManager.releaseAddress( currentAddr );\n        }\n      } catch ( NoSuchElementException e ) {\n        return reply;\n      }\n    }\n    //:: handle the vm which the requested address may be assigned to :://\n    if ( address.isAssigned() && address.getUserId().equals( request.getUserId() ) && !address.isPending() ) {\n      LOG.debug( \"Dispatching unassign message for: \" + address );\n      try {\n        VmInstance oldVm = VmInstances.getInstance().lookup( address.getInstanceId() );\n        AddressManager.unassignAddressFromVm( address, oldVm );\n        AddressManager.tryAssignSystemAddress( oldVm );\n\n        if( !EucalyptusProperties.disableNetworking ) {\n        }\n      } catch ( NoSuchElementException e ) {\n        LOG.error( e, e );\n      }\n    }\n\n    AddressManager.assignAddressToVm( address, vm );\n\n    return reply;\n  }","id":52640,"modified_method":"public AssociateAddressResponseType AssociateAddress( AssociateAddressType request ) throws Exception {\n    AddressUtil.updateAddressingMode();\n    AssociateAddressResponseType reply = ( AssociateAddressResponseType ) request.getReply();\n    reply.set_return( false );\n\n\n    LOG.debug( \"Associate: \" + request.getPublicIp() + \" => \" + request.getInstanceId() );\n    Address address = null;\n    try {\n      address = Addresses.getInstance().lookup( request.getPublicIp() );\n    } catch ( NoSuchElementException e ) {\n      return reply;\n    }\n    LOG.debug( \"Found address: \" + address );\n\n    VmInstance vm = null;\n    try {\n      vm = VmInstances.getInstance().lookup( request.getInstanceId() );\n    } catch ( NoSuchElementException e ) {\n      return reply;\n    }\n    LOG.debug( \"Found vm: \" + vm );\n\n    if ( !request.isAdministrator() && !( request.getUserId().equals( address.getUserId() ) && request.getUserId().equals( vm.getOwnerId() ) ) )\n      return reply;\n\n    //:: operation should be idempotent; request is legitimate so return true :://\n    reply.set_return( true );\n\n    //:: handle the address which may be currently assigned to the vm :://\n    if( !vm.getNetworkConfig().getIpAddress().equals( vm.getNetworkConfig().getIgnoredPublicIp() ) && !VmInstance.DEFAULT_IP.equals( vm.getNetworkConfig().getIgnoredPublicIp() ) ) {\n      String currentPublicIp = vm.getNetworkConfig().getIgnoredPublicIp();\n      try {\n        Address currentAddr = Addresses.getInstance().lookup( currentPublicIp );\n                LOG.debug( \"Dispatching unassign message for: \" + address );\n        if( currentAddr.isAssigned( ) ) {\n          AddressUtil.unassignAddressFromVm( currentAddr, vm );\n        } else {\n          AddressUtil.dispatchUnassignAddress( currentAddr, vm );\n        }\n      } catch ( NoSuchElementException e ) {\n      }\n    }\n    //:: handle the vm which the requested address may be assigned to :://\n    if ( address.isAssigned() && address.getUserId().equals( request.getUserId() ) && !address.isPending() ) {\n      LOG.debug( \"Dispatching unassign message for: \" + address );\n      try {\n        VmInstance oldVm = VmInstances.getInstance().lookup( address.getInstanceId() );\n        if( address.isAssigned( ) ) {\n          AddressUtil.unassignAddressFromVm( address, oldVm );\n        } else {\n          AddressUtil.dispatchUnassignAddress( address, oldVm );\n        }\n        AddressUtil.tryAssignSystemAddress( oldVm );\n\n//        if( !EucalyptusProperties.disableNetworking ) {\n//        }\n      } catch ( NoSuchElementException e ) {\n        LOG.error( e, e );\n      }\n    }\n\n    AddressUtil.assignAddressToVm( address, vm );\n\n    return reply;\n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public ReleaseAddressResponseType ReleaseAddress( ReleaseAddressType request ) throws EucalyptusCloudException {\n    AddressManager.updateAddressingMode();\n    ReleaseAddressResponseType reply = ( ReleaseAddressResponseType ) request.getReply();\n    reply.set_return( false );\n\n    Address address = null;\n    try {\n      //:: find the addr :://\n      address = Addresses.getInstance().lookup( request.getPublicIp() );\n      if ( !request.isAdministrator() && !address.getUserId().equals( request.getUserId() ) )\n        return reply;\n      //:: dispatch the unassign if needed :://\n      if ( address.isAssigned() && !address.isPending() ) {\n        try {\n          VmInstance oldVm = VmInstances.getInstance().lookup( address.getInstanceId() );\n          AddressManager.unassignAddressFromVm( address, oldVm );\n          AddressManager.tryAssignSystemAddress( oldVm );\n        } catch ( NoSuchElementException e ) {}\n      }\n\n      if( Component.eucalyptus.name().equals( address.getUserId() ) && !edu.ucsb.eucalyptus.util.EucalyptusProperties.getSystemConfiguration( ).isDoDynamicPublicAddresses() ) {\n        LOG.debug( \"Not de-allocating system owned address in static public addressing mode: \" + address.getName() );\n        return reply;\n      }\n      AddressManager.releaseAddress( address );\n      reply.set_return( true );\n    }\n    catch ( NoSuchElementException e ) {\n      return reply;\n    }\n\n    return reply;\n  }","id":52641,"modified_method":"public ReleaseAddressResponseType ReleaseAddress( ReleaseAddressType request ) throws EucalyptusCloudException {\n    AddressUtil.updateAddressingMode();\n    ReleaseAddressResponseType reply = ( ReleaseAddressResponseType ) request.getReply();\n    reply.set_return( false );\n\n    Address address = null;\n    try {\n      //:: find the addr :://\n      address = Addresses.getInstance().lookup( request.getPublicIp() );\n      if ( !request.isAdministrator() && !address.getUserId().equals( request.getUserId() ) )\n        return reply;\n      //:: dispatch the unassign if needed :://\n      if ( address.isAssigned() && !address.isPending() ) {\n        try {\n          VmInstance oldVm = VmInstances.getInstance().lookup( address.getInstanceId() );\n          AddressUtil.unassignAddressFromVm( address, oldVm );\n          AddressUtil.tryAssignSystemAddress( oldVm );\n        } catch ( NoSuchElementException e ) {}\n      }\n\n      if( Component.eucalyptus.name().equals( address.getUserId() ) && !edu.ucsb.eucalyptus.util.EucalyptusProperties.getSystemConfiguration( ).isDoDynamicPublicAddresses() ) {\n        LOG.debug( \"Not de-allocating system owned address in static public addressing mode: \" + address.getName() );\n        return reply;\n      }\n      AddressUtil.releaseAddress( address );\n      reply.set_return( true );\n    }\n    catch ( NoSuchElementException e ) {\n      return reply;\n    }\n\n    return reply;\n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public AllocateAddressResponseType AllocateAddress( AllocateAddressType request ) throws EucalyptusCloudException {\n    AddressManager.updateAddressingMode();\n    int addrCount = 0;\n    for( Address a : Addresses.getInstance().listValues() ) {\n      if( request.getUserId().equals( a.getUserId() ) ) addrCount++;\n    }\n    if( addrCount >= edu.ucsb.eucalyptus.util.EucalyptusProperties.getSystemConfiguration( ).getMaxUserPublicAddresses() && !request.isAdministrator() )\n      throw new EucalyptusCloudException( ExceptionList.ERR_SYS_INSUFFICIENT_ADDRESS_CAPACITY );\n\n    ConcurrentNavigableMap<String, Address> unusedAddresses = Addresses.getInstance().getDisabledMap();\n    Map.Entry<String, Address> addressEntry = unusedAddresses.pollFirstEntry();\n\n    //:: address is null -- disabled map is empty :://\n    if ( addressEntry == null ) {\n      LOG.debug( LogUtil.header( LogUtil.dumpObject( Addresses.getInstance( ) ) ) );\n      throw new EucalyptusCloudException( ExceptionList.ERR_SYS_INSUFFICIENT_ADDRESS_CAPACITY );\n    }\n\n    Address address = addressEntry.getValue();\n    address.allocate( request.getUserId() );\n    EntityWrapper<Address> db = new EntityWrapper<Address>();\n    try {\n      Address addr = db.getUnique( new Address( address.getName() ) );\n      addr.allocate( request.getUserId() );\n    } catch ( EucalyptusCloudException e ) {\n      db.merge( address );\n    }\n    db.commit();\n\n    try {\n      Addresses.getInstance().register( address );\n    } catch ( Exception e ) {\n    }\n\n    AllocateAddressResponseType reply = ( AllocateAddressResponseType ) request.getReply();\n    reply.setPublicIp( address.getName() );\n    return reply;\n  }","id":52642,"modified_method":"public AllocateAddressResponseType AllocateAddress( AllocateAddressType request ) throws EucalyptusCloudException {\n    AddressUtil.updateAddressingMode();\n    int addrCount = 0;\n    for( Address a : Addresses.getInstance().listValues() ) {\n      if( request.getUserId().equals( a.getUserId() ) ) addrCount++;\n    }\n    if( addrCount >= edu.ucsb.eucalyptus.util.EucalyptusProperties.getSystemConfiguration( ).getMaxUserPublicAddresses() && !request.isAdministrator() )\n      throw new EucalyptusCloudException( ExceptionList.ERR_SYS_INSUFFICIENT_ADDRESS_CAPACITY );\n\n    String userId = request.getUserId( );\n    Address address = AddressUtil.nextAvailableAddress( userId );\n\n    try {\n      Addresses.getInstance().register( address );\n    } catch ( Exception e ) {\n    }\n\n    AllocateAddressResponseType reply = ( AllocateAddressResponseType ) request.getReply();\n    reply.setPublicIp( address.getName() );\n    return reply;\n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n  public void upstreamMessage( ChannelHandlerContext ctx, MessageEvent e ) {\n    if( e.getMessage( ) instanceof MappingHttpResponse ) {\n      MappingHttpResponse resp = (MappingHttpResponse) e.getMessage( );\n      DescribePublicAddressesResponseType reply = (DescribePublicAddressesResponseType) resp.getMessage( );   \n      if ( reply.get_return( ) ) {\n        EucalyptusProperties.disableNetworking = false;\n//        for ( Pair p : Pair.getPaired( reply.getAddresses( ), reply.getMapping( ) ) ) {\n//          try {\n//            Address blah = Addresses.getInstance( ).lookup( p.getLeft( ) );\n//            blah.setInstanceAddress( p.getRight( ) );\n//          } catch ( NoSuchElementException ex ) {\n//            Addresses.getInstance( ).registerDisabled( new Address( p.getLeft( ), this.getCluster().getName( ) ) );\n//          }\n//        }\n      } else {\n        LOG.warn( \"Response from cluster [\" + this.getCluster( ).getName( ) + \"]: \" + reply.getStatusMessage( ) );\n        EucalyptusProperties.disableNetworking = true;\n      }\n      this.verified = true;\n    }\n  }","id":52643,"modified_method":"@Override\n  public void upstreamMessage( ChannelHandlerContext ctx, MessageEvent e ) {\n    if ( e.getMessage( ) instanceof MappingHttpResponse ) {\n      MappingHttpResponse resp = ( MappingHttpResponse ) e.getMessage( );\n      DescribePublicAddressesResponseType reply = ( DescribePublicAddressesResponseType ) resp.getMessage( );\n      if ( reply.get_return( ) ) {\n        EucalyptusProperties.disableNetworking = false;\n        AddressUtil.initialize( );\n        for ( Pair p : Pair.getPaired( reply.getAddresses( ), reply.getMapping( ) ) ) {\n          Address address = getAddress( p );\n          try {\n            InetAddress addr = Inet4Address.getByName( p.getRight( ) );\n            address.setInstanceAddress( p.getRight( ) );\n            VmInstance vm = getVmInstance( p );\n            if ( vm != null ) {\n              orphans.remove( address.getName( ) );\n            } else if( !addr.isLoopbackAddress( ) && !this.checkForPendingVm( address ) ) {\n              handleOrphan( address );\n            } else {\n              orphans.remove( address.getName( ) );\n            }\n          } catch ( UnknownHostException e1 ) {\n            LOG.debug( e1, e1 );\n            orphans.remove( address.getName( ) );\n          }\n        }\n      } else {\n        LOG.warn( \"Response from cluster [\" + this.getCluster( ).getName( ) + \"]: \" + reply.getStatusMessage( ) );\n        EucalyptusProperties.disableNetworking = true;\n      }\n      this.verified = true;\n    }\n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n  public void prepare( AssignAddressType msg ) throws Exception {\n    try {\n      VmInstance vm = VmInstances.getInstance( ).lookup( msg.getInstanceId( ) );\n      VmState vmState = vm.getState( );\n      if( !VmState.RUNNING.equals( vmState ) && !VmState.PENDING.equals( vmState ) ) {\n        throw new EucalyptusClusterException( \"Ignoring assignment to a vm which is not running: \" + msg  );\n      } else {\n        for( VmInstance aVm : VmInstances.getInstance( ).listValues( ) ) {\n          if( msg.getSource().equals( aVm.getNetworkConfig( ).getIgnoredPublicIp( ) ) && !vm.getInstanceId( ).equals( aVm.getInstanceId( ) ) \n              && VmState.RUNNING.equals( aVm.getState( ) ) && VmState.PENDING.equals( aVm.getState( ) ) ) {\n            throw new EucalyptusClusterException( \"Assign [\" + msg.getSource() + \"]  discarded because another VM already owns this IP.\" );\n          }\n        }\n        LOG.debug( \"Assign [\" + msg.getSource() + \"]  => [\" + msg.getDestination() + \"]\" );\n        this.parent.getNetworkConfig().setIgnoredPublicIp( msg.getSource() );\n      }\n      LOG.info( String.format( EucalyptusProperties.DEBUG_FSTRING, EucalyptusProperties.TokenState.submitted, LogUtil.subheader( this.getRequest( ).toString( \"eucalyptus_ucsb_edu\" ) ) ) );\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      throw e;\n    }\n  }","id":52644,"modified_method":"@Override\n  public void prepare( AssignAddressType msg ) throws Exception {\n    try {\n      VmInstance vm = VmInstances.getInstance( ).lookup( msg.getInstanceId( ) );\n      VmState vmState = vm.getState( );\n      if ( !VmState.RUNNING.equals( vmState ) && !VmState.PENDING.equals( vmState ) ) {\n        LOG.debug( EventRecord.here( AssignAddressCallback.class, Address.State.assigning, LogUtil.FAIL,\n                                     parentAddr.toString( ) ) );\n        throw new IllegalStateException( \"Ignoring assignment to a vm which is not running: \" + msg );\n      } else {\n        //        for( VmInstance aVm : VmInstances.getInstance( ).listValues( ) ) {\n        //          if( msg.getSource().equals( aVm.getNetworkConfig( ).getIgnoredPublicIp( ) ) && !vm.getInstanceId( ).equals( aVm.getInstanceId( ) ) \n        //              && VmState.RUNNING.equals( aVm.getState( ) ) && VmState.PENDING.equals( aVm.getState( ) ) ) {\n        //            throw new EucalyptusClusterException( \"Assign [\" + msg.getSource() + \"]  discarded because another VM already owns this IP.\" );\n        //          }\n        //        }\n        this.parentVm.getNetworkConfig( ).setIgnoredPublicIp( msg.getSource( ) );\n        LOG.debug( EventRecord.here( AssignAddressCallback.class, Address.State.assigning, parentAddr.toString( ) ) );\n      }\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      this.parentAddr.clearPending( );\n      throw e;\n    }\n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public AssignAddressCallback( final VmInstance parent ) {\n    this.parent = parent;\n  }","id":52645,"modified_method":"public AssignAddressCallback( Address address, final VmInstance vm ) {\n    this.parentVm = vm;\n    this.parentAddr = address;\n    super.setRequest( new AssignAddressType( address.getName( ), vm.getNetworkConfig( ).getIpAddress( ),\n      vm.getInstanceId( ) ) );\n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n  public void fail( Throwable e ) {\n    LOG.debug( LogUtil.subheader( this.getRequest( ).toString( \"eucalyptus_ucsb_edu\" ) ) );\n    LOG.debug( e, e );\n  }","id":52646,"modified_method":"@Override\n  public void fail( Throwable e ) {\n    //FIXME: assign fails: clean up state.\n    this.parentAddr.clearPending( );\n    LOG.debug( LogUtil.subheader( this.getRequest( ).toString( \"eucalyptus_ucsb_edu\" ) ) );\n    LOG.debug( e, e );\n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n  public void verify( EucalyptusMessage msg ) throws Exception {\n    LOG.info( String.format( EucalyptusProperties.DEBUG_FSTRING, EucalyptusProperties.TokenState.allocated, LogUtil.subheader( this.getRequest( ).toString( \"eucalyptus_ucsb_edu\" ) ) ) );\n  }","id":52647,"modified_method":"@Override\n  public void verify( EucalyptusMessage msg ) throws Exception {\n    try {\n      if ( !msg.get_return( ) ) {\n        LOG.debug( EventRecord.here( AssignAddressCallback.class, Address.State.assigned, LogUtil.FAIL,\n                                     LogUtil.lineObject( parentAddr ) ) );\n      } else {\n        LOG.debug( EventRecord.here( AssignAddressCallback.class, Address.State.assigned,\n                                     LogUtil.lineObject( parentAddr ) ) );\n      }\n    } finally {\n      this.parentAddr.clearPending( );\n    }\n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public void setupAddressMessages( List<String> addresses, List<VmInfo> runningVms ) {\n    if ( EucalyptusProperties.disableNetworking ) {\n      return;\n    } else if ( addresses.size() < runningVms.size() ) {\n      LOG.error( \"Number of running VMs is greater than number of assigned addresses!\" );\n    } else {\n      AddressManager.updateAddressingMode();\n      for ( VmInfo vm : runningVms ) {\n        String addr = addresses.remove( 0 );\n        try {\n          vm.getNetParams().setIgnoredPublicIp( addr );\n          AssociateAddressType msg = new AssociateAddressType( addr, vm.getInstanceId() );\n          msg.setUserId( vm.getOwnerId() );\n          msg.setEffectiveUserId( Component.eucalyptus.name() );\n          new AddressManager().AssociateAddress( msg );\n        } catch ( Exception e ) {\n          LOG.error( e, e );\n        }\n      }\n    }\n    for( String addr : addresses ) {\n      try {\n        new AddressManager().ReleaseAddress( Admin.makeMsg( ReleaseAddressType.class, addr ) );\n        LOG.warn( \"Released unused public address: \" + addr );\n      } catch ( EucalyptusCloudException e ) {}\n    }\n\n  }","id":52648,"modified_method":"public void setupAddressMessages( List<String> addresses, List<VmInfo> runningVms ) {\n    if ( EucalyptusProperties.disableNetworking ) {\n      return;\n    } else if ( addresses.size() < runningVms.size() ) {\n      LOG.error( \"Number of running VMs is greater than number of assigned addresses!\" );\n    } else {\n      AddressUtil.updateAddressingMode();\n      for ( VmInfo vm : runningVms ) {\n        String addr = addresses.remove( 0 );\n        try {\n          VmInstance realVm = VmInstances.getInstance( ).lookup( vm.getInstanceId( ) );\n          Address address = Addresses.getInstance( ).lookup( addr );\n          address.setInstanceId( realVm.getInstanceId( ) );\n          address.setInstanceAddress( realVm.getNetworkConfig( ).getIpAddress( ) );\n          AddressUtil.dispatchAssignAddress( address, realVm );\n        } catch ( Exception e ) {\n          LOG.error( e, e );\n        }\n      }\n    }\n    for( String addr : addresses ) {\n      try {\n        new AddressManager().ReleaseAddress( Admin.makeMsg( ReleaseAddressType.class, addr ) );\n        LOG.warn( \"Released unused public address: \" + addr );\n      } catch ( EucalyptusCloudException e ) {}\n    }\n\n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public ClusterAllocator( ResourceToken vmToken, VmAllocationInfo vmAllocInfo ) {\n    this.msgMap = Multimaps.newHashMultimap();\n    this.vmAllocInfo = vmAllocInfo;\n    this.pendingEvents = new ConcurrentLinkedQueue<QueuedEvent>();\n    this.state = State.START;\n    this.rollback = new AtomicBoolean( false );\n    try {\n      this.cluster = Clusters.getInstance().lookup( vmToken.getCluster() );\n      for ( NetworkToken networkToken : vmToken.getNetworkTokens() )\n        this.setupNetworkMessages( networkToken );\n      this.setupVmMessages( vmToken );\n    } catch ( Throwable e ) {\n      if( vmToken != null ) {\n        try {\n          Clusters.getInstance().lookup( vmToken.getCluster() ).getNodeState().releaseToken( vmToken );\n        } catch ( Throwable e1 ) {\n          LOG.debug( e1 );\n          LOG.trace( e1, e1 );\n        }\n        try {\n          for( String addr : vmToken.getAddresses( ) ) {\n            AddressManager.releaseAddress( addr );\n          }\n        } catch ( Throwable e1 ) {\n          LOG.debug( e1 );\n          LOG.trace( e1, e1 );\n        }\n        try {\n          if( vmToken.getPrimaryNetwork( ) != null ) {\n            Network net = Networks.getInstance().lookup( vmToken.getPrimaryNetwork( ).getName( ) );\n            for( Integer i : vmToken.getPrimaryNetwork( ).getIndexes( ) ) {\n              net.returnNetworkIndex( i );\n            }\n          }\n        } catch ( Throwable e1 ) {\n          LOG.debug( e1 );\n          LOG.trace( e1, e1 );\n        }\n      }\n    }\n  }","id":52649,"modified_method":"public ClusterAllocator( ResourceToken vmToken, VmAllocationInfo vmAllocInfo ) {\n    this.msgMap = Multimaps.newHashMultimap();\n    this.vmAllocInfo = vmAllocInfo;\n    this.pendingEvents = new ConcurrentLinkedQueue<QueuedEvent>();\n    this.state = State.START;\n    this.rollback = new AtomicBoolean( false );\n    try {\n      this.cluster = Clusters.getInstance().lookup( vmToken.getCluster() );\n      for ( NetworkToken networkToken : vmToken.getNetworkTokens() )\n        this.setupNetworkMessages( networkToken );\n      this.setupVmMessages( vmToken );\n    } catch ( Throwable e ) {\n      if( vmToken != null ) {\n        try {\n          Clusters.getInstance().lookup( vmToken.getCluster() ).getNodeState().releaseToken( vmToken );\n        } catch ( Throwable e1 ) {\n          LOG.debug( e1 );\n          LOG.trace( e1, e1 );\n        }\n        try {\n          for( String addr : vmToken.getAddresses( ) ) {\n            AddressUtil.releaseAddress( addr );\n          }\n        } catch ( Throwable e1 ) {\n          LOG.debug( e1 );\n          LOG.trace( e1, e1 );\n        }\n        try {\n          if( vmToken.getPrimaryNetwork( ) != null ) {\n            Network net = Networks.getInstance().lookup( vmToken.getPrimaryNetwork( ).getName( ) );\n            for( Integer i : vmToken.getPrimaryNetwork( ).getIndexes( ) ) {\n              net.returnNetworkIndex( i );\n            }\n          }\n        } catch ( Throwable e1 ) {\n          LOG.debug( e1 );\n          LOG.trace( e1, e1 );\n        }\n      }\n    }\n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public void doAddressAllocation( VmAllocationInfo vmAllocInfo ) throws NotEnoughResourcesAvailable {\n    int addrCount = 0;\n    List<ResourceToken> allocTokeList = vmAllocInfo.getAllocationTokens();\n    for ( ResourceToken token : allocTokeList ) {\n      addrCount += token.getAmount();\n    }\n    if ( !EucalyptusProperties.disableNetworking && ( \"public\".equals( vmAllocInfo.getRequest().getAddressingType() ) || vmAllocInfo.getRequest().getAddressingType() == null ) ) {\n      NavigableSet<String> addresses = AddressManager.allocateAddresses( addrCount );\n      for ( ResourceToken token : allocTokeList ) {\n        for ( int i = 0; i < token.getAmount(); i++ ) {\n          token.getAddresses().add( addresses.pollFirst() );            \n        }\n      }\n    }\n  }","id":52650,"modified_method":"public void doAddressAllocation( VmAllocationInfo vmAllocInfo ) throws NotEnoughResourcesAvailable {\n    int addrCount = 0;\n    List<ResourceToken> allocTokeList = vmAllocInfo.getAllocationTokens();\n    for ( ResourceToken token : allocTokeList ) {\n      addrCount += token.getAmount();\n    }\n    if ( !EucalyptusProperties.disableNetworking && ( \"public\".equals( vmAllocInfo.getRequest().getAddressingType() ) || vmAllocInfo.getRequest().getAddressingType() == null ) ) {\n      List<Address> addressList = AddressUtil.allocateAddresses( addrCount );\n      Iterator<Address> iter = addressList.listIterator( );\n      for ( ResourceToken token : allocTokeList ) {\n        for ( int i = 0; i < token.getAmount(); i++ ) {\n          Address next = iter.next( );\n          token.getAddresses().add( next.getName( ) );\n          next.assign( Address.PENDING_ASSIGNMENT, Address.PENDING_ASSIGNMENT );//FIXME: lame hack.\n        }\n      }\n    }\n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private static void cleanUp( final VmInstance vm ) {\n    for ( Address address : Addresses.getInstance( ).listValues( ) ) {\n      if ( vm.getInstanceId( ).equals( address.getInstanceId( ) ) ) {\n        if ( Component.eucalyptus.name( ).equals( address.getUserId( ) ) ) {\n          AddressManager.unassignAddressFromVm( address, vm );\n          AddressManager.releaseAddress( address );\n        }\n      }\n    }\n    try {\n      Networks.getInstance( ).lookup( vm.getNetworkNames( ).get( 0 ) ).returnNetworkIndex( vm.getNetworkIndex( ) );\n    } catch ( NoSuchElementException e1 ) {\n      LOG.debug( e1 );\n    }\n    try {\n      Clusters.sendClusterEvent( vm.getPlacement( ), QueuedEvent.make( new TerminateCallback( ),\n                                                                       Admin.makeMsg( TerminateInstancesType.class,\n                                                                                      vm.getInstanceId( ) ) ) );\n      try {} catch ( Exception e ) {}\n    } catch ( Exception e ) {\n      LOG.debug( e );\n    }\n  }","id":52651,"modified_method":"private static void cleanUp( final VmInstance vm ) {\n    if ( !VmState.TERMINATED.equals( vm.getState( ) ) && !VmState.BURIED.equals( vm.getState( ) ) ) {\n      SystemState.returnPublicAddress( vm );\n      SystemState.returnNetworkIndex( vm );\n    }\n    try {\n      Clusters.sendClusterEvent( vm.getPlacement( ), QueuedEvent.make( new TerminateCallback( ),\n                                                                       Admin.makeMsg( TerminateInstancesType.class,\n                                                                                      vm.getInstanceId( ) ) ) );\n      try {} catch ( Exception e ) {}\n    } catch ( Exception e ) {\n      LOG.debug( e );\n    }\n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n  public void prepare( UnassignAddressType msg ) throws Exception {\n    LOG.info( String.format( EucalyptusProperties.DEBUG_FSTRING, EucalyptusProperties.TokenState.submitted, LogUtil.subheader( msg.toString( \"eucalyptus_ucsb_edu\" ) ) ) );\n//    if( !this.parent.isAssigned( ) || this.parent.isPending( ) ) {\n//      throw new EucalyptusClusterException( \"Received request to unassign an address which is either not assigned or has an assignment pending: \" + this.parent.toString( ) );\n//    }\n  }","id":52652,"modified_method":"@Override\n  public void prepare( UnassignAddressType msg ) throws Exception {\n    LOG.debug( EventRecord.here( UnassignAddressCallback.class, Address.State.unassigning, parentAddr.toString( ) ) );\n//    if( !this.parent.isAssigned( ) || this.parent.isPending( ) ) {\n//      throw new EucalyptusClusterException( \"Received request to unassign an address which is either not assigned or has an assignment pending: \" + this.parent.toString( ) );\n//    }\n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n  public void verify( EucalyptusMessage msg ) throws Exception {\n    LOG.info( String.format( EucalyptusProperties.DEBUG_FSTRING, EucalyptusProperties.TokenState.unassigned, LogUtil.subheader( this.getRequest( ).toString( \"eucalyptus_ucsb_edu\" ) ) ) );\n  }","id":52653,"modified_method":"@Override\n  public void verify( EucalyptusMessage msg ) {\n    LOG.info( String.format( EucalyptusProperties.DEBUG_FSTRING, EucalyptusProperties.TokenState.unassigned, LogUtil.subheader( this.getRequest( ).toString( \"eucalyptus_ucsb_edu\" ) ) ) );\n    String ipAddress = this.getRequest( ).getSource( );\n    if( this.parentVm != null ) {\n      this.clearVm( ipAddress, this.parentVm );\n    } else {\n      for( VmInstance vm : VmInstances.getInstance( ).listValues( ) ) {\n        this.clearVm( ipAddress, vm );\n      }\n    }\n    this.parentAddr.clearPending( );\n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public UnassignAddressCallback( final Address parent ) {\n    this.parent = parent;\n  }","id":52654,"modified_method":"public UnassignAddressCallback( final Address address ) {\n    this.parentAddr = address;\n    super.setRequest( new UnassignAddressType( parentAddr.getName( ), parentAddr.getInstanceAddress( ) ) );\n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n  public void fail( Throwable e ) {\n    LOG.debug( LogUtil.subheader( this.getRequest( ).toString( \"eucalyptus_ucsb_edu\" ) ) );\n    LOG.debug( e, e );\n  }","id":52655,"modified_method":"@Override\n  public void fail( Throwable e ) {\n    LOG.debug( LogUtil.subheader( this.getRequest( ).toString( \"eucalyptus_ucsb_edu\" ) ) );\n    LOG.debug( e, e );\n    //FIXME: unassign fails clean up state.\n    this.parentAddr.clearPending( );\n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public VmAllocationInfo evaluate( VmAllocationInfo vmAllocInfo ) throws EucalyptusCloudException {\n    SLAs sla = new SLAs();\n    try {\n      vmAllocInfo.getAllocationTokens( ).addAll( sla.doVmAllocation( vmAllocInfo ) );\n    } catch ( Throwable e ) {\n      LOG.debug( e, e );\n      for ( ResourceToken token : vmAllocInfo.getAllocationTokens( ) ) {\n        Clusters.getInstance().lookup( token.getCluster() ).getNodeState().releaseToken( token );\n      }\n      throw new EucalyptusCloudException( e.getMessage( ) );\n    } \n    try {\n      sla.doAddressAllocation( vmAllocInfo );\n    } catch ( Throwable e ) {\n      LOG.debug( e, e );\n      for ( ResourceToken token : vmAllocInfo.getAllocationTokens( ) ) {\n        Clusters.getInstance().lookup( token.getCluster() ).getNodeState().releaseToken( token );\n        for( String addr : token.getAddresses( ) ) {\n          AddressManager.releaseAddress( addr );\n        }\n      }\n      throw new EucalyptusCloudException( e.getMessage( ) );\n    } \n    try {\n      sla.doNetworkAllocation( vmAllocInfo );\n    } catch ( Throwable e ) {\n      LOG.debug( e, e );\n      for ( ResourceToken token : vmAllocInfo.getAllocationTokens( ) ) {\n        Clusters.getInstance().lookup( token.getCluster() ).getNodeState().releaseToken( token );\n        for( String addr : token.getAddresses( ) ) {\n          AddressManager.releaseAddress( addr );\n        }\n        if( token.getPrimaryNetwork( ) != null ) {\n          Network net = Networks.getInstance().lookup( token.getPrimaryNetwork( ).getName( ) );\n          for( Integer i : token.getPrimaryNetwork( ).getIndexes( ) ) {\n            net.returnNetworkIndex( i );\n          }\n        }\n      }\n      throw new EucalyptusCloudException( e );\n    } \n\n    return vmAllocInfo;\n  }","id":52656,"modified_method":"public VmAllocationInfo evaluate( VmAllocationInfo vmAllocInfo ) throws EucalyptusCloudException {\n    SLAs sla = new SLAs();\n    try {\n      vmAllocInfo.getAllocationTokens( ).addAll( sla.doVmAllocation( vmAllocInfo ) );\n    } catch ( Throwable e ) {\n      LOG.debug( e, e );\n      for ( ResourceToken token : vmAllocInfo.getAllocationTokens( ) ) {\n        Clusters.getInstance().lookup( token.getCluster() ).getNodeState().releaseToken( token );\n      }\n      throw new EucalyptusCloudException( e.getMessage( ) );\n    } \n    try {\n      sla.doAddressAllocation( vmAllocInfo );\n    } catch ( Throwable e ) {\n      LOG.debug( e, e );\n      for ( ResourceToken token : vmAllocInfo.getAllocationTokens( ) ) {\n        Clusters.getInstance().lookup( token.getCluster() ).getNodeState().releaseToken( token );\n        for( String addr : token.getAddresses( ) ) {\n          AddressUtil.releaseAddress( addr );\n        }\n      }\n      throw new EucalyptusCloudException( e.getMessage( ) );\n    } \n    try {\n      sla.doNetworkAllocation( vmAllocInfo );\n    } catch ( Throwable e ) {\n      LOG.debug( e, e );\n      for ( ResourceToken token : vmAllocInfo.getAllocationTokens( ) ) {\n        Clusters.getInstance().lookup( token.getCluster() ).getNodeState().releaseToken( token );\n        for( String addr : token.getAddresses( ) ) {\n          AddressUtil.releaseAddress( addr );\n        }\n        if( token.getPrimaryNetwork( ) != null ) {\n          Network net = Networks.getInstance().lookup( token.getPrimaryNetwork( ).getName( ) );\n          for( Integer i : token.getPrimaryNetwork( ).getIndexes( ) ) {\n            net.returnNetworkIndex( i );\n          }\n        }\n      }\n      throw new EucalyptusCloudException( e );\n    } \n\n    return vmAllocInfo;\n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private void assignAddresses( VmRunResponseType reply ) {\n    for ( VmInfo vmInfo : reply.getVms() ) {\n      VmInstance vm = VmInstances.getInstance().lookup( vmInfo.getInstanceId() );\n      vm.getNetworkConfig().setIpAddress( vmInfo.getNetParams().getIpAddress() );\n    }\n    this.parent.setupAddressMessages( Lists.newArrayList( this.token.getAddresses() ), Lists.newArrayList( reply.getVms() ) );\n    for ( VmInfo vmInfo : reply.getVms() ) {\n      VmInstance vm = VmInstances.getInstance().lookup( vmInfo.getInstanceId() );\n      if( VmInstance.DEFAULT_IP.equals( vm.getNetworkConfig().getIgnoredPublicIp() ) )\n        vm.getNetworkConfig().setIgnoredPublicIp( vmInfo.getNetParams().getIgnoredPublicIp() );\n    }\n  }","id":52657,"modified_method":"private void assignAddresses( VmRunResponseType reply ) {\n    for ( VmInfo vmInfo : reply.getVms() ) {\n      VmInstance vm = VmInstances.getInstance().lookup( vmInfo.getInstanceId() );\n      vm.getNetworkConfig().setIpAddress( vmInfo.getNetParams().getIpAddress() );\n      if( VmInstance.DEFAULT_IP.equals( vm.getNetworkConfig().getIgnoredPublicIp() ) )\n        vm.getNetworkConfig().setIgnoredPublicIp( vmInfo.getNetParams().getIgnoredPublicIp() );\n    }\n    this.parent.setupAddressMessages( Lists.newArrayList( this.token.getAddresses() ), Lists.newArrayList( reply.getVms() ) );\n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n  public void fail( Throwable e ) {\n    LOG.debug( LogUtil.header( \"Failing run instances because of: \" + e.getMessage( ) ), e );\n    LOG.debug( LogUtil.subheader( this.getRequest( ).toString( ) ) );\n    LOG.debug( \"-> Release resource tokens for unused resources.\" );\n    try {\n      Clusters.getInstance().lookup( token.getCluster() ).getNodeState().redeemToken( token );\n    } catch ( Exception e2 ) {\n      LOG.debug( e2, e2 );\n    }\n    LOG.debug( \"-> Release network index allocation.\" );\n    NetworkToken net = this.token.getPrimaryNetwork( );\n    Network network = Networks.getInstance( ).lookup( net.getName( ) );\n    for( Integer index : this.token.getPrimaryNetwork( ).getIndexes( ) ) {\n      network.returnNetworkIndex( index );\n    }\n    for( String s : this.token.getAddresses() ) {\n      LOG.debug( \"-> Release addresses from failed vm run allocation: \" + s );\n      AddressManager.releaseAddress( s );\n    }\n    this.parent.getRollback().lazySet( true );    \n  }","id":52658,"modified_method":"@Override\n  public void fail( Throwable e ) {\n    LOG.debug( LogUtil.header( \"Failing run instances because of: \" + e.getMessage( ) ), e );\n    LOG.debug( LogUtil.subheader( this.getRequest( ).toString( ) ) );\n    LOG.debug( \"-> Release resource tokens for unused resources.\" );\n    try {\n      Clusters.getInstance().lookup( token.getCluster() ).getNodeState().redeemToken( token );\n    } catch ( Exception e2 ) {\n      LOG.debug( e2, e2 );\n    }\n    LOG.debug( \"-> Release network index allocation.\" );\n    NetworkToken net = this.token.getPrimaryNetwork( );\n    Network network = Networks.getInstance( ).lookup( net.getName( ) );\n    for( Integer index : this.token.getPrimaryNetwork( ).getIndexes( ) ) {\n      network.returnNetworkIndex( index );\n    }\n    for( String s : this.token.getAddresses() ) {\n      LOG.debug( \"-> Release addresses from failed vm run allocation: \" + s );\n      AddressUtil.releaseAddress( s );\n    }\n    this.parent.getRollback().lazySet( true );    \n  }","commit_id":"3dfe1be9d64000d49de2d8943221ce19e4de6606","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private static void returnPublicAddress( final VmInstance vm ) {\n    try {\n      Address address = Addresses.getInstance( ).lookup( vm.getNetworkConfig( ).getIgnoredPublicIp( ) );\n      if(vm.getNetworkConfig( ).getIpAddress( ).equals( address.getInstanceAddress( ) ) ) {\n        if ( address.isSystemAllocated( ) ) {\n          AddressUtil.releaseAddress( address );\n        } else {\n          try {\n            if ( address.isAssigned( ) ) {\n              AddressUtil.unassignAddressFromVm( address, vm );\n            }\n          } catch ( Throwable e ) {\n            LOG.debug( e, e );\n          }\n        }\n        \n      }\n    } catch ( NoSuchElementException e1 ) {\n      LOG.debug( e1, e1 );\n    }\n  }","id":52659,"modified_method":"private static void returnPublicAddress( final VmInstance vm ) {\n    try {\n      LOG.debug( EventRecord.caller( SystemState.class, EventType.VM_TERMINATING, vm.getInstanceId( ) ) );\n      Address address = Addresses.getInstance( ).lookup( vm.getNetworkConfig( ).getIgnoredPublicIp( ) );\n      if(vm.getNetworkConfig( ).getIpAddress( ).equals( address.getInstanceAddress( ) ) ) {\n        if ( address.isSystemAllocated( ) ) {\n          LOG.debug( EventRecord.caller( SystemState.class, EventType.VM_TERMINATING, \"SYSTEM_ADDRESS\", address.toString( ) ) );\n          AddressUtil.releaseAddress( address );\n        } else {\n          try {\n            if ( address.isAssigned( ) ) {\n              LOG.debug( EventRecord.caller( SystemState.class, EventType.VM_TERMINATING, \"USER_ADDRESS\", address.toString( ) ) );\n              AddressUtil.unassignAddressFromVm( address, vm );\n            }\n          } catch ( Throwable e ) {\n            LOG.debug( e, e );\n          }\n        }\n        \n      }\n    } catch ( NoSuchElementException e1 ) {\n      LOG.debug( e1, e1 );\n    }\n  }","commit_id":"86441aa47aa59a17a848af6be6572271e890a7c8","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static TerminateInstancesResponseType handle( TerminateInstancesType request ) throws Exception {\n    TerminateInstancesResponseType reply = ( TerminateInstancesResponseType ) request.getReply( );\n    reply.set_return( true );\n    \n    for ( String instanceId : request.getInstancesSet( ) ) {\n      try {\n        VmInstance v = VmInstances.getInstance( ).lookup( instanceId );\n        if ( request.isAdministrator( ) || v.getOwnerId( ).equals( request.getUserId( ) ) ) {\n          reply.getInstancesSet( ).add(\n                                        new TerminateInstancesItemType( v.getInstanceId( ), v.getState( ).getCode( ),\n                                          v.getState( ).getName( ), VmState.SHUTTING_DOWN.getCode( ),\n                                          VmState.SHUTTING_DOWN.getName( ) ) );\n          v.setState( VmState.SHUTTING_DOWN );\n          v.resetStopWatch( );\n          SystemState.returnPublicAddress( v );\n          SystemState.returnNetworkIndex( v );\n          SystemState.cleanUp( v );\n        }\n      } catch ( NoSuchElementException e ) {\n        try {\n          VmInstance v = VmInstances.getInstance( ).lookupDisabled( instanceId );\n          v.setState( VmState.BURIED );\n        } catch ( NoSuchElementException e1 ) {\n          //no such instance.\n        }\n      }\n    }\n    return reply;\n  }","id":52660,"modified_method":"public static TerminateInstancesResponseType handle( TerminateInstancesType request ) throws Exception {\n    TerminateInstancesResponseType reply = ( TerminateInstancesResponseType ) request.getReply( );\n    reply.set_return( true );\n    \n    for ( String instanceId : request.getInstancesSet( ) ) {\n      try {\n        VmInstance v = VmInstances.getInstance( ).lookup( instanceId );\n        if ( request.isAdministrator( ) || v.getOwnerId( ).equals( request.getUserId( ) ) ) {\n          reply.getInstancesSet( ).add(\n                                        new TerminateInstancesItemType( v.getInstanceId( ), v.getState( ).getCode( ),\n                                          v.getState( ).getName( ), VmState.SHUTTING_DOWN.getCode( ),\n                                          VmState.SHUTTING_DOWN.getName( ) ) );\n          v.setState( VmState.SHUTTING_DOWN );\n          v.resetStopWatch( );\n          SystemState.returnNetworkIndex( v );\n          SystemState.returnPublicAddress( v );\n          SystemState.cleanUp( v );\n        }\n      } catch ( NoSuchElementException e ) {\n        try {\n          VmInstance v = VmInstances.getInstance( ).lookupDisabled( instanceId );\n          v.setState( VmState.BURIED );\n        } catch ( NoSuchElementException e1 ) {\n          //no such instance.\n        }\n      }\n    }\n    return reply;\n  }","commit_id":"86441aa47aa59a17a848af6be6572271e890a7c8","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private static void returnNetworkIndex( final VmInstance vm ) {\n    try {\n      Networks.getInstance( ).lookup( vm.getNetworkNames( ).get( 0 ) ).returnNetworkIndex( vm.getNetworkIndex( ) );\n    } catch ( NoSuchElementException e1 ) {\n      LOG.debug( e1, e1 );\n    }\n  }","id":52661,"modified_method":"private static void returnNetworkIndex( final VmInstance vm ) {\n    try {\n      LOG.debug( EventRecord.caller( SystemState.class, EventType.VM_TERMINATING, \"NETWORK_INDEX\", vm.getNetworkNames( ).get( 0 ), Integer.toString( vm.getNetworkIndex( ) ) ) );\n      Networks.getInstance( ).lookup( vm.getNetworkNames( ).get( 0 ) ).returnNetworkIndex( vm.getNetworkIndex( ) );\n    } catch ( NoSuchElementException e1 ) {\n      LOG.debug( e1, e1 );\n    }\n  }","commit_id":"86441aa47aa59a17a848af6be6572271e890a7c8","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"protected JwtClaims createJwtAccessToken(ServerAccessToken at) {\n        JwtClaims claims = new JwtClaims();\n        claims.setTokenId(at.getTokenKey());\n        claims.setAudience(at.getClient().getClientId());\n        claims.setIssuedAt(at.getIssuedAt());\n        if (at.getExpiresIn() > 0) {\n            claims.setExpiryTime(at.getIssuedAt() + at.getExpiresIn());\n        }\n        UserSubject userSubject = at.getSubject();\n        if (userSubject != null) {\n            if (userSubject.getId() != null) {\n                claims.setSubject(userSubject.getId());\n                claims.setClaim(\"preferred_username\", userSubject.getLogin());\n            } else {\n                claims.setSubject(userSubject.getLogin());\n            }\n            \n        }\n        if (at.getIssuer() != null) {\n            claims.setIssuer(at.getIssuer());\n        }\n        if (!at.getScopes().isEmpty()) {\n            claims.setClaim(OAuthConstants.SCOPE, \n                            OAuthUtils.convertPermissionsToScopeList(at.getScopes()));\n        }\n        // OAuth2 resource indicators (resource server audience)\n        if (!at.getAudiences().isEmpty()) {\n            List<String> resourceAudiences = at.getAudiences();\n            claims.setClaim(OAuthConstants.RESOURCE_INDICATOR, \n                            resourceAudiences.size() == 1 ? resourceAudiences.get(0) : resourceAudiences);\n        }\n        if (!at.getExtraProperties().isEmpty()) {\n            claims.setClaim(\"extra_properties\", at.getExtraProperties());\n        }\n        // Can be used to check at RS/etc which grant was used to get this token issued\n        if (at.getGrantType() != null) {\n            claims.setClaim(OAuthConstants.GRANT_TYPE, at.getGrantType());\n        }\n        // Can be used to check the original code grant value which was removed from the storage\n        // (and is no longer valid) when this token was issued; relevant only if the authorization\n        // code flow was used\n        if (at.getGrantCode() != null) {\n            claims.setClaim(OAuthConstants.AUTHORIZATION_CODE_GRANT, at.getGrantCode());\n        }\n        // Can be used to link the clients (especially public ones) to this token\n        // to have a knowledge which client instance is using this token - might be handy at the RS/etc\n        if (at.getClientCodeVerifier() != null) {\n            claims.setClaim(OAuthConstants.AUTHORIZATION_CODE_VERIFIER, at.getClientCodeVerifier());\n        }\n        // ServerAccessToken 'nonce' property, if available, can be ignored for the purpose for persisting it\n        // further as a JWT claim - as it is only used once by (OIDC) IdTokenResponseFilter\n        // to set IdToken nonce property with the filter having an access to the current ServerAccessToken instance\n        return claims;\n    }","id":52662,"modified_method":"protected JwtClaims createJwtAccessToken(ServerAccessToken at) {\n        JwtClaims claims = new JwtClaims();\n        claims.setTokenId(at.getTokenKey());\n        claims.setClaim(OAuthConstants.CLIENT_ID, at.getClient().getClientId());\n        claims.setIssuedAt(at.getIssuedAt());\n        if (at.getExpiresIn() > 0) {\n            claims.setExpiryTime(at.getIssuedAt() + at.getExpiresIn());\n        }\n        UserSubject userSubject = at.getSubject();\n        if (userSubject != null) {\n            if (userSubject.getId() != null) {\n                claims.setSubject(userSubject.getId());\n            }\n            // to be consistent with the token introspection response\n            claims.setClaim(\"username\", userSubject.getLogin());\n        }\n        if (at.getIssuer() != null) {\n            claims.setIssuer(at.getIssuer());\n        }\n        if (!at.getScopes().isEmpty()) {\n            claims.setClaim(OAuthConstants.SCOPE, \n                            OAuthUtils.convertPermissionsToScopeList(at.getScopes()));\n        }\n        // OAuth2 resource indicators (resource server audience)\n        if (!at.getAudiences().isEmpty()) {\n            List<String> resourceAudiences = at.getAudiences();\n            if (resourceAudiences.size() == 1) {\n                claims.setAudience(resourceAudiences.get(0));\n            } else {\n                claims.setAudiences(resourceAudiences);\n            }\n        }\n        if (!at.getExtraProperties().isEmpty()) {\n            claims.setClaim(\"extra_properties\", at.getExtraProperties());\n        }\n        // Can be used to check at RS/etc which grant was used to get this token issued\n        if (at.getGrantType() != null) {\n            claims.setClaim(OAuthConstants.GRANT_TYPE, at.getGrantType());\n        }\n        // Can be used to check the original code grant value which was removed from the storage\n        // (and is no longer valid) when this token was issued; relevant only if the authorization\n        // code flow was used\n        if (at.getGrantCode() != null) {\n            claims.setClaim(OAuthConstants.AUTHORIZATION_CODE_GRANT, at.getGrantCode());\n        }\n        // Can be used to link the clients (especially public ones) to this token\n        // to have a knowledge which client instance is using this token - might be handy at the RS/etc\n        if (at.getClientCodeVerifier() != null) {\n            claims.setClaim(OAuthConstants.AUTHORIZATION_CODE_VERIFIER, at.getClientCodeVerifier());\n        }\n        // ServerAccessToken 'nonce' property, if available, can be ignored for the purpose for persisting it\n        // further as a JWT claim - as it is only used once by (OIDC) IdTokenResponseFilter\n        // to set IdToken nonce property with the filter having an access to the current ServerAccessToken instance\n        return claims;\n    }","commit_id":"b69f76c6a43376f85c4b3bc5135b58f717463e8f","url":"https://github.com/apache/cxf"},{"original_method":"public static ServerAccessToken createAccessTokenFromJwt(JoseJwtConsumer consumer, \n                                                             String jose,\n                                                             ClientRegistrationProvider clientProvider) {\n        JwtClaims claims = consumer.getJwtToken(jose).getClaims();\n       \n        Client c = clientProvider.getClient(claims.getStringProperty(JwtConstants.CLAIM_AUDIENCE));\n        long issuedAt = claims.getLongProperty(JwtConstants.CLAIM_ISSUED_AT);\n        long lifetime = claims.getLongProperty(JwtConstants.CLAIM_EXPIRY) - issuedAt;\n        BearerAccessToken at = new BearerAccessToken(c, jose, lifetime, issuedAt);\n       \n        Object resourceAud = claims.getClaim(OAuthConstants.RESOURCE_INDICATOR);\n        if (resourceAud != null) {\n            List<String> auds = null;\n            if (resourceAud instanceof List) {\n                auds = CastUtils.cast((List<?>)resourceAud);\n            } else {\n                auds = Collections.singletonList((String)resourceAud);\n            } \n            at.setAudiences(auds);\n        }\n        String issuer = claims.getStringProperty(JwtConstants.CLAIM_ISSUER);\n        if (issuer != null) {\n            at.setIssuer(issuer);\n        }\n        Object scope = claims.getClaim(OAuthConstants.SCOPE);\n        if (scope != null) {\n            String[] scopes = scope instanceof String \n                ? scope.toString().split(\" \") : CastUtils.cast((List<?>)scope).toArray(new String[]{});\n            List<OAuthPermission> perms = new LinkedList<OAuthPermission>();\n            for (String s : scopes) {    \n                if (!StringUtils.isEmpty(s)) {\n                    perms.add(new OAuthPermission(s.trim()));\n                }\n            }\n            at.setScopes(perms);\n        }\n        String username = claims.getStringProperty(\"preferred_username\");\n        String subject = claims.getStringProperty(JwtConstants.CLAIM_SUBJECT);\n        if (username != null) {\n            UserSubject userSubject = new UserSubject(username);\n            if (subject != null) {\n                userSubject.setId(subject);\n            }\n            at.setSubject(userSubject);\n        } else if (subject != null) {\n            at.setSubject(new UserSubject(subject));\n        }\n       \n        String grantType = claims.getStringProperty(OAuthConstants.GRANT_TYPE);\n        if (grantType != null) {\n            at.setGrantType(grantType);\n        }\n        String grantCode = claims.getStringProperty(OAuthConstants.AUTHORIZATION_CODE_GRANT);\n        if (grantCode != null) {\n            at.setGrantCode(grantCode);\n        }\n        String codeVerifier = claims.getStringProperty(OAuthConstants.AUTHORIZATION_CODE_VERIFIER);\n        if (codeVerifier != null) {\n            at.setClientCodeVerifier(codeVerifier);\n        }\n        \n        Map<String, String> extraProperties = CastUtils.cast((Map<?, ?>)claims.getClaim(\"extra_propertirs\"));\n        if (extraProperties != null) {\n            at.getExtraProperties().putAll(extraProperties);\n        }\n       \n       \n        return at;\n    }","id":52663,"modified_method":"public static ServerAccessToken createAccessTokenFromJwt(JoseJwtConsumer consumer, \n                                                             String jose,\n                                                             ClientRegistrationProvider clientProvider) {\n        JwtClaims claims = consumer.getJwtToken(jose).getClaims();\n       \n        Client c = clientProvider.getClient(claims.getStringProperty(OAuthConstants.CLIENT_ID));\n        long issuedAt = claims.getLongProperty(JwtConstants.CLAIM_ISSUED_AT);\n        long lifetime = claims.getLongProperty(JwtConstants.CLAIM_EXPIRY) - issuedAt;\n        BearerAccessToken at = new BearerAccessToken(c, jose, lifetime, issuedAt);\n       \n        List<String> audiences = claims.getAudiences();\n        if (audiences != null && !audiences.isEmpty()) {\n            at.setAudiences(claims.getAudiences());\n        }\n        \n        String issuer = claims.getStringProperty(JwtConstants.CLAIM_ISSUER);\n        if (issuer != null) {\n            at.setIssuer(issuer);\n        }\n        Object scope = claims.getClaim(OAuthConstants.SCOPE);\n        if (scope != null) {\n            String[] scopes = scope instanceof String \n                ? scope.toString().split(\" \") : CastUtils.cast((List<?>)scope).toArray(new String[]{});\n            List<OAuthPermission> perms = new LinkedList<OAuthPermission>();\n            for (String s : scopes) {    \n                if (!StringUtils.isEmpty(s)) {\n                    perms.add(new OAuthPermission(s.trim()));\n                }\n            }\n            at.setScopes(perms);\n        }\n        String username = claims.getStringProperty(\"username\");\n        String subject = claims.getSubject();\n        if (username != null) {\n            UserSubject userSubject = new UserSubject(username);\n            if (subject != null) {\n                userSubject.setId(subject);\n            }\n            at.setSubject(userSubject);\n        } else if (subject != null) {\n            at.setSubject(new UserSubject(subject));\n        }\n       \n        String grantType = claims.getStringProperty(OAuthConstants.GRANT_TYPE);\n        if (grantType != null) {\n            at.setGrantType(grantType);\n        }\n        String grantCode = claims.getStringProperty(OAuthConstants.AUTHORIZATION_CODE_GRANT);\n        if (grantCode != null) {\n            at.setGrantCode(grantCode);\n        }\n        String codeVerifier = claims.getStringProperty(OAuthConstants.AUTHORIZATION_CODE_VERIFIER);\n        if (codeVerifier != null) {\n            at.setClientCodeVerifier(codeVerifier);\n        }\n        \n        Map<String, String> extraProperties = CastUtils.cast((Map<?, ?>)claims.getClaim(\"extra_propertirs\"));\n        if (extraProperties != null) {\n            at.getExtraProperties().putAll(extraProperties);\n        }\n       \n       \n        return at;\n    }","commit_id":"b69f76c6a43376f85c4b3bc5135b58f717463e8f","url":"https://github.com/apache/cxf"},{"original_method":"private AccessTokenValidation convertClaimsToValidation(JwtClaims claims) {\n        AccessTokenValidation atv = new AccessTokenValidation();\n        atv.setInitialValidationSuccessful(true);\n        if (claims.getAudience() != null) {\n            atv.setClientId(claims.getAudience());\n        }\n        if (claims.getIssuedAt() != null) {\n            atv.setTokenIssuedAt(claims.getIssuedAt());\n        } else {\n            atv.setTokenIssuedAt(new Date().getTime());\n        }\n        if (claims.getExpiryTime() != null) {\n            atv.setTokenLifetime(claims.getExpiryTime() - atv.getTokenIssuedAt());\n        }\n        Object resourceAud = claims.getClaim(OAuthConstants.RESOURCE_INDICATOR);\n        if (resourceAud != null) {\n            List<String> auds = null;\n            if (resourceAud instanceof List) {\n                auds = CastUtils.cast((List<?>)resourceAud);\n            } else {\n                auds = Collections.singletonList((String)resourceAud);\n            } \n            atv.setAudiences(auds);\n        }\n        if (claims.getIssuer() != null) {\n            atv.setTokenIssuer(claims.getIssuer());\n        }\n        Object scope = claims.getClaim(OAuthConstants.SCOPE);\n        if (scope != null) {\n            String[] scopes = scope instanceof String \n                ? scope.toString().split(\" \") : CastUtils.cast((List<?>)scope).toArray(new String[]{});\n            List<OAuthPermission> perms = new LinkedList<OAuthPermission>();\n            for (String s : scopes) {    \n                if (!StringUtils.isEmpty(s)) {\n                    perms.add(new OAuthPermission(s.trim()));\n                }\n            }\n            atv.setTokenScopes(perms);\n        }\n        String username = (String)claims.getClaim(\"preferred_username\");\n        if (username != null) {\n            UserSubject userSubject = new UserSubject(username);\n            if (claims.getSubject() != null) {\n                userSubject.setId(claims.getSubject());\n            }\n            atv.setTokenSubject(userSubject);\n        } else if (claims.getSubject() != null) {\n            atv.setTokenSubject(new UserSubject(claims.getSubject()));\n        }\n        return atv;\n    }","id":52664,"modified_method":"private AccessTokenValidation convertClaimsToValidation(JwtClaims claims) {\n        AccessTokenValidation atv = new AccessTokenValidation();\n        atv.setInitialValidationSuccessful(true);\n        String clientId = claims.getStringProperty(OAuthConstants.CLIENT_ID);\n        if (clientId != null) {\n            atv.setClientId(clientId);\n        }\n        if (claims.getIssuedAt() != null) {\n            atv.setTokenIssuedAt(claims.getIssuedAt());\n        } else {\n            atv.setTokenIssuedAt(new Date().getTime());\n        }\n        if (claims.getExpiryTime() != null) {\n            atv.setTokenLifetime(claims.getExpiryTime() - atv.getTokenIssuedAt());\n        }\n        List<String> audiences = claims.getAudiences();\n        if (audiences != null && !audiences.isEmpty()) {\n            atv.setAudiences(claims.getAudiences());\n        }\n        if (claims.getIssuer() != null) {\n            atv.setTokenIssuer(claims.getIssuer());\n        }\n        Object scope = claims.getClaim(OAuthConstants.SCOPE);\n        if (scope != null) {\n            String[] scopes = scope instanceof String \n                ? scope.toString().split(\" \") : CastUtils.cast((List<?>)scope).toArray(new String[]{});\n            List<OAuthPermission> perms = new LinkedList<OAuthPermission>();\n            for (String s : scopes) {    \n                if (!StringUtils.isEmpty(s)) {\n                    perms.add(new OAuthPermission(s.trim()));\n                }\n            }\n            atv.setTokenScopes(perms);\n        }\n        String username = (String)claims.getClaim(usernameClaim);\n        if (username != null) {\n            UserSubject userSubject = new UserSubject(username);\n            if (claims.getSubject() != null) {\n                userSubject.setId(claims.getSubject());\n            }\n            atv.setTokenSubject(userSubject);\n        } else if (claims.getSubject() != null) {\n            atv.setTokenSubject(new UserSubject(claims.getSubject()));\n        }\n        return atv;\n    }","commit_id":"b69f76c6a43376f85c4b3bc5135b58f717463e8f","url":"https://github.com/apache/cxf"},{"original_method":"private void doTestServiceWithJwtTokenAndScope(String oauthService, String rsAddress) throws Exception {\n        URL busFile = OAuth2JwtFiltersTest.class.getResource(\"client.xml\");\n        \n        // Get Authorization Code\n        \n\n        WebClient oauthClient = WebClient.create(oauthService, OAuth2TestUtils.setupProviders(), \n                                                 \"alice\", \"security\", busFile.toString());\n        // Save the Cookie for the second request...\n        WebClient.getConfig(oauthClient).getRequestContext().put(\n            org.apache.cxf.message.Message.MAINTAIN_SESSION, Boolean.TRUE);\n\n        String code = OAuth2TestUtils.getAuthorizationCode(oauthClient, \"create_book\");\n        assertNotNull(code);\n        \n        // Now get the access token\n        oauthClient = WebClient.create(oauthService, OAuth2TestUtils.setupProviders(), \n                                       \"consumer-id\", \"this-is-a-secret\", busFile.toString());\n        // Save the Cookie for the second request...\n        WebClient.getConfig(oauthClient).getRequestContext().put(\n            org.apache.cxf.message.Message.MAINTAIN_SESSION, Boolean.TRUE);\n\n        ClientAccessToken accessToken = \n            OAuth2TestUtils.getAccessTokenWithAuthorizationCode(oauthClient, code);\n        assertNotNull(accessToken.getTokenKey());\n\n        JwsJwtCompactConsumer jwtConsumer = new JwsJwtCompactConsumer(accessToken.getTokenKey());\n        JwsSignatureVerifier verifier = JwsUtils.loadSignatureVerifier(\n            \"org/apache/cxf/systest/jaxrs/security/alice.rs.properties\", null);\n        assertTrue(jwtConsumer.verifySignatureWith(verifier));\n        JwtClaims claims = jwtConsumer.getJwtClaims();\n        assertEquals(\"consumer-id\", claims.getAudience());\n        assertEquals(\"alice\", claims.getSubject());\n        // Now invoke on the service with the access token\n        WebClient client = WebClient.create(rsAddress, OAuth2TestUtils.setupProviders(),\n                                            busFile.toString());\n        client.header(\"Authorization\", \"Bearer \" + accessToken.getTokenKey());\n        \n        Response response = client.post(new Book(\"book\", 123L));\n        assertEquals(response.getStatus(), 200);\n        \n        Book returnedBook = response.readEntity(Book.class);\n        assertEquals(returnedBook.getName(), \"book\");\n        assertEquals(returnedBook.getId(), 123L);\n    }","id":52665,"modified_method":"private void doTestServiceWithJwtTokenAndScope(String oauthService, String rsAddress) throws Exception {\n        URL busFile = OAuth2JwtFiltersTest.class.getResource(\"client.xml\");\n        \n        // Get Authorization Code\n        \n\n        WebClient oauthClient = WebClient.create(oauthService, OAuth2TestUtils.setupProviders(), \n                                                 \"alice\", \"security\", busFile.toString());\n        // Save the Cookie for the second request...\n        WebClient.getConfig(oauthClient).getRequestContext().put(\n            org.apache.cxf.message.Message.MAINTAIN_SESSION, Boolean.TRUE);\n\n        String code = OAuth2TestUtils.getAuthorizationCode(oauthClient, \"create_book\");\n        assertNotNull(code);\n        \n        // Now get the access token\n        oauthClient = WebClient.create(oauthService, OAuth2TestUtils.setupProviders(), \n                                       \"consumer-id\", \"this-is-a-secret\", busFile.toString());\n        // Save the Cookie for the second request...\n        WebClient.getConfig(oauthClient).getRequestContext().put(\n            org.apache.cxf.message.Message.MAINTAIN_SESSION, Boolean.TRUE);\n\n        ClientAccessToken accessToken = \n            OAuth2TestUtils.getAccessTokenWithAuthorizationCode(oauthClient, code);\n        assertNotNull(accessToken.getTokenKey());\n\n        JwsJwtCompactConsumer jwtConsumer = new JwsJwtCompactConsumer(accessToken.getTokenKey());\n        JwsSignatureVerifier verifier = JwsUtils.loadSignatureVerifier(\n            \"org/apache/cxf/systest/jaxrs/security/alice.rs.properties\", null);\n        assertTrue(jwtConsumer.verifySignatureWith(verifier));\n        JwtClaims claims = jwtConsumer.getJwtClaims();\n        assertEquals(\"consumer-id\", claims.getStringProperty(OAuthConstants.CLIENT_ID));\n        assertEquals(\"alice\", claims.getStringProperty(\"username\"));\n        // Now invoke on the service with the access token\n        WebClient client = WebClient.create(rsAddress, OAuth2TestUtils.setupProviders(),\n                                            busFile.toString());\n        client.header(\"Authorization\", \"Bearer \" + accessToken.getTokenKey());\n        \n        Response response = client.post(new Book(\"book\", 123L));\n        assertEquals(response.getStatus(), 200);\n        \n        Book returnedBook = response.readEntity(Book.class);\n        assertEquals(returnedBook.getName(), \"book\");\n        assertEquals(returnedBook.getId(), 123L);\n    }","commit_id":"b69f76c6a43376f85c4b3bc5135b58f717463e8f","url":"https://github.com/apache/cxf"},{"original_method":"@Nullable\n      @Override\n      public String getLabelText(String pattern) {\n        return \"Create Editor for \" + SPropertyOperations.getString(new ConceptDeclarationAssistantUtil(_context.getNode()).getNotEmptySuperConcept(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\"));\n      }","id":52666,"modified_method":"@Nullable\n      @Override\n      public String getLabelText(String pattern) {\n        return \"Create Editor for \" + SPropertyOperations.getString(ListSequence.fromList(new ConceptDeclarationAssistantUtil(_context.getNode()).getStructurallyEqualSuperConcepts()).last(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\"));\n      }","commit_id":"45fbf68aabb8320b528920f9aff952f795799b5b","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n      public boolean canExecute(@NotNull String pattern) {\n        if (_context.getEditorContext().getEditorPanelManager() == null || SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")) == null || _context.getNode() == MetaAdapterFactory.getConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL, \"jetbrains.mps.lang.core.structure.BaseConcept\").getDeclarationNode()) {\n          return false;\n        }\n\n        Queue<SNode> toCheck = QueueSequence.fromQueueAndArray(new LinkedList<SNode>(), _context.getNode());\n        while (QueueSequence.fromQueue(toCheck).isNotEmpty()) {\n          SNode acd = QueueSequence.fromQueue(toCheck).removeFirstElement();\n          if (acd == SNodeOperations.getNode(\"r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)\", \"1133920641626\")) {\n            continue;\n          }\n          List<SNode> aspects = AbstractConceptDeclaration__BehaviorDescriptor.findConceptAspectCollection_id1n18fON7w20.invoke(acd, LanguageAspect.EDITOR);\n          if (ListSequence.fromList(aspects).any(new IWhereFilter<SNode>() {\n            public boolean accept(SNode a) {\n              return SNodeOperations.isInstanceOf(a, MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xf9845363abL, \"jetbrains.mps.lang.editor.structure.ConceptEditorDeclaration\"));\n            }\n          })) {\n            return false;\n          }\n          QueueSequence.fromQueue(toCheck).addSequence(ListSequence.fromList(AbstractConceptDeclaration__BehaviorDescriptor.getImmediateSuperconcepts_idhMuxyK2.invoke(acd)));\n        }\n        return true;\n      }","id":52667,"modified_method":"@Override\n      public boolean canExecute(@NotNull String pattern) {\n        if (_context.getEditorContext().getEditorPanelManager() == null || SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")) == null || _context.getNode() == MetaAdapterFactory.getConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL, \"jetbrains.mps.lang.core.structure.BaseConcept\").getDeclarationNode()) {\n          return false;\n        }\n        if (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, 0xf979c3ba6cL, \"propertyDeclaration\"))).isNotEmpty() || ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, 0xf979c3ba6bL, \"linkDeclaration\"))).isNotEmpty()) {\n          List<SNode> aspects = AbstractConceptDeclaration__BehaviorDescriptor.findConceptAspectCollection_id1n18fON7w20.invoke(_context.getNode(), LanguageAspect.EDITOR);\n          return !(ListSequence.fromList(aspects).any(new IWhereFilter<SNode>() {\n            public boolean accept(SNode a) {\n              return SNodeOperations.isInstanceOf(a, MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xf9845363abL, \"jetbrains.mps.lang.editor.structure.ConceptEditorDeclaration\"));\n            }\n          }));\n        } else {\n          return ListSequence.fromList(new ConceptDeclarationAssistantUtil(_context.getNode()).getStructurallyEqualSuperConcepts()).isEmpty();\n        }\n      }","commit_id":"45fbf68aabb8320b528920f9aff952f795799b5b","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n      public boolean canExecute(@NotNull String pattern) {\n        if (_context.getEditorContext().getEditorPanelManager() == null || SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")) == null || _context.getNode() == MetaAdapterFactory.getConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL, \"jetbrains.mps.lang.core.structure.BaseConcept\").getDeclarationNode()) {\n          return false;\n        }\n        if (!(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, 0xf979c3ba6cL, \"propertyDeclaration\"))).isEmpty()) || !(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, 0xf979c3ba6bL, \"linkDeclaration\"))).isEmpty())) {\n          return false;\n        }\n\n        Queue<SNode> toCheck = QueueSequence.fromQueueAndArray(new LinkedList<SNode>(), _context.getNode());\n        while (QueueSequence.fromQueue(toCheck).isNotEmpty()) {\n          SNode acd = QueueSequence.fromQueue(toCheck).removeFirstElement();\n          if (acd == SNodeOperations.getNode(\"r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)\", \"1133920641626\")) {\n            continue;\n          }\n          List<SNode> aspects = AbstractConceptDeclaration__BehaviorDescriptor.findConceptAspectCollection_id1n18fON7w20.invoke(acd, LanguageAspect.EDITOR);\n          if (ListSequence.fromList(aspects).any(new IWhereFilter<SNode>() {\n            public boolean accept(SNode a) {\n              return SNodeOperations.isInstanceOf(a, MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xf9845363abL, \"jetbrains.mps.lang.editor.structure.ConceptEditorDeclaration\"));\n            }\n          })) {\n            return false;\n          }\n          QueueSequence.fromQueue(toCheck).addSequence(ListSequence.fromList(AbstractConceptDeclaration__BehaviorDescriptor.getImmediateSuperconcepts_idhMuxyK2.invoke(acd)));\n        }\n\n        return new ConceptDeclarationAssistantUtil(_context.getNode()).getNotEmptySuperConcept() != null;\n      }","id":52668,"modified_method":"@Override\n      public boolean canExecute(@NotNull String pattern) {\n        if (_context.getEditorContext().getEditorPanelManager() == null || SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")) == null || _context.getNode() == MetaAdapterFactory.getConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL, \"jetbrains.mps.lang.core.structure.BaseConcept\").getDeclarationNode()) {\n          return false;\n        }\n        if (ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, 0xf979c3ba6cL, \"propertyDeclaration\"))).isNotEmpty() || ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, 0xf979c3ba6bL, \"linkDeclaration\"))).isNotEmpty()) {\n          return false;\n        }\n\n        List<SNode> superConcepts = new ConceptDeclarationAssistantUtil(_context.getNode()).getStructurallyEqualSuperConcepts();\n        return ListSequence.fromList(superConcepts).isNotEmpty() && ListSequence.fromList(superConcepts).all(new IWhereFilter<SNode>() {\n          public boolean accept(SNode superCocept) {\n            List<SNode> aspects = AbstractConceptDeclaration__BehaviorDescriptor.findConceptAspectCollection_id1n18fON7w20.invoke(superCocept, LanguageAspect.EDITOR);\n            return ListSequence.fromList(aspects).all(new IWhereFilter<SNode>() {\n              public boolean accept(SNode aspect) {\n                return !(SNodeOperations.isInstanceOf(aspect, MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xf9845363abL, \"jetbrains.mps.lang.editor.structure.ConceptEditorDeclaration\")));\n              }\n            });\n          }\n        });\n      }","commit_id":"45fbf68aabb8320b528920f9aff952f795799b5b","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n      public void execute(@NotNull String pattern) {\n        SNode concept = new ConceptDeclarationAssistantUtil(_context.getNode()).getNotEmptySuperConcept();\n        SNode editor = ConceptAspectsHelper.attachNewConceptAspect(LanguageAspect.EDITOR, concept, SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xf9845363abL, \"jetbrains.mps.lang.editor.structure.ConceptEditorDeclaration\")), null));\n        _context.getEditorContext().getEditorPanelManager().openEditor(editor);\n      }","id":52669,"modified_method":"@Override\n      public void execute(@NotNull String pattern) {\n        SNode concept = ListSequence.fromList(new ConceptDeclarationAssistantUtil(_context.getNode()).getStructurallyEqualSuperConcepts()).last();\n        SNode editor = ConceptAspectsHelper.attachNewConceptAspect(LanguageAspect.EDITOR, concept, SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xf9845363abL, \"jetbrains.mps.lang.editor.structure.ConceptEditorDeclaration\")), null));\n        _context.getEditorContext().getEditorPanelManager().openEditor(editor);\n      }","commit_id":"45fbf68aabb8320b528920f9aff952f795799b5b","url":"https://github.com/JetBrains/MPS"},{"original_method":"/**\n   * This method caches compiled stylesheet objects, keyed by the stylesheet's URI.\n   * @param stylesheetURI the URI of the XSLT stylesheet\n   * @return the StlyesheetRoot object\n   * @exception SAXException, ResourceMissingException\n   */\n  public static StylesheetRoot getStylesheetRoot (String stylesheetURI) throws SAXException, ResourceMissingException {\n    // First, check the cache...\n    StylesheetRoot stylesheetRoot = (StylesheetRoot)stylesheetRootCache.get(stylesheetURI);\n    if (stylesheetRoot == null) {\n      // Get the StylesheetRoot and cache it\n      XSLTProcessor processor = XSLTProcessorFactory.getProcessor();\n      stylesheetRoot = processor.processStylesheet(stylesheetURI);\n      if (cacheEnabled) {\n        stylesheetRootCache.put(stylesheetURI, stylesheetRoot);\n        LogService.instance().log(LogService.INFO, \"Caching StylesheetRoot for: \" + stylesheetURI);\n      }\n    }\n    return  stylesheetRoot;\n  }","id":52670,"modified_method":"/**\n   * This method caches compiled stylesheet objects, keyed by the stylesheet's URI.\n   * @param stylesheetURI the URI of the XSLT stylesheet\n   * @return the StlyesheetRoot object\n   * @throws SAXException\n   * @throws ResourceMissingException\n   */\n  public static StylesheetRoot getStylesheetRoot (String stylesheetURI) throws SAXException, ResourceMissingException {\n    // First, check the cache...\n    StylesheetRoot stylesheetRoot = (StylesheetRoot)stylesheetRootCache.get(stylesheetURI);\n    if (stylesheetRoot == null) {\n      // Get the StylesheetRoot and cache it\n      XSLTProcessor processor = XSLTProcessorFactory.getProcessor();\n      stylesheetRoot = processor.processStylesheet(stylesheetURI);\n      if (cacheEnabled) {\n        stylesheetRootCache.put(stylesheetURI, stylesheetRoot);\n        LogService.instance().log(LogService.INFO, \"Caching StylesheetRoot for: \" + stylesheetURI);\n      }\n    }\n    return  stylesheetRoot;\n  }","commit_id":"271ce52d279169bc1e068da11de15577ec6db2a0","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlDoc a DOM object representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a string writer\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param media the media type\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   * @deprecated replaced by {@link #transform(Document, URL, StringWriter, Hashtable, String, String)}\n   */\n  public static void transform (Document xmlDoc, URL sslUri, StringWriter out, Hashtable stylesheetParams, String stylesheetTitle, String media) throws SAXException, IOException, PortalException {\n    XSLTInputSource xmlSource = new XSLTInputSource(xmlDoc);\n    XSLTResultTarget xmlResult = new XSLTResultTarget(out);\n    StylesheetSet set = new StylesheetSet(sslUri.toExternalForm());\n    set.setMediaProps(mediaProps);\n    XSLTProcessor processor = XSLTProcessorFactory.getProcessor(new org.apache.xalan.xpath.xdom.XercesLiaison());\n    StylesheetRoot stylesheetRoot = getStylesheetRoot(set.getStylesheetURI(stylesheetTitle, media));\n    processor.reset();\n    setStylesheetParams(processor, stylesheetParams);\n    stylesheetRoot.process(processor, xmlSource, xmlResult);\n  }","id":52671,"modified_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlDoc a DOM object representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a string writer\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param media the media type\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   * @deprecated replaced by {@link #transform(Document, URL, StringWriter, Hashtable, String, String)}\n   */\n  public static void transform (Document xmlDoc, URL sslUri, StringWriter out, Hashtable stylesheetParams, String stylesheetTitle, String media) throws SAXException, IOException, PortalException {\n    XSLTInputSource xmlSource = new XSLTInputSource(xmlDoc);\n    XSLTResultTarget xmlResult = new XSLTResultTarget(out);\n    StylesheetSet set = getStylesheetSet(sslUri.toExternalForm());\n    set.setMediaProps(mediaProps);\n    XSLTProcessor processor = XSLTProcessorFactory.getProcessor(new org.apache.xalan.xpath.xdom.XercesLiaison());\n    StylesheetRoot stylesheetRoot = getStylesheetRoot(set.getStylesheetURI(stylesheetTitle, media));\n    processor.reset();\n    setStylesheetParams(processor, stylesheetParams);\n    stylesheetRoot.process(processor, xmlSource, xmlResult);\n  }","commit_id":"271ce52d279169bc1e068da11de15577ec6db2a0","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Returns a stylesheet URI.\n   * @param sslUri the stylesheet list file URI\n   * @param browserInfo the browser information\n   * @return the stylesheet URI as a string\n   * @throws org.jasig.portal.PortalException\n   */\n  public static String getStylesheetURI (String sslUri, BrowserInfo browserInfo) throws PortalException {\n    StylesheetSet set = new StylesheetSet(sslUri);\n    String xslUri = set.getStylesheetURI(browserInfo);\n    return  xslUri;\n  }","id":52672,"modified_method":"/**\n   * Returns a stylesheet URI.\n   * @param sslUri the stylesheet list file URI\n   * @param browserInfo the browser information\n   * @return the stylesheet URI as a string\n   * @throws org.jasig.portal.PortalException\n   */\n  public static String getStylesheetURI (String sslUri, BrowserInfo browserInfo) throws PortalException {\n    StylesheetSet set = getStylesheetSet(sslUri);\n    String xslUri = set.getStylesheetURI(browserInfo);\n    return  xslUri;\n  }","commit_id":"271ce52d279169bc1e068da11de15577ec6db2a0","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xml a string representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a document handler\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param media the media type\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   * @deprecated replaced by {@link #transform(String, URL, DocumentHandler, Hashtable, String, BrowserInfo)}\n   */\n  public static void transform (String xml, URL sslUri, DocumentHandler out, Hashtable stylesheetParams, String stylesheetTitle, String media) throws SAXException, IOException, PortalException {\n    XSLTInputSource xmlSource = new XSLTInputSource(new StringReader(xml));\n    XSLTResultTarget xmlResult = new XSLTResultTarget(out);\n    StylesheetSet set = new StylesheetSet(sslUri.toExternalForm());\n    set.setMediaProps(mediaProps);\n    XSLTProcessor processor = XSLTProcessorFactory.getProcessor();\n    StylesheetRoot stylesheetRoot = getStylesheetRoot(set.getStylesheetURI(stylesheetTitle, media));\n    processor.reset();\n    setStylesheetParams(processor, stylesheetParams);\n    stylesheetRoot.process(processor, xmlSource, xmlResult);\n  }","id":52673,"modified_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xml a string representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a document handler\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param media the media type\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   * @deprecated replaced by {@link #transform(String, URL, DocumentHandler, Hashtable, String, BrowserInfo)}\n   */\n  public static void transform (String xml, URL sslUri, DocumentHandler out, Hashtable stylesheetParams, String stylesheetTitle, String media) throws SAXException, IOException, PortalException {\n    XSLTInputSource xmlSource = new XSLTInputSource(new StringReader(xml));\n    XSLTResultTarget xmlResult = new XSLTResultTarget(out);\n    StylesheetSet set = getStylesheetSet(sslUri.toExternalForm());\n    set.setMediaProps(mediaProps);\n    XSLTProcessor processor = XSLTProcessorFactory.getProcessor();\n    StylesheetRoot stylesheetRoot = getStylesheetRoot(set.getStylesheetURI(stylesheetTitle, media));\n    processor.reset();\n    setStylesheetParams(processor, stylesheetParams);\n    stylesheetRoot.process(processor, xmlSource, xmlResult);\n  }","commit_id":"271ce52d279169bc1e068da11de15577ec6db2a0","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlDoc a DOM object representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a document handler\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param browserInfo the browser information\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   */\n  public static void transform (Document xmlDoc, URL sslUri, DocumentHandler out, Hashtable stylesheetParams, String stylesheetTitle, BrowserInfo browserInfo) throws SAXException, IOException, PortalException {\n    XSLTInputSource xmlSource = new XSLTInputSource(xmlDoc);\n    XSLTResultTarget xmlResult = new XSLTResultTarget(out);\n    StylesheetSet set = new StylesheetSet(sslUri.toExternalForm());\n    set.setMediaProps(mediaProps);\n    XSLTProcessor processor = XSLTProcessorFactory.getProcessor(new org.apache.xalan.xpath.xdom.XercesLiaison());\n    StylesheetRoot stylesheetRoot = getStylesheetRoot(set.getStylesheetURI(stylesheetTitle, browserInfo));\n    processor.reset();\n    setStylesheetParams(processor, stylesheetParams);\n    stylesheetRoot.process(processor, xmlSource, xmlResult);\n  }","id":52674,"modified_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlDoc a DOM object representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a document handler\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param browserInfo the browser information\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   */\n  public static void transform (Document xmlDoc, URL sslUri, DocumentHandler out, Hashtable stylesheetParams, String stylesheetTitle, BrowserInfo browserInfo) throws SAXException, IOException, PortalException {\n    XSLTInputSource xmlSource = new XSLTInputSource(xmlDoc);\n    XSLTResultTarget xmlResult = new XSLTResultTarget(out);\n    StylesheetSet set = getStylesheetSet(sslUri.toExternalForm());\n    set.setMediaProps(mediaProps);\n    XSLTProcessor processor = XSLTProcessorFactory.getProcessor(new org.apache.xalan.xpath.xdom.XercesLiaison());\n    StylesheetRoot stylesheetRoot = getStylesheetRoot(set.getStylesheetURI(stylesheetTitle, browserInfo));\n    processor.reset();\n    setStylesheetParams(processor, stylesheetParams);\n    stylesheetRoot.process(processor, xmlSource, xmlResult);\n  }","commit_id":"271ce52d279169bc1e068da11de15577ec6db2a0","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlDoc a DOM object representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a string writer\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param browserInfo the browser information\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   */\n  public static void transform (Document xmlDoc, URL sslUri, StringWriter out, Hashtable stylesheetParams, String stylesheetTitle, BrowserInfo browserInfo) throws SAXException, IOException, PortalException {\n    XSLTInputSource xmlSource = new XSLTInputSource(xmlDoc);\n    XSLTResultTarget xmlResult = new XSLTResultTarget(out);\n    StylesheetSet set = new StylesheetSet(sslUri.toExternalForm());\n    set.setMediaProps(mediaProps);\n    XSLTProcessor processor = XSLTProcessorFactory.getProcessor(new org.apache.xalan.xpath.xdom.XercesLiaison());\n    StylesheetRoot stylesheetRoot = getStylesheetRoot(set.getStylesheetURI(stylesheetTitle, browserInfo));\n    processor.reset();\n    setStylesheetParams(processor, stylesheetParams);\n    stylesheetRoot.process(processor, xmlSource, xmlResult);\n  }","id":52675,"modified_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlDoc a DOM object representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a string writer\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param browserInfo the browser information\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   */\n  public static void transform (Document xmlDoc, URL sslUri, StringWriter out, Hashtable stylesheetParams, String stylesheetTitle, BrowserInfo browserInfo) throws SAXException, IOException, PortalException {\n    XSLTInputSource xmlSource = new XSLTInputSource(xmlDoc);\n    XSLTResultTarget xmlResult = new XSLTResultTarget(out);\n    StylesheetSet set = getStylesheetSet(sslUri.toExternalForm());\n    set.setMediaProps(mediaProps);\n    XSLTProcessor processor = XSLTProcessorFactory.getProcessor(new org.apache.xalan.xpath.xdom.XercesLiaison());\n    StylesheetRoot stylesheetRoot = getStylesheetRoot(set.getStylesheetURI(stylesheetTitle, browserInfo));\n    processor.reset();\n    setStylesheetParams(processor, stylesheetParams);\n    stylesheetRoot.process(processor, xmlSource, xmlResult);\n  }","commit_id":"271ce52d279169bc1e068da11de15577ec6db2a0","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xml a string representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a StringWriter\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param media the media type\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   * @deprecated replaced by {@link #transform(String, URL, StringWriter, Hashtable, String, BrowserInfo)}\n   */\n  public static void transform (String xml, URL sslUri, StringWriter out, Hashtable stylesheetParams, String stylesheetTitle, String media) throws SAXException, IOException, PortalException {\n    XSLTInputSource xmlSource = new XSLTInputSource(new StringReader(xml));\n    XSLTResultTarget xmlResult = new XSLTResultTarget(out);\n    StylesheetSet set = new StylesheetSet(sslUri.toExternalForm());\n    set.setMediaProps(mediaProps);\n    XSLTProcessor processor = XSLTProcessorFactory.getProcessor();\n    StylesheetRoot stylesheetRoot = getStylesheetRoot(set.getStylesheetURI(stylesheetTitle, media));\n    processor.reset();\n    setStylesheetParams(processor, stylesheetParams);\n    // Make sure to generate XML in order to cache it\n    stylesheetRoot.setOutputMethod(\"xml\");\n    // Process the XML/XSLT and store the result in the StringWriter\n    stylesheetRoot.process(processor, xmlSource, xmlResult);\n  }","id":52676,"modified_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xml a string representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a StringWriter\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param media the media type\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   * @deprecated replaced by {@link #transform(String, URL, StringWriter, Hashtable, String, BrowserInfo)}\n   */\n  public static void transform (String xml, URL sslUri, StringWriter out, Hashtable stylesheetParams, String stylesheetTitle, String media) throws SAXException, IOException, PortalException {\n    XSLTInputSource xmlSource = new XSLTInputSource(new StringReader(xml));\n    XSLTResultTarget xmlResult = new XSLTResultTarget(out);\n    StylesheetSet set = getStylesheetSet(sslUri.toExternalForm());\n    set.setMediaProps(mediaProps);\n    XSLTProcessor processor = XSLTProcessorFactory.getProcessor();\n    StylesheetRoot stylesheetRoot = getStylesheetRoot(set.getStylesheetURI(stylesheetTitle, media));\n    processor.reset();\n    setStylesheetParams(processor, stylesheetParams);\n    // Make sure to generate XML in order to cache it\n    stylesheetRoot.setOutputMethod(\"xml\");\n    // Process the XML/XSLT and store the result in the StringWriter\n    stylesheetRoot.process(processor, xmlSource, xmlResult);\n  }","commit_id":"271ce52d279169bc1e068da11de15577ec6db2a0","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xml a string representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a StringWriter\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param browserInfo the browser information\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   */\n  public static void transform (String xml, URL sslUri, StringWriter out, Hashtable stylesheetParams, String stylesheetTitle, BrowserInfo browserInfo) throws SAXException, IOException, PortalException {\n    XSLTInputSource xmlSource = new XSLTInputSource(new StringReader(xml));\n    XSLTResultTarget xmlResult = new XSLTResultTarget(out);\n    StylesheetSet set = new StylesheetSet(sslUri.toExternalForm());\n    set.setMediaProps(mediaProps);\n    XSLTProcessor processor = XSLTProcessorFactory.getProcessor();\n    StylesheetRoot stylesheetRoot = getStylesheetRoot(set.getStylesheetURI(stylesheetTitle, browserInfo));\n    processor.reset();\n    setStylesheetParams(processor, stylesheetParams);\n    // Make sure to generate XML in order to cache it\n    stylesheetRoot.setOutputMethod(\"xml\");\n    // Process the XML/XSLT and store the result in the StringWriter\n    stylesheetRoot.process(processor, xmlSource, xmlResult);\n  }","id":52677,"modified_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xml a string representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a StringWriter\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param browserInfo the browser information\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   */\n  public static void transform (String xml, URL sslUri, StringWriter out, Hashtable stylesheetParams, String stylesheetTitle, BrowserInfo browserInfo) throws SAXException, IOException, PortalException {\n    XSLTInputSource xmlSource = new XSLTInputSource(new StringReader(xml));\n    XSLTResultTarget xmlResult = new XSLTResultTarget(out);\n    StylesheetSet set = getStylesheetSet(sslUri.toExternalForm());\n    set.setMediaProps(mediaProps);\n    XSLTProcessor processor = XSLTProcessorFactory.getProcessor();\n    StylesheetRoot stylesheetRoot = getStylesheetRoot(set.getStylesheetURI(stylesheetTitle, browserInfo));\n    processor.reset();\n    setStylesheetParams(processor, stylesheetParams);\n    // Make sure to generate XML in order to cache it\n    stylesheetRoot.setOutputMethod(\"xml\");\n    // Process the XML/XSLT and store the result in the StringWriter\n    stylesheetRoot.process(processor, xmlSource, xmlResult);\n  }","commit_id":"271ce52d279169bc1e068da11de15577ec6db2a0","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlDoc a DOM object representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a document handler\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param media the media type\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   * @deprecated replaced by {@link #transform(Document, URL, DocumentHandler, Hashtable, String, String)}\n   */\n  public static void transform (Document xmlDoc, URL sslUri, DocumentHandler out, Hashtable stylesheetParams, String stylesheetTitle, String media) throws SAXException, IOException, PortalException {\n    XSLTInputSource xmlSource = new XSLTInputSource(xmlDoc);\n    XSLTResultTarget xmlResult = new XSLTResultTarget(out);\n    StylesheetSet set = new StylesheetSet(sslUri.toExternalForm());\n    set.setMediaProps(mediaProps);\n    XSLTProcessor processor = XSLTProcessorFactory.getProcessor(new org.apache.xalan.xpath.xdom.XercesLiaison());\n    StylesheetRoot stylesheetRoot = getStylesheetRoot(set.getStylesheetURI(stylesheetTitle, media));\n    processor.reset();\n    setStylesheetParams(processor, stylesheetParams);\n    stylesheetRoot.process(processor, xmlSource, xmlResult);\n  }","id":52678,"modified_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlDoc a DOM object representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a document handler\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param media the media type\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   * @deprecated replaced by {@link #transform(Document, URL, DocumentHandler, Hashtable, String, String)}\n   */\n  public static void transform (Document xmlDoc, URL sslUri, DocumentHandler out, Hashtable stylesheetParams, String stylesheetTitle, String media) throws SAXException, IOException, PortalException {\n    XSLTInputSource xmlSource = new XSLTInputSource(xmlDoc);\n    XSLTResultTarget xmlResult = new XSLTResultTarget(out);\n    StylesheetSet set = getStylesheetSet(sslUri.toExternalForm());\n    set.setMediaProps(mediaProps);\n    XSLTProcessor processor = XSLTProcessorFactory.getProcessor(new org.apache.xalan.xpath.xdom.XercesLiaison());\n    StylesheetRoot stylesheetRoot = getStylesheetRoot(set.getStylesheetURI(stylesheetTitle, media));\n    processor.reset();\n    setStylesheetParams(processor, stylesheetParams);\n    stylesheetRoot.process(processor, xmlSource, xmlResult);\n  }","commit_id":"271ce52d279169bc1e068da11de15577ec6db2a0","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xml a string representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a document handler\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param browserInfo the browser information\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   */\n  public static void transform (String xml, URL sslUri, DocumentHandler out, Hashtable stylesheetParams, String stylesheetTitle, BrowserInfo browserInfo) throws SAXException, IOException, PortalException {\n    XSLTInputSource xmlSource = new XSLTInputSource(new StringReader(xml));\n    XSLTResultTarget xmlResult = new XSLTResultTarget(out);\n    StylesheetSet set = new StylesheetSet(sslUri.toExternalForm());\n    set.setMediaProps(mediaProps);\n    XSLTProcessor processor = XSLTProcessorFactory.getProcessor();\n    StylesheetRoot stylesheetRoot = getStylesheetRoot(set.getStylesheetURI(stylesheetTitle, browserInfo));\n    processor.reset();\n    setStylesheetParams(processor, stylesheetParams);\n    stylesheetRoot.process(processor, xmlSource, xmlResult);\n  }","id":52679,"modified_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xml a string representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a document handler\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param browserInfo the browser information\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   */\n  public static void transform (String xml, URL sslUri, DocumentHandler out, Hashtable stylesheetParams, String stylesheetTitle, BrowserInfo browserInfo) throws SAXException, IOException, PortalException {\n    XSLTInputSource xmlSource = new XSLTInputSource(new StringReader(xml));\n    XSLTResultTarget xmlResult = new XSLTResultTarget(out);\n    StylesheetSet set = getStylesheetSet(sslUri.toExternalForm());\n    set.setMediaProps(mediaProps);\n    XSLTProcessor processor = XSLTProcessorFactory.getProcessor();\n    StylesheetRoot stylesheetRoot = getStylesheetRoot(set.getStylesheetURI(stylesheetTitle, browserInfo));\n    processor.reset();\n    setStylesheetParams(processor, stylesheetParams);\n    stylesheetRoot.process(processor, xmlSource, xmlResult);\n  }","commit_id":"271ce52d279169bc1e068da11de15577ec6db2a0","url":"https://github.com/Jasig/uPortal"},{"original_method":"private void sendBeginWikiDocumentLocale(XARFilter proxyFilter, boolean force, XARInputProperties properties)\n        throws WikiStreamException\n    {\n        if (this.sentBeginWikiDocument\n            && !this.sentBeginWikiDocumentLocale\n            && (force || (this.currentDocumentLocale != null && this.currentDocumentLocaleParameters.size() == XARDocumentModel.DOCUMENTLOCALE_PARAMETERS\n                .size()))) {\n            if (!properties.isWithHistory()) {\n                this.currentDocumentLocaleParameters.remove(XWikiWikiDocumentFilter.PARAMETER_JRCSREVISIONS);\n            }\n\n            proxyFilter.beginWikiDocumentLocale(this.currentDocumentLocale, this.currentDocumentLocaleParameters);\n            this.sentBeginWikiDocumentLocale = true;\n        }\n    }","id":52680,"modified_method":"private boolean sendBeginWikiDocumentLocale(XARFilter proxyFilter, boolean force, XARInputProperties properties)\n        throws WikiStreamException\n    {\n        if (this.sentBeginWikiDocument\n            && !this.sentBeginWikiDocumentLocale\n            && (force || (this.currentDocumentLocale != null && this.currentDocumentLocaleParameters.size() == XARDocumentModel.DOCUMENTLOCALE_PARAMETERS\n                .size()))) {\n            if (!properties.isWithHistory()) {\n                this.currentDocumentLocaleParameters.remove(XWikiWikiDocumentFilter.PARAMETER_JRCSREVISIONS);\n            }\n\n            proxyFilter.beginWikiDocumentLocale(this.currentDocumentLocale, this.currentDocumentLocaleParameters);\n            this.sentBeginWikiDocumentLocale = true;\n\n            if (properties.isReferencesOnly()) {\n                return false;\n            }\n        }\n\n        return true;\n    }","commit_id":"46911eb81a6f8a271c72320dce120750a9da3290","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"private void readDocument(XMLStreamReader xmlReader, Object filter, XARFilter proxyFilter,\n        XARInputProperties properties) throws XMLStreamException, WikiStreamException, ParseException, IOException\n    {\n        for (xmlReader.nextTag(); xmlReader.isStartElement(); xmlReader.nextTag()) {\n            String elementName = xmlReader.getLocalName();\n\n            if (elementName.equals(XARAttachmentModel.ELEMENT_ATTACHMENT)) {\n                readAttachment(xmlReader, filter, proxyFilter, properties);\n            } else if (elementName.equals(XARObjectModel.ELEMENT_OBJECT)) {\n                readObject(xmlReader, filter, proxyFilter, properties);\n            } else if (elementName.equals(XARClassModel.ELEMENT_CLASS)) {\n                readClass(xmlReader, filter, proxyFilter, properties);\n            } else {\n                String value = xmlReader.getElementText();\n\n                if (XARDocumentModel.ELEMENT_SPACE.equals(elementName)) {\n                    if (!value.equals(this.currentSpace)) {\n                        if (this.currentSpace != null) {\n                            proxyFilter.endWikiSpace(this.currentSpace, this.currentSpaceParameters);\n                        }\n                        this.currentSpace = value;\n                        proxyFilter.beginWikiSpace(this.currentSpace, this.currentSpaceParameters);\n                    }\n                } else if (XARDocumentModel.ELEMENT_NAME.equals(elementName)) {\n                    this.currentDocument = value;\n                    sendBeginWikiDocument(proxyFilter, false, properties);\n                } else if (XARDocumentModel.ELEMENT_LOCALE.equals(elementName)) {\n                    this.currentDocumentLocale = (Locale) convert(Locale.class, value);\n                    sendBeginWikiDocumentLocale(proxyFilter, false, properties);\n                } else if (XARDocumentModel.ELEMENT_REVISION.equals(elementName)) {\n                    this.currentDocumentRevision = value;\n                    sendBeginWikiDocumentRevision(proxyFilter, false, properties);\n                } else {\n                    EventParameter parameter = XARDocumentModel.DOCUMENT_PARAMETERS.get(elementName);\n\n                    if (parameter != null) {\n                        this.currentDocumentParameters.put(parameter.name, convert(parameter.type, value));\n\n                        sendBeginWikiDocument(proxyFilter, false, properties);\n                    } else {\n                        parameter = XARDocumentModel.DOCUMENTLOCALE_PARAMETERS.get(elementName);\n\n                        if (parameter != null) {\n                            this.currentDocumentLocaleParameters.put(parameter.name, convert(parameter.type, value));\n\n                            sendBeginWikiDocumentLocale(proxyFilter, false, properties);\n                        } else {\n                            parameter = XARDocumentModel.DOCUMENTREVISION_PARAMETERS.get(elementName);\n\n                            if (parameter != null) {\n                                Object objectValue;\n                                if (parameter.type == EntityReference.class) {\n                                    objectValue = this.relativeResolver.resolve(value, EntityType.DOCUMENT);\n                                } else {\n                                    objectValue = convert(parameter.type, value);\n                                }\n                                this.currentDocumentRevisionParameters.put(parameter.name, objectValue);\n\n                                sendBeginWikiDocumentRevision(proxyFilter, false, properties);\n                            } else {\n                                // Unknown property\n                                // TODO: log something ?\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        sendBeginWikiDocument(proxyFilter, true, properties);\n        sendBeginWikiDocumentLocale(proxyFilter, true, properties);\n        sendBeginWikiDocumentRevision(proxyFilter, true, properties);\n\n        sendWikiAttachments(proxyFilter);\n        sendWikiClass(proxyFilter);\n        sendWikiObjects(proxyFilter);\n\n        sendEndWikiDocumentRevision(proxyFilter, properties);\n        sendEndWikiDocumentLocale(proxyFilter, properties);\n        sendEndWikiDocument(proxyFilter, properties);\n    }","id":52681,"modified_method":"private void readDocument(XMLStreamReader xmlReader, Object filter, XARFilter proxyFilter,\n        XARInputProperties properties) throws XMLStreamException, WikiStreamException, ParseException, IOException\n    {\n        for (xmlReader.nextTag(); xmlReader.isStartElement(); xmlReader.nextTag()) {\n            String elementName = xmlReader.getLocalName();\n\n            if (elementName.equals(XARAttachmentModel.ELEMENT_ATTACHMENT)) {\n                readAttachment(xmlReader, filter, proxyFilter, properties);\n            } else if (elementName.equals(XARObjectModel.ELEMENT_OBJECT)) {\n                readObject(xmlReader, filter, proxyFilter, properties);\n            } else if (elementName.equals(XARClassModel.ELEMENT_CLASS)) {\n                readClass(xmlReader, filter, proxyFilter, properties);\n            } else {\n                String value = xmlReader.getElementText();\n\n                if (XARDocumentModel.ELEMENT_SPACE.equals(elementName)) {\n                    if (!value.equals(this.currentSpace)) {\n                        if (this.currentSpace != null) {\n                            proxyFilter.endWikiSpace(this.currentSpace, this.currentSpaceParameters);\n                        }\n                        this.currentSpace = value;\n                        proxyFilter.beginWikiSpace(this.currentSpace, this.currentSpaceParameters);\n                    }\n                } else if (XARDocumentModel.ELEMENT_NAME.equals(elementName)) {\n                    this.currentDocument = value;\n                    sendBeginWikiDocument(proxyFilter, false, properties);\n                } else if (XARDocumentModel.ELEMENT_LOCALE.equals(elementName)) {\n                    this.currentDocumentLocale = (Locale) convert(Locale.class, value);\n                    if (!sendBeginWikiDocumentLocale(proxyFilter, false, properties)) {\n                        sendEndWikiDocumentLocale(proxyFilter, properties);\n                        sendEndWikiDocument(proxyFilter, properties);\n\n                        return;\n                    }\n                } else if (XARDocumentModel.ELEMENT_REVISION.equals(elementName)) {\n                    this.currentDocumentRevision = value;\n                    sendBeginWikiDocumentRevision(proxyFilter, false, properties);\n                } else {\n                    EventParameter parameter = XARDocumentModel.DOCUMENT_PARAMETERS.get(elementName);\n\n                    if (parameter != null) {\n                        this.currentDocumentParameters.put(parameter.name, convert(parameter.type, value));\n\n                        sendBeginWikiDocument(proxyFilter, false, properties);\n                    } else {\n                        parameter = XARDocumentModel.DOCUMENTLOCALE_PARAMETERS.get(elementName);\n\n                        if (parameter != null) {\n                            this.currentDocumentLocaleParameters.put(parameter.name, convert(parameter.type, value));\n\n                            if (!sendBeginWikiDocumentLocale(proxyFilter, false, properties)) {\n                                sendEndWikiDocumentLocale(proxyFilter, properties);\n                                sendEndWikiDocument(proxyFilter, properties);\n\n                                return;\n                            }\n                        } else {\n                            parameter = XARDocumentModel.DOCUMENTREVISION_PARAMETERS.get(elementName);\n\n                            if (parameter != null) {\n                                Object objectValue;\n                                if (parameter.type == EntityReference.class) {\n                                    objectValue = this.relativeResolver.resolve(value, EntityType.DOCUMENT);\n                                } else {\n                                    objectValue = convert(parameter.type, value);\n                                }\n                                this.currentDocumentRevisionParameters.put(parameter.name, objectValue);\n\n                                sendBeginWikiDocumentRevision(proxyFilter, false, properties);\n                            } else {\n                                // Unknown property\n                                // TODO: log something ?\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        sendBeginWikiDocument(proxyFilter, true, properties);\n        if (sendBeginWikiDocumentLocale(proxyFilter, true, properties)) {\n            sendBeginWikiDocumentRevision(proxyFilter, true, properties);\n\n            sendWikiAttachments(proxyFilter);\n            sendWikiClass(proxyFilter);\n            sendWikiObjects(proxyFilter);\n\n            sendEndWikiDocumentRevision(proxyFilter, properties);\n        }\n        sendEndWikiDocumentLocale(proxyFilter, properties);\n        sendEndWikiDocument(proxyFilter, properties);\n    }","commit_id":"46911eb81a6f8a271c72320dce120750a9da3290","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@NotNull\n  List<Trinity<PsiReferenceProvider, ProcessingContext, Double>> getPairsByElement(@NotNull PsiElement element,\n                                                                                   @NotNull PsiReferenceService.Hints hints) {\n    final Class<? extends PsiElement> clazz = element.getClass();\n    List<Trinity<PsiReferenceProvider, ProcessingContext, Double>> ret = null;\n    List<Class> classes = myKnownSupers.get(clazz);\n    //noinspection ForLoopReplaceableByForEach\n    for (int i = 0; i < classes.size(); i++) {\n      Class aClass = classes.get(i);\n      final SimpleProviderBinding simpleBinding = myBindingsMap.get(aClass);\n      final NamedObjectProviderBinding namedBinding = myNamedBindingsMap.get(aClass);\n      if (simpleBinding == null && namedBinding == null) continue;\n\n      if (ret == null) ret = new SmartList<Trinity<PsiReferenceProvider, ProcessingContext, Double>>();\n      if (simpleBinding != null) {\n        simpleBinding.addAcceptableReferenceProviders(element, ret, hints);\n      }\n      if (namedBinding != null) {\n        namedBinding.addAcceptableReferenceProviders(element, ret, hints);\n      }\n    }\n    return ret == null ? Collections.<Trinity<PsiReferenceProvider, ProcessingContext, Double>>emptyList() : ret;\n  }","id":52682,"modified_method":"@NotNull\n  List<Trinity<PsiReferenceProvider, ProcessingContext, Double>> getPairsByElement(@NotNull PsiElement element,\n                                                                                   @NotNull PsiReferenceService.Hints hints) {\n    final Class<? extends PsiElement> clazz = element.getClass();\n    List<Trinity<PsiReferenceProvider, ProcessingContext, Double>> ret = null;\n\n    for (Class aClass : myKnownSupers.get(clazz)) {\n      final SimpleProviderBinding simpleBinding = myBindingsMap.get(aClass);\n      final NamedObjectProviderBinding namedBinding = myNamedBindingsMap.get(aClass);\n      if (simpleBinding == null && namedBinding == null) continue;\n\n      if (ret == null) ret = new SmartList<Trinity<PsiReferenceProvider, ProcessingContext, Double>>();\n      if (simpleBinding != null) {\n        simpleBinding.addAcceptableReferenceProviders(element, ret, hints);\n      }\n      if (namedBinding != null) {\n        namedBinding.addAcceptableReferenceProviders(element, ret, hints);\n      }\n    }\n    return ret == null ? Collections.<Trinity<PsiReferenceProvider, ProcessingContext, Double>>emptyList() : ret;\n  }","commit_id":"26c75501534e9734873cadd1374f61b6640acf6d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static PsiReference[] getReferencesFromProviders(PsiElement context, @NotNull PsiReferenceService.Hints hints) {\n    ProgressManager.checkCanceled();\n    assert context.isValid() : \"Invalid context: \" + context;\n\n    ReferenceProvidersRegistry registry = getInstance();\n    PsiReferenceRegistrarImpl registrar = registry.getRegistrar(context.getLanguage());\n    SmartList<Trinity<PsiReferenceProvider, ProcessingContext, Double>> providers = new SmartList<Trinity<PsiReferenceProvider, ProcessingContext, Double>>();\n    providers.addAll(registrar.getPairsByElement(context, hints));\n    providers.addAll(registry.getRegistrar(Language.ANY).getPairsByElement(context, hints));\n    if (providers.isEmpty()) {\n      return PsiReference.EMPTY_ARRAY;\n    }\n\n    if (providers.size() == 1) {\n      final Trinity<PsiReferenceProvider, ProcessingContext, Double> firstProvider = providers.get(0);\n      return firstProvider.getFirst().getReferencesByElement(context, firstProvider.getSecond());\n    }\n\n    providers.sort(PRIORITY_COMPARATOR);\n\n    List<PsiReference> result = new ArrayList<PsiReference>();\n    final double maxPriority = providers.get(0).getThird();\n    next:\n    for (Trinity<PsiReferenceProvider, ProcessingContext, Double> trinity : providers) {\n      final PsiReference[] refs;\n      try {\n        refs = trinity.getFirst().getReferencesByElement(context, trinity.getSecond());\n      }\n      catch(IndexNotReadyException ex) {\n        continue;\n      }\n      if (trinity.getThird().doubleValue() != maxPriority) {\n        for (PsiReference ref : refs) {\n          for (PsiReference reference : result) {\n            if (ref != null && ReferenceRange.containsRangeInElement(reference, ref.getRangeInElement())) {\n              continue next;\n            }\n          }\n        }\n      }\n      for (PsiReference ref : refs) {\n        if (ref != null) {\n          result.add(ref);\n        }\n      }\n    }\n    return result.isEmpty() ? PsiReference.EMPTY_ARRAY : ContainerUtil.toArray(result, new PsiReference[result.size()]);\n  }","id":52683,"modified_method":"public static PsiReference[] getReferencesFromProviders(PsiElement context, @NotNull PsiReferenceService.Hints hints) {\n    ProgressManager.checkCanceled();\n    assert context.isValid() : \"Invalid context: \" + context;\n\n    ReferenceProvidersRegistry registry = getInstance();\n\n    List<Trinity<PsiReferenceProvider, ProcessingContext, Double>> providersForContextLanguage;\n    providersForContextLanguage = registry.getRegistrar(context.getLanguage()).getPairsByElement(context, hints);\n\n    List<Trinity<PsiReferenceProvider, ProcessingContext, Double>> providersForAllLanguages;\n    providersForAllLanguages = registry.getRegistrar(Language.ANY).getPairsByElement(context, hints);\n\n    int providersCount = providersForContextLanguage.size() + providersForAllLanguages.size();\n\n    if (providersCount == 0) {\n      return PsiReference.EMPTY_ARRAY;\n    }\n\n    if (providersCount == 1) {\n      final Trinity<PsiReferenceProvider, ProcessingContext, Double> firstProvider =\n        (providersForAllLanguages.isEmpty() ? providersForContextLanguage : providersForAllLanguages).get(0);\n      return firstProvider.getFirst().getReferencesByElement(context, firstProvider.getSecond());\n    }\n\n    Trinity<PsiReferenceProvider, ProcessingContext, Double>[] providers = new Trinity[providersCount];\n\n    int i = 0;\n    for (Trinity<PsiReferenceProvider, ProcessingContext, Double> provider : providersForContextLanguage) {\n      providers[i++] = provider;\n    }\n    for (Trinity<PsiReferenceProvider, ProcessingContext, Double> provider : providersForAllLanguages) {\n      providers[i++] = provider;\n    }\n\n    Arrays.sort(providers, PRIORITY_COMPARATOR);\n\n    List<PsiReference> result = new ArrayList<PsiReference>();\n    final double maxPriority = providers[0].getThird();\n    next:\n    for (Trinity<PsiReferenceProvider, ProcessingContext, Double> trinity : providers) {\n      final PsiReference[] refs;\n      try {\n        refs = trinity.getFirst().getReferencesByElement(context, trinity.getSecond());\n      }\n      catch(IndexNotReadyException ex) {\n        continue;\n      }\n      if (trinity.getThird().doubleValue() != maxPriority) {\n        for (PsiReference ref : refs) {\n          for (PsiReference reference : result) {\n            if (ref != null && ReferenceRange.containsRangeInElement(reference, ref.getRangeInElement())) {\n              continue next;\n            }\n          }\n        }\n      }\n      for (PsiReference ref : refs) {\n        if (ref != null) {\n          result.add(ref);\n        }\n      }\n    }\n    return result.isEmpty() ? PsiReference.EMPTY_ARRAY : ContainerUtil.toArray(result, new PsiReference[result.size()]);\n  }","commit_id":"26c75501534e9734873cadd1374f61b6640acf6d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private double updateTotalProgress(Operation currentOperation) {\n    // marking all operations before this one as completed\n    for (Operation op : Operation.values()) {\n      if (currentOperation.compareTo(op) > 0) {\n        myOperationsProgress.put(op, 1.0);\n      }\n    }\n    // counting progress\n    double totalProgress = 0;\n    for (Map.Entry<Operation, Double> progressEntry : myOperationsProgress.entrySet()) {\n      totalProgress += progressEntry.getKey().myFractionInTotal * progressEntry.getValue();\n    }\n    return totalProgress;\n  }","id":52684,"modified_method":"private double updateTotalProgress(Operation currentOperation) {\n    // marking all operations before this one as completed\n    for (Operation op : Operation.values()) {\n      if (currentOperation.compareTo(op) > 0) {\n        myOperationsProgress.put(op, 1.0);\n      }\n    }\n    // counting progress\n    final double[] totalProgress = new double[1];\n    myOperationsProgress.forEachEntry(new TObjectDoubleProcedure<Operation>() {\n      @Override\n      public boolean execute(Operation operation, double progress) {\n        totalProgress[0] += operation.myFractionInTotal * progress;\n        return true;\n      }\n    });\n    return totalProgress[0];\n  }","commit_id":"7f337960833e39bf42fe923aa24e0ed540cbadbd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void setTransferableOptions(Map<String, String> options) {\n    String o = options.get(BACKGROUND_VISIBLE_OPTION);\n    if (o != null) {\n      backgroundVisible = Boolean.valueOf(o);\n    }\n\n    o = options.get(GRID_VISIBLE_OPTION);\n    if (o != null) {\n      gridVisible = Boolean.valueOf(o);\n    }\n\n    o = options.get(ZOOM_FACTOR_OPTION);\n    if (o != null) {\n      zoomFactor = Double.valueOf(o);\n    }\n  }","id":52685,"modified_method":"@Override\n  public void setTransferableOptions(Map<String, String> options) {\n    String o = options.get(BACKGROUND_VISIBLE_OPTION);\n    if (o != null) {\n      backgroundVisible = Boolean.valueOf(o);\n    }\n\n    o = options.get(GRID_VISIBLE_OPTION);\n    if (o != null) {\n      gridVisible = Boolean.valueOf(o);\n    }\n\n    o = options.get(ZOOM_FACTOR_OPTION);\n    if (o != null) {\n      zoomFactor = Double.parseDouble(o);\n    }\n  }","commit_id":"7f337960833e39bf42fe923aa24e0ed540cbadbd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void unregisterProvider(final Provider provider) {\n    for (final CopyOnWriteArrayList<Trinity<Provider, ElementPattern, Double>> list : myNamesToProvidersMap.values()) {\n      for (final Trinity<Provider, ElementPattern, Double> trinity : new ArrayList<Trinity<Provider, ElementPattern, Double>>(list)) {\n        if (trinity.first.equals(provider)) {\n          list.remove(trinity);\n        }\n      }\n    }\n    for (final CopyOnWriteArrayList<Trinity<Provider, ElementPattern, Double>> list : myNamesToProvidersMapInsensitive.values()) {\n      for (final Trinity<Provider, ElementPattern, Double> trinity : new ArrayList<Trinity<Provider, ElementPattern, Double>>(list)) {\n        if (trinity.first.equals(provider)) {\n          list.remove(trinity);\n        }\n      }\n    }\n  }","id":52686,"modified_method":"@Override\n  public void unregisterProvider(@NotNull final Provider provider) {\n    for (final List<ProviderInfo<Provider, ElementPattern>> list : myNamesToProvidersMap.values()) {\n      for (final ProviderInfo<Provider, ElementPattern> trinity : new ArrayList<ProviderInfo<Provider,ElementPattern>>(list)) {\n        if (trinity.provider.equals(provider)) {\n          list.remove(trinity);\n        }\n      }\n    }\n    for (final List<ProviderInfo<Provider, ElementPattern>> list : myNamesToProvidersMapInsensitive.values()) {\n      for (final ProviderInfo<Provider, ElementPattern> trinity : new ArrayList<ProviderInfo<Provider,ElementPattern>>(list)) {\n        if (trinity.provider.equals(provider)) {\n          list.remove(trinity);\n        }\n      }\n    }\n  }","commit_id":"7f337960833e39bf42fe923aa24e0ed540cbadbd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void addAcceptableReferenceProviders(@NotNull PsiElement position, @NotNull List list,\n                                              PsiReferenceService.Hints hints) {\n    String name = getName(position);\n    if (name != null) {\n      addMatchingProviders(position, myNamesToProvidersMap.get(name), list, hints);\n      addMatchingProviders(position, myNamesToProvidersMapInsensitive.get(name.toLowerCase()), list, hints);\n    }\n  }","id":52687,"modified_method":"@Override\n  public void addAcceptableReferenceProviders(@NotNull PsiElement position,\n                                              @NotNull List<ProviderInfo<Provider, ProcessingContext>> list,\n                                              @NotNull PsiReferenceService.Hints hints) {\n    String name = getName(position);\n    if (name != null) {\n      addMatchingProviders(position, myNamesToProvidersMap.get(name), list, hints);\n      addMatchingProviders(position, myNamesToProvidersMapInsensitive.get(name.toLowerCase()), list, hints);\n    }\n  }","commit_id":"7f337960833e39bf42fe923aa24e0ed540cbadbd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static <T> void addMatchingProviders(final PsiElement position, @Nullable final List<Trinity<T, ElementPattern, Double>> providerList,\n                                                                  final List<Trinity<T, ProcessingContext, Double>> ret,\n                                                                  PsiReferenceService.Hints hints) {\n    if (providerList == null) return;\n\n    for(Trinity<T,ElementPattern,Double> trinity:providerList) {\n      if (hints != PsiReferenceService.Hints.NO_HINTS && !((PsiReferenceProvider)trinity.first).acceptsHints(position, hints)) {\n        continue;\n      }\n\n      final ProcessingContext context = new ProcessingContext();\n      if (hints != PsiReferenceService.Hints.NO_HINTS) {\n        context.put(PsiReferenceService.HINTS, hints);\n      }\n      boolean suitable = false;\n      try {\n        suitable = trinity.second.accepts(position, context);\n      }\n      catch (IndexNotReadyException ignored) {\n      }\n      if (suitable) {\n        ret.add(Trinity.create(trinity.first, context, trinity.third));\n      }\n    }\n  }","id":52688,"modified_method":"private void addMatchingProviders(final PsiElement position,\n                                    @Nullable final List<ProviderInfo<Provider, ElementPattern>> providerList,\n                                    @NotNull List<ProviderInfo<Provider, ProcessingContext>> ret,\n                                    PsiReferenceService.Hints hints) {\n    if (providerList == null) return;\n\n    for(ProviderInfo<Provider, ElementPattern> trinity:providerList) {\n      if (hints != PsiReferenceService.Hints.NO_HINTS && !((PsiReferenceProvider)trinity.provider).acceptsHints(position, hints)) {\n        continue;\n      }\n\n      final ProcessingContext context = new ProcessingContext();\n      if (hints != PsiReferenceService.Hints.NO_HINTS) {\n        context.put(PsiReferenceService.HINTS, hints);\n      }\n      boolean suitable = false;\n      try {\n        suitable = trinity.processingContext.accepts(position, context);\n      }\n      catch (IndexNotReadyException ignored) {\n      }\n      if (suitable) {\n        ret.add(new ProviderInfo<Provider,ProcessingContext>(trinity.provider, context, trinity.priority));\n      }\n    }\n  }","commit_id":"7f337960833e39bf42fe923aa24e0ed540cbadbd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void registerProvider(@NonNls String[] names, ElementPattern filter, boolean caseSensitive, Provider provider, final double priority) {\n    final ConcurrentMap<String, CopyOnWriteArrayList<Trinity<Provider, ElementPattern,Double>>> map = caseSensitive ? myNamesToProvidersMap : myNamesToProvidersMapInsensitive;\n\n    for (final String attributeName : names) {\n      CopyOnWriteArrayList<Trinity<Provider, ElementPattern,Double>> psiReferenceProviders = map.get(attributeName);\n\n      if (psiReferenceProviders == null) {\n        psiReferenceProviders = ConcurrencyUtil.cacheOrGet(map, caseSensitive ? attributeName : attributeName.toLowerCase(), ContainerUtil.<Trinity<Provider, ElementPattern, Double>>createEmptyCOWList());\n      }\n\n      psiReferenceProviders.add(new Trinity<Provider, ElementPattern,Double>(provider, filter, priority));\n    }\n  }","id":52689,"modified_method":"public void registerProvider(@NonNls @NotNull String[] names,\n                               @NotNull ElementPattern filter,\n                               boolean caseSensitive,\n                               @NotNull Provider provider,\n                               final double priority) {\n    final ConcurrentMap<String, List<ProviderInfo<Provider, ElementPattern>>> map = caseSensitive ? myNamesToProvidersMap : myNamesToProvidersMapInsensitive;\n\n    for (final String attributeName : names) {\n      List<ProviderInfo<Provider, ElementPattern>> psiReferenceProviders = map.get(attributeName);\n\n      if (psiReferenceProviders == null) {\n        String key = caseSensitive ? attributeName : attributeName.toLowerCase();\n        psiReferenceProviders = ConcurrencyUtil.cacheOrGet(map, key, ContainerUtil.<ProviderInfo<Provider,ElementPattern>>createEmptyCOWList());\n      }\n\n      psiReferenceProviders.add(new ProviderInfo<Provider,ElementPattern>(provider, filter, priority));\n    }\n  }","commit_id":"7f337960833e39bf42fe923aa24e0ed540cbadbd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void registerNamedReferenceProvider(final String[] names, final PsiNamePatternCondition<?> nameCondition,\n                                              final Class scopeClass,\n                                              final boolean caseSensitive,\n                                              final PsiReferenceProvider provider, final double priority, final ElementPattern pattern) {\n    NamedObjectProviderBinding providerBinding = myNamedBindingsMap.get(scopeClass);\n\n    if (providerBinding == null) {\n      providerBinding = ConcurrencyUtil.cacheOrGet(myNamedBindingsMap, scopeClass, new NamedObjectProviderBinding() {\n        @Override\n        protected String getName(final PsiElement position) {\n          return nameCondition.getPropertyValue(position);\n        }\n      });\n    }\n\n    providerBinding.registerProvider(names, pattern, caseSensitive, provider, priority);\n  }","id":52690,"modified_method":"private void registerNamedReferenceProvider(@NotNull String[] names,\n                                              final PsiNamePatternCondition<?> nameCondition,\n                                              @NotNull Class scopeClass,\n                                              final boolean caseSensitive,\n                                              @NotNull PsiReferenceProvider provider,\n                                              final double priority,\n                                              @NotNull ElementPattern pattern) {\n    NamedObjectProviderBinding<PsiReferenceProvider> providerBinding = myNamedBindingsMap.get(scopeClass);\n\n    if (providerBinding == null) {\n      providerBinding = ConcurrencyUtil.cacheOrGet(myNamedBindingsMap, scopeClass, new NamedObjectProviderBinding<PsiReferenceProvider>() {\n        @Override\n        protected String getName(final PsiElement position) {\n          return nameCondition.getPropertyValue(position);\n        }\n      });\n    }\n\n    providerBinding.registerProvider(names, pattern, caseSensitive, provider, priority);\n  }","commit_id":"7f337960833e39bf42fe923aa24e0ed540cbadbd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  List<Trinity<PsiReferenceProvider, ProcessingContext, Double>> getPairsByElement(@NotNull PsiElement element,\n                                                                                   @NotNull PsiReferenceService.Hints hints) {\n    final Class<? extends PsiElement> clazz = element.getClass();\n    List<Trinity<PsiReferenceProvider, ProcessingContext, Double>> ret = null;\n\n    for (Class aClass : myKnownSupers.get(clazz)) {\n      final SimpleProviderBinding simpleBinding = myBindingsMap.get(aClass);\n      final NamedObjectProviderBinding namedBinding = myNamedBindingsMap.get(aClass);\n      if (simpleBinding == null && namedBinding == null) continue;\n\n      if (ret == null) ret = new SmartList<Trinity<PsiReferenceProvider, ProcessingContext, Double>>();\n      if (simpleBinding != null) {\n        simpleBinding.addAcceptableReferenceProviders(element, ret, hints);\n      }\n      if (namedBinding != null) {\n        namedBinding.addAcceptableReferenceProviders(element, ret, hints);\n      }\n    }\n    return ret == null ? Collections.<Trinity<PsiReferenceProvider, ProcessingContext, Double>>emptyList() : ret;\n  }","id":52691,"modified_method":"@NotNull\n  List<ProviderBinding.ProviderInfo<PsiReferenceProvider,ProcessingContext>> getPairsByElement(@NotNull PsiElement element,\n                                                                                               @NotNull PsiReferenceService.Hints hints) {\n    final Class<? extends PsiElement> clazz = element.getClass();\n    List<ProviderBinding.ProviderInfo<PsiReferenceProvider, ProcessingContext>> ret = null;\n\n    for (Class aClass : myKnownSupers.get(clazz)) {\n      SimpleProviderBinding<PsiReferenceProvider> simpleBinding = myBindingsMap.get(aClass);\n      NamedObjectProviderBinding<PsiReferenceProvider> namedBinding = myNamedBindingsMap.get(aClass);\n      if (simpleBinding == null && namedBinding == null) continue;\n\n      if (ret == null) ret = new SmartList<ProviderBinding.ProviderInfo<PsiReferenceProvider, ProcessingContext>>();\n      if (simpleBinding != null) {\n        simpleBinding.addAcceptableReferenceProviders(element, ret, hints);\n      }\n      if (namedBinding != null) {\n        namedBinding.addAcceptableReferenceProviders(element, ret, hints);\n      }\n    }\n    return ret == null ? Collections.<ProviderBinding.ProviderInfo<PsiReferenceProvider, ProcessingContext>>emptyList() : ret;\n  }","commit_id":"7f337960833e39bf42fe923aa24e0ed540cbadbd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public <T extends PsiElement> void registerReferenceProvider(@NotNull ElementPattern<T> pattern,\n                                                               @NotNull PsiReferenceProvider provider,\n                                                               double priority) {\n    myKnownSupers.clear(); // we should clear the cache\n    final Class scope = pattern.getCondition().getInitialCondition().getAcceptedClass();\n    final List<PatternCondition<? super T>> conditions = pattern.getCondition().getConditions();\n    for (int i = 0, conditionsSize = conditions.size(); i < conditionsSize; i++) {\n      PatternCondition<? super T> _condition = conditions.get(i);\n      if (_condition instanceof PsiNamePatternCondition) {\n        final PsiNamePatternCondition<?> nameCondition = (PsiNamePatternCondition)_condition;\n        List<PatternCondition<? super String>> conditions1 = nameCondition.getNamePattern().getCondition().getConditions();\n        for (int i1 = 0, conditions1Size = conditions1.size(); i1 < conditions1Size; i1++) {\n          PatternCondition<? super String> condition = conditions1.get(i1);\n          if (condition instanceof ValuePatternCondition) {\n            final Collection<String> strings = ((ValuePatternCondition)condition).getValues();\n            registerNamedReferenceProvider(ArrayUtil.toStringArray(strings), nameCondition, scope, true, provider, priority, pattern);\n            return;\n          }\n          if (condition instanceof CaseInsensitiveValuePatternCondition) {\n            final String[] strings = ((CaseInsensitiveValuePatternCondition)condition).getValues();\n            registerNamedReferenceProvider(strings, nameCondition, scope, false, provider, priority, pattern);\n            return;\n          }\n        }\n        break;\n      }\n    }\n\n    while (true) {\n      final SimpleProviderBinding providerBinding = myBindingsMap.get(scope);\n      if (providerBinding != null) {\n        providerBinding.registerProvider(provider, pattern, priority);\n        return;\n      }\n\n      final SimpleProviderBinding binding = new SimpleProviderBinding();\n      binding.registerProvider(provider, pattern, priority);\n      if (myBindingsMap.putIfAbsent(scope, binding) == null) break;\n    }\n  }","id":52692,"modified_method":"@Override\n  public <T extends PsiElement> void registerReferenceProvider(@NotNull ElementPattern<T> pattern,\n                                                               @NotNull PsiReferenceProvider provider,\n                                                               double priority) {\n    myKnownSupers.clear(); // we should clear the cache\n    final Class scope = pattern.getCondition().getInitialCondition().getAcceptedClass();\n    final List<PatternCondition<? super T>> conditions = pattern.getCondition().getConditions();\n    for (PatternCondition<? super T> _condition : conditions) {\n      if (!(_condition instanceof PsiNamePatternCondition)) {\n        continue;\n      }\n      final PsiNamePatternCondition<?> nameCondition = (PsiNamePatternCondition)_condition;\n      List<PatternCondition<? super String>> conditions1 = nameCondition.getNamePattern().getCondition().getConditions();\n      for (PatternCondition<? super String> condition1 : conditions1) {\n        if (condition1 instanceof ValuePatternCondition) {\n          final Collection<String> strings = ((ValuePatternCondition)condition1).getValues();\n          registerNamedReferenceProvider(ArrayUtil.toStringArray(strings), nameCondition, scope, true, provider, priority, pattern);\n          return;\n        }\n        if (condition1 instanceof CaseInsensitiveValuePatternCondition) {\n          final String[] strings = ((CaseInsensitiveValuePatternCondition)condition1).getValues();\n          registerNamedReferenceProvider(strings, nameCondition, scope, false, provider, priority, pattern);\n          return;\n        }\n      }\n      break;\n    }\n\n    while (true) {\n      SimpleProviderBinding<PsiReferenceProvider> providerBinding = myBindingsMap.get(scope);\n      if (providerBinding != null) {\n        providerBinding.registerProvider(provider, pattern, priority);\n        return;\n      }\n\n      SimpleProviderBinding<PsiReferenceProvider> binding = new SimpleProviderBinding<PsiReferenceProvider>();\n      binding.registerProvider(provider, pattern, priority);\n      if (myBindingsMap.putIfAbsent(scope, binding) == null) break;\n    }\n  }","commit_id":"7f337960833e39bf42fe923aa24e0ed540cbadbd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void unregisterReferenceProvider(@NotNull Class scope, @NotNull PsiReferenceProvider provider) {\n    final ProviderBinding providerBinding = myBindingsMap.get(scope);\n    providerBinding.unregisterProvider(provider);\n  }","id":52693,"modified_method":"public void unregisterReferenceProvider(@NotNull Class scope, @NotNull PsiReferenceProvider provider) {\n    ProviderBinding<PsiReferenceProvider> providerBinding = myBindingsMap.get(scope);\n    providerBinding.unregisterProvider(provider);\n  }","commit_id":"7f337960833e39bf42fe923aa24e0ed540cbadbd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * @deprecated {@see com.intellij.psi.PsiReferenceContributor\n   */\n  public void registerReferenceProvider(@Nullable ElementFilter elementFilter,\n                                        @NotNull Class scope,\n                                        @NotNull PsiReferenceProvider provider,\n                                        double priority) {\n    registerReferenceProvider(PlatformPatterns.psiElement(scope).and(new FilterPattern(elementFilter)), provider, priority);\n  }","id":52694,"modified_method":"/**\n   * @deprecated {@see com.intellij.psi.PsiReferenceContributor\n   */\n  public void registerReferenceProvider(@Nullable ElementFilter elementFilter,\n                                        @NotNull Class scope,\n                                        @NotNull PsiReferenceProvider provider,\n                                        double priority) {\n    PsiElementPattern.Capture<PsiElement> capture = PlatformPatterns.psiElement(scope);\n    registerReferenceProvider(capture.and(new FilterPattern(elementFilter)), provider, priority);\n  }","commit_id":"7f337960833e39bf42fe923aa24e0ed540cbadbd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected PsiReference[] doGetReferencesFromProviders(PsiElement context,\n                                                        PsiReferenceService.Hints hints) {\n    List<Trinity<PsiReferenceProvider, ProcessingContext, Double>> providersForContextLanguage;\n    providersForContextLanguage = getRegistrar(context.getLanguage()).getPairsByElement(context, hints);\n\n    List<Trinity<PsiReferenceProvider, ProcessingContext, Double>> providersForAllLanguages;\n    providersForAllLanguages = getRegistrar(Language.ANY).getPairsByElement(context, hints);\n\n    int providersCount = providersForContextLanguage.size() + providersForAllLanguages.size();\n\n    if (providersCount == 0) {\n      return PsiReference.EMPTY_ARRAY;\n    }\n\n    if (providersCount == 1) {\n      final Trinity<PsiReferenceProvider, ProcessingContext, Double> firstProvider =\n        (providersForAllLanguages.isEmpty() ? providersForContextLanguage : providersForAllLanguages).get(0);\n      return firstProvider.getFirst().getReferencesByElement(context, firstProvider.getSecond());\n    }\n\n    Trinity<PsiReferenceProvider, ProcessingContext, Double>[] providers = new Trinity[providersCount];\n\n    int i = 0;\n    for (Trinity<PsiReferenceProvider, ProcessingContext, Double> provider : providersForContextLanguage) {\n      providers[i++] = provider;\n    }\n    for (Trinity<PsiReferenceProvider, ProcessingContext, Double> provider : providersForAllLanguages) {\n      providers[i++] = provider;\n    }\n\n    Arrays.sort(providers, PRIORITY_COMPARATOR);\n\n    List<PsiReference> result = new ArrayList<PsiReference>();\n    final double maxPriority = providers[0].getThird();\n    next:\n    for (Trinity<PsiReferenceProvider, ProcessingContext, Double> trinity : providers) {\n      final PsiReference[] refs;\n      try {\n        refs = trinity.getFirst().getReferencesByElement(context, trinity.getSecond());\n      }\n      catch(IndexNotReadyException ex) {\n        continue;\n      }\n      if (trinity.getThird().doubleValue() != maxPriority) {\n        for (PsiReference ref : refs) {\n          for (PsiReference reference : result) {\n            if (ref != null && ReferenceRange.containsRangeInElement(reference, ref.getRangeInElement())) {\n              continue next;\n            }\n          }\n        }\n      }\n      for (PsiReference ref : refs) {\n        if (ref != null) {\n          result.add(ref);\n        }\n      }\n    }\n    return result.isEmpty() ? PsiReference.EMPTY_ARRAY : ContainerUtil.toArray(result, new PsiReference[result.size()]);\n  }","id":52695,"modified_method":"@Override\n  protected PsiReference[] doGetReferencesFromProviders(PsiElement context,\n                                                        PsiReferenceService.Hints hints) {\n    List<ProviderBinding.ProviderInfo<PsiReferenceProvider, ProcessingContext>> providersForContextLanguage =\n      getRegistrar(context.getLanguage()).getPairsByElement(context, hints);\n\n    List<ProviderBinding.ProviderInfo<PsiReferenceProvider, ProcessingContext>> providersForAllLanguages =\n      getRegistrar(Language.ANY).getPairsByElement(context, hints);\n\n    int providersCount = providersForContextLanguage.size() + providersForAllLanguages.size();\n\n    if (providersCount == 0) {\n      return PsiReference.EMPTY_ARRAY;\n    }\n\n    if (providersCount == 1) {\n      final ProviderBinding.ProviderInfo<PsiReferenceProvider, ProcessingContext> firstProvider =\n        (providersForAllLanguages.isEmpty() ? providersForContextLanguage : providersForAllLanguages).get(0);\n      return firstProvider.provider.getReferencesByElement(context, firstProvider.processingContext);\n    }\n\n    List<ProviderBinding.ProviderInfo<PsiReferenceProvider, ProcessingContext>> list =\n      ContainerUtil.concat(providersForContextLanguage, providersForAllLanguages);\n    @SuppressWarnings(\"unchecked\")\n    ProviderBinding.ProviderInfo<PsiReferenceProvider, ProcessingContext>[] providers = list.toArray(new ProviderBinding.ProviderInfo[list.size()]);\n\n    Arrays.sort(providers, PRIORITY_COMPARATOR);\n\n    List<PsiReference> result = new ArrayList<PsiReference>();\n    final double maxPriority = providers[0].priority;\n    next:\n    for (ProviderBinding.ProviderInfo<PsiReferenceProvider, ProcessingContext> trinity : providers) {\n      final PsiReference[] refs;\n      try {\n        refs = trinity.provider.getReferencesByElement(context, trinity.processingContext);\n      }\n      catch(IndexNotReadyException ex) {\n        continue;\n      }\n      if (trinity.priority != maxPriority) {\n        for (PsiReference ref : refs) {\n          for (PsiReference reference : result) {\n            if (ref != null && ReferenceRange.containsRangeInElement(reference, ref.getRangeInElement())) {\n              continue next;\n            }\n          }\n        }\n      }\n      for (PsiReference ref : refs) {\n        if (ref != null) {\n          result.add(ref);\n        }\n      }\n    }\n    return result.isEmpty() ? PsiReference.EMPTY_ARRAY : ContainerUtil.toArray(result, new PsiReference[result.size()]);\n  }","commit_id":"7f337960833e39bf42fe923aa24e0ed540cbadbd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void unregisterProvider(final Provider provider) {\n    for (final Trinity<Provider, ElementPattern, Double> trinity : new ArrayList<Trinity<Provider, ElementPattern, Double>>(myProviderPairs)) {\n      if (trinity.first.equals(provider)) {\n        myProviderPairs.remove(trinity);\n      }\n    }\n  }","id":52696,"modified_method":"@Override\n  public void unregisterProvider(@NotNull final Provider provider) {\n    for (final ProviderInfo<Provider, ElementPattern> trinity : new ArrayList<ProviderInfo<Provider, ElementPattern>>(myProviderPairs)) {\n      if (trinity.provider.equals(provider)) {\n        myProviderPairs.remove(trinity);\n      }\n    }\n  }","commit_id":"7f337960833e39bf42fe923aa24e0ed540cbadbd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void addAcceptableReferenceProviders(@NotNull PsiElement position, @NotNull List list,\n                                              PsiReferenceService.Hints hints) {\n    for(Trinity<Provider,ElementPattern,Double> trinity:myProviderPairs) {\n      if (hints != PsiReferenceService.Hints.NO_HINTS && !((PsiReferenceProvider)trinity.first).acceptsHints(position, hints)) {\n        continue;\n      }\n\n      final ProcessingContext context = new ProcessingContext();\n      if (hints != PsiReferenceService.Hints.NO_HINTS) {\n        context.put(PsiReferenceService.HINTS, hints);\n      }\n      boolean suitable = false;\n      try {\n        suitable = trinity.second.accepts(position, context);\n      }\n      catch (IndexNotReadyException ignored) {\n      }\n      if (suitable) {\n        list.add(Trinity.create(trinity.first, context, trinity.third));\n      }\n    }\n  }","id":52697,"modified_method":"@Override\n  public void addAcceptableReferenceProviders(@NotNull PsiElement position,\n                                              @NotNull List<ProviderInfo<Provider, ProcessingContext>> list,\n                                              @NotNull PsiReferenceService.Hints hints) {\n    for(ProviderInfo<Provider, ElementPattern> trinity:myProviderPairs) {\n      if (hints != PsiReferenceService.Hints.NO_HINTS && !((PsiReferenceProvider)trinity.provider).acceptsHints(position, hints)) {\n        continue;\n      }\n\n      final ProcessingContext context = new ProcessingContext();\n      if (hints != PsiReferenceService.Hints.NO_HINTS) {\n        context.put(PsiReferenceService.HINTS, hints);\n      }\n      boolean suitable = false;\n      try {\n        suitable = trinity.processingContext.accepts(position, context);\n      }\n      catch (IndexNotReadyException ignored) {\n      }\n      if (suitable) {\n        list.add(new ProviderInfo<Provider, ProcessingContext>(trinity.provider, context, trinity.priority));\n      }\n    }\n  }","commit_id":"7f337960833e39bf42fe923aa24e0ed540cbadbd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void registerProvider(Provider provider,ElementPattern pattern, double priority){\n    myProviderPairs.add(Trinity.create(provider, pattern, priority));\n  }","id":52698,"modified_method":"public void registerProvider(Provider provider,ElementPattern pattern, double priority){\n    myProviderPairs.add(new ProviderInfo<Provider, ElementPattern>(provider, pattern, priority));\n  }","commit_id":"7f337960833e39bf42fe923aa24e0ed540cbadbd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean processRow(StepMetaInterface smi, StepDataInterface sdi)\n        throws KettleException\n    {\n\n        meta = (FarragoStreamingLoaderMeta) smi;\n        data = (FarragoStreamingLoaderData) sdi;\n\n        try {\n\n            Object[] r = getRow(); // Get row from input rowset & set row\n            // busy!\n\n            if (r == null) // no more input to be expected...\n            {\n                if (data.objOut != null) {\n\n                    data.objOut.close();\n                    if (data.client != null) {\n\n                        data.client.close();\n                    }\n                }\n\n                return false;\n            }\n\n            if (first) {\n\n                first = false;\n\n                data.keynrs = new int[meta.getFieldStreamForKeys().length\n                    + meta.getFieldStreamForFields().length];\n                data.format = new int[data.keynrs.length];\n\n                for (int i = 0; i < meta.getFieldStreamForKeys().length; i++) {\n\n                    data.keynrs[i] = getInputRowMeta().indexOfValue(\n                        meta.getFieldStreamForKeys()[i]);\n                    data.format[i] = getInputRowMeta().getValueMeta(\n                        data.keynrs[i]).getLength();\n                }\n                int tmp_cnt = meta.getFieldStreamForKeys().length;\n                for (int i = 0; i < meta.getFieldStreamForFields().length; i++)\n                {\n\n                    data.keynrs[tmp_cnt + i] = getInputRowMeta().indexOfValue(\n                        meta.getFieldStreamForFields()[i]);\n                    data.format[tmp_cnt + i] = getInputRowMeta().getValueMeta(\n                        data.keynrs[i]).getLength();\n                }\n                logDebug(data.format.toString());\n\n                // Create head format object.\n                // TODO: I think we need to re-sign data structure for header. \n                List<Object> header = new ArrayList<Object>();\n                header.add(\"1\"); // version\n                List<Integer> format = new ArrayList<Integer>();\n                for (int i = 0; i < data.format.length; i++) {\n\n                    format.add( data.format[i] );\n                }\n                header.add(format);\n\n                data.objOut.writeObject(header);\n            }\n\n            List<Object> entity = new ArrayList<Object>();\n\n            for (int i = 0; i < data.keynrs.length; i++) {\n\n                int index = data.keynrs[i];\n                ValueMetaInterface valueMeta = getInputRowMeta().getValueMeta(\n                    index);\n                Object valueData = r[index];\n\n                if (valueData != null) {\n                    switch (valueMeta.getType()) {\n                    case ValueMetaInterface.TYPE_STRING:\n\n                    \tlogRowlevel(valueMeta.getString(valueData) + \":\"\n                            + valueMeta.getLength() + \":\"\n                            + valueMeta.getTypeDesc());\n                        entity.add(valueMeta.getString(valueData));\n\n                        break;\n                    case ValueMetaInterface.TYPE_INTEGER:\n\n                        logRowlevel(valueMeta.getInteger(valueData)\n                            + \":\" + valueMeta.getLength() + \":\"\n                            + valueMeta.getTypeDesc());\n                        entity.add(valueMeta.getInteger(valueData));\n                        break;\n                    case ValueMetaInterface.TYPE_DATE:\n\n                        Date date = valueMeta.getDate(valueData);\n\n                        if (log.isRowLevel()) logRowlevel(XMLHandler.date2string(date) + \":\" + valueMeta.getLength());\n                        entity.add(date);\n                        break;\n                    case ValueMetaInterface.TYPE_BOOLEAN:\n\n                    \tlogRowlevel(Boolean.toString(valueMeta.getBoolean(valueData))\n                            + \":\" + valueMeta.getLength());\n                        entity.add(valueMeta.getBoolean(valueData));\n                        break;\n                    }\n                }\n\n            }\n            \n            data.objOut.writeObject(entity);\n            \n            return true;\n        } catch (Exception e) {\n            logError(BaseMessages.getString(\n                PKG,\n                \"FarragoStreamingLoader.Log.ErrorInStep\"), e); //$NON-NLS-1$\n            setErrors(1);\n            stopAll();\n            setOutputDone(); // signal end to receiver(s)\n            return false;\n        }\n    }","id":52699,"modified_method":"public boolean processRow(StepMetaInterface smi, StepDataInterface sdi)\r\n\t\t\tthrows KettleException {\r\n\r\n\t\tmeta = (FarragoStreamingLoaderMeta) smi;\r\n\t\tdata = (FarragoStreamingLoaderData) sdi;\r\n\t\tList<Object> header = new ArrayList<Object>();\r\n\t\ttry {\r\n\r\n\t\t\tObject[] r = getRow(); // Get row from input rowset & set row\r\n\t\t\t// busy!\r\n\r\n\t\t\tif (r == null) // no more input to be expected...\r\n\t\t\t{\r\n\t\t\t\tif (data.objOut != null) {\r\n\r\n\t\t\t\t\tdata.objOut.close();\r\n\t\t\t\t\tif (data.client != null) {\r\n\r\n\t\t\t\t\t\tdata.client.close();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (rowCount > 50000) {\r\n\r\n\t\t\t\trowCount = 0;\r\n\t\t\t\tif (data.objOut != null) {\r\n\r\n\t\t\t\t\tdata.objOut.close();\r\n\t\t\t\t\tif (data.client != null) {\r\n\r\n\t\t\t\t\t\tdata.client.close();\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// data.sqlRunner.join();\r\n\r\n\t\t\t\tif ( log.isDebug() ) logDebug(\"Preparing sql statements: \" + Const.CR\r\n\t\t\t\t\t\t+ meta.getSql_statement());\r\n\r\n\t\t\t\tString sql = meta.getSql_statement();\r\n\t\t\t\tPreparedStatement ps = data.db.prepareSQL(sql);\r\n\r\n\t\t\t\tif ( log.isDebug() ) logDebug(\"Executing sql statements...\");\r\n\r\n\t\t\t\tdata.sqlRunner = new SqlRunner(data, ps);\r\n\t\t\t\tdata.sqlRunner.start();\r\n\r\n\t\t\t\tif ( log.isDebug() ) logDebug(\"Remote rows is up now...\");\r\n\r\n\t\t\t\tif ( log.isDebug() ) logDebug(\"Sleeping for 1second\");\r\n\t\t\t\tThread.sleep(1000);\r\n\r\n\t\t\t\tif ( log.isDebug() ) logDebug(\"Initialize local socket connection...\");\r\n\t\t\t\tif ( log.isDebug() ) logDebug(\"Parameters for socket: Host: \" + meta.getHost()\r\n\t\t\t\t\t\t+ \" Port: \" + meta.getPort());\r\n\t\t\t\tdata.client = new Socket(meta.getHost(), Integer.valueOf(meta\r\n\t\t\t\t\t\t.getPort()));\r\n\r\n\t\t\t\tdata.objOut = new ObjectOutputStream(data.client\r\n\t\t\t\t\t\t.getOutputStream());\r\n\r\n\t\t\t\tif ( log.isDebug() ) logDebug(\"Local socket connection is ready\");\r\n\r\n\t\t\t\tdata.objOut.writeObject(header);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (first) {\r\n\r\n\t\t\t\tfirst = false;\r\n\r\n\t\t\t\tdata.keynrs = new int[meta.getFieldStreamForKeys().length\r\n\t\t\t\t\t\t+ meta.getFieldStreamForFields().length];\r\n\t\t\t\tdata.format = new int[data.keynrs.length];\r\n\r\n\t\t\t\tfor (int i = 0; i < meta.getFieldStreamForKeys().length; i++) {\r\n\r\n\t\t\t\t\tdata.keynrs[i] = getInputRowMeta().indexOfValue(\r\n\t\t\t\t\t\t\tmeta.getFieldStreamForKeys()[i]);\r\n\t\t\t\t\tdata.format[i] = getInputRowMeta().getValueMeta(\r\n\t\t\t\t\t\t\tdata.keynrs[i]).getLength();\r\n\t\t\t\t}\r\n\t\t\t\tint tmp_cnt = meta.getFieldStreamForKeys().length;\r\n\t\t\t\tfor (int i = 0; i < meta.getFieldStreamForFields().length; i++) {\r\n\r\n\t\t\t\t\tdata.keynrs[tmp_cnt + i] = getInputRowMeta().indexOfValue(\r\n\t\t\t\t\t\t\tmeta.getFieldStreamForFields()[i]);\r\n\t\t\t\t\tdata.format[tmp_cnt + i] = getInputRowMeta().getValueMeta(\r\n\t\t\t\t\t\t\tdata.keynrs[i]).getLength();\r\n\t\t\t\t}\r\n\t\t\t\tif ( isDetailed() ) logDetailed(data.format.toString());\r\n\r\n\t\t\t\t// Create head format object.\r\n\t\t\t\t// TODO: I think we need to re-sign data structure for header.\r\n\r\n\t\t\t\theader.add(\"1\"); // version\r\n\t\t\t\tList<Integer> format = new ArrayList<Integer>();\r\n\t\t\t\tfor (int i = 0; i < data.format.length; i++) {\r\n\r\n\t\t\t\t\tformat.add((Integer) data.format[i]);\r\n\t\t\t\t}\r\n\t\t\t\theader.add(format);\r\n\r\n\t\t\t\tdata.objOut.writeObject(header);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (first) {\r\n\r\n\t\t\t\tfirst = false;\r\n\r\n\t\t\t\tdata.keynrs = new int[meta.getFieldStreamForKeys().length\r\n\t\t\t\t\t\t+ meta.getFieldStreamForFields().length];\r\n\t\t\t\tdata.format = new int[data.keynrs.length];\r\n\r\n\t\t\t\tfor (int i = 0; i < meta.getFieldStreamForKeys().length; i++) {\r\n\r\n\t\t\t\t\tdata.keynrs[i] = getInputRowMeta().indexOfValue(\r\n\t\t\t\t\t\t\tmeta.getFieldStreamForKeys()[i]);\r\n\t\t\t\t\tdata.format[i] = getInputRowMeta().getValueMeta(\r\n\t\t\t\t\t\t\tdata.keynrs[i]).getLength();\r\n\t\t\t\t}\r\n\t\t\t\tint tmp_cnt = meta.getFieldStreamForKeys().length;\r\n\t\t\t\tfor (int i = 0; i < meta.getFieldStreamForFields().length; i++) {\r\n\r\n\t\t\t\t\tdata.keynrs[tmp_cnt + i] = getInputRowMeta().indexOfValue(\r\n\t\t\t\t\t\t\tmeta.getFieldStreamForFields()[i]);\r\n\t\t\t\t\tdata.format[tmp_cnt + i] = getInputRowMeta().getValueMeta(\r\n\t\t\t\t\t\t\tdata.keynrs[i]).getLength();\r\n\t\t\t\t}\r\n\t\t\t\tif ( log.isDebug() ) logDebug(data.format.toString());\r\n\r\n\t\t\t\t// Create head format object.\r\n\t\t\t\t// TODO: I think we need to re-sign data structure for header.\r\n\r\n\t\t\t\theader.add(\"1\"); // version\r\n\t\t\t\tList<Integer> format = new ArrayList<Integer>();\r\n\t\t\t\tfor (int i = 0; i < data.format.length; i++) {\r\n\r\n\t\t\t\t\tformat.add((Integer) data.format[i]);\r\n\t\t\t\t}\r\n\t\t\t\theader.add(format);\r\n\r\n\t\t\t\tdata.objOut.writeObject(header);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tList<Object> entity = new ArrayList<Object>();\r\n\r\n\t\t\tfor (int i = 0; i < data.keynrs.length; i++) {\r\n\r\n\t\t\t\tint index = data.keynrs[i];\r\n\t\t\t\tValueMetaInterface valueMeta = getInputRowMeta().getValueMeta(\r\n\t\t\t\t\t\tindex);\r\n\t\t\t\tObject valueData = r[index];\r\n\r\n\t\t\t\tif (valueData != null) {\r\n\t\t\t\t\tswitch (valueMeta.getType()) {\r\n\t\t\t\t\tcase ValueMetaInterface.TYPE_STRING:\r\n\r\n\t\t\t\t\t\tif (log.isRowLevel() ) logRowlevel(valueMeta.getString(valueData) + \":\"\r\n\t\t\t\t\t\t\t\t+ valueMeta.getLength() + \":\"\r\n\t\t\t\t\t\t\t\t+ valueMeta.getTypeDesc());\r\n\t\t\t\t\t\tentity.add(valueMeta.getString(valueData));\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ValueMetaInterface.TYPE_INTEGER:\r\n\r\n\t\t\t\t\t\tif (log.isRowLevel() ) logRowlevel(valueMeta.getInteger(valueData) + \":\"\r\n\t\t\t\t\t\t\t\t+ valueMeta.getLength() + \":\"\r\n\t\t\t\t\t\t\t\t+ valueMeta.getTypeDesc());\r\n\t\t\t\t\t\tentity.add(valueMeta.getInteger(valueData));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ValueMetaInterface.TYPE_DATE:\r\n\r\n\t\t\t\t\t\tDate date = valueMeta.getDate(valueData);\r\n\r\n\t\t\t\t\t\tif (log.isRowLevel() )logRowlevel(date.toString());\r\n\t\t\t\t\t\tentity.add(date);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ValueMetaInterface.TYPE_BOOLEAN:\r\n\r\n\t\t\t\t\t\tif (log.isRowLevel() )logRowlevel(Boolean.toString(valueMeta\r\n\t\t\t\t\t\t\t\t.getBoolean(valueData))\r\n\t\t\t\t\t\t\t\t+ \":\" + valueMeta.getLength());\r\n\t\t\t\t\t\tentity.add(valueMeta.getBoolean(valueData));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdata.objOut.writeObject(entity);\r\n\t\t\tdata.objOut.flush();\r\n\t\t\tentity = null;\r\n\t\t\trowCount++;\r\n\r\n\t\t\treturn true;\r\n\t\t} catch (Exception e) {\r\n\t\t\tlogError(BaseMessages.getString(PKG,\r\n\t\t\t\t\t\"FarragoStreamingLoader.Log.ErrorInStep\"), e); //$NON-NLS-1$\r\n\t\t\tsetErrors(1);\r\n\t\t\tstopAll();\r\n\t\t\tsetOutputDone(); // signal end to receiver(s)\r\n\t\t\trowCount = 0;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}","commit_id":"08525e2a0e9b8f506e79b3bdef19a1efc47b95e5","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public boolean init(StepMetaInterface smi, StepDataInterface sdi)\n    {\n        meta = (FarragoStreamingLoaderMeta) smi;\n        data = (FarragoStreamingLoaderData) sdi;\n\n        if (super.init(smi, sdi)) {\n\n            try {\n\n                // 1. Initialize databases connection.\n                logBasic(\"Connecting to LucidDB...\");\n\n                data.db = new Database(this, meta.getDatabaseMeta());\n                data.db.shareVariablesWith(this);\n                // Connect to the database\n                if (getTransMeta().isUsingUniqueConnections()) {\n                    synchronized (getTrans()) {\n                        data.db.connect(\n                            getTrans().getThreadName(),\n                            getPartitionID());\n                    }\n                } else {\n                    data.db.connect(getPartitionID());\n                }\n\n                logBasic(\"Connected to LucidDB\");\n\n                logBasic(\"Preparing sql statements: \" + Const.CR\n                    + meta.getSql_statement());\n\n                String sql = meta.getSql_statement();\n                PreparedStatement ps = data.db.prepareSQL(sql);\n\n                logBasic(\"Executing sql statements...\");\n\n                data.sqlRunner = new SqlRunner(data, ps);\n                data.sqlRunner.start();\n\n                logBasic(\"Romote rows is up now...\");\n                \n                logDebug(\"Sleeping for 1second\");\n                Thread.sleep(1000);\n\n                logBasic(\"Initialize local socket connection...\");\n                logDebug(\"Parameters for socket: Host: \" + meta.getHost()\n                    + \" Port: \" + meta.getPort());\n                data.client = new Socket(\n                    meta.getHost(),\n                    Integer.valueOf(meta.getPort()));\n\n                data.objOut = new ObjectOutputStream(\n                    data.client.getOutputStream());\n\n                logBasic(\"Local socket connection is ready\");\n\n            } catch (NumberFormatException e) {\n                // TODO Auto-generated catch block\n                e.printStackTrace();\n                logError(e.getMessage());\n                return false;\n            } catch (UnknownHostException e) {\n                // TODO Auto-generated catch block\n                e.printStackTrace();\n                logError(e.getMessage());\n                return false;\n            } catch (IOException e) {\n                // TODO Auto-generated catch block\n                e.printStackTrace();\n                logError(e.getMessage());\n                return false;\n            } catch (KettleDatabaseException e) {\n                // TODO Auto-generated catch block\n                e.printStackTrace();\n                logError(e.getMessage());\n                return false;\n            } catch (Exception e) {\n                \n                e.printStackTrace();\n                logError(e.getMessage());\n                return false;\n                \n            }\n\n            return true;\n        }\n        return false;\n    }","id":52700,"modified_method":"public boolean init(StepMetaInterface smi, StepDataInterface sdi) {\r\n\t\tmeta = (FarragoStreamingLoaderMeta) smi;\r\n\t\tdata = (FarragoStreamingLoaderData) sdi;\r\n\r\n\t\tif (super.init(smi, sdi)) {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\t// 1. Initialize databases connection.\r\n\t\t\t\tif ( log.isDebug()) logDebug(\"Connecting to LucidDB...\");\r\n\r\n\t\t\t\tdata.db = new Database(this, meta.getDatabaseMeta());\r\n\t\t\t\tdata.db.shareVariablesWith(this);\r\n\t\t\t\t// Connect to the database\r\n\t\t\t\tif (getTransMeta().isUsingUniqueConnections()) {\r\n\t\t\t\t\tsynchronized (getTrans()) {\r\n\t\t\t\t\t\tdata.db.connect(getTrans().getThreadName(),\r\n\t\t\t\t\t\t\t\tgetPartitionID());\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdata.db.connect(getPartitionID());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( log.isDebug() ) logDebug(\"Connected to LucidDB\");\r\n\r\n\t\t\t\tif ( log.isDebug() ) logDebug(\"Preparing sql statements: \" + Const.CR\r\n\t\t\t\t\t\t+ meta.getSql_statement());\r\n\r\n\t\t\t\tString sql = meta.getSql_statement();\r\n\t\t\t\tPreparedStatement ps = data.db.prepareSQL(sql);\r\n\r\n\t\t\t\tif ( log.isDebug() ) logDebug(\"Executing sql statements...\");\r\n\r\n\t\t\t\tdata.sqlRunner = new SqlRunner(data, ps);\r\n\t\t\t\tdata.sqlRunner.start();\r\n\r\n\t\t\t\tif ( log.isDebug() ) logDebug(\"Remote rows is up now...\");\r\n\r\n\t\t\t\tif ( log.isDebug() ) logDebug(\"Sleeping for 1second\");\r\n\t\t\t\tThread.sleep(1000);\r\n\r\n\t\t\t\tif ( log.isDebug() ) logDebug(\"Initialize local socket connection...\");\r\n\t\t\t\tif ( log.isDebug() ) logDebug(\"Parameters for socket: Host: \" + meta.getHost()\r\n\t\t\t\t\t\t+ \" Port: \" + meta.getPort());\r\n\t\t\t\tdata.client = new Socket(meta.getHost(), Integer.valueOf(meta\r\n\t\t\t\t\t\t.getPort()));\r\n\r\n\t\t\t\tdata.objOut = new ObjectOutputStream(data.client\r\n\t\t\t\t\t\t.getOutputStream());\r\n\r\n\t\t\t\tif ( log.isDebug() ) logDebug(\"Local socket connection is ready\");\r\n\r\n\t\t\t} catch (NumberFormatException e) {\r\n\t\t\t\t// TODO Auto-generated catch block\r\n\t\t\t\te.printStackTrace();\r\n\t\t\t\tlogError(e.getMessage());\r\n\t\t\t\treturn false;\r\n\t\t\t} catch (UnknownHostException e) {\r\n\t\t\t\t// TODO Auto-generated catch block\r\n\t\t\t\te.printStackTrace();\r\n\t\t\t\tlogError(e.getMessage());\r\n\t\t\t\treturn false;\r\n\t\t\t} catch (IOException e) {\r\n\t\t\t\t// TODO Auto-generated catch block\r\n\t\t\t\te.printStackTrace();\r\n\t\t\t\tlogError(e.getMessage());\r\n\t\t\t\treturn false;\r\n\t\t\t} catch (KettleDatabaseException e) {\r\n\t\t\t\t// TODO Auto-generated catch block\r\n\t\t\t\te.printStackTrace();\r\n\t\t\t\tlogError(e.getMessage());\r\n\t\t\t\treturn false;\r\n\t\t\t} catch (Exception e) {\r\n\r\n\t\t\t\te.printStackTrace();\r\n\t\t\t\tlogError(e.getMessage());\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}","commit_id":"08525e2a0e9b8f506e79b3bdef19a1efc47b95e5","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void setAttachedFilesList(Object[] r,LogWriter log) throws Exception\n\t  {\n\t\t  \n\t\t  String realSourceFileFoldername=null;\n\t\t  String realSourceWildcard=null;\n\t\t  FileObject sourcefile=null;\n\t\t  FileObject file=null;\n\t\t  \n\t\t  ZipOutputStream zipOutputStream = null;\n\t\t  File masterZipfile = null;\n\t\t  \n\t\t  if(meta.isZipFilenameDynamic())  data.ZipFilename=data.previousRowMeta.getString(r,data.indexOfDynamicZipFilename);\n\n\t\t \n\t\t  try{\n\n\t\t\t  if(meta.isDynamicAttachedFilenames()) {\n\t\t\t\t // dynamic attached filenames\n\t\t\t\t  if(data.indexOfSourceFilename>-1)\n\t\t\t\t\t  realSourceFileFoldername= data.previousRowMeta.getString(r,data.indexOfSourceFilename);\n\t\t\t\t  \n\t\t\t\t  if(data.indexOfSourceWildcard>-1)\n\t\t\t\t\t  realSourceWildcard= data.previousRowMeta.getString(r,data.indexOfSourceWildcard);\n\t\t\t\t  \n\t\t\t  }else {\n\t\t\t\t// static attached filenames\n\t\t\t\trealSourceFileFoldername=environmentSubstitute(meta.getSourceFileFoldername()) ; \n\t\t\t\trealSourceWildcard=environmentSubstitute(meta.getSourceWildcard()) ; \n\t\t\t  }\n\t\t\t  \n\t\t\t\n\t\t\t\tif(!Const.isEmpty(realSourceFileFoldername)){\n\t\t\t\t\tsourcefile=KettleVFS.getFileObject(realSourceFileFoldername);\n\t\t\t\t\tif(sourcefile.exists()){\n\t\t\t\t\t\tlong FileSize=0;\n\t\t\t\t\t\tFileObject list[] = sourcefile.findFiles(new TextFileSelector (sourcefile.toString(),realSourceWildcard));  \n\t\t\t\t\t\tlog.logBasic(toString(), \"--------LEN-------------\"+list.length);\n\t\t\t\t\t\tif(list.length>0){\n\n\t\t\t\t\t\t\t boolean zipFiles=meta.isZipFiles();\n\t\t\t\t\t\t\tif(zipFiles && data.zipFileLimit==0){\n\t\t\t\t\t            masterZipfile = new File(System.getProperty(\"java.io.tmpdir\") + Const.FILE_SEPARATOR\n\t\t\t\t\t                    + environmentSubstitute(data.ZipFilename));\n\t\t\t\t\t                \n\t\t\t\t\t            zipOutputStream = new ZipOutputStream(new FileOutputStream(masterZipfile));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\t \tfor ( int i=0; i < list.length; i++ ) {\n\t\n\t\t\t\t\t\t    \t  file=KettleVFS.getFileObject(KettleVFS.getFilename(list[i]));\n\t\t\t\t\t\t    \t  \n\t\t\t\t\t\t    \t  if(zipFiles){\n\t\t\t\t\t\t    \t\t  \n\t\t\t\t\t\t    \t\t  if(data.zipFileLimit==0)\n\t\t\t\t\t\t    \t\t  {\n\t\t\t\t\t\t\t    \t\t  ZipEntry zipEntry = new ZipEntry(file.getName().getBaseName());\n\t\t\t\t\t\t                  zipOutputStream.putNextEntry(zipEntry);\n\t\n\t\t\t\t\t\t                  // Now put the content of this file into this archive...\n\t\t\t\t\t\t                  BufferedInputStream inputStream = new BufferedInputStream(file.getContent().getInputStream());\n\t\t\t\t\t\t                  int c;\n\t\t\t\t\t\t                  while ((c = inputStream.read()) >= 0)\n\t\t\t\t\t\t                  {\n\t\t\t\t\t\t                    zipOutputStream.write(c);\n\t\t\t\t\t\t                  }\n\t\t\t\t\t\t                  inputStream.close();\n\t\t\t\t\t\t                  zipOutputStream.closeEntry();  \n\t\t\t\t\t\t    \t\t  }else\n\t\t\t\t\t\t    \t\t\t  FileSize+=file.getContent().getSize();\n\t\t\t\t\t\t    \t  }else\n\t\t\t\t\t\t    \t\t  addAttachedFilePart(file); \t  \n\t\t\t\t\t        }\n\t\t\t\t\t\t \tif(zipFiles) {\t\n\t\t\t\t\t\t \t\tlog.logBasic(toString() ,\"FILES SIZE = \" + FileSize+ \"\\n\");\n\t\t\t\t\t\t \t\tlog.logBasic(toString() ,\"LIMIT SIZE = \" + data.zipFileLimit+ \"\\n\");\n\t\t\t\t\t\t \t\t\n\t\t\t\t\t\t \t\tif(data.zipFileLimit>0 && FileSize>data.zipFileLimit){\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t            masterZipfile = new File(System.getProperty(\"java.io.tmpdir\") + Const.FILE_SEPARATOR\n\t\t\t\t\t\t\t                    + environmentSubstitute(data.ZipFilename));\n\t\t\t\t\t\t\t                \n\t\t\t\t\t\t\t            zipOutputStream = new ZipOutputStream(new FileOutputStream(masterZipfile));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t \t\t\tfor ( int i=0; i < list.length; i++ ) {\n\t\t\t\t\t\t \t\t\t\t\n\t\t\t\t\t\t \t\t\t\tfile=KettleVFS.getFileObject(KettleVFS.getFilename(list[i]));\n\t\t\t\t\t\t \t\t\t\t\n\t\t\t\t\t\t \t\t\t\t ZipEntry zipEntry = new ZipEntry(file.getName().getBaseName());\n\t\t\t\t\t\t                  zipOutputStream.putNextEntry(zipEntry);\n\t\n\t\t\t\t\t\t                  // Now put the content of this file into this archive...\n\t\t\t\t\t\t                  BufferedInputStream inputStream = new BufferedInputStream(file.getContent().getInputStream());\n\t\t\t\t\t\t                  int c;\n\t\t\t\t\t\t                  while ((c = inputStream.read()) >= 0)\n\t\t\t\t\t\t                  {\n\t\t\t\t\t\t                    zipOutputStream.write(c);\n\t\t\t\t\t\t                  }\n\t\t\t\t\t\t                  inputStream.close();\n\t\t\t\t\t\t                  zipOutputStream.closeEntry();  \n\t\t\t\t\t\t \t\t\t\t\n\t\t\t\t\t\t \t\t\t}\n\t\t\t\t\t\t \t\t\t\n\t\t\t\t\t\t \t\t}\n\t\t\t\t\t\t \t\tif(data.zipFileLimit>0 && FileSize>data.zipFileLimit || data.zipFileLimit==0)\n\t\t\t\t\t\t \t\t{\n\t\t\t\t\t\t \t\t\tfile=KettleVFS.getFileObject(masterZipfile.getAbsolutePath());\n\t\t\t\t\t\t \t\t\taddAttachedFilePart(file); \n\t\t\t\t\t\t \t\t}\n\t\t\t\t\t\t \t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tlog.logError(toString(),Messages.getString(\"Mail.Error.SourceFileFolderNotExists\",realSourceFileFoldername));\n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t\t}catch(Exception e)\n\t\t\t{\n\t\t\t\tlog.logError(toString(),e.getMessage());\n\t\t\t}\n\t\t\tfinally{\n\t\t\t\tif(sourcefile!=null){try{sourcefile.close();}catch(Exception e){}}\n\t\t\t\tif(file!=null){try{file.close();}catch(Exception e){}}\n\t\t\t\t\n\t\t\t\t  if (zipOutputStream != null){\n\t                try{\n\t                  zipOutputStream.finish();\n\t                  zipOutputStream.close();\n\t                } catch (IOException e)\n\t                {\n\t                  log.logError(toString(), \"Unable to close attachement zip file archive : \" + e.toString());\n\t                }\n\t              }\n\t\t\t}\n\t\t\t\n\t  }","id":52701,"modified_method":"private void setAttachedFilesList(Object[] r,LogWriter log) throws Exception\n\t  {\n\t\t  String realSourceFileFoldername=null;\n\t\t  String realSourceWildcard=null;\n\t\t  FileObject sourcefile=null;\n\t\t  FileObject file=null;\n\t\t  \n\t\t  ZipOutputStream zipOutputStream = null;\n\t\t  File masterZipfile = null;\n\n\t\t  if(meta.isZipFilenameDynamic())  data.ZipFilename=data.previousRowMeta.getString(r,data.indexOfDynamicZipFilename);\n\n\t\t  try{\n\n\t\t\t  if(meta.isDynamicFilename()) {\n\t\t\t\t // dynamic attached filenames\n\t\t\t\t  if(data.indexOfSourceFilename>-1)\n\t\t\t\t\t  realSourceFileFoldername= data.previousRowMeta.getString(r,data.indexOfSourceFilename);\n\t\t\t\t  \n\t\t\t\t  if(data.indexOfSourceWildcard>-1)\n\t\t\t\t\t  realSourceWildcard= data.previousRowMeta.getString(r,data.indexOfSourceWildcard);\n\t\t\t\t  \n\t\t\t  }else {\n\t\t\t\t// static attached filenames\n\t\t\t\trealSourceFileFoldername=environmentSubstitute(meta.getSourceFileFoldername()) ; \n\t\t\t\trealSourceWildcard=environmentSubstitute(meta.getSourceWildcard()) ; \n\t\t\t  }\n\t\t\t  \n\t\t\t\n\t\t\t\tif(!Const.isEmpty(realSourceFileFoldername)){\n\t\t\t\t\tsourcefile=KettleVFS.getFileObject(realSourceFileFoldername);\n\t\t\t\t\tif(sourcefile.exists()){\n\t\t\t\t\t\tlong FileSize=0;\n\t\t\t\t\t\tFileObject list[]=null;\n\t\t\t\t\t\tif(sourcefile.getType()==FileType.FILE) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlist = new FileObject[1];\n\t\t\t\t\t\t\tlist[0]=sourcefile; \n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tlist = sourcefile.findFiles(new TextFileSelector (sourcefile.toString(),realSourceWildcard));  \n\t\t\t\t\t\tif(list.length>0){\n\n\t\t\t\t\t\t\t boolean zipFiles=meta.isZipFiles();\n\t\t\t\t\t\t\tif(zipFiles && data.zipFileLimit==0){\n\t\t\t\t\t            masterZipfile = new File(System.getProperty(\"java.io.tmpdir\") + Const.FILE_SEPARATOR\n\t\t\t\t\t                    + environmentSubstitute(data.ZipFilename));\n\t\t\t\t\t                \n\t\t\t\t\t            zipOutputStream = new ZipOutputStream(new FileOutputStream(masterZipfile));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\t \tfor ( int i=0; i < list.length; i++ ) {\n\t\n\t\t\t\t\t\t    \t  file=KettleVFS.getFileObject(KettleVFS.getFilename(list[i]));\n\t\t\t\t\t\t    \t  \n\t\t\t\t\t\t    \t  if(zipFiles){\n\t\t\t\t\t\t    \t\t  \n\t\t\t\t\t\t    \t\t  if(data.zipFileLimit==0)\n\t\t\t\t\t\t    \t\t  {\n\t\t\t\t\t\t\t    \t\t  ZipEntry zipEntry = new ZipEntry(file.getName().getBaseName());\n\t\t\t\t\t\t                  zipOutputStream.putNextEntry(zipEntry);\n\t\n\t\t\t\t\t\t                  // Now put the content of this file into this archive...\n\t\t\t\t\t\t                  BufferedInputStream inputStream = new BufferedInputStream(file.getContent().getInputStream());\n\t\t\t\t\t\t                  int c;\n\t\t\t\t\t\t                  while ((c = inputStream.read()) >= 0)\n\t\t\t\t\t\t                  {\n\t\t\t\t\t\t                    zipOutputStream.write(c);\n\t\t\t\t\t\t                  }\n\t\t\t\t\t\t                  inputStream.close();\n\t\t\t\t\t\t                  zipOutputStream.closeEntry();  \n\t\t\t\t\t\t    \t\t  }else\n\t\t\t\t\t\t    \t\t\t  FileSize+=file.getContent().getSize();\n\t\t\t\t\t\t    \t  }else\n\t\t\t\t\t\t    \t  {\n\t\t\t\t\t\t    \t\t  addAttachedFilePart(file);\n\t\t\t\t\t\t    \t  }\n\t\t\t\t\t        } // end for\n\t\t\t\t\t\t \tif(zipFiles) {\t\n\t\t\t\t\t\t \t\tif(log.isDebug()) log.logDebug(toString() ,Messages.getString(\"Mail.Log.FileSize\",\"\"+FileSize));\n\t\t\t\t\t\t \t\tif(log.isDebug()) log.logDebug(toString() ,Messages.getString(\"Mail.Log.LimitSize\",\"\"+data.zipFileLimit));\n\t\t\t\t\t\t \t\t\n\t\t\t\t\t\t \t\tif(data.zipFileLimit>0 && FileSize>data.zipFileLimit){\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t            masterZipfile = new File(System.getProperty(\"java.io.tmpdir\") + Const.FILE_SEPARATOR\n\t\t\t\t\t\t\t                    + environmentSubstitute(data.ZipFilename));\n\t\t\t\t\t\t\t                \n\t\t\t\t\t\t\t            zipOutputStream = new ZipOutputStream(new FileOutputStream(masterZipfile));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t \t\t\tfor ( int i=0; i < list.length; i++ ) {\n\t\t\t\t\t\t \t\t\t\t\n\t\t\t\t\t\t \t\t\t\tfile=KettleVFS.getFileObject(KettleVFS.getFilename(list[i]));\n\t\t\t\t\t\t \t\t\t\t\n\t\t\t\t\t\t \t\t\t\t ZipEntry zipEntry = new ZipEntry(file.getName().getBaseName());\n\t\t\t\t\t\t                  zipOutputStream.putNextEntry(zipEntry);\n\t\n\t\t\t\t\t\t                  // Now put the content of this file into this archive...\n\t\t\t\t\t\t                  BufferedInputStream inputStream = new BufferedInputStream(file.getContent().getInputStream());\n\t\t\t\t\t\t                  int c;\n\t\t\t\t\t\t                  while ((c = inputStream.read()) >= 0)\n\t\t\t\t\t\t                  {\n\t\t\t\t\t\t                    zipOutputStream.write(c);\n\t\t\t\t\t\t                  }\n\t\t\t\t\t\t                  inputStream.close();\n\t\t\t\t\t\t                  zipOutputStream.closeEntry();  \n\t\t\t\t\t\t \t\t\t\t\n\t\t\t\t\t\t \t\t\t}\n\t\t\t\t\t\t \t\t\t\n\t\t\t\t\t\t \t\t}\n\t\t\t\t\t\t \t\tif(data.zipFileLimit>0 && FileSize>data.zipFileLimit || data.zipFileLimit==0)\n\t\t\t\t\t\t \t\t{\n\t\t\t\t\t\t \t\t\tfile=KettleVFS.getFileObject(masterZipfile.getAbsolutePath());\n\t\t\t\t\t\t \t\t\taddAttachedFilePart(file); \n\t\t\t\t\t\t \t\t}\n\t\t\t\t\t\t \t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tlog.logError(toString(),Messages.getString(\"Mail.Error.SourceFileFolderNotExists\",realSourceFileFoldername));\n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t\t}catch(Exception e)\n\t\t\t{\n\t\t\t\tlog.logError(toString(),e.getMessage());\n\t\t\t}\n\t\t\tfinally{\n\t\t\t\tif(sourcefile!=null){try{sourcefile.close();}catch(Exception e){}}\n\t\t\t\tif(file!=null){try{file.close();}catch(Exception e){}}\n\t\t\t\t\n\t\t\t\t  if (zipOutputStream != null){\n\t                try{\n\t                  zipOutputStream.finish();\n\t                  zipOutputStream.close();\n\t                } catch (IOException e)\n\t                {\n\t                  log.logError(toString(), \"Unable to close attachement zip file archive : \" + e.toString());\n\t                }\n\t              }\n\t\t\t}\n\t\t\t\n\t  }","commit_id":"aea86fe433613e72fe925738d68c40adca4c2e2a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public  void sendMail(Object[] r,String server, String port,\n\t\t\t  String replyAddress,String replyName,String destination,String destinationCc,\n\t\t\t  String destinationBCc,\n\t\t\t  String contactPerson, String contactPhone,\n\t\t\t  String authenticationUser,String authenticationPassword,\n\t\t\t  String mailsubject, String comment) throws Exception\n\t  {\n\n\t      // Send an e-mail...\n\t      // create some properties and get the default Session\n\n\t      String protocol = \"smtp\";\n\t      if (meta.isUsingAuthentication()) {\n\t    \tif (meta.getSecureConnectionType().equals(\"TLS\")){\n\t    \t\t// Allow TLS authentication\n\t    \t\tdata.props.put(\"mail.smtp.starttls.enable\",\"true\"); \n\t    \t}\n\t    \telse{\n\t    \t\t protocol = \"smtps\";\n\t    \t      // required to get rid of a SSL exception :\n\t    \t      //  nested exception is:\n\t    \t  \t  //  javax.net.ssl.SSLException: Unsupported record version Unknown\n\t    \t      data.props.put(\"mail.smtps.quitwait\", \"false\");\n\t    \t}\n\t      }\n\t      data.props.put(\"mail.\" + protocol + \".host\", environmentSubstitute(server));\n\t      if (!Const.isEmpty(port))\n\t        data.props.put(\"mail.\" + protocol + \".port\", environmentSubstitute(port));\n\t      boolean debug = log.getLogLevel() >= LogWriter.LOG_LEVEL_DEBUG;\n\n\t      if (debug) data.props.put(\"mail.debug\", \"true\");\n\n\t      if (meta.isUsingAuthentication())  data.props.put(\"mail.\" + protocol + \".auth\", \"true\");\n\n\t      Session session = Session.getInstance(data.props);\n\t      session.setDebug(debug);\n\n\t      // create a message\n\t      Message msg = new MimeMessage(session);\n\t      \n\t      // set message priority\n\t      if (meta.isUsePriority()) {\n\t    \t String priority_int=\"1\";\n\t    \t if (meta.getPriority().equals(\"low\"))  \t\t  priority_int=\"3\";\n\t    \t if (meta.getPriority().equals(\"normal\")) \t\t  priority_int=\"2\";\n\t    \t  \n\t\t\t msg.setHeader(\"X-Priority\",priority_int); //(String)int between 1= high and 3 = low.\n\t\t\t msg.setHeader(\"Importance\", meta.getImportance());\n\t\t\t //seems to be needed for MS Outlook.\n\t\t\t //where it returns a string of high /normal /low.\n\t      }\n\t\n\t      String email_address = environmentSubstitute(replyAddress);\n\t      if (!Const.isEmpty(email_address)){\n\t    \t// get replay to name\n\t    \tString replay_to_name = environmentSubstitute(replyName);\n\t    \tif(!Const.isEmpty(replay_to_name)) email_address=replay_to_name+'<'+email_address+'>';\t \t \n\t        msg.setFrom(new InternetAddress(email_address));\n\t      } else {\n\t        throw new MessagingException(Messages.getString(\"Mail.Error.ReplyEmailNotFilled\"));\n\t      }\n\t\n\t      // Split the mail-address: space separated\n\t      String destinations[] = environmentSubstitute(destination).split(\" \");\n\t      InternetAddress[] address = new InternetAddress[destinations.length];\n\t      for (int i = 0; i < destinations.length; i++)\n\t        address[i] = new InternetAddress(destinations[i]);\n\t\n\t      msg.setRecipients(Message.RecipientType.TO, address);\n\t\n\t      String realdestinationCc=environmentSubstitute(destinationCc);\n\t      if (!Const.isEmpty(realdestinationCc))\n\t      {\n\t        // Split the mail-address Cc: space separated\n\t        String destinationsCc[] = realdestinationCc.split(\" \");\n\t        InternetAddress[] addressCc = new InternetAddress[destinationsCc.length];\n\t        for (int i = 0; i < destinationsCc.length; i++)\n\t          addressCc[i] = new InternetAddress(destinationsCc[i]);\n\t\n\t        msg.setRecipients(Message.RecipientType.CC, addressCc);\n\t      }\n\t\n\t      String realdestinationBCc=environmentSubstitute(destinationBCc);\n\t      if (!Const.isEmpty(realdestinationBCc))\n\t      {\n\t        // Split the mail-address BCc: space separated\n\t        String destinationsBCc[] = realdestinationBCc.split(\" \");\n\t        InternetAddress[] addressBCc = new InternetAddress[destinationsBCc.length];\n\t        for (int i = 0; i < destinationsBCc.length; i++)\n\t          addressBCc[i] = new InternetAddress(destinationsBCc[i]);\n\t\n\t        msg.setRecipients(Message.RecipientType.BCC, addressBCc);\n\t      }\n\t\n\t      if (mailsubject!=null)   msg.setSubject(mailsubject);\n\n\t      msg.setSentDate(new Date());\n\t      StringBuffer messageText = new StringBuffer();\n\t\n\t      if (comment != null)   messageText.append(comment).append(Const.CR).append(Const.CR);\n\t    \n\t\n\t      if (meta.getIncludeDate())\n\t        messageText.append(Messages.getString(\"Mail.Log.Comment.MsgDate\") +\": \").append(XMLHandler.date2string(new Date())).append(Const.CR).append(\n\t            Const.CR);\n\t\n\t\n\t      if (!meta.isOnlySendComment()\n\t          && (!Const.isEmpty(environmentSubstitute(contactPerson)) || !Const\n\t              .isEmpty(environmentSubstitute(contactPhone)))){\n\t        messageText.append(Messages.getString(\"Mail.Log.Comment.ContactInfo\") + \" :\").append(Const.CR);\n\t        messageText.append(\"---------------------\").append(Const.CR);\n\t        messageText.append(Messages.getString(\"Mail.Log.Comment.PersonToContact\")+\" : \").append(environmentSubstitute(contactPerson)).append(Const.CR);\n\t        messageText.append(Messages.getString(\"Mail.Log.Comment.Tel\") + \"  : \").append(environmentSubstitute(contactPhone)).append(Const.CR);\n\t        messageText.append(Const.CR);\n\t      }\n\t\n\t  \t  Multipart parts = new MimeMultipart();\n\t      MimeBodyPart part1 = new MimeBodyPart(); // put the text in the\n\t      // 1st part\n\t\n\t      if (meta.isUseHTML()){\n\t        if (!Const.isEmpty(meta.getEncoding()))\n\t          part1.setContent(messageText.toString(), \"text/html; \" + \"charset=\" + meta.getEncoding());\n\t        else\n\t          part1.setContent(messageText.toString(), \"text/html; \" + \"charset=ISO-8859-1\");\n\t      } else\n\t        part1.setText(messageText.toString());\n\t\n\t      parts.addBodyPart(part1);\n\t      \n\t      // attached files\n\t      if(meta.isDynamicAttachedFilenames()) setAttachedFilesList(r,log);\n          // add the part with the file in the BodyPart();\n\t      if(data.files.getSize()>0)  parts.addBodyPart(data.files);\n\t      msg.setContent(parts);\n\t      \n\t      Transport transport = null;\n\t      try {\n\t        transport = session.getTransport(protocol);\n\t        if (meta.isUsingAuthentication()) {\n\t          if (!Const.isEmpty(port)){\n\t            transport.connect(environmentSubstitute(Const.NVL(server, \"\")), Integer\n\t                .parseInt(environmentSubstitute(Const.NVL(port, \"\"))), environmentSubstitute(Const.NVL(\n\t                authenticationUser, \"\")), environmentSubstitute(Const.NVL(authenticationPassword, \"\")));\n\t          }else {\n\t            transport.connect(environmentSubstitute(Const.NVL(server, \"\")), environmentSubstitute(Const.NVL(\n\t                authenticationUser, \"\")), environmentSubstitute(Const.NVL(authenticationPassword, \"\")));\n\t          }\n\t        } else {\n\t          transport.connect();\n\t        }\n\t        transport.sendMessage(msg, msg.getAllRecipients());\n\t      } finally {\n\t        if (transport != null) transport.close();\n\t      }\n\t     \n\n\t  }","id":52702,"modified_method":"public  void sendMail(Object[] r,String server, String port,\n\t\t\t  String replyAddress,String replyName,String destination,String destinationCc,\n\t\t\t  String destinationBCc,\n\t\t\t  String contactPerson, String contactPhone,\n\t\t\t  String authenticationUser,String authenticationPassword,\n\t\t\t  String mailsubject, String comment) throws Exception\n\t  {\n\n\t      // Send an e-mail...\n\t      // create some properties and get the default Session\n\n\t      String protocol = \"smtp\";\n\t      if (meta.isUsingAuthentication()) {\n\t    \tif (meta.getSecureConnectionType().equals(\"TLS\")){\n\t    \t\t// Allow TLS authentication\n\t    \t\tdata.props.put(\"mail.smtp.starttls.enable\",\"true\"); \n\t    \t}\n\t    \telse{\n\t    \t\t protocol = \"smtps\";\n\t    \t      // required to get rid of a SSL exception :\n\t    \t      //  nested exception is:\n\t    \t  \t  //  javax.net.ssl.SSLException: Unsupported record version Unknown\n\t    \t      data.props.put(\"mail.smtps.quitwait\", \"false\");\n\t    \t}\n\t      }\n\t      data.props.put(\"mail.\" + protocol + \".host\", environmentSubstitute(server));\n\t      if (!Const.isEmpty(port))\n\t        data.props.put(\"mail.\" + protocol + \".port\", environmentSubstitute(port));\n\t      boolean debug = log.getLogLevel() >= LogWriter.LOG_LEVEL_DEBUG;\n\n\t      if (debug) data.props.put(\"mail.debug\", \"true\");\n\n\t      if (meta.isUsingAuthentication())  data.props.put(\"mail.\" + protocol + \".auth\", \"true\");\n\n\t      Session session = Session.getInstance(data.props);\n\t      session.setDebug(debug);\n\n\t      // create a message\n\t      Message msg = new MimeMessage(session);\n\t      \n\t      // set message priority\n\t      if (meta.isUsePriority()) {\n\t    \t String priority_int=\"1\";\n\t    \t if (meta.getPriority().equals(\"low\"))  \t\t  priority_int=\"3\";\n\t    \t if (meta.getPriority().equals(\"normal\")) \t\t  priority_int=\"2\";\n\t    \t  \n\t\t\t msg.setHeader(\"X-Priority\",priority_int); //(String)int between 1= high and 3 = low.\n\t\t\t msg.setHeader(\"Importance\", meta.getImportance());\n\t\t\t //seems to be needed for MS Outlook.\n\t\t\t //where it returns a string of high /normal /low.\n\t      }\n\t\n\t      String email_address = environmentSubstitute(replyAddress);\n\t      if (!Const.isEmpty(email_address)){\n\t    \t// get replay to name\n\t    \tString replay_to_name = environmentSubstitute(replyName);\n\t    \tif(!Const.isEmpty(replay_to_name)) email_address=replay_to_name+'<'+email_address+'>';\t \t \n\t        msg.setFrom(new InternetAddress(email_address));\n\t      } else {\n\t        throw new MessagingException(Messages.getString(\"Mail.Error.ReplyEmailNotFilled\"));\n\t      }\n\t\n\t      // Split the mail-address: space separated\n\t      String destinations[] = environmentSubstitute(destination).split(\" \");\n\t      InternetAddress[] address = new InternetAddress[destinations.length];\n\t      for (int i = 0; i < destinations.length; i++)\n\t        address[i] = new InternetAddress(destinations[i]);\n\t\n\t      msg.setRecipients(Message.RecipientType.TO, address);\n\t\n\t      String realdestinationCc=environmentSubstitute(destinationCc);\n\t      if (!Const.isEmpty(realdestinationCc))\n\t      {\n\t        // Split the mail-address Cc: space separated\n\t        String destinationsCc[] = realdestinationCc.split(\" \");\n\t        InternetAddress[] addressCc = new InternetAddress[destinationsCc.length];\n\t        for (int i = 0; i < destinationsCc.length; i++)\n\t          addressCc[i] = new InternetAddress(destinationsCc[i]);\n\t\n\t        msg.setRecipients(Message.RecipientType.CC, addressCc);\n\t      }\n\t\n\t      String realdestinationBCc=environmentSubstitute(destinationBCc);\n\t      if (!Const.isEmpty(realdestinationBCc))\n\t      {\n\t        // Split the mail-address BCc: space separated\n\t        String destinationsBCc[] = realdestinationBCc.split(\" \");\n\t        InternetAddress[] addressBCc = new InternetAddress[destinationsBCc.length];\n\t        for (int i = 0; i < destinationsBCc.length; i++)\n\t          addressBCc[i] = new InternetAddress(destinationsBCc[i]);\n\t\n\t        msg.setRecipients(Message.RecipientType.BCC, addressBCc);\n\t      }\n\t\n\t      if (mailsubject!=null)   msg.setSubject(mailsubject);\n\n\t      msg.setSentDate(new Date());\n\t      StringBuffer messageText = new StringBuffer();\n\t\n\t      if (comment != null)   messageText.append(comment).append(Const.CR).append(Const.CR);\n\t    \n\t\n\t      if (meta.getIncludeDate())\n\t        messageText.append(Messages.getString(\"Mail.Log.Comment.MsgDate\") +\": \").append(XMLHandler.date2string(new Date())).append(Const.CR).append(\n\t            Const.CR);\n\t\n\t\n\t      if (!meta.isOnlySendComment()\n\t          && (!Const.isEmpty(environmentSubstitute(contactPerson)) || !Const\n\t              .isEmpty(environmentSubstitute(contactPhone)))){\n\t        messageText.append(Messages.getString(\"Mail.Log.Comment.ContactInfo\") + \" :\").append(Const.CR);\n\t        messageText.append(\"---------------------\").append(Const.CR);\n\t        messageText.append(Messages.getString(\"Mail.Log.Comment.PersonToContact\")+\" : \").append(environmentSubstitute(contactPerson)).append(Const.CR);\n\t        messageText.append(Messages.getString(\"Mail.Log.Comment.Tel\") + \"  : \").append(environmentSubstitute(contactPhone)).append(Const.CR);\n\t        messageText.append(Const.CR);\n\t      }\n\t \t  \n\t      MimeBodyPart part1 = new MimeBodyPart(); // put the text in the\n\t      // 1st part\n\t\n\t      if (meta.isUseHTML()){\n\t        if (!Const.isEmpty(meta.getEncoding()))\n\t          part1.setContent(messageText.toString(), \"text/html; \" + \"charset=\" + meta.getEncoding());\n\t        else\n\t          part1.setContent(messageText.toString(), \"text/html; \" + \"charset=ISO-8859-1\");\n\t      } else\n\t        part1.setText(messageText.toString());\n\t\n\t      data.parts.addBodyPart(part1);\n\t      \n\t      // attached files\n\t      if(meta.isDynamicFilename()) setAttachedFilesList(r,log);\n\t      else setAttachedFilesList(null,log);\n  \n\t      msg.setContent(data.parts);\n\t      \n\t      Transport transport = null;\n\t      try {\n\t        transport = session.getTransport(protocol);\n\t        if (meta.isUsingAuthentication()) {\n\t          if (!Const.isEmpty(port)){\n\t            transport.connect(environmentSubstitute(Const.NVL(server, \"\")), Integer\n\t                .parseInt(environmentSubstitute(Const.NVL(port, \"\"))), environmentSubstitute(Const.NVL(\n\t                authenticationUser, \"\")), environmentSubstitute(Const.NVL(authenticationPassword, \"\")));\n\t          }else {\n\t            transport.connect(environmentSubstitute(Const.NVL(server, \"\")), environmentSubstitute(Const.NVL(\n\t                authenticationUser, \"\")), environmentSubstitute(Const.NVL(authenticationPassword, \"\")));\n\t          }\n\t        } else {\n\t          transport.connect();\n\t        }\n\t        transport.sendMessage(msg, msg.getAllRecipients());\n\t      } finally {\n\t        if (transport != null) transport.close();\n\t      }\n\t     \n\n\t  }","commit_id":"aea86fe433613e72fe925738d68c40adca4c2e2a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException\n\t{\n\t\tmeta=(MailMeta)smi;\n\t\tdata=(MailData)sdi;\n\n\t\tObject[] r=getRow();    // get row, set busy!\n\t\tif (r==null)  // no more input to be expected...\n\t\t{\n\t\t\tsetOutputDone();\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif(first)\n\t\t{\n\t\t\tfirst=false;\n\t\t\t\n\t\t\t// get the RowMeta\n\t\t\tdata.previousRowMeta = getInputRowMeta().clone();\n\t\t\t\n\t\t\t// Check is filename field is provided\n\t\t\tif (Const.isEmpty(meta.getDestination()))\n\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Log.DestinationFieldEmpty\"));\n\t\t\t\n\t\t\t\n\t\t\t// Check is replyname field is provided\n\t\t\tif (Const.isEmpty(meta.getReplyAddress()))\n\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Log.ReplyFieldEmpty\"));\n\t\t\t\n\t\t\t// Check is SMTP server is provided\n\t\t\tif (Const.isEmpty(meta.getServer()))\n\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Log.ServerFieldEmpty\"));\n\t\t\t\n\t\t\t\n\t\t\t// Check Attached filenames when dynamic\n\t\t\tif (meta.isDynamicAttachedFilenames() && Const.isEmpty(meta.getDynamicFieldname()))\n\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Log.DynamicFilenameFielddEmpty\"));\n\t\t\t\n\t\t\t\n\t\t\t// Check  Attached zipfilename when dynamic\n\t\t\tif (meta.isZipFilenameDynamic() && Const.isEmpty(meta.getDynamicZipFilenameField()))\n\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Log.DynamicZipFilenameFieldEmpty\"));\n\t\t\t\n\t\t\tif(meta.isZipFiles() && Const.isEmpty(meta.getZipFilename()))\n\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Log.ZipFilenameEmpty\"));\t\n\t\t\t\n\t\t\t// check authentication \n\t\t\tif(meta.isUsingAuthentication()) {\n\t\t\t\t// check authentication user\n\t\t\t\tif (Const.isEmpty(meta.getAuthenticationUser()))\n\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Log.AuthenticationUserFieldEmpty\"));\n\t\t\t\t\n\t\t\t\t// check authentication pass\n\t\t\t\tif (Const.isEmpty(meta.getAuthenticationPassword()))\n\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Log.AuthenticationPasswordFieldEmpty\"));\n\t\t\t}\n\t\t\t\n\t\t\t// cache the position of the destination field\t\t\t\n\t\t\tif (data.indexOfDestination<0) {\t\n\t\t\t\tString realDestinationFieldname=environmentSubstitute(meta.getDestination());\n\t\t\t\tdata.indexOfDestination =data.previousRowMeta.indexOfValue(realDestinationFieldname);\n\t\t\t\tif (data.indexOfDestination<0)\n\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotFindDestinationField\",realDestinationFieldname)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t}  \n\t\t\t\n\t\t\t// Cc\n\t\t\tif (!Const.isEmpty(meta.getDestinationCc())) {\n\t\t\t\t// cache the position of the destination field\t\t\t\n\t\t\t\tif (data.indexOfDestinationCc<0) {\t\n\t\t\t\t\tString realDestinationCcFieldname=environmentSubstitute(meta.getDestinationCc());\n\t\t\t\t\tdata.indexOfDestinationCc =data.previousRowMeta.indexOfValue(realDestinationCcFieldname);\n\t\t\t\t\tif (data.indexOfDestinationCc<0)\n\t\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotFindDestinationCcField\",realDestinationCcFieldname)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}  \n\t\t\t}\n\t\t\t// BCc\n\t\t\tif (!Const.isEmpty(meta.getDestinationCc())) {\n\t\t\t\t// cache the position of the destination field\t\t\t\n\t\t\t\tif (data.indexOfDestinationBCc<0) {\t\n\t\t\t\t\tString realDestinationBCcFieldname=environmentSubstitute(meta.getDestinationBCc());\n\t\t\t\t\tdata.indexOfDestinationBCc =data.previousRowMeta.indexOfValue(realDestinationBCcFieldname);\n\t\t\t\t\tif (data.indexOfDestinationBCc<0)\n\t\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotFindDestinationBCcField\",realDestinationBCcFieldname)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}  \n\t\t\t}\n\t\t\t// Reply\n\t\t\tif (!Const.isEmpty(meta.getReplyName())){\n\t\t\t\t// cache the position of the destination field\t\t\t\n\t\t\t\tif (data.indexOfReplyName<0){\t\n\t\t\t\t\tString realReplyName=environmentSubstitute(meta.getReplyName());\n\t\t\t\t\tdata.indexOfReplyName =data.previousRowMeta.indexOfValue(realReplyName);\n\t\t\t\t\tif (data.indexOfReplyName<0)\n\t\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotFindReplyNameField\",realReplyName)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}  \n\t\t\t}\n\t\t\t// Reply address\n\t\t\t// cache the position of the destination field\t\t\t\n\t\t\tif (data.indexOfReplyAddress<0) {\t\n\t\t\t\tString realReplyAddress=environmentSubstitute(meta.getReplyAddress());\n\t\t\t\tdata.indexOfReplyAddress =data.previousRowMeta.indexOfValue(realReplyAddress);\n\t\t\t\tif (data.indexOfReplyAddress<0)\n\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotFindReplyAddressField\",realReplyAddress)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t}  \n\t\t\t\n\t\t\t// Contact Person\n\t\t\tif (!Const.isEmpty(meta.getContactPerson())) {\n\t\t\t\t// cache the position of the destination field\t\t\t\n\t\t\t\tif (data.indexOfContactPerson<0) {\t\n\t\t\t\t\tString realContactPerson=environmentSubstitute(meta.getContactPerson());\n\t\t\t\t\tdata.indexOfContactPerson =data.previousRowMeta.indexOfValue(realContactPerson);\n\t\t\t\t\tif (data.indexOfContactPerson<0)\n\t\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotFindContactPersonField\",realContactPerson)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}  \n\t\t\t}\n\t\t\t// Contact Phone\n\t\t\tif (!Const.isEmpty(meta.getContactPhone())){\n\t\t\t\t// cache the position of the destination field\t\t\t\n\t\t\t\tif (data.indexOfContactPhone<0){\t\n\t\t\t\t\tString realContactPhone=environmentSubstitute(meta.getContactPhone());\n\t\t\t\t\tdata.indexOfContactPhone =data.previousRowMeta.indexOfValue(realContactPhone);\n\t\t\t\t\tif (data.indexOfContactPhone<0)\n\t\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotFindContactPhoneField\",realContactPhone)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}  \n\t\t\t}\n\t\t\t// cache the position of the Server field\t\t\t\n\t\t\tif (data.indexOfServer<0){\t\n\t\t\t\tString realServer=environmentSubstitute(meta.getServer());\n\t\t\t\tdata.indexOfServer =data.previousRowMeta.indexOfValue(realServer);\n\t\t\t\tif (data.indexOfServer<0)\n\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotFindServerField\",realServer)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t} \n\t\t\t// Port\n\t\t\tif (!Const.isEmpty(meta.getPort())){\n\t\t\t\t// cache the position of the port field\t\t\t\n\t\t\t\tif (data.indexOfPort<0){\t\n\t\t\t\t\tString realPort=environmentSubstitute(meta.getPort());\n\t\t\t\t\tdata.indexOfPort =data.previousRowMeta.indexOfValue(realPort);\n\t\t\t\t\tif (data.indexOfPort<0)\n\t\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotFindPortField\",realPort)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}  \n\t\t\t}\n\t\t\t// Authentication\n\t\t\tif(meta.isUsingAuthentication()){\n\t\t\t\t// cache the position of the Authentication user field\t\t\t\n\t\t\t\tif (data.indexOfAuthenticationUser<0){\t\n\t\t\t\t\tString realAuthenticationUser=environmentSubstitute(meta.getAuthenticationUser());\n\t\t\t\t\tdata.indexOfAuthenticationUser =data.previousRowMeta.indexOfValue(realAuthenticationUser);\n\t\t\t\t\tif (data.indexOfAuthenticationUser<0)\n\t\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotFindAuthenticationUserField\",realAuthenticationUser)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// cache the position of the Authentication password field\t\t\t\n\t\t\t\tif (data.indexOfAuthenticationPass<0){\t\n\t\t\t\t\tString realAuthenticationPassword=environmentSubstitute(meta.getAuthenticationPassword());\n\t\t\t\t\tdata.indexOfAuthenticationPass =data.previousRowMeta.indexOfValue(realAuthenticationPassword);\n\t\t\t\t\tif (data.indexOfAuthenticationPass<0)\n\t\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotFindAuthenticationPassField\",realAuthenticationPassword)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Mail Subject\n\t\t\tif (!Const.isEmpty(meta.getSubject())){\n\t\t\t\t// cache the position of the subject field\t\t\t\n\t\t\t\tif (data.indexOfSubject<0){\t\n\t\t\t\t\tString realSubject=environmentSubstitute(meta.getSubject());\n\t\t\t\t\tdata.indexOfSubject =data.previousRowMeta.indexOfValue(realSubject);\n\t\t\t\t\tif (data.indexOfSubject<0)\n\t\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotFindSubjectField\",realSubject)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}  \n\t\t\t}\n\t\t\t// Mail Comment\n\t\t\tif (!Const.isEmpty(meta.getComment())){\n\t\t\t\t// cache the position of the comment field\t\t\t\n\t\t\t\tif (data.indexOfComment<0){\t\n\t\t\t\t\tString realComment=environmentSubstitute(meta.getComment());\n\t\t\t\t\tdata.indexOfComment =data.previousRowMeta.indexOfValue(realComment);\n\t\t\t\t\tif (data.indexOfComment<0)\n\t\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotFindCommentField\",realComment)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}  \n\t\t\t}\t\n\t\t\t\n\t\t\t// Dynamic Zipfilename\n\t\t\tif (meta.isZipFilenameDynamic()){\n\t\t\t\t// cache the position of the attached source filename field\t\t\t\n\t\t\t\tif (data.indexOfDynamicZipFilename<0){\t\n\t\t\t\t\tString realZipFilename=environmentSubstitute(meta.getDynamicZipFilenameField());\n\t\t\t\t\tdata.indexOfDynamicZipFilename =data.previousRowMeta.indexOfValue(realZipFilename);\n\t\t\t\t\tif (data.indexOfDynamicZipFilename<0)\n\t\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotSourceAttachedZipFilenameField\",realZipFilename)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}  \n\t\t\t}\n\t\t\tdata.zipFileLimit=Const.toLong(environmentSubstitute(meta.getZipLimitSize()), 0);\n\t\t\tif(data.zipFileLimit>0) data.zipFileLimit=data.zipFileLimit*1048576; // Mo\n\t\t\t\n\t\t\tif(!meta.isZipFilenameDynamic()) data.ZipFilename=environmentSubstitute(meta.getZipFilename());\n\t\t\t \n\t\t\t// Attached files\n\t\t\tif(meta.isDynamicAttachedFilenames()){\n\t\t\t\t// cache the position of the attached source filename field\t\t\t\n\t\t\t\tif (data.indexOfSourceFilename<0){\t\n\t\t\t\t\tString realSourceattachedFilename=environmentSubstitute(meta.getSourceFileFoldername());\n\t\t\t\t\tdata.indexOfSourceFilename =data.previousRowMeta.indexOfValue(realSourceattachedFilename);\n\t\t\t\t\tif (data.indexOfSourceFilename<0)\n\t\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotSourceAttachedFilenameField\",realSourceattachedFilename)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}  \n\t\t\t\t\n\t\t\t\t// cache the position of the attached wildcard field\t\t\n\t\t\t\tif(!Const.isEmpty(meta.getSourceWildcard())){\n\t\t\t\t\tif (data.indexOfSourceWildcard<0){\t\n\t\t\t\t\t\tString realSourceattachedWildcard=environmentSubstitute(meta.getSourceWildcard());\n\t\t\t\t\t\tdata.indexOfSourceWildcard =data.previousRowMeta.indexOfValue(realSourceattachedWildcard);\n\t\t\t\t\t\tif (data.indexOfSourceWildcard<0)\n\t\t\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotSourceAttachedWildcard\",realSourceattachedWildcard)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t\t}  \n\t\t\t\t}\t\t\n\t\t\t}else{\n\t\t\t\ttry{\n\t\t\t\tsetAttachedFilesList(r,log);\n\t\t\t\t}catch(Exception e){}\n\t\t\t}\t\n\t\t} // end if first\n\t\t\n\t\tboolean sendToErrorRow=false;\n\t\tString errorMessage = null;\n\t\t \n\t\ttry{\n\t\t\t// get values\n\t\t\tString maildestination= data.previousRowMeta.getString(r,data.indexOfDestination);\n\t\t\tString maildestinationCc= null;\n\t\t\tif(data.indexOfDestinationCc>-1) maildestinationCc=data.previousRowMeta.getString(r,data.indexOfDestinationCc);\n\t\t\tString maildestinationBCc= null;\n\t\t\tif(data.indexOfDestinationBCc>-1) maildestinationBCc=data.previousRowMeta.getString(r,data.indexOfDestinationBCc);\n\t\t\t\n\t\t\tString mailreplyname= null;\n\t\t\tif(data.indexOfReplyName>-1) mailreplyname=data.previousRowMeta.getString(r,data.indexOfReplyName);\n\t\t\tString mailreplyaddress=data.previousRowMeta.getString(r,data.indexOfReplyAddress);\n\t\t\t\n\t\t\tString contactperson= null;\n\t\t\tif(data.indexOfContactPerson>-1) contactperson=data.previousRowMeta.getString(r,data.indexOfContactPerson);\n\t\t\tString contactphone= null;\n\t\t\tif(data.indexOfContactPhone>-1) contactphone=data.previousRowMeta.getString(r,data.indexOfContactPhone);\n\t\t\t\n\t\t\tString servername=data.previousRowMeta.getString(r,data.indexOfServer);\n\t\t\tString port=null;\n\t\t\tif(data.indexOfPort>-1) port=data.previousRowMeta.getString(r,data.indexOfPort);\n\t\t\t\n\t\t\tString authuser=null;\n\t\t\tif(data.indexOfAuthenticationUser>-1) authuser=data.previousRowMeta.getString(r,data.indexOfAuthenticationUser);\n\t\t\tString authpass=null;\n\t\t\tif(data.indexOfAuthenticationPass>-1) authpass=data.previousRowMeta.getString(r,data.indexOfAuthenticationPass);\n\t\t\t\n\t\t\tString subject=null;\n\t\t\tif(data.indexOfSubject>-1) subject=data.previousRowMeta.getString(r,data.indexOfSubject);\n\t\t\t\n\t\t\tString comment=null;\n\t\t\tif(data.indexOfComment>-1) comment=data.previousRowMeta.getString(r,data.indexOfComment);\n\t\t\t\n\t\t\t// send email...\n\t\t\tsendMail(r,servername, port,mailreplyaddress,mailreplyname,maildestination,\n\t\t\t\t\tmaildestinationCc,maildestinationBCc,contactperson,contactphone,\n\t\t\t\t\tauthuser,authpass,subject,comment);\n\t\t\t\n\t\t\tputRow(getInputRowMeta(), r);     // copy row to possible alternate rowset(s).);  // copy row to output rowset(s);\n\n\t        if (log.isRowLevel()) log.logRowlevel(toString(), Messages.getString(\"Mail.Log.LineNumber\",getLinesRead()+\" : \"+getInputRowMeta().getString(r)));\n\t        \n\t\t} catch (Exception e)\n\t\t {\n\t\t\t if (getStepMeta().isDoingErrorHandling()){\n\t\t        sendToErrorRow = true;\n\t\t        errorMessage = e.toString();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Error.General\"), e);\n\t\t\t}\n\t\t\tif (sendToErrorRow){\n\t\t\t   // Simply add this row to the error row\n\t\t\t   putError(getInputRowMeta(), r, 1, errorMessage, null, \"MAIL001\");\n\t\t\t}\n\t\t }\n\t\t\t\n\t\treturn true;\n\t}","id":52703,"modified_method":"public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException\n\t{\n\t\tmeta=(MailMeta)smi;\n\t\tdata=(MailData)sdi;\n\n\t\tObject[] r=getRow();    // get row, set busy!\n\t\tif (r==null)  // no more input to be expected...\n\t\t{\n\t\t\tsetOutputDone();\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif(first)\n\t\t{\n\t\t\tfirst=false;\n\t\t\t\n\t\t\t// get the RowMeta\n\t\t\tdata.previousRowMeta = getInputRowMeta().clone();\n\t\t\t\n\t\t\t// Check is filename field is provided\n\t\t\tif (Const.isEmpty(meta.getDestination()))\n\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Log.DestinationFieldEmpty\"));\n\t\t\t\n\t\t\t\n\t\t\t// Check is replyname field is provided\n\t\t\tif (Const.isEmpty(meta.getReplyAddress()))\n\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Log.ReplyFieldEmpty\"));\n\t\t\t\n\t\t\t// Check is SMTP server is provided\n\t\t\tif (Const.isEmpty(meta.getServer()))\n\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Log.ServerFieldEmpty\"));\n\t\t\t\n\t\t\t\n\t\t\t// Check Attached filenames when dynamic\n\t\t\tif (meta.isDynamicFilename() && Const.isEmpty(meta.getDynamicFieldname()))\n\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Log.DynamicFilenameFielddEmpty\"));\n\t\t\t\n\t\t\t\n\t\t\t// Check  Attached zipfilename when dynamic\n\t\t\tif (meta.isZipFilenameDynamic() && Const.isEmpty(meta.getDynamicZipFilenameField()))\n\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Log.DynamicZipFilenameFieldEmpty\"));\n\t\t\t\n\t\t\tif(meta.isZipFiles() && Const.isEmpty(meta.getZipFilename()))\n\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Log.ZipFilenameEmpty\"));\t\n\t\t\t\n\t\t\t// check authentication \n\t\t\tif(meta.isUsingAuthentication()) {\n\t\t\t\t// check authentication user\n\t\t\t\tif (Const.isEmpty(meta.getAuthenticationUser()))\n\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Log.AuthenticationUserFieldEmpty\"));\n\t\t\t\t\n\t\t\t\t// check authentication pass\n\t\t\t\tif (Const.isEmpty(meta.getAuthenticationPassword()))\n\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Log.AuthenticationPasswordFieldEmpty\"));\n\t\t\t}\n\t\t\t\n\t\t\t// cache the position of the destination field\t\t\t\n\t\t\tif (data.indexOfDestination<0) {\t\n\t\t\t\tString realDestinationFieldname=environmentSubstitute(meta.getDestination());\n\t\t\t\tdata.indexOfDestination =data.previousRowMeta.indexOfValue(realDestinationFieldname);\n\t\t\t\tif (data.indexOfDestination<0)\n\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotFindDestinationField\",realDestinationFieldname)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t}  \n\t\t\t\n\t\t\t// Cc\n\t\t\tif (!Const.isEmpty(meta.getDestinationCc())) {\n\t\t\t\t// cache the position of the destination field\t\t\t\n\t\t\t\tif (data.indexOfDestinationCc<0) {\t\n\t\t\t\t\tString realDestinationCcFieldname=environmentSubstitute(meta.getDestinationCc());\n\t\t\t\t\tdata.indexOfDestinationCc =data.previousRowMeta.indexOfValue(realDestinationCcFieldname);\n\t\t\t\t\tif (data.indexOfDestinationCc<0)\n\t\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotFindDestinationCcField\",realDestinationCcFieldname)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}  \n\t\t\t}\n\t\t\t// BCc\n\t\t\tif (!Const.isEmpty(meta.getDestinationCc())) {\n\t\t\t\t// cache the position of the destination field\t\t\t\n\t\t\t\tif (data.indexOfDestinationBCc<0) {\t\n\t\t\t\t\tString realDestinationBCcFieldname=environmentSubstitute(meta.getDestinationBCc());\n\t\t\t\t\tdata.indexOfDestinationBCc =data.previousRowMeta.indexOfValue(realDestinationBCcFieldname);\n\t\t\t\t\tif (data.indexOfDestinationBCc<0)\n\t\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotFindDestinationBCcField\",realDestinationBCcFieldname)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}  \n\t\t\t}\n\t\t\t// Reply\n\t\t\tif (!Const.isEmpty(meta.getReplyName())){\n\t\t\t\t// cache the position of the destination field\t\t\t\n\t\t\t\tif (data.indexOfReplyName<0){\t\n\t\t\t\t\tString realReplyName=environmentSubstitute(meta.getReplyName());\n\t\t\t\t\tdata.indexOfReplyName =data.previousRowMeta.indexOfValue(realReplyName);\n\t\t\t\t\tif (data.indexOfReplyName<0)\n\t\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotFindReplyNameField\",realReplyName)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}  \n\t\t\t}\n\t\t\t// Reply address\n\t\t\t// cache the position of the destination field\t\t\t\n\t\t\tif (data.indexOfReplyAddress<0) {\t\n\t\t\t\tString realReplyAddress=environmentSubstitute(meta.getReplyAddress());\n\t\t\t\tdata.indexOfReplyAddress =data.previousRowMeta.indexOfValue(realReplyAddress);\n\t\t\t\tif (data.indexOfReplyAddress<0)\n\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotFindReplyAddressField\",realReplyAddress)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t}  \n\t\t\t\n\t\t\t// Contact Person\n\t\t\tif (!Const.isEmpty(meta.getContactPerson())) {\n\t\t\t\t// cache the position of the destination field\t\t\t\n\t\t\t\tif (data.indexOfContactPerson<0) {\t\n\t\t\t\t\tString realContactPerson=environmentSubstitute(meta.getContactPerson());\n\t\t\t\t\tdata.indexOfContactPerson =data.previousRowMeta.indexOfValue(realContactPerson);\n\t\t\t\t\tif (data.indexOfContactPerson<0)\n\t\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotFindContactPersonField\",realContactPerson)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}  \n\t\t\t}\n\t\t\t// Contact Phone\n\t\t\tif (!Const.isEmpty(meta.getContactPhone())){\n\t\t\t\t// cache the position of the destination field\t\t\t\n\t\t\t\tif (data.indexOfContactPhone<0){\t\n\t\t\t\t\tString realContactPhone=environmentSubstitute(meta.getContactPhone());\n\t\t\t\t\tdata.indexOfContactPhone =data.previousRowMeta.indexOfValue(realContactPhone);\n\t\t\t\t\tif (data.indexOfContactPhone<0)\n\t\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotFindContactPhoneField\",realContactPhone)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}  \n\t\t\t}\n\t\t\t// cache the position of the Server field\t\t\t\n\t\t\tif (data.indexOfServer<0){\t\n\t\t\t\tString realServer=environmentSubstitute(meta.getServer());\n\t\t\t\tdata.indexOfServer =data.previousRowMeta.indexOfValue(realServer);\n\t\t\t\tif (data.indexOfServer<0)\n\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotFindServerField\",realServer)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t} \n\t\t\t// Port\n\t\t\tif (!Const.isEmpty(meta.getPort())){\n\t\t\t\t// cache the position of the port field\t\t\t\n\t\t\t\tif (data.indexOfPort<0){\t\n\t\t\t\t\tString realPort=environmentSubstitute(meta.getPort());\n\t\t\t\t\tdata.indexOfPort =data.previousRowMeta.indexOfValue(realPort);\n\t\t\t\t\tif (data.indexOfPort<0)\n\t\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotFindPortField\",realPort)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}  \n\t\t\t}\n\t\t\t// Authentication\n\t\t\tif(meta.isUsingAuthentication()){\n\t\t\t\t// cache the position of the Authentication user field\t\t\t\n\t\t\t\tif (data.indexOfAuthenticationUser<0){\t\n\t\t\t\t\tString realAuthenticationUser=environmentSubstitute(meta.getAuthenticationUser());\n\t\t\t\t\tdata.indexOfAuthenticationUser =data.previousRowMeta.indexOfValue(realAuthenticationUser);\n\t\t\t\t\tif (data.indexOfAuthenticationUser<0)\n\t\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotFindAuthenticationUserField\",realAuthenticationUser)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// cache the position of the Authentication password field\t\t\t\n\t\t\t\tif (data.indexOfAuthenticationPass<0){\t\n\t\t\t\t\tString realAuthenticationPassword=environmentSubstitute(meta.getAuthenticationPassword());\n\t\t\t\t\tdata.indexOfAuthenticationPass =data.previousRowMeta.indexOfValue(realAuthenticationPassword);\n\t\t\t\t\tif (data.indexOfAuthenticationPass<0)\n\t\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotFindAuthenticationPassField\",realAuthenticationPassword)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Mail Subject\n\t\t\tif (!Const.isEmpty(meta.getSubject())){\n\t\t\t\t// cache the position of the subject field\t\t\t\n\t\t\t\tif (data.indexOfSubject<0){\t\n\t\t\t\t\tString realSubject=environmentSubstitute(meta.getSubject());\n\t\t\t\t\tdata.indexOfSubject =data.previousRowMeta.indexOfValue(realSubject);\n\t\t\t\t\tif (data.indexOfSubject<0)\n\t\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotFindSubjectField\",realSubject)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}  \n\t\t\t}\n\t\t\t// Mail Comment\n\t\t\tif (!Const.isEmpty(meta.getComment())){\n\t\t\t\t// cache the position of the comment field\t\t\t\n\t\t\t\tif (data.indexOfComment<0){\t\n\t\t\t\t\tString realComment=environmentSubstitute(meta.getComment());\n\t\t\t\t\tdata.indexOfComment =data.previousRowMeta.indexOfValue(realComment);\n\t\t\t\t\tif (data.indexOfComment<0)\n\t\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotFindCommentField\",realComment)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}  \n\t\t\t}\t\n\t\t\t\n\t\t\t// Dynamic Zipfilename\n\t\t\tif (meta.isZipFilenameDynamic()){\n\t\t\t\t// cache the position of the attached source filename field\t\t\t\n\t\t\t\tif (data.indexOfDynamicZipFilename<0){\t\n\t\t\t\t\tString realZipFilename=environmentSubstitute(meta.getDynamicZipFilenameField());\n\t\t\t\t\tdata.indexOfDynamicZipFilename =data.previousRowMeta.indexOfValue(realZipFilename);\n\t\t\t\t\tif (data.indexOfDynamicZipFilename<0)\n\t\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotSourceAttachedZipFilenameField\",realZipFilename)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}  \n\t\t\t}\n\t\t\tdata.zipFileLimit=Const.toLong(environmentSubstitute(meta.getZipLimitSize()), 0);\n\t\t\tif(data.zipFileLimit>0) data.zipFileLimit=data.zipFileLimit*1048576; // Mo\n\t\t\t\n\t\t\tif(!meta.isZipFilenameDynamic()) data.ZipFilename=environmentSubstitute(meta.getZipFilename());\n\t\t\t \n\t\t\tdata.parts = new MimeMultipart(); \n\t\t\t\n\t\t\t// Attached files\n\t\t\tif(meta.isDynamicFilename()){\n\t\t\t\t// cache the position of the attached source filename field\t\t\t\n\t\t\t\tif (data.indexOfSourceFilename<0){\t\n\t\t\t\t\tString realSourceattachedFilename=environmentSubstitute(meta.getDynamicFieldname());\n\t\t\t\t\tdata.indexOfSourceFilename =data.previousRowMeta.indexOfValue(realSourceattachedFilename);\n\t\t\t\t\tif (data.indexOfSourceFilename<0)\n\t\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotSourceAttachedFilenameField\",realSourceattachedFilename)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}  \n\t\t\t\t\n\t\t\t\t// cache the position of the attached wildcard field\t\t\n\t\t\t\tif(!Const.isEmpty(meta.getSourceWildcard())){\n\t\t\t\t\tif (data.indexOfSourceWildcard<0){\t\n\t\t\t\t\t\tString realSourceattachedWildcard=environmentSubstitute(meta.getDynamicWildcard());\n\t\t\t\t\t\tdata.indexOfSourceWildcard =data.previousRowMeta.indexOfValue(realSourceattachedWildcard);\n\t\t\t\t\t\tif (data.indexOfSourceWildcard<0)\n\t\t\t\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Exception.CouldnotSourceAttachedWildcard\",realSourceattachedWildcard)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t\t}  \n\t\t\t\t}\t\t\n\t\t\t}\n\t\t} // end if first\n\t\t\n\t\tboolean sendToErrorRow=false;\n\t\tString errorMessage = null;\n\t\t \n\t\ttry{\n\t\t\t// get values\n\t\t\tString maildestination= data.previousRowMeta.getString(r,data.indexOfDestination);\n\t\t\tString maildestinationCc= null;\n\t\t\tif(data.indexOfDestinationCc>-1) maildestinationCc=data.previousRowMeta.getString(r,data.indexOfDestinationCc);\n\t\t\tString maildestinationBCc= null;\n\t\t\tif(data.indexOfDestinationBCc>-1) maildestinationBCc=data.previousRowMeta.getString(r,data.indexOfDestinationBCc);\n\t\t\t\n\t\t\tString mailreplyname= null;\n\t\t\tif(data.indexOfReplyName>-1) mailreplyname=data.previousRowMeta.getString(r,data.indexOfReplyName);\n\t\t\tString mailreplyaddress=data.previousRowMeta.getString(r,data.indexOfReplyAddress);\n\t\t\t\n\t\t\tString contactperson= null;\n\t\t\tif(data.indexOfContactPerson>-1) contactperson=data.previousRowMeta.getString(r,data.indexOfContactPerson);\n\t\t\tString contactphone= null;\n\t\t\tif(data.indexOfContactPhone>-1) contactphone=data.previousRowMeta.getString(r,data.indexOfContactPhone);\n\t\t\t\n\t\t\tString servername=data.previousRowMeta.getString(r,data.indexOfServer);\n\t\t\tString port=null;\n\t\t\tif(data.indexOfPort>-1) port=data.previousRowMeta.getString(r,data.indexOfPort);\n\t\t\t\n\t\t\tString authuser=null;\n\t\t\tif(data.indexOfAuthenticationUser>-1) authuser=data.previousRowMeta.getString(r,data.indexOfAuthenticationUser);\n\t\t\tString authpass=null;\n\t\t\tif(data.indexOfAuthenticationPass>-1) authpass=data.previousRowMeta.getString(r,data.indexOfAuthenticationPass);\n\t\t\t\n\t\t\tString subject=null;\n\t\t\tif(data.indexOfSubject>-1) subject=data.previousRowMeta.getString(r,data.indexOfSubject);\n\t\t\t\n\t\t\tString comment=null;\n\t\t\tif(data.indexOfComment>-1) comment=data.previousRowMeta.getString(r,data.indexOfComment);\n\t\t\t\n\t\t\t// send email...\n\t\t\tsendMail(r,servername, port,mailreplyaddress,mailreplyname,maildestination,\n\t\t\t\t\tmaildestinationCc,maildestinationBCc,contactperson,contactphone,\n\t\t\t\t\tauthuser,authpass,subject,comment);\n\t\t\t\n\t\t\tputRow(getInputRowMeta(), r);     // copy row to possible alternate rowset(s).);  // copy row to output rowset(s);\n\n\t        if (log.isRowLevel()) log.logRowlevel(toString(), Messages.getString(\"Mail.Log.LineNumber\",getLinesRead()+\" : \"+getInputRowMeta().getString(r)));\n\t        \n\t\t} catch (Exception e)\n\t\t {\n\t\t\t if (getStepMeta().isDoingErrorHandling()){\n\t\t        sendToErrorRow = true;\n\t\t        errorMessage = e.toString();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new KettleException(Messages.getString(\"Mail.Error.General\"), e);\n\t\t\t}\n\t\t\tif (sendToErrorRow){\n\t\t\t   // Simply add this row to the error row\n\t\t\t   putError(getInputRowMeta(), r, 1, errorMessage, null, \"MAIL001\");\n\t\t\t}\n\t\t }\n\t\t\t\n\t\treturn true;\n\t}","commit_id":"aea86fe433613e72fe925738d68c40adca4c2e2a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void addAttachedFilePart(FileObject file) throws Exception\n\t  {\n\t      // create a data source\n          data.files = new MimeBodyPart();\n          URLDataSource fds = new URLDataSource(file.getURL());\n \t\t\n          // get a data Handler to manipulate this file type;\n          data.files.setDataHandler(new DataHandler(fds));\n          // include the file in the data source\n          data.files.setFileName(file.getName().getBaseName());\n          \n          if(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"Mail.Log.AttachedFile\",fds.getName()));\n\t  }","id":52704,"modified_method":"private void addAttachedFilePart(FileObject file) throws Exception\n\t  {\n\t\t  // create a data source\n\t\t  \n\t\t  MimeBodyPart files = new MimeBodyPart();\n\t      // create a data source\n          URLDataSource fds = new URLDataSource(file.getURL());\n          // get a data Handler to manipulate this file type;\n          files.setDataHandler(new DataHandler(fds));\n          // include the file in the data source\n          files.setFileName(file.getName().getBaseName());\n          // add the part with the file in the BodyPart();\n          data.parts.addBodyPart(files);\n          if(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"Mail.Log.AttachedFile\",fds.getName()));\n          \n\t  }","commit_id":"aea86fe433613e72fe925738d68c40adca4c2e2a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\n\t * \n\t */\n\tpublic MailData()\n\t{\n\t\tsuper();\n\t\tindexOfDestination=-1;\n\t\tindexOfDestinationCc=-1;\n\t\tindexOfDestinationBCc=-1;\n\t\tindexOfReplyName=-1;\n\t\tindexOfReplyAddress=-1;\n\t\tindexOfContactPerson=-1;\n\t\tindexOfContactPhone=-1;\n\t\tindexOfServer=-1;\n\t\tindexOfPort=-1;\n\t\tindexOfAuthenticationUser=-1;\n\t\tindexOfAuthenticationPass=-1;\n\t\tindexOfSubject=-1;\n\t\tindexOfComment=-1;\n\t\tindexOfSourceFilename=-1;\n\t\tindexOfSourceWildcard=-1;\n\t\tzipFileLimit=0;\n\t\tindexOfDynamicZipFilename=-1;\n\t\tprops= new Properties();\n\t\tfiles = new MimeBodyPart();\n\t\t\n\t}","id":52705,"modified_method":"/**\n\t * \n\t */\n\tpublic MailData()\n\t{\n\t\tsuper();\n\t\tindexOfDestination=-1;\n\t\tindexOfDestinationCc=-1;\n\t\tindexOfDestinationBCc=-1;\n\t\tindexOfReplyName=-1;\n\t\tindexOfReplyAddress=-1;\n\t\tindexOfContactPerson=-1;\n\t\tindexOfContactPhone=-1;\n\t\tindexOfServer=-1;\n\t\tindexOfPort=-1;\n\t\tindexOfAuthenticationUser=-1;\n\t\tindexOfAuthenticationPass=-1;\n\t\tindexOfSubject=-1;\n\t\tindexOfComment=-1;\n\t\tindexOfSourceFilename=-1;\n\t\tindexOfSourceWildcard=-1;\n\t\tzipFileLimit=0;\n\t\tindexOfDynamicZipFilename=-1;\n\t\tprops= new Properties();\n\t\t\n\t}","commit_id":"aea86fe433613e72fe925738d68c40adca4c2e2a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void check(List<CheckResultInterface> remarks, TransMeta transMeta, StepMeta stepinfo, RowMetaInterface prev, String input[], String output[], RowMetaInterface info)\n\t{\tCheckResult cr;\n\t\tif (prev==null || prev.size()==0)\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_WARNING, Messages.getString(\"MailMeta.CheckResult.NotReceivingFields\"), stepinfo); //$NON-NLS-1$\n\t\telse\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_OK, Messages.getString(\"MailMeta.CheckResult.StepRecevingData\",prev.size()+\"\"), stepinfo); //$NON-NLS-1$ //$NON-NLS-2$\n\t\tremarks.add(cr);\n\t\t\n\t\t\n\t\t// See if we have input streams leading to this step!\n\t\tif (input.length>0)\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_OK, Messages.getString(\"MailMeta.CheckResult.StepRecevingData2\"), stepinfo); //$NON-NLS-1$\n\t\telse\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_ERROR, Messages.getString(\"MailMeta.CheckResult.NoInputReceivedFromOtherSteps\"), stepinfo); //$NON-NLS-1$\n\t\tremarks.add(cr);\n\t\t\n\t\t// Servername\n\t\tif(Const.isEmpty(server))\n\t\t{\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_ERROR, Messages.getString(\"MailMeta.CheckResult.ServerEmpty\"), stepinfo);\n\t\t\tremarks.add(cr);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_OK, Messages.getString(\"MailMeta.CheckResult.ServerOk\"), stepinfo);\n\t\t\tremarks.add(cr);\n\t\t\t// is the field exists?\n\t\t\tif(prev.indexOfValue(transMeta.environmentSubstitute(server))<0)\n\t\t    \tcr = new CheckResult(CheckResult.TYPE_RESULT_WARNING, Messages.getString(\"MailMeta.CheckResult.ServerFieldNotFound\",server), stepinfo);\n\t\t\tremarks.add(cr);\n\t\t}\n\t\t\n\t\t\n\t\t// port number\n\t\tif(Const.isEmpty(port))\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_WARNING, Messages.getString(\"MailMeta.CheckResult.PortEmpty\"), stepinfo);\n\t\telse\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_OK, Messages.getString(\"MailMeta.CheckResult.PortOk\"), stepinfo);\n\t\tremarks.add(cr);\n\t\t\n\t\t// reply address\n\t\tif(Const.isEmpty(replyAddress))\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_ERROR, Messages.getString(\"MailMeta.CheckResult.ReplayAddressEmpty\"), stepinfo);\n\t\telse\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_OK, Messages.getString(\"MailMeta.CheckResult.ReplayAddressOk\"), stepinfo);\n\t\tremarks.add(cr);\n\t\t\n\t\t// Destination\n\t\tif(Const.isEmpty(destination))\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_ERROR, Messages.getString(\"MailMeta.CheckResult.DestinationEmpty\"), stepinfo);\n\t\telse\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_OK, Messages.getString(\"MailMeta.CheckResult.DestinationOk\"), stepinfo);\n\t\tremarks.add(cr);\n\t\t\n\t\t// Subject\n\t\tif(Const.isEmpty(subject))\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_WARNING, Messages.getString(\"MailMeta.CheckResult.SubjectEmpty\"), stepinfo);\n\t\telse\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_OK, Messages.getString(\"MailMeta.CheckResult.SubjectOk\"), stepinfo);\n\t\tremarks.add(cr);\n\t\t\n\t\t// Comment\n\t\tif(Const.isEmpty(comment))\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_WARNING, Messages.getString(\"MailMeta.CheckResult.CommentEmpty\"), stepinfo);\n\t\telse\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_OK, Messages.getString(\"MailMeta.CheckResult.CommentEmpty\"), stepinfo);\n\t\tremarks.add(cr);\n\t\t\n\t\tif(isDynamicAttachedFilenames)\n\t\t{\n\t\t\t// Dynamic Filename field\n\t\t\tif(Const.isEmpty(dynamicFieldname))\n\t\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_ERROR, Messages.getString(\"MailMeta.CheckResult.DynamicFilenameFieldEmpty\"), stepinfo);\n\t\t\telse\n\t\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_OK, Messages.getString(\"MailMeta.CheckResult.DynamicFilenameFieldOk\"), stepinfo);\n\t\t\tremarks.add(cr);\n\t\t\t\n\t\t}else\n\t\t{\n\t\t\t// static filename\n\t\t\tif(Const.isEmpty(sourcefilefoldername))\n\t\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_ERROR, Messages.getString(\"MailMeta.CheckResult.SourceFilenameEmpty\"), stepinfo);\n\t\t\telse\n\t\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_OK, Messages.getString(\"MailMeta.CheckResult.SourceFilenameOk\"), stepinfo);\n\t\t\tremarks.add(cr);\n\t\t}\n\t\t\n\t\tif(isZipFiles())\n\t\t{\n\t\t\tif(isDynamicAttachedFilenames)\n\t\t\t{\n\t\t\t\t// dynamic zipfilename\n\t\t\t\tif(Const.isEmpty(getDynamicZipFilenameField()))\n\t\t\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_ERROR, Messages.getString(\"MailMeta.CheckResult.DynamicZipfilenameEmpty\"), stepinfo);\n\t\t\t\telse\n\t\t\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_OK, Messages.getString(\"MailMeta.CheckResult.DynamicZipfilenameOK\"), stepinfo);\n\t\t\t\tremarks.add(cr);\n\t\t\t\t\n\t\t\t}else\n\t\t\t{\n\t\t\t\t// static zipfilename\n\t\t\t\tif(Const.isEmpty(zipFilename))\n\t\t\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_ERROR, Messages.getString(\"MailMeta.CheckResult.ZipfilenameEmpty\"), stepinfo);\n\t\t\t\telse\n\t\t\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_OK, Messages.getString(\"MailMeta.CheckResult.ZipfilenameOk\"), stepinfo);\n\t\t\t\tremarks.add(cr);\n\t\t\t}\n\t\t}\n\t}","id":52706,"modified_method":"public void check(List<CheckResultInterface> remarks, TransMeta transMeta, StepMeta stepinfo, RowMetaInterface prev, String input[], String output[], RowMetaInterface info)\n\t{\tCheckResult cr;\n\t\tif (prev==null || prev.size()==0)\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_WARNING, Messages.getString(\"MailMeta.CheckResult.NotReceivingFields\"), stepinfo); //$NON-NLS-1$\n\t\telse\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_OK, Messages.getString(\"MailMeta.CheckResult.StepRecevingData\",prev.size()+\"\"), stepinfo); //$NON-NLS-1$ //$NON-NLS-2$\n\t\tremarks.add(cr);\n\t\t\n\t\t\n\t\t// See if we have input streams leading to this step!\n\t\tif (input.length>0)\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_OK, Messages.getString(\"MailMeta.CheckResult.StepRecevingData2\"), stepinfo); //$NON-NLS-1$\n\t\telse\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_ERROR, Messages.getString(\"MailMeta.CheckResult.NoInputReceivedFromOtherSteps\"), stepinfo); //$NON-NLS-1$\n\t\tremarks.add(cr);\n\t\t\n\t\t// Servername\n\t\tif(Const.isEmpty(server))\n\t\t{\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_ERROR, Messages.getString(\"MailMeta.CheckResult.ServerEmpty\"), stepinfo);\n\t\t\tremarks.add(cr);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_OK, Messages.getString(\"MailMeta.CheckResult.ServerOk\"), stepinfo);\n\t\t\tremarks.add(cr);\n\t\t\t// is the field exists?\n\t\t\tif(prev.indexOfValue(transMeta.environmentSubstitute(server))<0)\n\t\t    \tcr = new CheckResult(CheckResult.TYPE_RESULT_WARNING, Messages.getString(\"MailMeta.CheckResult.ServerFieldNotFound\",server), stepinfo);\n\t\t\tremarks.add(cr);\n\t\t}\n\t\t\n\t\t\n\t\t// port number\n\t\tif(Const.isEmpty(port))\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_WARNING, Messages.getString(\"MailMeta.CheckResult.PortEmpty\"), stepinfo);\n\t\telse\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_OK, Messages.getString(\"MailMeta.CheckResult.PortOk\"), stepinfo);\n\t\tremarks.add(cr);\n\t\t\n\t\t// reply address\n\t\tif(Const.isEmpty(replyAddress))\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_ERROR, Messages.getString(\"MailMeta.CheckResult.ReplayAddressEmpty\"), stepinfo);\n\t\telse\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_OK, Messages.getString(\"MailMeta.CheckResult.ReplayAddressOk\"), stepinfo);\n\t\tremarks.add(cr);\n\t\t\n\t\t// Destination\n\t\tif(Const.isEmpty(destination))\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_ERROR, Messages.getString(\"MailMeta.CheckResult.DestinationEmpty\"), stepinfo);\n\t\telse\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_OK, Messages.getString(\"MailMeta.CheckResult.DestinationOk\"), stepinfo);\n\t\tremarks.add(cr);\n\t\t\n\t\t// Subject\n\t\tif(Const.isEmpty(subject))\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_WARNING, Messages.getString(\"MailMeta.CheckResult.SubjectEmpty\"), stepinfo);\n\t\telse\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_OK, Messages.getString(\"MailMeta.CheckResult.SubjectOk\"), stepinfo);\n\t\tremarks.add(cr);\n\t\t\n\t\t// Comment\n\t\tif(Const.isEmpty(comment))\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_WARNING, Messages.getString(\"MailMeta.CheckResult.CommentEmpty\"), stepinfo);\n\t\telse\n\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_OK, Messages.getString(\"MailMeta.CheckResult.CommentEmpty\"), stepinfo);\n\t\tremarks.add(cr);\n\t\t\n\t\tif(isFilenameDynamic)\n\t\t{\n\t\t\t// Dynamic Filename field\n\t\t\tif(Const.isEmpty(dynamicFieldname))\n\t\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_ERROR, Messages.getString(\"MailMeta.CheckResult.DynamicFilenameFieldEmpty\"), stepinfo);\n\t\t\telse\n\t\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_OK, Messages.getString(\"MailMeta.CheckResult.DynamicFilenameFieldOk\"), stepinfo);\n\t\t\tremarks.add(cr);\n\t\t\t\n\t\t}else\n\t\t{\n\t\t\t// static filename\n\t\t\tif(Const.isEmpty(sourcefilefoldername))\n\t\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_ERROR, Messages.getString(\"MailMeta.CheckResult.SourceFilenameEmpty\"), stepinfo);\n\t\t\telse\n\t\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_OK, Messages.getString(\"MailMeta.CheckResult.SourceFilenameOk\"), stepinfo);\n\t\t\tremarks.add(cr);\n\t\t}\n\t\t\n\t\tif(isZipFiles())\n\t\t{\n\t\t\tif(isFilenameDynamic)\n\t\t\t{\n\t\t\t\t// dynamic zipfilename\n\t\t\t\tif(Const.isEmpty(getDynamicZipFilenameField()))\n\t\t\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_ERROR, Messages.getString(\"MailMeta.CheckResult.DynamicZipfilenameEmpty\"), stepinfo);\n\t\t\t\telse\n\t\t\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_OK, Messages.getString(\"MailMeta.CheckResult.DynamicZipfilenameOK\"), stepinfo);\n\t\t\t\tremarks.add(cr);\n\t\t\t\t\n\t\t\t}else\n\t\t\t{\n\t\t\t\t// static zipfilename\n\t\t\t\tif(Const.isEmpty(zipFilename))\n\t\t\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_ERROR, Messages.getString(\"MailMeta.CheckResult.ZipfilenameEmpty\"), stepinfo);\n\t\t\t\telse\n\t\t\t\t\tcr = new CheckResult(CheckResult.TYPE_RESULT_OK, Messages.getString(\"MailMeta.CheckResult.ZipfilenameOk\"), stepinfo);\n\t\t\t\tremarks.add(cr);\n\t\t\t}\n\t\t}\n\t}","commit_id":"aea86fe433613e72fe925738d68c40adca4c2e2a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void readData(Node stepnode)\n\t{\n      setServer(XMLHandler.getTagValue(stepnode, \"server\"));\n      setPort(XMLHandler.getTagValue(stepnode, \"port\"));\n      setDestination(XMLHandler.getTagValue(stepnode, \"destination\"));\n      setDestinationCc(XMLHandler.getTagValue(stepnode, \"destinationCc\"));\n      setDestinationBCc(XMLHandler.getTagValue(stepnode, \"destinationBCc\"));\n      setReplyAddress(XMLHandler.getTagValue(stepnode, \"replyto\"));\n      setReplyName(XMLHandler.getTagValue(stepnode, \"replytoname\"));\n      setSubject(XMLHandler.getTagValue(stepnode, \"subject\"));\n      setIncludeDate(\"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"include_date\")));\n      setIncludeSubFolders(\"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"include_subfolders\")));\n      setZipFilenameDynamic(\"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"zipFilenameDynamic\")));\n      setisDynamicFilename(\"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"isFilenameDynamic\")));\n      setDynamicFieldname(XMLHandler.getTagValue(stepnode, \"dynamicFieldname\"));\n      setDynamicWildcard(XMLHandler.getTagValue(stepnode, \"dynamicWildcard\"));\n      setDynamicZipFilenameField(XMLHandler.getTagValue(stepnode, \"dynamicZipFilename\"));\n      setSourceFileFoldername(XMLHandler.getTagValue(stepnode, \"sourcefilefoldername\"));\n      setSourceWildcard(XMLHandler.getTagValue(stepnode, \"sourcewildcard\"));\n      setContactPerson(XMLHandler.getTagValue(stepnode, \"contact_person\"));\n      setContactPhone(XMLHandler.getTagValue(stepnode, \"contact_phone\"));\n      setComment(XMLHandler.getTagValue(stepnode, \"comment\"));\n      setIncludingFiles(\"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"include_files\")));\n      setDynamicAttachedFilenames(\"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"dynamicAttachedFiles\")));\n      setUsingAuthentication(\"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"use_auth\")));\n      setUsingSecureAuthentication(\"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"use_secure_auth\")));\n      setAuthenticationUser(XMLHandler.getTagValue(stepnode, \"auth_user\"));\n      setAuthenticationPassword(Encr.decryptPasswordOptionallyEncrypted(XMLHandler.getTagValue(stepnode, \"auth_password\")));\n      setOnlySendComment(\"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"only_comment\")));\n      setUseHTML(\"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"use_HTML\")));\n      setUsePriority(\"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"use_Priority\")));\n      setEncoding(XMLHandler.getTagValue(stepnode, \"encoding\"));\n      setPriority(XMLHandler.getTagValue(stepnode, \"priority\"));\n      setImportance(XMLHandler.getTagValue(stepnode, \"importance\"));\n      setSecureConnectionType(XMLHandler.getTagValue(stepnode, \"secureconnectiontype\"));\n      Node ftsnode = XMLHandler.getSubNode(stepnode, \"filetypes\");\n      int nrTypes = XMLHandler.countNodes(ftsnode, \"filetype\");\n      allocate(nrTypes);\n      for (int i = 0; i < nrTypes; i++) {\n        Node ftnode = XMLHandler.getSubNodeByNr(ftsnode, \"filetype\", i);\n        fileType[i] = ResultFile.getType(XMLHandler.getNodeValue(ftnode));\n      }\n      setZipFiles(\"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"zip_files\")));\n      setZipFilename(XMLHandler.getTagValue(stepnode, \"zip_name\"));\n      setZipLimitSize(XMLHandler.getTagValue(stepnode, \"zip_limit_size\"));\n  }","id":52707,"modified_method":"private void readData(Node stepnode)\n\t{\n      setServer(XMLHandler.getTagValue(stepnode, \"server\"));\n      setPort(XMLHandler.getTagValue(stepnode, \"port\"));\n      setDestination(XMLHandler.getTagValue(stepnode, \"destination\"));\n      setDestinationCc(XMLHandler.getTagValue(stepnode, \"destinationCc\"));\n      setDestinationBCc(XMLHandler.getTagValue(stepnode, \"destinationBCc\"));\n      setReplyAddress(XMLHandler.getTagValue(stepnode, \"replyto\"));\n      setReplyName(XMLHandler.getTagValue(stepnode, \"replytoname\"));\n      setSubject(XMLHandler.getTagValue(stepnode, \"subject\"));\n      setIncludeDate(\"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"include_date\")));\n      setIncludeSubFolders(\"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"include_subfolders\")));\n      setZipFilenameDynamic(\"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"zipFilenameDynamic\")));\n      setisDynamicFilename(\"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"isFilenameDynamic\")));\n      setDynamicFieldname(XMLHandler.getTagValue(stepnode, \"dynamicFieldname\"));\n      setDynamicWildcard(XMLHandler.getTagValue(stepnode, \"dynamicWildcard\"));\n      setDynamicZipFilenameField(XMLHandler.getTagValue(stepnode, \"dynamicZipFilename\"));\n      setSourceFileFoldername(XMLHandler.getTagValue(stepnode, \"sourcefilefoldername\"));\n      setSourceWildcard(XMLHandler.getTagValue(stepnode, \"sourcewildcard\"));\n      setContactPerson(XMLHandler.getTagValue(stepnode, \"contact_person\"));\n      setContactPhone(XMLHandler.getTagValue(stepnode, \"contact_phone\"));\n      setComment(XMLHandler.getTagValue(stepnode, \"comment\"));\n      setIncludingFiles(\"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"include_files\")));\n      setUsingAuthentication(\"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"use_auth\")));\n      setUsingSecureAuthentication(\"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"use_secure_auth\")));\n      setAuthenticationUser(XMLHandler.getTagValue(stepnode, \"auth_user\"));\n      setAuthenticationPassword(Encr.decryptPasswordOptionallyEncrypted(XMLHandler.getTagValue(stepnode, \"auth_password\")));\n      setOnlySendComment(\"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"only_comment\")));\n      setUseHTML(\"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"use_HTML\")));\n      setUsePriority(\"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"use_Priority\")));\n      setEncoding(XMLHandler.getTagValue(stepnode, \"encoding\"));\n      setPriority(XMLHandler.getTagValue(stepnode, \"priority\"));\n      setImportance(XMLHandler.getTagValue(stepnode, \"importance\"));\n      setSecureConnectionType(XMLHandler.getTagValue(stepnode, \"secureconnectiontype\"));\n      Node ftsnode = XMLHandler.getSubNode(stepnode, \"filetypes\");\n      int nrTypes = XMLHandler.countNodes(ftsnode, \"filetype\");\n      allocate(nrTypes);\n      for (int i = 0; i < nrTypes; i++) {\n        Node ftnode = XMLHandler.getSubNodeByNr(ftsnode, \"filetype\", i);\n        fileType[i] = ResultFile.getType(XMLHandler.getNodeValue(ftnode));\n      }\n      setZipFiles(\"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"zip_files\")));\n      setZipFilename(XMLHandler.getTagValue(stepnode, \"zip_name\"));\n      setZipLimitSize(XMLHandler.getTagValue(stepnode, \"zip_limit_size\"));\n  }","commit_id":"aea86fe433613e72fe925738d68c40adca4c2e2a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"ChangeSomethingAction(@Nullable final VirtualFile file, @Nullable final T t) {\n        super(\"\", \"\", null);\n        getTemplatePresentation().setText(t == null ? \"Clear\" : visualize(t));\n        myFile = file;\n        myDialect = t;\n      }","id":52708,"modified_method":"ChangeSomethingAction(@Nullable final VirtualFile file, @Nullable final T t) {\n        super(\"\", \"\", null);\n        Presentation presentation = getTemplatePresentation();\n        presentation.setText(t == null ? \"Clear\" : visualize(t));\n        presentation.setIcon(getIcon(myTreeView.getValues().get(file), t));\n        myFile = file;\n        myDialect = t;\n      }","commit_id":"5f24761a73bc82b49f84c152232aef6857e1bb6e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  @Override\n  protected DefaultActionGroup createPopupActionGroup(JComponent button) {\n    DefaultActionGroup actionGroup = new DefaultActionGroup();\n\n    for (final T item : myItems) {\n      if (addSeparator(actionGroup, item)) {\n        continue;\n      }\n\n      AnAction action = new AnAction() {\n        @Override\n        public void actionPerformed(AnActionEvent e) {\n          if (mySelection != item && selectionChanged(item)) {\n            mySelection = item;\n            AbstractComboBoxAction.this.update(item, myPresentation, false);\n          }\n        }\n      };\n      update(item, action.getTemplatePresentation(), true);\n      actionGroup.add(action);\n    }\n\n    return actionGroup;\n  }","id":52709,"modified_method":"@NotNull\n  @Override\n  protected DefaultActionGroup createPopupActionGroup(JComponent button) {\n    DefaultActionGroup actionGroup = new DefaultActionGroup();\n\n    for (final T item : myItems) {\n      if (addSeparator(actionGroup, item)) {\n        continue;\n      }\n\n      AnAction action = new AnAction() {\n        @Override\n        public void actionPerformed(AnActionEvent e) {\n          if (mySelection != item && selectionChanged(item)) {\n            mySelection = item;\n            AbstractComboBoxAction.this.update(item, myPresentation, false);\n          }\n        }\n      };\n      actionGroup.add(action);\n\n      Presentation presentation = action.getTemplatePresentation();\n      presentation.setIcon(mySelection == item ? CHECKED : null);\n      update(item, presentation, true);\n    }\n\n    return actionGroup;\n  }","commit_id":"dd0e5ac98e18992e81c259a46e442cbbdc7945da","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void createRenderer(final String layoutXmlText, final ThrowableRunnable<Throwable> runnable) throws Exception {\n    // TODO: (profile|device|target|...|theme) panel\n\n    if (mySession == null) {\n      ApplicationManager.getApplication().invokeLater(\n        new Runnable() {\n          @Override\n          public void run() {\n            if (mySession == null) {\n              showProgress(\"Create RenderLib\");\n            }\n          }\n        }, new Condition() {\n          @Override\n          public boolean value(Object o) {\n            return mySession != null;\n          }\n        }\n      );\n    }\n    else {\n      disposeSession();\n    }\n\n    ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n      @Override\n      public void run() {\n        AndroidPlatform platform = AndroidPlatform.getInstance(myModule);\n        IAndroidTarget target = platform.getTarget();\n        AndroidFacet facet = AndroidFacet.getInstance(myModule);\n\n        LayoutDeviceManager layoutDeviceManager = new LayoutDeviceManager();\n        layoutDeviceManager.loadDevices(platform.getSdkData());\n        LayoutDevice layoutDevice = layoutDeviceManager.getCombinedList().get(0);\n\n        LayoutDeviceConfiguration deviceConfiguration = layoutDevice.getConfigurations().get(0);\n\n        FolderConfiguration config = new FolderConfiguration();\n        config.set(deviceConfiguration.getConfiguration());\n        config.setUiModeQualifier(new UiModeQualifier(UiMode.NORMAL));\n        config.setNightModeQualifier(new NightModeQualifier(NightMode.NIGHT));\n        config.setLanguageQualifier(new LanguageQualifier());\n        config.setRegionQualifier(new RegionQualifier());\n\n        float xdpi = deviceConfiguration.getDevice().getXDpi();\n        float ydpi = deviceConfiguration.getDevice().getYDpi();\n\n        ThemeData theme = new ThemeData(\"Theme\", false);\n\n        try {\n          mySession = RenderUtil.createRenderSession(getProject(), layoutXmlText, myFile, target, facet, config, xdpi, ydpi, theme);\n\n          ApplicationManager.getApplication().invokeLater(new Runnable() {\n            @Override\n            public void run() {\n              try {\n                hideProgress();\n                runnable.run();\n              }\n              catch (Throwable e) {\n                showError(\"Parse error: \", e);\n              }\n            }\n          });\n        }\n        catch (final Throwable e) {\n          ApplicationManager.getApplication().invokeLater(new Runnable() {\n            @Override\n            public void run() {\n              showError(\"Render session error: \", e);\n            }\n          });\n        }\n      }\n    });\n  }","id":52710,"modified_method":"private void createRenderer(final String layoutXmlText, final ThrowableRunnable<Throwable> runnable) throws Exception {\n    if (mySession == null) {\n      ApplicationManager.getApplication().invokeLater(\n        new Runnable() {\n          @Override\n          public void run() {\n            if (mySession == null) {\n              showProgress(\"Create RenderLib\");\n            }\n          }\n        }, new Condition() {\n          @Override\n          public boolean value(Object o) {\n            return mySession != null;\n          }\n        }\n      );\n    }\n    else {\n      disposeSession();\n    }\n\n    ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n      @Override\n      public void run() {\n        try {\n          AndroidPlatform platform = AndroidPlatform.getInstance(myModule);\n          if (platform == null) {\n            throw new AndroidSdkNotConfiguredException();\n          }\n\n          IAndroidTarget target = platform.getTarget();\n          AndroidFacet facet = AndroidFacet.getInstance(myModule);\n\n          LayoutDeviceManager layoutDeviceManager = new LayoutDeviceManager();\n          layoutDeviceManager.loadDevices(platform.getSdkData());\n          LayoutDevice layoutDevice = layoutDeviceManager.getCombinedList().get(0);\n\n          LayoutDeviceConfiguration deviceConfiguration = layoutDevice.getConfigurations().get(0);\n\n          FolderConfiguration config = new FolderConfiguration();\n          config.set(deviceConfiguration.getConfiguration());\n          config.setUiModeQualifier(new UiModeQualifier(UiMode.NORMAL));\n          config.setNightModeQualifier(new NightModeQualifier(NightMode.NIGHT));\n          config.setLanguageQualifier(new LanguageQualifier());\n          config.setRegionQualifier(new RegionQualifier());\n\n          float xdpi = deviceConfiguration.getDevice().getXDpi();\n          float ydpi = deviceConfiguration.getDevice().getYDpi();\n\n          ThemeData theme = new ThemeData(\"Theme\", false);\n\n          mySession = RenderUtil.createRenderSession(getProject(), layoutXmlText, myFile, target, facet, config, xdpi, ydpi, theme);\n\n          ApplicationManager.getApplication().invokeLater(new Runnable() {\n            @Override\n            public void run() {\n              try {\n                hideProgress();\n                runnable.run();\n              }\n              catch (Throwable e) {\n                showError(\"Parse error: \", e);\n              }\n            }\n          });\n        }\n        catch (final Throwable e) {\n          ApplicationManager.getApplication().invokeLater(new Runnable() {\n            @Override\n            public void run() {\n              showError(\"Render session error: \", e);\n            }\n          });\n        }\n      }\n    });\n  }","commit_id":"dd0e5ac98e18992e81c259a46e442cbbdc7945da","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void update() {\n    myToolbar.setVisible(myActionGroup.getChildrenCount() > 0);\n  }","id":52711,"modified_method":"public void update() {\n    boolean oldVisible = myToolbar.isVisible();\n    boolean newVisible = isVisible(myActionGroup);\n    myToolbar.setVisible(newVisible);\n    if (oldVisible && newVisible) {\n      ((JComponent)myToolbar.getParent()).revalidate();\n    }\n  }","commit_id":"dd0e5ac98e18992e81c259a46e442cbbdc7945da","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void updateSelectionActions(List<RadComponent> selection) {\n    boolean update = myDynamicGroup.getChildrenCount() > 0;\n\n    for (AnAction action : myDynamicGroup.getChildActionsOrStubs()) {\n      action.unregisterCustomShortcutSet(myShortcuts);\n    }\n    myDynamicGroup.removeAll();\n\n    Set<RadComponent> parents = new HashSet<RadComponent>();\n    for (RadComponent component : selection) {\n      RadComponent parent = component.getParent();\n      if (parent != null) {\n        parents.add(parent);\n      }\n    }\n\n    for (RadComponent parent : parents) {\n      parent.getLayout().addSelectionActions(myDynamicGroup, myShortcuts, selection);\n    }\n    for (RadComponent component : selection) {\n      component.addSelectionActions(myDynamicGroup, myShortcuts, selection);\n    }\n    update |= myDynamicGroup.getChildrenCount() > 0;\n\n    if (update) {\n      update();\n    }\n  }","id":52712,"modified_method":"private void updateSelectionActions(List<RadComponent> selection) {\n    boolean update = isVisible(myDynamicGroup);\n\n    for (AnAction action : myDynamicGroup.getChildActionsOrStubs()) {\n      action.unregisterCustomShortcutSet(myShortcuts);\n    }\n    myDynamicGroup.removeAll();\n\n    Set<RadComponent> parents = new HashSet<RadComponent>();\n    for (RadComponent component : selection) {\n      RadComponent parent = component.getParent();\n      if (parent != null) {\n        parents.add(parent);\n      }\n    }\n\n    for (RadComponent parent : parents) {\n      parent.getLayout().addSelectionActions(myDynamicGroup, myShortcuts, selection);\n    }\n    for (RadComponent component : selection) {\n      component.addSelectionActions(myDynamicGroup, myShortcuts, selection);\n    }\n    update |= isVisible(myDynamicGroup);\n\n    if (update) {\n      update();\n    }\n  }","commit_id":"dd0e5ac98e18992e81c259a46e442cbbdc7945da","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Transient\n  public LayoutDeviceManager getLayoutDeviceManager() {\n    return myLayoutDeviceManager;\n  }","id":52713,"modified_method":"public ProfileList(Project project) {\n    myProject = project;\n    updateModules();\n    project.getMessageBus().connect(project).subscribe(ProjectTopics.PROJECT_ROOTS, new ModuleRootListener() {\n      @Override\n      public void beforeRootsChange(ModuleRootEvent event) {\n      }\n\n      @Override\n      public void rootsChanged(ModuleRootEvent event) {\n        updatePlatform();\n      }\n    });\n  }","commit_id":"dd0e5ac98e18992e81c259a46e442cbbdc7945da","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setProfiles(List<Profile> profiles) {\n    myProfiles = profiles;\n  }","id":52714,"modified_method":"public void setProfiles(List<Profile> profiles) {\n    myState.setProfiles(profiles);\n  }","commit_id":"dd0e5ac98e18992e81c259a46e442cbbdc7945da","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Profile getFullProfile() {\n    return myFullProfile;\n  }","id":52715,"modified_method":"public Profile getFullProfile() {\n    return myState.getFullProfile();\n  }","commit_id":"dd0e5ac98e18992e81c259a46e442cbbdc7945da","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  @Transient\n  public Profile getProfile() {\n    for (Profile profile : myProfiles) {\n      if (mySelection.equals(profile.getName())) {\n        return profile;\n      }\n    }\n    return myFullProfile;\n  }","id":52716,"modified_method":"public Profile getProfile() {\n    String selection = myState.getSelection();\n    for (Profile profile : getProfiles()) {\n      if (selection.equals(profile.getName())) {\n        return profile;\n      }\n    }\n    return getFullProfile();\n  }","commit_id":"dd0e5ac98e18992e81c259a46e442cbbdc7945da","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public ProfileList getState() {\n    return this;\n  }","id":52717,"modified_method":"@Override\n  public ProfileState getState() {\n    return myState;\n  }","commit_id":"dd0e5ac98e18992e81c259a46e442cbbdc7945da","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void loadState(ProfileList state) {\n    XmlSerializerUtil.copyBean(state, this);\n  }","id":52718,"modified_method":"@Override\n  public void loadState(ProfileState state) {\n    myState = state;\n  }","commit_id":"dd0e5ac98e18992e81c259a46e442cbbdc7945da","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Tag(\"profiles\")\n  @AbstractCollection(surroundWithTag = false)\n  public List<Profile> getProfiles() {\n    return myProfiles;\n  }","id":52719,"modified_method":"public List<Profile> getProfiles() {\n    return myState.getProfiles();\n  }","commit_id":"dd0e5ac98e18992e81c259a46e442cbbdc7945da","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setSelection(String selection) {\n    mySelection = selection;\n  }","id":52720,"modified_method":"public void setSelection(String selection) {\n    myState.setSelection(selection);\n  }","commit_id":"dd0e5ac98e18992e81c259a46e442cbbdc7945da","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ProfileManager(Module module, Runnable refreshAction) {\n    myModule = module;\n    myRefreshAction = refreshAction;\n\n    myLayoutDeviceManager = ProfileList.getInstance(module.getProject()).getLayoutDeviceManager();\n\n    myDeviceAction = new MyComboBoxAction<LayoutDevice>() {\n      @Override\n      protected boolean addSeparator(DefaultActionGroup actionGroup, LayoutDevice item) {\n        if (item == CUSTOM_DEVICE && myDevices.size() > 1) {\n          actionGroup.addSeparator();\n        }\n        return false;\n      }\n\n      @Override\n      protected boolean selectionChanged(LayoutDevice item) {\n        if (item == CUSTOM_DEVICE) {\n          LayoutDeviceConfiguration configuration = myDeviceConfigurationAction.getSelection();\n          configuration = configuration != null && configuration.getDevice().getType() == LayoutDevice.Type.CUSTOM ? configuration : null;\n          LayoutDeviceConfigurationsDialog dialog =\n            new LayoutDeviceConfigurationsDialog(myModule.getProject(), configuration, myLayoutDeviceManager);\n          dialog.show();\n\n          if (dialog.getExitCode() == DialogWrapper.OK_EXIT_CODE) {\n            myLayoutDeviceManager.saveUserDevices();\n          }\n\n          updatePlatform(getPlatform());\n\n          String deviceName = dialog.getSelectedDeviceName();\n          if (deviceName != null) {\n            LayoutDevice newDevice = null;\n            for (LayoutDevice device : myDevices) {\n              if (device.getName().equals(deviceName)) {\n                newDevice = device;\n                break;\n              }\n            }\n\n            if (newDevice != null) {\n              String configurationName = dialog.getSelectedDeviceConfigName();\n              if (configurationName == null) {\n                updateDevice(newDevice);\n              }\n              else {\n                updateDevice(newDevice, configurationName);\n              }\n            }\n          }\n        }\n        else {\n          updateDevice(item);\n        }\n\n        myRefreshAction.run();\n        return item != CUSTOM_DEVICE;\n      }\n\n      @Override\n      protected int getMaxRows() {\n        return 20;\n      }\n    };\n\n    myDeviceConfigurationAction = new MyComboBoxAction<LayoutDeviceConfiguration>() {\n      @Override\n      protected boolean selectionChanged(LayoutDeviceConfiguration item) {\n        updateDeviceConfiguration(item);\n        return true;\n      }\n    };\n\n    myTargetAction = new MyComboBoxAction<IAndroidTarget>() {\n      @Override\n      protected boolean selectionChanged(IAndroidTarget item) {\n        updateTarget(item);\n        updateThemes();\n        myRefreshAction.run();\n        return true;\n      }\n    };\n\n    myLocaleAction = new MyComboBoxAction<LocaleData>() {\n      @Override\n      protected boolean selectionChanged(LocaleData item) {\n        updateLocale(item);\n        myRefreshAction.run();\n        return true;\n      }\n    };\n\n    myDockModeAction = new MyComboBoxAction<UiMode>() {\n      @Override\n      protected boolean selectionChanged(UiMode item) {\n        myProfile.setDockMode(item.getResourceValue());\n        myRefreshAction.run();\n        return true;\n      }\n    };\n\n    myNightModeAction = new MyComboBoxAction<NightMode>() {\n      @Override\n      protected boolean selectionChanged(NightMode item) {\n        myProfile.setNightMode(item.getResourceValue());\n        myRefreshAction.run();\n        return true;\n      }\n    };\n\n    myThemeAction = new AbstractComboBoxAction<ThemeData>() {\n      @Override\n      protected boolean addSeparator(DefaultActionGroup actionGroup, ThemeData item) {\n        if (item == ThemeManager.FRAMEWORK || item == ThemeManager.PROJECT) {\n          // TODO: ???????\n          actionGroup.add(new AnAction(\"\") {\n            @Override\n            public void actionPerformed(AnActionEvent e) {\n            }\n          });\n          actionGroup.addSeparator(item.getName());\n          return true;\n        }\n        return false;\n      }\n\n      @Override\n      protected void update(ThemeData theme, Presentation presentation, boolean popup) {\n        presentation.setEnabled(theme != null);\n\n        if (theme != null) {\n          if (!theme.isProjectTheme() && myThemeManager.getAddedThemes().contains(new ThemeData(theme.getName(), true))) {\n            presentation.setText(theme.getName() + \" (framework)\");\n          }\n          else {\n            presentation.setText(theme.getName());\n          }\n        }\n        else {\n          presentation.setText(\"[None]\");\n        }\n      }\n\n      @Override\n      protected boolean selectionChanged(ThemeData item) {\n        updateTheme(item);\n        myRefreshAction.run();\n        return true;\n      }\n\n      @Override\n      protected int getMaxRows() {\n        return 20; // TODO: not worked\n      }\n    };\n  }","id":52721,"modified_method":"public ProfileManager(Module module, Runnable refreshAction) {\n    myModule = module;\n    myRefreshAction = refreshAction;\n\n    myLayoutDeviceManager = ProfileList.getInstance(module.getProject()).getLayoutDeviceManager();\n\n    myDeviceAction = new MyComboBoxAction<LayoutDevice>() {\n      @Override\n      protected boolean addSeparator(DefaultActionGroup actionGroup, LayoutDevice item) {\n        if (item == CUSTOM_DEVICE && myDevices.size() > 1) {\n          actionGroup.addSeparator();\n        }\n        return false;\n      }\n\n      @Override\n      protected boolean selectionChanged(LayoutDevice item) {\n        if (item == CUSTOM_DEVICE) {\n          LayoutDeviceConfiguration configuration = myDeviceConfigurationAction.getSelection();\n          configuration = configuration != null && configuration.getDevice().getType() == LayoutDevice.Type.CUSTOM ? configuration : null;\n          LayoutDeviceConfigurationsDialog dialog =\n            new LayoutDeviceConfigurationsDialog(myModule.getProject(), configuration, myLayoutDeviceManager);\n          dialog.show();\n\n          if (dialog.getExitCode() == DialogWrapper.OK_EXIT_CODE) {\n            myLayoutDeviceManager.saveUserDevices();\n          }\n\n          updatePlatform(getPlatform());\n\n          String deviceName = dialog.getSelectedDeviceName();\n          if (deviceName != null) {\n            LayoutDevice newDevice = null;\n            for (LayoutDevice device : myDevices) {\n              if (device.getName().equals(deviceName)) {\n                newDevice = device;\n                break;\n              }\n            }\n\n            if (newDevice != null) {\n              String configurationName = dialog.getSelectedDeviceConfigName();\n              if (configurationName == null) {\n                updateDevice(newDevice);\n              }\n              else {\n                updateDevice(newDevice, configurationName);\n              }\n            }\n          }\n        }\n        else {\n          updateDevice(item);\n        }\n\n        myRefreshAction.run();\n        return item != CUSTOM_DEVICE;\n      }\n\n      @Override\n      protected int getMaxRows() {\n        return 20;\n      }\n    };\n\n    myDeviceConfigurationAction = new MyComboBoxAction<LayoutDeviceConfiguration>() {\n      @Override\n      protected boolean selectionChanged(LayoutDeviceConfiguration item) {\n        updateDeviceConfiguration(item);\n        return true;\n      }\n    };\n\n    myTargetAction = new MyComboBoxAction<IAndroidTarget>() {\n      @Override\n      protected boolean selectionChanged(IAndroidTarget item) {\n        updateTarget(item);\n        updateThemes();\n        myRefreshAction.run();\n        return true;\n      }\n    };\n\n    myLocaleAction = new MyComboBoxAction<LocaleData>() {\n      @Override\n      protected boolean selectionChanged(LocaleData item) {\n        updateLocale(item);\n        myRefreshAction.run();\n        return true;\n      }\n    };\n\n    myDockModeAction = new MyComboBoxAction<UiMode>() {\n      @Override\n      protected boolean selectionChanged(UiMode item) {\n        myProfile.setDockMode(item.getResourceValue());\n        myRefreshAction.run();\n        return true;\n      }\n    };\n\n    myNightModeAction = new MyComboBoxAction<NightMode>() {\n      @Override\n      protected boolean selectionChanged(NightMode item) {\n        myProfile.setNightMode(item.getResourceValue());\n        myRefreshAction.run();\n        return true;\n      }\n    };\n\n    myThemeAction = new AbstractComboBoxAction<ThemeData>() {\n      @Override\n      protected void update(ThemeData theme, Presentation presentation, boolean popup) {\n        presentation.setEnabled(theme != null && theme != ThemeManager.FRAMEWORK && theme != ThemeManager.PROJECT);\n\n        if (theme != null) {\n          if (!popup && !theme.isProjectTheme() && myThemeManager.getAddedThemes().contains(new ThemeData(theme.getName(), true))) {\n            presentation.setText(theme.getName() + \" (framework)\");\n          }\n          else if (!popup || theme == ThemeManager.FRAMEWORK || theme == ThemeManager.PROJECT) {\n            presentation.setText(theme.getName());\n          }\n          else {\n            presentation.setText(\"      \" + theme.getName());\n          }\n        }\n        else {\n          presentation.setText(\"[None]\");\n        }\n      }\n\n      @Override\n      protected boolean selectionChanged(ThemeData item) {\n        updateTheme(item);\n        myRefreshAction.run();\n        return true;\n      }\n\n      @Override\n      protected int getMaxRows() {\n        return 20; // TODO: not worked\n      }\n    };\n    myThemeAction.showDisabledActions(true);\n  }","commit_id":"dd0e5ac98e18992e81c259a46e442cbbdc7945da","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void updateThemes() {\n    myThemeManager = new ThemeManager(this);\n    myThemeManager.loadThemes(new Runnable() {\n      @Override\n      public void run() {\n        List<ThemeData> themes = myThemeManager.getThemes();\n\n        ThemeData newTheme = null;\n        String themeName = myProfile.getTheme();\n        if (themeName != null) {\n          for (ThemeData theme : themes) {\n            if (themeName.equals(theme.getName())) {\n              newTheme = theme;\n              break;\n            }\n          }\n          if (newTheme == null) {\n            System.out.println(\"Theme: \" + themeName + \" not found\");\n          }\n        }\n        if (newTheme == null && !themes.isEmpty()) {\n          for (ThemeData theme : themes) {\n            if (theme != ThemeManager.FRAMEWORK && theme != ThemeManager.PROJECT) {\n              newTheme = theme;\n              break;\n            }\n          }\n        }\n\n        myThemeAction.setItems(themes, newTheme);\n        updateTheme(newTheme);\n        myRefreshAction.run();\n      }\n    });\n  }","id":52722,"modified_method":"private void updateThemes() {\n    myThemeManager = new ThemeManager(this);\n    myThemeManager.loadThemes(new Runnable() {\n      @Override\n      public void run() {\n        List<ThemeData> themes = myThemeManager.getThemes();\n\n        ThemeData newTheme = null;\n        String themeName = myProfile.getTheme();\n        if (themeName != null) {\n          for (ThemeData theme : themes) {\n            if (themeName.equals(theme.getName())) {\n              newTheme = theme;\n              break;\n            }\n          }\n        }\n        if (newTheme == null && !themes.isEmpty()) {\n          for (ThemeData theme : themes) {\n            if (theme != ThemeManager.FRAMEWORK && theme != ThemeManager.PROJECT) {\n              newTheme = theme;\n              break;\n            }\n          }\n        }\n\n        myThemeAction.setItems(themes, newTheme);\n        myThemeAction.update();\n        updateTheme(newTheme);\n        myRefreshAction.run();\n      }\n    });\n  }","commit_id":"dd0e5ac98e18992e81c259a46e442cbbdc7945da","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void update(@Nullable AndroidPlatform platform) {\n    if (myProfile != null) {\n      updateLocales();\n      updatePlatform(platform);\n      updateThemes();\n    }\n  }","id":52723,"modified_method":"public void update(@Nullable AndroidPlatform platform) {\n    if (myProfile != null) {\n      updateLocales();\n      updatePlatform(platform);\n      updateThemes();\n      myDockModeAction.setItems(Arrays.asList(UiMode.values()), UiMode.getEnum(myProfile.getDockMode()));\n      myNightModeAction.setItems(Arrays.asList(NightMode.values()), NightMode.getEnum(myProfile.getNightMode()));\n    }\n  }","commit_id":"dd0e5ac98e18992e81c259a46e442cbbdc7945da","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setProfile(Profile profile) {\n    myProfile = profile;\n\n    if (myProfile == null) {\n      myDeviceAction.clearSelection();\n      myDeviceConfigurationAction.clearSelection();\n      myTargetAction.clearSelection();\n      myLocaleAction.clearSelection();\n      myDockModeAction.clearSelection();\n      myNightModeAction.clearSelection();\n      myThemeAction.clearSelection();\n    }\n    else {\n      update(getPlatform());\n      myDockModeAction.setItems(Arrays.asList(UiMode.values()), UiMode.getEnum(myProfile.getDockMode()));\n      myNightModeAction.setItems(Arrays.asList(NightMode.values()), NightMode.getEnum(myProfile.getNightMode()));\n    }\n  }","id":52724,"modified_method":"public void setProfile(Profile profile) {\n    myProfile = profile;\n\n    if (myProfile == null) {\n      myDeviceAction.clearSelection();\n      myDeviceConfigurationAction.clearSelection();\n      myTargetAction.clearSelection();\n      myLocaleAction.clearSelection();\n      myDockModeAction.clearSelection();\n      myNightModeAction.clearSelection();\n      myThemeAction.clearSelection();\n    }\n    else {\n      update(getPlatform());\n    }\n  }","commit_id":"dd0e5ac98e18992e81c259a46e442cbbdc7945da","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private List<Button> buildButtons(ActionGroup group, String parentId) {\n    AnAction[] actions = group.getChildren(null);\n\n    List<Button> buttons = new ArrayList<Button>();\n\n    for (AnAction action : actions) {\n      if (action instanceof ActionGroup) {\n        ActionGroup childGroup = (ActionGroup)action;\n        if (childGroup.isPopup()) {\n          final String id = String.valueOf(++nCards);\n          createCardForGroup(childGroup, id, parentId);\n          AnAction activateCard = new AnAction() {\n            @Override\n            public void actionPerformed(AnActionEvent e) {\n              myLayout.swipe(myContent, id, JBCardLayout.SwipeDirection.FORWARD);\n            }\n          };\n\n          buttons.add(new Button(activateCard, action.getTemplatePresentation()));\n        }\n        else {\n          buttons.addAll(buildButtons(childGroup, parentId));\n        }\n      }\n      else {\n        buttons.add(new Button(action, action.getTemplatePresentation()));\n      }\n    }\n    return buttons;\n  }","id":52725,"modified_method":"private List<Button> buildButtons(ActionGroup group, String parentId) {\n    AnAction[] actions = group.getChildren(null);\n\n    List<Button> buttons = new ArrayList<Button>();\n\n    for (AnAction action : actions) {\n      Presentation presentation = action.getTemplatePresentation();\n      if (!USE_ICONS) {\n        presentation.setIcon(null);\n      }\n      if (action instanceof ActionGroup) {\n        ActionGroup childGroup = (ActionGroup)action;\n        if (childGroup.isPopup()) {\n          final String id = String.valueOf(++nCards);\n          createCardForGroup(childGroup, id, parentId);\n          AnAction activateCard = new AnAction() {\n            @Override\n            public void actionPerformed(AnActionEvent e) {\n              myLayout.swipe(myContent, id, JBCardLayout.SwipeDirection.FORWARD);\n            }\n          };\n\n          buttons.add(new Button(activateCard, presentation));\n        }\n        else {\n          buttons.addAll(buildButtons(childGroup, parentId));\n        }\n      }\n      else {\n        buttons.add(new Button(action, presentation));\n      }\n    }\n    return buttons;\n  }","commit_id":"56916164e350ad5743e10310a1cddd64951bc726","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void createCardForGroup(ActionGroup group, String cardId, final String parentId) {\n    JPanel card = new JPanel(new BorderLayout());\n\n    JPanel withBottomFiller = new JPanel(new BorderLayout());\n    withBottomFiller.add(card, BorderLayout.NORTH);\n    myContent.add(withBottomFiller, cardId);\n\n    List<Button> buttons = buildButtons(group, cardId);\n\n    JPanel buttonsPanel = new JPanel(new GridLayout(buttons.size(), 1, 5, 5));\n    buttonsPanel.setBorder(new EmptyBorder(15, 15, 15, 15));\n    for (Button button : buttons) {\n      buttonsPanel.add(button);\n    }\n    card.add(buttonsPanel, BorderLayout.CENTER);\n    String title;\n    if (parentId != null) {\n      title = group.getTemplatePresentation().getText();\n    }\n    else {\n      title = \"Quick Starts\";\n    }\n    card.add(new HeaderPanel(title, parentId), BorderLayout.NORTH);\n  }","id":52726,"modified_method":"private void createCardForGroup(ActionGroup group, String cardId, final String parentId) {\n    JPanel card = new JPanel(new BorderLayout());\n    if (!USE_ICONS) {\n      card.setOpaque(false);\n    }\n\n    JPanel withBottomFiller = new JPanel(new BorderLayout());\n    if (!USE_ICONS) {\n      withBottomFiller.setOpaque(true);\n      withBottomFiller.setBackground(Color.white);\n    }\n    withBottomFiller.add(card, BorderLayout.NORTH);\n    myContent.add(withBottomFiller, cardId);\n\n    List<Button> buttons = buildButtons(group, cardId);\n\n    JPanel buttonsPanel = new JPanel(new GridLayout(buttons.size(), 1, 5, 5));\n    if (!USE_ICONS) {\n      buttonsPanel.setOpaque(false);\n    }\n    buttonsPanel.setBorder(new EmptyBorder(15, 15, 15, 15));\n    for (Button button : buttons) {\n      buttonsPanel.add(button);\n    }\n    card.add(buttonsPanel, BorderLayout.CENTER);\n    String title;\n    if (parentId != null) {\n      title = group.getTemplatePresentation().getText();\n    }\n    else {\n      title = \"Quick Starts\";\n    }\n    card.add(new HeaderPanel(title, parentId), BorderLayout.NORTH);\n  }","commit_id":"56916164e350ad5743e10310a1cddd64951bc726","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private JPanel createFooterPanel() {\n    JLabel versionLabel = new JLabel(ApplicationNamesInfo.getInstance().getFullProductName() +\n                             \" \" +\n                             ApplicationInfo.getInstance().getFullVersion() +\n                             \" Build \" +\n                             ApplicationInfo.getInstance().getBuild().asStringWithoutProductCode());\n    versionLabel.setFont(versionLabel.getFont().deriveFont((float) 10));\n    versionLabel.setForeground(WelcomeScreenColors.FOOTER_FOREGROUND);\n\n    JPanel footerPanel = new JPanel(new BorderLayout());\n    footerPanel.setBackground(WelcomeScreenColors.FOOTER_BACKGROUND);\n    footerPanel.setBorder(new EmptyBorder(5, 5, 5, 5) {\n      @Override\n      public void paintBorder(Component c, Graphics g, int x, int y, int width, int height) {\n        g.setColor(WelcomeScreenColors.BORDER_COLOR);\n        g.drawLine(x, y, x + width, y);\n      }\n    });\n    footerPanel.add(versionLabel, BorderLayout.WEST);\n    return footerPanel;\n  }","id":52727,"modified_method":"private JPanel createFooterPanel() {\n    JLabel versionLabel = new JLabel(ApplicationNamesInfo.getInstance().getFullProductName() +\n                             \" \" +\n                             ApplicationInfo.getInstance().getFullVersion() +\n                             \" Build \" +\n                             ApplicationInfo.getInstance().getBuild().asStringWithoutProductCode());\n    versionLabel.setFont(versionLabel.getFont().deriveFont((float) 10));\n    versionLabel.setForeground(WelcomeScreenColors.FOOTER_FOREGROUND);\n\n    JPanel footerPanel = new JPanel(new BorderLayout());\n    footerPanel.setBackground(WelcomeScreenColors.FOOTER_BACKGROUND);\n    footerPanel.setBorder(new EmptyBorder(2, 5, 2, 5) {\n      @Override\n      public void paintBorder(Component c, Graphics g, int x, int y, int width, int height) {\n        g.setColor(WelcomeScreenColors.BORDER_COLOR);\n        g.drawLine(x, y, x + width, y);\n      }\n    });\n    footerPanel.add(versionLabel, BorderLayout.WEST);\n    return footerPanel;\n  }","commit_id":"56916164e350ad5743e10310a1cddd64951bc726","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n     * Performs all operations needed in order to finish the adding of the\n     * message to the document.\n     *\n     * @param message the message string\n     * @param contentType\n     */\n    private void finishMessageAdd(String message, String contentType)\n    {\n        Element root = document.getDefaultRootElement();\n\n        // If we're not in chat history case we need to be sure the document\n        // has not exceeded the required size (number of messages).\n        if (!isHistory)\n            ensureDocumentSize();\n\n        /*\n         * Check to make sure element isn't the first element in the HTML\n         * document.\n         */\n        Element elem = document.getElement(root, Attribute.ID,\n            ChatHtmlUtils.MESSAGE_TEXT_ID + lastMessageUID);\n\n        /*\n         * Replacements will be processed only if it is enabled in the\n         * property.\n         */\n        if (GuiActivator.getConfigurationService().getBoolean(\n            ReplacementProperty.REPLACEMENT_ENABLE, true)\n            || GuiActivator.getConfigurationService().getBoolean(\n                ReplacementProperty.getPropertyName(\"SMILEY\"), true))\n        {\n            processReplacement(elem, message, contentType);\n        }\n    }","id":52728,"modified_method":"/**\n     * Performs all operations needed in order to finish the adding of the\n     * message to the document.\n     *\n     * @param message the message string\n     * @param contentType\n     */\n    private void finishMessageAdd(String message, String contentType)\n    {\n        Element root = document.getDefaultRootElement();\n\n        // If we're not in chat history case we need to be sure the document\n        // has not exceeded the required size (number of messages).\n        if (!isHistory)\n            ensureDocumentSize();\n\n        /*\n         * Check to make sure element isn't the first element in the HTML\n         * document.\n         */\n        Element elem\n            = document.getElement(\n                    root,\n                    Attribute.ID,\n                    ChatHtmlUtils.MESSAGE_TEXT_ID + lastMessageUID);\n\n        /*\n         * Replacements will be processed only if it is enabled in the\n         * property.\n         */\n        ConfigurationService cfg = GuiActivator.getConfigurationService();\n\n        if (cfg.getBoolean(ReplacementProperty.REPLACEMENT_ENABLE, true)\n                || cfg.getBoolean(\n                        ReplacementProperty.getPropertyName(\"SMILEY\"),\n                        true))\n        {\n            processReplacement(elem, message, contentType);\n        }\n    }","commit_id":"09cd4c6414659d8488c94f89dd4347a0c9670e53","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Processes /me command in group chats.\n     *\n     * @param chatMessage the chat message\n     * @return the newly processed message string\n     */\n    public String processMeCommand(ChatMessage chatMessage)\n    {\n        String contentType = chatMessage.getContentType();\n        String message = chatMessage.getMessage();\n\n        String msgID\n            = ChatHtmlUtils.MESSAGE_TEXT_ID + chatMessage.getMessageUID();\n        String chatString = \"\";\n        String endHeaderTag = \"\";\n\n        String startDivTag = \"<DIV id=\\\"\" + msgID + \"\\\">\";\n        String endDivTag = \"<\/DIV>\";\n\n        if (message.length() > 4 && message.substring(0, 4).equals(\"/me \"))\n        {\n            chatString = startDivTag + \"<B><I>\";\n\n            endHeaderTag = \"<\/I><\/B>\" + endDivTag;\n\n            chatString +=\n                processHTMLChars(\"*** \" + chatMessage.getContactName() + \" \"\n                    + message.substring(4))\n                    + endHeaderTag;\n\n            Map<String, ReplacementService> listSources =\n                GuiActivator.getReplacementSources();\n\n            Iterator<Entry<String, ReplacementService>> entrySetIter =\n                listSources.entrySet().iterator();\n            StringBuffer msgStore = new StringBuffer(chatString);\n\n            for (int i = 0; i < listSources.size(); i++)\n            {\n                Map.Entry<String, ReplacementService> entry =\n                    entrySetIter.next();\n\n                ReplacementService source = entry.getValue();\n\n                boolean isSmiley = source instanceof SmiliesReplacementService;\n                if (isSmiley)\n                {\n                    String sourcePattern = source.getPattern();\n                    Pattern p =\n                        Pattern.compile(sourcePattern, Pattern.CASE_INSENSITIVE\n                            | Pattern.DOTALL);\n                    Matcher m = p.matcher(msgStore);\n\n                    StringBuffer msgTemp = new StringBuffer(chatString);\n\n                    while (m.find())\n                    {\n                        msgTemp.insert(m.start(),\n                            ChatHtmlUtils.createStartPlainTextTag(contentType));\n                        msgTemp.insert(\n                            m.end()\n                            + ChatHtmlUtils\n                                .createStartPlainTextTag(contentType).length(),\n                            ChatHtmlUtils.createEndPlainTextTag(contentType));\n\n                    }\n                    if (msgTemp.length() != msgStore.length())\n                        msgStore = msgTemp;\n                }\n            }\n\n            return msgStore.toString();\n        }\n        else\n            return \"\";\n    }","id":52729,"modified_method":"/**\n     * Processes /me command in group chats.\n     *\n     * @param chatMessage the chat message\n     * @return the newly processed message string\n     */\n    public String processMeCommand(ChatMessage chatMessage)\n    {\n        String contentType = chatMessage.getContentType();\n        String message = chatMessage.getMessage();\n\n        String msgID\n            = ChatHtmlUtils.MESSAGE_TEXT_ID + chatMessage.getMessageUID();\n        String chatString = \"\";\n        String endHeaderTag = \"\";\n\n        String startDivTag = \"<DIV id=\\\"\" + msgID + \"\\\">\";\n        String endDivTag = \"<\/DIV>\";\n\n        if (message.length() > 4 && message.substring(0, 4).equals(\"/me \"))\n        {\n            chatString = startDivTag + \"<B><I>\";\n\n            endHeaderTag = \"<\/I><\/B>\" + endDivTag;\n\n            chatString +=\n                processHTMLChars(\"*** \" + chatMessage.getContactName() + \" \"\n                    + message.substring(4))\n                    + endHeaderTag;\n\n            Map<String, ReplacementService> listSources =\n                GuiActivator.getReplacementSources();\n\n            Iterator<Map.Entry<String, ReplacementService>> entrySetIter =\n                listSources.entrySet().iterator();\n            StringBuffer msgStore = new StringBuffer(chatString);\n\n            for (int i = 0; i < listSources.size(); i++)\n            {\n                Map.Entry<String, ReplacementService> entry =\n                    entrySetIter.next();\n\n                ReplacementService source = entry.getValue();\n\n                boolean isSmiley = source instanceof SmiliesReplacementService;\n                if (isSmiley)\n                {\n                    String sourcePattern = source.getPattern();\n                    Pattern p =\n                        Pattern.compile(sourcePattern, Pattern.CASE_INSENSITIVE\n                            | Pattern.DOTALL);\n                    Matcher m = p.matcher(msgStore);\n\n                    StringBuffer msgTemp = new StringBuffer(chatString);\n\n                    while (m.find())\n                    {\n                        msgTemp.insert(m.start(),\n                            ChatHtmlUtils.createStartPlainTextTag(contentType));\n                        msgTemp.insert(\n                            m.end()\n                            + ChatHtmlUtils\n                                .createStartPlainTextTag(contentType).length(),\n                            ChatHtmlUtils.createEndPlainTextTag(contentType));\n\n                    }\n                    if (msgTemp.length() != msgStore.length())\n                        msgStore = msgTemp;\n                }\n            }\n\n            return msgStore.toString();\n        }\n        else\n            return \"\";\n    }","commit_id":"09cd4c6414659d8488c94f89dd4347a0c9670e53","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n    * Formats the given message. Processes the messages and replaces links to\n    * video/image sources with their previews or any other substitution. Spawns\n    * a separate thread for replacement.\n    * \n    * @param elem the element in the HTML Document.\n    * @param chatString the message.\n    */\n    private void processReplacement(final Element elem,\n                                    final String chatString,\n                                    final String contentType)\n    {\n       final String chatFinal = chatString;\n\n       SwingWorker worker = new SwingWorker()\n       {\n           public Object construct() throws Exception\n           {\n               String temp = \"\", msgStore = chatFinal;\n\n               boolean isEnabled\n                   = GuiActivator.getConfigurationService().getBoolean(\n                       ReplacementProperty.REPLACEMENT_ENABLE, true);\n\n               Map<String, ReplacementService> listSources\n                   = GuiActivator.getReplacementSources();\n\n               Iterator<Entry<String, ReplacementService>> entrySetIter\n                   = listSources.entrySet().iterator();\n\n               for (int i = 0; i < listSources.size(); i++)\n               {\n                   Map.Entry<String, ReplacementService> entry\n                       = entrySetIter.next();\n\n                   ReplacementService source = entry.getValue();\n\n                   boolean isSmiley\n                       = source instanceof SmiliesReplacementService;\n\n                   if (!(GuiActivator.getConfigurationService().getBoolean(\n                       ReplacementProperty.getPropertyName(source\n                       .getSourceName()), true) && (isEnabled || isSmiley)))\n                       continue;\n\n                   String sourcePattern = source.getPattern();\n                   Pattern p = Pattern.compile(sourcePattern,\n                                   Pattern.CASE_INSENSITIVE | Pattern.DOTALL);\n\n                   Matcher m = p.matcher(msgStore);\n\n                   int count = 0, startPos = 0;\n                   StringBuffer msgBuff = new StringBuffer();\n\n                   while (m.find())\n                   {\n                       count++;\n                       msgBuff.append(msgStore.substring(startPos, m.start()));\n                       startPos = m.end();\n\n                       temp = source.getReplacement(m.group());\n\n                       if(!temp.equals(m.group(0)) || source.getSourceName()\n                               .equals(\"DIRECTIMAGE\"))\n                       {\n                           if(isSmiley)\n                           {\n                               msgBuff.append(\n                                   ChatHtmlUtils.createEndPlainTextTag(\n                                       contentType));\n                               msgBuff.append(\"<IMG SRC=\\\"\");\n                           }\n                           else\n                           {\n                               msgBuff.append(\n                                   \"<IMG HEIGHT=\\\"90\\\" WIDTH=\\\"120\\\" SRC=\\\"\");\n                           }\n\n                           msgBuff.append(temp);\n                           msgBuff.append(\"\\\" BORDER=\\\"0\\\" ALT=\\\"\");\n                           msgBuff.append(m.group(0));\n                           msgBuff.append(\"\\\"><\/IMG>\");\n\n                           if(isSmiley)\n                               msgBuff.append(\n                                   ChatHtmlUtils.createStartPlainTextTag(\n                                       contentType));\n                       }\n                       else\n                       {\n                           msgBuff.append(\n                               msgStore.substring(m.start(), m.end()));\n                       }\n                   }\n\n                   msgBuff.append(msgStore.substring(startPos));\n\n                   /*\n                    * replace the msgStore variable with the current replaced\n                    * message before next iteration\n                    */\n                   if (!msgBuff.toString().equals(msgStore))\n                   {\n                       msgStore = msgBuff.toString();\n                   }\n               }\n\n               if (!msgStore.equals(chatFinal))\n               {\n                   synchronized (scrollToBottomRunnable)\n                   {\n                       scrollToBottomIsPending = true;\n\n                       int msgStartIndex = msgStore.indexOf(\"<div id\");\n                       document.setOuterHTML(elem, msgStore.toString()\n                           .substring(\n                               msgStartIndex,\n                               msgStore.indexOf(\"<\/div>\", msgStartIndex)));\n                   }\n               }\n               return \"\";\n           }\n       };\n       worker.start();\n    }","id":52730,"modified_method":"/**\n    * Formats the given message. Processes the messages and replaces links to\n    * video/image sources with their previews or any other substitution. Spawns\n    * a separate thread for replacement.\n    * \n    * @param elem the element in the HTML Document.\n    * @param chatString the message.\n    */\n    private void processReplacement(final Element elem,\n                                    final String chatString,\n                                    final String contentType)\n    {\n       SwingWorker worker = new SwingWorker()\n       {\n           public Object construct() throws Exception\n           {\n               ConfigurationService cfg\n                   = GuiActivator.getConfigurationService();\n               boolean isEnabled\n                   = cfg.getBoolean(\n                           ReplacementProperty.REPLACEMENT_ENABLE,\n                           true);\n               String msgStore = chatString;\n\n               for (Map.Entry<String, ReplacementService> entry\n                       : GuiActivator.getReplacementSources().entrySet())\n               {\n                   ReplacementService source = entry.getValue();\n\n                   boolean isSmiley\n                       = source instanceof SmiliesReplacementService;\n\n                   if (!(cfg.getBoolean(\n                               ReplacementProperty.getPropertyName(\n                                       source.getSourceName()),\n                               true)\n                           && (isEnabled || isSmiley)))\n                       continue;\n\n                   String sourcePattern = source.getPattern();\n                   Pattern p\n                       = Pattern.compile(\n                               sourcePattern,\n                               Pattern.CASE_INSENSITIVE | Pattern.DOTALL);\n                   Matcher m = p.matcher(msgStore);\n\n                   StringBuilder msgBuff = new StringBuilder();\n                   int startPos = 0;\n\n                   while (m.find())\n                   {\n                       msgBuff.append(msgStore.substring(startPos, m.start()));\n                       startPos = m.end();\n\n                       String group = m.group();\n                       String temp = source.getReplacement(group);\n                       String group0 = m.group(0);\n\n                       if(!temp.equals(group0)\n                               || source.getSourceName().equals(\"DIRECTIMAGE\"))\n                       {\n                           if(isSmiley)\n                           {\n                               msgBuff.append(\n                                       ChatHtmlUtils.createEndPlainTextTag(\n                                               contentType));\n                               msgBuff.append(\"<IMG SRC=\\\"\");\n                           }\n                           else\n                           {\n                               msgBuff.append(\n                                   \"<IMG HEIGHT=\\\"90\\\" WIDTH=\\\"120\\\" SRC=\\\"\");\n                           }\n\n                           msgBuff.append(temp);\n                           msgBuff.append(\"\\\" BORDER=\\\"0\\\" ALT=\\\"\");\n                           msgBuff.append(group0);\n                           msgBuff.append(\"\\\"><\/IMG>\");\n\n                           if(isSmiley)\n                               msgBuff.append(\n                                   ChatHtmlUtils.createStartPlainTextTag(\n                                       contentType));\n                       }\n                       else\n                       {\n                           msgBuff.append(group);\n                       }\n                   }\n\n                   msgBuff.append(msgStore.substring(startPos));\n\n                   /*\n                    * replace the msgStore variable with the current replaced\n                    * message before next iteration\n                    */\n                   String msgBuffString = msgBuff.toString();\n\n                   if (!msgBuffString.equals(msgStore))\n                       msgStore = msgBuffString;\n               }\n\n               if (!msgStore.equals(chatString))\n               {\n                   synchronized (scrollToBottomRunnable)\n                   {\n                       scrollToBottomIsPending = true;\n\n                       int msgBeginIndex = msgStore.indexOf(\"<div id\");\n                       int msgEndIndex\n                           = msgStore.indexOf(\"<\/div>\", msgBeginIndex);\n\n                       document.setOuterHTML(\n                               elem,\n                               msgStore.substring(msgBeginIndex, msgEndIndex));\n                   }\n               }\n               return \"\";\n           }\n       };\n       worker.start();\n    }","commit_id":"09cd4c6414659d8488c94f89dd4347a0c9670e53","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n         * Called on the event dispatching thread (not on the worker thread)\n         * after the <code>construct<\/code> method has returned.\n         */\n        public void finished()\n        {\n            if (getValue() != null)\n            {\n                sourceList.setEnabled(true);\n\n                localeAvailabilityCache.put(locale, true);\n\n                ImageIcon flagIcon = getLocaleIcon(locale,\n                        localeAvailabilityCache.get(locale));\n\n                SelectedObject selectedObject =\n                    new SelectedObject(flagIcon, locale);\n\n                menu.setSelected(selectedObject);\n            }\n            else\n            {\n                // reverts selection\n                skipFiring = true;\n\n                // source.setSelectedItem(spellChecker.getLocale());\n                ImageIcon flagIcon =\n                    getLocaleIcon(locale,\n                        localeAvailabilityCache.get(locale));\n\n                SelectedObject selectedObject =\n                    new SelectedObject(flagIcon, locale);\n\n                menu.setSelected(selectedObject);\n\n                skipFiring = false;\n\n                sourceList.setEnabled(true);\n            }\n\n            // Indicate to the user that the language is currently\n            // loading.\n            locale.setLoading(false);\n\n            sourceList.removeListSelectionListener(sourceList\n                .getListSelectionListeners()[0]);\n            setModelElements((DefaultListModel) sourceList.getModel());\n            sourceList.setSelectedValue(locale, true);\n            removeItem.setEnabled(!spellChecker.getLocale().getIsoCode()\n                .equals(Parameters.getDefault(Parameters.Default.LOCALE)));\n            sourceList\n                .addListSelectionListener(new LanguageListSelectionListener());\n\n        }","id":52731,"modified_method":"/**\n         * Called on the event dispatching thread (not on the worker thread)\n         * after the <code>construct<\/code> method has returned.\n         */\n        @Override\n        public void finished()\n        {\n            if (get() != null)\n            {\n                sourceList.setEnabled(true);\n\n                localeAvailabilityCache.put(locale, true);\n\n                ImageIcon flagIcon = getLocaleIcon(locale,\n                        localeAvailabilityCache.get(locale));\n\n                SelectedObject selectedObject =\n                    new SelectedObject(flagIcon, locale);\n\n                menu.setSelected(selectedObject);\n            }\n            else\n            {\n                // reverts selection\n                skipFiring = true;\n\n                // source.setSelectedItem(spellChecker.getLocale());\n                ImageIcon flagIcon =\n                    getLocaleIcon(locale,\n                        localeAvailabilityCache.get(locale));\n\n                SelectedObject selectedObject =\n                    new SelectedObject(flagIcon, locale);\n\n                menu.setSelected(selectedObject);\n\n                skipFiring = false;\n\n                sourceList.setEnabled(true);\n            }\n\n            // Indicate to the user that the language is currently\n            // loading.\n            locale.setLoading(false);\n\n            sourceList.removeListSelectionListener(sourceList\n                .getListSelectionListeners()[0]);\n            setModelElements((DefaultListModel) sourceList.getModel());\n            sourceList.setSelectedValue(locale, true);\n            removeItem.setEnabled(!spellChecker.getLocale().getIsoCode()\n                .equals(Parameters.getDefault(Parameters.Default.LOCALE)));\n            sourceList\n                .addListSelectionListener(new LanguageListSelectionListener());\n\n        }","commit_id":"09cd4c6414659d8488c94f89dd4347a0c9670e53","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Start the worker thread.\n     */\n    public void start()\n    {\n        Thread t = threadVar.get();\n        if (t != null)\n        {\n            t.start();\n        }\n    }","id":52732,"modified_method":"/**\n     * Start the worker thread.\n     */\n    public void start()\n    {\n        ExecutorService executorService;\n\n        synchronized (SwingWorker.class)\n        {\n            if (SwingWorker.executorService == null)\n                SwingWorker.executorService = Executors.newCachedThreadPool();\n            executorService = SwingWorker.executorService;\n        }\n\n        synchronized (this)\n        {\n            if (future == null)\n                future = executorService.submit(callable);\n            else\n                throw new IllegalStateException(\"future\");\n        }\n    }","commit_id":"09cd4c6414659d8488c94f89dd4347a0c9670e53","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Start a thread that will call the <code>construct<\/code> method\n     * and then exit.\n     */\n    public SwingWorker()\n    {\n        final Runnable doFinished = new Runnable()\n        {\n           public void run() { finished(); }\n        };\n\n        Runnable doConstruct = new Runnable()\n        {\n            public void run()\n            {\n                try\n                {\n                    setValue(construct());\n                }\n                catch (final Exception exception)\n                {\n                    SwingUtilities.invokeLater(new Runnable()\n                    {\n                        public void run()\n                        {\n                            catchException(exception);\n                        }\n                    });\n                }\n                finally\n                {\n                    threadVar.clear();\n                }\n\n                SwingUtilities.invokeLater(doFinished);\n            }\n        };\n\n        Thread t = new Thread(doConstruct);\n\n        t.setUncaughtExceptionHandler(new SwingUncaughtExceptionHandler());\n        threadVar = new ThreadVar(t);\n    }","id":52733,"modified_method":"/**\n     * Start a thread that will call the <code>construct<\/code> method\n     * and then exit.\n     */\n    public SwingWorker()\n    {\n        callable\n            = new Callable<Object>()\n            {\n                public Object call()\n                {\n                    Object value = null;\n\n                    try\n                    {\n                        value = construct();\n                    }\n                    catch (final Throwable t)\n                    {\n                        if (t instanceof ThreadDeath)\n                            throw (ThreadDeath) t;\n                        else\n                        {\n                            // catchException\n                            SwingUtilities.invokeLater(\n                                    new Runnable()\n                                    {\n                                        public void run()\n                                        {\n                                            catchException(t);\n                                        }\n                                    });\n                        }\n                    }\n\n                    // finished\n                    SwingUtilities.invokeLater(\n                            new Runnable()\n                            {\n                                public void run()\n                                {\n                                    finished();\n                                }\n                            });\n\n                    return value;\n                }\n            };\n    }","commit_id":"09cd4c6414659d8488c94f89dd4347a0c9670e53","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * A new method that interrupts the worker thread.  Call this method\n     * to force the worker to stop what it's doing.\n     */\n    public void interrupt()\n    {\n        Thread t = threadVar.get();\n        if (t != null)\n        {\n            t.interrupt();\n        }\n        threadVar.clear();\n    }","id":52734,"modified_method":"/**\n     * A new method that interrupts the worker thread.  Call this method\n     * to force the worker to stop what it's doing.\n     */\n    public void interrupt()\n    {\n        Future<?> future;\n\n        synchronized (this)\n        {\n            /*\n             * SwingWorker assigns a value to the future field only once and we\n             * do not want to invoke Future#cancel(true) while holding a lock.\n             */\n            future = this.future;\n        }\n\n        if (future != null)\n            future.cancel(true);\n    }","commit_id":"09cd4c6414659d8488c94f89dd4347a0c9670e53","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Called on the event dispatching thread (not on the worker thread)\n     * after the <code>construct<\/code> method has returned.\n     */\n    public void finished()\n    {\n    }","id":52735,"modified_method":"/**\n     * Called on the event dispatching thread (not on the worker thread)\n     * after the <code>construct<\/code> method has returned.\n     */\n    protected void finished()\n    {\n    }","commit_id":"09cd4c6414659d8488c94f89dd4347a0c9670e53","url":"https://github.com/jitsi/jitsi"},{"original_method":"/** \n     * Compute the value to be returned by the <code>get<\/code> method. \n     */\n    public abstract Object construct()\n        throws Exception;","id":52736,"modified_method":"/** \n     * Computes the value to be returned by {@link #get()}. \n     */\n    protected abstract Object construct()\n        throws Exception;","commit_id":"09cd4c6414659d8488c94f89dd4347a0c9670e53","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Called on the event dispatching thread (not on the worker thread)\n     * if an exception has occured during the <code>construct<\/code> method.\n     * \n     * @param exception the exception that has occured\n     */\n    public void catchException(Throwable exception)\n    {\n    }","id":52737,"modified_method":"/**\n     * Called on the event dispatching thread (not on the worker thread)\n     * if an exception has occurred during the <code>construct<\/code> method.\n     * \n     * @param exception the exception that has occurred\n     */\n    protected void catchException(Throwable exception)\n    {\n    }","commit_id":"09cd4c6414659d8488c94f89dd4347a0c9670e53","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Return the value created by the <code>construct<\/code> method.  \n     * Returns null if either the constructing thread or the current\n     * thread was interrupted before a value was produced.\n     * \n     * @return the value created by the <code>construct<\/code> method\n     */\n    public Object get()\n    {\n        while (true)\n        {\n            Thread t = threadVar.get();\n            if (t == null)\n            {\n                return getValue();\n            }\n            try\n            {\n                t.join();\n            }\n            catch (InterruptedException e)\n            {\n                Thread.currentThread().interrupt(); // propagate\n                return null;\n            }\n        }\n    }","id":52738,"modified_method":"/**\n     * Return the value created by the <code>construct<\/code> method.  \n     * Returns null if either the constructing thread or the current\n     * thread was interrupted before a value was produced.\n     * \n     * @return the value created by the <code>construct<\/code> method\n     */\n    public Object get()\n    {\n        Future<?> future;\n\n        synchronized (this)\n        {\n            /*\n             * SwingWorker assigns a value to the future field only once and we\n             * do not want to invoke Future#cancel(true) while holding a lock.\n             */\n            future = this.future;\n        }\n\n        Object value = null;\n\n        if (future != null)\n        {\n            boolean interrupted = false;\n\n            while (!future.isDone())\n            {\n                value = null;\n                try\n                {\n                    value = future.get();\n                }\n                catch (CancellationException ce)\n                {\n                    break;\n                }\n                catch (ExecutionException ee)\n                {\n                    break;\n                }\n                catch (InterruptedException ie)\n                {\n                    interrupted = true;\n                }\n            }\n            if (interrupted) // propagate\n                Thread.currentThread().interrupt();\n        }\n\n        return value;\n    }","commit_id":"09cd4c6414659d8488c94f89dd4347a0c9670e53","url":"https://github.com/jitsi/jitsi"},{"original_method":"public DescribeAvailabilityZonesResponseType DescribeAvailabilityZones( DescribeAvailabilityZonesType request ) {\n    DescribeAvailabilityZonesResponseType reply = ( DescribeAvailabilityZonesResponseType ) request.getReply( );\n    List<String> args = request.getAvailabilityZoneSet( );\n    \n    if ( Contexts.lookup( ).hasAdministrativePrivileges( ) ) {\n      for ( String keyword : describeKeywords.keySet( ) ) {\n        if ( args.remove( keyword ) ) {\n          reply.getAvailabilityZoneInfo( ).addAll( describeKeywords.get( keyword ).get( ) );\n          return reply;\n        }\n      }\n    } else {\n      for ( String keyword : describeKeywords.keySet( ) ) {\n        args.remove( keyword );\n      }\n    }\n    \n    if ( args.isEmpty( ) ) {\n      for ( Cluster c : Clusters.getInstance( ).listValues( ) ) {\n        reply.getAvailabilityZoneInfo( ).addAll( this.getDescriptionEntry( c, args ) );\n      }\n    } else {\n      for ( final String partitionName : request.getAvailabilityZoneSet( ) ) {\n        try {\n          Cluster c = Iterables.find( Clusters.getInstance( ).listValues( ), new Predicate<Cluster>( ) {\n            @Override\n            public boolean apply( Cluster input ) {\n              return partitionName.equals( input.getConfiguration( ).getPartition( ) );\n            }\n          } );\n          reply.getAvailabilityZoneInfo( ).addAll( this.getDescriptionEntry( c, args ) );\n        } catch ( NoSuchElementException e ) {\n          try {\n            Cluster c = Clusters.getInstance( ).lookup( partitionName );\n            reply.getAvailabilityZoneInfo( ).addAll( this.getDescriptionEntry( c, args ) );\n          } catch ( NoSuchElementException ex ) {}\n        }\n      }\n    }\n    return reply;\n  }","id":52739,"modified_method":"public DescribeAvailabilityZonesResponseType DescribeAvailabilityZones( DescribeAvailabilityZonesType request ) {\n    final DescribeAvailabilityZonesResponseType reply = ( DescribeAvailabilityZonesResponseType ) request.getReply( );\n    final List<String> args = request.getAvailabilityZoneSet( );\n    final Filter filter = Filters.generate( request.getFilterSet(), Cluster.class );\n\n    if ( Contexts.lookup( ).hasAdministrativePrivileges( ) ) {\n      for ( String keyword : describeKeywords.keySet( ) ) {\n        if ( args.remove( keyword ) ) {\n          reply.getAvailabilityZoneInfo( ).addAll( describeKeywords.get( keyword ).get( ) );\n          return reply;\n        }\n      }\n    } else {\n      for ( String keyword : describeKeywords.keySet( ) ) {\n        args.remove( keyword );\n      }\n    }\n\n    final List<Cluster> clusters;\n    if ( args.isEmpty( ) ) {\n      clusters = Clusters.getInstance( ).listValues( );\n    } else {\n      clusters = Lists.newArrayList();\n      for ( final String partitionName : request.getAvailabilityZoneSet( ) ) {\n        try {\n          clusters.add( Iterables.find( Clusters.getInstance( ).listValues( ), new Predicate<Cluster>( ) {\n            @Override\n            public boolean apply( Cluster input ) {\n              return partitionName.equals( input.getConfiguration( ).getPartition( ) );\n            }\n          } ) );\n        } catch ( NoSuchElementException e ) {\n          try {\n            clusters.add( Clusters.getInstance( ).lookup( partitionName ) );\n          } catch ( NoSuchElementException ex ) {}\n        }\n      }\n    }\n\n    for ( final Cluster c : Iterables.filter( clusters, filter.asPredicate() ) ) {\n      reply.getAvailabilityZoneInfo( ).addAll( this.getDescriptionEntry( c ) );\n    }\n\n    return reply;\n  }","commit_id":"b27c3e50f28e41175a3f5dbe45baf6da0a7e299f","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private List<ClusterInfoType> getDescriptionEntry( Cluster c, List<String> args ) {\n    List<ClusterInfoType> ret = Lists.newArrayList( );\n    String clusterName = c.getName( );\n    ret.add( new ClusterInfoType( c.getConfiguration( ).getPartition( ), c.getConfiguration( ).getHostName( ) + \" \"\n                                                                                                      + c.getConfiguration( ).getFullName( ) ) );\n    NavigableSet<String> tagList = new ConcurrentSkipListSet<String>( );\n    if ( tagList.size( ) == 1 )\n      tagList = c.getNodeTags( );\n    else tagList.retainAll( c.getNodeTags( ) );\n    return ret;\n  }","id":52740,"modified_method":"private List<ClusterInfoType> getDescriptionEntry( Cluster c ) {\n    List<ClusterInfoType> ret = Lists.newArrayList( );\n    String clusterName = c.getName( );\n    ret.add( new ClusterInfoType( c.getConfiguration( ).getPartition( ), c.getConfiguration( ).getHostName( ) + \" \"\n                                                                                                      + c.getConfiguration( ).getFullName( ) ) );\n    NavigableSet<String> tagList = new ConcurrentSkipListSet<String>( );\n    if ( tagList.size( ) == 1 )\n      tagList = c.getNodeTags( );\n    else tagList.retainAll( c.getNodeTags( ) );\n    return ret;\n  }","commit_id":"b27c3e50f28e41175a3f5dbe45baf6da0a7e299f","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private Cluster doPrivilegedLookup( String clusterName, String vmTypeName ) throws NotEnoughResourcesAvailable {\n    if ( clusterName != null && !\"default\".equals( clusterName ) ) {\n      final Cluster cluster = Clusters.getInstance( ).lookup( clusterName );\n      if ( Iterables.any( Contexts.lookup( ).getAuthorizations( ), new Predicate<Authorization>( ) {\n        @Override\n        public boolean apply( Authorization arg0 ) {\n          return arg0.check( cluster );\n        }\n      } ) ) {\n        return cluster;\n      } else {\n        throw new NotEnoughResourcesAvailable( \"Not enough resources: request cluster does not exist \" + clusterName );\n      }\n    } else {\n//      Iterable<Cluster> authorizedClusters = Iterables.filter( Clusters.getInstance( ).listValues( ), new Predicate<Cluster>( ) {\n//        @Override\n//        public boolean apply( final Cluster c ) {\n//          return Iterables.any( Contexts.lookup( ).getAuthorizations( ), new Predicate<Authorization>( ) {\n//            @Override\n//            public boolean apply( Authorization arg0 ) {\n//              return arg0.check( c );\n//            }\n//          } );\n//        }\n//      } );\n      List<Cluster> authorizedClusters = Lists.newArrayList( Clusters.getInstance( ).listValues( ) );\n      NavigableMap<VmTypeAvailability, Cluster> sorted = Maps.newTreeMap( );\n      for ( Cluster c : authorizedClusters ) {\n        sorted.put( c.getNodeState( ).getAvailability( vmTypeName ), c );\n      }\n      return sorted.firstEntry( ).getValue( );\n    }\n  }","id":52741,"modified_method":"private Cluster doPrivilegedLookup( String clusterName, String vmTypeName ) throws NotEnoughResourcesAvailable {\n    if ( clusterName != null && !\"default\".equals( clusterName ) ) {\n      final Cluster cluster = Clusters.getInstance( ).lookup( clusterName );\n      if ( Iterables.any( Contexts.lookup( ).getAuthorizations( ), new Predicate<Authorization>( ) {\n        @Override\n        public boolean apply( Authorization arg0 ) {\n          return arg0.check( cluster );\n        }\n      } ) ) {\n        return cluster;\n      } else {\n        if( Clusters.getInstance( ).contains( clusterName ) ) {\n          throw new NotEnoughResourcesAvailable( \"Not authorized: you do not have sufficient permission to use \" + clusterName );\n        } else {\n          throw new NotEnoughResourcesAvailable( \"Not enough resources: request cluster does not exist \" + clusterName );\n        }\n      }\n    } else {\n      Iterable<Cluster> authorizedClusters = Iterables.filter( Clusters.getInstance( ).listValues( ), new Predicate<Cluster>( ) {\n        @Override\n        public boolean apply( final Cluster c ) {\n          return Iterables.any( Contexts.lookup( ).getAuthorizations( ), new Predicate<Authorization>( ) {\n            @Override\n            public boolean apply( Authorization arg0 ) {\n              return arg0.check( c );\n            }\n          } );\n        }\n      } );\n      NavigableMap<VmTypeAvailability, Cluster> sorted = Maps.newTreeMap( );\n      for ( Cluster c : authorizedClusters ) {\n        sorted.put( c.getNodeState( ).getAvailability( vmTypeName ), c );\n      }\n      if( sorted.isEmpty( ) ) {\n        throw new NotEnoughResourcesAvailable( \"Not enough resources: no cluster is available on which you have permissions to run instances.\" );\n      } else {\n        return sorted.firstEntry( ).getValue( );\n      }\n    }\n  }","commit_id":"541982cb258bb6a9e853fba70df3ba48b67f0a60","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public DescribeAddressesResponseType describe( DescribeAddressesType request ) throws EucalyptusCloudException {\n    DescribeAddressesResponseType reply = ( DescribeAddressesResponseType ) request.getReply( );\n    Context ctx = Contexts.lookup( );\n    boolean isAdmin = ctx.hasAdministrativePrivileges( );\n    User requestUser = ctx.getUser( );\n    String action = PolicySpec.requestToAction( request );\n    for ( Address address : Addresses.getInstance( ).listValues( ) ) {\n      //TODO:GRZE:FIXME this is not going to last this way.\n      Account addrAccount = null;\n      String addrAccountNumber = address.getOwnerAccountNumber( );\n      if ( !Principals.nobodyAccount( ).getAccountNumber( ).equals( addrAccountNumber )\n           && !Principals.systemAccount( ).getAccountNumber( ).equals( addrAccountNumber ) ) {\n        try {\n          addrAccount = Accounts.lookupAccountById( addrAccountNumber );\n        } catch ( AuthException e ) {}\n      }\n      if ( addrAccount != null && ( isAdmin || RestrictedTypes.filterPrivileged( ).apply( address ) ) ) {\n        reply.getAddressesSet( ).add( isAdmin\n            ? address.getAdminDescription( )\n            : address.getDescription( ) );\n      } else if ( isAdmin ) {\n        reply.getAddressesSet( ).add( isAdmin\n                                      ? address.getAdminDescription( )\n                                      : address.getDescription( ) );\n      }\n    }\n    if ( isAdmin ) {\n      for ( Address address : Addresses.getInstance( ).listDisabledValues( ) ) {\n        reply.getAddressesSet( ).add( new AddressInfoType( address.getName( ), Principals.nobodyFullName( ).getUserName( ) ) );\n      }\n    }\n    return reply;\n  }","id":52742,"modified_method":"public DescribeAddressesResponseType describe( DescribeAddressesType request ) throws EucalyptusCloudException {\n    DescribeAddressesResponseType reply = ( DescribeAddressesResponseType ) request.getReply( );\n    Context ctx = Contexts.lookup( );\n    boolean isAdmin = ctx.hasAdministrativePrivileges( );\n    User requestUser = ctx.getUser( );\n    String action = PolicySpec.requestToAction( request );\n    for ( Address address : Iterables.filter( Addresses.getInstance( ).listValues( ), CloudMetadatas.filterById( request.getPublicIpsSet( ) ) ) ) {\n      //TODO:GRZE:FIXME this is not going to last this way.\n      Account addrAccount = null;\n      String addrAccountNumber = address.getOwnerAccountNumber( );\n      if ( !Principals.nobodyAccount( ).getAccountNumber( ).equals( addrAccountNumber )\n           && !Principals.systemAccount( ).getAccountNumber( ).equals( addrAccountNumber ) ) {\n        try {\n          addrAccount = Accounts.lookupAccountById( addrAccountNumber );\n        } catch ( AuthException e ) {}\n      }\n      if ( addrAccount != null && ( isAdmin || RestrictedTypes.filterPrivileged( ).apply( address ) ) ) {\n        reply.getAddressesSet( ).add( isAdmin\n            ? address.getAdminDescription( )\n            : address.getDescription( ) );\n      } else if ( isAdmin ) {\n        reply.getAddressesSet( ).add( isAdmin\n                                      ? address.getAdminDescription( )\n                                      : address.getDescription( ) );\n      }\n    }\n    if ( isAdmin ) {\n      for ( Address address : Iterables.filter( Addresses.getInstance( ).listDisabledValues( ), CloudMetadatas.filterById( request.getPublicIpsSet( ) ) ) ) {\n        reply.getAddressesSet( ).add( new AddressInfoType( address.getName( ), Principals.nobodyFullName( ).getUserName( ) ) );\n      }\n    }\n    return reply;\n  }","commit_id":"51c72bb3817714f3a259d02452bf3272ea367182","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private static void checkUniqueness( ClusterAddressInfo addrInfo ) {\n      int vmCount = VmInstances.getInstance( ).countByPublicIp( addrInfo.getAddress( ) );\n      if ( vmCount > 1 ) {\n        String vmList = \"\";\n        for ( VmInstance v : VmInstances.getInstance( ).listValues( ) ) {\n          if ( addrInfo.getAddress( ).equals( v.getPublicAddress( ) ) && ( VmState.PENDING.equals( v.getState( ) ) || VmState.RUNNING.equals( v.getState( ) ) ) ) {\n            vmList += \" \" + v.getInstanceId( ) + \"(\" + v.getState( ) + \")\";\n          }\n        }\n        LOG.error( \"Found \" + vmCount + \" vms with the same address: \" + addrInfo + \" -> \" + vmList );\n        //TODO: handle reconciling state.\n      }\n    }","id":52743,"modified_method":"private static void checkUniqueness( ClusterAddressInfo addrInfo ) {\n      Collection<VmInstance> matches = Collections2.filter( VmInstances.listValues( ), VmInstances.withPrivateAddress( addrInfo.getAddress( ) ) );\n      if ( matches.size( ) > 1 ) {\n        LOG.error( \"Found \" + matches.size( ) + \" vms with the same address: \" + addrInfo + \" -> \" + matches );\n      }\n    }","commit_id":"abc99a83e019719be18cf907fbe702fbc5b0d439","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"/**\n     * @delegate Do not change semantics here.\n     * @see javax.persistence.EntityTransaction#commit()\n     */\n    @Override\n    public void commit( ) throws RecoverablePersistenceException {\n      this.record.logEvent( TxStep.BEGIN, TxEvent.COMMIT );\n      try {\n        this.txState.commit( );\n        this.record.logEvent( TxStep.END, TxEvent.COMMIT );\n      } catch ( final RuntimeException ex ) {\n        this.rollback( );\n        this.record.logEvent( TxStep.FAIL, TxEvent.COMMIT );\n        throw PersistenceExceptions.throwFiltered( ex );\n      }\n    }","id":52744,"modified_method":"/**\n     * @delegate Do not change semantics here.\n     * @see javax.persistence.EntityTransaction#commit()\n     */\n    @Override\n    public void commit( ) throws RecoverablePersistenceException {\n      this.doTxEvent( TxEvent.COMMIT, new Runnable( ) {\n        \n        @Override\n        public void run( ) {\n          JoinableTx.this.commit( );\n        }\n      } );\n    }","commit_id":"abc99a83e019719be18cf907fbe702fbc5b0d439","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"/**\n     * @delegate Do not change semantics here.\n     * @see javax.persistence.EntityTransaction#rollback()\n     */\n    @Override\n    public void rollback( ) throws RecoverablePersistenceException {\n      try {\n        this.txState.rollback( );\n        this.record.logEvent( TxStep.END, TxEvent.ROLLBACK );\n      } catch ( final RuntimeException ex ) {\n        this.record.logEvent( TxStep.FAIL, TxEvent.ROLLBACK );\n        throw PersistenceExceptions.throwFiltered( ex );\n      }\n    }","id":52745,"modified_method":"/**\n     * @delegate Do not change semantics here.\n     * @see javax.persistence.EntityTransaction#rollback()\n     */\n    @Override\n    public void rollback( ) throws RecoverablePersistenceException {\n      this.doTxEvent( TxEvent.ROLLBACK, new Runnable( ) {\n        \n        @Override\n        public void run( ) {\n          JoinableTx.this.rollback( );\n        }\n      } );\n    }","commit_id":"abc99a83e019719be18cf907fbe702fbc5b0d439","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public MetadataRequest( String requestIp, String requestUrl ) {\n    super( );\n    try {\n      this.requestIp = requestIp;\n      String[] path = requestUrl.replaceFirst( \"/\", \"?\" ).split( \"\\\\?\" );\n      if ( path.length > 0 ) {\n        this.metadataName = path[0];\n        if ( path.length > 1 ) {\n          this.localPath = path[1].replaceFirst( \"^[/]*\", \"\" ).replaceAll( \"[/]+\", \"/\" );\n        } else {\n          this.localPath = \"\";\n        }\n      } else {\n        this.metadataName = \"\";\n        this.localPath = \"\";\n      }\n      VmInstance findVm = null;\n      try {\n        findVm = VmInstances.getInstance( ).lookupByPublicIp( requestIp );\n      } catch ( NoSuchElementException ex ) {\n        try {\n          findVm = VmInstances.getInstance( ).lookupByInstanceIp( requestIp );\n        } catch ( NoSuchElementException ex1 ) {\n        }\n      }\n      this.vm = findVm;\n    } finally {\n      LOG.debug( ( this.vm != null\n        ? \"Instance\"\n        : \"External\" )\n                 + \" Metadata: requestIp=\" + this.requestIp\n                 + \" metadataName=\" + this.metadataName\n                 + \" metadataPath=\" + this.localPath\n                 + \" requestUrl=\" + requestUrl );\n    }\n  }","id":52746,"modified_method":"public MetadataRequest( String requestIp, String requestUrl ) {\n    super( );\n    try {\n      this.requestIp = requestIp;\n      String[] path = requestUrl.replaceFirst( \"/\", \"?\" ).split( \"\\\\?\" );\n      if ( path.length > 0 ) {\n        this.metadataName = path[0];\n        if ( path.length > 1 ) {\n          this.localPath = path[1].replaceFirst( \"^[/]*\", \"\" ).replaceAll( \"[/]+\", \"/\" );\n        } else {\n          this.localPath = \"\";\n        }\n      } else {\n        this.metadataName = \"\";\n        this.localPath = \"\";\n      }\n      VmInstance findVm = null;\n      try {\n        findVm = VmInstances.lookupByPublicIp( requestIp );\n      } catch ( NoSuchElementException ex ) {\n        try {\n          findVm = VmInstances.lookupByInstanceIp( requestIp );\n        } catch ( NoSuchElementException ex1 ) {\n        }\n      }\n      this.vm = findVm;\n    } finally {\n      LOG.debug( ( this.vm != null\n        ? \"Instance\"\n        : \"External\" )\n                 + \" Metadata: requestIp=\" + this.requestIp\n                 + \" metadataName=\" + this.metadataName\n                 + \" metadataPath=\" + this.localPath\n                 + \" requestUrl=\" + requestUrl );\n    }\n  }","commit_id":"abc99a83e019719be18cf907fbe702fbc5b0d439","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public VmInstance lookupByPublicIp( final String ip ) throws NoSuchElementException {\n    for ( final VmInstance vm : this.listValues( ) ) {\n      if ( ip.equals( vm.getPublicAddress( ) ) && ( VmState.PENDING.equals( vm.getState( ) ) || VmState.RUNNING.equals( vm.getState( ) ) ) ) {\n        return vm;\n      }\n    }\n    throw new NoSuchElementException( \"Can't find registered object with public ip:\" + ip + \" in \" + this.getClass( ).getSimpleName( ) );\n  }","id":52747,"modified_method":"public static VmInstance lookupByPublicIp( final String ip ) throws NoSuchElementException {\n    return Iterables.find( listValues( ), vmWithPublicAddress( ip ) );\n  }","commit_id":"abc99a83e019719be18cf907fbe702fbc5b0d439","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public VmInstance lookupByInstanceIp( final String ip ) throws NoSuchElementException {\n    for ( final VmInstance vm : this.listValues( ) ) {\n      if ( ip.equals( vm.getPrivateAddress( ) ) && ( VmState.PENDING.equals( vm.getState( ) ) || VmState.RUNNING.equals( vm.getState( ) ) ) ) {\n        return vm;\n      }\n    }\n    throw new NoSuchElementException( \"Can't find registered object with ip:\" + ip + \" in \" + this.getClass( ).getSimpleName( ) );\n  }","id":52748,"modified_method":"public static VmInstance lookupByInstanceIp( final String ip ) throws NoSuchElementException {\n    return Iterables.find( listValues( ), vmWithPublicAddress( ip ) );\n  }","commit_id":"abc99a83e019719be18cf907fbe702fbc5b0d439","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n\tprotected void addStagedModels() throws Exception {\n\t\tDDMStructure ddmStructure = DDMStructureTestUtil.addStructure(\n\t\t\tstagingGroup.getGroupId(), DDLRecordSet.class.getName());\n\n\t\tDDLTestUtil.addRecordSet(\n\t\t\tstagingGroup.getGroupId(), ddmStructure.getStructureId());\n\t}","id":52749,"modified_method":"@Override\n\tprotected void addStagedModels() throws Exception {\n\t\tDDMStructure ddmStructure = DDMStructureTestUtil.addStructure(\n\t\t\tstagingGroup.getGroupId(), DDLRecordSet.class.getName());\n\n\t\tDDLRecordSet recordSet = DDLTestUtil.addRecordSet(\n\t\t\tstagingGroup.getGroupId(), ddmStructure.getStructureId());\n\n\t\tDDLTestUtil.addRecord(\n\t\t\tstagingGroup.getGroupId(), recordSet.getRecordSetId());\n\t}","commit_id":"2280fb738a522b7418a5b6a7cc878edcafe121cd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void validateImportedStagedModel(\n\t\t\tStagedModel stagedModel, StagedModel importedStagedModel)\n\t\tthrows Exception {\n\n\t\tsuper.validateImportedStagedModel(stagedModel, importedStagedModel);\n\n\t\tDDLRecordSet recordSet = (DDLRecordSet)stagedModel;\n\t\tDDLRecordSet importedRecordSet = (DDLRecordSet)importedStagedModel;\n\n\t\tAssert.assertEquals(\n\t\t\trecordSet.getRecordSetKey(), importedRecordSet.getRecordSetKey());\n\t\tAssert.assertEquals(recordSet.getName(), importedRecordSet.getName());\n\t\tAssert.assertEquals(\n\t\t\trecordSet.getDescription(), importedRecordSet.getDescription());\n\t\tAssert.assertEquals(\n\t\t\trecordSet.getMinDisplayRows(),\n\t\t\timportedRecordSet.getMinDisplayRows());\n\t\tAssert.assertEquals(recordSet.getScope(), importedRecordSet.getScope());\n\t\tAssert.assertEquals(\n\t\t\trecordSet.getSettings(), importedRecordSet.getSettings());\n\t}","id":52750,"modified_method":"@Override\n\tprotected void validateImportedStagedModel(\n\t\t\tStagedModel stagedModel, StagedModel importedStagedModel)\n\t\tthrows Exception {\n\n\t\tAssert.assertTrue(\n\t\t\tstagedModel.getCreateDate() + \" \" +\n\t\t\t\timportedStagedModel.getCreateDate(),\n\t\t\tDateUtil.equals(\n\t\t\t\tstagedModel.getCreateDate(),\n\t\t\t\timportedStagedModel.getCreateDate()));\n\t\tAssert.assertEquals(\n\t\t\tstagedModel.getUuid(), importedStagedModel.getUuid());\n\n\t\tDDLRecordSet recordSet = (DDLRecordSet)stagedModel;\n\t\tDDLRecordSet importedRecordSet = (DDLRecordSet)importedStagedModel;\n\n\t\tAssert.assertEquals(\n\t\t\trecordSet.getRecordSetKey(), importedRecordSet.getRecordSetKey());\n\t\tAssert.assertEquals(recordSet.getName(), importedRecordSet.getName());\n\t\tAssert.assertEquals(\n\t\t\trecordSet.getDescription(), importedRecordSet.getDescription());\n\t\tAssert.assertEquals(\n\t\t\trecordSet.getMinDisplayRows(),\n\t\t\timportedRecordSet.getMinDisplayRows());\n\t\tAssert.assertEquals(recordSet.getScope(), importedRecordSet.getScope());\n\t\tAssert.assertEquals(\n\t\t\t_recordSetSettingsDDMFormValues,\n\t\t\timportedRecordSet.getSettingsDDMFormValues());\n\t}","commit_id":"759ed13503c5584d53fc4b11b4373245536e7b34","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected StagedModel addStagedModel(\n\t\t\tGroup group,\n\t\t\tMap<String, List<StagedModel>> dependentStagedModelsMap)\n\t\tthrows Exception {\n\n\t\tDDLRecordSetTestHelper recordSetTestHelper = new DDLRecordSetTestHelper(\n\t\t\tgroup);\n\n\t\tList<StagedModel> dependentStagedModels = dependentStagedModelsMap.get(\n\t\t\tDDMStructure.class.getSimpleName());\n\n\t\tDDMStructure ddmStructure = (DDMStructure)dependentStagedModels.get(0);\n\n\t\treturn recordSetTestHelper.addRecordSet(ddmStructure);\n\t}","id":52751,"modified_method":"@Override\n\tprotected StagedModel addStagedModel(\n\t\t\tGroup group,\n\t\t\tMap<String, List<StagedModel>> dependentStagedModelsMap)\n\t\tthrows Exception {\n\n\t\tDDLRecordSetTestHelper recordSetTestHelper = new DDLRecordSetTestHelper(\n\t\t\tgroup);\n\n\t\tList<StagedModel> dependentStagedModels = dependentStagedModelsMap.get(\n\t\t\tDDMStructure.class.getSimpleName());\n\n\t\tDDMStructure ddmStructure = (DDMStructure)dependentStagedModels.get(0);\n\n\t\tDDLRecordSet recordSet = recordSetTestHelper.addRecordSet(ddmStructure);\n\n\t\treturn recordSetTestHelper.updateRecordSet(\n\t\t\trecordSet.getRecordSetId(), _recordSetSettingsDDMFormValues);\n\t}","commit_id":"759ed13503c5584d53fc4b11b4373245536e7b34","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected DDMFormLayout getDDMFormLayout(ActionRequest actionRequest)\n\t\tthrows PortalException {\n\n\t\ttry {\n\t\t\tString layout = ParamUtil.getString(actionRequest, \"layout\");\n\n\t\t\treturn _ddmFormLayoutJSONDeserializer.deserialize(layout);\n\t\t}\n\t\tcatch (PortalException pe) {\n\t\t\tthrow new StructureLayoutException(pe);\n\t\t}\n\t}","id":52752,"modified_method":"protected DDMFormLayout getDDMFormLayout(ActionRequest actionRequest)\n\t\tthrows PortalException {\n\n\t\ttry {\n\t\t\tString layout = ParamUtil.getString(actionRequest, \"layout\");\n\n\t\t\treturn ddmFormLayoutJSONDeserializer.deserialize(layout);\n\t\t}\n\t\tcatch (PortalException pe) {\n\t\t\tthrow new StructureLayoutException(pe);\n\t\t}\n\t}","commit_id":"31d12291cbe7a794ce1bee81f4d4db9c84204510","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected DDMForm getDDMForm(ActionRequest actionRequest)\n\t\tthrows PortalException {\n\n\t\ttry {\n\t\t\tString definition = ParamUtil.getString(\n\t\t\t\tactionRequest, \"definition\");\n\n\t\t\treturn _ddmFormJSONDeserializer.deserialize(definition);\n\t\t}\n\t\tcatch (PortalException pe) {\n\t\t\tthrow new StructureDefinitionException(pe);\n\t\t}\n\t}","id":52753,"modified_method":"protected DDMForm getDDMForm(ActionRequest actionRequest)\n\t\tthrows PortalException {\n\n\t\ttry {\n\t\t\tString definition = ParamUtil.getString(\n\t\t\t\tactionRequest, \"definition\");\n\n\t\t\treturn ddmFormJSONDeserializer.deserialize(definition);\n\t\t}\n\t\tcatch (PortalException pe) {\n\t\t\tthrow new StructureDefinitionException(pe);\n\t\t}\n\t}","commit_id":"31d12291cbe7a794ce1bee81f4d4db9c84204510","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Reference(unbind = \"-\")\n\tprotected void setDDLRecordSetService(\n\t\tDDLRecordSetService ddlRecordSetService) {\n\n\t\t_ddlRecordSetService = ddlRecordSetService;\n\t}","id":52754,"modified_method":"@Reference(unbind = \"-\")\n\tprotected void setDDLRecordSetService(\n\t\tDDLRecordSetService ddlRecordSetService) {\n\n\t\tthis.ddlRecordSetService = ddlRecordSetService;\n\t}","commit_id":"31d12291cbe7a794ce1bee81f4d4db9c84204510","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected DDLRecordSet addRecordSet(\n\t\t\tActionRequest actionRequest, long ddmStructureId)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong groupId = ParamUtil.getLong(actionRequest, \"groupId\");\n\t\tString recordSetKey = ParamUtil.getString(\n\t\t\tactionRequest, \"recordSetKey\");\n\t\tString name = ParamUtil.getString(actionRequest, \"name\");\n\t\tString description = ParamUtil.getString(actionRequest, \"description\");\n\n\t\tServiceContext serviceContext = ServiceContextFactory.getInstance(\n\t\t\tDDLRecordSet.class.getName(), actionRequest);\n\n\t\treturn _ddlRecordSetService.addRecordSet(\n\t\t\tgroupId, ddmStructureId, recordSetKey,\n\t\t\tgetLocalizedMap(themeDisplay.getLocale(), name),\n\t\t\tgetLocalizedMap(themeDisplay.getLocale(), description),\n\t\t\tDDLRecordSetConstants.MIN_DISPLAY_ROWS_DEFAULT,\n\t\t\tDDLRecordSetConstants.SCOPE_FORMS, serviceContext);\n\t}","id":52755,"modified_method":"protected DDLRecordSet addRecordSet(\n\t\t\tActionRequest actionRequest, long ddmStructureId)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong groupId = ParamUtil.getLong(actionRequest, \"groupId\");\n\t\tString recordSetKey = ParamUtil.getString(\n\t\t\tactionRequest, \"recordSetKey\");\n\t\tString name = ParamUtil.getString(actionRequest, \"name\");\n\t\tString description = ParamUtil.getString(actionRequest, \"description\");\n\n\t\tServiceContext serviceContext = ServiceContextFactory.getInstance(\n\t\t\tDDLRecordSet.class.getName(), actionRequest);\n\n\t\treturn ddlRecordSetService.addRecordSet(\n\t\t\tgroupId, ddmStructureId, recordSetKey,\n\t\t\tgetLocalizedMap(themeDisplay.getLocale(), name),\n\t\t\tgetLocalizedMap(themeDisplay.getLocale(), description),\n\t\t\tDDLRecordSetConstants.MIN_DISPLAY_ROWS_DEFAULT,\n\t\t\tDDLRecordSetConstants.SCOPE_FORMS, serviceContext);\n\t}","commit_id":"31d12291cbe7a794ce1bee81f4d4db9c84204510","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected DDMStructure addDDMStructure(ActionRequest actionRequest)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong groupId = ParamUtil.getLong(actionRequest, \"groupId\");\n\t\tString structureKey = ParamUtil.getString(\n\t\t\tactionRequest, \"structureKey\");\n\t\tString storageType = ParamUtil.getString(\n\t\t\tactionRequest, \"storageType\", StorageType.JSON.toString());\n\t\tString name = ParamUtil.getString(actionRequest, \"name\");\n\t\tString description = ParamUtil.getString(actionRequest, \"description\");\n\t\tDDMForm ddmForm = getDDMForm(actionRequest);\n\t\tDDMFormLayout ddmFormLayout = getDDMFormLayout(actionRequest);\n\n\t\tServiceContext serviceContext = ServiceContextFactory.getInstance(\n\t\t\tDDMStructure.class.getName(), actionRequest);\n\n\t\treturn _ddmStructureService.addStructure(\n\t\t\tgroupId, DDMStructureConstants.DEFAULT_PARENT_STRUCTURE_ID,\n\t\t\tPortalUtil.getClassNameId(DDLRecordSet.class), structureKey,\n\t\t\tgetLocalizedMap(themeDisplay.getLocale(), name),\n\t\t\tgetLocalizedMap(themeDisplay.getLocale(), description), ddmForm,\n\t\t\tddmFormLayout, storageType, DDMStructureConstants.TYPE_AUTO,\n\t\t\tserviceContext);\n\t}","id":52756,"modified_method":"protected DDMStructure addDDMStructure(ActionRequest actionRequest)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong groupId = ParamUtil.getLong(actionRequest, \"groupId\");\n\t\tString structureKey = ParamUtil.getString(\n\t\t\tactionRequest, \"structureKey\");\n\t\tString storageType = ParamUtil.getString(\n\t\t\tactionRequest, \"storageType\", StorageType.JSON.toString());\n\t\tString name = ParamUtil.getString(actionRequest, \"name\");\n\t\tString description = ParamUtil.getString(actionRequest, \"description\");\n\t\tDDMForm ddmForm = getDDMForm(actionRequest);\n\t\tDDMFormLayout ddmFormLayout = getDDMFormLayout(actionRequest);\n\n\t\tServiceContext serviceContext = ServiceContextFactory.getInstance(\n\t\t\tDDMStructure.class.getName(), actionRequest);\n\n\t\treturn ddmStructureService.addStructure(\n\t\t\tgroupId, DDMStructureConstants.DEFAULT_PARENT_STRUCTURE_ID,\n\t\t\tPortalUtil.getClassNameId(DDLRecordSet.class), structureKey,\n\t\t\tgetLocalizedMap(themeDisplay.getLocale(), name),\n\t\t\tgetLocalizedMap(themeDisplay.getLocale(), description), ddmForm,\n\t\t\tddmFormLayout, storageType, DDMStructureConstants.TYPE_AUTO,\n\t\t\tserviceContext);\n\t}","commit_id":"31d12291cbe7a794ce1bee81f4d4db9c84204510","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Reference(unbind = \"-\")\n\tprotected void setDDMStructureService(\n\t\tDDMStructureService ddmStructureService) {\n\n\t\t_ddmStructureService = ddmStructureService;\n\t}","id":52757,"modified_method":"@Reference(unbind = \"-\")\n\tprotected void setDDMStructureService(\n\t\tDDMStructureService ddmStructureService) {\n\n\t\tthis.ddmStructureService = ddmStructureService;\n\t}","commit_id":"31d12291cbe7a794ce1bee81f4d4db9c84204510","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doTransactionalCommand(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tDDMStructure ddmStructure = addDDMStructure(actionRequest);\n\n\t\taddRecordSet(actionRequest, ddmStructure.getStructureId());\n\t}","id":52758,"modified_method":"@Override\n\tprotected void doTransactionalCommand(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tDDMStructure ddmStructure = addDDMStructure(actionRequest);\n\n\t\tDDLRecordSet recordSet = addRecordSet(\n\t\t\tactionRequest, ddmStructure.getStructureId());\n\n\t\tString publish = ParamUtil.getString(actionRequest, \"publish\", \"false\");\n\n\t\tUnicodeProperties typeSettingsProperties = new UnicodeProperties(true);\n\n\t\ttypeSettingsProperties.setProperty(\"published\", publish);\n\n\t\tddlRecordSetService.updateRecordSet(\n\t\t\trecordSet.getRecordSetId(), typeSettingsProperties.toString());\n\t}","commit_id":"31d12291cbe7a794ce1bee81f4d4db9c84204510","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Reference(unbind = \"-\")\n\tprotected void setDDMFormJSONDeserializer(\n\t\tDDMFormJSONDeserializer ddmFormJSONDeserializer) {\n\n\t\t_ddmFormJSONDeserializer = ddmFormJSONDeserializer;\n\t}","id":52759,"modified_method":"@Reference(unbind = \"-\")\n\tprotected void setDDMFormJSONDeserializer(\n\t\tDDMFormJSONDeserializer ddmFormJSONDeserializer) {\n\n\t\tthis.ddmFormJSONDeserializer = ddmFormJSONDeserializer;\n\t}","commit_id":"31d12291cbe7a794ce1bee81f4d4db9c84204510","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Reference(unbind = \"-\")\n\tprotected void setDDMFormLayoutJSONDeserializer(\n\t\tDDMFormLayoutJSONDeserializer ddmFormLayoutJSONDeserializer) {\n\n\t\t_ddmFormLayoutJSONDeserializer = ddmFormLayoutJSONDeserializer;\n\t}","id":52760,"modified_method":"@Reference(unbind = \"-\")\n\tprotected void setDDMFormLayoutJSONDeserializer(\n\t\tDDMFormLayoutJSONDeserializer ddmFormLayoutJSONDeserializer) {\n\n\t\tthis.ddmFormLayoutJSONDeserializer = ddmFormLayoutJSONDeserializer;\n\t}","commit_id":"31d12291cbe7a794ce1bee81f4d4db9c84204510","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void setRenderRequestAttributes(\n\t\t\tRenderRequest renderRequest, RenderResponse renderResponse)\n\t\tthrows PortalException {\n\n\t\tlong recordSetId = PrefsParamUtil.getLong(\n\t\t\trenderRequest.getPreferences(), renderRequest, \"recordSetId\");\n\n\t\tif (recordSetId == 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tDDLRecordSet recordSet = _ddlRecordSetService.getRecordSet(recordSetId);\n\n\t\trenderRequest.setAttribute(\n\t\t\tDDLFormWebKeys.DYNAMIC_DATA_LISTS_RECORD_SET, recordSet);\n\n\t\tString ddmFormHTML = getDDMFormHTML(\n\t\t\trenderRequest, renderResponse, recordSet);\n\n\t\trenderRequest.setAttribute(\n\t\t\tDDMWebKeys.DYNAMIC_DATA_MAPPING_FORM_HTML, ddmFormHTML);\n\t}","id":52761,"modified_method":"protected void setRenderRequestAttributes(\n\t\t\tRenderRequest renderRequest, RenderResponse renderResponse)\n\t\tthrows PortalException {\n\n\t\tlong recordSetId = PrefsParamUtil.getLong(\n\t\t\tPortletPreferencesFactoryUtil.getPortletSetup(renderRequest),\n\t\t\trenderRequest, \"recordSetId\");\n\n\t\tif (recordSetId == 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tDDLRecordSet recordSet = _ddlRecordSetService.getRecordSet(recordSetId);\n\n\t\trenderRequest.setAttribute(\n\t\t\tDDLFormWebKeys.DYNAMIC_DATA_LISTS_RECORD_SET, recordSet);\n\n\t\tString ddmFormHTML = getDDMFormHTML(\n\t\t\trenderRequest, renderResponse, recordSet);\n\n\t\trenderRequest.setAttribute(\n\t\t\tDDMWebKeys.DYNAMIC_DATA_MAPPING_FORM_HTML, ddmFormHTML);\n\t}","commit_id":"31d12291cbe7a794ce1bee81f4d4db9c84204510","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doTransactionalCommand(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tDDMStructure ddmStructure = updateDDMStructure(actionRequest);\n\n\t\tupdateRecordSet(actionRequest, ddmStructure.getStructureId());\n\t}","id":52762,"modified_method":"@Override\n\tprotected void doTransactionalCommand(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tDDMStructure ddmStructure = updateDDMStructure(actionRequest);\n\n\t\tDDLRecordSet recordSet = updateRecordSet(\n\t\t\tactionRequest, ddmStructure.getStructureId());\n\n\t\tString publish = ParamUtil.getString(actionRequest, \"publish\", \"false\");\n\n\t\tUnicodeProperties typeSettingsProperties = new UnicodeProperties(true);\n\n\t\ttypeSettingsProperties.setProperty(\"published\", publish);\n\n\t\tddlRecordSetService.updateRecordSet(\n\t\t\trecordSet.getRecordSetId(), typeSettingsProperties.toString());\n\t}","commit_id":"31d12291cbe7a794ce1bee81f4d4db9c84204510","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Reference(unbind = \"-\")\n\tprotected void setDDMFormJSONDeserializer(\n\t\tDDMFormJSONDeserializer ddmFormJSONDeserializer) {\n\n\t\t_ddmFormJSONDeserializer = ddmFormJSONDeserializer;\n\t}","id":52763,"modified_method":"@Reference(unbind = \"-\")\n\tprotected void setDDMFormJSONDeserializer(\n\t\tDDMFormJSONDeserializer ddmFormJSONDeserializer) {\n\n\t\tthis.ddmFormJSONDeserializer = ddmFormJSONDeserializer;\n\t}","commit_id":"31d12291cbe7a794ce1bee81f4d4db9c84204510","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Reference(unbind = \"-\")\n\tprotected void setDDLRecordSetService(\n\t\tDDLRecordSetService ddlRecordSetService) {\n\n\t\t_ddlRecordSetService = ddlRecordSetService;\n\t}","id":52764,"modified_method":"@Reference(unbind = \"-\")\n\tprotected void setDDLRecordSetService(\n\t\tDDLRecordSetService ddlRecordSetService) {\n\n\t\tthis.ddlRecordSetService = ddlRecordSetService;\n\t}","commit_id":"31d12291cbe7a794ce1bee81f4d4db9c84204510","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Reference(unbind = \"-\")\n\tprotected void setDDMFormLayoutJSONDeserializer(\n\t\tDDMFormLayoutJSONDeserializer ddmFormLayoutJSONDeserializer) {\n\n\t\t_ddmFormLayoutJSONDeserializer = ddmFormLayoutJSONDeserializer;\n\t}","id":52765,"modified_method":"@Reference(unbind = \"-\")\n\tprotected void setDDMFormLayoutJSONDeserializer(\n\t\tDDMFormLayoutJSONDeserializer ddmFormLayoutJSONDeserializer) {\n\n\t\tthis.ddmFormLayoutJSONDeserializer = ddmFormLayoutJSONDeserializer;\n\t}","commit_id":"31d12291cbe7a794ce1bee81f4d4db9c84204510","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected DDMStructure updateDDMStructure(ActionRequest actionRequest)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong ddmStructureId = ParamUtil.getLong(\n\t\t\tactionRequest, \"ddmStructureId\");\n\t\tString name = ParamUtil.getString(actionRequest, \"name\");\n\t\tString description = ParamUtil.getString(actionRequest, \"description\");\n\t\tDDMForm ddmForm = getDDMForm(actionRequest);\n\t\tDDMFormLayout ddmFormLayout = getDDMFormLayout(actionRequest);\n\n\t\tServiceContext serviceContext = ServiceContextFactory.getInstance(\n\t\t\tDDMStructure.class.getName(), actionRequest);\n\n\t\treturn _ddmStructureService.updateStructure(\n\t\t\tddmStructureId, DDMStructureConstants.DEFAULT_PARENT_STRUCTURE_ID,\n\t\t\tgetLocalizedMap(themeDisplay.getLocale(), name),\n\t\t\tgetLocalizedMap(themeDisplay.getLocale(), description), ddmForm,\n\t\t\tddmFormLayout, serviceContext);\n\t}","id":52766,"modified_method":"protected DDMStructure updateDDMStructure(ActionRequest actionRequest)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong ddmStructureId = ParamUtil.getLong(\n\t\t\tactionRequest, \"ddmStructureId\");\n\t\tString name = ParamUtil.getString(actionRequest, \"name\");\n\t\tString description = ParamUtil.getString(actionRequest, \"description\");\n\t\tDDMForm ddmForm = getDDMForm(actionRequest);\n\t\tDDMFormLayout ddmFormLayout = getDDMFormLayout(actionRequest);\n\n\t\tServiceContext serviceContext = ServiceContextFactory.getInstance(\n\t\t\tDDMStructure.class.getName(), actionRequest);\n\n\t\treturn ddmStructureService.updateStructure(\n\t\t\tddmStructureId, DDMStructureConstants.DEFAULT_PARENT_STRUCTURE_ID,\n\t\t\tgetLocalizedMap(themeDisplay.getLocale(), name),\n\t\t\tgetLocalizedMap(themeDisplay.getLocale(), description), ddmForm,\n\t\t\tddmFormLayout, serviceContext);\n\t}","commit_id":"31d12291cbe7a794ce1bee81f4d4db9c84204510","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void updateRecordSet(\n\t\t\tActionRequest actionRequest, long ddmStructureId)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong recordSetId = ParamUtil.getLong(actionRequest, \"recordSetId\");\n\n\t\tString name = ParamUtil.getString(actionRequest, \"name\");\n\t\tString description = ParamUtil.getString(actionRequest, \"description\");\n\n\t\tServiceContext serviceContext = ServiceContextFactory.getInstance(\n\t\t\tDDLRecordSet.class.getName(), actionRequest);\n\n\t\t_ddlRecordSetService.updateRecordSet(\n\t\t\trecordSetId, ddmStructureId,\n\t\t\tgetLocalizedMap(themeDisplay.getLocale(), name),\n\t\t\tgetLocalizedMap(themeDisplay.getLocale(), description),\n\t\t\tDDLRecordSetConstants.MIN_DISPLAY_ROWS_DEFAULT, serviceContext);\n\t}","id":52767,"modified_method":"protected DDLRecordSet updateRecordSet(\n\t\t\tActionRequest actionRequest, long ddmStructureId)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong recordSetId = ParamUtil.getLong(actionRequest, \"recordSetId\");\n\n\t\tString name = ParamUtil.getString(actionRequest, \"name\");\n\t\tString description = ParamUtil.getString(actionRequest, \"description\");\n\n\t\tServiceContext serviceContext = ServiceContextFactory.getInstance(\n\t\t\tDDLRecordSet.class.getName(), actionRequest);\n\n\t\treturn ddlRecordSetService.updateRecordSet(\n\t\t\trecordSetId, ddmStructureId,\n\t\t\tgetLocalizedMap(themeDisplay.getLocale(), name),\n\t\t\tgetLocalizedMap(themeDisplay.getLocale(), description),\n\t\t\tDDLRecordSetConstants.MIN_DISPLAY_ROWS_DEFAULT, serviceContext);\n\t}","commit_id":"31d12291cbe7a794ce1bee81f4d4db9c84204510","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Reference(unbind = \"-\")\n\tprotected void setDDMStructureService(\n\t\tDDMStructureService ddmStructureService) {\n\n\t\t_ddmStructureService = ddmStructureService;\n\t}","id":52768,"modified_method":"@Reference(unbind = \"-\")\n\tprotected void setDDMStructureService(\n\t\tDDMStructureService ddmStructureService) {\n\n\t\tthis.ddmStructureService = ddmStructureService;\n\t}","commit_id":"31d12291cbe7a794ce1bee81f4d4db9c84204510","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void myLoadAttribute(Component comp, Object bean) {\n\t\ttry {\n\t\t\t//since 3.1, 20080416, support bindingArgs for non-supported tag\n\t\t\tcomp.setAttribute(DataBinder.ARGS, _args);\n\t\t\t\n\t\t\tif (_converter != null) {\n\t\t\t\tbean = _converter.coerceToUi(bean, comp);\n\t\t\t\tif (bean == TypeConverter.IGNORE)\n\t\t\t\t\treturn; //ignore, so don't do Fields.set()\n\t\t\t}\n\t\t\t\n\t\t\t//Bug #1876198 Error msg appears when load page (databind+CustomConstraint)\n\t\t\t//catching WrongValueException no longer works, check special case and \n\t\t\t//use setRowValue() method directly\n\t\t\tif ((comp instanceof InputElement) && \"value\".equals(_attr)) {\n\t\t\t\tObject value = bean;\n\t\t\t\ttry { //Bug 1879389\n\t\t\t\t\tfinal Method m = comp.getClass().getMethod(\"getValue\", null);\n\t\t\t\t\tvalue = Classes.coerce(m.getReturnType(), bean);\n\t\t\t\t} catch (NoSuchMethodException ex) { //ignore it\n\t\t\t\t}\n\t\t\t\tFields.set(comp, \"rawValue\", value, _converter == null);\n\t\t\t} else {\n\t\t\t\tFields.set(comp, _attr, bean, _converter == null);\n\t\t\t}\n\t\t} catch (ClassCastException ex) {\n\t\t\tthrow UiException.Aide.wrap(ex);\n\t\t} catch (NoSuchMethodException ex) {\n\t\t\t//Bug #1813278, Annotations do not work with xhtml tags\n\t\t\tif (comp instanceof DynamicPropertied) {\n\t\t\t\tfinal DynamicPropertied dpcomp = (DynamicPropertied) comp;\n \t\t\t\tif (dpcomp.hasDynamicProperty(_attr)) {\n\t\t\t\t\t//no way to know destination type of the property, use bean as is\n \t\t\t\t\tdpcomp.setDynamicProperty(_attr, bean);\n \t\t\t\t} else {\n \t\t\t\t\tthrow UiException.Aide.wrap(ex);\n \t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow UiException.Aide.wrap(ex);\n\t\t\t}\n\t\t} catch (ModificationException ex) {\n\t\t\tthrow UiException.Aide.wrap(ex);\n\n\t\t//Bug #1876198 Error msg appears when load page (databind+CustomConstraint)\n\t\t//catching WrongValueException no longer works, so mark it out\n\t\t/*} catch (WrongValueException ex) {\n\t\t\t//Bug #1615371, try to use setRawValue()\n\t\t\tif (\"value\".equals(_attr)) {\n\t\t\t\ttry {\n\t\t\t\t\tFields.set(comp, \"rawValue\", bean, _converter == null);\n\t\t\t\t} catch (Exception ex1) {\n\t\t\t\t\t//exception\n\t\t\t\t\tthrow ex;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow ex;\n\t\t\t}\n\t\t*/\n\t\t}\n\t}","id":52769,"modified_method":"private void myLoadAttribute(Component comp, Object bean) {\n\t\ttry {\n\t\t\t//since 3.1, 20080416, support bindingArgs for non-supported tag\n\t\t\t//bug #2803575, merge bindingArgs together since a component can have\n\t\t\t//multiple bindings on different attributes.\n\t\t\tMap bindArgs = (Map) comp.getAttribute(DataBinder.ARGS);\n\t\t\tif (bindArgs == null) {\n\t\t\t\tbindArgs = new HashMap();\n\t\t\t\tcomp.setAttribute(DataBinder.ARGS, bindArgs);\n\t\t\t}\n\t\t\tif (_args != null) {\n\t\t\t\tbindArgs.putAll(_args);\n\t\t\t\tcomp.setAttribute(_attr+\"_\"+DataBinder.ARGS, _args);\n\t\t\t}\n\t\t\t\n\t\t\tif (_converter != null) {\n\t\t\t\tbean = _converter.coerceToUi(bean, comp);\n\t\t\t\tif (bean == TypeConverter.IGNORE)\n\t\t\t\t\treturn; //ignore, so don't do Fields.set()\n\t\t\t}\n\t\t\t\n\t\t\t//Bug #1876198 Error msg appears when load page (databind+CustomConstraint)\n\t\t\t//catching WrongValueException no longer works, check special case and \n\t\t\t//use setRowValue() method directly\n\t\t\tif ((comp instanceof InputElement) && \"value\".equals(_attr)) {\n\t\t\t\tObject value = bean;\n\t\t\t\ttry { //Bug 1879389\n\t\t\t\t\tfinal Method m = comp.getClass().getMethod(\"getValue\", null);\n\t\t\t\t\tvalue = Classes.coerce(m.getReturnType(), bean);\n\t\t\t\t} catch (NoSuchMethodException ex) { //ignore it\n\t\t\t\t}\n\t\t\t\tFields.set(comp, \"rawValue\", value, _converter == null);\n\t\t\t} else {\n\t\t\t\tFields.set(comp, _attr, bean, _converter == null);\n\t\t\t}\n\t\t} catch (ClassCastException ex) {\n\t\t\tthrow UiException.Aide.wrap(ex);\n\t\t} catch (NoSuchMethodException ex) {\n\t\t\t//Bug #1813278, Annotations do not work with xhtml tags\n\t\t\tif (comp instanceof DynamicPropertied) {\n\t\t\t\tfinal DynamicPropertied dpcomp = (DynamicPropertied) comp;\n \t\t\t\tif (dpcomp.hasDynamicProperty(_attr)) {\n\t\t\t\t\t//no way to know destination type of the property, use bean as is\n \t\t\t\t\tdpcomp.setDynamicProperty(_attr, bean);\n \t\t\t\t} else {\n \t\t\t\t\tthrow UiException.Aide.wrap(ex);\n \t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow UiException.Aide.wrap(ex);\n\t\t\t}\n\t\t} catch (ModificationException ex) {\n\t\t\tthrow UiException.Aide.wrap(ex);\n\n\t\t//Bug #1876198 Error msg appears when load page (databind+CustomConstraint)\n\t\t//catching WrongValueException no longer works, so mark it out\n\t\t/*} catch (WrongValueException ex) {\n\t\t\t//Bug #1615371, try to use setRawValue()\n\t\t\tif (\"value\".equals(_attr)) {\n\t\t\t\ttry {\n\t\t\t\t\tFields.set(comp, \"rawValue\", bean, _converter == null);\n\t\t\t\t} catch (Exception ex1) {\n\t\t\t\t\t//exception\n\t\t\t\t\tthrow ex;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow ex;\n\t\t\t}\n\t\t*/\n\t\t}\n\t}","commit_id":"552636319e4fb33b11966a4a40542c3ef37355ac","url":"https://github.com/zkoss/zk"},{"original_method":"public ActionForward render(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tRenderRequest renderRequest, RenderResponse renderResponse)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)renderRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tPortlet portlet = (Portlet)renderRequest.getAttribute(\n\t\t\tWebKeys.RENDER_PORTLET);\n\n\t\tPortletPreferences preferences =\n\t\t\tPortletPreferencesFactoryUtil.getPortletSetup(\n\t\t\t\trenderRequest, portlet.getPortletId());\n\n\t\tString layoutTemplateId = preferences.getValue(\n\t\t\t\"layout-template-id\",\n\t\t\tPropsValues.NESTED_PORTLETS_LAYOUT_TEMPLATE_DEFAULT);\n\n\t\tString velocityTemplateId = StringPool.BLANK;\n\t\tString velocityTemplateContent = StringPool.BLANK;\n\t\tMap<String,String> velocityColumns = new HashMap<String,String>();\n\n\t\tif (Validator.isNotNull(layoutTemplateId)) {\n\t\t\tTheme theme = themeDisplay.getTheme();\n\n\t\t\tLayoutTemplate layoutTemplate =\n\t\t\t\tLayoutTemplateLocalServiceUtil.getLayoutTemplate(\n\t\t\t\t\tlayoutTemplateId, false, theme.getThemeId());\n\t\t\t\n\t\t\tString content = layoutTemplate.getContent();\n\t\t\t\n\t\t\tMatcher processColumnMatcher = _processColumnPattern.matcher(content);\n\n\t\t\twhile (processColumnMatcher.find()) {\n\t\t\t\tif (Validator.isNotNull(processColumnMatcher.group(2))) {\n\t\t\t\t\tvelocityColumns.put(processColumnMatcher.group(2), \n\t\t\t\t\t\t\tportlet.getPortletId() + \"_\" + processColumnMatcher.group(2) );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprocessColumnMatcher.reset();\n\t\t\t\n\t\t\tcontent = processColumnMatcher.replaceAll( \"$1\\\\${$2}$3\" );\n\n\t\t\tvelocityTemplateId =\n\t\t\t\ttheme.getThemeId() + LayoutTemplateConstants.CUSTOM_SEPARATOR +\n\t\t\t\t\tlayoutTemplateId;\n\n\t\t\t\n\t\t\tMatcher tagIdMatcher = _columnIdPattern.matcher(content);\n\t\t\t\n\t\t\tvelocityTemplateContent = tagIdMatcher.replaceAll( \"$1\" + portlet.getPortletId() + \"$2$3\" );\n\n\t\t}\n\n\t\trenderRequest.setAttribute(\n\t\t\t\tWebKeys.NESTED_PORTLET_VELOCITY_TEMPLATE_ID,\n\t\t\t\tvelocityTemplateId);\n\t\trenderRequest.setAttribute(\n\t\t\t\tWebKeys.NESTED_PORTLET_VELOCITY_TEMPLATE_CONTENT,\n\t\t\t\tvelocityTemplateContent);\n\t\trenderRequest.setAttribute(\n\t\t\t\tWebKeys.VM_VARIABLES,\n\t\t\t\tvelocityColumns);\n\n\t\treturn mapping.findForward(\"portlet.nested_portlets.view\");\n\t}","id":52770,"modified_method":"public ActionForward render(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tRenderRequest renderRequest, RenderResponse renderResponse)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)renderRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tPortlet portlet = (Portlet)renderRequest.getAttribute(\n\t\t\tWebKeys.RENDER_PORTLET);\n\n\t\tPortletPreferences preferences =\n\t\t\tPortletPreferencesFactoryUtil.getPortletSetup(\n\t\t\t\trenderRequest, portlet.getPortletId());\n\n\t\tString layoutTemplateId = preferences.getValue(\n\t\t\t\"layout-template-id\",\n\t\t\tPropsValues.NESTED_PORTLETS_LAYOUT_TEMPLATE_DEFAULT);\n\n\t\tString velocityTemplateId = StringPool.BLANK;\n\t\tString velocityTemplateContent = StringPool.BLANK;\n\n\t\tMap<String, String> columnIds = new HashMap<String, String>();\n\n\t\tif (Validator.isNotNull(layoutTemplateId)) {\n\t\t\tTheme theme = themeDisplay.getTheme();\n\n\t\t\tLayoutTemplate layoutTemplate =\n\t\t\t\tLayoutTemplateLocalServiceUtil.getLayoutTemplate(\n\t\t\t\t\tlayoutTemplateId, false, theme.getThemeId());\n\n\t\t\tString content = layoutTemplate.getContent();\n\n\t\t\tMatcher processColumnMatcher = _processColumnPattern.matcher(\n\t\t\t\tcontent);\n\n\t\t\twhile (processColumnMatcher.find()) {\n\t\t\t\tString columnId = processColumnMatcher.group(2);\n\n\t\t\t\tif (Validator.isNotNull(columnId)) {\n\t\t\t\t\tcolumnIds.put(\n\t\t\t\t\t\tcolumnId,\n\t\t\t\t\t\tportlet.getPortletId() + StringPool.UNDERLINE +\n\t\t\t\t\t\t\tcolumnId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprocessColumnMatcher.reset();\n\n\t\t\tcontent = processColumnMatcher.replaceAll(\"$1\\\\${$2}$3\");\n\n\t\t\tvelocityTemplateId =\n\t\t\t\ttheme.getThemeId() + LayoutTemplateConstants.CUSTOM_SEPARATOR +\n\t\t\t\t\tlayoutTemplateId;\n\n\t\t\tMatcher columnIdMatcher = _columnIdPattern.matcher(content);\n\n\t\t\tvelocityTemplateContent = columnIdMatcher.replaceAll(\n\t\t\t\t\"$1\" + portlet.getPortletId() + \"$2$3\");\n\t\t}\n\n\t\trenderRequest.setAttribute(\n\t\t\tWebKeys.NESTED_PORTLET_VELOCITY_TEMPLATE_ID, velocityTemplateId);\n\t\trenderRequest.setAttribute(\n\t\t\tWebKeys.NESTED_PORTLET_VELOCITY_TEMPLATE_CONTENT,\n\t\t\tvelocityTemplateContent);\n\n\t\tMap<String, Object> vmVariables =\n\t\t\t(Map<String, Object>)renderRequest.getAttribute(\n\t\t\t\tWebKeys.VM_VARIABLES);\n\n\t\tif (vmVariables != null) {\n\t\t\tvmVariables.putAll(columnIds);\n\t\t}\n\t\telse {\n\t\t\trenderRequest.setAttribute(WebKeys.VM_VARIABLES, columnIds);\n\t\t}\n\n\t\treturn mapping.findForward(\"portlet.nested_portlets.view\");\n\t}","commit_id":"1f059defc7c56d2727da0b3296138b0025c1d0e3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n    public void init(FilterConfig config) throws ServletException\n    {\n        fname = config.getFilterName();\n\n        try\n        {\n            WebSocketPolicy policy = factory.getPolicy();\n\n            String max = config.getInitParameter(\"maxIdleTime\");\n            if (max != null)\n            {\n                policy.setIdleTimeout(Long.parseLong(max));\n            }\n\n            max = config.getInitParameter(\"maxTextMessageSize\");\n            if (max != null)\n            {\n                policy.setMaxTextMessageSize(Integer.parseInt(max));\n            }\n\n            max = config.getInitParameter(\"maxBinaryMessageSize\");\n            if (max != null)\n            {\n                policy.setMaxBinaryMessageSize(Integer.parseInt(max));\n            }\n\n            max = config.getInitParameter(\"inputBufferSize\");\n            if (max != null)\n            {\n                policy.setInputBufferSize(Integer.parseInt(max));\n            }\n\n            String key = config.getInitParameter(CONTEXT_ATTRIBUTE_KEY);\n            if (key == null)\n            {\n                // assume default\n                key = WebSocketUpgradeFilter.class.getName();\n            }\n\n            if (config.getServletContext().getAttribute(key) != null)\n            {\n                throw new ServletException(WebSocketUpgradeFilter.class.getName() + \n                        \" is defined twice for the same context attribute key '\" + key\n                        + \"'.  Make sure you have different init-param '\" + \n                        CONTEXT_ATTRIBUTE_KEY + \"' values set\");\n            }\n            config.getServletContext().setAttribute(key,this);\n\n            factory.start();\n        }\n        catch (Exception x)\n        {\n            throw new ServletException(x);\n        }\n    }","id":52771,"modified_method":"@Override\n    public void init(FilterConfig config) throws ServletException\n    {\n        fname = config.getFilterName();\n\n        try\n        {\n            WebSocketPolicy policy = factory.getPolicy();\n\n            String max = config.getInitParameter(\"maxIdleTime\");\n            if (max != null)\n            {\n                policy.setIdleTimeout(Long.parseLong(max));\n            }\n\n            max = config.getInitParameter(\"maxTextMessageSize\");\n            if (max != null)\n            {\n                policy.setMaxTextMessageSize(Integer.parseInt(max));\n            }\n\n            max = config.getInitParameter(\"maxBinaryMessageSize\");\n            if (max != null)\n            {\n                policy.setMaxBinaryMessageSize(Integer.parseInt(max));\n            }\n\n            max = config.getInitParameter(\"inputBufferSize\");\n            if (max != null)\n            {\n                policy.setInputBufferSize(Integer.parseInt(max));\n            }\n\n            String key = config.getInitParameter(CONTEXT_ATTRIBUTE_KEY);\n            if (key == null)\n            {\n                // assume default\n                key = WebSocketUpgradeFilter.class.getName();\n            }\n            \n            setToAttribute(config.getServletContext(), key);\n\n            factory.start();\n        }\n        catch (Exception x)\n        {\n            throw new ServletException(x);\n        }\n    }","commit_id":"93520df3f9d03814edba373beff4fea760219dc9","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public static WebSocketUpgradeFilter configureContext(ServletContextHandler context)\n    {\n        // Dynamically add filter\n        WebSocketUpgradeFilter filter = new WebSocketUpgradeFilter();\n\n        String name = \"Jetty_WebSocketUpgradeFilter\";\n        String pathSpec = \"/*\";\n        EnumSet<DispatcherType> dispatcherTypes = EnumSet.of(DispatcherType.REQUEST);\n\n        FilterHolder fholder = new FilterHolder(filter);\n        fholder.setName(name);\n        fholder.setInitParameter(CONTEXT_ATTRIBUTE_KEY,WebSocketUpgradeFilter.class.getName());\n        context.addFilter(fholder,pathSpec,dispatcherTypes);\n\n        if (LOG.isDebugEnabled())\n        {\n            LOG.debug(\"Adding [{}] {} mapped to {} to {}\",name,filter,pathSpec,context);\n        }\n\n        // Store reference to the WebSocketUpgradeFilter\n        context.setAttribute(WebSocketUpgradeFilter.class.getName(),filter);\n\n        return filter;\n    }","id":52772,"modified_method":"public static WebSocketUpgradeFilter configureContext(ServletContextHandler context) throws ServletException\n    {\n        // Prevent double configure\n        WebSocketUpgradeFilter filter = (WebSocketUpgradeFilter)context.getAttribute(WebSocketUpgradeFilter.class.getName());\n        if (filter != null)\n        {\n            return filter;\n        }\n        \n        // Dynamically add filter\n        filter = new WebSocketUpgradeFilter();\n        filter.setToAttribute(context, WebSocketUpgradeFilter.class.getName());\n\n        String name = \"Jetty_WebSocketUpgradeFilter\";\n        String pathSpec = \"/*\";\n        EnumSet<DispatcherType> dispatcherTypes = EnumSet.of(DispatcherType.REQUEST);\n\n        FilterHolder fholder = new FilterHolder(filter);\n        fholder.setName(name);\n        fholder.setInitParameter(CONTEXT_ATTRIBUTE_KEY,WebSocketUpgradeFilter.class.getName());\n        context.addFilter(fholder,pathSpec,dispatcherTypes);\n\n        if (LOG.isDebugEnabled())\n        {\n            LOG.debug(\"Adding [{}] {} mapped to {} to {}\",name,filter,pathSpec,context);\n        }\n\n        return filter;\n    }","commit_id":"93520df3f9d03814edba373beff4fea760219dc9","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public static WebSocketUpgradeFilter configureContext(ServletContext context)\n    {\n        WebSocketUpgradeFilter filter = new WebSocketUpgradeFilter();\n\n        String name = \"Jetty_Dynamic_WebSocketUpgradeFilter\";\n        String pathSpec = \"/*\";\n        EnumSet<DispatcherType> dispatcherTypes = EnumSet.of(DispatcherType.REQUEST);\n        boolean isMatchAfter = false;\n        String urlPatterns[] = { pathSpec };\n\n        FilterRegistration.Dynamic dyn = context.addFilter(name,filter);\n        dyn.setInitParameter(CONTEXT_ATTRIBUTE_KEY,WebSocketUpgradeFilter.class.getName());\n        dyn.addMappingForUrlPatterns(dispatcherTypes,isMatchAfter,urlPatterns);\n\n        if (LOG.isDebugEnabled())\n        {\n            LOG.debug(\"Adding [{}] {} mapped to {} to {}\",name,filter,pathSpec,context);\n        }\n\n        return filter;\n    }","id":52773,"modified_method":"public static WebSocketUpgradeFilter configureContext(ServletContext context) throws ServletException\n    {\n        // Prevent double configure\n        WebSocketUpgradeFilter filter = (WebSocketUpgradeFilter)context.getAttribute(WebSocketUpgradeFilter.class.getName());\n        if (filter != null)\n        {\n            return filter;\n        }\n        \n        // Dynamically add filter\n        filter = new WebSocketUpgradeFilter();\n        filter.setToAttribute(context, WebSocketUpgradeFilter.class.getName());\n\n        String name = \"Jetty_Dynamic_WebSocketUpgradeFilter\";\n        String pathSpec = \"/*\";\n        EnumSet<DispatcherType> dispatcherTypes = EnumSet.of(DispatcherType.REQUEST);\n        boolean isMatchAfter = false;\n        String urlPatterns[] = { pathSpec };\n\n        FilterRegistration.Dynamic dyn = context.addFilter(name,filter);\n        dyn.setInitParameter(CONTEXT_ATTRIBUTE_KEY,WebSocketUpgradeFilter.class.getName());\n        dyn.addMappingForUrlPatterns(dispatcherTypes,isMatchAfter,urlPatterns);\n\n        if (LOG.isDebugEnabled())\n        {\n            LOG.debug(\"Adding [{}] {} mapped to {} to {}\",name,filter,pathSpec,context);\n        }\n\n        return filter;\n    }","commit_id":"93520df3f9d03814edba373beff4fea760219dc9","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public static LookupItem<PsiClass> setShowFQN(final LookupItem<PsiClass> ret) {\n    @NonNls String packageName = ret.getObject().getQualifiedName();\n    if (packageName != null && packageName.lastIndexOf('.') > 0) {\n      packageName = packageName.substring(0, packageName.lastIndexOf('.'));\n    }\n    else {\n      packageName = \"\";\n    }\n    if (packageName.length() == 0) {\n      packageName = \"default package\";\n    }\n\n    ret.setAttribute(LookupItem.TAIL_TEXT_ATTR, \" (\" + packageName + \")\");\n    ret.setAttribute(LookupItem.TAIL_TEXT_SMALL_ATTR, \"\");\n    return ret;\n  }","id":52774,"modified_method":"public static LookupItem<PsiClass> setShowFQN(final LookupItem<PsiClass> ret) {\n    @NonNls String packageName = ret.getObject().getQualifiedName();\n    if (packageName != null && packageName.lastIndexOf('.') > 0) {\n      packageName = packageName.substring(0, packageName.lastIndexOf('.'));\n    }\n    else {\n      packageName = \"\";\n    }\n    if (packageName.length() == 0) {\n      packageName = \"default package\";\n    }\n\n    final String tailText = (String)ret.getAttribute(LookupItem.TAIL_TEXT_ATTR);\n    ret.setAttribute(LookupItem.TAIL_TEXT_ATTR, StringUtil.notNullize(tailText) + \" (\" + packageName + \")\");\n    ret.setAttribute(LookupItem.TAIL_TEXT_SMALL_ATTR, \"\");\n    return ret;\n  }","commit_id":"699862b1c9665329894ec9274c96e5d988e8af34","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean openNewFile()\n\t{\n\t\tboolean retval = false;\n\t\tdata.writer = null;\n\n\t\ttry\n\t\t{\n\t\t\tFile file = new File(buildFilename(true));\n\n\t\t\tOutputStream outputStream;\n\t\t\tif (meta.isZipped())\n\t\t\t{\n\t\t\t\tFileOutputStream fos = new FileOutputStream(file);\n\t\t\t\tdata.zip = new ZipOutputStream(fos);\n\t\t\t\tFile entry = new File(buildFilename(false));\n\t\t\t\tZipEntry zipentry = new ZipEntry(entry.getName());\n\t\t\t\tzipentry.setComment(\"Compressed by Kettle\");\n\t\t\t\tdata.zip.putNextEntry(zipentry);\n\t\t\t\toutputStream = data.zip;\n\t\t\t} else\n\t\t\t{\n\t\t\t\tFileOutputStream fos = new FileOutputStream(file);\n\t\t\t\toutputStream = fos;\n\t\t\t}\n\t\t\tif (meta.getEncoding() != null && meta.getEncoding().length() > 0)\n\t\t\t{\n\t\t\t\tlog.logBasic(toString(), \"Opening output stream in encoding: \" + meta.getEncoding());\n\t\t\t\tdata.writer = new OutputStreamWriter(outputStream, meta.getEncoding());\n\t\t\t\tdata.writer.write(XMLHandler.getXMLHeader(meta.getEncoding()).toCharArray());\n\t\t\t} else\n\t\t\t{\n\t\t\t\tlog.logBasic(toString(), \"Opening output stream in default encoding : \" + Const.XML_ENCODING);\n\t\t\t\tdata.writer = new OutputStreamWriter(outputStream);\n\t\t\t\tdata.writer.write(XMLHandler.getXMLHeader(Const.XML_ENCODING).toCharArray());\n\t\t\t}\n\n\t\t\t// OK, write the header & the parent element:\n\t\t\tdata.writer.write((\"<\" + meta.getMainElement() + \">\" + Const.CR).toCharArray());\n\n\t\t\tretval = true;\n\t\t} catch (Exception e)\n\t\t{\n\t\t\tlogError(\"Error opening new file : \" + e.toString());\n\t\t}\n\t\t// System.out.println(\"end of newFile(), splitnr=\"+splitnr);\n\n\t\tdata.splitnr++;\n\n\t\treturn retval;\n\t}","id":52775,"modified_method":"public boolean openNewFile()\n\t{\n\t\tboolean retval = false;\n\t\tdata.writer = null;\n\n\t\ttry\n\t\t{\n\t\t\tFileObject file = KettleVFS.getFileObject(buildFilename(true));\n\n\t\t\tOutputStream outputStream;\n\t\t\tif (meta.isZipped())\n\t\t\t{\n\t\t\t\tOutputStream fos = KettleVFS.getOutputStream(file, false);\n\t\t\t\tdata.zip = new ZipOutputStream(fos);\n\t\t\t\tFile entry = new File(buildFilename(false));\n\t\t\t\tZipEntry zipentry = new ZipEntry(entry.getName());\n\t\t\t\tzipentry.setComment(\"Compressed by Kettle\");\n\t\t\t\tdata.zip.putNextEntry(zipentry);\n\t\t\t\toutputStream = data.zip;\n\t\t\t} else\n\t\t\t{\n\t\t\t\tOutputStream fos = KettleVFS.getOutputStream(file, false);\n\t\t\t\toutputStream = fos;\n\t\t\t}\n\t\t\tif (meta.getEncoding() != null && meta.getEncoding().length() > 0)\n\t\t\t{\n\t\t\t\tlog.logBasic(toString(), \"Opening output stream in encoding: \" + meta.getEncoding());\n\t\t\t\tdata.writer = new OutputStreamWriter(outputStream, meta.getEncoding());\n\t\t\t\tdata.writer.write(XMLHandler.getXMLHeader(meta.getEncoding()).toCharArray());\n\t\t\t} else\n\t\t\t{\n\t\t\t\tlog.logBasic(toString(), \"Opening output stream in default encoding : \" + Const.XML_ENCODING);\n\t\t\t\tdata.writer = new OutputStreamWriter(outputStream);\n\t\t\t\tdata.writer.write(XMLHandler.getXMLHeader(Const.XML_ENCODING).toCharArray());\n\t\t\t}\n\n\t\t\t// OK, write the header & the parent element:\n\t\t\tdata.writer.write((\"<\" + meta.getMainElement() + \">\" + Const.CR).toCharArray());\n\n\t\t\tretval = true;\n\t\t} catch (Exception e)\n\t\t{\n\t\t\tlogError(\"Error opening new file : \" + e.toString());\n\t\t}\n\t\t// System.out.println(\"end of newFile(), splitnr=\"+splitnr);\n\n\t\tdata.splitnr++;\n\n\t\treturn retval;\n\t}","commit_id":"25bcd8cd49906986028a179b309b6837800cce35","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private boolean writeRowToFile(Object[] r)\n\t{\n\t\tValueMetaAndData v;\n\n\t\ttry\n\t\t{\n\t\t\tif (first)\n\t\t\t{\n\t\t\t\tdata.previousMeta = getInputRowMeta().clone();\n\n\t\t\t\tfirst = false;\n\n\t\t\t\tdata.fieldnrs = new int[meta.getOutputFields().length];\n\t\t\t\tfor (int i = 0; i < meta.getOutputFields().length; i++)\n\t\t\t\t{\n\t\t\t\t\tdata.fieldnrs[i] = data.previousMeta.indexOfValue(meta.getOutputFields()[i]\n\t\t\t\t\t\t\t.getFieldName());\n\t\t\t\t\tif (data.fieldnrs[i] < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlogError(\"Field [\" + meta.getOutputFields()[i].getFieldName()\n\t\t\t\t\t\t\t\t+ \"] couldn't be found in the input stream!\");\n\t\t\t\t\t\tsetErrors(1);\n\t\t\t\t\t\tstopAll();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (meta.getOutputFields() == null || meta.getOutputFields().length == 0)\n\t\t\t{\n\t\t\t\t/*\n\t\t\t\t * Write all values in stream to text file.\n\t\t\t\t */\n\n\t\t\t\t// OK, write a new row to the XML file:\n\t\t\t\tdata.writer.write((\" <\" + meta.getRepeatElement() + \">\").toCharArray());\n\n\t\t\t\tfor (int i = 0; i < r.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (i > 0)\n\t\t\t\t\t\tdata.writer.write(' '); // put a space between\n\t\t\t\t\t// the XML elements of\n\t\t\t\t\t// the row.\n\n\t\t\t\t\tv = (ValueMetaAndData) r[i];\n\n\t\t\t\t\twriteField(v, -1, v.getValueMeta().getName());\n\t\t\t\t}\n\t\t\t} else\n\t\t\t{\n\t\t\t\t/*\n\t\t\t\t * Only write the fields specified!\n\t\t\t\t */\n\n\t\t\t\t// Write a new row to the XML file:\n\t\t\t\tdata.writer.write((\" <\" + meta.getRepeatElement() + \">\").toCharArray());\n\n\t\t\t\tfor (int i = 0; i < meta.getOutputFields().length; i++)\n\t\t\t\t{\n\t\t\t\t\tXMLField outputField = meta.getOutputFields()[i];\n\n\t\t\t\t\tif (i > 0)\n\t\t\t\t\t\tdata.writer.write(' '); // a space between\n\t\t\t\t\t// elements\n\n\t\t\t\t\tObject obj = r[data.fieldnrs[i]];\n\n\t\t\t\t\tif (obj instanceof ValueMetaAndData)\n\t\t\t\t\t\tv = (ValueMetaAndData) r[data.fieldnrs[i]];\n\t\t\t\t\telse\n\t\t\t\t\t\tv = new ValueMetaAndData(outputField.getElementName(),obj);\n\n\t\t\t\t\tv.getValueMeta().setLength(outputField.getLength(), outputField.getPrecision());\n\n\t\t\t\t\tString element;\n\t\t\t\t\tif (outputField.getElementName() != null && outputField.getElementName().length() > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\telement = outputField.getElementName();\n\t\t\t\t\t} else\n\t\t\t\t\t{\n\t\t\t\t\t\telement = v.getValueMeta().getName();\n\t\t\t\t\t}\n\t\t\t\t\twriteField(v, i, element);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tdata.writer.write((\" <\/\" + meta.getRepeatElement() + \">\").toCharArray());\n\t\t\tdata.writer.write(Const.CR.toCharArray());\n\t\t} catch (Exception e)\n\t\t{\n\t\t\tlogError(\"Error writing XML row :\" + e.toString() + Const.CR + \"Row: \" + r);\n\t\t\treturn false;\n\t\t}\n\n\t\tlinesOutput++;\n\n\t\treturn true;\n\t}","id":52776,"modified_method":"private void writeRowToFile(RowMetaInterface rowMeta, Object[] r) throws KettleException\n\t{\n\t\tValueMetaAndData v;\n\n\t\ttry\n\t\t{\n\t\t\tif (first)\n\t\t\t{\n\t\t\t\tdata.previousMeta = rowMeta.clone();\n\n\t\t\t\tfirst = false;\n\n\t\t\t\tdata.fieldnrs = new int[meta.getOutputFields().length];\n\t\t\t\tfor (int i = 0; i < meta.getOutputFields().length; i++)\n\t\t\t\t{\n\t\t\t\t\tdata.fieldnrs[i] = data.previousMeta.indexOfValue(meta.getOutputFields()[i].getFieldName());\n\t\t\t\t\tif (data.fieldnrs[i] < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new KettleException(\"Field [\" + meta.getOutputFields()[i].getFieldName()+ \"] couldn't be found in the input stream!\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (meta.getOutputFields() == null || meta.getOutputFields().length == 0)\n\t\t\t{\n\t\t\t\t/*\n\t\t\t\t * Write all values in stream to text file.\n\t\t\t\t */\n\n\t\t\t\t// OK, write a new row to the XML file:\n\t\t\t\tdata.writer.write((\" <\" + meta.getRepeatElement() + \">\").toCharArray());\n\n\t\t\t\tfor (int i = 0; i < data.previousMeta.size(); i++)\n\t\t\t\t{\r\n\t\t\t\t\t// Put a space between the XML elements of the row\r\n\t\t\t\t\t//\n\t\t\t\t\tif (i > 0) data.writer.write(' ');\n\r\n\t\t\t\t\tValueMetaInterface valueMeta = data.previousMeta.getValueMeta(i);\r\n\t\t\t\t\tObject valueData = r[i];\r\n\t\t\t\t\t\n\t\t\t\t\twriteField(new ValueMetaAndData(valueMeta, valueData), -1, valueMeta.getName());\n\t\t\t\t}\n\t\t\t} \r\n\t\t\telse\n\t\t\t{\n\t\t\t\t/*\n\t\t\t\t * Only write the fields specified!\n\t\t\t\t */\n\n\t\t\t\t// Write a new row to the XML file:\n\t\t\t\tdata.writer.write((\" <\" + meta.getRepeatElement() + \">\").toCharArray());\n\n\t\t\t\tfor (int i = 0; i < meta.getOutputFields().length; i++)\n\t\t\t\t{\n\t\t\t\t\tXMLField outputField = meta.getOutputFields()[i];\n\n\t\t\t\t\tif (i > 0)\n\t\t\t\t\t\tdata.writer.write(' '); // a space between\n\t\t\t\t\t// elements\n\n\t\t\t\t\tObject obj = r[data.fieldnrs[i]];\n\n\t\t\t\t\tif (obj instanceof ValueMetaAndData)\n\t\t\t\t\t\tv = (ValueMetaAndData) r[data.fieldnrs[i]];\n\t\t\t\t\telse\n\t\t\t\t\t\tv = new ValueMetaAndData(outputField.getElementName(),obj);\n\n\t\t\t\t\tv.getValueMeta().setLength(outputField.getLength(), outputField.getPrecision());\n\n\t\t\t\t\tString element;\n\t\t\t\t\tif (outputField.getElementName() != null && outputField.getElementName().length() > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\telement = outputField.getElementName();\n\t\t\t\t\t} else\n\t\t\t\t\t{\n\t\t\t\t\t\telement = v.getValueMeta().getName();\n\t\t\t\t\t}\n\t\t\t\t\twriteField(v, i, element);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tdata.writer.write((\" <\/\" + meta.getRepeatElement() + \">\").toCharArray());\n\t\t\tdata.writer.write(Const.CR.toCharArray());\n\t\t} \r\n\t\tcatch (Exception e)\n\t\t{\n\t\t\tthrow new KettleException(\"Error writing XML row :\" + e.toString() + Const.CR + \"Row: \" + getInputRowMeta().getString(r), e);\n\t\t}\n\n\t\tlinesOutput++;\n\t}","commit_id":"25bcd8cd49906986028a179b309b6837800cce35","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException\n\t{\n\t\tmeta = (XMLOutputMeta) smi;\n\t\tdata = (XMLOutputData) sdi;\n\n\t\tObject[] r;\n\t\tboolean result = true;\n\n\t\tr = getRow(); // This also waits for a row to be finished.\n\n\t\tif ((r != null && linesOutput > 0 && meta.getSplitEvery() > 0 && (linesOutput % meta.getSplitEvery()) == 0))\n\t\t{\n\t\t\t// Done with this part or with everything.\n\t\t\tcloseFile();\n\n\t\t\t// Not finished: open another file...\n\t\t\tif (r != null)\n\t\t\t{\n\t\t\t\tif (!openNewFile())\n\t\t\t\t{\n\t\t\t\t\tlogError(\"Unable to open new file (split #\" + data.splitnr + \"...\");\n\t\t\t\t\tsetErrors(1);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (r == null) // no more input to be expected...\n\t\t{\n\t\t\tsetOutputDone();\n\t\t\treturn false;\n\t\t}\n\n\t\tresult = writeRowToFile(r);\n\t\tif (!result)\n\t\t{\n\t\t\tsetErrors(1);\n\t\t\tstopAll();\n\t\t\treturn false;\n\t\t}\n\t\tdata.outputRowMeta = getInputRowMeta().clone();\n\t\tmeta.getFields(data.outputRowMeta, getStepname(), null, null, this);\n\t\tputRow(data.outputRowMeta, r); // in case we want it to go further...\n\n\t\tif (checkFeedback(linesOutput))\n\t\t\tlogBasic(\"linenr \" + linesOutput);\n\n\t\treturn result;\n\t}","id":52777,"modified_method":"public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException\n\t{\n\t\tmeta = (XMLOutputMeta) smi;\n\t\tdata = (XMLOutputData) sdi;\n\n\t\tObject[] r;\n\t\tboolean result = true;\n\n\t\tr = getRow(); // This also waits for a row to be finished.\n\n\t\tif ((r != null && linesOutput > 0 && meta.getSplitEvery() > 0 && (linesOutput % meta.getSplitEvery()) == 0))\n\t\t{\n\t\t\t// Done with this part or with everything.\n\t\t\tcloseFile();\n\n\t\t\t// Not finished: open another file...\n\t\t\tif (r != null)\n\t\t\t{\n\t\t\t\tif (!openNewFile())\n\t\t\t\t{\n\t\t\t\t\tlogError(\"Unable to open new file (split #\" + data.splitnr + \"...\");\n\t\t\t\t\tsetErrors(1);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (r == null) // no more input to be expected...\n\t\t{\n\t\t\tsetOutputDone();\n\t\t\treturn false;\n\t\t}\n\n\t\twriteRowToFile(getInputRowMeta(), r);\n\t\t\r\n\t\tdata.outputRowMeta = getInputRowMeta().clone();\n\t\tmeta.getFields(data.outputRowMeta, getStepname(), null, null, this);\n\t\tputRow(data.outputRowMeta, r); // in case we want it to go further...\n\n\t\tif (checkFeedback(linesOutput)) logBasic(\"linenr \" + linesOutput);\n\n\t\treturn result;\n\t}","commit_id":"25bcd8cd49906986028a179b309b6837800cce35","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void saveProperties(Properties p, String fileName) {\r\n\r\n        OutputStream propsFile=null;\r\n\r\n        try {\r\n            propsFile = new FileOutputStream(fileName);\r\n            p.store(propsFile, environmentSubstitute(meta.getComment()));\r\n            propsFile.close();\r\n            \r\n\t\t\tif( meta.AddToResult())\r\n\t\t\t{\r\n\t\t\t\t// Add this to the result file names...\r\n\t\t\t\tResultFile resultFile = new ResultFile(ResultFile.FILE_TYPE_GENERAL, KettleVFS.getFileObject(fileName), getTransMeta().getName(), getStepname());\r\n\t\t\t\tresultFile.setComment(Messages.getString(\"PropertyOutput.Log.FileAddedResult\"));\r\n\t\t\t\taddResultFile(resultFile);\r\n\t\t\t}   \r\n            \r\n        } catch (IOException ioe) {\r\n            System.out.println(\"I/O Exception.\");\r\n            ioe.printStackTrace();\r\n            System.exit(0);\r\n        }\r\n        finally\r\n        {\r\n        \tif(propsFile!=null)\r\n        \t{\r\n        \t\ttry{        \t\r\n        \t\t\tpropsFile.close();\r\n        \t\t\tpropsFile=null;\r\n        \t\t}catch(Exception e){}\r\n        \t}\r\n        }\r\n    }","id":52778,"modified_method":"private void saveProperties(Properties p) throws KettleException{\r\n\r\n        OutputStream propsFile=null;\r\n\r\n        try {\r\n            propsFile = KettleVFS.getOutputStream(data.file,false);\r\n            p.store(propsFile, environmentSubstitute(meta.getComment()));\r\n            propsFile.close();\r\n            \r\n\t\t\tif( meta.AddToResult())\r\n\t\t\t{\r\n\t\t\t\t// Add this to the result file names...\r\n\t\t\t\tResultFile resultFile = new ResultFile(ResultFile.FILE_TYPE_GENERAL, data.file, getTransMeta().getName(), getStepname());\r\n\t\t\t\tresultFile.setComment(Messages.getString(\"PropertyOutput.Log.FileAddedResult\"));\r\n\t\t\t\taddResultFile(resultFile);\r\n\t\t\t}   \r\n            \r\n        } catch (Exception e) {\r\n        \tthrow new KettleException(e);\r\n        }\r\n        finally\r\n        {\r\n        \tif(propsFile!=null)\r\n        \t{\r\n        \t\ttry{        \t\r\n        \t\t\tpropsFile.close();\r\n        \t\t\tpropsFile=null;\r\n        \t\t}catch(Exception e){}\r\n        \t}\r\n        }\r\n    }","commit_id":"2bef5e3fd4e5745a0b8658b71df6481e268cf4eb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void createParentFolder() throws KettleException\r\n\t{\r\n\t\t// Do we need to create parent folder ?\r\n\t\tif(meta.isCreateParentFolder())\r\n\t\t{\r\n\t\t\t// Check for parent folder\r\n\t\t\tFileObject parentfolder=null;\r\n    \t\ttry\r\n    \t\t{\r\n    \t\t\t// Get parent folder\r\n\t    \t\tparentfolder=KettleVFS.getFileObject(data.filename).getParent();\t    \t\t\r\n\t    \t\tif(!parentfolder.exists())\t\r\n\t    \t\t{\r\n\t    \t\t\tif(log.isDetailed()) log.logDetailed(toString(),Messages.getString(\"PropertyOutput.Log.ParentFolderExists\",parentfolder.getName().toString()));\r\n\t    \t\t\tparentfolder.createFolder();\r\n\t    \t\t\tif(log.isDetailed()) log.logDetailed(toString(),Messages.getString(\"PropertyOutput.Log.CanNotCreateParentFolder\",parentfolder.getName().toString()));\r\n\t    \t\t}\r\n    \t\t}\r\n    \t\tcatch (Exception e) {\t\t\t\t\t\r\n\t\t\t\t// The field is unreachable !\r\n\t\t\t\tlogError(Messages.getString(\"PropertyOutput.Log.CanNotCreateParentFolder\", parentfolder.getName().toString()));\r\n\t\t\t\tthrow new KettleException(Messages.getString(\"PropertyOutput.Log.CanNotCreateParentFolder\",parentfolder.getName().toString()));\r\n\t\t\t\t\r\n    \t\t}\r\n    \t\t finally {\r\n             \tif ( parentfolder != null )\r\n             \t{\r\n             \t\ttry  {\r\n             \t\t\tparentfolder.close();\r\n             \t\t}\r\n             \t\tcatch ( Exception ex ) {};\r\n             \t}\r\n             }\t\t\r\n\t\t}\t\r\n\t}","id":52779,"modified_method":"private void createParentFolder() throws KettleException\r\n\t{\r\n\t\t\r\n\t\tif(meta.isCreateParentFolder())\r\n\t\t{\r\n\t\t\tFileObject parentfolder=null;\r\n\t\t\ttry\r\n\t\t\t{\t\r\n\t\t\t\t// Do we need to create parent folder ?\r\n\t\t\t\r\n\t\t\t\t// Check for parent folder\r\n    \t\t\t// Get parent folder\r\n\t    \t\tparentfolder=data.file.getParent();\t    \t\t\r\n\t    \t\tif(!parentfolder.exists())\t\r\n\t    \t\t{\r\n\t    \t\t\tif(log.isDetailed()) log.logDetailed(toString(),Messages.getString(\"PropertyOutput.Log.ParentFolderExists\",parentfolder.getName().toString()));\r\n\t    \t\t\tparentfolder.createFolder();\r\n\t    \t\t\tif(log.isDetailed()) log.logDetailed(toString(),Messages.getString(\"PropertyOutput.Log.CanNotCreateParentFolder\",parentfolder.getName().toString()));\r\n\t    \t\t}\t\t\r\n\t\t\t}\r\n\t\t\tcatch (Exception e) {\t\t\t\t\t\r\n\t\t\t\tlogError(Messages.getString(\"PropertyOutput.Log.CanNotCreateParentFolder\", parentfolder.getName().toString()));\r\n\t\t\t\tthrow new KettleException(Messages.getString(\"PropertyOutput.Log.CanNotCreateParentFolder\",parentfolder.getName().toString()));\r\n\t\t\t\r\n\t\t\t}\r\n\t\t finally {\r\n\t         \tif ( parentfolder != null )\r\n\t         \t{\r\n\t         \t\ttry  {\r\n\t         \t\t\tparentfolder.close();\r\n\t         \t\t}\r\n\t         \t\tcatch ( Exception ex ) {};\r\n\t         \t}\r\n\t\t }\r\n\t\t} \t\r\n\t}","commit_id":"2bef5e3fd4e5745a0b8658b71df6481e268cf4eb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void dispose(StepMetaInterface smi, StepDataInterface sdi)\r\n\t{\r\n\t\tmeta=(PropertyOutputMeta)smi;\r\n\t\tdata=(PropertyOutputData)sdi;\r\n\r\n\t\tsetOutputDone();\r\n\t\tsuper.dispose(smi, sdi);\r\n\t}","id":52780,"modified_method":"public void dispose(StepMetaInterface smi, StepDataInterface sdi)\r\n\t{\r\n\t\tmeta=(PropertyOutputMeta)smi;\r\n\t\tdata=(PropertyOutputData)sdi;\r\n\t\tif(data.file!=null)\r\n\t\t{\r\n     \t\ttry  {\r\n     \t\t\tdata.file.close();\r\n     \t\t\tdata.file=null;\r\n     \t\t}\r\n     \t\tcatch ( Exception ex ) {};\r\n\t\t}\r\n\t\tsetOutputDone();\r\n\t\tsuper.dispose(smi, sdi);\r\n\t}","commit_id":"2bef5e3fd4e5745a0b8658b71df6481e268cf4eb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException\r\n\t{\r\n\t\tmeta=(PropertyOutputMeta)smi;\r\n\t\tdata=(PropertyOutputData)sdi;\r\n\t\t\r\n\t\t\r\n\t\tObject[] r=getRow();    // this also waits for a previous step to be finished.\r\n\t\r\n\r\n\t\tif (r==null)  // no more input to be expected...\r\n\t\t{\r\n\t\t\tif(!first)\r\n\t\t\t{\r\n\t\t\t\t// Save properties to file\r\n\t\t\t\tsaveProperties(data.pro, data.filename);\r\n\t\t\t}\r\n\t\t\tsetOutputDone();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif(first)\r\n\t\t{\r\n\t\t\tfirst=false;\r\n\t\t\tdata.inputRowMeta = getInputRowMeta();\r\n            data.outputRowMeta = data.inputRowMeta.clone();\r\n            meta.getFields(data.outputRowMeta, getStepname(), null, null, this);\r\n            \r\n\t\t\t// Let's take the index of Key field ...\t\r\n\t\t\tdata.indexOfKeyField =data.inputRowMeta.indexOfValue(meta.getKeyField());\r\n\t\t\tif (data.indexOfKeyField<0)\r\n\t\t\t{\r\n\t\t\t\t// The field is unreachable !\r\n\t\t\t\tlogError(Messages.getString(\"PropertyOutput.Log.ErrorFindingField\", meta.getKeyField()));\r\n\t\t\t\tthrow new KettleException(Messages.getString(\"PropertyOutput.Log.ErrorFindingField\",meta.getKeyField()));\r\n\t\t\t}\r\n            \r\n\t\t\t// Let's take the index of Key field ...\t\r\n\t\t\tdata.indexOfValueField =data.inputRowMeta.indexOfValue(meta.getValueField());\r\n\t\t\tif (data.indexOfValueField<0)\r\n\t\t\t{\r\n\t\t\t\t// The field is unreachable !\r\n\t\t\t\tlogError(Messages.getString(\"PropertyOutput.Log.ErrorFindingField\", meta.getValueField()));\r\n\t\t\t\tthrow new KettleException(Messages.getString(\"PropertyOutput.Log.ErrorFindingField\",meta.getValueField()));\r\n\t\t\t}\r\n            \r\n\t\t\t// Let's check for filename...\r\n\t\t\t\r\n\t\t\tdata.filename=buildFilename();\r\n\t\t\t\r\n\t\t\t// Check if filename is empty..\r\n\t\t\tif(Const.isEmpty(data.filename))\r\n\t\t\t{\r\n\t\t\t\tlogError(Messages.getString(\"PropertyOutput.Log.FilenameEmpty\"));\r\n\t\t\t\tthrow new KettleException(Messages.getString(\"PropertyOutput.Log.FilenameEmpty\"));\t\r\n\t\t\t}\r\n\t\t\t// Create parent folder if needed...\r\n\t\t\tcreateParentFolder();\r\n\t\t\t\r\n\t\r\n\t\t} // end first\r\n\t\t\r\n\t\t\r\n\t\tboolean sendToErrorRow=false;\r\n        String errorMessage = null;\r\n\t\tString propkey=null;\r\n\t\tString propvalue=null;\r\n\t\t\r\n\t\t// Get value field\r\n        if(data.indexOfKeyField>-1) propkey= data.inputRowMeta.getString(r,data.indexOfKeyField);\r\n        if(data.indexOfValueField>-1) propvalue= data.inputRowMeta.getString(r,data.indexOfValueField);\r\n\r\n        try\r\n        {\r\n\r\n            if(!data.KeySet.contains(propkey))\r\n            {\r\n            \tif(log.isDetailed()) \r\n            \t{\r\n            \t\tlog.logDetailed(toString(),Messages.getString(\"PropertyOutput.Log.Key\", propkey));\r\n            \t\tlog.logDetailed(toString(),Messages.getString(\"PropertyOutput.Log.Value\" ,propvalue));\r\n            \t}\r\n                // Update property\r\n                data.pro.setProperty(propkey, propvalue);\r\n            \tputRow(data.outputRowMeta, r);       // in case we want it to go further...\r\n            \tincrementLinesOutput();\r\n\r\n            \tif (checkFeedback(getLinesRead())) \r\n            \t{\r\n            \t\tif(log.isBasic()) logBasic(\"linenr \"+getLinesRead());\r\n            \t}\r\n            \tdata.KeySet.add(propkey);\r\n            }\r\n            \t\r\n\t\t}\r\n\t\tcatch(KettleStepException e)\r\n\t\t{\r\n\t\t\tif (getStepMeta().isDoingErrorHandling())\r\n            {\r\n                sendToErrorRow = true;\r\n                errorMessage = e.toString();\r\n            }\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tlogError(Messages.getString(\"PropertyOutputMeta.Log.ErrorInStep\")+e.getMessage()); //$NON-NLS-1$\r\n\t\t\t\tsetErrors(1);\r\n\t\t\t\tstopAll();\r\n\t\t\t\tsetOutputDone();  // signal end to receiver(s)\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t  if (sendToErrorRow)\r\n\t\t\t  {\r\n                putError(data.outputRowMeta, r, 1L, errorMessage, null, \"PROPSOUTPUTO001\");\r\n\t\t\t  }\r\n\t        \r\n\r\n\t\t}\t\r\n\t\t\r\n\t\treturn true;\r\n\t}","id":52781,"modified_method":"public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException\r\n\t{\r\n\t\tmeta=(PropertyOutputMeta)smi;\r\n\t\tdata=(PropertyOutputData)sdi;\r\n\t\t\r\n\t\t\r\n\t\tObject[] r=getRow();    // this also waits for a previous step to be finished.\r\n\t\r\n\r\n\t\tif (r==null)  // no more input to be expected...\r\n\t\t{\r\n\t\t\tif(!first)\r\n\t\t\t{\r\n\t\t\t\t// Save properties to file\r\n\t\t\t\tsaveProperties(data.pro);\r\n\t\t\t}\r\n\t\t\tsetOutputDone();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif(first)\r\n\t\t{\r\n\t\t\tfirst=false;\r\n\t\t\tdata.inputRowMeta = getInputRowMeta();\r\n            data.outputRowMeta = data.inputRowMeta.clone();\r\n            meta.getFields(data.outputRowMeta, getStepname(), null, null, this);\r\n            \r\n\t\t\t// Let's take the index of Key field ...\t\r\n\t\t\tdata.indexOfKeyField =data.inputRowMeta.indexOfValue(meta.getKeyField());\r\n\t\t\tif (data.indexOfKeyField<0)\r\n\t\t\t{\r\n\t\t\t\t// The field is unreachable !\r\n\t\t\t\tlogError(Messages.getString(\"PropertyOutput.Log.ErrorFindingField\", meta.getKeyField()));\r\n\t\t\t\tthrow new KettleException(Messages.getString(\"PropertyOutput.Log.ErrorFindingField\",meta.getKeyField()));\r\n\t\t\t}\r\n            \r\n\t\t\t// Let's take the index of Key field ...\t\r\n\t\t\tdata.indexOfValueField =data.inputRowMeta.indexOfValue(meta.getValueField());\r\n\t\t\tif (data.indexOfValueField<0)\r\n\t\t\t{\r\n\t\t\t\t// The field is unreachable !\r\n\t\t\t\tlogError(Messages.getString(\"PropertyOutput.Log.ErrorFindingField\", meta.getValueField()));\r\n\t\t\t\tthrow new KettleException(Messages.getString(\"PropertyOutput.Log.ErrorFindingField\",meta.getValueField()));\r\n\t\t\t}\r\n            \r\n\t\t\t// Let's check for filename...\r\n\t\t\t\r\n\t\t\ttry{\r\n\t\t\tdata.file=KettleVFS.getFileObject(buildFilename());\r\n\t\t\t}catch(Exception e){throw new KettleException(e);}\r\n\t\t\t\r\n\t\t\t// Check if filename is empty..\r\n\t\t\tif(data.file==null)\r\n\t\t\t{\r\n\t\t\t\tlogError(Messages.getString(\"PropertyOutput.Log.FilenameEmpty\"));\r\n\t\t\t\tthrow new KettleException(Messages.getString(\"PropertyOutput.Log.FilenameEmpty\"));\t\r\n\t\t\t}\r\n\t\t\t// Create parent folder if needed...\r\n\t\t\tcreateParentFolder();\r\n\t\t\t\r\n\t\r\n\t\t} // end first\r\n\t\t\r\n\t\t\r\n\t\tboolean sendToErrorRow=false;\r\n        String errorMessage = null;\r\n\t\tString propkey=null;\r\n\t\tString propvalue=null;\r\n\t\t\r\n\t\t// Get value field\r\n        if(data.indexOfKeyField>-1) propkey= data.inputRowMeta.getString(r,data.indexOfKeyField);\r\n        if(data.indexOfValueField>-1) propvalue= data.inputRowMeta.getString(r,data.indexOfValueField);\r\n\r\n        try\r\n        {\r\n\r\n            if(!data.KeySet.contains(propkey))\r\n            {\r\n            \tif(log.isDetailed()) \r\n            \t{\r\n            \t\tlog.logDetailed(toString(),Messages.getString(\"PropertyOutput.Log.Key\", propkey));\r\n            \t\tlog.logDetailed(toString(),Messages.getString(\"PropertyOutput.Log.Value\" ,propvalue));\r\n            \t}\r\n                // Update property\r\n                data.pro.setProperty(propkey, propvalue);\r\n            \tputRow(data.outputRowMeta, r);       // in case we want it to go further...\r\n            \tincrementLinesOutput();\r\n\r\n            \tif (checkFeedback(getLinesRead())) \r\n            \t{\r\n            \t\tif(log.isBasic()) logBasic(\"linenr \"+getLinesRead());\r\n            \t}\r\n            \tdata.KeySet.add(propkey);\r\n            }\r\n            \t\r\n\t\t}\r\n\t\tcatch(KettleStepException e)\r\n\t\t{\r\n\t\t\tif (getStepMeta().isDoingErrorHandling())\r\n            {\r\n                sendToErrorRow = true;\r\n                errorMessage = e.toString();\r\n            }\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tlogError(Messages.getString(\"PropertyOutputMeta.Log.ErrorInStep\")+e.getMessage()); //$NON-NLS-1$\r\n\t\t\t\tsetErrors(1);\r\n\t\t\t\tstopAll();\r\n\t\t\t\tsetOutputDone();  // signal end to receiver(s)\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t  if (sendToErrorRow)\r\n\t\t\t  {\r\n                putError(data.outputRowMeta, r, 1L, errorMessage, null, \"PROPSOUTPUTO001\");\r\n\t\t\t  }\r\n\t\t}\t\r\n\t\t\r\n\t\treturn true;\r\n\t}","commit_id":"2bef5e3fd4e5745a0b8658b71df6481e268cf4eb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public PropertyOutputData()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tdateParser = new SimpleDateFormat(DATE_FORMAT);\r\n\t\t\r\n\t\tindexOfKeyField=-1;\r\n\t\tindexOfValueField=-1;\r\n\t\t\r\n\t\tfilename=null;\r\n\t\tindexOfFieldfilename=-1;\r\n\r\n\t}","id":52782,"modified_method":"public PropertyOutputData()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tdateParser = new SimpleDateFormat(DATE_FORMAT);\r\n\t\t\r\n\t\tindexOfKeyField=-1;\r\n\t\tindexOfValueField=-1;\r\n\t\t\r\n\t\tindexOfFieldfilename=-1;\r\n\t\tfile=null;\r\n\r\n\t}","commit_id":"2bef5e3fd4e5745a0b8658b71df6481e268cf4eb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public boolean openNewFile()\r\n\t{\r\n\t\tboolean retval=false;\r\n\t\t\r\n\t\ttry\r\n\t\t{\r\n\t\t\tWorkbookSettings ws = new WorkbookSettings();\r\n            ws.setLocale(Locale.getDefault());\r\n            \r\n            if (!Const.isEmpty(meta.getEncoding()))\r\n            {\r\n                ws.setEncoding(meta.getEncoding());\r\n            }\r\n            \r\n            FileObject file = KettleVFS.getFileObject(buildFilename());\r\n\r\n            if(meta.isAddToResultFiles())\r\n            {\r\n\t\t\t\t// Add this to the result file names...\r\n\t\t\t\tResultFile resultFile = new ResultFile(ResultFile.FILE_TYPE_GENERAL, file, getTransMeta().getName(), getStepname());\r\n\t\t\t\tresultFile.setComment(\"This file was created with an Excel output step by Pentaho Data Integration\");\r\n\t            addResultFile(resultFile);\r\n            }\r\n\r\n            // Create the workboook\r\n            if (!meta.isTemplateEnabled())\r\n            {\t\t\t\t\r\n            \tif (file.exists())\r\n            \t{\r\n            \t\t// Attempts to load it from the local file failed in the past.\r\n            \t\t// As such we will try to remove the file first...\r\n            \t\t//\r\n            \t\tfile.delete();\r\n            \t}\r\n            \t\r\n\t\t\t\t// Create a new Workbook\r\n            \tdata.outputStream = file.getContent().getOutputStream();\r\n\t\t\t\tdata.workbook = Workbook.createWorkbook(data.outputStream, ws);\r\n\r\n\t\t\t\t// Create a sheet?\r\n\t\t\t\tString sheetname = \"Sheet1\";\r\n            \tdata.sheet = data.workbook.getSheet(sheetname);\r\n            \tif (data.sheet==null)\r\n            \t{\r\n            \t\tdata.sheet = data.workbook.createSheet(sheetname, 0);\r\n            \t}\r\n\r\n            } else {\r\n\r\n            \tFileObject fo = KettleVFS.getFileObject(environmentSubstitute(meta.getTemplateFileName()));\r\n\t\t\t\t// create the openFile from the template\r\n\r\n\t\t\t\tWorkbook tmpWorkbook=Workbook.getWorkbook(fo.getContent().getInputStream(), ws);\r\n\t\t\t\tdata.workbook = Workbook.createWorkbook(file.getContent().getOutputStream(), tmpWorkbook);\r\n\t\t\t\t\r\n            \ttmpWorkbook.close();\r\n            \t// use only the first sheet as template\r\n            \tdata.sheet = data.workbook.getSheet(0);\r\n            \t// save inital number of columns\r\n            \tdata.templateColumns = data.sheet.getColumns();\r\n            }\r\n\t\t\t\r\n            // Rename Sheet\r\n\t\t\tif (!Const.isEmpty(environmentSubstitute(meta.getSheetname()))) \r\n\t\t\t{\r\n\t\t\t\tdata.sheet.setName(environmentSubstitute(meta.getSheetname())); \r\n\t\t\t}\r\n\r\n\t\t\tif (meta.isSheetProtected())\r\n\t\t\t{\r\n\t\t\t\t// Protect Sheet by setting password\r\n\t\t\t\tdata.sheet.getSettings().setProtected(true); \r\n\t\t\t\tdata.sheet.getSettings().setPassword(environmentSubstitute(meta.getPassword()));\r\n\t\t\t}\r\n            \r\n\r\n            // Set the initial position...\r\n            \r\n            data.positionX = 0;\r\n            if (meta.isTemplateEnabled() && meta.isTemplateAppend())\r\n            {\r\n            \tdata.positionY = data.sheet.getRows();\r\n            } else {\r\n            \tdata.positionY = 0;\r\n            }\r\n\r\n\t\t\tretval=true;\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tlogError(\"Error opening new file\", e);\r\n\t\t\tsetErrors(1);\r\n\t\t}\r\n\t\t// System.out.println(\"end of newFile(), splitnr=\"+splitnr);\r\n\r\n\t\tdata.splitnr++;\r\n\r\n\t\treturn retval;\r\n\t}","id":52783,"modified_method":"public boolean openNewFile()\r\n\t{\r\n\t\tboolean retval=false;\r\n\t\t\r\n\t\ttry\r\n\t\t{\r\n\t\t\tWorkbookSettings ws = new WorkbookSettings();\r\n            ws.setLocale(Locale.getDefault());\r\n            \r\n            if (!Const.isEmpty(meta.getEncoding()))\r\n            {\r\n                ws.setEncoding(meta.getEncoding());\r\n            }\r\n            String filename=buildFilename();\r\n            FileObject file = KettleVFS.getFileObject(filename);\r\n\r\n            if(meta.isAddToResultFiles())\r\n            {\r\n\t\t\t\t// Add this to the result file names...\r\n\t\t\t\tResultFile resultFile = new ResultFile(ResultFile.FILE_TYPE_GENERAL, file, getTransMeta().getName(), getStepname());\r\n\t\t\t\tresultFile.setComment(\"This file was created with an Excel output step by Pentaho Data Integration\");\r\n\t            addResultFile(resultFile);\r\n            }\r\n\r\n            // Create the workboook\r\n            if (!meta.isTemplateEnabled())\r\n            {\t\t\t\t\r\n            \t/*if (file.exists())\r\n            \t{\r\n            \t\t// Attempts to load it from the local file failed in the past.\r\n            \t\t// As such we will try to remove the file first...\r\n            \t\t//\r\n            \t\tfile.delete();\r\n            \t}*/\r\n            \t\r\n            \t\r\n               \tif(meta.isAppend() && file.exists())\r\n            \t{\r\n               \t\tFile fle = new File(filename);\r\n                    boolean find=false;\r\n                    int position=0;\r\n                    \r\n            \t\t// Update Workbook\r\n            \t\tdata.workbook = Workbook.createWorkbook(fle ,Workbook.getWorkbook(fle));\r\n            \t\t\r\n            \t\t// get available sheets\r\n            \t\tString listSheets[]=data.workbook.getSheetNames();\r\n            \t\t\r\n            \t\t// Let's see if this sheet already exist...\r\n            \t\tfor (int i=0;i<listSheets.length;i++)\r\n            \t\t{\r\n            \t\t\tif(listSheets[i].equals(meta.getSheetname()))\r\n            \t\t\t{\r\n            \t\t\t\t// We find the sheet\r\n            \t\t\t\tfind=true;\r\n            \t\t\t\tposition=i;\r\n            \t\t\t}\r\n            \t\t\t\r\n            \t\t}\r\n    \t\t\t\t\r\n            \t\tif(find)\r\n            \t\t{\r\n            \t\t\t// let's delete sheet\r\n            \t\t\tdata.workbook.removeSheet(position);\r\n            \t\t}\r\n            \t\t\r\n                \t// and now .. we create the new sheet\r\n                \tdata.sheet = data.workbook.createSheet(meta.getSheetname(),data.workbook.getNumberOfSheets()+1);\r\n\r\n\t\t\t\t\r\n            \t}else{\r\n            \t\t// Create a new Workbook\r\n                \tdata.outputStream = file.getContent().getOutputStream();\r\n    \t\t\t\tdata.workbook = Workbook.createWorkbook(data.outputStream, ws);\r\n\r\n    \t\t\t\t// Create a sheet?\r\n    \t\t\t\tString sheetname = \"Sheet1\";\r\n                \tdata.sheet = data.workbook.getSheet(sheetname);\r\n                \tif (data.sheet==null)\r\n                \t{\r\n                \t\tdata.sheet = data.workbook.createSheet(sheetname, 0);\r\n                \t}\r\n            \t}\r\n            \t\r\n            \t\r\n\t\t\r\n\r\n            } else {\r\n\r\n            \tFileObject fo = KettleVFS.getFileObject(environmentSubstitute(meta.getTemplateFileName()));\r\n\t\t\t\t// create the openFile from the template\r\n\r\n\t\t\t\tWorkbook tmpWorkbook=Workbook.getWorkbook(fo.getContent().getInputStream(), ws);\r\n\t\t\t\tdata.workbook = Workbook.createWorkbook(file.getContent().getOutputStream(), tmpWorkbook);\r\n\t\t\t\t\r\n            \ttmpWorkbook.close();\r\n            \t// use only the first sheet as template\r\n            \tdata.sheet = data.workbook.getSheet(0);\r\n            \t// save inital number of columns\r\n            \tdata.templateColumns = data.sheet.getColumns();\r\n            }\r\n\t\t\t\r\n            // Rename Sheet\r\n\t\t\tif (!Const.isEmpty(environmentSubstitute(meta.getSheetname()))) \r\n\t\t\t{\r\n\t\t\t\tdata.sheet.setName(environmentSubstitute(meta.getSheetname())); \r\n\t\t\t}\r\n\r\n\t\t\tif (meta.isSheetProtected())\r\n\t\t\t{\r\n\t\t\t\t// Protect Sheet by setting password\r\n\t\t\t\tdata.sheet.getSettings().setProtected(true); \r\n\t\t\t\tdata.sheet.getSettings().setPassword(environmentSubstitute(meta.getPassword()));\r\n\t\t\t}\r\n            \r\n\r\n            // Set the initial position...\r\n            \r\n            data.positionX = 0;\r\n            if (meta.isTemplateEnabled() && meta.isTemplateAppend())\r\n            {\r\n            \tdata.positionY = data.sheet.getRows();\r\n            } else {\r\n            \tdata.positionY = 0;\r\n            }\r\n\r\n\t\t\tretval=true;\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tlogError(\"Error opening new file\", e);\r\n\t\t\tsetErrors(1);\r\n\t\t}\r\n\t\t// System.out.println(\"end of newFile(), splitnr=\"+splitnr);\r\n\r\n\t\tdata.splitnr++;\r\n\r\n\t\treturn retval;\r\n\t}","commit_id":"0279031439c8b85a0b054e50fca6e2ccc2542cfb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private boolean closeFile()\r\n\t{\r\n\t\tboolean retval=false;\r\n\t\t\r\n\t\ttry\r\n\t\t{\r\n\t\t\tif ( data.workbook != null )\r\n\t\t\t{\r\n\t\t\t    data.workbook.write();\r\n                data.workbook.close();\r\n                data.outputStream.close();\r\n                data.outputStream=null;\r\n                data.workbook = null;\r\n\t\t\t}\r\n            data.formats.clear();\r\n\r\n            // Explicitly call garbage collect to have file handle\r\n            // released. Bug tracker: PDI-48\r\n\t\t\tSystem.gc();\r\n            \r\n\t\t\tretval=true;\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n            logError(\"Unable to close openFile file\", e);\r\n\t\t\tsetErrors(1);\r\n\t\t}\r\n\r\n\t\treturn retval;\r\n\t}","id":52784,"modified_method":"private boolean closeFile()\r\n\t{\r\n\t\tboolean retval=false;\r\n\t\t\r\n\t\ttry\r\n\t\t{\r\n\r\n\t\t\tif ( data.workbook != null )\r\n\t\t\t{\r\n\t\t\t    data.workbook.write();\r\n                data.workbook.close();\r\n                data.workbook = null;\r\n                if(data.outputStream!=null) \r\n                {\t\r\n                \tdata.outputStream.close();\r\n                \tdata.outputStream=null;\r\n                }\r\n               \r\n\t\t\t}\r\n            //data.formats.clear();\r\n\r\n            // Explicitly call garbage collect to have file handle\r\n            // released. Bug tracker: PDI-48\r\n\t\t\tSystem.gc();\r\n            \r\n\t\t\tretval=true;\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n            logError(\"Unable to close openFile file\", e);\r\n\t\t\tsetErrors(1);\r\n\t\t}\r\n\r\n\t\treturn retval;\r\n\t}","commit_id":"0279031439c8b85a0b054e50fca6e2ccc2542cfb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void getInfo(ExcelOutputMeta tfoi)\r\n\t{\r\n\t\ttfoi.setFileName(   wFilename.getText() );\r\n        tfoi.setEncoding( wEncoding.getText() );\r\n\t\ttfoi.setExtension(  wExtension.getText() );\r\n\t\ttfoi.setTemplateFileName(  wTemplateFilename.getText() );\r\n\t\ttfoi.setSplitEvery( Const.toInt(wSplitEvery.getText(), 0) );\r\n\r\n\t\ttfoi.setHeaderEnabled( wHeader.getSelection() ); \r\n\t\ttfoi.setFooterEnabled( wFooter.getSelection() );\r\n\t\ttfoi.setStepNrInFilename( wAddStepnr.getSelection() );\r\n\t\ttfoi.setDateInFilename( wAddDate.getSelection() );\r\n\t\ttfoi.setTimeInFilename( wAddTime.getSelection() );\r\n\t\ttfoi.setAddToResultFiles( wAddToResult.getSelection() );\r\n\t\t\r\n\t\ttfoi.setProtectSheet( wProtectSheet.getSelection() );\r\n\t\ttfoi.setPassword(   wPassword.getText() );\r\n\t\ttfoi.setTemplateEnabled( wTemplate.getSelection() );\r\n\t\ttfoi.setTemplateAppend( wTemplateAppend.getSelection() );\r\n\t\tif (wSheetname.getText()!=null)\r\n\t\t{\r\n\t\t\ttfoi.setSheetname(   wSheetname.getText() );\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\ttfoi.setSheetname( \"Sheet 1\" );\r\n\t\t}\r\n\r\n\t\tint i;\r\n\t\t//Table table = wFields.table;\r\n\t\t\r\n\t\tint nrfields = wFields.nrNonEmpty();\r\n\r\n\t\ttfoi.allocate(nrfields);\r\n\t\t\r\n\t\tfor (i=0;i<nrfields;i++)\r\n\t\t{\r\n\t\t    ExcelField field = new ExcelField();\r\n\t\t    \r\n\t\t\tTableItem item = wFields.getNonEmpty(i);\r\n\t\t\tfield.setName( item.getText(1) );\r\n\t\t\tfield.setType( item.getText(2) );\r\n\t\t\tfield.setFormat( item.getText(3) );\r\n\t\t\t\r\n\t\t\ttfoi.getOutputFields()[i]  = field;\r\n\t\t}\r\n\t}","id":52785,"modified_method":"private void getInfo(ExcelOutputMeta tfoi)\r\n\t{\r\n\t\ttfoi.setFileName(   wFilename.getText() );\r\n        tfoi.setEncoding( wEncoding.getText() );\r\n\t\ttfoi.setExtension(  wExtension.getText() );\r\n\t\ttfoi.setTemplateFileName(  wTemplateFilename.getText() );\r\n\t\ttfoi.setSplitEvery( Const.toInt(wSplitEvery.getText(), 0) );\r\n\t\ttfoi.setAppend( wAppend.getSelection() ); \r\n\t\ttfoi.setHeaderEnabled( wHeader.getSelection() ); \r\n\t\ttfoi.setFooterEnabled( wFooter.getSelection() );\r\n\t\ttfoi.setStepNrInFilename( wAddStepnr.getSelection() );\r\n\t\ttfoi.setDateInFilename( wAddDate.getSelection() );\r\n\t\ttfoi.setTimeInFilename( wAddTime.getSelection() );\r\n\t\ttfoi.setAddToResultFiles( wAddToResult.getSelection() );\r\n\t\t\r\n\t\ttfoi.setProtectSheet( wProtectSheet.getSelection() );\r\n\t\ttfoi.setPassword(   wPassword.getText() );\r\n\t\ttfoi.setTemplateEnabled( wTemplate.getSelection() );\r\n\t\ttfoi.setTemplateAppend( wTemplateAppend.getSelection() );\r\n\t\tif (wSheetname.getText()!=null)\r\n\t\t{\r\n\t\t\ttfoi.setSheetname(   wSheetname.getText() );\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\ttfoi.setSheetname( \"Sheet 1\" );\r\n\t\t}\r\n\r\n\t\tint i;\r\n\t\t//Table table = wFields.table;\r\n\t\t\r\n\t\tint nrfields = wFields.nrNonEmpty();\r\n\r\n\t\ttfoi.allocate(nrfields);\r\n\t\t\r\n\t\tfor (i=0;i<nrfields;i++)\r\n\t\t{\r\n\t\t    ExcelField field = new ExcelField();\r\n\t\t    \r\n\t\t\tTableItem item = wFields.getNonEmpty(i);\r\n\t\t\tfield.setName( item.getText(1) );\r\n\t\t\tfield.setType( item.getText(2) );\r\n\t\t\tfield.setFormat( item.getText(3) );\r\n\t\t\t\r\n\t\t\ttfoi.getOutputFields()[i]  = field;\r\n\t\t}\r\n\t}","commit_id":"0279031439c8b85a0b054e50fca6e2ccc2542cfb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public String open()\r\n\t{\r\n        Shell parent = getParent();\r\n\t\tDisplay display = parent.getDisplay();\r\n\r\n        shell = new Shell(parent, SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX | SWT.MIN);\r\n \t\tprops.setLook(shell);\r\n        setShellImage(shell, input);\r\n\r\n\t\tModifyListener lsMod = new ModifyListener() \r\n\t\t{\r\n\t\t\tpublic void modifyText(ModifyEvent e) \r\n\t\t\t{\r\n\t\t\t\tinput.setChanged();\r\n\t\t\t}\r\n\t\t};\r\n\t\tchanged = input.hasChanged();\r\n\t\t\r\n\t\tFormLayout formLayout = new FormLayout ();\r\n\t\tformLayout.marginWidth  = Const.FORM_MARGIN;\r\n\t\tformLayout.marginHeight = Const.FORM_MARGIN;\r\n\r\n\t\tshell.setLayout(formLayout);\r\n\t\tshell.setText(Messages.getString(\"ExcelOutputDialog.DialogTitle\"));\r\n\t\t\r\n\t\tint middle = props.getMiddlePct();\r\n\t\tint margin = Const.MARGIN;\r\n\r\n\t\t// Stepname line\r\n\t\twlStepname=new Label(shell, SWT.RIGHT);\r\n\t\twlStepname.setText(Messages.getString(\"System.Label.StepName\"));\r\n \t\tprops.setLook(wlStepname);\r\n\t\tfdlStepname=new FormData();\r\n\t\tfdlStepname.left  = new FormAttachment(0, 0);\r\n\t\tfdlStepname.top   = new FormAttachment(0, margin);\r\n\t\tfdlStepname.right = new FormAttachment(middle, -margin);\r\n\t\twlStepname.setLayoutData(fdlStepname);\r\n\t\twStepname=new Text(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n\t\twStepname.setText(stepname);\r\n \t\tprops.setLook(wStepname);\r\n\t\twStepname.addModifyListener(lsMod);\r\n\t\tfdStepname=new FormData();\r\n\t\tfdStepname.left = new FormAttachment(middle, 0);\r\n\t\tfdStepname.top  = new FormAttachment(0, margin);\r\n\t\tfdStepname.right= new FormAttachment(100, 0);\r\n\t\twStepname.setLayoutData(fdStepname);\r\n\r\n\t\twTabFolder = new CTabFolder(shell, SWT.BORDER);\r\n \t\tprops.setLook(wTabFolder, Props.WIDGET_STYLE_TAB);\r\n\t\t\r\n\t\t//////////////////////////\r\n\t\t// START OF FILE TAB///\r\n\t\t///\r\n\t\twFileTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twFileTab.setText(Messages.getString(\"ExcelOutputDialog.FileTab.TabTitle\"));\r\n\t\t\r\n\t\tComposite wFileComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wFileComp);\r\n\r\n\t\tFormLayout fileLayout = new FormLayout();\r\n\t\tfileLayout.marginWidth  = 3;\r\n\t\tfileLayout.marginHeight = 3;\r\n\t\twFileComp.setLayout(fileLayout);\r\n\r\n\t\t// Filename line\r\n\t\twlFilename=new Label(wFileComp, SWT.RIGHT);\r\n\t\twlFilename.setText(Messages.getString(\"ExcelOutputDialog.Filename.Label\"));\r\n \t\tprops.setLook(wlFilename);\r\n\t\tfdlFilename=new FormData();\r\n\t\tfdlFilename.left = new FormAttachment(0, 0);\r\n\t\tfdlFilename.top  = new FormAttachment(0, margin);\r\n\t\tfdlFilename.right= new FormAttachment(middle, -margin);\r\n\t\twlFilename.setLayoutData(fdlFilename);\r\n\r\n\t\twbFilename=new Button(wFileComp, SWT.PUSH| SWT.CENTER);\r\n \t\tprops.setLook(wbFilename);\r\n\t\twbFilename.setText(Messages.getString(\"System.Button.Browse\"));\r\n\t\tfdbFilename=new FormData();\r\n\t\tfdbFilename.right= new FormAttachment(100, 0);\r\n\t\tfdbFilename.top  = new FormAttachment(0, 0);\r\n\t\twbFilename.setLayoutData(fdbFilename);\r\n\r\n\t\twFilename=new TextVar(transMeta, wFileComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wFilename);\r\n\t\twFilename.addModifyListener(lsMod);\r\n\t\tfdFilename=new FormData();\r\n\t\tfdFilename.left = new FormAttachment(middle, 0);\r\n\t\tfdFilename.top  = new FormAttachment(0, margin);\r\n\t\tfdFilename.right= new FormAttachment(wbFilename, -margin);\r\n\t\twFilename.setLayoutData(fdFilename);\r\n\t\t\r\n\t\t// Extension line\r\n\t\twlExtension=new Label(wFileComp, SWT.RIGHT);\r\n\t\twlExtension.setText(Messages.getString(\"System.Label.Extension\"));\r\n \t\tprops.setLook(wlExtension);\r\n\t\tfdlExtension=new FormData();\r\n\t\tfdlExtension.left = new FormAttachment(0, 0);\r\n\t\tfdlExtension.top  = new FormAttachment(wFilename, margin);\r\n\t\tfdlExtension.right= new FormAttachment(middle, -margin);\r\n\t\twlExtension.setLayoutData(fdlExtension);\r\n\t\twExtension=new Text(wFileComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n\t\twExtension.setText(\"\");\r\n \t\tprops.setLook(wExtension);\r\n\t\twExtension.addModifyListener(lsMod);\r\n\t\tfdExtension=new FormData();\r\n\t\tfdExtension.left = new FormAttachment(middle, 0);\r\n\t\tfdExtension.top  = new FormAttachment(wFilename, margin);\r\n\t\tfdExtension.right= new FormAttachment(wbFilename, -margin);\r\n\t\twExtension.setLayoutData(fdExtension);\r\n\r\n\t\t// Create multi-part file?\r\n\t\twlAddStepnr=new Label(wFileComp, SWT.RIGHT);\r\n\t\twlAddStepnr.setText(Messages.getString(\"ExcelOutputDialog.AddStepnr.Label\"));\r\n \t\tprops.setLook(wlAddStepnr);\r\n\t\tfdlAddStepnr=new FormData();\r\n\t\tfdlAddStepnr.left = new FormAttachment(0, 0);\r\n\t\tfdlAddStepnr.top  = new FormAttachment(wExtension, margin);\r\n\t\tfdlAddStepnr.right= new FormAttachment(middle, -margin);\r\n\t\twlAddStepnr.setLayoutData(fdlAddStepnr);\r\n\t\twAddStepnr=new Button(wFileComp, SWT.CHECK);\r\n \t\tprops.setLook(wAddStepnr);\r\n\t\tfdAddStepnr=new FormData();\r\n\t\tfdAddStepnr.left = new FormAttachment(middle, 0);\r\n\t\tfdAddStepnr.top  = new FormAttachment(wExtension, margin);\r\n\t\tfdAddStepnr.right= new FormAttachment(100, 0);\r\n\t\twAddStepnr.setLayoutData(fdAddStepnr);\r\n\t\twAddStepnr.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tinput.setChanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\t// Create multi-part file?\r\n\t\twlAddDate=new Label(wFileComp, SWT.RIGHT);\r\n\t\twlAddDate.setText(Messages.getString(\"ExcelOutputDialog.AddDate.Label\"));\r\n \t\tprops.setLook(wlAddDate);\r\n\t\tfdlAddDate=new FormData();\r\n\t\tfdlAddDate.left = new FormAttachment(0, 0);\r\n\t\tfdlAddDate.top  = new FormAttachment(wAddStepnr, margin);\r\n\t\tfdlAddDate.right= new FormAttachment(middle, -margin);\r\n\t\twlAddDate.setLayoutData(fdlAddDate);\r\n\t\twAddDate=new Button(wFileComp, SWT.CHECK);\r\n \t\tprops.setLook(wAddDate);\r\n\t\tfdAddDate=new FormData();\r\n\t\tfdAddDate.left = new FormAttachment(middle, 0);\r\n\t\tfdAddDate.top  = new FormAttachment(wAddStepnr, margin);\r\n\t\tfdAddDate.right= new FormAttachment(100, 0);\r\n\t\twAddDate.setLayoutData(fdAddDate);\r\n\t\twAddDate.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tinput.setChanged();\r\n\t\t\t\t\t// System.out.println(\"wAddDate.getSelection()=\"+wAddDate.getSelection());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\t// Create multi-part file?\r\n\t\twlAddTime=new Label(wFileComp, SWT.RIGHT);\r\n\t\twlAddTime.setText(Messages.getString(\"ExcelOutputDialog.AddTime.Label\"));\r\n \t\tprops.setLook(wlAddTime);\r\n\t\tfdlAddTime=new FormData();\r\n\t\tfdlAddTime.left = new FormAttachment(0, 0);\r\n\t\tfdlAddTime.top  = new FormAttachment(wAddDate, margin);\r\n\t\tfdlAddTime.right= new FormAttachment(middle, -margin);\r\n\t\twlAddTime.setLayoutData(fdlAddTime);\r\n\t\twAddTime=new Button(wFileComp, SWT.CHECK);\r\n \t\tprops.setLook(wAddTime);\r\n\t\tfdAddTime=new FormData();\r\n\t\tfdAddTime.left = new FormAttachment(middle, 0);\r\n\t\tfdAddTime.top  = new FormAttachment(wAddDate, margin);\r\n\t\tfdAddTime.right= new FormAttachment(100, 0);\r\n\t\twAddTime.setLayoutData(fdAddTime);\r\n\t\twAddTime.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tinput.setChanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\r\n\r\n\t\twbShowFiles=new Button(wFileComp, SWT.PUSH| SWT.CENTER);\r\n\t\tprops.setLook(wbShowFiles);\r\n\t\twbShowFiles.setText(Messages.getString(\"ExcelOutputDialog.ShowFiles.Button\"));\r\n\t\tfdbShowFiles=new FormData();\r\n\t\tfdbShowFiles.left = new FormAttachment(middle, 0);\r\n\t\tfdbShowFiles.top  = new FormAttachment(wAddTime, margin*3);\r\n\t\twbShowFiles.setLayoutData(fdbShowFiles);\r\n\t\twbShowFiles.addSelectionListener(new SelectionAdapter() \r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t{\r\n\t\t\t\tExcelOutputMeta tfoi = new ExcelOutputMeta();\r\n\t\t\t\tgetInfo(tfoi);\r\n\t\t\t\tString files[] = tfoi.getFiles(transMeta);\r\n\t\t\t\tif (files!=null && files.length>0)\r\n\t\t\t\t{\r\n\t\t\t\t\tEnterSelectionDialog esd = new EnterSelectionDialog(shell, files, Messages.getString(\"ExcelOutputDialog.SelectOutputFiles.DialogTitle\"), Messages.getString(\"ExcelOutputDialog.SelectOutputFiles.DialogMessage\"));\r\n\t\t\t\t\tesd.setViewOnly();\r\n\t\t\t\t\tesd.open();\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\r\n\t\t\t\t\tmb.setMessage(Messages.getString(\"ExcelOutputDialog.NoFilesFound.DialogMessage\"));\r\n\t\t\t\t\tmb.setText(Messages.getString(\"System.Dialog.Error.Title\"));\r\n\t\t\t\t\tmb.open(); \r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t);\r\n\t\t\r\n\t\t\r\n\t\t// Add File to the result files name\r\n\t\twlAddToResult=new Label(wFileComp, SWT.RIGHT);\r\n\t\twlAddToResult.setText(Messages.getString(\"ExcelOutputDialog.AddFileToResult.Label\"));\r\n\t\tprops.setLook(wlAddToResult);\r\n\t\tfdlAddToResult=new FormData();\r\n\t\tfdlAddToResult.left  = new FormAttachment(0, 0);\r\n\t\tfdlAddToResult.top   = new FormAttachment(wbShowFiles, 2*margin);\r\n\t\tfdlAddToResult.right = new FormAttachment(middle, -margin);\r\n\t\twlAddToResult.setLayoutData(fdlAddToResult);\r\n\t\twAddToResult=new Button(wFileComp, SWT.CHECK);\r\n\t\twAddToResult.setToolTipText(Messages.getString(\"ExcelOutputDialog.AddFileToResult.Tooltip\"));\r\n \t\tprops.setLook(wAddToResult);\r\n\t\tfdAddToResult=new FormData();\r\n\t\tfdAddToResult.left  = new FormAttachment(middle, 0);\r\n\t\tfdAddToResult.top   = new FormAttachment(wbShowFiles, 2*margin);\r\n\t\tfdAddToResult.right = new FormAttachment(100, 0);\r\n\t\twAddToResult.setLayoutData(fdAddToResult);\r\n\t\tSelectionAdapter lsSelR = new SelectionAdapter()\r\n        {\r\n            public void widgetSelected(SelectionEvent arg0)\r\n            {\r\n                input.setChanged();\r\n            }\r\n        };\r\n\t\twAddToResult.addSelectionListener(lsSelR);\r\n\r\n\t\r\n\t\tfdFileComp=new FormData();\r\n\t\tfdFileComp.left  = new FormAttachment(0, 0);\r\n\t\tfdFileComp.top   = new FormAttachment(0, 0);\r\n\t\tfdFileComp.right = new FormAttachment(100, 0);\r\n\t\tfdFileComp.bottom= new FormAttachment(100, 0);\r\n\t\twFileComp.setLayoutData(fdFileComp);\r\n\t\r\n\t\twFileComp.layout();\r\n\t\twFileTab.setControl(wFileComp);\r\n\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF FILE TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\r\n\t\t//////////////////////////\r\n\t\t// START OF CONTENT TAB///\r\n\t\t///\r\n\t\twContentTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twContentTab.setText(Messages.getString(\"ExcelOutputDialog.ContentTab.TabTitle\"));\r\n\r\n\t\tFormLayout contentLayout = new FormLayout ();\r\n\t\tcontentLayout.marginWidth  = 3;\r\n\t\tcontentLayout.marginHeight = 3;\r\n\t\t\r\n\t\tComposite wContentComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wContentComp);\r\n\t\twContentComp.setLayout(contentLayout);\r\n\r\n\r\n\t\twlHeader=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlHeader.setText(Messages.getString(\"ExcelOutputDialog.Header.Label\"));\r\n \t\tprops.setLook(wlHeader);\r\n\t\tfdlHeader=new FormData();\r\n\t\tfdlHeader.left = new FormAttachment(0, 0);\r\n\t\tfdlHeader.top  = new FormAttachment(0, 0);\r\n\t\tfdlHeader.right= new FormAttachment(middle, -margin);\r\n\t\twlHeader.setLayoutData(fdlHeader);\r\n\t\twHeader=new Button(wContentComp, SWT.CHECK );\r\n \t\tprops.setLook(wHeader);\r\n\t\tfdHeader=new FormData();\r\n\t\tfdHeader.left = new FormAttachment(middle, 0);\r\n\t\tfdHeader.top  = new FormAttachment(0, 0);\r\n\t\tfdHeader.right= new FormAttachment(100, 0);\r\n\t\twHeader.setLayoutData(fdHeader);\r\n\t\twHeader.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tinput.setChanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\twlFooter=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlFooter.setText(Messages.getString(\"ExcelOutputDialog.Footer.Label\"));\r\n \t\tprops.setLook(wlFooter);\r\n\t\tfdlFooter=new FormData();\r\n\t\tfdlFooter.left = new FormAttachment(0, 0);\r\n\t\tfdlFooter.top  = new FormAttachment(wHeader, margin);\r\n\t\tfdlFooter.right= new FormAttachment(middle, -margin);\r\n\t\twlFooter.setLayoutData(fdlFooter);\r\n\t\twFooter=new Button(wContentComp, SWT.CHECK );\r\n \t\tprops.setLook(wFooter);\r\n\t\tfdFooter=new FormData();\r\n\t\tfdFooter.left = new FormAttachment(middle, 0);\r\n\t\tfdFooter.top  = new FormAttachment(wHeader, margin);\r\n\t\tfdFooter.right= new FormAttachment(100, 0);\r\n\t\twFooter.setLayoutData(fdFooter);\r\n\t\twFooter.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tinput.setChanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n        wlEncoding=new Label(wContentComp, SWT.RIGHT);\r\n        wlEncoding.setText(Messages.getString(\"ExcelOutputDialog.Encoding.Label\"));\r\n        props.setLook(wlEncoding);\r\n        fdlEncoding=new FormData();\r\n        fdlEncoding.left = new FormAttachment(0, 0);\r\n        fdlEncoding.top  = new FormAttachment(wFooter, margin);\r\n        fdlEncoding.right= new FormAttachment(middle, -margin);\r\n        wlEncoding.setLayoutData(fdlEncoding);\r\n        wEncoding=new CCombo(wContentComp, SWT.BORDER | SWT.READ_ONLY);\r\n        wEncoding.setEditable(true);\r\n        props.setLook(wEncoding);\r\n        wEncoding.addModifyListener(lsMod);\r\n        fdEncoding=new FormData();\r\n        fdEncoding.left = new FormAttachment(middle, 0);\r\n        fdEncoding.top  = new FormAttachment(wFooter, margin);\r\n        fdEncoding.right= new FormAttachment(100, 0);\r\n        wEncoding.setLayoutData(fdEncoding);\r\n        wEncoding.addFocusListener(new FocusListener()\r\n            {\r\n                public void focusLost(org.eclipse.swt.events.FocusEvent e)\r\n                {\r\n                }\r\n            \r\n                public void focusGained(org.eclipse.swt.events.FocusEvent e)\r\n                {\r\n                    Cursor busy = new Cursor(shell.getDisplay(), SWT.CURSOR_WAIT);\r\n                    shell.setCursor(busy);\r\n                    setEncodings();\r\n                    shell.setCursor(null);\r\n                    busy.dispose();\r\n                }\r\n            }\r\n        );\r\n\r\n\t\twlSplitEvery=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlSplitEvery.setText(Messages.getString(\"ExcelOutputDialog.SplitEvery.Label\"));\r\n \t\tprops.setLook(wlSplitEvery);\r\n\t\tfdlSplitEvery=new FormData();\r\n\t\tfdlSplitEvery.left = new FormAttachment(0, 0);\r\n\t\tfdlSplitEvery.top  = new FormAttachment(wEncoding, margin);\r\n\t\tfdlSplitEvery.right= new FormAttachment(middle, -margin);\r\n\t\twlSplitEvery.setLayoutData(fdlSplitEvery);\r\n\t\twSplitEvery=new Text(wContentComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wSplitEvery);\r\n\t\twSplitEvery.addModifyListener(lsMod);\r\n\t\tfdSplitEvery=new FormData();\r\n\t\tfdSplitEvery.left = new FormAttachment(middle, 0);\r\n\t\tfdSplitEvery.top  = new FormAttachment(wEncoding, margin);\r\n\t\tfdSplitEvery.right= new FormAttachment(100, 0);\r\n\t\twSplitEvery.setLayoutData(fdSplitEvery);\r\n\t\t\r\n\r\n\r\n\r\n\t\t// Sheet name line\n\t\twlSheetname=new Label(wContentComp, SWT.RIGHT);\n\t\twlSheetname.setText(Messages.getString(\"ExcelOutputDialog.Sheetname.Label\"));\n\t\tprops.setLook(wlSheetname);\n\t\tfdlSheetname=new FormData();\n\t\tfdlSheetname.left = new FormAttachment(0, 0);\n\t\tfdlSheetname.top  = new FormAttachment(wSplitEvery, margin);\n\t\tfdlSheetname.right= new FormAttachment(middle, -margin);\n\t\twlSheetname.setLayoutData(fdlSheetname);\n\t\twSheetname=new TextVar(transMeta, wContentComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n\t\twSheetname.setToolTipText(Messages.getString(\"ExcelOutputDialog.Sheetname.Tooltip\"));\n\t\tprops.setLook(wSheetname);\n\t\twSheetname.addModifyListener(lsMod);\n\t\tfdSheetname=new FormData();\n\t\tfdSheetname.left = new FormAttachment(middle, 0);\n\t\tfdSheetname.top  = new FormAttachment(wSplitEvery, margin);\n\t\tfdSheetname.right= new FormAttachment(100, 0);\n\t\twSheetname.setLayoutData(fdSheetname);\r\n\r\n\r\n\t\t// Protect Sheet?\r\n\t\twlProtectSheet=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlProtectSheet.setText(Messages.getString(\"ExcelOutputDialog.ProtectSheet.Label\"));\r\n\t\tprops.setLook(wlProtectSheet);\r\n\t\tfdlProtectSheet=new FormData();\r\n\t\tfdlProtectSheet.left = new FormAttachment(0, 0);\r\n\t\tfdlProtectSheet.top  = new FormAttachment(wSheetname, margin);\r\n\t\tfdlProtectSheet.right= new FormAttachment(middle, -margin);\r\n\t\twlProtectSheet.setLayoutData(fdlProtectSheet);\r\n\t\twProtectSheet=new Button(wContentComp, SWT.CHECK);\r\n\t\tprops.setLook(wProtectSheet);\r\n\t\tfdProtectSheet=new FormData();\r\n\t\tfdProtectSheet.left = new FormAttachment(middle, 0);\r\n\t\tfdProtectSheet.top  = new FormAttachment(wSheetname, margin);\r\n\t\tfdProtectSheet.right= new FormAttachment(100, 0);\r\n\t\twProtectSheet.setLayoutData(fdProtectSheet);\r\n\t\twProtectSheet.addSelectionListener(new SelectionAdapter() \r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\tEnablePassword();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t);\r\n\r\n\n\t\t// Password line\n\t\twlPassword=new Label(wContentComp, SWT.RIGHT);\n\t\twlPassword.setText(Messages.getString(\"ExcelOutputDialog.Password.Label\"));\n\t\tprops.setLook(wlPassword);\n\t\tfdlPassword=new FormData();\n\t\tfdlPassword.left = new FormAttachment(0, 0);\n\t\tfdlPassword.top  = new FormAttachment(wProtectSheet, margin);\n\t\tfdlPassword.right= new FormAttachment(middle, -margin);\n\t\twlPassword.setLayoutData(fdlPassword);\n\t\twPassword=new TextVar(transMeta, wContentComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER | SWT.PASSWORD);\n\t\twPassword.setToolTipText(Messages.getString(\"ExcelOutputDialog.Password.Tooltip\"));\n\t\tprops.setLook(wPassword);\n\t\twPassword.setEchoChar('*');\n\t\twPassword.addModifyListener(lsMod);\n\t\tfdPassword=new FormData();\n\t\tfdPassword.left = new FormAttachment(middle, 0);\n\t\tfdPassword.top  = new FormAttachment(wProtectSheet, margin);\n\t\tfdPassword.right= new FormAttachment(100, 0);\n\t\twPassword.setLayoutData(fdPassword);\r\n\r\n\r\n\t\twlTemplate=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlTemplate.setText(Messages.getString(\"ExcelOutputDialog.Template.Label\"));\r\n \t\tprops.setLook(wlTemplate);\r\n\t\tfdlTemplate=new FormData();\r\n\t\tfdlTemplate.left = new FormAttachment(0, 0);\r\n\t\tfdlTemplate.top  = new FormAttachment(wPassword, margin);\r\n\t\tfdlTemplate.right= new FormAttachment(middle, -margin);\r\n\t\twlTemplate.setLayoutData(fdlTemplate);\r\n\t\twTemplate=new Button(wContentComp, SWT.CHECK );\r\n \t\tprops.setLook(wTemplate);\r\n\t\tfdTemplate=new FormData();\r\n\t\tfdTemplate.left = new FormAttachment(middle, 0);\r\n\t\tfdTemplate.top  = new FormAttachment(wPassword, margin);\r\n\t\tfdTemplate.right= new FormAttachment(100, 0);\r\n\t\twTemplate.setLayoutData(fdTemplate);\r\n\t\twTemplate.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tEnableTemplate();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\t// TemplateFilename line\r\n\t\twlTemplateFilename=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlTemplateFilename.setText(Messages.getString(\"ExcelOutputDialog.TemplateFilename.Label\"));\r\n \t\tprops.setLook(wlTemplateFilename);\r\n\t\tfdlTemplateFilename=new FormData();\r\n\t\tfdlTemplateFilename.left = new FormAttachment(0, 0);\r\n\t\tfdlTemplateFilename.top  = new FormAttachment(wTemplate, margin);\r\n\t\tfdlTemplateFilename.right= new FormAttachment(middle, -margin);\r\n\t\twlTemplateFilename.setLayoutData(fdlTemplateFilename);\r\n\r\n\t\twbTemplateFilename=new Button(wContentComp, SWT.PUSH| SWT.CENTER);\r\n \t\tprops.setLook(wbTemplateFilename);\r\n\t\twbTemplateFilename.setText(Messages.getString(\"System.Button.Browse\"));\r\n\t\tfdbTemplateFilename=new FormData();\r\n\t\tfdbTemplateFilename.right= new FormAttachment(100, 0);\r\n\t\tfdbTemplateFilename.top  = new FormAttachment(wTemplate, 0);\r\n\t\twbTemplateFilename.setLayoutData(fdbTemplateFilename);\r\n\r\n\t\twTemplateFilename=new TextVar(transMeta, wContentComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wTemplateFilename);\r\n\t\twTemplateFilename.addModifyListener(lsMod);\r\n\t\tfdTemplateFilename=new FormData();\r\n\t\tfdTemplateFilename.left = new FormAttachment(middle, 0);\r\n\t\tfdTemplateFilename.top  = new FormAttachment(wTemplate, margin);\r\n\t\tfdTemplateFilename.right= new FormAttachment(wbTemplateFilename, -margin);\r\n\t\twTemplateFilename.setLayoutData(fdTemplateFilename);\r\n\r\n\t\t// Template Append\r\n\t\twlTemplateAppend=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlTemplateAppend.setText(Messages.getString(\"ExcelOutputDialog.TemplateAppend.Label\"));\r\n \t\tprops.setLook(wlTemplateAppend);\r\n\t\tfdlTemplateAppend=new FormData();\r\n\t\tfdlTemplateAppend.left = new FormAttachment(0, 0);\r\n\t\tfdlTemplateAppend.top  = new FormAttachment(wTemplateFilename, margin);\r\n\t\tfdlTemplateAppend.right= new FormAttachment(middle, -margin);\r\n\t\twlTemplateAppend.setLayoutData(fdlTemplateAppend);\r\n\t\twTemplateAppend=new Button(wContentComp, SWT.CHECK );\r\n \t\tprops.setLook(wTemplateAppend);\r\n\t\tfdTemplateAppend=new FormData();\r\n\t\tfdTemplateAppend.left = new FormAttachment(middle, 0);\r\n\t\tfdTemplateAppend.top  = new FormAttachment(wTemplateFilename, margin);\r\n\t\tfdTemplateAppend.right= new FormAttachment(100, 0);\r\n\t\twTemplateAppend.setLayoutData(fdTemplateAppend);\r\n\t\twTemplateAppend.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tinput.setChanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\r\n\n\t\r\n\r\n\r\n\t\t\r\n\t\tfdContentComp = new FormData();\r\n\t\tfdContentComp.left  = new FormAttachment(0, 0);\r\n\t\tfdContentComp.top   = new FormAttachment(0, 0);\r\n\t\tfdContentComp.right = new FormAttachment(100, 0);\r\n\t\tfdContentComp.bottom= new FormAttachment(100, 0);\r\n\t\twContentComp.setLayoutData(fdContentComp);\r\n\r\n\t\twContentComp.layout();\r\n\t\twContentTab.setControl(wContentComp);\r\n\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF CONTENT TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\r\n\t\t// Fields tab...\r\n\t\t//\r\n\t\twFieldsTab = new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twFieldsTab.setText(Messages.getString(\"ExcelOutputDialog.FieldsTab.TabTitle\"));\r\n\t\t\r\n\t\tFormLayout fieldsLayout = new FormLayout ();\r\n\t\tfieldsLayout.marginWidth  = Const.FORM_MARGIN;\r\n\t\tfieldsLayout.marginHeight = Const.FORM_MARGIN;\r\n\t\t\r\n\t\tComposite wFieldsComp = new Composite(wTabFolder, SWT.NONE);\r\n\t\twFieldsComp.setLayout(fieldsLayout);\r\n \t\tprops.setLook(wFieldsComp);\r\n\r\n\t\twGet=new Button(wFieldsComp, SWT.PUSH);\r\n\t\twGet.setText(Messages.getString(\"System.Button.GetFields\"));\r\n\t\twGet.setToolTipText(Messages.getString(\"System.Tooltip.GetFields\"));\r\n\r\n\t\twMinWidth =new Button(wFieldsComp, SWT.PUSH);\r\n\t\twMinWidth.setText(Messages.getString(\"ExcelOutputDialog.MinWidth.Button\"));\r\n\t\twMinWidth.setToolTipText(Messages.getString(\"ExcelOutputDialog.MinWidth.Tooltip\"));\r\n\r\n\t\tsetButtonPositions(new Button[] { wGet, wMinWidth}, margin, null);\r\n\r\n\t\tfinal int FieldsRows=input.getOutputFields().length;\r\n\t\t\r\n\t\t// Prepare a list of possible formats...\r\n        String[] formats = new String[] \r\n           {\r\n                // Numbers\r\n                \"#\",\r\n                \"0\",\r\n                \"0.00\",\r\n                \"#,##0\",\r\n                \"#,##0.00\",\r\n                \"$#,##0;($#,##0)\",\r\n                \"$#,##0;($#,##0)\",\r\n                \"$#,##0;($#,##0)\",\r\n                \"$#,##0;($#,##0)\",\r\n                \"0%\",\r\n                \"0.00%\",\r\n                \"0.00E00\",\r\n                \"#,##0;(#,##0)\",\r\n                \"#,##0;(#,##0)\",\r\n                \"#,##0.00;(#,##0.00)\",\r\n                \"#,##0.00;(#,##0.00)\",\r\n                \"#,##0;(#,##0)\",\r\n                \"#,##0;(#,##0)\",\r\n                \"#,##0.00;(#,##0.00)\",\r\n                \"#,##0.00;(#,##0.00)\",\r\n                \"#,##0.00;(#,##0.00)\",\r\n                \"##0.0E0\",\r\n                \r\n                // Forces text\r\n                \"@\",\r\n                \r\n                // Dates\r\n                \"M/d/yy\",\r\n                \"d-MMM-yy\",\r\n                \"d-MMM\",\r\n                \"MMM-yy\",\r\n                \"h:mm a\",\r\n                \"h:mm:ss a\",\r\n                \"H:mm\",\r\n                \"H:mm:ss\",\r\n                \"M/d/yy H:mm\",\r\n                \"mm:ss\",\r\n                \"H:mm:ss\",\r\n                \"H:mm:ss\",\r\n           };\r\n        \r\n        ColumnInfo[] colinf=new ColumnInfo[] \r\n\t\t    {\r\n\t\t        new ColumnInfo(Messages.getString(\"ExcelOutputDialog.NameColumn.Column\"),       ColumnInfo.COLUMN_TYPE_TEXT,   false),\r\n\t\t        new ColumnInfo(Messages.getString(\"ExcelOutputDialog.TypeColumn.Column\"),       ColumnInfo.COLUMN_TYPE_CCOMBO, ValueMeta.getTypes() ),\r\n\t\t        new ColumnInfo(Messages.getString(\"ExcelOutputDialog.FormatColumn.Column\"),     ColumnInfo.COLUMN_TYPE_CCOMBO, formats),\r\n            };\r\n\t\t\r\n\t\twFields=new TableView(transMeta, wFieldsComp, \r\n\t\t\t\t\t\t      SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI, \r\n\t\t\t\t\t\t      colinf, \r\n\t\t\t\t\t\t      FieldsRows,  \r\n\t\t\t\t\t\t      lsMod,\r\n\t\t\t\t\t\t\t  props\r\n\t\t\t\t\t\t      );\r\n\r\n\t\tfdFields=new FormData();\r\n\t\tfdFields.left  = new FormAttachment(0, 0);\r\n\t\tfdFields.top   = new FormAttachment(0, 0);\r\n\t\tfdFields.right = new FormAttachment(100, 0);\r\n\t\tfdFields.bottom= new FormAttachment(wGet, -margin);\r\n\t\twFields.setLayoutData(fdFields);\r\n\r\n\t\tfdFieldsComp=new FormData();\r\n\t\tfdFieldsComp.left  = new FormAttachment(0, 0);\r\n\t\tfdFieldsComp.top   = new FormAttachment(0, 0);\r\n\t\tfdFieldsComp.right = new FormAttachment(100, 0);\r\n\t\tfdFieldsComp.bottom= new FormAttachment(100, 0);\r\n\t\twFieldsComp.setLayoutData(fdFieldsComp);\r\n\r\n\t\twFieldsComp.layout();\r\n\t\twFieldsTab.setControl(wFieldsComp);\r\n\r\n\t\tfdTabFolder = new FormData();\r\n\t\tfdTabFolder.left  = new FormAttachment(0, 0);\r\n\t\tfdTabFolder.top   = new FormAttachment(wStepname, margin);\r\n\t\tfdTabFolder.right = new FormAttachment(100, 0);\r\n\t\tfdTabFolder.bottom= new FormAttachment(100, -50);\r\n\t\twTabFolder.setLayoutData(fdTabFolder);\r\n\t\t\r\n\t\twOK=new Button(shell, SWT.PUSH);\r\n\t\twOK.setText(Messages.getString(\"System.Button.OK\"));\r\n\r\n\t\twCancel=new Button(shell, SWT.PUSH);\r\n\t\twCancel.setText(Messages.getString(\"System.Button.Cancel\"));\r\n\r\n\t\tsetButtonPositions(new Button[] { wOK, wCancel }, margin, wTabFolder);\r\n\r\n\t\t// Add listeners\r\n\t\tlsOK       = new Listener() { public void handleEvent(Event e) { ok();       } };\r\n\t\tlsGet      = new Listener() { public void handleEvent(Event e) { get();      } };\r\n\t\tlsMinWidth    = new Listener() { public void handleEvent(Event e) { setMinimalWidth(); } };\r\n\t\tlsCancel   = new Listener() { public void handleEvent(Event e) { cancel();   } };\r\n\t\t\r\n\t\twOK.addListener    (SWT.Selection, lsOK    );\r\n\t\twGet.addListener   (SWT.Selection, lsGet   );\r\n\t\twMinWidth.addListener (SWT.Selection, lsMinWidth );\r\n\t\twCancel.addListener(SWT.Selection, lsCancel);\r\n\r\n\t\tlsDef=new SelectionAdapter() { public void widgetDefaultSelected(SelectionEvent e) { ok(); } };\r\n\r\n\t\twStepname.addSelectionListener( lsDef );\r\n\t\twFilename.addSelectionListener( lsDef );\r\n\t\twTemplateFilename.addSelectionListener( lsDef );\r\n\r\n\t\t// Whenever something changes, set the tooltip to the expanded version:\r\n\t\twFilename.addModifyListener(new ModifyListener()\r\n\t\t\t{\r\n\t\t\t\tpublic void modifyText(ModifyEvent e)\r\n\t\t\t\t{\r\n\t\t\t\t\twFilename.setToolTipText(transMeta.environmentSubstitute( wFilename.getText() ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\twTemplateFilename.addModifyListener(new ModifyListener()\r\n\t\t\t{\r\n\t\t\t\tpublic void modifyText(ModifyEvent e)\r\n\t\t\t\t{\r\n\t\t\t\t\twTemplateFilename.setToolTipText(transMeta.environmentSubstitute( wTemplateFilename.getText() ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\t\r\n\r\n\t\twbFilename.addSelectionListener\r\n\t\t(\r\n\t\t\tnew SelectionAdapter()\r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tFileDialog dialog = new FileDialog(shell, SWT.OPEN);\r\n\t\t\t\t\tdialog.setFilterExtensions(new String[] {\"*.xls\", \"*.*\"});\r\n\t\t\t\t\tif (wFilename.getText()!=null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdialog.setFileName(transMeta.environmentSubstitute(wFilename.getText()));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdialog.setFilterNames(new String[] {Messages.getString(\"System.FileType.ExcelFiles\"), Messages.getString(\"System.FileType.AllFiles\")});\r\n\t\t\t\t\tif (dialog.open()!=null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twFilename.setText(dialog.getFilterPath()+System.getProperty(\"file.separator\")+dialog.getFileName());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\twbTemplateFilename.addSelectionListener\r\n\t\t(\r\n\t\t\tnew SelectionAdapter()\r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tFileDialog dialog = new FileDialog(shell, SWT.OPEN);\r\n\t\t\t\t\tdialog.setFilterExtensions(new String[] {\"*.xls\", \"*.*\"});\r\n\t\t\t\t\tif (wTemplateFilename.getText()!=null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdialog.setFileName(transMeta.environmentSubstitute(wTemplateFilename.getText()));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdialog.setFilterNames(new String[] {Messages.getString(\"System.FileType.ExcelFiles\"), Messages.getString(\"System.FileType.AllFiles\")});\r\n\t\t\t\t\tif (dialog.open()!=null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twTemplateFilename.setText(dialog.getFilterPath()+System.getProperty(\"file.separator\")+dialog.getFileName());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\t\r\n\t\t// Detect X or ALT-F4 or something that kills this window...\r\n\t\tshell.addShellListener(\tnew ShellAdapter() { public void shellClosed(ShellEvent e) { cancel(); } } );\r\n\r\n\t\tlsResize = new Listener() \r\n\t\t{\r\n\t\t\tpublic void handleEvent(Event event) \r\n\t\t\t{\r\n\t\t\t\tPoint size = shell.getSize();\r\n\t\t\t\twFields.setSize(size.x-10, size.y-50);\r\n\t\t\t\twFields.table.setSize(size.x-10, size.y-50);\r\n\t\t\t\twFields.redraw();\r\n\t\t\t}\r\n\t\t};\r\n\t\tshell.addListener(SWT.Resize, lsResize);\r\n\r\n\t\twTabFolder.setSelection(0);\r\n\t\t\r\n\t\t// Set the shell size, based upon previous time...\r\n\t\tsetSize();\r\n\t\t\r\n\t\tgetData();\r\n\t\tinput.setChanged(changed);\r\n\t\t\r\n\t\tshell.open();\r\n\t\twhile (!shell.isDisposed())\r\n\t\t{\r\n\t\t\t\tif (!display.readAndDispatch()) display.sleep();\r\n\t\t}\r\n\t\treturn stepname;\r\n\t}","id":52786,"modified_method":"public String open()\r\n\t{\r\n        Shell parent = getParent();\r\n\t\tDisplay display = parent.getDisplay();\r\n\r\n        shell = new Shell(parent, SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX | SWT.MIN);\r\n \t\tprops.setLook(shell);\r\n        setShellImage(shell, input);\r\n\r\n\t\tModifyListener lsMod = new ModifyListener() \r\n\t\t{\r\n\t\t\tpublic void modifyText(ModifyEvent e) \r\n\t\t\t{\r\n\t\t\t\tinput.setChanged();\r\n\t\t\t}\r\n\t\t};\r\n\t\tchanged = input.hasChanged();\r\n\t\t\r\n\t\tFormLayout formLayout = new FormLayout ();\r\n\t\tformLayout.marginWidth  = Const.FORM_MARGIN;\r\n\t\tformLayout.marginHeight = Const.FORM_MARGIN;\r\n\r\n\t\tshell.setLayout(formLayout);\r\n\t\tshell.setText(Messages.getString(\"ExcelOutputDialog.DialogTitle\"));\r\n\t\t\r\n\t\tint middle = props.getMiddlePct();\r\n\t\tint margin = Const.MARGIN;\r\n\r\n\t\t// Stepname line\r\n\t\twlStepname=new Label(shell, SWT.RIGHT);\r\n\t\twlStepname.setText(Messages.getString(\"System.Label.StepName\"));\r\n \t\tprops.setLook(wlStepname);\r\n\t\tfdlStepname=new FormData();\r\n\t\tfdlStepname.left  = new FormAttachment(0, 0);\r\n\t\tfdlStepname.top   = new FormAttachment(0, margin);\r\n\t\tfdlStepname.right = new FormAttachment(middle, -margin);\r\n\t\twlStepname.setLayoutData(fdlStepname);\r\n\t\twStepname=new Text(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n\t\twStepname.setText(stepname);\r\n \t\tprops.setLook(wStepname);\r\n\t\twStepname.addModifyListener(lsMod);\r\n\t\tfdStepname=new FormData();\r\n\t\tfdStepname.left = new FormAttachment(middle, 0);\r\n\t\tfdStepname.top  = new FormAttachment(0, margin);\r\n\t\tfdStepname.right= new FormAttachment(100, 0);\r\n\t\twStepname.setLayoutData(fdStepname);\r\n\r\n\t\twTabFolder = new CTabFolder(shell, SWT.BORDER);\r\n \t\tprops.setLook(wTabFolder, Props.WIDGET_STYLE_TAB);\r\n\t\t\r\n\t\t//////////////////////////\r\n\t\t// START OF FILE TAB///\r\n\t\t///\r\n\t\twFileTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twFileTab.setText(Messages.getString(\"ExcelOutputDialog.FileTab.TabTitle\"));\r\n\t\t\r\n\t\tComposite wFileComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wFileComp);\r\n\r\n\t\tFormLayout fileLayout = new FormLayout();\r\n\t\tfileLayout.marginWidth  = 3;\r\n\t\tfileLayout.marginHeight = 3;\r\n\t\twFileComp.setLayout(fileLayout);\r\n\r\n\t\t// Filename line\r\n\t\twlFilename=new Label(wFileComp, SWT.RIGHT);\r\n\t\twlFilename.setText(Messages.getString(\"ExcelOutputDialog.Filename.Label\"));\r\n \t\tprops.setLook(wlFilename);\r\n\t\tfdlFilename=new FormData();\r\n\t\tfdlFilename.left = new FormAttachment(0, 0);\r\n\t\tfdlFilename.top  = new FormAttachment(0, margin);\r\n\t\tfdlFilename.right= new FormAttachment(middle, -margin);\r\n\t\twlFilename.setLayoutData(fdlFilename);\r\n\r\n\t\twbFilename=new Button(wFileComp, SWT.PUSH| SWT.CENTER);\r\n \t\tprops.setLook(wbFilename);\r\n\t\twbFilename.setText(Messages.getString(\"System.Button.Browse\"));\r\n\t\tfdbFilename=new FormData();\r\n\t\tfdbFilename.right= new FormAttachment(100, 0);\r\n\t\tfdbFilename.top  = new FormAttachment(0, 0);\r\n\t\twbFilename.setLayoutData(fdbFilename);\r\n\r\n\t\twFilename=new TextVar(transMeta, wFileComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wFilename);\r\n\t\twFilename.addModifyListener(lsMod);\r\n\t\tfdFilename=new FormData();\r\n\t\tfdFilename.left = new FormAttachment(middle, 0);\r\n\t\tfdFilename.top  = new FormAttachment(0, margin);\r\n\t\tfdFilename.right= new FormAttachment(wbFilename, -margin);\r\n\t\twFilename.setLayoutData(fdFilename);\r\n\t\t\r\n\t\t// Extension line\r\n\t\twlExtension=new Label(wFileComp, SWT.RIGHT);\r\n\t\twlExtension.setText(Messages.getString(\"System.Label.Extension\"));\r\n \t\tprops.setLook(wlExtension);\r\n\t\tfdlExtension=new FormData();\r\n\t\tfdlExtension.left = new FormAttachment(0, 0);\r\n\t\tfdlExtension.top  = new FormAttachment(wFilename, margin);\r\n\t\tfdlExtension.right= new FormAttachment(middle, -margin);\r\n\t\twlExtension.setLayoutData(fdlExtension);\r\n\t\twExtension=new Text(wFileComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n\t\twExtension.setText(\"\");\r\n \t\tprops.setLook(wExtension);\r\n\t\twExtension.addModifyListener(lsMod);\r\n\t\tfdExtension=new FormData();\r\n\t\tfdExtension.left = new FormAttachment(middle, 0);\r\n\t\tfdExtension.top  = new FormAttachment(wFilename, margin);\r\n\t\tfdExtension.right= new FormAttachment(wbFilename, -margin);\r\n\t\twExtension.setLayoutData(fdExtension);\r\n\r\n\t\t// Create multi-part file?\r\n\t\twlAddStepnr=new Label(wFileComp, SWT.RIGHT);\r\n\t\twlAddStepnr.setText(Messages.getString(\"ExcelOutputDialog.AddStepnr.Label\"));\r\n \t\tprops.setLook(wlAddStepnr);\r\n\t\tfdlAddStepnr=new FormData();\r\n\t\tfdlAddStepnr.left = new FormAttachment(0, 0);\r\n\t\tfdlAddStepnr.top  = new FormAttachment(wExtension, margin);\r\n\t\tfdlAddStepnr.right= new FormAttachment(middle, -margin);\r\n\t\twlAddStepnr.setLayoutData(fdlAddStepnr);\r\n\t\twAddStepnr=new Button(wFileComp, SWT.CHECK);\r\n \t\tprops.setLook(wAddStepnr);\r\n\t\tfdAddStepnr=new FormData();\r\n\t\tfdAddStepnr.left = new FormAttachment(middle, 0);\r\n\t\tfdAddStepnr.top  = new FormAttachment(wExtension, margin);\r\n\t\tfdAddStepnr.right= new FormAttachment(100, 0);\r\n\t\twAddStepnr.setLayoutData(fdAddStepnr);\r\n\t\twAddStepnr.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tinput.setChanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\t// Create multi-part file?\r\n\t\twlAddDate=new Label(wFileComp, SWT.RIGHT);\r\n\t\twlAddDate.setText(Messages.getString(\"ExcelOutputDialog.AddDate.Label\"));\r\n \t\tprops.setLook(wlAddDate);\r\n\t\tfdlAddDate=new FormData();\r\n\t\tfdlAddDate.left = new FormAttachment(0, 0);\r\n\t\tfdlAddDate.top  = new FormAttachment(wAddStepnr, margin);\r\n\t\tfdlAddDate.right= new FormAttachment(middle, -margin);\r\n\t\twlAddDate.setLayoutData(fdlAddDate);\r\n\t\twAddDate=new Button(wFileComp, SWT.CHECK);\r\n \t\tprops.setLook(wAddDate);\r\n\t\tfdAddDate=new FormData();\r\n\t\tfdAddDate.left = new FormAttachment(middle, 0);\r\n\t\tfdAddDate.top  = new FormAttachment(wAddStepnr, margin);\r\n\t\tfdAddDate.right= new FormAttachment(100, 0);\r\n\t\twAddDate.setLayoutData(fdAddDate);\r\n\t\twAddDate.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tinput.setChanged();\r\n\t\t\t\t\t// System.out.println(\"wAddDate.getSelection()=\"+wAddDate.getSelection());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\t// Create multi-part file?\r\n\t\twlAddTime=new Label(wFileComp, SWT.RIGHT);\r\n\t\twlAddTime.setText(Messages.getString(\"ExcelOutputDialog.AddTime.Label\"));\r\n \t\tprops.setLook(wlAddTime);\r\n\t\tfdlAddTime=new FormData();\r\n\t\tfdlAddTime.left = new FormAttachment(0, 0);\r\n\t\tfdlAddTime.top  = new FormAttachment(wAddDate, margin);\r\n\t\tfdlAddTime.right= new FormAttachment(middle, -margin);\r\n\t\twlAddTime.setLayoutData(fdlAddTime);\r\n\t\twAddTime=new Button(wFileComp, SWT.CHECK);\r\n \t\tprops.setLook(wAddTime);\r\n\t\tfdAddTime=new FormData();\r\n\t\tfdAddTime.left = new FormAttachment(middle, 0);\r\n\t\tfdAddTime.top  = new FormAttachment(wAddDate, margin);\r\n\t\tfdAddTime.right= new FormAttachment(100, 0);\r\n\t\twAddTime.setLayoutData(fdAddTime);\r\n\t\twAddTime.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tinput.setChanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\r\n\r\n\t\twbShowFiles=new Button(wFileComp, SWT.PUSH| SWT.CENTER);\r\n\t\tprops.setLook(wbShowFiles);\r\n\t\twbShowFiles.setText(Messages.getString(\"ExcelOutputDialog.ShowFiles.Button\"));\r\n\t\tfdbShowFiles=new FormData();\r\n\t\tfdbShowFiles.left = new FormAttachment(middle, 0);\r\n\t\tfdbShowFiles.top  = new FormAttachment(wAddTime, margin*3);\r\n\t\twbShowFiles.setLayoutData(fdbShowFiles);\r\n\t\twbShowFiles.addSelectionListener(new SelectionAdapter() \r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t{\r\n\t\t\t\tExcelOutputMeta tfoi = new ExcelOutputMeta();\r\n\t\t\t\tgetInfo(tfoi);\r\n\t\t\t\tString files[] = tfoi.getFiles(transMeta);\r\n\t\t\t\tif (files!=null && files.length>0)\r\n\t\t\t\t{\r\n\t\t\t\t\tEnterSelectionDialog esd = new EnterSelectionDialog(shell, files, Messages.getString(\"ExcelOutputDialog.SelectOutputFiles.DialogTitle\"), Messages.getString(\"ExcelOutputDialog.SelectOutputFiles.DialogMessage\"));\r\n\t\t\t\t\tesd.setViewOnly();\r\n\t\t\t\t\tesd.open();\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\r\n\t\t\t\t\tmb.setMessage(Messages.getString(\"ExcelOutputDialog.NoFilesFound.DialogMessage\"));\r\n\t\t\t\t\tmb.setText(Messages.getString(\"System.Dialog.Error.Title\"));\r\n\t\t\t\t\tmb.open(); \r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t);\r\n\t\t\r\n\t\t\r\n\t\t// Add File to the result files name\r\n\t\twlAddToResult=new Label(wFileComp, SWT.RIGHT);\r\n\t\twlAddToResult.setText(Messages.getString(\"ExcelOutputDialog.AddFileToResult.Label\"));\r\n\t\tprops.setLook(wlAddToResult);\r\n\t\tfdlAddToResult=new FormData();\r\n\t\tfdlAddToResult.left  = new FormAttachment(0, 0);\r\n\t\tfdlAddToResult.top   = new FormAttachment(wbShowFiles, 2*margin);\r\n\t\tfdlAddToResult.right = new FormAttachment(middle, -margin);\r\n\t\twlAddToResult.setLayoutData(fdlAddToResult);\r\n\t\twAddToResult=new Button(wFileComp, SWT.CHECK);\r\n\t\twAddToResult.setToolTipText(Messages.getString(\"ExcelOutputDialog.AddFileToResult.Tooltip\"));\r\n \t\tprops.setLook(wAddToResult);\r\n\t\tfdAddToResult=new FormData();\r\n\t\tfdAddToResult.left  = new FormAttachment(middle, 0);\r\n\t\tfdAddToResult.top   = new FormAttachment(wbShowFiles, 2*margin);\r\n\t\tfdAddToResult.right = new FormAttachment(100, 0);\r\n\t\twAddToResult.setLayoutData(fdAddToResult);\r\n\t\tSelectionAdapter lsSelR = new SelectionAdapter()\r\n        {\r\n            public void widgetSelected(SelectionEvent arg0)\r\n            {\r\n                input.setChanged();\r\n            }\r\n        };\r\n\t\twAddToResult.addSelectionListener(lsSelR);\r\n\r\n\t\r\n\t\tfdFileComp=new FormData();\r\n\t\tfdFileComp.left  = new FormAttachment(0, 0);\r\n\t\tfdFileComp.top   = new FormAttachment(0, 0);\r\n\t\tfdFileComp.right = new FormAttachment(100, 0);\r\n\t\tfdFileComp.bottom= new FormAttachment(100, 0);\r\n\t\twFileComp.setLayoutData(fdFileComp);\r\n\t\r\n\t\twFileComp.layout();\r\n\t\twFileTab.setControl(wFileComp);\r\n\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF FILE TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\r\n\t\t//////////////////////////\r\n\t\t// START OF CONTENT TAB///\r\n\t\t///\r\n\t\twContentTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twContentTab.setText(Messages.getString(\"ExcelOutputDialog.ContentTab.TabTitle\"));\r\n\r\n\t\tFormLayout contentLayout = new FormLayout ();\r\n\t\tcontentLayout.marginWidth  = 3;\r\n\t\tcontentLayout.marginHeight = 3;\r\n\t\t\r\n\t\tComposite wContentComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wContentComp);\r\n\t\twContentComp.setLayout(contentLayout);\r\n\t\t\r\n\t\t// Append checkbox\r\n\t\twlAppend=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlAppend.setText(Messages.getString(\"ExcelOutputDialog.Append.Label\"));\r\n \t\tprops.setLook(wlAppend);\r\n\t\tfdlAppend=new FormData();\r\n\t\tfdlAppend.left = new FormAttachment(0, 0);\r\n\t\tfdlAppend.top  = new FormAttachment(0, 0);\r\n\t\tfdlAppend.right= new FormAttachment(middle, -margin);\r\n\t\twlAppend.setLayoutData(fdlAppend);\r\n\t\twAppend=new Button(wContentComp, SWT.CHECK);\r\n \t\tprops.setLook(wAppend);\r\n \t\twAppend.setToolTipText(Messages.getString(\"ExcelOutputDialog.Append.Tooltip\"));\r\n\t\tfdAppend=new FormData();\r\n\t\tfdAppend.left = new FormAttachment(middle, 0);\r\n\t\tfdAppend.top  = new FormAttachment(0, 0);\r\n\t\tfdAppend.right= new FormAttachment(100, 0);\r\n\t\twAppend.setLayoutData(fdAppend);\r\n\t\twAppend.addSelectionListener(new SelectionAdapter() \r\n\t        {\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent arg0)\r\n\t\t\t\t{\r\n\t\t\t\t\tinput.setChanged();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\r\n\t\t\r\n\r\n\r\n\t\twlHeader=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlHeader.setText(Messages.getString(\"ExcelOutputDialog.Header.Label\"));\r\n \t\tprops.setLook(wlHeader);\r\n\t\tfdlHeader=new FormData();\r\n\t\tfdlHeader.left = new FormAttachment(0, 0);\r\n\t\tfdlHeader.top  = new FormAttachment(wAppend, margin);\r\n\t\tfdlHeader.right= new FormAttachment(middle, -margin);\r\n\t\twlHeader.setLayoutData(fdlHeader);\r\n\t\twHeader=new Button(wContentComp, SWT.CHECK );\r\n \t\tprops.setLook(wHeader);\r\n\t\tfdHeader=new FormData();\r\n\t\tfdHeader.left = new FormAttachment(middle, 0);\r\n\t\tfdHeader.top  = new FormAttachment(wAppend, margin);\r\n\t\tfdHeader.right= new FormAttachment(100, 0);\r\n\t\twHeader.setLayoutData(fdHeader);\r\n\t\twHeader.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tinput.setChanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\twlFooter=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlFooter.setText(Messages.getString(\"ExcelOutputDialog.Footer.Label\"));\r\n \t\tprops.setLook(wlFooter);\r\n\t\tfdlFooter=new FormData();\r\n\t\tfdlFooter.left = new FormAttachment(0, 0);\r\n\t\tfdlFooter.top  = new FormAttachment(wHeader, margin);\r\n\t\tfdlFooter.right= new FormAttachment(middle, -margin);\r\n\t\twlFooter.setLayoutData(fdlFooter);\r\n\t\twFooter=new Button(wContentComp, SWT.CHECK );\r\n \t\tprops.setLook(wFooter);\r\n\t\tfdFooter=new FormData();\r\n\t\tfdFooter.left = new FormAttachment(middle, 0);\r\n\t\tfdFooter.top  = new FormAttachment(wHeader, margin);\r\n\t\tfdFooter.right= new FormAttachment(100, 0);\r\n\t\twFooter.setLayoutData(fdFooter);\r\n\t\twFooter.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tinput.setChanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n        wlEncoding=new Label(wContentComp, SWT.RIGHT);\r\n        wlEncoding.setText(Messages.getString(\"ExcelOutputDialog.Encoding.Label\"));\r\n        props.setLook(wlEncoding);\r\n        fdlEncoding=new FormData();\r\n        fdlEncoding.left = new FormAttachment(0, 0);\r\n        fdlEncoding.top  = new FormAttachment(wFooter, margin);\r\n        fdlEncoding.right= new FormAttachment(middle, -margin);\r\n        wlEncoding.setLayoutData(fdlEncoding);\r\n        wEncoding=new CCombo(wContentComp, SWT.BORDER | SWT.READ_ONLY);\r\n        wEncoding.setEditable(true);\r\n        props.setLook(wEncoding);\r\n        wEncoding.addModifyListener(lsMod);\r\n        fdEncoding=new FormData();\r\n        fdEncoding.left = new FormAttachment(middle, 0);\r\n        fdEncoding.top  = new FormAttachment(wFooter, margin);\r\n        fdEncoding.right= new FormAttachment(100, 0);\r\n        wEncoding.setLayoutData(fdEncoding);\r\n        wEncoding.addFocusListener(new FocusListener()\r\n            {\r\n                public void focusLost(org.eclipse.swt.events.FocusEvent e)\r\n                {\r\n                }\r\n            \r\n                public void focusGained(org.eclipse.swt.events.FocusEvent e)\r\n                {\r\n                    Cursor busy = new Cursor(shell.getDisplay(), SWT.CURSOR_WAIT);\r\n                    shell.setCursor(busy);\r\n                    setEncodings();\r\n                    shell.setCursor(null);\r\n                    busy.dispose();\r\n                }\r\n            }\r\n        );\r\n\r\n\t\twlSplitEvery=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlSplitEvery.setText(Messages.getString(\"ExcelOutputDialog.SplitEvery.Label\"));\r\n \t\tprops.setLook(wlSplitEvery);\r\n\t\tfdlSplitEvery=new FormData();\r\n\t\tfdlSplitEvery.left = new FormAttachment(0, 0);\r\n\t\tfdlSplitEvery.top  = new FormAttachment(wEncoding, margin);\r\n\t\tfdlSplitEvery.right= new FormAttachment(middle, -margin);\r\n\t\twlSplitEvery.setLayoutData(fdlSplitEvery);\r\n\t\twSplitEvery=new Text(wContentComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wSplitEvery);\r\n\t\twSplitEvery.addModifyListener(lsMod);\r\n\t\tfdSplitEvery=new FormData();\r\n\t\tfdSplitEvery.left = new FormAttachment(middle, 0);\r\n\t\tfdSplitEvery.top  = new FormAttachment(wEncoding, margin);\r\n\t\tfdSplitEvery.right= new FormAttachment(100, 0);\r\n\t\twSplitEvery.setLayoutData(fdSplitEvery);\r\n\t\t\r\n\r\n\r\n\r\n\t\t// Sheet name line\n\t\twlSheetname=new Label(wContentComp, SWT.RIGHT);\n\t\twlSheetname.setText(Messages.getString(\"ExcelOutputDialog.Sheetname.Label\"));\n\t\tprops.setLook(wlSheetname);\n\t\tfdlSheetname=new FormData();\n\t\tfdlSheetname.left = new FormAttachment(0, 0);\n\t\tfdlSheetname.top  = new FormAttachment(wSplitEvery, margin);\n\t\tfdlSheetname.right= new FormAttachment(middle, -margin);\n\t\twlSheetname.setLayoutData(fdlSheetname);\n\t\twSheetname=new TextVar(transMeta, wContentComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n\t\twSheetname.setToolTipText(Messages.getString(\"ExcelOutputDialog.Sheetname.Tooltip\"));\n\t\tprops.setLook(wSheetname);\n\t\twSheetname.addModifyListener(lsMod);\n\t\tfdSheetname=new FormData();\n\t\tfdSheetname.left = new FormAttachment(middle, 0);\n\t\tfdSheetname.top  = new FormAttachment(wSplitEvery, margin);\n\t\tfdSheetname.right= new FormAttachment(100, 0);\n\t\twSheetname.setLayoutData(fdSheetname);\r\n\r\n\r\n\t\t// Protect Sheet?\r\n\t\twlProtectSheet=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlProtectSheet.setText(Messages.getString(\"ExcelOutputDialog.ProtectSheet.Label\"));\r\n\t\tprops.setLook(wlProtectSheet);\r\n\t\tfdlProtectSheet=new FormData();\r\n\t\tfdlProtectSheet.left = new FormAttachment(0, 0);\r\n\t\tfdlProtectSheet.top  = new FormAttachment(wSheetname, margin);\r\n\t\tfdlProtectSheet.right= new FormAttachment(middle, -margin);\r\n\t\twlProtectSheet.setLayoutData(fdlProtectSheet);\r\n\t\twProtectSheet=new Button(wContentComp, SWT.CHECK);\r\n\t\tprops.setLook(wProtectSheet);\r\n\t\tfdProtectSheet=new FormData();\r\n\t\tfdProtectSheet.left = new FormAttachment(middle, 0);\r\n\t\tfdProtectSheet.top  = new FormAttachment(wSheetname, margin);\r\n\t\tfdProtectSheet.right= new FormAttachment(100, 0);\r\n\t\twProtectSheet.setLayoutData(fdProtectSheet);\r\n\t\twProtectSheet.addSelectionListener(new SelectionAdapter() \r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\tEnablePassword();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t);\r\n\r\n\n\t\t// Password line\n\t\twlPassword=new Label(wContentComp, SWT.RIGHT);\n\t\twlPassword.setText(Messages.getString(\"ExcelOutputDialog.Password.Label\"));\n\t\tprops.setLook(wlPassword);\n\t\tfdlPassword=new FormData();\n\t\tfdlPassword.left = new FormAttachment(0, 0);\n\t\tfdlPassword.top  = new FormAttachment(wProtectSheet, margin);\n\t\tfdlPassword.right= new FormAttachment(middle, -margin);\n\t\twlPassword.setLayoutData(fdlPassword);\n\t\twPassword=new TextVar(transMeta, wContentComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER | SWT.PASSWORD);\n\t\twPassword.setToolTipText(Messages.getString(\"ExcelOutputDialog.Password.Tooltip\"));\n\t\tprops.setLook(wPassword);\n\t\twPassword.setEchoChar('*');\n\t\twPassword.addModifyListener(lsMod);\n\t\tfdPassword=new FormData();\n\t\tfdPassword.left = new FormAttachment(middle, 0);\n\t\tfdPassword.top  = new FormAttachment(wProtectSheet, margin);\n\t\tfdPassword.right= new FormAttachment(100, 0);\n\t\twPassword.setLayoutData(fdPassword);\r\n\r\n\r\n\t\twlTemplate=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlTemplate.setText(Messages.getString(\"ExcelOutputDialog.Template.Label\"));\r\n \t\tprops.setLook(wlTemplate);\r\n\t\tfdlTemplate=new FormData();\r\n\t\tfdlTemplate.left = new FormAttachment(0, 0);\r\n\t\tfdlTemplate.top  = new FormAttachment(wPassword, margin);\r\n\t\tfdlTemplate.right= new FormAttachment(middle, -margin);\r\n\t\twlTemplate.setLayoutData(fdlTemplate);\r\n\t\twTemplate=new Button(wContentComp, SWT.CHECK );\r\n \t\tprops.setLook(wTemplate);\r\n\t\tfdTemplate=new FormData();\r\n\t\tfdTemplate.left = new FormAttachment(middle, 0);\r\n\t\tfdTemplate.top  = new FormAttachment(wPassword, margin);\r\n\t\tfdTemplate.right= new FormAttachment(100, 0);\r\n\t\twTemplate.setLayoutData(fdTemplate);\r\n\t\twTemplate.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tEnableTemplate();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\t// TemplateFilename line\r\n\t\twlTemplateFilename=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlTemplateFilename.setText(Messages.getString(\"ExcelOutputDialog.TemplateFilename.Label\"));\r\n \t\tprops.setLook(wlTemplateFilename);\r\n\t\tfdlTemplateFilename=new FormData();\r\n\t\tfdlTemplateFilename.left = new FormAttachment(0, 0);\r\n\t\tfdlTemplateFilename.top  = new FormAttachment(wTemplate, margin);\r\n\t\tfdlTemplateFilename.right= new FormAttachment(middle, -margin);\r\n\t\twlTemplateFilename.setLayoutData(fdlTemplateFilename);\r\n\r\n\t\twbTemplateFilename=new Button(wContentComp, SWT.PUSH| SWT.CENTER);\r\n \t\tprops.setLook(wbTemplateFilename);\r\n\t\twbTemplateFilename.setText(Messages.getString(\"System.Button.Browse\"));\r\n\t\tfdbTemplateFilename=new FormData();\r\n\t\tfdbTemplateFilename.right= new FormAttachment(100, 0);\r\n\t\tfdbTemplateFilename.top  = new FormAttachment(wTemplate, 0);\r\n\t\twbTemplateFilename.setLayoutData(fdbTemplateFilename);\r\n\r\n\t\twTemplateFilename=new TextVar(transMeta, wContentComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wTemplateFilename);\r\n\t\twTemplateFilename.addModifyListener(lsMod);\r\n\t\tfdTemplateFilename=new FormData();\r\n\t\tfdTemplateFilename.left = new FormAttachment(middle, 0);\r\n\t\tfdTemplateFilename.top  = new FormAttachment(wTemplate, margin);\r\n\t\tfdTemplateFilename.right= new FormAttachment(wbTemplateFilename, -margin);\r\n\t\twTemplateFilename.setLayoutData(fdTemplateFilename);\r\n\r\n\t\t// Template Append\r\n\t\twlTemplateAppend=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlTemplateAppend.setText(Messages.getString(\"ExcelOutputDialog.TemplateAppend.Label\"));\r\n \t\tprops.setLook(wlTemplateAppend);\r\n\t\tfdlTemplateAppend=new FormData();\r\n\t\tfdlTemplateAppend.left = new FormAttachment(0, 0);\r\n\t\tfdlTemplateAppend.top  = new FormAttachment(wTemplateFilename, margin);\r\n\t\tfdlTemplateAppend.right= new FormAttachment(middle, -margin);\r\n\t\twlTemplateAppend.setLayoutData(fdlTemplateAppend);\r\n\t\twTemplateAppend=new Button(wContentComp, SWT.CHECK );\r\n \t\tprops.setLook(wTemplateAppend);\r\n\t\tfdTemplateAppend=new FormData();\r\n\t\tfdTemplateAppend.left = new FormAttachment(middle, 0);\r\n\t\tfdTemplateAppend.top  = new FormAttachment(wTemplateFilename, margin);\r\n\t\tfdTemplateAppend.right= new FormAttachment(100, 0);\r\n\t\twTemplateAppend.setLayoutData(fdTemplateAppend);\r\n\t\twTemplateAppend.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tinput.setChanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\r\n\n\t\r\n\r\n\r\n\t\t\r\n\t\tfdContentComp = new FormData();\r\n\t\tfdContentComp.left  = new FormAttachment(0, 0);\r\n\t\tfdContentComp.top   = new FormAttachment(0, 0);\r\n\t\tfdContentComp.right = new FormAttachment(100, 0);\r\n\t\tfdContentComp.bottom= new FormAttachment(100, 0);\r\n\t\twContentComp.setLayoutData(fdContentComp);\r\n\r\n\t\twContentComp.layout();\r\n\t\twContentTab.setControl(wContentComp);\r\n\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF CONTENT TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\r\n\t\t// Fields tab...\r\n\t\t//\r\n\t\twFieldsTab = new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twFieldsTab.setText(Messages.getString(\"ExcelOutputDialog.FieldsTab.TabTitle\"));\r\n\t\t\r\n\t\tFormLayout fieldsLayout = new FormLayout ();\r\n\t\tfieldsLayout.marginWidth  = Const.FORM_MARGIN;\r\n\t\tfieldsLayout.marginHeight = Const.FORM_MARGIN;\r\n\t\t\r\n\t\tComposite wFieldsComp = new Composite(wTabFolder, SWT.NONE);\r\n\t\twFieldsComp.setLayout(fieldsLayout);\r\n \t\tprops.setLook(wFieldsComp);\r\n\r\n\t\twGet=new Button(wFieldsComp, SWT.PUSH);\r\n\t\twGet.setText(Messages.getString(\"System.Button.GetFields\"));\r\n\t\twGet.setToolTipText(Messages.getString(\"System.Tooltip.GetFields\"));\r\n\r\n\t\twMinWidth =new Button(wFieldsComp, SWT.PUSH);\r\n\t\twMinWidth.setText(Messages.getString(\"ExcelOutputDialog.MinWidth.Button\"));\r\n\t\twMinWidth.setToolTipText(Messages.getString(\"ExcelOutputDialog.MinWidth.Tooltip\"));\r\n\r\n\t\tsetButtonPositions(new Button[] { wGet, wMinWidth}, margin, null);\r\n\r\n\t\tfinal int FieldsRows=input.getOutputFields().length;\r\n\t\t\r\n\t\t// Prepare a list of possible formats...\r\n        String[] formats = new String[] \r\n           {\r\n                // Numbers\r\n                \"#\",\r\n                \"0\",\r\n                \"0.00\",\r\n                \"#,##0\",\r\n                \"#,##0.00\",\r\n                \"$#,##0;($#,##0)\",\r\n                \"$#,##0;($#,##0)\",\r\n                \"$#,##0;($#,##0)\",\r\n                \"$#,##0;($#,##0)\",\r\n                \"0%\",\r\n                \"0.00%\",\r\n                \"0.00E00\",\r\n                \"#,##0;(#,##0)\",\r\n                \"#,##0;(#,##0)\",\r\n                \"#,##0.00;(#,##0.00)\",\r\n                \"#,##0.00;(#,##0.00)\",\r\n                \"#,##0;(#,##0)\",\r\n                \"#,##0;(#,##0)\",\r\n                \"#,##0.00;(#,##0.00)\",\r\n                \"#,##0.00;(#,##0.00)\",\r\n                \"#,##0.00;(#,##0.00)\",\r\n                \"##0.0E0\",\r\n                \r\n                // Forces text\r\n                \"@\",\r\n                \r\n                // Dates\r\n                \"M/d/yy\",\r\n                \"d-MMM-yy\",\r\n                \"d-MMM\",\r\n                \"MMM-yy\",\r\n                \"h:mm a\",\r\n                \"h:mm:ss a\",\r\n                \"H:mm\",\r\n                \"H:mm:ss\",\r\n                \"M/d/yy H:mm\",\r\n                \"mm:ss\",\r\n                \"H:mm:ss\",\r\n                \"H:mm:ss\",\r\n           };\r\n        \r\n        ColumnInfo[] colinf=new ColumnInfo[] \r\n\t\t    {\r\n\t\t        new ColumnInfo(Messages.getString(\"ExcelOutputDialog.NameColumn.Column\"),       ColumnInfo.COLUMN_TYPE_TEXT,   false),\r\n\t\t        new ColumnInfo(Messages.getString(\"ExcelOutputDialog.TypeColumn.Column\"),       ColumnInfo.COLUMN_TYPE_CCOMBO, ValueMeta.getTypes() ),\r\n\t\t        new ColumnInfo(Messages.getString(\"ExcelOutputDialog.FormatColumn.Column\"),     ColumnInfo.COLUMN_TYPE_CCOMBO, formats),\r\n            };\r\n\t\t\r\n\t\twFields=new TableView(transMeta, wFieldsComp, \r\n\t\t\t\t\t\t      SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI, \r\n\t\t\t\t\t\t      colinf, \r\n\t\t\t\t\t\t      FieldsRows,  \r\n\t\t\t\t\t\t      lsMod,\r\n\t\t\t\t\t\t\t  props\r\n\t\t\t\t\t\t      );\r\n\r\n\t\tfdFields=new FormData();\r\n\t\tfdFields.left  = new FormAttachment(0, 0);\r\n\t\tfdFields.top   = new FormAttachment(0, 0);\r\n\t\tfdFields.right = new FormAttachment(100, 0);\r\n\t\tfdFields.bottom= new FormAttachment(wGet, -margin);\r\n\t\twFields.setLayoutData(fdFields);\r\n\r\n\t\tfdFieldsComp=new FormData();\r\n\t\tfdFieldsComp.left  = new FormAttachment(0, 0);\r\n\t\tfdFieldsComp.top   = new FormAttachment(0, 0);\r\n\t\tfdFieldsComp.right = new FormAttachment(100, 0);\r\n\t\tfdFieldsComp.bottom= new FormAttachment(100, 0);\r\n\t\twFieldsComp.setLayoutData(fdFieldsComp);\r\n\r\n\t\twFieldsComp.layout();\r\n\t\twFieldsTab.setControl(wFieldsComp);\r\n\r\n\t\tfdTabFolder = new FormData();\r\n\t\tfdTabFolder.left  = new FormAttachment(0, 0);\r\n\t\tfdTabFolder.top   = new FormAttachment(wStepname, margin);\r\n\t\tfdTabFolder.right = new FormAttachment(100, 0);\r\n\t\tfdTabFolder.bottom= new FormAttachment(100, -50);\r\n\t\twTabFolder.setLayoutData(fdTabFolder);\r\n\t\t\r\n\t\twOK=new Button(shell, SWT.PUSH);\r\n\t\twOK.setText(Messages.getString(\"System.Button.OK\"));\r\n\r\n\t\twCancel=new Button(shell, SWT.PUSH);\r\n\t\twCancel.setText(Messages.getString(\"System.Button.Cancel\"));\r\n\r\n\t\tsetButtonPositions(new Button[] { wOK, wCancel }, margin, wTabFolder);\r\n\r\n\t\t// Add listeners\r\n\t\tlsOK       = new Listener() { public void handleEvent(Event e) { ok();       } };\r\n\t\tlsGet      = new Listener() { public void handleEvent(Event e) { get();      } };\r\n\t\tlsMinWidth    = new Listener() { public void handleEvent(Event e) { setMinimalWidth(); } };\r\n\t\tlsCancel   = new Listener() { public void handleEvent(Event e) { cancel();   } };\r\n\t\t\r\n\t\twOK.addListener    (SWT.Selection, lsOK    );\r\n\t\twGet.addListener   (SWT.Selection, lsGet   );\r\n\t\twMinWidth.addListener (SWT.Selection, lsMinWidth );\r\n\t\twCancel.addListener(SWT.Selection, lsCancel);\r\n\r\n\t\tlsDef=new SelectionAdapter() { public void widgetDefaultSelected(SelectionEvent e) { ok(); } };\r\n\r\n\t\twStepname.addSelectionListener( lsDef );\r\n\t\twFilename.addSelectionListener( lsDef );\r\n\t\twTemplateFilename.addSelectionListener( lsDef );\r\n\r\n\t\t// Whenever something changes, set the tooltip to the expanded version:\r\n\t\twFilename.addModifyListener(new ModifyListener()\r\n\t\t\t{\r\n\t\t\t\tpublic void modifyText(ModifyEvent e)\r\n\t\t\t\t{\r\n\t\t\t\t\twFilename.setToolTipText(transMeta.environmentSubstitute( wFilename.getText() ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\twTemplateFilename.addModifyListener(new ModifyListener()\r\n\t\t\t{\r\n\t\t\t\tpublic void modifyText(ModifyEvent e)\r\n\t\t\t\t{\r\n\t\t\t\t\twTemplateFilename.setToolTipText(transMeta.environmentSubstitute( wTemplateFilename.getText() ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\t\r\n\r\n\t\twbFilename.addSelectionListener\r\n\t\t(\r\n\t\t\tnew SelectionAdapter()\r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tFileDialog dialog = new FileDialog(shell, SWT.OPEN);\r\n\t\t\t\t\tdialog.setFilterExtensions(new String[] {\"*.xls\", \"*.*\"});\r\n\t\t\t\t\tif (wFilename.getText()!=null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdialog.setFileName(transMeta.environmentSubstitute(wFilename.getText()));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdialog.setFilterNames(new String[] {Messages.getString(\"System.FileType.ExcelFiles\"), Messages.getString(\"System.FileType.AllFiles\")});\r\n\t\t\t\t\tif (dialog.open()!=null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twFilename.setText(dialog.getFilterPath()+System.getProperty(\"file.separator\")+dialog.getFileName());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\twbTemplateFilename.addSelectionListener\r\n\t\t(\r\n\t\t\tnew SelectionAdapter()\r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tFileDialog dialog = new FileDialog(shell, SWT.OPEN);\r\n\t\t\t\t\tdialog.setFilterExtensions(new String[] {\"*.xls\", \"*.*\"});\r\n\t\t\t\t\tif (wTemplateFilename.getText()!=null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdialog.setFileName(transMeta.environmentSubstitute(wTemplateFilename.getText()));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdialog.setFilterNames(new String[] {Messages.getString(\"System.FileType.ExcelFiles\"), Messages.getString(\"System.FileType.AllFiles\")});\r\n\t\t\t\t\tif (dialog.open()!=null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twTemplateFilename.setText(dialog.getFilterPath()+System.getProperty(\"file.separator\")+dialog.getFileName());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\t\r\n\t\t// Detect X or ALT-F4 or something that kills this window...\r\n\t\tshell.addShellListener(\tnew ShellAdapter() { public void shellClosed(ShellEvent e) { cancel(); } } );\r\n\r\n\t\tlsResize = new Listener() \r\n\t\t{\r\n\t\t\tpublic void handleEvent(Event event) \r\n\t\t\t{\r\n\t\t\t\tPoint size = shell.getSize();\r\n\t\t\t\twFields.setSize(size.x-10, size.y-50);\r\n\t\t\t\twFields.table.setSize(size.x-10, size.y-50);\r\n\t\t\t\twFields.redraw();\r\n\t\t\t}\r\n\t\t};\r\n\t\tshell.addListener(SWT.Resize, lsResize);\r\n\r\n\t\twTabFolder.setSelection(0);\r\n\t\t\r\n\t\t// Set the shell size, based upon previous time...\r\n\t\tsetSize();\r\n\t\t\r\n\t\tgetData();\r\n\t\tinput.setChanged(changed);\r\n\t\t\r\n\t\tshell.open();\r\n\t\twhile (!shell.isDisposed())\r\n\t\t{\r\n\t\t\t\tif (!display.readAndDispatch()) display.sleep();\r\n\t\t}\r\n\t\treturn stepname;\r\n\t}","commit_id":"0279031439c8b85a0b054e50fca6e2ccc2542cfb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\r\n\t * Copy information from the meta-data input to the dialog fields.\r\n\t */ \r\n\tpublic void getData()\r\n\t{\r\n\t\tif (input.getFileName()  != null) wFilename.setText(input.getFileName());\r\n\t\tif (input.getExtension() != null) wExtension.setText(input.getExtension());\r\n        if (input.getEncoding()  !=null) wEncoding.setText(input.getEncoding());\r\n\t\tif (input.getTemplateFileName()  != null) wTemplateFilename.setText(input.getTemplateFileName());\r\n\t\t\r\n\t\twSplitEvery.setText(\"\"+input.getSplitEvery());\r\n\r\n\t\twHeader.setSelection(input.isHeaderEnabled());\r\n\t\twFooter.setSelection(input.isFooterEnabled());\r\n\t\twAddDate.setSelection(input.isDateInFilename());\r\n\t\twAddTime.setSelection(input.isTimeInFilename());\r\n\t\twAddToResult.setSelection(input.isAddToResultFiles());\r\n\t\t\r\n\r\n\t\twAddStepnr.setSelection(input.isStepNrInFilename());\r\n\t\twTemplate.setSelection(input.isTemplateEnabled());\r\n\t\twTemplateAppend.setSelection(input.isTemplateAppend());\r\n\t\tif (input.getSheetname() != null) \r\n\t\t{\r\n\t\t\twSheetname.setText(input.getSheetname());\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\twSheetname.setText(\"Sheet1\");\r\n\t\t}\r\n\t\twProtectSheet.setSelection(input.isSheetProtected());\r\n\t\r\n\t\tEnablePassword();\r\n\t\tEnableTemplate();\r\n\r\n\t\tif (input.getPassword() != null) wPassword.setText(input.getPassword());\r\n\t\tlog.logDebug(toString(), \"getting fields info...\");\r\n\t\t\r\n\t\tfor (int i=0;i<input.getOutputFields().length;i++)\r\n\t\t{\r\n\t\t    ExcelField field = input.getOutputFields()[i];\r\n\t\t    \r\n\t\t\tTableItem item = wFields.table.getItem(i);\r\n\t\t\tif (field.getName()!=null) item.setText(1, field.getName());\r\n\t\t\titem.setText(2, field.getTypeDesc());\r\n\t\t\tif (field.getFormat()!=null) item.setText(3, field.getFormat());\r\n\t\t}\r\n\t\t\r\n\t\twFields.optWidth(true);\r\n\t\twStepname.selectAll();\r\n\t}","id":52787,"modified_method":"/**\r\n\t * Copy information from the meta-data input to the dialog fields.\r\n\t */ \r\n\tpublic void getData()\r\n\t{\r\n\t\tif (input.getFileName()  != null) wFilename.setText(input.getFileName());\r\n\t\tif (input.getExtension() != null) wExtension.setText(input.getExtension());\r\n        if (input.getEncoding()  !=null) wEncoding.setText(input.getEncoding());\r\n\t\tif (input.getTemplateFileName()  != null) wTemplateFilename.setText(input.getTemplateFileName());\r\n\t\t\r\n\t\twSplitEvery.setText(\"\"+input.getSplitEvery());\r\n\t\twAppend.setSelection(input.isAppend());\r\n\t\twHeader.setSelection(input.isHeaderEnabled());\r\n\t\twFooter.setSelection(input.isFooterEnabled());\r\n\t\twAddDate.setSelection(input.isDateInFilename());\r\n\t\twAddTime.setSelection(input.isTimeInFilename());\r\n\t\twAddToResult.setSelection(input.isAddToResultFiles());\r\n\t\t\r\n\r\n\t\twAddStepnr.setSelection(input.isStepNrInFilename());\r\n\t\twTemplate.setSelection(input.isTemplateEnabled());\r\n\t\twTemplateAppend.setSelection(input.isTemplateAppend());\r\n\t\tif (input.getSheetname() != null) \r\n\t\t{\r\n\t\t\twSheetname.setText(input.getSheetname());\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\twSheetname.setText(\"Sheet1\");\r\n\t\t}\r\n\t\twProtectSheet.setSelection(input.isSheetProtected());\r\n\t\r\n\t\tEnablePassword();\r\n\t\tEnableTemplate();\r\n\r\n\t\tif (input.getPassword() != null) wPassword.setText(input.getPassword());\r\n\t\tlog.logDebug(toString(), \"getting fields info...\");\r\n\t\t\r\n\t\tfor (int i=0;i<input.getOutputFields().length;i++)\r\n\t\t{\r\n\t\t    ExcelField field = input.getOutputFields()[i];\r\n\t\t    \r\n\t\t\tTableItem item = wFields.table.getItem(i);\r\n\t\t\tif (field.getName()!=null) item.setText(1, field.getName());\r\n\t\t\titem.setText(2, field.getTypeDesc());\r\n\t\t\tif (field.getFormat()!=null) item.setText(3, field.getFormat());\r\n\t\t}\r\n\t\t\r\n\t\twFields.optWidth(true);\r\n\t\twStepname.selectAll();\r\n\t}","commit_id":"0279031439c8b85a0b054e50fca6e2ccc2542cfb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public String getXML()\r\n\t{\r\n\t\tStringBuffer retval=new StringBuffer(800);\r\n\t\t\r\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"header\",    headerEnabled));\r\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"footer\",    footerEnabled));\r\n        retval.append(\"    \").append(XMLHandler.addTagValue(\"encoding\",  encoding));\r\n\r\n\t\tretval.append(\"    <file>\").append(Const.CR);\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"name\",       fileName));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"extention\",  extension));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"split\",      stepNrInFilename));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"add_date\",   dateInFilename));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"add_time\",   timeInFilename));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"add_to_result_filenames\",   addToResultFilenames));\r\n\t\t\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"sheetname\", sheetname));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"protect_sheet\",   protectsheet));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"password\",  Encr.encryptPasswordIfNotUsingVariables(password)));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"splitevery\", splitEvery));\r\n\t\tretval.append(\"      <\/file>\").append(Const.CR);\r\n\t\t\r\n\t\tretval.append(\"    <template>\").append(Const.CR);\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"enabled\",  templateEnabled));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"append\",   templateAppend));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"filename\", templateFileName));\r\n\t\tretval.append(\"    <\/template>\").append(Const.CR);\r\n\t\t\r\n\t\tretval.append(\"    <fields>\").append(Const.CR);\r\n\t\tfor (int i=0;i<outputFields.length;i++)\r\n\t\t{\r\n\t\t    ExcelField field = outputFields[i];\r\n\t\t    \r\n\t\t\tif (field.getName()!= null && field.getName().length()!= 0)\r\n\t\t\t{\r\n\t\t\t\tretval.append(\"      <field>\").append(Const.CR);\r\n\t\t\t\tretval.append(\"        \").append(XMLHandler.addTagValue(\"name\",      field.getName()));\r\n\t\t\t\tretval.append(\"        \").append(XMLHandler.addTagValue(\"type\",      field.getTypeDesc()));\r\n\t\t\t\tretval.append(\"        \").append(XMLHandler.addTagValue(\"format\",    field.getFormat()));\r\n\t\t\t\tretval.append(\"      <\/field>\").append(Const.CR);\r\n\t\t\t}\r\n\t\t}\r\n\t\tretval.append(\"    <\/fields>\").append(Const.CR);\r\n\r\n\t\treturn retval.toString();\r\n\t}","id":52788,"modified_method":"public String getXML()\r\n\t{\r\n\t\tStringBuffer retval=new StringBuffer(800);\r\n\t\t\r\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"header\",    headerEnabled));\r\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"footer\",    footerEnabled));\r\n        retval.append(\"    \").append(XMLHandler.addTagValue(\"encoding\",  encoding));\r\n        retval.append(\"    \"+XMLHandler.addTagValue(\"append\",    append));\r\n\r\n\t\tretval.append(\"    <file>\").append(Const.CR);\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"name\",       fileName));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"extention\",  extension));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"split\",      stepNrInFilename));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"add_date\",   dateInFilename));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"add_time\",   timeInFilename));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"add_to_result_filenames\",   addToResultFilenames));\r\n\t\t\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"sheetname\", sheetname));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"protect_sheet\",   protectsheet));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"password\",  Encr.encryptPasswordIfNotUsingVariables(password)));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"splitevery\", splitEvery));\r\n\t\t\r\n\t\tretval.append(\"      <\/file>\").append(Const.CR);\r\n\t\t\r\n\t\tretval.append(\"    <template>\").append(Const.CR);\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"enabled\",  templateEnabled));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"append\",   templateAppend));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"filename\", templateFileName));\r\n\t\tretval.append(\"    <\/template>\").append(Const.CR);\r\n\t\t\r\n\t\tretval.append(\"    <fields>\").append(Const.CR);\r\n\t\tfor (int i=0;i<outputFields.length;i++)\r\n\t\t{\r\n\t\t    ExcelField field = outputFields[i];\r\n\t\t    \r\n\t\t\tif (field.getName()!= null && field.getName().length()!= 0)\r\n\t\t\t{\r\n\t\t\t\tretval.append(\"      <field>\").append(Const.CR);\r\n\t\t\t\tretval.append(\"        \").append(XMLHandler.addTagValue(\"name\",      field.getName()));\r\n\t\t\t\tretval.append(\"        \").append(XMLHandler.addTagValue(\"type\",      field.getTypeDesc()));\r\n\t\t\t\tretval.append(\"        \").append(XMLHandler.addTagValue(\"format\",    field.getFormat()));\r\n\t\t\t\tretval.append(\"      <\/field>\").append(Const.CR);\r\n\t\t\t}\r\n\t\t}\r\n\t\tretval.append(\"    <\/fields>\").append(Const.CR);\r\n\r\n\t\treturn retval.toString();\r\n\t}","commit_id":"0279031439c8b85a0b054e50fca6e2ccc2542cfb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void readRep(Repository rep, long id_step, List<DatabaseMeta> databases, Map<String, Counter> counters) throws KettleException\r\n\t{\r\n\t\ttry\r\n\t\t{\r\n\t\t\theaderEnabled    =      rep.getStepAttributeBoolean(id_step, \"header\");\r\n\t\t\tfooterEnabled    =      rep.getStepAttributeBoolean(id_step, \"footer\");   \r\n            encoding         =      rep.getStepAttributeString (id_step, \"encoding\");\r\n            \r\n\t\t\tfileName         =      rep.getStepAttributeString (id_step, \"file_name\");  \r\n\t\t\textension        =      rep.getStepAttributeString (id_step, \"file_extention\");\r\n\t\t\tsplitEvery       = (int)rep.getStepAttributeInteger(id_step, \"file_split\");\r\n\t\t\tstepNrInFilename =      rep.getStepAttributeBoolean(id_step, \"file_add_stepnr\");\r\n\t\t\tdateInFilename   =      rep.getStepAttributeBoolean(id_step, \"file_add_date\");\r\n\t\t\ttimeInFilename   =      rep.getStepAttributeBoolean(id_step, \"file_add_time\");\r\n\t\t\taddToResultFilenames =  rep.getStepAttributeBoolean(id_step, \"add_to_result_filenames\");\r\n\t\t\t\r\n\t\t\tprotectsheet          = rep.getStepAttributeBoolean(id_step, \"protect_sheet\");\r\n\t\t\tpassword              = Encr.decryptPasswordOptionallyEncrypted( rep.getStepAttributeString (id_step, \"password\") );\r\n\r\n\t\t\ttemplateEnabled       = rep.getStepAttributeBoolean(id_step, \"template_enabled\");\r\n\t\t\ttemplateAppend        = rep.getStepAttributeBoolean(id_step, \"template_append\");\r\n\t\t\ttemplateFileName      = rep.getStepAttributeString(id_step, \"template_filename\");\r\n\t\t\tsheetname             = rep.getStepAttributeString(id_step, \"sheetname\");\r\n\t\t\tint nrfields          = rep.countNrStepAttributes(id_step, \"field_name\");\r\n\t\t\t\r\n\t\t\tallocate(nrfields);\r\n\t\t\t\r\n\t\t\tfor (int i=0;i<nrfields;i++)\r\n\t\t\t{\r\n\t\t\t    outputFields[i] = new ExcelField();\r\n\r\n\t\t\t    outputFields[i].setName(    \t\trep.getStepAttributeString (id_step, i, \"field_name\") );\r\n\t\t\t    outputFields[i].setType( \t\t\trep.getStepAttributeString (id_step, i, \"field_type\") );\r\n\t\t\t    outputFields[i].setFormat(  \t\trep.getStepAttributeString (id_step, i, \"field_format\") );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow new KettleException(\"Unexpected error reading step information from the repository\", e);\r\n\t\t}\r\n\t}","id":52789,"modified_method":"public void readRep(Repository rep, long id_step, List<DatabaseMeta> databases, Map<String, Counter> counters) throws KettleException\r\n\t{\r\n\t\ttry\r\n\t\t{\r\n\t\t\theaderEnabled    =      rep.getStepAttributeBoolean(id_step, \"header\");\r\n\t\t\tfooterEnabled    =      rep.getStepAttributeBoolean(id_step, \"footer\");   \r\n            encoding         =      rep.getStepAttributeString (id_step, \"encoding\");\r\n            append   =      rep.getStepAttributeBoolean(id_step, \"append\");\r\n            \r\n\t\t\tfileName         =      rep.getStepAttributeString (id_step, \"file_name\");  \r\n\t\t\textension        =      rep.getStepAttributeString (id_step, \"file_extention\");\r\n\t\t\tsplitEvery       = (int)rep.getStepAttributeInteger(id_step, \"file_split\");\r\n\t\t\tstepNrInFilename =      rep.getStepAttributeBoolean(id_step, \"file_add_stepnr\");\r\n\t\t\tdateInFilename   =      rep.getStepAttributeBoolean(id_step, \"file_add_date\");\r\n\t\t\ttimeInFilename   =      rep.getStepAttributeBoolean(id_step, \"file_add_time\");\r\n\t\t\taddToResultFilenames =  rep.getStepAttributeBoolean(id_step, \"add_to_result_filenames\");\r\n\t\t\t\r\n\t\t\tprotectsheet          = rep.getStepAttributeBoolean(id_step, \"protect_sheet\");\r\n\t\t\tpassword              = Encr.decryptPasswordOptionallyEncrypted( rep.getStepAttributeString (id_step, \"password\") );\r\n\r\n\t\t\ttemplateEnabled       = rep.getStepAttributeBoolean(id_step, \"template_enabled\");\r\n\t\t\ttemplateAppend        = rep.getStepAttributeBoolean(id_step, \"template_append\");\r\n\t\t\ttemplateFileName      = rep.getStepAttributeString(id_step, \"template_filename\");\r\n\t\t\tsheetname             = rep.getStepAttributeString(id_step, \"sheetname\");\r\n\t\t\tint nrfields          = rep.countNrStepAttributes(id_step, \"field_name\");\r\n\t\t\t\r\n\t\t\tallocate(nrfields);\r\n\t\t\t\r\n\t\t\tfor (int i=0;i<nrfields;i++)\r\n\t\t\t{\r\n\t\t\t    outputFields[i] = new ExcelField();\r\n\r\n\t\t\t    outputFields[i].setName(    \t\trep.getStepAttributeString (id_step, i, \"field_name\") );\r\n\t\t\t    outputFields[i].setType( \t\t\trep.getStepAttributeString (id_step, i, \"field_type\") );\r\n\t\t\t    outputFields[i].setFormat(  \t\trep.getStepAttributeString (id_step, i, \"field_format\") );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow new KettleException(\"Unexpected error reading step information from the repository\", e);\r\n\t\t}\r\n\t}","commit_id":"0279031439c8b85a0b054e50fca6e2ccc2542cfb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void readData(Node stepnode)\r\n\t\tthrows KettleXMLException\r\n\t{\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n\t\t\theaderEnabled    = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"header\"));\r\n\t\t\tfooterEnabled    = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"footer\"));\r\n\t\t\tencoding         = XMLHandler.getTagValue(stepnode, \"encoding\");\r\n\r\n            fileName             = XMLHandler.getTagValue(stepnode, \"file\", \"name\");\r\n\t\t\textension            = XMLHandler.getTagValue(stepnode, \"file\", \"extention\");\r\n\t\t\tstepNrInFilename     = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"file\", \"split\"));\r\n\t\t\tdateInFilename       = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"file\", \"add_date\"));\r\n\t\t\ttimeInFilename       = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"file\", \"add_time\"));\r\n\t\t\taddToResultFilenames = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"file\", \"add_to_result_filenames\"));\r\n\t\t\t\r\n\t\t\tprotectsheet = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"file\", \"protect_sheet\"));\r\n\t\t\tpassword     = Encr.decryptPasswordOptionallyEncrypted( XMLHandler.getTagValue(stepnode, \"file\", \"password\") );\r\n\t\t\tsplitEvery   = Const.toInt(XMLHandler.getTagValue(stepnode, \"file\", \"splitevery\"), 0);\r\n\r\n\t\t\ttemplateEnabled   = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"template\", \"enabled\"));\r\n\t\t\ttemplateAppend    = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"template\", \"append\"));\r\n\t\t\ttemplateFileName  = XMLHandler.getTagValue(stepnode, \"template\", \"filename\");\r\n\t\t\tsheetname         = XMLHandler.getTagValue(stepnode, \"file\", \"sheetname\");\r\n\t\t\tNode fields       = XMLHandler.getSubNode(stepnode, \"fields\");\r\n\t\t\tint nrfields      = XMLHandler.countNodes(fields, \"field\");\r\n\t\r\n\t\t\tallocate(nrfields);\r\n\t\t\t\r\n\t\t\tfor (int i=0;i<nrfields;i++)\r\n\t\t\t{\r\n\t\t\t\tNode fnode = XMLHandler.getSubNodeByNr(fields, \"field\", i);\r\n\t\t\t\r\n\t\t\t\toutputFields[i] = new ExcelField();\r\n\t\t\t\toutputFields[i].setName( XMLHandler.getTagValue(fnode, \"name\") );\r\n\t\t\t\toutputFields[i].setType( XMLHandler.getTagValue(fnode, \"type\") );\r\n\t\t\t\toutputFields[i].setFormat( XMLHandler.getTagValue(fnode, \"format\") );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow new KettleXMLException(\"Unable to load step info from XML\", e);\r\n\t\t}\r\n\t}","id":52790,"modified_method":"private void readData(Node stepnode)\r\n\t\tthrows KettleXMLException\r\n\t{\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n\t\t\theaderEnabled    = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"header\"));\r\n\t\t\tfooterEnabled    = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"footer\"));\r\n\t\t\tencoding         = XMLHandler.getTagValue(stepnode, \"encoding\");\r\n\t\t\tappend    = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"append\"));\r\n            fileName             = XMLHandler.getTagValue(stepnode, \"file\", \"name\");\r\n\t\t\textension            = XMLHandler.getTagValue(stepnode, \"file\", \"extention\");\r\n\t\t\tstepNrInFilename     = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"file\", \"split\"));\r\n\t\t\tdateInFilename       = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"file\", \"add_date\"));\r\n\t\t\ttimeInFilename       = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"file\", \"add_time\"));\r\n\t\t\taddToResultFilenames = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"file\", \"add_to_result_filenames\"));\r\n\t\t\t\r\n\t\t\tprotectsheet = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"file\", \"protect_sheet\"));\r\n\t\t\tpassword     = Encr.decryptPasswordOptionallyEncrypted( XMLHandler.getTagValue(stepnode, \"file\", \"password\") );\r\n\t\t\tsplitEvery   = Const.toInt(XMLHandler.getTagValue(stepnode, \"file\", \"splitevery\"), 0);\r\n\t\t\t\r\n\t\t\ttemplateEnabled   = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"template\", \"enabled\"));\r\n\t\t\ttemplateAppend    = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"template\", \"append\"));\r\n\t\t\ttemplateFileName  = XMLHandler.getTagValue(stepnode, \"template\", \"filename\");\r\n\t\t\tsheetname         = XMLHandler.getTagValue(stepnode, \"file\", \"sheetname\");\r\n\t\t\tNode fields       = XMLHandler.getSubNode(stepnode, \"fields\");\r\n\t\t\tint nrfields      = XMLHandler.countNodes(fields, \"field\");\r\n\t\r\n\t\t\tallocate(nrfields);\r\n\t\t\t\r\n\t\t\tfor (int i=0;i<nrfields;i++)\r\n\t\t\t{\r\n\t\t\t\tNode fnode = XMLHandler.getSubNodeByNr(fields, \"field\", i);\r\n\t\t\t\r\n\t\t\t\toutputFields[i] = new ExcelField();\r\n\t\t\t\toutputFields[i].setName( XMLHandler.getTagValue(fnode, \"name\") );\r\n\t\t\t\toutputFields[i].setType( XMLHandler.getTagValue(fnode, \"type\") );\r\n\t\t\t\toutputFields[i].setFormat( XMLHandler.getTagValue(fnode, \"format\") );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow new KettleXMLException(\"Unable to load step info from XML\", e);\r\n\t\t}\r\n\t}","commit_id":"0279031439c8b85a0b054e50fca6e2ccc2542cfb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void setDefault()\r\n\t{\r\n\t\theaderEnabled    = true;\r\n\t\tfooterEnabled    = false;\r\n\t\tfileName         = \"file\";\r\n\t\textension        = \"xls\";\r\n\t\tstepNrInFilename = false;\r\n\t\tdateInFilename   = false;\r\n\t\ttimeInFilename   = false;\r\n\t\taddToResultFilenames=true;\r\n\t\tprotectsheet\t = false;\r\n\t\tsplitEvery       = 0;\r\n\t\ttemplateEnabled  = false;\r\n\t\ttemplateAppend   = false;\r\n\t\ttemplateFileName = \"template.xls\";\r\n\t\tsheetname=\"Sheet1\";\t\r\n\t\tint i, nrfields=0;\r\n\t\t\r\n\t\tallocate(nrfields);\r\n\t\t\t\t\t\r\n\t\tfor (i=0;i<nrfields;i++)\r\n\t\t{\r\n\t\t\toutputFields[i] = new ExcelField();\r\n\r\n\t\t\toutputFields[i].setName( \"field\"+i );\t\t\t\t\r\n\t\t\toutputFields[i].setType( \"Number\" );\r\n\t\t\toutputFields[i].setFormat( \" 0,000,000.00;-0,000,000.00\" );\r\n\t\t}\r\n\t}","id":52791,"modified_method":"public void setDefault()\r\n\t{\r\n\t\theaderEnabled    = true;\r\n\t\tfooterEnabled    = false;\r\n\t\tfileName         = \"file\";\r\n\t\textension        = \"xls\";\r\n\t\tstepNrInFilename = false;\r\n\t\tdateInFilename   = false;\r\n\t\ttimeInFilename   = false;\r\n\t\taddToResultFilenames=true;\r\n\t\tprotectsheet\t = false;\r\n\t\tsplitEvery       = 0;\r\n\t\ttemplateEnabled  = false;\r\n\t\ttemplateAppend   = false;\r\n\t\ttemplateFileName = \"template.xls\";\r\n\t\tsheetname=\"Sheet1\";\t\r\n\t\tappend   \t\t = false;\r\n\t\tint i, nrfields=0;\r\n\t\tallocate(nrfields);\r\n\t\t\t\t\t\r\n\t\tfor (i=0;i<nrfields;i++)\r\n\t\t{\r\n\t\t\toutputFields[i] = new ExcelField();\r\n\r\n\t\t\toutputFields[i].setName( \"field\"+i );\t\t\t\t\r\n\t\t\toutputFields[i].setType( \"Number\" );\r\n\t\t\toutputFields[i].setFormat( \" 0,000,000.00;-0,000,000.00\" );\r\n\t\t}\r\n\t}","commit_id":"0279031439c8b85a0b054e50fca6e2ccc2542cfb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void saveRep(Repository rep, long id_transformation, long id_step)\r\n\t\tthrows KettleException\r\n\t{\r\n\t\ttry\r\n\t\t{\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"header\",           headerEnabled);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"footer\",           footerEnabled);\r\n            rep.saveStepAttribute(id_transformation, id_step, \"encoding\",         encoding);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"file_name\",        fileName);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"file_extention\",   extension);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"file_split\",       splitEvery);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"file_add_stepnr\",  stepNrInFilename);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"file_add_date\",    dateInFilename);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"file_add_time\",    timeInFilename);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"add_to_result_filenames\",    addToResultFilenames);\r\n\t\t\t\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"protect_sheet\",    protectsheet);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"password\",  Encr.encryptPasswordIfNotUsingVariables(password) );\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"template_enabled\",  templateEnabled);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"template_append\",   templateAppend);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"template_filename\", templateFileName);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"sheetname\", sheetname);\r\n\t\t\tfor (int i=0;i<outputFields.length;i++)\r\n\t\t\t{\r\n\t\t\t    ExcelField field = outputFields[i];\r\n\t\t\t    \r\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"field_name\",      field.getName());\r\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"field_type\",      field.getTypeDesc());\r\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"field_format\",    field.getFormat());\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow new KettleException(\"Unable to save step information to the repository for id_step=\"+id_step, e);\r\n\t\t}\r\n\t}","id":52792,"modified_method":"public void saveRep(Repository rep, long id_transformation, long id_step)\r\n\t\tthrows KettleException\r\n\t{\r\n\t\ttry\r\n\t\t{\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"header\",           headerEnabled);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"footer\",           footerEnabled);\r\n            rep.saveStepAttribute(id_transformation, id_step, \"encoding\",         encoding);\r\n            rep.saveStepAttribute(id_transformation, id_step, \"append\",           append);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"file_name\",        fileName);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"file_extention\",   extension);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"file_split\",       splitEvery);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"file_add_stepnr\",  stepNrInFilename);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"file_add_date\",    dateInFilename);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"file_add_time\",    timeInFilename);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"add_to_result_filenames\",    addToResultFilenames);\r\n\t\t\t\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"protect_sheet\",    protectsheet);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"password\",  Encr.encryptPasswordIfNotUsingVariables(password) );\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"template_enabled\",  templateEnabled);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"template_append\",   templateAppend);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"template_filename\", templateFileName);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"sheetname\", sheetname);\r\n\t\t\tfor (int i=0;i<outputFields.length;i++)\r\n\t\t\t{\r\n\t\t\t    ExcelField field = outputFields[i];\r\n\t\t\t    \r\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"field_name\",      field.getName());\r\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"field_type\",      field.getTypeDesc());\r\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"field_format\",    field.getFormat());\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow new KettleException(\"Unable to save step information to the repository for id_step=\"+id_step, e);\r\n\t\t}\r\n\t}","commit_id":"0279031439c8b85a0b054e50fca6e2ccc2542cfb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void get()\r\n\t{\r\n        try\r\n        {\r\n        \tgetXMLDataMeta meta = new getXMLDataMeta();\r\n        \tgetInfo(meta);\r\n        \t\r\n        \t//\t check if the path is given \r\n    \t\tif (!checkLoopXPath(meta)) return;    \t\r\n    \t\t        \r\n            \r\n    \t\tFileInputList inputList = meta.getFiles(transMeta);\r\n            if(meta.getIsInFields())\r\n            {\r\n \t\t\t\r\n            }           \r\n            else if (inputList.getFiles().size()>0)\r\n            {\r\n\r\n            \t//Clear Fields Grid\r\n                wFields.removeAll(); \r\n                \r\n            \t// get encoding. By default UTF-8\r\n    \t\t\tString encodage=\"UTF-8\";\r\n    \t\t\tif (!Const.isEmpty(meta.getEncoding()))\r\n    \t\t\t{\r\n    \t\t\t\tencodage=meta.getEncoding();\r\n    \t\t\t}\r\n    \t\t\t// Get Fields from the first file \r\n    \t\t\tDocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\r\n    \t\t\tDocument document = builder.parse(new InputSource(new InputStreamReader(new FileInputStream(KettleVFS.getFilename(inputList.getFile(0))), encodage)));        \r\n    \t    \t\r\n    \t\t\tXPath xpath =XPathFactory.newInstance().newXPath();\r\n    \t\t\tNodeList widgetNodes = (NodeList) xpath.evaluate(meta.getLoopXPath(), document,XPathConstants.NODESET);\r\n    \t        \r\n    \t\t\tHashSet<String> list = new HashSet<String> ();\r\n    \t\t\t\r\n    \t\t\tif (widgetNodes.getLength() >0)\r\n    \t\t\t{\r\n    \t\t\t\t\r\n    \t\t\t\tfor (int n = 0; n < widgetNodes.getLength(); n++) \r\n    \t\t\t\t{\r\n    \t\t\t\t\t// Let's take the node\r\n\t    \t\t\t\tNode widgetNode = widgetNodes.item(n);\r\n\t    \t\t\t\t\r\n\t    \t\t\t\tString valueNode=null;\r\n\t    \t\t\t\t\r\n\t    \t\t\t\tfor (int i = 0; i < widgetNode.getChildNodes().getLength(); i++) \r\n\t    \t\t\t\t{\r\n\t    \t\t\t\t\t// Get Node Name\r\n\t    \t\t\t\t\tString nodename=widgetNode.getChildNodes().item(i).getNodeName();\r\n\t    \t\t\t\t\t\r\n\t    \t\t\t\t\tif(!list.contains(nodename) && !nodename.equals(\"#text\"))\r\n\t    \t\t\t\t\t{\r\n\t\t    \t\t            TableItem item = new TableItem(wFields.table, SWT.NONE);\r\n\t\t    \t\t            item.setText(1, nodename);\r\n\t\t    \t\t            item.setText(2, nodename);\r\n\t\t    \t\t            item.setText(3, getXMLDataField.ElementTypeDesc[0]);\r\n\t\t    \t\t           \r\n\t\t    \r\n\t\t    \t\t            // Get Node value\r\n\t\t    \t\t            valueNode=XMLHandler.getNodeValue( widgetNode.getChildNodes().item(i) ); \r\n\t\t    \t\t           \r\n\t\t    \t\t\t\t\t// Try to get the Type\r\n\t\t    \t\t            if(IsDate(valueNode))\r\n\t\t\t            \t\t\titem.setText(4, \"Date\");\r\n\t\t    \t\t            else if(IsInteger(valueNode))\r\n\t\t\t            \t\t\titem.setText(4, \"Integer\");\r\n\t\t    \t\t            else if(IsNumber(valueNode))\r\n\t\t\t            \t\t\titem.setText(4, \"Number\");\t    \t\t          \r\n\t\t    \t\t            else\r\n\t\t    \t\t            \titem.setText(4, \"String\");\t    \t\t            \r\n\t\t    \t\t            \r\n\t\t    \t\t            list.add(nodename);\r\n\t    \t\t\t\t\t}\r\n\t    \t\t\t\t\t\r\n\t    \t\t\t\t}\r\n\t    \t\t\t\tlist.clear();\r\n\t    \t\t\t\tfor (int i = 0; i < widgetNode.getAttributes().getLength(); i++) \r\n\t    \t\t\t\t{\r\n\t    \t\t\t\t\t// Get Attribute Name\r\n\t    \t\t\t\t\tString attributname=widgetNode.getAttributes().item(i).getNodeName();\r\n\t    \t\t\t\t\t\r\n\t    \t\t\t\t\tif(!list.contains(attributname))\r\n\t    \t\t\t\t\t{\r\n\t\t    \t\t            TableItem item = new TableItem(wFields.table, SWT.NONE);\r\n\t\t    \t\t            item.setText(1, attributname);\r\n\t\t    \t\t            item.setText(2, attributname);\r\n\t\t    \t\t            item.setText(3, getXMLDataField.ElementTypeDesc[1]);\r\n\t\t    \t\t            \r\n\t\t    \t\t            // Get attribute value\r\n\t\t    \t\t            valueNode = widgetNode.getAttributes().item(i).getNodeValue(); \r\n\t\t    \t\t            \r\n\t\t    \t\t            // Try to get the Type\r\n\t\t    \t\t            if(IsDate(valueNode))\r\n\t\t\t            \t\t\titem.setText(4, \"Date\");\r\n\t\t    \t\t            else if(IsInteger(valueNode))\r\n\t\t\t            \t\t\titem.setText(4, \"Integer\");\r\n\t\t    \t\t            else if(IsNumber(valueNode))\r\n\t\t\t            \t\t\titem.setText(4, \"Number\");\t    \t\t          \r\n\t\t    \t\t            else\r\n\t\t    \t\t            \titem.setText(4, \"String\");\t    \t\t            \t\r\n\t\t    \t\t            list.add(attributname);\r\n\t    \t\t\t\t\t}\r\n\t    \t\t\t\t} \r\n    \t\t\t\t}\r\n    \t\t\t}\r\n                wFields.removeEmptyRows();\r\n                wFields.setRowNums();\r\n                wFields.optWidth(true);                \t\t\t\r\n            \t\r\n            }\r\n            \r\n\r\n        }     \r\n        catch(Exception e)\r\n        {\r\n            new ErrorDialog(shell, Messages.getString(\"getXMLDataDialog.ErrorParsingData.DialogTitle\"), Messages.getString(\"getXMLDataDialog.ErrorParsingData.DialogMessage\"), e);\r\n        }\r\n\t}","id":52793,"modified_method":"private void get()\r\n\t{\r\n        try\r\n        {\r\n        \tgetXMLDataMeta meta = new getXMLDataMeta();\r\n        \tgetInfo(meta);\r\n        \t\r\n        \t//\t check if the path is given \r\n    \t\tif (!checkLoopXPath(meta)) return;    \t\r\n    \t\t        \r\n            \r\n    \t\tFileInputList inputList = meta.getFiles(transMeta);\r\n            if(meta.getIsInFields())\r\n            {\r\n \t\t\t\r\n            }           \r\n            else if (inputList.getFiles().size()>0)\r\n            {\r\n\r\n            \t//Clear Fields Grid\r\n                wFields.removeAll(); \r\n                \r\n            \t// get encoding. By default UTF-8\r\n    \t\t\tString encodage=\"UTF-8\";\r\n    \t\t\tif (!Const.isEmpty(meta.getEncoding()))\r\n    \t\t\t{\r\n    \t\t\t\tencodage=meta.getEncoding();\r\n    \t\t\t}\r\n    \t\t\t// Get Fields from the first file \r\n    \t\t\tDocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\r\n    \t\t\tDocument document = builder.parse(new InputSource(new InputStreamReader(new FileInputStream(KettleVFS.getFilename(inputList.getFile(0))), encodage)));        \r\n    \t    \t\r\n    \t\t\tXPath xpath =XPathFactory.newInstance().newXPath();\r\n    \t\t\tNodeList widgetNodes = (NodeList) xpath.evaluate(meta.getLoopXPath(), document,XPathConstants.NODESET);\r\n    \t        \r\n    \t\t\tHashSet<String> list = new HashSet<String> ();\r\n    \t\t\t\r\n    \t\t\tif (widgetNodes.getLength() >0)\r\n    \t\t\t{\r\n    \t\t\t\t\r\n    \t\t\t\tfor (int n = 0; n < widgetNodes.getLength(); n++) \r\n    \t\t\t\t{\r\n    \t\t\t\t\t// Let's take the node\r\n\t    \t\t\t\tNode widgetNode = widgetNodes.item(n);\r\n\t    \t\t\t\t\r\n\t    \t\t\t\tString valueNode=null;\r\n\t    \t\t\t\t\r\n\t    \t\t\t\tfor (int i = 0; i < widgetNode.getChildNodes().getLength(); i++) \r\n\t    \t\t\t\t{\r\n\t    \t\t\t\t\t// Get Node Name\r\n\t    \t\t\t\t\tString nodename=widgetNode.getChildNodes().item(i).getNodeName();\r\n\t    \t\t\t\t\t\r\n\t    \t\t\t\t\tif(!list.contains(nodename) && !nodename.equals(\"#text\"))\r\n\t    \t\t\t\t\t{\r\n\t\t    \t\t            TableItem item = new TableItem(wFields.table, SWT.NONE);\r\n\t\t    \t\t            item.setText(1, nodename);\r\n\t\t    \t\t            item.setText(2, nodename);\r\n\t\t    \t\t            item.setText(3, getXMLDataField.ElementTypeDesc[0]);\r\n\t\t    \t\t           \r\n\t\t    \r\n\t\t    \t\t            // Get Node value\r\n\t\t    \t\t            valueNode=XMLHandler.getNodeValue( widgetNode.getChildNodes().item(i) ); \r\n\t\t    \t\t           \r\n\t\t    \t\t\t\t\t// Try to get the Type\r\n\t\t    \t\t            if(IsDate(valueNode))\r\n\t\t    \t\t            {\r\n\t\t\t            \t\t\titem.setText(4, \"Date\");\r\n\t\t\t            \t\t\titem.setText(5, \"yy-mm-dd\");\r\n\t\t    \t\t            }\r\n\t\t    \t\t            else if(IsInteger(valueNode))\r\n\t\t\t            \t\t\titem.setText(4, \"Integer\");\r\n\t\t    \t\t            else if(IsNumber(valueNode))\r\n\t\t\t            \t\t\titem.setText(4, \"Number\");\t    \t\t          \r\n\t\t    \t\t            else\r\n\t\t    \t\t            \titem.setText(4, \"String\");\t    \t\t            \r\n\t\t    \t\t            \r\n\t\t    \t\t            list.add(nodename);\r\n\t    \t\t\t\t\t}\r\n\t    \t\t\t\t\t\r\n\t    \t\t\t\t}\r\n\t    \t\t\t\tlist.clear();\r\n\t    \t\t\t\tfor (int i = 0; i < widgetNode.getAttributes().getLength(); i++) \r\n\t    \t\t\t\t{\r\n\t    \t\t\t\t\t// Get Attribute Name\r\n\t    \t\t\t\t\tString attributname=widgetNode.getAttributes().item(i).getNodeName();\r\n\t    \t\t\t\t\t\r\n\t    \t\t\t\t\tif(!list.contains(attributname))\r\n\t    \t\t\t\t\t{\r\n\t\t    \t\t            TableItem item = new TableItem(wFields.table, SWT.NONE);\r\n\t\t    \t\t            item.setText(1, attributname);\r\n\t\t    \t\t            item.setText(2, attributname);\r\n\t\t    \t\t            item.setText(3, getXMLDataField.ElementTypeDesc[1]);\r\n\t\t    \t\t            \r\n\t\t    \t\t            // Get attribute value\r\n\t\t    \t\t            valueNode = widgetNode.getAttributes().item(i).getNodeValue(); \r\n\t\t    \t\t            \r\n\t\t    \t\t            // Try to get the Type\r\n\t\t    \t\t            if(IsDate(valueNode))\r\n\t\t    \t\t            {\r\n\t\t\t            \t\t\titem.setText(4, \"Date\");\r\n\t\t\t            \t\t\titem.setText(5, \"yy-mm-dd\");\r\n\t\t\t            \t\t\t\r\n\t\t    \t\t            }\r\n\t\t    \t\t            else if(IsInteger(valueNode))\r\n\t\t\t            \t\t\titem.setText(4, \"Integer\");\r\n\t\t    \t\t            else if(IsNumber(valueNode))\r\n\t\t\t            \t\t\titem.setText(4, \"Number\");\t    \t\t          \r\n\t\t    \t\t            else\r\n\t\t    \t\t            \titem.setText(4, \"String\");\t    \t\t            \t\r\n\t\t    \t\t            list.add(attributname);\r\n\t    \t\t\t\t\t}\r\n\t    \t\t\t\t} \r\n    \t\t\t\t}\r\n    \t\t\t}\r\n                wFields.removeEmptyRows();\r\n                wFields.setRowNums();\r\n                wFields.optWidth(true);                \t\t\t\r\n            \t\r\n            }\r\n            \r\n\r\n        }     \r\n        catch(Exception e)\r\n        {\r\n            new ErrorDialog(shell, Messages.getString(\"getXMLDataDialog.ErrorParsingData.DialogTitle\"), Messages.getString(\"getXMLDataDialog.ErrorParsingData.DialogMessage\"), e);\r\n        }\r\n\t}","commit_id":"0279031439c8b85a0b054e50fca6e2ccc2542cfb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private boolean IsDate(String str)\r\n{\r\n\t  // TODO: What about other dates? Maybe something for a CRQ\r\n\t  try \r\n\t  {\r\n\t        SimpleDateFormat fdate = new SimpleDateFormat(\"yy-mm-dd\");\r\n\t        fdate.parse(str);\r\n\t  }\r\n\t  catch(Exception e)   {return false; }\r\n\t  return true;\r\n}","id":52794,"modified_method":"private boolean IsDate(String str)\r\n{\r\n\t  // TODO: What about other dates? Maybe something for a CRQ\r\n\t  try \r\n\t  {\r\n\t        SimpleDateFormat fdate = new SimpleDateFormat(\"yy-mm-dd\");\r\n\t        fdate.setLenient(false);\r\n\t        fdate.parse(str);\r\n\t        \r\n\t        \r\n\t  }\r\n\t  catch(Exception e)   {return false; }\r\n\t  return true;\r\n}","commit_id":"0279031439c8b85a0b054e50fca6e2ccc2542cfb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"@NotNull\n  public static List<LineMarkerInfo> getLineMarkers(@NotNull Document document, @NotNull Project project) {\n    ApplicationManager.getApplication().assertIsDispatchThread();\n    MarkupModel markup = DocumentMarkupModel.forDocument(document, project, true);\n    return ObjectUtils.notNull(markup.getUserData(MARKERS_IN_EDITOR_DOCUMENT_KEY), Collections.<LineMarkerInfo>emptyList());\n  }","id":52795,"modified_method":"@NotNull\n  public static List<LineMarkerInfo> getLineMarkers(@NotNull Document document, @NotNull Project project) {\n    ApplicationManager.getApplication().assertIsDispatchThread();\n    MarkupModel markup = DocumentMarkupModel.forDocument(document, project, true);\n    return ObjectUtils.notNull(markup.getUserData(MARKERS_IN_EDITOR_DOCUMENT_KEY), Collections.emptyList());\n  }","commit_id":"504d0cc751b184315918891b8bc6be2a800a05ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  @Override\n  public Element getState() {\n    Element state = new Element(\"state\");\n    if (myDisabledHintsFiles.isEmpty()) {\n      return state;\n    }\n\n    List<String> array = new SmartList<String>();\n    for (VirtualFile file : myDisabledHintsFiles) {\n      if (file.isValid()) {\n        array.add(file.getUrl());\n      }\n    }\n\n    if (!array.isEmpty()) {\n      Collections.sort(array);\n\n      Element disableHintsElement = new Element(DISABLE_HINTS_TAG);\n      state.addContent(disableHintsElement);\n      for (String url : array) {\n        disableHintsElement.addContent(new Element(FILE_TAG).setAttribute(URL_ATT, url));\n      }\n    }\n    return state;\n  }","id":52796,"modified_method":"@Nullable\n  @Override\n  public Element getState() {\n    Element state = new Element(\"state\");\n    if (myDisabledHintsFiles.isEmpty()) {\n      return state;\n    }\n\n    List<String> array = new SmartList<>();\n    for (VirtualFile file : myDisabledHintsFiles) {\n      if (file.isValid()) {\n        array.add(file.getUrl());\n      }\n    }\n\n    if (!array.isEmpty()) {\n      Collections.sort(array);\n\n      Element disableHintsElement = new Element(DISABLE_HINTS_TAG);\n      state.addContent(disableHintsElement);\n      for (String url : array) {\n        disableHintsElement.addContent(new Element(FILE_TAG).setAttribute(URL_ATT, url));\n      }\n    }\n    return state;\n  }","commit_id":"504d0cc751b184315918891b8bc6be2a800a05ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void wrap(@NotNull ThrowableRunnable runnable) {\n    try {\n      runnable.run();\n    }\n    catch (RuntimeException e) {\n      throw e;\n    }\n    catch (Error e) {\n      throw e;\n    }\n    catch (Throwable e) {\n      throw new RuntimeException(e);\n    }\n  }","id":52797,"modified_method":"private static void wrap(@NotNull ThrowableRunnable runnable) {\n    try {\n      runnable.run();\n    }\n    catch (RuntimeException | Error e) {\n      throw e;\n    }\n    catch (Throwable e) {\n      throw new RuntimeException(e);\n    }\n  }","commit_id":"504d0cc751b184315918891b8bc6be2a800a05ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void addFileLevelHighlight(@NotNull final Project project,\n                                    final int group,\n                                    @NotNull final HighlightInfo info,\n                                    @NotNull final PsiFile psiFile) {\n    VirtualFile vFile = psiFile.getViewProvider().getVirtualFile();\n    final FileEditorManager manager = FileEditorManager.getInstance(project);\n    for (FileEditor fileEditor : manager.getEditors(vFile)) {\n      if (fileEditor instanceof TextEditor) {\n        FileLevelIntentionComponent component = new FileLevelIntentionComponent(info.getDescription(), info.getSeverity(),\n                                                                                info.getGutterIconRenderer(), info.quickFixActionRanges,\n                                                                                project, psiFile, ((TextEditor)fileEditor).getEditor());\n        manager.addTopComponent(fileEditor, component);\n        List<HighlightInfo> fileLevelInfos = fileEditor.getUserData(FILE_LEVEL_HIGHLIGHTS);\n        if (fileLevelInfos == null) {\n          fileLevelInfos = new ArrayList<HighlightInfo>();\n          fileEditor.putUserData(FILE_LEVEL_HIGHLIGHTS, fileLevelInfos);\n        }\n        info.fileLevelComponent = component;\n        info.setGroup(group);\n        fileLevelInfos.add(info);\n      }\n    }\n  }","id":52798,"modified_method":"@Override\n  public void addFileLevelHighlight(@NotNull final Project project,\n                                    final int group,\n                                    @NotNull final HighlightInfo info,\n                                    @NotNull final PsiFile psiFile) {\n    VirtualFile vFile = psiFile.getViewProvider().getVirtualFile();\n    final FileEditorManager manager = FileEditorManager.getInstance(project);\n    for (FileEditor fileEditor : manager.getEditors(vFile)) {\n      if (fileEditor instanceof TextEditor) {\n        FileLevelIntentionComponent component = new FileLevelIntentionComponent(info.getDescription(), info.getSeverity(),\n                                                                                info.getGutterIconRenderer(), info.quickFixActionRanges,\n                                                                                project, psiFile, ((TextEditor)fileEditor).getEditor());\n        manager.addTopComponent(fileEditor, component);\n        List<HighlightInfo> fileLevelInfos = fileEditor.getUserData(FILE_LEVEL_HIGHLIGHTS);\n        if (fileLevelInfos == null) {\n          fileLevelInfos = new ArrayList<>();\n          fileEditor.putUserData(FILE_LEVEL_HIGHLIGHTS, fileLevelInfos);\n        }\n        info.fileLevelComponent = component;\n        info.setGroup(group);\n        fileLevelInfos.add(info);\n      }\n    }\n  }","commit_id":"504d0cc751b184315918891b8bc6be2a800a05ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  @TestOnly\n  List<HighlightInfo> runPasses(@NotNull PsiFile file,\n                                @NotNull Document document,\n                                @NotNull List<TextEditor> textEditors,\n                                @NotNull int[] toIgnore,\n                                boolean canChangeDocument,\n                                @Nullable final Runnable callbackWhileWaiting) throws ProcessCanceledException {\n    assert myInitialized;\n    assert !myDisposed;\n    ApplicationEx application = ApplicationManagerEx.getApplicationEx();\n    application.assertIsDispatchThread();\n    if (application.isWriteAccessAllowed()) {\n      throw new AssertionError(\"Must not start highlighting from within write action, or deadlock is imminent\");\n    }\n    DaemonProgressIndicator.setDebug(true);\n    ((FileTypeManagerImpl)FileTypeManager.getInstance()).drainReDetectQueue();\n    // pump first so that queued event do not interfere\n    UIUtil.dispatchAllInvocationEvents();\n\n    // refresh will fire write actions interfering with highlighting\n    while (RefreshQueueImpl.isRefreshInProgress() || HeavyProcessLatch.INSTANCE.isRunning()) {\n      UIUtil.dispatchAllInvocationEvents();\n    }\n    long dstart = System.currentTimeMillis();\n    while (mustWaitForSmartMode && DumbService.getInstance(myProject).isDumb()) {\n      if (System.currentTimeMillis() > dstart + 100000) {\n        throw new IllegalStateException(\"Timeout waiting for smart mode. If you absolutely want to be dumb, please use DaemonCodeAnalyzerImpl.mustWaitForSmartMode(false).\");\n      }\n      UIUtil.dispatchAllInvocationEvents();\n    }\n\n    UIUtil.dispatchAllInvocationEvents();\n\n    Project project = file.getProject();\n    FileStatusMap.getAndClearLog();\n    FileStatusMap fileStatusMap = getFileStatusMap();\n    fileStatusMap.allowDirt(canChangeDocument);\n\n    Map<FileEditor, HighlightingPass[]> map = new HashMap<FileEditor, HighlightingPass[]>();\n    for (TextEditor textEditor : textEditors) {\n      TextEditorBackgroundHighlighter highlighter = (TextEditorBackgroundHighlighter)textEditor.getBackgroundHighlighter();\n      final List<TextEditorHighlightingPass> passes = highlighter.getPasses(toIgnore);\n      HighlightingPass[] array = passes.toArray(new HighlightingPass[passes.size()]);\n      assert array.length != 0 : \"Highlighting is disabled for the file \" + file;\n      map.put(textEditor, array);\n    }\n    for (int ignoreId : toIgnore) {\n      fileStatusMap.markFileUpToDate(document, ignoreId);\n    }\n\n    myAlarm.cancelAllRequests();\n    final DaemonProgressIndicator progress = createUpdateProgress();\n    myPassExecutorService.submitPasses(map, progress);\n    try {\n      long start = System.currentTimeMillis();\n      while (progress.isRunning() && System.currentTimeMillis() < start + 5*60*1000) {\n        wrap(new ThrowableRunnable() {\n          @Override\n          public void run() throws Throwable {\n            progress.checkCanceled();\n            if (callbackWhileWaiting != null) {\n              callbackWhileWaiting.run();\n            }\n            myPassExecutorService.waitFor(50);\n            UIUtil.dispatchAllInvocationEvents();\n            Throwable savedException = PassExecutorService.getSavedException(progress);\n            if (savedException != null) throw savedException;\n          }\n        });\n      }\n      if (progress.isRunning() && !progress.isCanceled()) {\n        throw new RuntimeException(\"Highlighting still running after \"+(System.currentTimeMillis()-start)/1000+\" seconds.\\n\"+ ThreadDumper.dumpThreadsToString());\n      }\n\n      final HighlightingSessionImpl session =\n        (HighlightingSessionImpl)HighlightingSessionImpl.getOrCreateHighlightingSession(file, textEditors.get(0).getEditor(), progress, null);\n      wrap(new ThrowableRunnable() {\n        @Override\n        public void run() throws Throwable {\n          if (!myPassExecutorService.waitFor(60000)) {\n            throw new TimeoutException(\"Unable to complete in 60s\");\n          }\n          session.waitForHighlightInfosApplied();\n        }\n      });\n      UIUtil.dispatchAllInvocationEvents();\n      UIUtil.dispatchAllInvocationEvents();\n      assert progress.isCanceled() && progress.isDisposed();\n\n      return getHighlights(document, null, project);\n    }\n    finally {\n      DaemonProgressIndicator.setDebug(false);\n      String log = FileStatusMap.getAndClearLog();\n      fileStatusMap.allowDirt(true);\n      try {\n        waitForTermination();\n      }\n      catch (Throwable e) {\n        LOG.error(log, e);\n      }\n    }\n  }","id":52799,"modified_method":"@NotNull\n  @TestOnly\n  List<HighlightInfo> runPasses(@NotNull PsiFile file,\n                                @NotNull Document document,\n                                @NotNull List<TextEditor> textEditors,\n                                @NotNull int[] toIgnore,\n                                boolean canChangeDocument,\n                                @Nullable final Runnable callbackWhileWaiting) throws ProcessCanceledException {\n    assert myInitialized;\n    assert !myDisposed;\n    ApplicationEx application = ApplicationManagerEx.getApplicationEx();\n    application.assertIsDispatchThread();\n    if (application.isWriteAccessAllowed()) {\n      throw new AssertionError(\"Must not start highlighting from within write action, or deadlock is imminent\");\n    }\n    DaemonProgressIndicator.setDebug(true);\n    ((FileTypeManagerImpl)FileTypeManager.getInstance()).drainReDetectQueue();\n    // pump first so that queued event do not interfere\n    UIUtil.dispatchAllInvocationEvents();\n\n    // refresh will fire write actions interfering with highlighting\n    while (RefreshQueueImpl.isRefreshInProgress() || HeavyProcessLatch.INSTANCE.isRunning()) {\n      UIUtil.dispatchAllInvocationEvents();\n    }\n    long dstart = System.currentTimeMillis();\n    while (mustWaitForSmartMode && DumbService.getInstance(myProject).isDumb()) {\n      if (System.currentTimeMillis() > dstart + 100000) {\n        throw new IllegalStateException(\"Timeout waiting for smart mode. If you absolutely want to be dumb, please use DaemonCodeAnalyzerImpl.mustWaitForSmartMode(false).\");\n      }\n      UIUtil.dispatchAllInvocationEvents();\n    }\n\n    UIUtil.dispatchAllInvocationEvents();\n\n    Project project = file.getProject();\n    FileStatusMap.getAndClearLog();\n    FileStatusMap fileStatusMap = getFileStatusMap();\n    fileStatusMap.allowDirt(canChangeDocument);\n\n    Map<FileEditor, HighlightingPass[]> map = new HashMap<>();\n    for (TextEditor textEditor : textEditors) {\n      TextEditorBackgroundHighlighter highlighter = (TextEditorBackgroundHighlighter)textEditor.getBackgroundHighlighter();\n      final List<TextEditorHighlightingPass> passes = highlighter.getPasses(toIgnore);\n      HighlightingPass[] array = passes.toArray(new HighlightingPass[passes.size()]);\n      assert array.length != 0 : \"Highlighting is disabled for the file \" + file;\n      map.put(textEditor, array);\n    }\n    for (int ignoreId : toIgnore) {\n      fileStatusMap.markFileUpToDate(document, ignoreId);\n    }\n\n    myAlarm.cancelAllRequests();\n    final DaemonProgressIndicator progress = createUpdateProgress();\n    myPassExecutorService.submitPasses(map, progress);\n    try {\n      long start = System.currentTimeMillis();\n      while (progress.isRunning() && System.currentTimeMillis() < start + 5*60*1000) {\n        wrap(() -> {\n          progress.checkCanceled();\n          if (callbackWhileWaiting != null) {\n            callbackWhileWaiting.run();\n          }\n          myPassExecutorService.waitFor(50);\n          UIUtil.dispatchAllInvocationEvents();\n          Throwable savedException = PassExecutorService.getSavedException(progress);\n          if (savedException != null) throw savedException;\n        });\n      }\n      if (progress.isRunning() && !progress.isCanceled()) {\n        throw new RuntimeException(\"Highlighting still running after \"+(System.currentTimeMillis()-start)/1000+\" seconds.\\n\"+ ThreadDumper.dumpThreadsToString());\n      }\n\n      final HighlightingSessionImpl session =\n        (HighlightingSessionImpl)HighlightingSessionImpl.getOrCreateHighlightingSession(file, textEditors.get(0).getEditor(), progress, null);\n      wrap(() -> {\n        if (!myPassExecutorService.waitFor(60000)) {\n          throw new TimeoutException(\"Unable to complete in 60s\");\n        }\n        session.waitForHighlightInfosApplied();\n      });\n      UIUtil.dispatchAllInvocationEvents();\n      UIUtil.dispatchAllInvocationEvents();\n      assert progress.isCanceled() && progress.isDisposed();\n\n      return getHighlights(document, null, project);\n    }\n    finally {\n      DaemonProgressIndicator.setDebug(false);\n      String log = FileStatusMap.getAndClearLog();\n      fileStatusMap.allowDirt(true);\n      try {\n        waitForTermination();\n      }\n      catch (Throwable e) {\n        LOG.error(log, e);\n      }\n    }\n  }","commit_id":"504d0cc751b184315918891b8bc6be2a800a05ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@TestOnly\n  public void mustWaitForSmartMode(final boolean mustWait, @NotNull Disposable parent) {\n    final boolean old = mustWaitForSmartMode;\n    mustWaitForSmartMode = mustWait;\n    Disposer.register(parent, new Disposable() {\n      @Override\n      public void dispose() {\n        mustWaitForSmartMode = old;\n      }\n    });\n  }","id":52800,"modified_method":"@TestOnly\n  public void mustWaitForSmartMode(final boolean mustWait, @NotNull Disposable parent) {\n    final boolean old = mustWaitForSmartMode;\n    mustWaitForSmartMode = mustWait;\n    Disposer.register(parent, () -> mustWaitForSmartMode = old);\n  }","commit_id":"504d0cc751b184315918891b8bc6be2a800a05ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  @NotNull\n  public List<HighlightInfo> runMainPasses(@NotNull PsiFile psiFile,\n                                           @NotNull Document document,\n                                           @NotNull final ProgressIndicator progress) {\n    if (ApplicationManager.getApplication().isDispatchThread()) {\n      throw new IllegalStateException(\"Must not run highlighting from under EDT\");\n    }\n    if (!ApplicationManager.getApplication().isReadAccessAllowed()) {\n      throw new IllegalStateException(\"Must run highlighting from under read action\");\n    }\n    ProgressIndicator indicator = ProgressManager.getInstance().getProgressIndicator();\n    if (!(indicator instanceof DaemonProgressIndicator)) {\n      throw new IllegalStateException(\"Must run highlighting under progress with DaemonProgressIndicator\");\n    }\n    // clear status maps to run passes from scratch so that refCountHolder won't conflict and try to restart itself on partially filled maps\n    myFileStatusMap.markAllFilesDirty(\"prepare to run main passes\");\n    stopProcess(false, \"disable background daemon\");\n    myPassExecutorService.cancelAll(true);\n\n    final List<HighlightInfo> result;\n    try {\n      result = new ArrayList<HighlightInfo>();\n      final VirtualFile virtualFile = psiFile.getVirtualFile();\n      if (virtualFile != null && !virtualFile.getFileType().isBinary()) {\n        List<TextEditorHighlightingPass> passes =\n          TextEditorHighlightingPassRegistrarEx.getInstanceEx(myProject).instantiateMainPasses(psiFile, document,\n                                                                                               HighlightInfoProcessor.getEmpty());\n\n        Collections.sort(passes, new Comparator<TextEditorHighlightingPass>() {\n          @Override\n          public int compare(@NotNull TextEditorHighlightingPass o1, @NotNull TextEditorHighlightingPass o2) {\n            if (o1 instanceof GeneralHighlightingPass) return -1;\n            if (o2 instanceof GeneralHighlightingPass) return 1;\n            return 0;\n          }\n        });\n\n        LOG.debug(\"All passes for \" + psiFile.getName()+ \" started (\" + passes+\"). progress canceled: \"+progress.isCanceled());\n        try {\n          for (TextEditorHighlightingPass pass : passes) {\n            pass.doCollectInformation(progress);\n            result.addAll(pass.getInfos());\n          }\n        }\n        catch (ProcessCanceledException e) {\n          LOG.debug(\"Canceled: \" + progress);\n          throw e;\n        }\n        LOG.debug(\"All passes for \" + psiFile.getName()+ \" run. progress canceled: \"+progress.isCanceled()+\"; infos: \"+result);\n      }\n    }\n    finally {\n      stopProcess(true, \"re-enable background daemon after main passes run\");\n    }\n\n    return result;\n  }","id":52801,"modified_method":"@Override\n  @NotNull\n  public List<HighlightInfo> runMainPasses(@NotNull PsiFile psiFile,\n                                           @NotNull Document document,\n                                           @NotNull final ProgressIndicator progress) {\n    if (ApplicationManager.getApplication().isDispatchThread()) {\n      throw new IllegalStateException(\"Must not run highlighting from under EDT\");\n    }\n    if (!ApplicationManager.getApplication().isReadAccessAllowed()) {\n      throw new IllegalStateException(\"Must run highlighting from under read action\");\n    }\n    ProgressIndicator indicator = ProgressManager.getInstance().getProgressIndicator();\n    if (!(indicator instanceof DaemonProgressIndicator)) {\n      throw new IllegalStateException(\"Must run highlighting under progress with DaemonProgressIndicator\");\n    }\n    // clear status maps to run passes from scratch so that refCountHolder won't conflict and try to restart itself on partially filled maps\n    myFileStatusMap.markAllFilesDirty(\"prepare to run main passes\");\n    stopProcess(false, \"disable background daemon\");\n    myPassExecutorService.cancelAll(true);\n\n    final List<HighlightInfo> result;\n    try {\n      result = new ArrayList<>();\n      final VirtualFile virtualFile = psiFile.getVirtualFile();\n      if (virtualFile != null && !virtualFile.getFileType().isBinary()) {\n        List<TextEditorHighlightingPass> passes =\n          TextEditorHighlightingPassRegistrarEx.getInstanceEx(myProject).instantiateMainPasses(psiFile, document,\n                                                                                               HighlightInfoProcessor.getEmpty());\n\n        Collections.sort(passes, (o1, o2) -> {\n          if (o1 instanceof GeneralHighlightingPass) return -1;\n          if (o2 instanceof GeneralHighlightingPass) return 1;\n          return 0;\n        });\n\n        LOG.debug(\"All passes for \" + psiFile.getName()+ \" started (\" + passes+\"). progress canceled: \"+progress.isCanceled());\n        try {\n          for (TextEditorHighlightingPass pass : passes) {\n            pass.doCollectInformation(progress);\n            result.addAll(pass.getInfos());\n          }\n        }\n        catch (ProcessCanceledException e) {\n          LOG.debug(\"Canceled: \" + progress);\n          throw e;\n        }\n        LOG.debug(\"All passes for \" + psiFile.getName()+ \" run. progress canceled: \"+progress.isCanceled()+\"; infos: \"+result);\n      }\n    }\n    finally {\n      stopProcess(true, \"re-enable background daemon after main passes run\");\n    }\n\n    return result;\n  }","commit_id":"504d0cc751b184315918891b8bc6be2a800a05ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"synchronized void stopProcess(boolean toRestartAlarm, @NonNls String reason) {\n    if (!allowToInterrupt) throw new RuntimeException(\"Cannot interrupt daemon\");\n\n    cancelUpdateProgress(toRestartAlarm, reason);\n    myAlarm.cancelAllRequests();\n    boolean restart = toRestartAlarm && !myDisposed && myInitialized;\n    if (restart) {\n      UIUtil.invokeLaterIfNeeded(new Runnable() {\n        @Override\n        public void run() {\n          if (myAlarm.isEmpty()) {\n            myAlarm.addRequest(myUpdateRunnable, mySettings.AUTOREPARSE_DELAY);\n          }\n        }\n      });\n    }\n  }","id":52802,"modified_method":"synchronized void stopProcess(boolean toRestartAlarm, @NonNls String reason) {\n    if (!allowToInterrupt) throw new RuntimeException(\"Cannot interrupt daemon\");\n\n    cancelUpdateProgress(toRestartAlarm, reason);\n    myAlarm.cancelAllRequests();\n    boolean restart = toRestartAlarm && !myDisposed && myInitialized;\n    if (restart) {\n      UIUtil.invokeLaterIfNeeded(() -> {\n        if (myAlarm.isEmpty()) {\n          myAlarm.addRequest(myUpdateRunnable, mySettings.AUTOREPARSE_DELAY);\n        }\n      });\n    }\n  }","commit_id":"504d0cc751b184315918891b8bc6be2a800a05ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  @NotNull\n  @TestOnly\n  public List<HighlightInfo> getFileLevelHighlights(@NotNull Project project, @NotNull PsiFile file) {\n    VirtualFile vFile = file.getViewProvider().getVirtualFile();\n    final FileEditorManager manager = FileEditorManager.getInstance(project);\n    List<HighlightInfo> result = new ArrayList<HighlightInfo>();\n    for (FileEditor fileEditor : manager.getEditors(vFile)) {\n      final List<HighlightInfo> infos = fileEditor.getUserData(FILE_LEVEL_HIGHLIGHTS);\n      if (infos == null) continue;\n      for (HighlightInfo info : infos) {\n          result.add(info);\n      }\n    }\n    return result;\n  }","id":52803,"modified_method":"@Override\n  @NotNull\n  @TestOnly\n  public List<HighlightInfo> getFileLevelHighlights(@NotNull Project project, @NotNull PsiFile file) {\n    VirtualFile vFile = file.getViewProvider().getVirtualFile();\n    final FileEditorManager manager = FileEditorManager.getInstance(project);\n    List<HighlightInfo> result = new ArrayList<>();\n    for (FileEditor fileEditor : manager.getEditors(vFile)) {\n      final List<HighlightInfo> infos = fileEditor.getUserData(FILE_LEVEL_HIGHLIGHTS);\n      if (infos == null) continue;\n      for (HighlightInfo info : infos) {\n          result.add(info);\n      }\n    }\n    return result;\n  }","commit_id":"504d0cc751b184315918891b8bc6be2a800a05ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void disableUpdateByTimer(@NotNull Disposable parentDisposable) {\n    setUpdateByTimerEnabled(false);\n    myDisableCount++;\n    ApplicationManager.getApplication().assertIsDispatchThread();\n\n    Disposer.register(parentDisposable, new Disposable() {\n      @Override\n      public void dispose() {\n        myDisableCount--;\n        if (myDisableCount == 0) {\n          setUpdateByTimerEnabled(true);\n        }\n      }\n    });\n  }","id":52804,"modified_method":"@Override\n  public void disableUpdateByTimer(@NotNull Disposable parentDisposable) {\n    setUpdateByTimerEnabled(false);\n    myDisableCount++;\n    ApplicationManager.getApplication().assertIsDispatchThread();\n\n    Disposer.register(parentDisposable, () -> {\n      myDisableCount--;\n      if (myDisableCount == 0) {\n        setUpdateByTimerEnabled(true);\n      }\n    });\n  }","commit_id":"504d0cc751b184315918891b8bc6be2a800a05ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  @TestOnly\n  public static List<HighlightInfo> getHighlights(@NotNull Document document, HighlightSeverity minSeverity, @NotNull Project project) {\n    List<HighlightInfo> infos = new ArrayList<HighlightInfo>();\n    processHighlights(document, project, minSeverity, 0, document.getTextLength(),\n                      new CommonProcessors.CollectProcessor<HighlightInfo>(infos));\n    return infos;\n  }","id":52805,"modified_method":"@NotNull\n  @TestOnly\n  public static List<HighlightInfo> getHighlights(@NotNull Document document, HighlightSeverity minSeverity, @NotNull Project project) {\n    List<HighlightInfo> infos = new ArrayList<>();\n    processHighlights(document, project, minSeverity, 0, document.getTextLength(),\n                      new CommonProcessors.CollectProcessor<>(infos));\n    return infos;\n  }","commit_id":"504d0cc751b184315918891b8bc6be2a800a05ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"static boolean processHighlightsNearOffset(@NotNull Document document,\n                                             @NotNull Project project,\n                                             @NotNull final HighlightSeverity minSeverity,\n                                             final int offset,\n                                             final boolean includeFixRange,\n                                             @NotNull final Processor<HighlightInfo> processor) {\n    return processHighlights(document, project, null, 0, document.getTextLength(), new Processor<HighlightInfo>() {\n      @Override\n      public boolean process(@NotNull HighlightInfo info) {\n        if (!isOffsetInsideHighlightInfo(offset, info, includeFixRange)) return true;\n\n        int compare = info.getSeverity().compareTo(minSeverity);\n        return compare < 0 || processor.process(info);\n      }\n    });\n  }","id":52806,"modified_method":"static boolean processHighlightsNearOffset(@NotNull Document document,\n                                             @NotNull Project project,\n                                             @NotNull final HighlightSeverity minSeverity,\n                                             final int offset,\n                                             final boolean includeFixRange,\n                                             @NotNull final Processor<HighlightInfo> processor) {\n    return processHighlights(document, project, null, 0, document.getTextLength(), info -> {\n      if (!isOffsetInsideHighlightInfo(offset, info, includeFixRange)) return true;\n\n      int compare = info.getSeverity().compareTo(minSeverity);\n      return compare < 0 || processor.process(info);\n    });\n  }","commit_id":"504d0cc751b184315918891b8bc6be2a800a05ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void cleanFileLevelHighlights(@NotNull Project project, final int group, PsiFile psiFile) {\n    if (psiFile == null) return;\n    FileViewProvider provider = psiFile.getViewProvider();\n    VirtualFile vFile = provider.getVirtualFile();\n    final FileEditorManager manager = FileEditorManager.getInstance(project);\n    for (FileEditor fileEditor : manager.getEditors(vFile)) {\n      final List<HighlightInfo> infos = fileEditor.getUserData(FILE_LEVEL_HIGHLIGHTS);\n      if (infos == null) continue;\n      List<HighlightInfo> infosToRemove = new ArrayList<HighlightInfo>();\n      for (HighlightInfo info : infos) {\n        if (info.getGroup() == group) {\n          manager.removeTopComponent(fileEditor, info.fileLevelComponent);\n          infosToRemove.add(info);\n        }\n      }\n      infos.removeAll(infosToRemove);\n    }\n  }","id":52807,"modified_method":"@Override\n  public void cleanFileLevelHighlights(@NotNull Project project, final int group, PsiFile psiFile) {\n    if (psiFile == null) return;\n    FileViewProvider provider = psiFile.getViewProvider();\n    VirtualFile vFile = provider.getVirtualFile();\n    final FileEditorManager manager = FileEditorManager.getInstance(project);\n    for (FileEditor fileEditor : manager.getEditors(vFile)) {\n      final List<HighlightInfo> infos = fileEditor.getUserData(FILE_LEVEL_HIGHLIGHTS);\n      if (infos == null) continue;\n      List<HighlightInfo> infosToRemove = new ArrayList<>();\n      for (HighlightInfo info : infos) {\n        if (info.getGroup() == group) {\n          manager.removeTopComponent(fileEditor, info.fileLevelComponent);\n          infosToRemove.add(info);\n        }\n      }\n      infos.removeAll(infosToRemove);\n    }\n  }","commit_id":"504d0cc751b184315918891b8bc6be2a800a05ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  private Collection<FileEditor> getSelectedEditors() {\n    ApplicationManager.getApplication().assertIsDispatchThread();\n\n    // Editors in modal context\n    List<Editor> editors = getActiveEditors();\n\n    Collection<FileEditor> activeTextEditors = new THashSet<FileEditor>(editors.size());\n    for (Editor editor : editors) {\n      if (editor.isDisposed()) continue;\n      TextEditor textEditor = TextEditorProvider.getInstance().getTextEditor(editor);\n      activeTextEditors.add(textEditor);\n    }\n    if (ApplicationManager.getApplication().getCurrentModalityState() != ModalityState.NON_MODAL) {\n      return activeTextEditors;\n    }\n\n    // Editors in tabs.\n    Collection<FileEditor> result = new THashSet<FileEditor>();\n    Collection<VirtualFile> files = new THashSet<VirtualFile>(activeTextEditors.size());\n    final FileEditor[] tabEditors = FileEditorManager.getInstance(myProject).getSelectedEditors();\n    for (FileEditor tabEditor : tabEditors) {\n      if (!tabEditor.isValid()) continue;\n      VirtualFile file = ((FileEditorManagerEx)FileEditorManager.getInstance(myProject)).getFile(tabEditor);\n      if (file != null) {\n        files.add(file);\n      }\n      result.add(tabEditor);\n    }\n    // do not duplicate documents\n    for (FileEditor fileEditor : activeTextEditors) {\n      VirtualFile file = ((FileEditorManagerEx)FileEditorManager.getInstance(myProject)).getFile(fileEditor);\n      if (file != null && files.contains(file)) continue;\n      result.add(fileEditor);\n    }\n    return result;\n  }","id":52808,"modified_method":"@NotNull\n  private Collection<FileEditor> getSelectedEditors() {\n    ApplicationManager.getApplication().assertIsDispatchThread();\n\n    // Editors in modal context\n    List<Editor> editors = getActiveEditors();\n\n    Collection<FileEditor> activeTextEditors = new THashSet<>(editors.size());\n    for (Editor editor : editors) {\n      if (editor.isDisposed()) continue;\n      TextEditor textEditor = TextEditorProvider.getInstance().getTextEditor(editor);\n      activeTextEditors.add(textEditor);\n    }\n    if (ApplicationManager.getApplication().getCurrentModalityState() != ModalityState.NON_MODAL) {\n      return activeTextEditors;\n    }\n\n    // Editors in tabs.\n    Collection<FileEditor> result = new THashSet<>();\n    Collection<VirtualFile> files = new THashSet<>(activeTextEditors.size());\n    final FileEditor[] tabEditors = FileEditorManager.getInstance(myProject).getSelectedEditors();\n    for (FileEditor tabEditor : tabEditors) {\n      if (!tabEditor.isValid()) continue;\n      VirtualFile file = ((FileEditorManagerEx)FileEditorManager.getInstance(myProject)).getFile(tabEditor);\n      if (file != null) {\n        files.add(file);\n      }\n      result.add(tabEditor);\n    }\n    // do not duplicate documents\n    for (FileEditor fileEditor : activeTextEditors) {\n      VirtualFile file = ((FileEditorManagerEx)FileEditorManager.getInstance(myProject)).getFile(fileEditor);\n      if (file != null && files.contains(file)) continue;\n      result.add(fileEditor);\n    }\n    return result;\n  }","commit_id":"504d0cc751b184315918891b8bc6be2a800a05ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  HighlightInfo findHighlightByOffset(@NotNull Document document,\n                                      final int offset,\n                                      final boolean includeFixRange,\n                                      @NotNull HighlightSeverity minSeverity) {\n    final List<HighlightInfo> foundInfoList = new SmartList<HighlightInfo>();\n    processHighlightsNearOffset(document, myProject, minSeverity, offset, includeFixRange,\n                                new Processor<HighlightInfo>() {\n                                  @Override\n                                  public boolean process(@NotNull HighlightInfo info) {\n                                    if (info.getSeverity() == HighlightInfoType.ELEMENT_UNDER_CARET_SEVERITY) {\n                                      return true;\n                                    }\n                                    if (!foundInfoList.isEmpty()) {\n                                      HighlightInfo foundInfo = foundInfoList.get(0);\n                                      int compare = foundInfo.getSeverity().compareTo(info.getSeverity());\n                                      if (compare < 0) {\n                                        foundInfoList.clear();\n                                      }\n                                      else if (compare > 0) {\n                                        return true;\n                                      }\n                                    }\n                                    foundInfoList.add(info);\n                                    return true;\n                                  }\n                                });\n\n    if (foundInfoList.isEmpty()) return null;\n    if (foundInfoList.size() == 1) return foundInfoList.get(0);\n    return new HighlightInfoComposite(foundInfoList);\n  }","id":52809,"modified_method":"@Nullable\n  HighlightInfo findHighlightByOffset(@NotNull Document document,\n                                      final int offset,\n                                      final boolean includeFixRange,\n                                      @NotNull HighlightSeverity minSeverity) {\n    final List<HighlightInfo> foundInfoList = new SmartList<>();\n    processHighlightsNearOffset(document, myProject, minSeverity, offset, includeFixRange,\n                                info -> {\n                                  if (info.getSeverity() == HighlightInfoType.ELEMENT_UNDER_CARET_SEVERITY) {\n                                    return true;\n                                  }\n                                  if (!foundInfoList.isEmpty()) {\n                                    HighlightInfo foundInfo = foundInfoList.get(0);\n                                    int compare = foundInfo.getSeverity().compareTo(info.getSeverity());\n                                    if (compare < 0) {\n                                      foundInfoList.clear();\n                                    }\n                                    else if (compare > 0) {\n                                      return true;\n                                    }\n                                  }\n                                  foundInfoList.add(info);\n                                  return true;\n                                });\n\n    if (foundInfoList.isEmpty()) return null;\n    if (foundInfoList.size() == 1) return foundInfoList.get(0);\n    return new HighlightInfoComposite(foundInfoList);\n  }","commit_id":"504d0cc751b184315918891b8bc6be2a800a05ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  List<TextEditorHighlightingPass> getPassesToShowProgressFor(Document document) {\n    List<TextEditorHighlightingPass> allPasses = myPassExecutorService.getAllSubmittedPasses();\n    List<TextEditorHighlightingPass> result = new ArrayList<TextEditorHighlightingPass>(allPasses.size());\n    for (TextEditorHighlightingPass pass : allPasses) {\n      if (pass.getDocument() == document || pass.getDocument() == null) {\n        result.add(pass);\n      }\n    }\n    return result;\n  }","id":52810,"modified_method":"@NotNull\n  List<TextEditorHighlightingPass> getPassesToShowProgressFor(Document document) {\n    List<TextEditorHighlightingPass> allPasses = myPassExecutorService.getAllSubmittedPasses();\n    List<TextEditorHighlightingPass> result = new ArrayList<>(allPasses.size());\n    for (TextEditorHighlightingPass pass : allPasses) {\n      if (pass.getDocument() == document || pass.getDocument() == null) {\n        result.add(pass);\n      }\n    }\n    return result;\n  }","commit_id":"504d0cc751b184315918891b8bc6be2a800a05ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n     * Executes the Groovy script passed in the <code>script<\/code> property of the\n     * {@link com.xpn.xwiki.plugin.scheduler.SchedulerPlugin#XWIKI_JOB_CLASS} object extracted from the XWiki context\n     * passed in the Quartz's Job execution context. The XWiki Task object is looked for in the current document that\n     * was set in the context at the time the Job was scheduled.\n     * \n     * @param jobContext the Quartz execution context containing the XWiki context from which the script to execute is\n     *            retrieved\n     * @throws JobExecutionException if the script fails to execute or if the user didn't have programming rights when\n     *             the Job was scheduled\n     * @see org.quartz.Job#execute(org.quartz.JobExecutionContext)\n     */\n    @Override\n    protected void executeJob(JobExecutionContext jobContext) throws JobExecutionException\n    {\n        try {\n            JobDataMap data = jobContext.getJobDetail().getJobDataMap();\n\n            // The XWiki context was saved in the Job execution data map. Get it as we'll retrieve\n            // the script to execute from it.\n            XWikiContext context = (XWikiContext) data.get(\"context\");\n\n            // Get the job XObject to be executed\n            BaseObject object = (BaseObject) data.get(\"xjob\");\n\n            // Force context document\n            XWikiDocument jobDocument = context.getWiki().getDocument(object.getName(), context);\n            context.setDoc(jobDocument);\n            context.put(\"sdoc\", jobDocument);\n\n            if (context.getWiki().getRightService().hasProgrammingRights(context)) {\n\n                // Make the Job execution data available to the Groovy script\n                Binding binding = new Binding(data.getWrappedMap());\n\n                // Execute the Groovy script\n                GroovyShell shell = new GroovyShell(Thread.currentThread().getContextClassLoader(), binding);\n                shell.evaluate(object.getLargeStringValue(\"script\"));\n            } else {\n                throw new JobExecutionException(\"The user [\" + context.getUser() + \"] didn't have \"\n                    + \"programming rights when the job [\" + jobContext.getJobDetail().getName() + \"] was scheduled.\");\n            }\n        } catch (CompilationFailedException e) {\n            throw new JobExecutionException(\"Failed to execute script for job [\" + jobContext.getJobDetail().getName()\n                + \"]\", e, true);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }","id":52811,"modified_method":"/**\n     * Executes the Groovy script passed in the <code>script<\/code> property of the\n     * {@link com.xpn.xwiki.plugin.scheduler.SchedulerPlugin#XWIKI_JOB_CLASS} object extracted from the XWiki context\n     * passed in the Quartz's Job execution context. The XWiki Task object is looked for in the current document that\n     * was set in the context at the time the Job was scheduled.\n     * \n     * @param jobContext the Quartz execution context containing the XWiki context from which the script to execute is\n     *            retrieved\n     * @throws JobExecutionException if the script fails to execute or if the user didn't have programming rights when\n     *             the Job was scheduled\n     * @see org.quartz.Job#execute(org.quartz.JobExecutionContext)\n     */\n    @Override\n    protected void executeJob(JobExecutionContext jobContext) throws JobExecutionException\n    {\n        try {\n            JobDataMap data = jobContext.getJobDetail().getJobDataMap();\n\n            // The XWiki context was saved in the Job execution data map. Get it as we'll retrieve\n            // the script to execute from it.\n            XWikiContext context = (XWikiContext) data.get(\"context\");\n\n            // Get the job XObject to be executed\n            BaseObject object = (BaseObject) data.get(\"xjob\");\n\n            // Force context document\n            XWikiDocument jobDocument = context.getWiki().getDocument(object.getName(), context);\n            context.setDoc(jobDocument);\n            context.put(\"sdoc\", jobDocument);\n\n            if (context.getWiki().getRightService().hasProgrammingRights(context)) {\n\n                // Make the Job execution data available to the Groovy script\n                Binding binding = new Binding(data.getWrappedMap());\n\n                // Execute the Groovy script\n                GroovyShell shell = new GroovyShell(Thread.currentThread().getContextClassLoader(), binding);\n                shell.evaluate(object.getLargeStringValue(\"script\"));\n            } else {\n                throw new JobExecutionException(\"The user [\" + context.getUser() + \"] didn't have \"\n                    + \"programming rights when the job [\" + jobContext.getJobDetail().getKey() + \"] was scheduled.\");\n            }\n        } catch (CompilationFailedException e) {\n            throw new JobExecutionException(\"Failed to execute script for job [\" + jobContext.getJobDetail().getKey()\n                + \"]\", e, true);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }","commit_id":"a74983d59e6790749468a7de0946e068fb211c7d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public String getValue()\n    {\n        switch (this.state) {\n            case Trigger.STATE_NORMAL:\n                return JobState.STATE_NORMAL;\n            case Trigger.STATE_BLOCKED:\n                return JobState.STATE_BLOCKED;\n            case Trigger.STATE_COMPLETE:\n                return JobState.STATE_COMPLETE;\n            case Trigger.STATE_ERROR:\n                return JobState.STATE_ERROR;\n            case Trigger.STATE_PAUSED:\n                return JobState.STATE_PAUSED;\n            case Trigger.STATE_NONE:\n            default:\n                return JobState.STATE_NONE;\n        }\n    }","id":52812,"modified_method":"public String getValue()\n    {\n        switch (this.state) {\n            case NORMAL:\n                return JobState.STATE_NORMAL;\n            case BLOCKED:\n                return JobState.STATE_BLOCKED;\n            case COMPLETE:\n                return JobState.STATE_COMPLETE;\n            case ERROR:\n                return JobState.STATE_ERROR;\n            case PAUSED:\n                return JobState.STATE_PAUSED;\n            case NONE:\n            default:\n                return JobState.STATE_NONE;\n        }\n    }","commit_id":"a74983d59e6790749468a7de0946e068fb211c7d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public void setState(int state)\n    {\n        this.state = state;\n    }","id":52813,"modified_method":"@Deprecated\n    public void setState(int state)\n    {\n        this.state = TriggerState.values()[state];\n    }","commit_id":"a74983d59e6790749468a7de0946e068fb211c7d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public int getState()\n    {\n        return this.state;\n    }","id":52814,"modified_method":"public int getState()\n    {\n        return this.state.ordinal();\n    }","commit_id":"a74983d59e6790749468a7de0946e068fb211c7d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Retrieve the job's status of a given {@link com.xpn.xwiki.plugin.scheduler.SchedulerPlugin#XWIKI_JOB_CLASS} job\n     * XObject, by asking the actual job status to the quartz scheduler instance. It's the actual status, as the one\n     * stored in the XObject may be changed manually by users.\n     * \n     * @param object the XObject to give the status of\n     * @return the status of the Job inside the quartz scheduler, as {@link com.xpn.xwiki.plugin.scheduler.JobState}\n     *         instance\n     */\n    public JobState getJobStatus(BaseObject object, XWikiContext context) throws SchedulerException\n    {\n        int state = getScheduler().getTriggerState(getObjectUniqueId(object, context), Scheduler.DEFAULT_GROUP);\n        return new JobState(state);\n    }","id":52815,"modified_method":"/**\n     * Retrieve the job's status of a given {@link com.xpn.xwiki.plugin.scheduler.SchedulerPlugin#XWIKI_JOB_CLASS} job\n     * XObject, by asking the actual job status to the quartz scheduler instance. It's the actual status, as the one\n     * stored in the XObject may be changed manually by users.\n     * \n     * @param object the XObject to give the status of\n     * @return the status of the Job inside the quartz scheduler, as {@link com.xpn.xwiki.plugin.scheduler.JobState}\n     *         instance\n     */\n    public JobState getJobStatus(BaseObject object, XWikiContext context) throws SchedulerException\n    {\n        TriggerState state = getScheduler().getTriggerState(new TriggerKey(getObjectUniqueId(object, context)));\n        return new JobState(state);\n    }","commit_id":"a74983d59e6790749468a7de0946e068fb211c7d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Get Trigger object of the given job\n     * \n     * @param object the unwrapped XObject to be retrieve the trigger for\n     * @param context the XWiki context\n     * @return the trigger object of the given job\n     */\n    private Trigger getTrigger(BaseObject object, XWikiContext context) throws SchedulerPluginException\n    {\n        String job = getObjectUniqueId(object, context);\n        Trigger trigger;\n        try {\n            trigger = getScheduler().getTrigger(job, Scheduler.DEFAULT_GROUP);\n        } catch (SchedulerException e) {\n            throw new SchedulerPluginException(SchedulerPluginException.ERROR_SCHEDULERPLUGIN_JOB_XCLASS_NOT_FOUND,\n                \"Error while getting trigger for job \" + job, e);\n        }\n        if (trigger == null) {\n            throw new SchedulerPluginException(SchedulerPluginException.ERROR_SCHEDULERPLUGIN_JOB_DOES_NOT_EXITS,\n                \"Job does not exists\");\n        }\n\n        return trigger;\n    }","id":52816,"modified_method":"/**\n     * Get Trigger object of the given job\n     * \n     * @param object the unwrapped XObject to be retrieve the trigger for\n     * @param context the XWiki context\n     * @return the trigger object of the given job\n     */\n    private Trigger getTrigger(BaseObject object, XWikiContext context) throws SchedulerPluginException\n    {\n        String job = getObjectUniqueId(object, context);\n        Trigger trigger;\n        try {\n            trigger = getScheduler().getTrigger(new TriggerKey(job));\n        } catch (SchedulerException e) {\n            throw new SchedulerPluginException(SchedulerPluginException.ERROR_SCHEDULERPLUGIN_JOB_XCLASS_NOT_FOUND,\n                \"Error while getting trigger for job \" + job, e);\n        }\n        if (trigger == null) {\n            throw new SchedulerPluginException(SchedulerPluginException.ERROR_SCHEDULERPLUGIN_JOB_DOES_NOT_EXITS,\n                \"Job does not exists\");\n        }\n\n        return trigger;\n    }","commit_id":"a74983d59e6790749468a7de0946e068fb211c7d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Pause the job with the given name by pausing all of its current triggers.\n     * \n     * @param object the non-wrapped XObject Job to be paused\n     */\n    public void pauseJob(BaseObject object, XWikiContext context) throws SchedulerPluginException\n    {\n        try {\n            getScheduler().pauseJob(getObjectUniqueId(object, context), Scheduler.DEFAULT_GROUP);\n            saveStatus(\"Paused\", object, context);\n        } catch (SchedulerException e) {\n            throw new SchedulerPluginException(SchedulerPluginException.ERROR_SCHEDULERPLUGIN_PAUSE_JOB,\n                \"Error occured while trying to pause job \" + object.getStringValue(\"jobName\"), e);\n        } catch (XWikiException e) {\n            throw new SchedulerPluginException(SchedulerPluginException.ERROR_SCHEDULERPLUGIN_PAUSE_JOB,\n                \"Error occured while trying to save status of job \" + object.getStringValue(\"jobName\"), e);\n        }\n    }","id":52817,"modified_method":"/**\n     * Pause the job with the given name by pausing all of its current triggers.\n     * \n     * @param object the non-wrapped XObject Job to be paused\n     */\n    public void pauseJob(BaseObject object, XWikiContext context) throws SchedulerPluginException\n    {\n        String job = getObjectUniqueId(object, context);\n        try {\n            getScheduler().pauseJob(new JobKey(job));\n            saveStatus(\"Paused\", object, context);\n        } catch (SchedulerException e) {\n            throw new SchedulerPluginException(SchedulerPluginException.ERROR_SCHEDULERPLUGIN_PAUSE_JOB,\n                \"Error occured while trying to pause job \" + object.getStringValue(\"jobName\"), e);\n        } catch (XWikiException e) {\n            throw new SchedulerPluginException(SchedulerPluginException.ERROR_SCHEDULERPLUGIN_PAUSE_JOB,\n                \"Error occured while trying to save status of job \" + object.getStringValue(\"jobName\"), e);\n        }\n    }","commit_id":"a74983d59e6790749468a7de0946e068fb211c7d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Associates the scheduler with a StatusListener\n     * \n     * @throws SchedulerPluginException if the status listener failed to be set properly\n     */\n    private void setStatusListener() throws SchedulerPluginException\n    {\n        StatusListener listener = new StatusListener();\n        try {\n            getScheduler().addSchedulerListener(listener);\n            getScheduler().addGlobalJobListener(listener);\n        } catch (SchedulerException e) {\n            throw new SchedulerPluginException(\n                SchedulerPluginException.ERROR_SCHEDULERPLUGIN_INITIALIZE_STATUS_LISTENER,\n                \"Error while initializing the status listener\", e);\n        }\n    }","id":52818,"modified_method":"/**\n     * Associates the scheduler with a StatusListener\n     * \n     * @throws SchedulerPluginException if the status listener failed to be set properly\n     */\n    private void setStatusListener() throws SchedulerPluginException\n    {\n        StatusListener listener = new StatusListener();\n        try {\n            getScheduler().getListenerManager().addSchedulerListener(listener);\n            getScheduler().getListenerManager().addJobListener(listener);\n        } catch (SchedulerException e) {\n            throw new SchedulerPluginException(\n                SchedulerPluginException.ERROR_SCHEDULERPLUGIN_INITIALIZE_STATUS_LISTENER,\n                \"Error while initializing the status listener\", e);\n        }\n    }","commit_id":"a74983d59e6790749468a7de0946e068fb211c7d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Unschedule the given job\n     * \n     * @param object the unwrapped XObject job to be unscheduled\n     */\n    public void unscheduleJob(BaseObject object, XWikiContext context) throws SchedulerPluginException\n    {\n        try {\n            getScheduler().deleteJob(getObjectUniqueId(object, context), Scheduler.DEFAULT_GROUP);\n            saveStatus(\"None\", object, context);\n        } catch (SchedulerException e) {\n            throw new SchedulerPluginException(SchedulerPluginException.ERROR_SCHEDULERPLUGIN_JOB_XCLASS_NOT_FOUND,\n                \"Error while unscheduling job \" + object.getStringValue(\"jobName\"), e);\n        } catch (XWikiException e) {\n            throw new SchedulerPluginException(SchedulerPluginException.ERROR_SCHEDULERPLUGIN_JOB_XCLASS_NOT_FOUND,\n                \"Error while saving status of job \" + object.getStringValue(\"jobName\"), e);\n        }\n    }","id":52819,"modified_method":"/**\n     * Unschedule the given job\n     * \n     * @param object the unwrapped XObject job to be unscheduled\n     */\n    public void unscheduleJob(BaseObject object, XWikiContext context) throws SchedulerPluginException\n    {\n        String job = getObjectUniqueId(object, context);\n        try {\n            getScheduler().deleteJob(new JobKey(job));\n            saveStatus(\"None\", object, context);\n        } catch (SchedulerException e) {\n            throw new SchedulerPluginException(SchedulerPluginException.ERROR_SCHEDULERPLUGIN_JOB_XCLASS_NOT_FOUND,\n                \"Error while unscheduling job \" + object.getStringValue(\"jobName\"), e);\n        } catch (XWikiException e) {\n            throw new SchedulerPluginException(SchedulerPluginException.ERROR_SCHEDULERPLUGIN_JOB_XCLASS_NOT_FOUND,\n                \"Error while saving status of job \" + object.getStringValue(\"jobName\"), e);\n        }\n    }","commit_id":"a74983d59e6790749468a7de0946e068fb211c7d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Resume the job with the given name (un-pause)\n     * \n     * @param object the non-wrapped XObject Job to be resumed\n     */\n    public void resumeJob(BaseObject object, XWikiContext context) throws SchedulerPluginException\n    {\n        try {\n            getScheduler().resumeJob(getObjectUniqueId(object, context), Scheduler.DEFAULT_GROUP);\n            saveStatus(\"Normal\", object, context);\n        } catch (SchedulerException e) {\n            throw new SchedulerPluginException(SchedulerPluginException.ERROR_SCHEDULERPLUGIN_RESUME_JOB,\n                \"Error occured while trying to resume job \" + object.getStringValue(\"jobName\"), e);\n        } catch (XWikiException e) {\n            throw new SchedulerPluginException(SchedulerPluginException.ERROR_SCHEDULERPLUGIN_RESUME_JOB,\n                \"Error occured while trying to save status of job \" + object.getStringValue(\"jobName\"), e);\n        }\n    }","id":52820,"modified_method":"/**\n     * Resume the job with the given name (un-pause)\n     * \n     * @param object the non-wrapped XObject Job to be resumed\n     */\n    public void resumeJob(BaseObject object, XWikiContext context) throws SchedulerPluginException\n    {\n        String job = getObjectUniqueId(object, context);\n        try {\n            getScheduler().resumeJob(new JobKey(job));\n            saveStatus(\"Normal\", object, context);\n        } catch (SchedulerException e) {\n            throw new SchedulerPluginException(SchedulerPluginException.ERROR_SCHEDULERPLUGIN_RESUME_JOB,\n                \"Error occured while trying to resume job \" + object.getStringValue(\"jobName\"), e);\n        } catch (XWikiException e) {\n            throw new SchedulerPluginException(SchedulerPluginException.ERROR_SCHEDULERPLUGIN_RESUME_JOB,\n                \"Error occured while trying to save status of job \" + object.getStringValue(\"jobName\"), e);\n        }\n    }","commit_id":"a74983d59e6790749468a7de0946e068fb211c7d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public boolean scheduleJob(BaseObject object, XWikiContext context) throws SchedulerPluginException\n    {\n        boolean scheduled = true;\n        try {\n            JobDataMap data = new JobDataMap();\n\n            // compute the job unique Id\n            String xjob = getObjectUniqueId(object, context);\n\n            JobDetail job =\n                new JobDetail(xjob, Scheduler.DEFAULT_GROUP, Class.forName(object.getStringValue(\"jobClass\")));\n\n            Trigger trigger =\n                new CronTrigger(xjob, Scheduler.DEFAULT_GROUP, xjob, Scheduler.DEFAULT_GROUP,\n                    object.getStringValue(\"cron\"));\n\n            // Let's prepare an execution context...\n            XWikiContext stubContext = prepareJobStubContext(object, context);\n\n            data.put(\"context\", stubContext);\n            data.put(\"xcontext\", stubContext);\n            data.put(\"xwiki\", new com.xpn.xwiki.api.XWiki(context.getWiki(), stubContext));\n            data.put(\"xjob\", object);\n            data.put(\"services\", Utils.getComponent(ScriptServiceManager.class));\n\n            job.setJobDataMap(data);\n\n            getScheduler().addJob(job, true);\n\n            JobState status = getJobStatus(object, context);\n\n            switch (status.getState()) {\n                case Trigger.STATE_PAUSED:\n                    // a paused job must be resumed, not scheduled\n                    break;\n                case Trigger.STATE_NORMAL:\n                    if (getTrigger(object, context).compareTo(trigger) != 0) {\n                        LOGGER.debug(\"Reschedule Job: [{}]\", object.getStringValue(\"jobName\"));\n                    }\n                    getScheduler().rescheduleJob(trigger.getName(), trigger.getGroup(), trigger);\n                    break;\n                case Trigger.STATE_NONE:\n                    LOGGER.debug(\"Schedule Job: [{}]\", object.getStringValue(\"jobName\"));\n                    getScheduler().scheduleJob(trigger);\n                    LOGGER.info(\"XWiki Job Status: [{}]\", object.getStringValue(\"status\"));\n                    if (object.getStringValue(\"status\").equals(\"Paused\")) {\n                        getScheduler().pauseJob(xjob, Scheduler.DEFAULT_GROUP);\n                        saveStatus(\"Paused\", object, context);\n                    } else {\n                        saveStatus(\"Normal\", object, context);\n                    }\n                    break;\n                default:\n                    LOGGER.debug(\"Schedule Job: [{}]\", object.getStringValue(\"jobName\"));\n                    getScheduler().scheduleJob(trigger);\n                    saveStatus(\"Normal\", object, context);\n                    break;\n            }\n        } catch (SchedulerException e) {\n            throw new SchedulerPluginException(SchedulerPluginException.ERROR_SCHEDULERPLUGIN_SCHEDULE_JOB,\n                \"Error while scheduling job \" + object.getStringValue(\"jobName\"), e);\n        } catch (ParseException e) {\n            throw new SchedulerPluginException(SchedulerPluginException.ERROR_SCHEDULERPLUGIN_BAD_CRON_EXPRESSION,\n                \"Error while parsing cron expression for job \" + object.getStringValue(\"jobName\"), e);\n        } catch (ClassNotFoundException e) {\n            throw new SchedulerPluginException(SchedulerPluginException.ERROR_SCHEDULERPLUGIN_JOB_XCLASS_NOT_FOUND,\n                \"Error while loading job class for job : \" + object.getStringValue(\"jobName\"), e);\n        } catch (XWikiException e) {\n            throw new SchedulerPluginException(SchedulerPluginException.ERROR_SCHEDULERPLUGIN_JOB_XCLASS_NOT_FOUND,\n                \"Error while saving job status for job : \" + object.getStringValue(\"jobName\"), e);\n        }\n        return scheduled;\n    }","id":52821,"modified_method":"public boolean scheduleJob(BaseObject object, XWikiContext context) throws SchedulerPluginException\n    {\n        boolean scheduled = true;\n        try {\n            // compute the job unique Id\n            String xjob = getObjectUniqueId(object, context);\n\n            JobBuilder jobBuilder = JobBuilder.newJob((Class<Job>) Class.forName(object.getStringValue(\"jobClass\")));\n\n            jobBuilder.withIdentity(xjob);\n\n            JobDataMap data = new JobDataMap();\n\n            // Let's prepare an execution context...\n            XWikiContext stubContext = prepareJobStubContext(object, context);\n            data.put(\"context\", stubContext);\n            data.put(\"xcontext\", stubContext);\n            data.put(\"xwiki\", new com.xpn.xwiki.api.XWiki(context.getWiki(), stubContext));\n            data.put(\"xjob\", object);\n            data.put(\"services\", Utils.getComponent(ScriptServiceManager.class));\n\n            jobBuilder.setJobData(data);\n\n            getScheduler().addJob(jobBuilder.build(), true);\n\n            TriggerBuilder<Trigger> triggerBuilder = TriggerBuilder.newTrigger();\n\n            triggerBuilder.withIdentity(xjob);\n            triggerBuilder.forJob(xjob);\n\n            triggerBuilder.withSchedule(CronScheduleBuilder.cronSchedule(object.getStringValue(\"cron\")));\n\n            Trigger trigger = triggerBuilder.build();\n\n            JobState status = getJobStatus(object, context);\n\n            switch (status.getQuartzState()) {\n                case PAUSED:\n                    // a paused job must be resumed, not scheduled\n                    break;\n                case NORMAL:\n                    if (getTrigger(object, context).compareTo(trigger) != 0) {\n                        LOGGER.debug(\"Reschedule Job: [{}]\", object.getStringValue(\"jobName\"));\n                    }\n                    getScheduler().rescheduleJob(trigger.getKey(), trigger);\n                    break;\n                case NONE:\n                    LOGGER.debug(\"Schedule Job: [{}]\", object.getStringValue(\"jobName\"));\n                    getScheduler().scheduleJob(trigger);\n                    LOGGER.info(\"XWiki Job Status: [{}]\", object.getStringValue(\"status\"));\n                    if (object.getStringValue(\"status\").equals(\"Paused\")) {\n                        getScheduler().pauseJob(new JobKey(xjob));\n                        saveStatus(\"Paused\", object, context);\n                    } else {\n                        saveStatus(\"Normal\", object, context);\n                    }\n                    break;\n                default:\n                    LOGGER.debug(\"Schedule Job: [{}]\", object.getStringValue(\"jobName\"));\n                    getScheduler().scheduleJob(trigger);\n                    saveStatus(\"Normal\", object, context);\n                    break;\n            }\n        } catch (SchedulerException e) {\n            throw new SchedulerPluginException(SchedulerPluginException.ERROR_SCHEDULERPLUGIN_SCHEDULE_JOB,\n                \"Error while scheduling job \" + object.getStringValue(\"jobName\"), e);\n        } catch (ClassNotFoundException e) {\n            throw new SchedulerPluginException(SchedulerPluginException.ERROR_SCHEDULERPLUGIN_JOB_XCLASS_NOT_FOUND,\n                \"Error while loading job class for job : \" + object.getStringValue(\"jobName\"), e);\n        } catch (XWikiException e) {\n            throw new SchedulerPluginException(SchedulerPluginException.ERROR_SCHEDULERPLUGIN_JOB_XCLASS_NOT_FOUND,\n                \"Error while saving job status for job : \" + object.getStringValue(\"jobName\"), e);\n        }\n\n        return scheduled;\n    }","commit_id":"a74983d59e6790749468a7de0946e068fb211c7d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Trigger a job (execute it now)\n     * \n     * @param object the non-wrapped XObject Job to be triggered\n     * @param context the XWiki context\n     */\n    public void triggerJob(BaseObject object, XWikiContext context) throws SchedulerPluginException\n    {\n        try {\n            getScheduler().triggerJob(getObjectUniqueId(object, context), Scheduler.DEFAULT_GROUP);\n        } catch (SchedulerException e) {\n            throw new SchedulerPluginException(SchedulerPluginException.ERROR_SCHEDULERPLUGIN_TRIGGER_JOB,\n                \"Error occured while trying to trigger job \" + object.getStringValue(\"jobName\"), e);\n        }\n    }","id":52822,"modified_method":"/**\n     * Trigger a job (execute it now)\n     * \n     * @param object the non-wrapped XObject Job to be triggered\n     * @param context the XWiki context\n     */\n    public void triggerJob(BaseObject object, XWikiContext context) throws SchedulerPluginException\n    {\n        String job = getObjectUniqueId(object, context);\n        try {\n            getScheduler().triggerJob(new JobKey(job));\n        } catch (SchedulerException e) {\n            throw new SchedulerPluginException(SchedulerPluginException.ERROR_SCHEDULERPLUGIN_TRIGGER_JOB,\n                \"Error occured while trying to trigger job \" + object.getStringValue(\"jobName\"), e);\n        }\n    }","commit_id":"a74983d59e6790749468a7de0946e068fb211c7d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"AnalysisDataManager( final int numCovariates ) {\n        dataCollapsedReadGroup = new NHashMap<RecalDatum>();\n        dataCollapsedByCovariate = new ArrayList<NHashMap<RecalDatum>>();\n        for( int iii = 0; iii < numCovariates - 1; iii++ ) { // readGroup isn't counted here, its table is separate\n            dataCollapsedByCovariate.add( new NHashMap<RecalDatum>() );\n        }\n    }","id":52823,"modified_method":"AnalysisDataManager( final int numCovariates ) {\n        dataCollapsedReadGroup = new NestedHashMap();\n        dataCollapsedByCovariate = new ArrayList<NestedHashMap>();\n        for( int iii = 0; iii < numCovariates - 1; iii++ ) { // readGroup isn't counted here, its table is separate\n            dataCollapsedByCovariate.add( new NestedHashMap() );\n        }\n    }","commit_id":"80658fd99e31c1561fdf04ff1f18b8bc25babe85","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * Add the given mapping to all of the collapsed hash tables\n     * @param key The list of comparables that is the key for this mapping\n     * @param fullDatum The RecalDatum which is the data for this mapping\n     * @param IGNORE_QSCORES_LESS_THAN The threshold in report quality for adding to the aggregate collapsed table\n     */\n    public final void addToAllTables( final List<? extends Comparable> key, final RecalDatum fullDatum, final int IGNORE_QSCORES_LESS_THAN ) {\n\n        int qscore = Integer.parseInt( key.get(1).toString() );\n        ArrayList<Comparable> newKey;\n        RecalDatum collapsedDatum;\n\n        if( !(qscore < IGNORE_QSCORES_LESS_THAN) ) {\n            // Create dataCollapsedReadGroup, the table where everything except read group has been collapsed\n            newKey = new ArrayList<Comparable>();\n            newKey.add( key.get(0) ); // Make a new key with just the read group\n            collapsedDatum = dataCollapsedReadGroup.get( newKey );\n            if( collapsedDatum == null ) {\n                dataCollapsedReadGroup.put( newKey, new RecalDatum(fullDatum) );\n            } else {\n                collapsedDatum.combine( fullDatum ); // using combine instead of increment in order to calculate overall aggregateQReported\n            }\n        }\n\n        // Create dataCollapsedByCovariate's, the tables where everything except read group, quality score, and given covariate has been collapsed\n        for( int iii = 0; iii < dataCollapsedByCovariate.size(); iii++ ) {\n            if( iii == 0 || !(qscore < IGNORE_QSCORES_LESS_THAN) ) { // use all data for the plot versus reported quality, but not for the other plots versus cycle and etc.\n                newKey = new ArrayList<Comparable>();\n                newKey.add( key.get(0) ); // Make a new key with the read group ...\n                Comparable theCovariateElement = key.get(iii + 1); //           and the given covariate\n                if( theCovariateElement != null ) {\n                    newKey.add( theCovariateElement );\n                    collapsedDatum = dataCollapsedByCovariate.get(iii).get( newKey );\n                    if( collapsedDatum == null ) {\n                        dataCollapsedByCovariate.get(iii).put( newKey, new RecalDatum(fullDatum) );\n                    } else {\n                        collapsedDatum.combine( fullDatum );\n                    }\n                }\n            }\n        }\n    }","id":52824,"modified_method":"/**\n     * Add the given mapping to all of the collapsed hash tables\n     * @param key The list of comparables that is the key for this mapping\n     * @param fullDatum The RecalDatum which is the data for this mapping\n     * @param IGNORE_QSCORES_LESS_THAN The threshold in report quality for adding to the aggregate collapsed table\n     */\n    public final void addToAllTables( final Object[] key, final RecalDatum fullDatum, final int IGNORE_QSCORES_LESS_THAN ) {\n\n        int qscore = Integer.parseInt( key[1].toString() );\n        RecalDatum collapsedDatum;\n        final Object[] readGroupCollapsedKey = new Object[1];\n        final Object[] covariateCollapsedKey = new Object[2];\n\n        if( !(qscore < IGNORE_QSCORES_LESS_THAN) ) {\n            // Create dataCollapsedReadGroup, the table where everything except read group has been collapsed\n            readGroupCollapsedKey[0] = key[0]; // Make a new key with just the read group\n            collapsedDatum = (RecalDatum)dataCollapsedReadGroup.get( readGroupCollapsedKey );\n            if( collapsedDatum == null ) {\n                dataCollapsedReadGroup.put( new RecalDatum(fullDatum), readGroupCollapsedKey );\n            } else {\n                collapsedDatum.combine( fullDatum ); // using combine instead of increment in order to calculate overall aggregateQReported\n            }\n        }\n\n        // Create dataCollapsedByCovariate's, the tables where everything except read group and given covariate has been collapsed\n        for( int iii = 0; iii < dataCollapsedByCovariate.size(); iii++ ) {\n            if( iii == 0 || !(qscore < IGNORE_QSCORES_LESS_THAN) ) { // use all data for the plot versus reported quality, but not for the other plots versus cycle and etc.\n                covariateCollapsedKey[0] = key[0]; // Make a new key with the read group ...\n                Object theCovariateElement = key[iii + 1]; //           and the given covariate\n                if( theCovariateElement != null ) {\n                    covariateCollapsedKey[1] = theCovariateElement;\n                    collapsedDatum = (RecalDatum)dataCollapsedByCovariate.get(iii).get( covariateCollapsedKey );\n                    if( collapsedDatum == null ) {\n                        dataCollapsedByCovariate.get(iii).put( new RecalDatum(fullDatum), covariateCollapsedKey );\n                    } else {\n                        collapsedDatum.combine( fullDatum );\n                    }\n                }\n            }\n        }\n    }","commit_id":"80658fd99e31c1561fdf04ff1f18b8bc25babe85","url":"https://github.com/broadgsa/gatk"},{"original_method":"private void callRScripts() {\n\n        int numReadGroups = 0;\n        \n        // for each read group\n        for( List<? extends Comparable> readGroupList : dataManager.getCollapsedTable(0).keySet() ) {\n\n            if(NUM_READ_GROUPS_TO_PROCESS == -1 || ++numReadGroups <= NUM_READ_GROUPS_TO_PROCESS) {\n\n                String readGroup = readGroupList.get(0).toString();\n                System.out.println(\"Analyzing read group: \" + readGroup);\n\n                // for each covariate\n                for( int iii = 1; iii < requestedCovariates.size(); iii++ ) {\n                    Covariate cov = requestedCovariates.get(iii);\n                    try {\n                        if( iii == 1 ) {\n                            // Analyze reported quality\n                            Process p = Runtime.getRuntime().exec(PATH_TO_RSCRIPT + \" \" + PATH_TO_RESOURCES + \"plot_residualError_QualityScoreCovariate.R\" + \" \" +\n                                        OUTPUT_DIR + readGroup + \".\" + cov.getClass().getSimpleName()+ \".dat\" + \" \" +\n                                        IGNORE_QSCORES_LESS_THAN); // The third argument is the Q scores that should be turned pink in the plot because they were ignored\n                        } else { // Analyze all other covariates\n                            Process p = Runtime.getRuntime().exec(PATH_TO_RSCRIPT + \" \" + PATH_TO_RESOURCES + \"plot_residualError_OtherCovariate.R\" + \" \" +\n                                        OUTPUT_DIR + readGroup + \".\" + cov.getClass().getSimpleName()+ \".dat\" + \" \" +\n                                        cov.getClass().getSimpleName().split(\"Covariate\")[0]); // The third argument is the name of the covariate in order to make the plots look nice\n                        }\n                    } catch (IOException e) {\n                        e.printStackTrace();\n                        System.exit(-1);\n                    }\n                }\n            } else {\n                break;\n            }\n        }\n    }","id":52825,"modified_method":"private void callRScripts() {\n\n        int numReadGroups = 0;\n        \n        // for each read group\n        for( Object readGroupKey : dataManager.getCollapsedTable(0).data.keySet() ) {\n\n            if(NUM_READ_GROUPS_TO_PROCESS == -1 || ++numReadGroups <= NUM_READ_GROUPS_TO_PROCESS) {\n\n                String readGroup = readGroupKey.toString();\n                System.out.println(\"Analyzing read group: \" + readGroup);\n\n                // for each covariate\n                for( int iii = 1; iii < requestedCovariates.size(); iii++ ) {\n                    Covariate cov = requestedCovariates.get(iii);\n                    try {\n                        if( iii == 1 ) {\n                            // Analyze reported quality\n                            Process p = Runtime.getRuntime().exec(PATH_TO_RSCRIPT + \" \" + PATH_TO_RESOURCES + \"plot_residualError_QualityScoreCovariate.R\" + \" \" +\n                                        OUTPUT_DIR + readGroup + \".\" + cov.getClass().getSimpleName()+ \".dat\" + \" \" +\n                                        IGNORE_QSCORES_LESS_THAN); // The third argument is the Q scores that should be turned pink in the plot because they were ignored\n                        } else { // Analyze all other covariates\n                            Process p = Runtime.getRuntime().exec(PATH_TO_RSCRIPT + \" \" + PATH_TO_RESOURCES + \"plot_residualError_OtherCovariate.R\" + \" \" +\n                                        OUTPUT_DIR + readGroup + \".\" + cov.getClass().getSimpleName()+ \".dat\" + \" \" +\n                                        cov.getClass().getSimpleName().split(\"Covariate\")[0]); // The third argument is the name of the covariate in order to make the plots look nice\n                        }\n                    } catch (IOException e) {\n                        e.printStackTrace();\n                        System.exit(-1);\n                    }\n                }\n            } else {\n                break;\n            }\n        }\n    }","commit_id":"80658fd99e31c1561fdf04ff1f18b8bc25babe85","url":"https://github.com/broadgsa/gatk"},{"original_method":"private void addCSVData(String line) {\n        String[] vals = line.split(\",\");\n\n        // Check if the data line is malformed, for example if the read group string contains a comma then it won't be parsed correctly\n        if( vals.length != requestedCovariates.size() + 3 ) { // +3 because of nObservations, nMismatch, and Qempirical\n            throw new RuntimeException(\"Malformed input recalibration file. Found data line with too many fields: \" + line +\n                    \" --Perhaps the read group string contains a comma and isn't being parsed correctly.\");\n        }\n\n        ArrayList<Comparable> key = new ArrayList<Comparable>();\n        Covariate cov;\n        int iii;\n        for( iii = 0; iii < requestedCovariates.size(); iii++ ) {\n            cov = requestedCovariates.get( iii );\n            key.add( cov.getValue( vals[iii] ) );\n        }\n        // Create a new datum using the number of observations, number of mismatches, and reported quality score\n        RecalDatum datum = new RecalDatum( Long.parseLong( vals[iii] ), Long.parseLong( vals[iii + 1] ), Double.parseDouble( vals[1] ), 0.0 );\n        // Add that datum to all the collapsed tables which will be used in the sequential calculation\n        dataManager.addToAllTables( key, datum, IGNORE_QSCORES_LESS_THAN );\n\n    }","id":52826,"modified_method":"private void addCSVData(String line) {\n        String[] vals = line.split(\",\");\n\n        // Check if the data line is malformed, for example if the read group string contains a comma then it won't be parsed correctly\n        if( vals.length != requestedCovariates.size() + 3 ) { // +3 because of nObservations, nMismatch, and Qempirical\n            throw new RuntimeException(\"Malformed input recalibration file. Found data line with too many fields: \" + line +\n                    \" --Perhaps the read group string contains a comma and isn't being parsed correctly.\");\n        }\n\n        Object[] key = new Object[requestedCovariates.size()];\n        Covariate cov;\n        int iii;\n        for( iii = 0; iii < requestedCovariates.size(); iii++ ) {\n            cov = requestedCovariates.get( iii );\n            key[iii] = cov.getValue( vals[iii] );\n        }\n        // Create a new datum using the number of observations, number of mismatches, and reported quality score\n        RecalDatum datum = new RecalDatum( Long.parseLong( vals[iii] ), Long.parseLong( vals[iii + 1] ), Double.parseDouble( vals[1] ), 0.0 );\n        // Add that datum to all the collapsed tables which will be used in the sequential calculation\n        dataManager.addToAllTables( key, datum, IGNORE_QSCORES_LESS_THAN );\n\n    }","commit_id":"80658fd99e31c1561fdf04ff1f18b8bc25babe85","url":"https://github.com/broadgsa/gatk"},{"original_method":"private void writeDataTables() {\n\n        int numReadGroups = 0;\n\n        // for each read group\n        NHashMap<RecalDatum> readGroupTable = dataManager.getCollapsedTable(0);\n        for( List<? extends Comparable> readGroupKey : readGroupTable.keySet() ) {\n\n            if(NUM_READ_GROUPS_TO_PROCESS == -1 || ++numReadGroups <= NUM_READ_GROUPS_TO_PROCESS) {\n                String readGroup = readGroupKey.get(0).toString();\n                RecalDatum readGroupDatum = readGroupTable.get(readGroupKey);\n                System.out.print(\"Writing out data tables for read group: \" + readGroup + \"\\twith \" + readGroupDatum.getNumObservations() + \" observations\"  );\n                System.out.println(\"\\tand aggregate residual error = \" + String.format(\"%.3f\", readGroupDatum.empiricalQualDouble(0) - readGroupDatum.getEstimatedQReported()));\n\n                // for each covariate\n                for( int iii = 1; iii < requestedCovariates.size(); iii++ ) {\n                    Covariate cov = requestedCovariates.get(iii);\n\n                    // Create a PrintStream\n                    PrintStream output = null;\n                    try {\n                        output = new PrintStream(new FileOutputStream(OUTPUT_DIR + readGroup + \".\" + cov.getClass().getSimpleName()+ \".dat\"));\n\n                    } catch (FileNotFoundException e) {\n                        System.err.println(\"Can't create file: \" + OUTPUT_DIR + readGroup + \".\" + cov.getClass().getSimpleName()+ \".dat\");\n                        System.exit(-1);\n                    }\n\n                    // Output the header\n                    output.println(\"Covariate\\tQreported\\tQempirical\\tnMismatches\\tnBases\");\n\n                    // Loop through the covariate table looking for keys with matching read groups\n                    // BUGBUG: hopefully rewrite this to be more efficient\n                    for( List<? extends Comparable> covariateKey : dataManager.getCollapsedTable(iii).keySet() ) {\n                        if( covariateKey.get(0).toString().equals(readGroup) ) {\n                            output.print( covariateKey.get(1).toString() + \"\\t\" );                              // Covariate\n                            RecalDatum thisDatum = dataManager.getCollapsedTable(iii).get(covariateKey);\n                            output.print( String.format(\"%.3f\", thisDatum.getEstimatedQReported()) + \"\\t\" );    // Qreported\n                            output.print( String.format(\"%.3f\", thisDatum.empiricalQualDouble(0)) + \"\\t\" );     // Qempirical\n                            output.print( thisDatum.getNumMismatches() + \"\\t\" );                                // nMismatches\n                            output.println( thisDatum.getNumObservations() );                                   // nBases\n                        }\n                    }\n\n                    // Close the PrintStream\n                    output.close();\n                }\n            } else {\n                break;\n            }\n\n        }\n    }","id":52827,"modified_method":"private void writeDataTables() {\n\n        int numReadGroups = 0;\n\n        // for each read group\n        for( Object readGroupKey : dataManager.getCollapsedTable(0).data.keySet() ) {\n\n            if(NUM_READ_GROUPS_TO_PROCESS == -1 || ++numReadGroups <= NUM_READ_GROUPS_TO_PROCESS) {\n                String readGroup = readGroupKey.toString();\n                RecalDatum readGroupDatum = (RecalDatum) dataManager.getCollapsedTable(0).data.get(readGroupKey);\n                System.out.print(\"Writing out data tables for read group: \" + readGroup + \"\\twith \" + readGroupDatum.getNumObservations() + \" observations\"  );\n                System.out.println(\"\\tand aggregate residual error = \" + String.format(\"%.3f\", readGroupDatum.empiricalQualDouble(0) - readGroupDatum.getEstimatedQReported()));\n\n                // for each covariate\n                for( int iii = 1; iii < requestedCovariates.size(); iii++ ) {\n                    Covariate cov = requestedCovariates.get(iii);\n\n                    // Create a PrintStream\n                    PrintStream output = null;\n                    try {\n                        output = new PrintStream(new FileOutputStream(OUTPUT_DIR + readGroup + \".\" + cov.getClass().getSimpleName()+ \".dat\"));\n\n                    } catch (FileNotFoundException e) {\n                        System.err.println(\"Can't create file: \" + OUTPUT_DIR + readGroup + \".\" + cov.getClass().getSimpleName()+ \".dat\");\n                        System.exit(-1);\n                    }\n\n                    // Output the header\n                    output.println(\"Covariate\\tQreported\\tQempirical\\tnMismatches\\tnBases\");\n\n                    for( Object covariateKey : ((Map)dataManager.getCollapsedTable(iii).data.get(readGroupKey)).keySet()) {\n                        output.print( covariateKey.toString() + \"\\t\" );                              // Covariate\n                        RecalDatum thisDatum = (RecalDatum)((Map)dataManager.getCollapsedTable(iii).data.get(readGroupKey)).get(covariateKey);\n                        output.print( String.format(\"%.3f\", thisDatum.getEstimatedQReported()) + \"\\t\" );    // Qreported\n                        output.print( String.format(\"%.3f\", thisDatum.empiricalQualDouble(0)) + \"\\t\" );     // Qempirical\n                        output.print( thisDatum.getNumMismatches() + \"\\t\" );                                // nMismatches\n                        output.println( thisDatum.getNumObservations() );                                   // nBases\n                    }\n\n                    // Close the PrintStream\n                    output.close();\n                }\n            } else {\n                break;\n            }\n\n        }\n    }","commit_id":"80658fd99e31c1561fdf04ff1f18b8bc25babe85","url":"https://github.com/broadgsa/gatk"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(SA_AddPortletMemberTest.class);\n\t\ttestSuite.addTestSuite(SA_AddPortletRoleTest.class);\n\t\ttestSuite.addTestSuite(SA_AssignUserRolesTest.class);\n\t\ttestSuite.addTestSuite(SA_AddPageTest.class);\n\t\ttestSuite.addTestSuite(SA_AddPortletTest.class);\n\t\ttestSuite.addTestSuite(SA_RemoveViewPortletPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(LoginUsersTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AssertCannotViewPortletTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_AllowViewPortletPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AssertViewPortletTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_RemoveConfigurePortletPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AssertCannotConfigurePortletTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_AllowConfigurePortletPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AssertConfigurePortletTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_RemoveConfigurePortletPermissionsTest.class);\n\t\ttestSuite.addTestSuite(SA_RemoveAddEntryPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AssertCannotAddEntryTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_AllowAddEntryPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AddEntryTest.class);\n\t\ttestSuite.addTestSuite(Portlet_DeleteOwnEntryTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_RemoveAddEntryPermissionsTest.class);\n\t\ttestSuite.addTestSuite(SA_AddTemporaryEntryTest.class);\n\t\ttestSuite.addTestSuite(SA_RemoveViewEntryPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AssertCannotViewEntryTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_AllowViewEntryPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AssertViewEntryTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_RemoveAddCommentPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AssertCannotAddCommentTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_AllowAddCommentPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AddCommentTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_RemoveAddCommentPermissionsTest.class);\n\t\ttestSuite.addTestSuite(SA_RemoveEditCommentPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AssertCannotEditCommentTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_AllowEditCommentPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_EditCommentTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_RemoveEditCommentPermissionsTest.class);\n\t\ttestSuite.addTestSuite(SA_RemoveDeleteCommentPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AssertCannotDeleteCommentTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_AllowDeleteCommentPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_DeleteCommentTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_RemoveDeleteCommentPermissionsTest.class);\n\t\ttestSuite.addTestSuite(SA_RemovePermissionsEntryPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AssertCannotEditEntryPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_AllowPermissionsEntryPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AssertEditEntryPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_RemovePermissionsEntryPermissionsTest.class);\n\t\ttestSuite.addTestSuite(SA_RemoveEditEntryPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AssertCannotEditEntryTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_AllowEditEntryPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_EditEntryTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_RemoveEditEntryPermissionsTest.class);\n\t\ttestSuite.addTestSuite(SA_RemoveDeleteEntryPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AssertCannotDeleteEntryTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_AllowDeleteEntryPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_DeleteEntryTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(TearDownUserTest.class);\n\t\ttestSuite.addTestSuite(TearDownBlogsEntryTest.class);\n\t\ttestSuite.addTestSuite(TearDownBlogsRolesTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","id":52828,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(SA_AddPortletMemberTest.class);\n\t\ttestSuite.addTestSuite(SA_AddPortletRoleTest.class);\n\t\ttestSuite.addTestSuite(SA_AssignUserRolesTest.class);\n\t\ttestSuite.addTestSuite(SA_AddPageTest.class);\n\t\ttestSuite.addTestSuite(SA_AddPortletTest.class);\n\t\ttestSuite.addTestSuite(SA_RemoveViewPortletPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(LoginUsersTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AssertCannotViewPortletTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_AllowViewPortletPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AssertViewPortletTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_RegInlineBlogsConfigurationNotCheckedTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AssertCannotConfigurePortletTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_AllowConfigurePortletPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AssertConfigurePortletTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_RemoveConfigurePortletPermissionsTest.class);\n\t\ttestSuite.addTestSuite(SA_RegInlineBlogsAddEntryNotCheckedTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AssertCannotAddEntryTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_AllowAddEntryPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AddEntryTest.class);\n\t\ttestSuite.addTestSuite(Portlet_DeleteOwnEntryTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_RemoveAddEntryPermissionsTest.class);\n\t\ttestSuite.addTestSuite(SA_AddTemporaryEntryTest.class);\n\t\ttestSuite.addTestSuite(SA_RemoveViewEntryPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AssertCannotViewEntryTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_AllowViewEntryPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AssertViewEntryTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_RemoveAddCommentPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AssertCannotAddCommentTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_AllowAddCommentPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AddCommentTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_RemoveAddCommentPermissionsTest.class);\n\t\ttestSuite.addTestSuite(SA_RegInlineBlogsEditCommentNotCheckedTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AssertCannotEditCommentTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_AllowEditCommentPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_EditCommentTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_RemoveEditCommentPermissionsTest.class);\n\t\ttestSuite.addTestSuite(SA_RegInlineBlogsDeleteCommentNotCheckedTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AssertCannotDeleteCommentTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_AllowDeleteCommentPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_DeleteCommentTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_RemoveDeleteCommentPermissionsTest.class);\n\t\ttestSuite.addTestSuite(SA_RegInlineBlogsEntryPermissionsNotCheckedTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AssertCannotEditEntryPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_AllowPermissionsEntryPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AssertEditEntryPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_RemovePermissionsEntryPermissionsTest.class);\n\t\ttestSuite.addTestSuite(SA_RegInlineBlogsEditEntryNotCheckedTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AssertCannotEditEntryTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_AllowEditEntryPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_EditEntryTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_RemoveEditEntryPermissionsTest.class);\n\t\ttestSuite.addTestSuite(SA_RegInlineBlogsDeleteEntryNotCheckedTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_AssertCannotDeleteEntryTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_AllowDeleteEntryPermissionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Portlet_LoginTest.class);\n\t\ttestSuite.addTestSuite(Portlet_DeleteEntryTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(TearDownUserTest.class);\n\t\ttestSuite.addTestSuite(TearDownBlogsEntryTest.class);\n\t\ttestSuite.addTestSuite(TearDownBlogsRolesTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testPortlet_AddComment() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Be the first.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Be the first.\",\n\t\t\tRuntimeVariables.replace(\"Be the first.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//textarea[@name='_33_postReplyBody0']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Reply']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//textarea[@name='_33_postReplyBody0']\",\n\t\t\tRuntimeVariables.replace(\"Portlet Comment\"));\n\t\tselenium.clickAt(\"//input[@value='Reply']\",\n\t\t\tRuntimeVariables.replace(\"Reply\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-message-response portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-message-response portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Portlet Comment\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-discussion-message']\"));\n\t}","id":52829,"modified_method":"public void testPortlet_AddComment() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Blogs Permissions Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean blogCommentsExpanded = selenium.isVisible(\n\t\t\t\t\t\t\"//input[@class='form-text lfr-input-resource ']\");\n\n\t\t\t\tif (blogCommentsExpanded) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-panel-title']/span[contains(text(),'Comments')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Be the first.\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Be the first.\",\n\t\t\t\t\tRuntimeVariables.replace(\"Be the first.\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//textarea[@name='_33_postReplyBody0']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@value='Reply']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"//textarea[@name='_33_postReplyBody0']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Portlet Comment\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Reply']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Reply\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-message-response portlet-msg-success']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request processed successfully.\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-message-response portlet-msg-success']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Portlet Comment\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='lfr-discussion-message']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testPortlet_AddEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Blog Entry']\",\n\t\t\tRuntimeVariables.replace(\"Add Blog Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_33_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//textarea[@id='_33_editor' and @style='display: none;']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//a[@class='cke_button_source cke_on']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__33_editor']/textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//td[@id='cke_contents__33_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//textarea[@id='_33_editor' and @style='display: none;']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__33_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__33_editor']/iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Blogs Entry Content\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\"//body\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//div[@class='entry-title']/h2/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","id":52830,"modified_method":"public void testPortlet_AddEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Blog Entry']\",\n\t\t\tRuntimeVariables.replace(\"Add Blog Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_33_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//textarea[@id='_33_editor' and @style='display: none;']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//a[@class='cke_button_source cke_on']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__33_editor']/textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//td[@id='cke_contents__33_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//textarea[@id='_33_editor' and @style='display: none;']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__33_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__33_editor']/iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Blogs Entry Content\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\"//body\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//div[@class='entry-title']/h2/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testPortlet_AssertCannotAddComment() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Comments\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='lfr-panel-title']/span\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-panel-title']/span\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Be the first.\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Add Comment\"));\n\t}","id":52831,"modified_method":"public void testPortlet_AssertCannotAddComment() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Blogs Permissions Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Comments\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-panel-title']/span\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='lfr-panel-title']/span\"));\n\n\t\t\t\tboolean blogCommentsExpanded = selenium.isVisible(\n\t\t\t\t\t\t\"//input[@class='form-text lfr-input-resource ']\");\n\n\t\t\t\tif (blogCommentsExpanded) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-panel-title']/span[contains(text(),'Comments')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertFalse(selenium.isElementPresent(\"link=Add Comment\"));\n\t\t\t\tassertFalse(selenium.isElementPresent(\"link=Be the first.\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testPortlet_AssertCannotConfigurePortlet()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertFalse(selenium.isElementPresent(\"link=Configuration\"));\n\t}","id":52832,"modified_method":"public void testPortlet_AssertCannotConfigurePortlet()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tassertFalse(selenium.isTextPresent(\"Options\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Configuration\"));\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testPortlet_AssertCannotEditComment() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Comments\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='lfr-panel-title']/span\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-panel-title']/span\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Edit\"));\n\t}","id":52833,"modified_method":"public void testPortlet_AssertCannotEditComment() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Comments\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='lfr-panel-title']/span\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-panel-title']/span\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//li[@class='lfr-discussion-delete-reply']/span/a\"));\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testPortlet_AssertCannotViewEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Title Temporary\"));\n\t\tassertFalse(selenium.isElementPresent(\"//input[@value='Search']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Showing 0 results.\"),\n\t\t\tselenium.getText(\"//div[@class='search-results']\"));\n\t}","id":52834,"modified_method":"public void testPortlet_AssertCannotViewEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Title Temporary\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//div[@class='entry-title']/h2/a\"));\n\t\tassertFalse(selenium.isElementPresent(\"//input[@value='Search']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Showing 0 results.\"),\n\t\t\tselenium.getText(\"//div[@class='search-results']\"));\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testPortlet_AssertConfigurePortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t}","id":52835,"modified_method":"public void testPortlet_AssertConfigurePortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(@id,'configuration')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(@id,'configuration')]\"));\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testPortlet_AssertEditEntryPermissions()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertTrue(selenium.isVisible(\"link=Permissions\"));\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertTrue(selenium.isVisible(\"//div[@id='rolesSearchContainer']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":52836,"modified_method":"public void testPortlet_AssertEditEntryPermissions()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertTrue(selenium.isVisible(\"link=Permissions\"));\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertTrue(selenium.isVisible(\"//div[@id='_86_rolesSearchContainer']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testPortlet_AssertViewPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"You do not have the roles required to access this portlet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Showing 0 results.\"),\n\t\t\tselenium.getText(\"//div[@class='search-results']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RSS\"),\n\t\t\tselenium.getText(\"//span/a/span[1]\"));\n\t}","id":52837,"modified_method":"public void testPortlet_AssertViewPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"You do not have the roles required to access this portlet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RSS\"),\n\t\t\tselenium.getText(\"//span/a/span[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Showing 0 results.\"),\n\t\t\tselenium.getText(\"//div[@class='search-results']\"));\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_AddPage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t}","id":52838,"modified_method":"public void testSA_AddPage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Page\"),\n\t\t\tselenium.getText(\"//a[@id='addPage']\"));\n\t\tselenium.clickAt(\"//a[@id='addPage']\", RuntimeVariables.replace(\"Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_AddPortletMember() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.select(\"//select[@id='_125_prefixId']\",\n\t\t\tRuntimeVariables.replace(\"label=Mrs.\"));\n\t\tselenium.type(\"//input[@id='_125_screenName']\",\n\t\t\tRuntimeVariables.replace(\"Portlet\"));\n\t\tselenium.type(\"//input[@id='_125_emailAddress']\",\n\t\t\tRuntimeVariables.replace(\"Portlet@liferay.com\"));\n\t\tselenium.type(\"//input[@id='_125_firstName']\",\n\t\t\tRuntimeVariables.replace(\"Portlet\"));\n\t\tselenium.type(\"//input[@id='_125_lastName']\",\n\t\t\tRuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.select(\"//select[@id='_125_suffixId']\",\n\t\t\tRuntimeVariables.replace(\"label=Jr.\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=August\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayDay']\",\n\t\t\tRuntimeVariables.replace(\"label=5\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayYear']\",\n\t\t\tRuntimeVariables.replace(\"label=1991\"));\n\t\tselenium.select(\"//select[@id='_125_male']\",\n\t\t\tRuntimeVariables.replace(\"label=Female\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_125_passwordLink']\",\n\t\t\t\t\"Password\"));\n\t\tselenium.clickAt(\"//a[@id='_125_passwordLink']\",\n\t\t\tRuntimeVariables.replace(\"Password\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_125_password1']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input[@id='_125_password1']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.type(\"//input[@id='_125_password2']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":52839,"modified_method":"public void testSA_AddPortletMember() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(@id,'user')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(@id,'user')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(@id,'user')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.select(\"//select[@id='_125_prefixId']\",\n\t\t\tRuntimeVariables.replace(\"label=Mrs.\"));\n\t\tselenium.type(\"//input[@id='_125_screenName']\",\n\t\t\tRuntimeVariables.replace(\"Portlet\"));\n\t\tselenium.type(\"//input[@id='_125_emailAddress']\",\n\t\t\tRuntimeVariables.replace(\"Portlet@liferay.com\"));\n\t\tselenium.type(\"//input[@id='_125_firstName']\",\n\t\t\tRuntimeVariables.replace(\"Portlet\"));\n\t\tselenium.type(\"//input[@id='_125_lastName']\",\n\t\t\tRuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.select(\"//select[@id='_125_suffixId']\",\n\t\t\tRuntimeVariables.replace(\"label=Jr.\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=August\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayDay']\",\n\t\t\tRuntimeVariables.replace(\"label=5\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayYear']\",\n\t\t\tRuntimeVariables.replace(\"label=1991\"));\n\t\tselenium.select(\"//select[@id='_125_male']\",\n\t\t\tRuntimeVariables.replace(\"label=Female\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_125_passwordLink']\",\n\t\t\t\t\"Password\"));\n\t\tselenium.clickAt(\"//a[@id='_125_passwordLink']\",\n\t\t\tRuntimeVariables.replace(\"Password\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_125_password1']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input[@id='_125_password1']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.type(\"//input[@id='_125_password2']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_AddPortletRole() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Regular Role\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_128_name']\",\n\t\t\tRuntimeVariables.replace(\"Portlet\"));\n\t\tselenium.type(\"//textarea[@id='_128_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"This is the Portlet Role.\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":52840,"modified_method":"public void testSA_AddPortletRole() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(@id,'regular-role')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Regular Role\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(@id,'regular-role')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(@id,'regular-role')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_128_name']\",\n\t\t\tRuntimeVariables.replace(\"Portlet\"));\n\t\tselenium.type(\"//textarea[@id='_128_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"This is the Portlet Role.\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_AddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@title='Blogs']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Blogs']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isElementPresent(\"//section\"));\n\t}","id":52841,"modified_method":"public void testSA_AddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//a[@id='_145_addApplication']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//input[@id='layout_configuration_content']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"b\"));\n\t\tselenium.keyDown(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"\\\\13\"));\n\t\tselenium.keyUp(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"\\\\13\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Blogs']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Blogs']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_AddTemporaryEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Blog Entry']\",\n\t\t\tRuntimeVariables.replace(\"Add Blog Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_33_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//textarea[@id='_33_editor' and @style='display: none;']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//a[@class='cke_button_source cke_on']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__33_editor']/textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//td[@id='cke_contents__33_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Content Temporary\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//textarea[@id='_33_editor' and @style='display: none;']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__33_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__33_editor']/iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Blogs Entry Content Temporary\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\"//body\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title Temporary\"),\n\t\t\tselenium.getText(\"//div[@class='entry-title']/h2/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content Temporary\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","id":52842,"modified_method":"public void testSA_AddTemporaryEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Blog Entry']\",\n\t\t\tRuntimeVariables.replace(\"Add Blog Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_33_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//textarea[@id='_33_editor' and @style='display: none;']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//a[@class='cke_button_source cke_on']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__33_editor']/textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//td[@id='cke_contents__33_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Content Temporary\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//textarea[@id='_33_editor' and @style='display: none;']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__33_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__33_editor']/iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Blogs Entry Content Temporary\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\"//body\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title Temporary\"),\n\t\t\tselenium.getText(\"//div[@class='entry-title']/h2/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content Temporary\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_AllowAddCommentPermissions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.check(\"//tr[5]/td[2]/input\");\n\t\tselenium.check(\"//tr[6]/td[2]/input\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\"//tr[5]/td[2]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//tr[6]/td[2]/input\"));\n\t}","id":52843,"modified_method":"public void testSA_AllowAddCommentPermissions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='guest_ACTION_ADD_DISCUSSION']\"));\n\t\tselenium.check(\"//input[@id='guest_ACTION_ADD_DISCUSSION']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='guest_ACTION_ADD_DISCUSSION']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='guest_ACTION_ADD_DISCUSSION']\"));\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_AllowAddEntryPermissions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Permissions']\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.check(\"//tr[5]/td[2]/input\");\n\t\tselenium.check(\"//tr[6]/td[2]/input\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\"//tr[5]/td[2]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//tr[6]/td[2]/input\"));\n\t}","id":52844,"modified_method":"public void testSA_AllowAddEntryPermissions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Permissions']\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='portlet_ACTION_ADD_ENTRY']\"));\n\t\tselenium.check(\"//input[@id='portlet_ACTION_ADD_ENTRY']\");\n\t\tassertTrue(selenium.isChecked(\"//input[@id='portlet_ACTION_ADD_ENTRY']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='portlet_ACTION_ADD_ENTRY']\"));\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_AllowConfigurePortletPermissions()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Permissions\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.check(\"//tr[6]/td[3]/input\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\"//tr[6]/td[3]/input\"));\n\t}","id":52845,"modified_method":"public void testSA_AllowConfigurePortletPermissions()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(@id,'configuration')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(@id,'configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(@id,'configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//iframe[@id='_33_configurationIframeDialog']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id='_33_configurationIframeDialog']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Permissions\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='portlet_ACTION_CONFIGURATION']\"));\n\t\tselenium.check(\"//input[@id='portlet_ACTION_CONFIGURATION']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='portlet_ACTION_CONFIGURATION']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//input[@id='portlet_ACTION_CONFIGURATION']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='portlet_ACTION_CONFIGURATION']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_AllowDeleteCommentPermissions()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.check(\"//tr[5]/td[4]/input\");\n\t\tselenium.check(\"//tr[6]/td[4]/input\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\"//tr[5]/td[4]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//tr[6]/td[4]/input\"));\n\t}","id":52846,"modified_method":"public void testSA_AllowDeleteCommentPermissions()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='portlet_ACTION_DELETE_DISCUSSION']\"));\n\t\tselenium.check(\"//input[@id='portlet_ACTION_DELETE_DISCUSSION']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='portlet_ACTION_DELETE_DISCUSSION']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='portlet_ACTION_DELETE_DISCUSSION']\"));\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_AllowDeleteEntryPermissions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Edited\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.check(\"//tr[5]/td[3]/input\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\"//tr[5]/td[3]/input\"));\n\t}","id":52847,"modified_method":"public void testSA_AllowDeleteEntryPermissions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Edited\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertFalse(selenium.isChecked(\"//input[@id='portlet_ACTION_DELETE']\"));\n\t\tselenium.check(\"//input[@id='portlet_ACTION_DELETE']\");\n\t\tassertTrue(selenium.isChecked(\"//input[@id='portlet_ACTION_DELETE']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='portlet_ACTION_DELETE']\"));\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_AllowEditCommentPermissions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.check(\"//tr[5]/td[7]/input\");\n\t\tselenium.check(\"//tr[6]/td[7]/input\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\"//tr[5]/td[7]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//tr[6]/td[7]/input\"));\n\t}","id":52848,"modified_method":"public void testSA_AllowEditCommentPermissions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='portlet_ACTION_UPDATE_DISCUSSION']\"));\n\t\tselenium.check(\"//input[@id='portlet_ACTION_UPDATE_DISCUSSION']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='portlet_ACTION_UPDATE_DISCUSSION']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='portlet_ACTION_UPDATE_DISCUSSION']\"));\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_AllowEditEntryPermissions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.check(\"//tr[5]/td[6]/input\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\"//tr[5]/td[6]/input\"));\n\t}","id":52849,"modified_method":"public void testSA_AllowEditEntryPermissions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertFalse(selenium.isChecked(\"//input[@id='portlet_ACTION_UPDATE']\"));\n\t\tselenium.check(\"//input[@id='portlet_ACTION_UPDATE']\");\n\t\tassertTrue(selenium.isChecked(\"//input[@id='portlet_ACTION_UPDATE']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='portlet_ACTION_UPDATE']\"));\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_AllowPermissionsEntryPermissions()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.check(\"//tr[5]/td[5]/input\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\"//tr[5]/td[5]/input\"));\n\t}","id":52850,"modified_method":"public void testSA_AllowPermissionsEntryPermissions()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='portlet_ACTION_PERMISSIONS']\"));\n\t\tselenium.check(\"//input[@id='portlet_ACTION_PERMISSIONS']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='portlet_ACTION_PERMISSIONS']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='portlet_ACTION_PERMISSIONS']\"));\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_AllowViewEntryPermissions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.check(\"//tr[5]/td[8]/input\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@name='16_ACTION_VIEW']\"));\n\t\tassertTrue(selenium.isChecked(\"//tr[5]/td[8]/input\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[6]/td[8]/input\"));\n\t}","id":52851,"modified_method":"public void testSA_AllowViewEntryPermissions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertFalse(selenium.isChecked(\"//input[@id='guest_ACTION_VIEW']\"));\n\t\tselenium.check(\"//input[@id='guest_ACTION_VIEW']\");\n\t\tassertTrue(selenium.isChecked(\"//input[@id='guest_ACTION_VIEW']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='guest_ACTION_VIEW']\"));\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_AllowViewPortletPermissions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Permissions\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.check(\"//input[@name='16_ACTION_VIEW']\");\n\t\tselenium.check(\"//tr[6]/td[4]/input\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@name='16_ACTION_VIEW']\"));\n\t\tassertTrue(selenium.isChecked(\"//tr[6]/td[4]/input\"));\n\t}","id":52852,"modified_method":"public void testSA_AllowViewPortletPermissions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(@id,'configuration')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(@id,'configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(@id,'configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Permissions\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//iframe[@id='_33_configurationIframeDialog']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id='_33_configurationIframeDialog']\");\n\t\tassertFalse(selenium.isChecked(\"//input[@id='guest_ACTION_VIEW']\"));\n\t\tselenium.check(\"//input[@id='guest_ACTION_VIEW']\");\n\t\tassertTrue(selenium.isChecked(\"//input[@id='guest_ACTION_VIEW']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='guest_ACTION_VIEW']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isChecked(\"//input[@id='guest_ACTION_VIEW']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_RemoveAddCommentPermissions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.uncheck(\"//tr[3]/td[2]/input\");\n\t\tselenium.uncheck(\"//tr[5]/td[2]/input\");\n\t\tselenium.uncheck(\"//tr[6]/td[2]/input\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[3]/td[2]/input\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[5]/td[2]/input\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[6]/td[2]/input\"));\n\t}","id":52853,"modified_method":"public void testSA_RemoveAddCommentPermissions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='guest_ACTION_ADD_DISCUSSION']\"));\n\t\tselenium.uncheck(\"//input[@id='guest_ACTION_ADD_DISCUSSION']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='guest_ACTION_ADD_DISCUSSION']\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='portlet_ACTION_ADD_DISCUSSION']\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='power-user_ACTION_ADD_DISCUSSION']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='guest_ACTION_ADD_DISCUSSION']\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='portlet_ACTION_ADD_DISCUSSION']\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='power-user_ACTION_ADD_DISCUSSION']\"));\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_RemoveAddEntryPermissions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Permissions']\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.uncheck(\"//tr[5]/td[2]/input\");\n\t\tselenium.uncheck(\"//tr[6]/td[2]/input\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[5]/td[2]/input\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[6]/td[2]/input\"));\n\t}","id":52854,"modified_method":"public void testSA_RemoveAddEntryPermissions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Permissions']\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertTrue(selenium.isChecked(\"//input[@id='portlet_ACTION_ADD_ENTRY']\"));\n\t\tselenium.uncheck(\"//input[@id='portlet_ACTION_ADD_ENTRY']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='portlet_ACTION_ADD_ENTRY']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='portlet_ACTION_ADD_ENTRY']\"));\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_RemoveConfigurePortletPermissions()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Permissions\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.uncheck(\"//tr[6]/td[3]/input\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[6]/td[3]/input\"));\n\t}","id":52855,"modified_method":"public void testSA_RemoveConfigurePortletPermissions()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(@id,'configuration')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(@id,'configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(@id,'configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Permissions\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//iframe[@id='_33_configurationIframeDialog']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id='_33_configurationIframeDialog']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='portlet_ACTION_CONFIGURATION']\"));\n\t\tselenium.uncheck(\"//input[@id='portlet_ACTION_CONFIGURATION']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='portlet_ACTION_CONFIGURATION']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//input[@id='portlet_ACTION_CONFIGURATION']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='portlet_ACTION_CONFIGURATION']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_RemoveDeleteCommentPermissions()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.uncheck(\"//tr[5]/td[4]/input\");\n\t\tselenium.uncheck(\"//tr[6]/td[4]/input\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[5]/td[4]/input\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[6]/td[4]/input\"));\n\t}","id":52856,"modified_method":"public void testSA_RemoveDeleteCommentPermissions()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='portlet_ACTION_DELETE_DISCUSSION']\"));\n\t\tselenium.uncheck(\"//input[@id='portlet_ACTION_DELETE_DISCUSSION']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='portlet_ACTION_DELETE_DISCUSSION']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='portlet_ACTION_DELETE_DISCUSSION']\"));\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_RemoveEditCommentPermissions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.uncheck(\"//tr[5]/td[7]/input\");\n\t\tselenium.uncheck(\"//tr[6]/td[7]/input\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[5]/td[7]/input\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[6]/td[7]/input\"));\n\t}","id":52857,"modified_method":"public void testSA_RemoveEditCommentPermissions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='portlet_ACTION_UPDATE_DISCUSSION']\"));\n\t\tselenium.uncheck(\"//input[@id='portlet_ACTION_UPDATE_DISCUSSION']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='portlet_ACTION_UPDATE_DISCUSSION']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='portlet_ACTION_UPDATE_DISCUSSION']\"));\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_RemoveEditEntryPermissions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.uncheck(\"//tr[5]/td[6]/input\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[5]/td[6]/input\"));\n\t}","id":52858,"modified_method":"public void testSA_RemoveEditEntryPermissions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertTrue(selenium.isChecked(\"//input[@id='portlet_ACTION_UPDATE']\"));\n\t\tselenium.uncheck(\"//input[@id='portlet_ACTION_UPDATE']\");\n\t\tassertFalse(selenium.isChecked(\"//input[@id='portlet_ACTION_UPDATE']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='portlet_ACTION_UPDATE']\"));\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_RemovePermissionsEntryPermissions()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.uncheck(\"//tr[5]/td[5]/input\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[5]/td[5]/input\"));\n\t}","id":52859,"modified_method":"public void testSA_RemovePermissionsEntryPermissions()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='portlet_ACTION_PERMISSIONS']\"));\n\t\tselenium.uncheck(\"//input[@id='portlet_ACTION_PERMISSIONS']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='portlet_ACTION_PERMISSIONS']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='portlet_ACTION_PERMISSIONS']\"));\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_RemoveViewEntryPermissions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Blogs Entry Title Temporary\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.uncheck(\"//input[@name='16_ACTION_VIEW']\");\n\t\tselenium.uncheck(\"//tr[5]/td[8]/input\");\n\t\tselenium.uncheck(\"//tr[6]/td[8]/input\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@name='16_ACTION_VIEW']\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[5]/td[8]/input\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[6]/td[8]/input\"));\n\t}","id":52860,"modified_method":"public void testSA_RemoveViewEntryPermissions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@class='entry-title']/h2/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Temporary\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertTrue(selenium.isChecked(\"//input[@id='guest_ACTION_VIEW']\"));\n\t\tselenium.uncheck(\"//input[@id='guest_ACTION_VIEW']\");\n\t\tassertFalse(selenium.isChecked(\"//input[@id='guest_ACTION_VIEW']\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='portlet_ACTION_VIEW']\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='power-user_ACTION_VIEW']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='guest_ACTION_VIEW']\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='portlet_ACTION_VIEW']\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='power-user_ACTION_VIEW']\"));\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_RemoveViewPortletPermissions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Permissions\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@name='16_ACTION_VIEW']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.uncheck(\"//input[@name='16_ACTION_VIEW']\");\n\t\tselenium.uncheck(\"//tr[6]/td[4]/input\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@name='16_ACTION_VIEW']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertFalse(selenium.isChecked(\"//input[@name='16_ACTION_VIEW']\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[6]/td[4]/input\"));\n\t}","id":52861,"modified_method":"public void testSA_RemoveViewPortletPermissions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(@id,'configuration')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(@id,'configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(@id,'configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Permissions\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Permissions\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//iframe[@id='_33_configurationIframeDialog']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id='_33_configurationIframeDialog']\");\n\t\tassertTrue(selenium.isChecked(\"//input[@id='guest_ACTION_VIEW']\"));\n\t\tselenium.uncheck(\"//input[@id='guest_ACTION_VIEW']\");\n\t\tassertFalse(selenium.isChecked(\"//input[@id='guest_ACTION_VIEW']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='guest_ACTION_VIEW']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertFalse(selenium.isChecked(\"//input[@id='guest_ACTION_VIEW']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"ac9f4f2cd124848eb2f9d8b73cd2c2117804c0eb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void toggleContextToolbar(final boolean show) {\n    final Component toolbar = myComponent.getComponent(0);\n    final int count = ((Container)toolbar).getComponentCount();\n    if (count == 0) {\n      return;\n    }\n\n    if (myShow != show) {\n      myShow = show;\n      if (myShow && myActionToolbar != null) {\n        myActionToolbar.updateActionsImmediately();\n      }\n      restartTimer();\n    }\n  }","id":52862,"modified_method":"private void toggleContextToolbar(final boolean show) {\n    myActionToolbar.updateActionsImmediately();\n    if (((Container)myActionToolbar).getComponentCount() == 0) {\n      return;\n    }\n\n    if (myShow != show) {\n      myShow = show;\n      restartTimer();\n    }\n  }","commit_id":"237ba73f28dd8bc06069e8b2e247e2e8b625243f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void update(@NotNull AnActionEvent e) {\n      e.getPresentation().setVisible(!WebBrowserManager.getInstance().getBrowsers().isEmpty());\n    }","id":52863,"modified_method":"@Override\n    public void update(@NotNull AnActionEvent e) {\n      e.getPresentation().setVisible(!WebBrowserManager.getInstance().getActiveBrowsers().isEmpty());\n    }","commit_id":"237ba73f28dd8bc06069e8b2e247e2e8b625243f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void validate() {\n    if (!isValid()) {\n      calculateBounds();\n      super.validate();\n    }\n  }","id":52864,"modified_method":"public void validate() {\n    if (!isValid()) {\n      calculateBounds(getSize(), myComponentBounds);\n      super.validate();\n    }\n  }","commit_id":"2a86f0efcf8c08deaca4bccce68bab756373e7c1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void doLayout() {\n    if (!isValid()) {\n      calculateBounds();\n    }\n    final int componentCount = getComponentCount();\n    LOG.assertTrue(componentCount <= myComponentBounds.size());\n    for (int i = componentCount - 1; i >= 0; i--) {\n      final Component component = getComponent(i);\n      component.setBounds(myComponentBounds.get(i));\n    }\n  }","id":52865,"modified_method":"public void doLayout() {\n    if (!isValid()) {\n      calculateBounds(getSize(), myComponentBounds);\n    }\n    final int componentCount = getComponentCount();\n    LOG.assertTrue(componentCount <= myComponentBounds.size());\n    for (int i = componentCount - 1; i >= 0; i--) {\n      final Component component = getComponent(i);\n      component.setBounds(myComponentBounds.get(i));\n    }\n  }","commit_id":"2a86f0efcf8c08deaca4bccce68bab756373e7c1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ActionToolbarImpl(final String place,\n                           final ActionGroup actionGroup,\n                           final boolean horizontal,\n                           DataManager dataManager,\n                           ActionManagerEx actionManager,\n                           KeymapManagerEx keymapManager) {\n    super(null);\n    myActionManager = actionManager;\n    myComponentBounds = new ArrayList<Rectangle>();\n    myKeymapManager = keymapManager;\n    setMinimumButtonSize(DEFAULT_MINIMUM_BUTTON_SIZE);\n    setLayoutPolicy(AUTO_LAYOUT_POLICY);\n    setBorder(BorderFactory.createEmptyBorder(2, 2, 2, 2));\n    myPlace = place;\n    myActionGroup = actionGroup;\n    myPresentationFactory = new PresentationFactory();\n    myKeymapManagerListener = new MyKeymapManagerListener();\n    myTimerListener = new MyTimerListener();\n    myVisibleActions = new ArrayList<AnAction>();\n    myNewVisibleActions = new ArrayList<AnAction>();\n    myDataManager = dataManager;\n\n    setLayout(new BorderLayout());\n    setOrientation(horizontal ? SwingConstants.HORIZONTAL : SwingConstants.VERTICAL);\n    updateActionsImmediately();\n    //\n    keymapManager.addKeymapManagerListener(new WeakKeymapManagerListener(keymapManager, myKeymapManagerListener));\n    actionManager.addTimerListener(500, new WeakTimerListener(actionManager, myTimerListener));\n    // If the panel doesn't handle mouse event then it will be passed to its parent.\n    // It means that if the panel is in slidindg mode then the focus goes to the editor\n    // and panel will be automatically hidden.\n    enableEvents(MouseEvent.MOUSE_MOTION_EVENT_MASK | MouseEvent.MOUSE_EVENT_MASK);\n  }","id":52866,"modified_method":"public ActionToolbarImpl(final String place,\n                           final ActionGroup actionGroup,\n                           final boolean horizontal,\n                           DataManager dataManager,\n                           ActionManagerEx actionManager,\n                           KeymapManagerEx keymapManager) {\n    super(null);\n    myActionManager = actionManager;\n    myKeymapManager = keymapManager;\n    setMinimumButtonSize(DEFAULT_MINIMUM_BUTTON_SIZE);\n    setLayoutPolicy(AUTO_LAYOUT_POLICY);\n    setBorder(BorderFactory.createEmptyBorder(2, 2, 2, 2));\n    myPlace = place;\n    myActionGroup = actionGroup;\n    myPresentationFactory = new PresentationFactory();\n    myKeymapManagerListener = new MyKeymapManagerListener();\n    myTimerListener = new MyTimerListener();\n    myVisibleActions = new ArrayList<AnAction>();\n    myNewVisibleActions = new ArrayList<AnAction>();\n    myDataManager = dataManager;\n\n    setLayout(new BorderLayout());\n    setOrientation(horizontal ? SwingConstants.HORIZONTAL : SwingConstants.VERTICAL);\n    updateActionsImmediately();\n    //\n    keymapManager.addKeymapManagerListener(new WeakKeymapManagerListener(keymapManager, myKeymapManagerListener));\n    actionManager.addTimerListener(500, new WeakTimerListener(actionManager, myTimerListener));\n    // If the panel doesn't handle mouse event then it will be passed to its parent.\n    // It means that if the panel is in slidindg mode then the focus goes to the editor\n    // and panel will be automatically hidden.\n    enableEvents(MouseEvent.MOUSE_MOTION_EVENT_MASK | MouseEvent.MOUSE_EVENT_MASK);\n  }","commit_id":"2a86f0efcf8c08deaca4bccce68bab756373e7c1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Dimension getPreferredSize() {\n    calculateBounds();\n    final int componentCount = getComponentCount();\n    LOG.assertTrue(componentCount <= myComponentBounds.size());\n    if (componentCount == 0) {\n      return new Dimension(0, 0);\n    }\n\n    int xLeft = Integer.MAX_VALUE;\n    int yTop = Integer.MAX_VALUE;\n    int xRight = Integer.MIN_VALUE;\n    int yBottom = Integer.MIN_VALUE;\n    for (int i = componentCount - 1; i >= 0; i--) {\n      final Rectangle bounds = myComponentBounds.get(i);\n      xLeft = Math.min(xLeft, bounds.x);\n      yTop = Math.min(yTop, bounds.y);\n      xRight = Math.max(xRight, bounds.x + bounds.width);\n      yBottom = Math.max(yBottom, bounds.y + bounds.height);\n    }\n    final Dimension dimension = new Dimension(xRight - xLeft, yBottom - yTop);\n\n    if (myLayoutPolicy == AUTO_LAYOUT_POLICY) {\n      dimension.width += myAutoPopupIcon.getIconWidth();\n    }\n\n    return dimension;\n  }","id":52867,"modified_method":"public Dimension getPreferredSize() {\n    final ArrayList<Rectangle> bounds = new ArrayList<Rectangle>();\n    for (int i = 0; i < getComponentCount(); i++) {\n      bounds.add(new Rectangle());\n    }\n    calculateBounds(new Dimension(Integer.MAX_VALUE, Integer.MAX_VALUE), bounds);\n\n    int xLeft = Integer.MAX_VALUE;\n    int yTop = Integer.MAX_VALUE;\n    int xRight = Integer.MIN_VALUE;\n    int yBottom = Integer.MIN_VALUE;\n    for (int i = bounds.size() - 1; i >= 0; i--) {\n      final Rectangle each = bounds.get(i);\n      if (each.x == Integer.MAX_VALUE) continue;\n      xLeft = Math.min(xLeft, each.x);\n      yTop = Math.min(yTop, each.y);\n      xRight = Math.max(xRight, each.x + each.width);\n      yBottom = Math.max(yBottom, each.y + each.height);\n    }\n    final Dimension dimension = new Dimension(xRight - xLeft, yBottom - yTop);\n\n    if (myLayoutPolicy == AUTO_LAYOUT_POLICY) {\n      if (myOrientation == SwingUtilities.HORIZONTAL) {\n        dimension.width += myAutoPopupIcon.getIconWidth();\n      }\n      else {\n        dimension.height += myAutoPopupIcon.getIconHeight();\n      }\n    }\n\n    return dimension;\n  }","commit_id":"2a86f0efcf8c08deaca4bccce68bab756373e7c1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void calculateBoundsNowrapImpl() {\n    final int componentCount = getComponentCount();\n    LOG.assertTrue(componentCount <= myComponentBounds.size());\n\n    final int width = getWidth();\n    final int height = getHeight();\n\n    if (myAdjustTheSameSize) {\n      final int maxWidth = getMaxButtonWidth();\n      final int maxHeight = getMaxButtonHeight();\n\n      if (myOrientation == SwingConstants.HORIZONTAL) {\n        int xOffset = 0;\n        for (int i = 0; i < componentCount; i++) {\n          final Rectangle r = myComponentBounds.get(i);\n          r.setBounds(xOffset, (height - maxHeight) / 2, maxWidth, maxHeight);\n          xOffset += maxWidth;\n        }\n      }\n      else {\n        int yOffset = 0;\n        for (int i = 0; i < componentCount; i++) {\n          final Rectangle r = myComponentBounds.get(i);\n          r.setBounds((width - maxWidth) / 2, yOffset, maxWidth, maxHeight);\n          yOffset += maxHeight;\n        }\n      }\n    }\n    else {\n      if (myOrientation == SwingConstants.HORIZONTAL) {\n        final int maxHeight = getMaxButtonHeight();\n        int xOffset = 0;\n        final int yOffset = 0;\n        for (int i = 0; i < componentCount; i++) {\n          final Component component = getComponent(i);\n          final Dimension d = component.getPreferredSize();\n          final Rectangle r = myComponentBounds.get(i);\n          r.setBounds(xOffset, yOffset + (maxHeight - d.height) / 2, d.width, d.height);\n          xOffset += d.width;\n        }\n      }\n      else {\n        final int maxWidth = getMaxButtonWidth();\n        final int xOffset = 0;\n        int yOffset = 0;\n        for (int i = 0; i < componentCount; i++) {\n          final Component component = getComponent(i);\n          final Dimension d = component.getPreferredSize();\n          final Rectangle r = myComponentBounds.get(i);\n          r.setBounds(xOffset + (maxWidth - d.width) / 2, yOffset, d.width, d.height);\n          yOffset += d.height;\n        }\n      }\n    }\n  }","id":52868,"modified_method":"private void calculateBoundsNowrapImpl(ArrayList<Rectangle> bounds) {\n    final int componentCount = getComponentCount();\n    LOG.assertTrue(componentCount <= bounds.size());\n\n    final int width = getWidth();\n    final int height = getHeight();\n\n    if (myAdjustTheSameSize) {\n      final int maxWidth = getMaxButtonWidth();\n      final int maxHeight = getMaxButtonHeight();\n\n      if (myOrientation == SwingConstants.HORIZONTAL) {\n        int xOffset = 0;\n        for (int i = 0; i < componentCount; i++) {\n          final Rectangle r = bounds.get(i);\n          r.setBounds(xOffset, (height - maxHeight) / 2, maxWidth, maxHeight);\n          xOffset += maxWidth;\n        }\n      }\n      else {\n        int yOffset = 0;\n        for (int i = 0; i < componentCount; i++) {\n          final Rectangle r = bounds.get(i);\n          r.setBounds((width - maxWidth) / 2, yOffset, maxWidth, maxHeight);\n          yOffset += maxHeight;\n        }\n      }\n    }\n    else {\n      if (myOrientation == SwingConstants.HORIZONTAL) {\n        final int maxHeight = getMaxButtonHeight();\n        int xOffset = 0;\n        final int yOffset = 0;\n        for (int i = 0; i < componentCount; i++) {\n          final Component component = getComponent(i);\n          final Dimension d = component.getPreferredSize();\n          final Rectangle r = bounds.get(i);\n          r.setBounds(xOffset, yOffset + (maxHeight - d.height) / 2, d.width, d.height);\n          xOffset += d.width;\n        }\n      }\n      else {\n        final int maxWidth = getMaxButtonWidth();\n        final int xOffset = 0;\n        int yOffset = 0;\n        for (int i = 0; i < componentCount; i++) {\n          final Component component = getComponent(i);\n          final Dimension d = component.getPreferredSize();\n          final Rectangle r = bounds.get(i);\n          r.setBounds(xOffset + (maxWidth - d.width) / 2, yOffset, d.width, d.height);\n          yOffset += d.height;\n        }\n      }\n    }\n  }","commit_id":"2a86f0efcf8c08deaca4bccce68bab756373e7c1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected Shell getShell() {\n\t\t\treturn Display.getDefault().getActiveShell();\n\t\t}","id":52869,"modified_method":"protected Shell getShell() {\n\t\t\tShell activeShell = Display.getDefault().getActiveShell();\n\t\t\treturn activeShell != null ? activeShell : Display.getDefault().getShells()[0];\n\t\t}","commit_id":"18fd41db91f6347024036ad4bddf9bd6d3e07895","url":"https://github.com/eclipse/xtext"},{"original_method":"protected Shell getShell() {\n\t\t\tShell activeShell = Display.getDefault().getActiveShell();\n\t\t\treturn activeShell != null ? activeShell : Display.getDefault().getShells()[0];\n\t\t}","id":52870,"modified_method":"protected Shell getShell() {\n\t\t\treturn Display.getDefault().getActiveShell();\n\t\t}","commit_id":"195d1f6a75662e8b19181b7d143ba832d710b99b","url":"https://github.com/eclipse/xtext"},{"original_method":"protected Shell getShell() {\n\t\t\treturn Display.getDefault().getActiveShell();\n\t\t}","id":52871,"modified_method":"protected Shell getShell() {\n\t\t\tShell activeShell = Display.getDefault().getActiveShell();\n\t\t\treturn activeShell;\n\t\t}","commit_id":"59286e4ca30080ca1c3644f530146f9cf89c1c2a","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void initApplication() throws Exception {\n    ourApplication = IdeaTestApplication.getInstance();\n    ourApplication.setDataProvider(this);\n    if (Extensions.getAllAreas().length < 2) {\n      Extensions.registerAreaClass(\"IDEA_PROJECT\", null);\n      Extensions.registerAreaClass(\"IDEA_MODULE\", \"IDEA_PROJECT\");\n    }\n    if (!myRegisterExtensionPoints){\n      Extensions.getRootArea().registerExtensionPoint(ExtensionPoints.JUNIT_PATCHER, JUnitPatcher.class.getName());\n      myRegisterExtensionPoints = true;\n    }\n  }","id":52872,"modified_method":"protected void initApplication() throws Exception {\n    ourApplication = IdeaTestApplication.getInstance();\n    ourApplication.setDataProvider(this);\n    if (Extensions.getAllAreas().length < 2) {\n      Extensions.registerAreaClass(\"IDEA_PROJECT\", null);\n      Extensions.registerAreaClass(\"IDEA_MODULE\", \"IDEA_PROJECT\");\n      Extensions.getRootArea().registerExtensionPoint(ExtensionPoints.JUNIT_PATCHER, JUnitPatcher.class.getName());\n    }\n  }","commit_id":"062301bd81a93b4a50a2ea918d5e15725c0132dc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void initApplication() throws Exception {\n    ourApplication = IdeaTestApplication.getInstance();\n    ourApplication.setDataProvider(this);\n    if (Extensions.getAllAreas().length < 2) {\n      Extensions.registerAreaClass(\"IDEA_PROJECT\", null);\n      Extensions.registerAreaClass(\"IDEA_MODULE\", \"IDEA_PROJECT\");\n    }\n    if (!myRegisterExtensionPoints){\n      Extensions.getRootArea().registerExtensionPoint(ExtensionPoints.JUNIT_PATCHER, JUnitPatcher.class.getName());\n      myRegisterExtensionPoints = true;\n    }\n    cleanupApplicationCaches();\n  }","id":52873,"modified_method":"private void initApplication() throws Exception {\n    ourApplication = IdeaTestApplication.getInstance();\n    ourApplication.setDataProvider(this);\n    if (Extensions.getAllAreas().length < 2) {\n      Extensions.registerAreaClass(\"IDEA_PROJECT\", null);\n      Extensions.registerAreaClass(\"IDEA_MODULE\", \"IDEA_PROJECT\");\n      Extensions.getRootArea().registerExtensionPoint(ExtensionPoints.JUNIT_PATCHER, JUnitPatcher.class.getName());\n    }\n    cleanupApplicationCaches();\n  }","commit_id":"062301bd81a93b4a50a2ea918d5e15725c0132dc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public BinaryFileStubBuilders() {\n    super(\"com.intellij.filetype.stubBuilder\");\n  }","id":52874,"modified_method":"public BinaryFileStubBuilders() {\n    super(EP_NAME);\n  }","commit_id":"06cb315eea03305f2eba85319cfe4b08c356dada","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public CoreEnvironment(Disposable parentDisposable) {\n    myFileTypeRegistry = new CoreFileTypeRegistry();\n    //noinspection AssignmentToStaticFieldFromInstanceMethod\n    FileTypeRegistry.ourInstanceGetter = new Getter<FileTypeRegistry>() {\n      @Override\n      public FileTypeRegistry get() {\n        return myFileTypeRegistry;\n      }\n    };\n\n    myEncodingRegistry = new CoreEncodingRegistry();\n    //noinspection AssignmentToStaticFieldFromInstanceMethod\n    EncodingRegistry.ourInstanceGetter = new Getter<EncodingRegistry>() {\n      @Override\n      public EncodingRegistry get() {\n        return myEncodingRegistry;\n      }\n    };\n\n    myApplication = new MockApplication(parentDisposable);\n    new ApplicationManager() {{\n      ourApplication = myApplication;\n    }};\n    ApplicationComponentLocator.setInstance(myApplication);\n    myLocalFileSystem = new CoreLocalFileSystem();\n    myJarFileSystem = new CoreJarFileSystem();\n\n    Extensions.registerAreaClass(\"IDEA_PROJECT\", null);\n    myProject = new MockProject(myApplication.getPicoContainer(), parentDisposable);\n\n    final MutablePicoContainer appContainer = myApplication.getPicoContainer();\n    registerComponentInstance(appContainer, FileDocumentManager.class, new MockFileDocumentManagerImpl(new Function<CharSequence, Document>() {\n      @Override\n      public Document fun(CharSequence charSequence) {\n        return new DocumentImpl(charSequence);\n      }\n    }, null));\n\n    myApplication.registerService(DefaultASTFactory.class, new CoreASTFactory());\n    myApplication.registerService(PsiBuilderFactory.class, new PsiBuilderFactoryImpl());\n    myApplication.registerService(ReferenceProvidersRegistry.class, new MockReferenceProvidersRegistry());\n\n    registerExtensionPoint(Extensions.getRootArea(), ContentBasedFileSubstitutor.EP_NAME, ContentBasedFileSubstitutor.class);\n\n    myFileIndexFacade = new MockFileIndexFacade(myProject);\n    final MutablePicoContainer projectContainer = myProject.getPicoContainer();\n    \n    myProject.registerService(PsiModificationTracker.class, new PsiModificationTrackerImpl(myProject));\n    myProject.registerService(FileIndexFacade.class, myFileIndexFacade);\n    \n    registerProjectExtensionPoint(PsiTreeChangePreprocessor.EP_NAME, PsiTreeChangePreprocessor.class);\n    myPsiManager = new PsiManagerImpl(myProject, null, null, myFileIndexFacade, null);\n    ((FileManagerImpl) myPsiManager.getFileManager()).markInitialized();\n    registerComponentInstance(projectContainer, PsiManager.class, myPsiManager);\n\n    myProject.registerService(PsiFileFactory.class, new PsiFileFactoryImpl(myPsiManager));\n    myProject.registerService(CachedValuesManager.class, new CachedValuesManagerImpl(myProject, new PsiCachedValuesFactory(myPsiManager)));\n    myProject.registerService(PsiDirectoryFactory.class, new PsiDirectoryFactoryImpl(myPsiManager));\n    myProject.registerService(ProjectScopeBuilder.class, new CoreProjectScopeBuilder(myProject, myFileIndexFacade));\n    myProject.registerService(DumbService.class, new MockDumbService(myProject));\n  }","id":52875,"modified_method":"public CoreEnvironment(Disposable parentDisposable) {\n    myFileTypeRegistry = new CoreFileTypeRegistry();\n    //noinspection AssignmentToStaticFieldFromInstanceMethod\n    FileTypeRegistry.ourInstanceGetter = new Getter<FileTypeRegistry>() {\n      @Override\n      public FileTypeRegistry get() {\n        return myFileTypeRegistry;\n      }\n    };\n\n    myEncodingRegistry = new CoreEncodingRegistry();\n    //noinspection AssignmentToStaticFieldFromInstanceMethod\n    EncodingRegistry.ourInstanceGetter = new Getter<EncodingRegistry>() {\n      @Override\n      public EncodingRegistry get() {\n        return myEncodingRegistry;\n      }\n    };\n\n    myApplication = new MockApplication(parentDisposable);\n    new ApplicationManager() {{\n      ourApplication = myApplication;\n    }};\n    ApplicationComponentLocator.setInstance(myApplication);\n    myLocalFileSystem = new CoreLocalFileSystem();\n    myJarFileSystem = new CoreJarFileSystem();\n\n    Extensions.registerAreaClass(\"IDEA_PROJECT\", null);\n    myProject = new MockProject(myApplication.getPicoContainer(), parentDisposable);\n\n    final MutablePicoContainer appContainer = myApplication.getPicoContainer();\n    registerComponentInstance(appContainer, FileDocumentManager.class, new MockFileDocumentManagerImpl(new Function<CharSequence, Document>() {\n      @Override\n      public Document fun(CharSequence charSequence) {\n        return new DocumentImpl(charSequence);\n      }\n    }, null));\n\n    myApplication.registerService(DefaultASTFactory.class, new CoreASTFactory());\n    myApplication.registerService(PsiBuilderFactory.class, new PsiBuilderFactoryImpl());\n    myApplication.registerService(ReferenceProvidersRegistry.class, new MockReferenceProvidersRegistry());\n    myApplication.registerService(StubTreeLoader.class, new CoreStubTreeLoader());\n\n    registerExtensionPoint(Extensions.getRootArea(), ContentBasedFileSubstitutor.EP_NAME, ContentBasedFileSubstitutor.class);\n    registerExtensionPoint(Extensions.getRootArea(), BinaryFileStubBuilders.EP_NAME, FileTypeExtensionPoint.class);\n\n    myFileIndexFacade = new MockFileIndexFacade(myProject);\n    final MutablePicoContainer projectContainer = myProject.getPicoContainer();\n    \n    myProject.registerService(PsiModificationTracker.class, new PsiModificationTrackerImpl(myProject));\n    myProject.registerService(FileIndexFacade.class, myFileIndexFacade);\n    \n    registerProjectExtensionPoint(PsiTreeChangePreprocessor.EP_NAME, PsiTreeChangePreprocessor.class);\n    myPsiManager = new PsiManagerImpl(myProject, null, null, myFileIndexFacade, null);\n    ((FileManagerImpl) myPsiManager.getFileManager()).markInitialized();\n    registerComponentInstance(projectContainer, PsiManager.class, myPsiManager);\n\n    myProject.registerService(PsiFileFactory.class, new PsiFileFactoryImpl(myPsiManager));\n    myProject.registerService(CachedValuesManager.class, new CachedValuesManagerImpl(myProject, new PsiCachedValuesFactory(myPsiManager)));\n    myProject.registerService(PsiDirectoryFactory.class, new PsiDirectoryFactoryImpl(myPsiManager));\n    myProject.registerService(ProjectScopeBuilder.class, new CoreProjectScopeBuilder(myProject, myFileIndexFacade));\n    myProject.registerService(DumbService.class, new MockDumbService(myProject));\n  }","commit_id":"06cb315eea03305f2eba85319cfe4b08c356dada","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected <T> void registerExtensionPoint(final ExtensionsArea area, final ExtensionPointName<T> extensionPointName,\n                                            final Class<? extends T> aClass) {\n    final String name = extensionPointName.getName();\n    if (!area.hasExtensionPoint(name)) {\n      ExtensionPoint.Kind kind = aClass.isInterface() || (aClass.getModifiers() & Modifier.ABSTRACT) != 0 ? ExtensionPoint.Kind.INTERFACE : ExtensionPoint.Kind.BEAN_CLASS;\n      area.registerExtensionPoint(name, aClass.getName(), kind);\n    }\n  }","id":52876,"modified_method":"protected <T> void registerExtensionPoint(final ExtensionsArea area, final ExtensionPointName<T> extensionPointName,\n                                            final Class<? extends T> aClass) {\n    final String name = extensionPointName.getName();\n    registerExtensionPoint(area, name, aClass);\n  }","commit_id":"06cb315eea03305f2eba85319cfe4b08c356dada","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void test_childContaininLinksForSpecializedChildren() throws Exception {\n      this.addNodeById(\"8758390115029078425\");\n      this.addNodeById(\"5815925154349132136\");\n      this.addNodeById(\"2166349271756548530\");\n      Assert.assertEquals(SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fbfL, 0x3dd540b968e9fc0L, \"grandChild_0_1\")), SNodeOperations.getContainingLinkDeclaration(SNodeOperations.cast(this.getNodeById(\"2600026384779198859\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc4L, \"jetbrains.mps.lang.smodelTests.structure.GrandChild\"))));\n    }","id":52877,"modified_method":"public void test_childContaininLinksForSpecializedChildren() throws Exception {\n      this.addNodeById(\"8758390115029078425\");\n      this.addNodeById(\"5815925154349132136\");\n      this.addNodeById(\"2166349271756548530\");\n      Assert.assertEquals(MetaAdapterFactory.getContainmentLink(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fbfL, 0x3dd540b968e9fc0L, \"grandChild_0_1\"), SNodeOperations.cast(this.getNodeById(\"2600026384779198859\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc4L, \"jetbrains.mps.lang.smodelTests.structure.GrandChild\")).getContainmentLink());\n    }","commit_id":"196db06a03c56be05173f5b74e166f2bdc70fc37","url":"https://github.com/JetBrains/MPS"},{"original_method":"public String addUnspecifiedChild(SNode input, SNode unspecifiedChild) {\n      String unspecifiedChildRole = \"unspecifiedChild\";\n      input.addChild(unspecifiedChildRole, unspecifiedChild);\n      return unspecifiedChildRole;\n    }","id":52878,"modified_method":"public SContainmentLink addUnspecifiedChild(SNode input, SNode unspecifiedChild) {\n      SContainmentLink link = MetaAdapterFactory.getContainmentLink(1, 1, 1, 1, \"unspecifiedChild\");\n      input.addChild(link, unspecifiedChild);\n      return link;\n    }","commit_id":"196db06a03c56be05173f5b74e166f2bdc70fc37","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void test_unspecifiedChildren() throws Exception {\n      this.addNodeById(\"8758390115029078425\");\n      this.addNodeById(\"5815925154349132136\");\n      this.addNodeById(\"2166349271756548530\");\n      int initialSize = ListSequence.fromList(SNodeOperations.getChildren(SNodeOperations.cast(this.getNodeById(\"2166349271756548531\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, \"jetbrains.mps.lang.smodelTests.structure.Root\")))).count();\n      SNode unspecifiedChild = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc4L, \"jetbrains.mps.lang.smodelTests.structure.GrandChild\")));\n      String unspecifiedChildRole = this.addUnspecifiedChild(SNodeOperations.cast(this.getNodeById(\"2166349271756548531\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, \"jetbrains.mps.lang.smodelTests.structure.Root\")), unspecifiedChild);\n      Assert.assertEquals(initialSize + 1, ListSequence.fromList(SNodeOperations.getChildren(SNodeOperations.cast(this.getNodeById(\"2166349271756548531\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, \"jetbrains.mps.lang.smodelTests.structure.Root\")))).count());\n      Iterable<SNode> unspecifiedChildren = ListSequence.fromList(SNodeOperations.getChildren(SNodeOperations.cast(this.getNodeById(\"2166349271756548531\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, \"jetbrains.mps.lang.smodelTests.structure.Root\")))).where(new IWhereFilter<SNode>() {\n        public boolean accept(SNode it) {\n          return (SNodeOperations.getContainingLinkDeclaration(it) == null);\n        }\n      });\n      Assert.assertEquals(1, Sequence.fromIterable(unspecifiedChildren).count());\n      SNode theChild = Sequence.fromIterable(unspecifiedChildren).first();\n      Assert.assertEquals(unspecifiedChildRole, SNodeOperations.getContainingLinkRole(theChild));\n      Assert.assertEquals(unspecifiedChild, theChild);\n    }","id":52879,"modified_method":"public void test_unspecifiedChildren() throws Exception {\n      this.addNodeById(\"8758390115029078425\");\n      this.addNodeById(\"5815925154349132136\");\n      this.addNodeById(\"2166349271756548530\");\n      int initialSize = ListSequence.fromList(SNodeOperations.getChildren(SNodeOperations.cast(this.getNodeById(\"2166349271756548531\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, \"jetbrains.mps.lang.smodelTests.structure.Root\")))).count();\n      SNode unspecifiedChild = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc4L, \"jetbrains.mps.lang.smodelTests.structure.GrandChild\")));\n      SContainmentLink unspecifiedChildRole = this.addUnspecifiedChild(SNodeOperations.cast(this.getNodeById(\"2166349271756548531\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, \"jetbrains.mps.lang.smodelTests.structure.Root\")), unspecifiedChild);\n      Assert.assertEquals(initialSize + 1, ListSequence.fromList(SNodeOperations.getChildren(SNodeOperations.cast(this.getNodeById(\"2166349271756548531\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, \"jetbrains.mps.lang.smodelTests.structure.Root\")))).count());\n      Iterable<SNode> unspecifiedChildren = ListSequence.fromList(SNodeOperations.getChildren(SNodeOperations.cast(this.getNodeById(\"2166349271756548531\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, \"jetbrains.mps.lang.smodelTests.structure.Root\")))).where(new IWhereFilter<SNode>() {\n        public boolean accept(SNode it) {\n          return (SNodeOperations.getContainingLinkDeclaration(it) == null);\n        }\n      });\n      Assert.assertEquals(1, Sequence.fromIterable(unspecifiedChildren).count());\n      SNode theChild = Sequence.fromIterable(unspecifiedChildren).first();\n      Assert.assertEquals(unspecifiedChildRole, theChild.getContainmentLink());\n      Assert.assertEquals(unspecifiedChild, theChild);\n    }","commit_id":"196db06a03c56be05173f5b74e166f2bdc70fc37","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void test_childrenByLinkDeclaration() throws Exception {\n      this.addNodeById(\"8758390115029078425\");\n      this.addNodeById(\"5815925154349132136\");\n      this.addNodeById(\"2166349271756548530\");\n      List<SNode> singleChild = SNodeOperations.getChildren(SNodeOperations.cast(this.getNodeById(\"8758390115029078426\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, \"jetbrains.mps.lang.smodelTests.structure.Root\")), SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, 0x3dd540b968e9fc7L, \"child_1_n\")));\n      Assert.assertEquals(1, ListSequence.fromList(singleChild).count());\n      Assert.assertEquals(SNodeOperations.cast(this.getNodeById(\"8758390115029078427\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fbfL, \"jetbrains.mps.lang.smodelTests.structure.Child\")), ListSequence.fromList(singleChild).first());\n      List<SNode> twins = SNodeOperations.getChildren(SNodeOperations.cast(this.getNodeById(\"5815925154349132137\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, \"jetbrains.mps.lang.smodelTests.structure.Root\")), MetaAdapterFactory.getContainmentLink(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, 0x3dd540b968e9fc7L, \"child_1_n\"));\n      TestUtilities.assertEquals(Sequence.fromArray(new SNode[]{SNodeOperations.cast(this.getNodeById(\"5815925154349132142\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fbfL, \"jetbrains.mps.lang.smodelTests.structure.Child\")), SNodeOperations.cast(this.getNodeById(\"5815925154349132138\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fbfL, \"jetbrains.mps.lang.smodelTests.structure.Child\"))}), twins);\n    }","id":52880,"modified_method":"public void test_childrenByLinkDeclaration() throws Exception {\n      this.addNodeById(\"8758390115029078425\");\n      this.addNodeById(\"5815925154349132136\");\n      this.addNodeById(\"2166349271756548530\");\n      List<SNode> singleChild = SNodeOperations.getChildren(SNodeOperations.cast(this.getNodeById(\"8758390115029078426\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, \"jetbrains.mps.lang.smodelTests.structure.Root\")), MetaAdapterFactory.getContainmentLink(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, 0x3dd540b968e9fc7L, \"child_1_n\"));\n      Assert.assertEquals(1, ListSequence.fromList(singleChild).count());\n      Assert.assertEquals(SNodeOperations.cast(this.getNodeById(\"8758390115029078427\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fbfL, \"jetbrains.mps.lang.smodelTests.structure.Child\")), ListSequence.fromList(singleChild).first());\n      List<SNode> twins = SNodeOperations.getChildren(SNodeOperations.cast(this.getNodeById(\"5815925154349132137\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, \"jetbrains.mps.lang.smodelTests.structure.Root\")), MetaAdapterFactory.getContainmentLink(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, 0x3dd540b968e9fc7L, \"child_1_n\"));\n      TestUtilities.assertEquals(Sequence.fromArray(new SNode[]{SNodeOperations.cast(this.getNodeById(\"5815925154349132142\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fbfL, \"jetbrains.mps.lang.smodelTests.structure.Child\")), SNodeOperations.cast(this.getNodeById(\"5815925154349132138\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fbfL, \"jetbrains.mps.lang.smodelTests.structure.Child\"))}), twins);\n    }","commit_id":"196db06a03c56be05173f5b74e166f2bdc70fc37","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void test_childContainingLinks() throws Exception {\n      this.addNodeById(\"8758390115029078425\");\n      this.addNodeById(\"5815925154349132136\");\n      this.addNodeById(\"2166349271756548530\");\n      TestUtilities.assertEquals(Sequence.fromArray(new SNode[]{SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, 0x3dd540b968e9fc7L, \"child_1_n\")), SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, 0x7a02788de4ab50L, \"childSubConcept_0_n\"))}), ListSequence.fromList(SNodeOperations.getChildren(SNodeOperations.cast(this.getNodeById(\"8758390115029078426\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, \"jetbrains.mps.lang.smodelTests.structure.Root\")))).select(new ISelector<SNode, SNode>() {\n        public SNode select(SNode it) {\n          return SNodeOperations.getContainingLinkDeclaration(it);\n        }\n      }));\n    }","id":52881,"modified_method":"public void test_childContainingLinks() throws Exception {\n      this.addNodeById(\"8758390115029078425\");\n      this.addNodeById(\"5815925154349132136\");\n      this.addNodeById(\"2166349271756548530\");\n      TestUtilities.assertEquals(Sequence.fromArray(new SContainmentLink[]{MetaAdapterFactory.getContainmentLink(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, 0x3dd540b968e9fc7L, \"child_1_n\"), MetaAdapterFactory.getContainmentLink(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, 0x7a02788de4ab50L, \"childSubConcept_0_n\")}), ListSequence.fromList(SNodeOperations.getChildren(SNodeOperations.cast(this.getNodeById(\"8758390115029078426\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, \"jetbrains.mps.lang.smodelTests.structure.Root\")))).select(new ISelector<SNode, SContainmentLink>() {\n        public SContainmentLink select(SNode it) {\n          return it.getContainmentLink();\n        }\n      }));\n    }","commit_id":"196db06a03c56be05173f5b74e166f2bdc70fc37","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void test_childContainingRoles() throws Exception {\n      this.addNodeById(\"8758390115029078425\");\n      this.addNodeById(\"5815925154349132136\");\n      this.addNodeById(\"2166349271756548530\");\n      TestUtilities.assertEquals(Sequence.fromArray(new String[]{SPropertyOperations.getString(SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, 0x3dd540b968e9fc7L, \"child_1_n\")), MetaAdapterFactory.getProperty(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979bd086aL, 0xf98052f333L, \"role\")), SPropertyOperations.getString(SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, 0x7a02788de4ab50L, \"childSubConcept_0_n\")), MetaAdapterFactory.getProperty(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979bd086aL, 0xf98052f333L, \"role\"))}), ListSequence.fromList(SNodeOperations.getChildren(SNodeOperations.cast(this.getNodeById(\"8758390115029078426\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, \"jetbrains.mps.lang.smodelTests.structure.Root\")))).select(new ISelector<SNode, String>() {\n        public String select(SNode it) {\n          return SNodeOperations.getContainingLinkRole(it);\n        }\n      }));\n    }","id":52882,"modified_method":"public void test_childContainingRoles() throws Exception {\n      this.addNodeById(\"8758390115029078425\");\n      this.addNodeById(\"5815925154349132136\");\n      this.addNodeById(\"2166349271756548530\");\n      TestUtilities.assertEquals(Sequence.fromArray(new SContainmentLink[]{MetaAdapterFactory.getContainmentLink(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, 0x3dd540b968e9fc7L, \"child_1_n\"), MetaAdapterFactory.getContainmentLink(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, 0x7a02788de4ab50L, \"childSubConcept_0_n\")}), ListSequence.fromList(SNodeOperations.getChildren(SNodeOperations.cast(this.getNodeById(\"8758390115029078426\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, \"jetbrains.mps.lang.smodelTests.structure.Root\")))).select(new ISelector<SNode, SContainmentLink>() {\n        public SContainmentLink select(SNode it) {\n          return it.getContainmentLink();\n        }\n      }));\n    }","commit_id":"196db06a03c56be05173f5b74e166f2bdc70fc37","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void test_childrenByLinkDeclarationSpecialized() throws Exception {\n      this.addNodeById(\"8758390115029078425\");\n      this.addNodeById(\"5815925154349132136\");\n      this.addNodeById(\"2166349271756548530\");\n      TestUtilities.assertEquals(Sequence.fromArray(new SNode[]{SNodeOperations.cast(this.getNodeById(\"2600026384779198859\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc4L, \"jetbrains.mps.lang.smodelTests.structure.GrandChild\"))}), SNodeOperations.getChildren(SNodeOperations.cast(this.getNodeById(\"8758390115029078430\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x7a02788de4ab4dL, \"jetbrains.mps.lang.smodelTests.structure.ChildSubConcept\")), MetaAdapterFactory.getContainmentLink(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fbfL, 0x3dd540b968e9fc0L, \"grandChild_0_1\")));\n      TestUtilities.assertEquals(Sequence.fromArray(new SNode[]{SNodeOperations.cast(this.getNodeById(\"2600026384779198859\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc4L, \"jetbrains.mps.lang.smodelTests.structure.GrandChild\"))}), SNodeOperations.getChildren(SNodeOperations.cast(this.getNodeById(\"8758390115029078430\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x7a02788de4ab4dL, \"jetbrains.mps.lang.smodelTests.structure.ChildSubConcept\")), SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fbfL, 0x3dd540b968e9fc0L, \"grandChild_0_1\"))));\n    }","id":52883,"modified_method":"public void test_childrenByLinkDeclarationSpecialized() throws Exception {\n      this.addNodeById(\"8758390115029078425\");\n      this.addNodeById(\"5815925154349132136\");\n      this.addNodeById(\"2166349271756548530\");\n      TestUtilities.assertEquals(Sequence.fromArray(new SNode[]{SNodeOperations.cast(this.getNodeById(\"2600026384779198859\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc4L, \"jetbrains.mps.lang.smodelTests.structure.GrandChild\"))}), SNodeOperations.getChildren(SNodeOperations.cast(this.getNodeById(\"8758390115029078430\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x7a02788de4ab4dL, \"jetbrains.mps.lang.smodelTests.structure.ChildSubConcept\")), MetaAdapterFactory.getContainmentLink(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fbfL, 0x3dd540b968e9fc0L, \"grandChild_0_1\")));\n      TestUtilities.assertEquals(Sequence.fromArray(new SNode[]{SNodeOperations.cast(this.getNodeById(\"2600026384779198859\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc4L, \"jetbrains.mps.lang.smodelTests.structure.GrandChild\"))}), SNodeOperations.getChildren(SNodeOperations.cast(this.getNodeById(\"8758390115029078430\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x7a02788de4ab4dL, \"jetbrains.mps.lang.smodelTests.structure.ChildSubConcept\")), MetaAdapterFactory.getContainmentLink(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fbfL, 0x3dd540b968e9fc0L, \"grandChild_0_1\")));\n    }","commit_id":"196db06a03c56be05173f5b74e166f2bdc70fc37","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void test_childrenByLinkDeclarationOnNull() throws Exception {\n      this.addNodeById(\"8758390115029078425\");\n      this.addNodeById(\"5815925154349132136\");\n      this.addNodeById(\"2166349271756548530\");\n      SNode nullNode = null;\n      Assert.assertTrue(ListSequence.fromList(SNodeOperations.getChildren(nullNode, MetaAdapterFactory.getContainmentLink(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, 0x3dd540b968e9fc6L, \"child_0_n\"))).isEmpty());\n      SNode nullLinkDeclaration = null;\n      Assert.assertTrue(ListSequence.fromList(SNodeOperations.getChildren(SNodeOperations.cast(this.getNodeById(\"8758390115029078426\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, \"jetbrains.mps.lang.smodelTests.structure.Root\")), nullLinkDeclaration)).isEmpty());\n    }","id":52884,"modified_method":"public void test_childrenByLinkDeclarationOnNull() throws Exception {\n      this.addNodeById(\"8758390115029078425\");\n      this.addNodeById(\"5815925154349132136\");\n      this.addNodeById(\"2166349271756548530\");\n      SNode nullNode = null;\n      Assert.assertTrue(ListSequence.fromList(SNodeOperations.getChildren(nullNode, MetaAdapterFactory.getContainmentLink(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, 0x3dd540b968e9fc6L, \"child_0_n\"))).isEmpty());\n      SContainmentLink nullLinkDeclaration = null;\n      Assert.assertTrue(ListSequence.fromList(SNodeOperations.getChildren(SNodeOperations.cast(this.getNodeById(\"8758390115029078426\"), MetaAdapterFactory.getConcept(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L, \"jetbrains.mps.lang.smodelTests.structure.Root\")), nullLinkDeclaration)).isEmpty());\n    }","commit_id":"196db06a03c56be05173f5b74e166f2bdc70fc37","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Scope virtual_getProjectStructureScope_3734116213129936182(SNode thisNode, final SAbstractConcept kind) {\n    if (kind == MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0xcdff0e1a96739c2L, \"jetbrains.mps.build.structure.BuildSource_JavaOptions\").getDeclarationNode()) {\n      return ScopeUtil.where(new SimpleRoleScope(SNodeOperations.getParent(thisNode), SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x668c6cfbafacf6f2L, \"parts\")), \"jetbrains.mps.build.structure.BuildSource_JavaOptions\") {\n        @Override\n        public String getName(SNode jo) {\n          String optionsName = SPropertyOperations.getString(SNodeOperations.cast(jo, MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0xcdff0e1a96739c2L, \"jetbrains.mps.build.structure.BuildSource_JavaOptions\")), MetaAdapterFactory.getProperty(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0xcdff0e1a96739c2L, 0xcdff0e1a96739c3L, \"optionsName\"));\n          return ((optionsName == null || optionsName.length() == 0) ? \"<default options>\" : optionsName);\n        }\n      }, new _FunctionTypes._return_P1_E0<Boolean, SNode>() {\n        public Boolean invoke(SNode node) {\n          return isNotEmptyString(SPropertyOperations.getString(SNodeOperations.cast(node, MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0xcdff0e1a96739c2L, \"jetbrains.mps.build.structure.BuildSource_JavaOptions\")), MetaAdapterFactory.getProperty(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0xcdff0e1a96739c2L, 0xcdff0e1a96739c3L, \"optionsName\")));\n        }\n      });\n    }\n\n    if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x668c6cfbafacdc38L, \"jetbrains.mps.build.structure.BuildSource_JavaModule\")) || SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x540febaa6144b873L, \"jetbrains.mps.build.structure.BuildSource_JavaLibrary\"))) {\n      Iterable<DescendantsScope> forAllVisible = Sequence.fromIterable(BuildProject_Behavior.call_getVisibleProjects_1224588814561807665(BuildPlugin_Behavior.call_getProject_1224588814561866657(thisNode), false)).select(new ISelector<SNode, DescendantsScope>() {\n        public DescendantsScope select(SNode it) {\n          return DescendantsScope.forNamedElements(it, MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x668c6cfbafacf6f2L, \"parts\"), kind);\n        }\n      });\n      Iterable<DescendantsScope> forThis = Sequence.<DescendantsScope>singleton(DescendantsScope.forNamedElements(BuildPlugin_Behavior.call_getProject_1224588814561866657(thisNode), MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x668c6cfbafacf6f2L, \"parts\"), kind));\n      return new CompositeScope(Sequence.fromIterable(forAllVisible).concat(Sequence.fromIterable(forThis)).toGenericArray(DescendantsScope.class));\n    }\n\n    return null;\n  }","id":52885,"modified_method":"public static Scope virtual_getProjectStructureScope_3734116213129936182(SNode thisNode, final SAbstractConcept kind) {\n    if (kind == MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0xcdff0e1a96739c2L, \"jetbrains.mps.build.structure.BuildSource_JavaOptions\")) {\n      return ScopeUtil.where(new SimpleRoleScope(SNodeOperations.getParent(thisNode), MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x668c6cfbafacf6f2L, \"parts\"), \"jetbrains.mps.build.structure.BuildSource_JavaOptions\") {\n        @Override\n        public String getName(SNode jo) {\n          String optionsName = SPropertyOperations.getString(SNodeOperations.cast(jo, MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0xcdff0e1a96739c2L, \"jetbrains.mps.build.structure.BuildSource_JavaOptions\")), MetaAdapterFactory.getProperty(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0xcdff0e1a96739c2L, 0xcdff0e1a96739c3L, \"optionsName\"));\n          return ((optionsName == null || optionsName.length() == 0) ? \"<default options>\" : optionsName);\n        }\n      }, new _FunctionTypes._return_P1_E0<Boolean, SNode>() {\n        public Boolean invoke(SNode node) {\n          return isNotEmptyString(SPropertyOperations.getString(SNodeOperations.cast(node, MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0xcdff0e1a96739c2L, \"jetbrains.mps.build.structure.BuildSource_JavaOptions\")), MetaAdapterFactory.getProperty(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0xcdff0e1a96739c2L, 0xcdff0e1a96739c3L, \"optionsName\")));\n        }\n      });\n    }\n\n    if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x668c6cfbafacdc38L, \"jetbrains.mps.build.structure.BuildSource_JavaModule\")) || SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x540febaa6144b873L, \"jetbrains.mps.build.structure.BuildSource_JavaLibrary\"))) {\n      Iterable<DescendantsScope> forAllVisible = Sequence.fromIterable(BuildProject_Behavior.call_getVisibleProjects_1224588814561807665(BuildPlugin_Behavior.call_getProject_1224588814561866657(thisNode), false)).select(new ISelector<SNode, DescendantsScope>() {\n        public DescendantsScope select(SNode it) {\n          return DescendantsScope.forNamedElements(it, MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x668c6cfbafacf6f2L, \"parts\"), kind);\n        }\n      });\n      Iterable<DescendantsScope> forThis = Sequence.<DescendantsScope>singleton(DescendantsScope.forNamedElements(BuildPlugin_Behavior.call_getProject_1224588814561866657(thisNode), MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x668c6cfbafacf6f2L, \"parts\"), kind));\n      return new CompositeScope(Sequence.fromIterable(forAllVisible).concat(Sequence.fromIterable(forThis)).toGenericArray(DescendantsScope.class));\n    }\n\n    return null;\n  }","commit_id":"b01effe2d8cf4423dd15a77bbab40534430c585f","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Scope virtual_getLayoutScope_1224588814561807654(SNode thisNode, SNode kind) {\n    if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getInterfaceConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x23f6fd361bdcfd27L, \"jetbrains.mps.build.structure.BuildSource_CompilablePart\"))) {\n      return DescendantsScope.forNamedElements(BuildPlugin_Behavior.call_getProject_1224588814561866657(thisNode), SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x668c6cfbafacf6f2L, \"parts\")), kind);\n    }\n\n    return null;\n  }","id":52886,"modified_method":"public static Scope virtual_getLayoutScope_1224588814561807654(SNode thisNode, SAbstractConcept kind) {\n    if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getInterfaceConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x23f6fd361bdcfd27L, \"jetbrains.mps.build.structure.BuildSource_CompilablePart\"))) {\n      return DescendantsScope.forNamedElements(BuildPlugin_Behavior.call_getProject_1224588814561866657(thisNode), MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x668c6cfbafacf6f2L, \"parts\"), kind);\n    }\n\n    return null;\n  }","commit_id":"6ecd64d4623c806d2ba8a4e249186befbad3905c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Scope virtual_getProjectStructureScope_3734116213129936182(SNode thisNode, final SNode kind) {\n    if (kind == MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0xcdff0e1a96739c2L, \"jetbrains.mps.build.structure.BuildSource_JavaOptions\").getDeclarationNode()) {\n      return ScopeUtil.where(new SimpleRoleScope(SNodeOperations.getParent(thisNode), SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x668c6cfbafacf6f2L, \"parts\")), \"jetbrains.mps.build.structure.BuildSource_JavaOptions\") {\n        @Override\n        public String getName(SNode jo) {\n          String optionsName = SPropertyOperations.getString(SNodeOperations.cast(jo, MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0xcdff0e1a96739c2L, \"jetbrains.mps.build.structure.BuildSource_JavaOptions\")), MetaAdapterFactory.getProperty(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0xcdff0e1a96739c2L, 0xcdff0e1a96739c3L, \"optionsName\"));\n          return ((optionsName == null || optionsName.length() == 0) ? \"<default options>\" : optionsName);\n        }\n      }, new _FunctionTypes._return_P1_E0<Boolean, SNode>() {\n        public Boolean invoke(SNode node) {\n          return isNotEmptyString(SPropertyOperations.getString(SNodeOperations.cast(node, MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0xcdff0e1a96739c2L, \"jetbrains.mps.build.structure.BuildSource_JavaOptions\")), MetaAdapterFactory.getProperty(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0xcdff0e1a96739c2L, 0xcdff0e1a96739c3L, \"optionsName\")));\n        }\n      });\n    }\n\n    if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x668c6cfbafacdc38L, \"jetbrains.mps.build.structure.BuildSource_JavaModule\")) || SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x540febaa6144b873L, \"jetbrains.mps.build.structure.BuildSource_JavaLibrary\"))) {\n      Iterable<DescendantsScope> forAllVisible = Sequence.fromIterable(BuildProject_Behavior.call_getVisibleProjects_1224588814561807665(BuildPlugin_Behavior.call_getProject_1224588814561866657(thisNode), false)).select(new ISelector<SNode, DescendantsScope>() {\n        public DescendantsScope select(SNode it) {\n          return DescendantsScope.forNamedElements(it, SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x668c6cfbafacf6f2L, \"parts\")), kind);\n        }\n      });\n      Iterable<DescendantsScope> forThis = Sequence.<DescendantsScope>singleton(DescendantsScope.forNamedElements(BuildPlugin_Behavior.call_getProject_1224588814561866657(thisNode), SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x668c6cfbafacf6f2L, \"parts\")), kind));\n      return new CompositeScope(Sequence.fromIterable(forAllVisible).concat(Sequence.fromIterable(forThis)).toGenericArray(DescendantsScope.class));\n    }\n\n    return null;\n  }","id":52887,"modified_method":"public static Scope virtual_getProjectStructureScope_3734116213129936182(SNode thisNode, final SAbstractConcept kind) {\n    if (kind == MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0xcdff0e1a96739c2L, \"jetbrains.mps.build.structure.BuildSource_JavaOptions\").getDeclarationNode()) {\n      return ScopeUtil.where(new SimpleRoleScope(SNodeOperations.getParent(thisNode), SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x668c6cfbafacf6f2L, \"parts\")), \"jetbrains.mps.build.structure.BuildSource_JavaOptions\") {\n        @Override\n        public String getName(SNode jo) {\n          String optionsName = SPropertyOperations.getString(SNodeOperations.cast(jo, MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0xcdff0e1a96739c2L, \"jetbrains.mps.build.structure.BuildSource_JavaOptions\")), MetaAdapterFactory.getProperty(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0xcdff0e1a96739c2L, 0xcdff0e1a96739c3L, \"optionsName\"));\n          return ((optionsName == null || optionsName.length() == 0) ? \"<default options>\" : optionsName);\n        }\n      }, new _FunctionTypes._return_P1_E0<Boolean, SNode>() {\n        public Boolean invoke(SNode node) {\n          return isNotEmptyString(SPropertyOperations.getString(SNodeOperations.cast(node, MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0xcdff0e1a96739c2L, \"jetbrains.mps.build.structure.BuildSource_JavaOptions\")), MetaAdapterFactory.getProperty(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0xcdff0e1a96739c2L, 0xcdff0e1a96739c3L, \"optionsName\")));\n        }\n      });\n    }\n\n    if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x668c6cfbafacdc38L, \"jetbrains.mps.build.structure.BuildSource_JavaModule\")) || SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x540febaa6144b873L, \"jetbrains.mps.build.structure.BuildSource_JavaLibrary\"))) {\n      Iterable<DescendantsScope> forAllVisible = Sequence.fromIterable(BuildProject_Behavior.call_getVisibleProjects_1224588814561807665(BuildPlugin_Behavior.call_getProject_1224588814561866657(thisNode), false)).select(new ISelector<SNode, DescendantsScope>() {\n        public DescendantsScope select(SNode it) {\n          return DescendantsScope.forNamedElements(it, MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x668c6cfbafacf6f2L, \"parts\"), kind);\n        }\n      });\n      Iterable<DescendantsScope> forThis = Sequence.<DescendantsScope>singleton(DescendantsScope.forNamedElements(BuildPlugin_Behavior.call_getProject_1224588814561866657(thisNode), MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x668c6cfbafacf6f2L, \"parts\"), kind));\n      return new CompositeScope(Sequence.fromIterable(forAllVisible).concat(Sequence.fromIterable(forThis)).toGenericArray(DescendantsScope.class));\n    }\n\n    return null;\n  }","commit_id":"6ecd64d4623c806d2ba8a4e249186befbad3905c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Scope virtual_getProjectStructureScope_3734116213129936182(SNode thisNode, SNode kind) {\n    return BuildJavaPlugin_Behavior.virtual_getProjectStructureScope_3734116213129936182(thisNode, kind);\n  }","id":52888,"modified_method":"public Scope virtual_getProjectStructureScope_3734116213129936182(SNode thisNode, SAbstractConcept kind) {\n    return BuildJavaPlugin_Behavior.virtual_getProjectStructureScope_3734116213129936182(thisNode, kind);\n  }","commit_id":"6ecd64d4623c806d2ba8a4e249186befbad3905c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Scope virtual_getLayoutScope_1224588814561807654(SNode thisNode, SNode kind) {\n    return BuildJavaPlugin_Behavior.virtual_getLayoutScope_1224588814561807654(thisNode, kind);\n  }","id":52889,"modified_method":"public Scope virtual_getLayoutScope_1224588814561807654(SNode thisNode, SAbstractConcept kind) {\n    return BuildJavaPlugin_Behavior.virtual_getLayoutScope_1224588814561807654(thisNode, kind);\n  }","commit_id":"6ecd64d4623c806d2ba8a4e249186befbad3905c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Scope virtual_getProjectStructureScope_3734116213129936182(SNode thisNode, final SNode kind) {\n    if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x4780308f5d333ebL, \"jetbrains.mps.build.mps.structure.BuildMps_AbstractModule\")) || SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x5b7be37b4de9bb74L, \"jetbrains.mps.build.mps.structure.BuildMps_IdeaPlugin\")) || SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x14d3fb6fb843ebddL, \"jetbrains.mps.build.mps.structure.BuildMps_Group\"))) {\n      Iterable<DescendantsScope> forAllVisible = Sequence.fromIterable(BuildProject_Behavior.call_getVisibleProjects_1224588814561807665(BuildPlugin_Behavior.call_getProject_1224588814561866657(thisNode), false)).select(new ISelector<SNode, DescendantsScope>() {\n        public DescendantsScope select(SNode it) {\n          return DescendantsScope.forNamedElements(it, SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x668c6cfbafacf6f2L, \"parts\")), kind);\n        }\n      });\n      Iterable<DescendantsScope> forThis = Sequence.<DescendantsScope>singleton(DescendantsScope.forNamedElements(BuildPlugin_Behavior.call_getProject_1224588814561866657(thisNode), SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x668c6cfbafacf6f2L, \"parts\")), kind));\n      return new CompositeScope(Sequence.fromIterable(forAllVisible).concat(Sequence.fromIterable(forThis)).toGenericArray(DescendantsScope.class));\n    }\n    return null;\n  }","id":52890,"modified_method":"public static Scope virtual_getProjectStructureScope_3734116213129936182(SNode thisNode, final SAbstractConcept kind) {\n    if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x4780308f5d333ebL, \"jetbrains.mps.build.mps.structure.BuildMps_AbstractModule\")) || SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x5b7be37b4de9bb74L, \"jetbrains.mps.build.mps.structure.BuildMps_IdeaPlugin\")) || SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x14d3fb6fb843ebddL, \"jetbrains.mps.build.mps.structure.BuildMps_Group\"))) {\n      Iterable<DescendantsScope> forAllVisible = Sequence.fromIterable(BuildProject_Behavior.call_getVisibleProjects_1224588814561807665(BuildPlugin_Behavior.call_getProject_1224588814561866657(thisNode), false)).select(new ISelector<SNode, DescendantsScope>() {\n        public DescendantsScope select(SNode it) {\n          return DescendantsScope.forNamedElements(it, MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x668c6cfbafacf6f2L, \"parts\"), kind);\n        }\n      });\n      Iterable<DescendantsScope> forThis = Sequence.<DescendantsScope>singleton(DescendantsScope.forNamedElements(BuildPlugin_Behavior.call_getProject_1224588814561866657(thisNode), MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x668c6cfbafacf6f2L, \"parts\"), kind));\n      return new CompositeScope(Sequence.fromIterable(forAllVisible).concat(Sequence.fromIterable(forThis)).toGenericArray(DescendantsScope.class));\n    }\n    return null;\n  }","commit_id":"6ecd64d4623c806d2ba8a4e249186befbad3905c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Scope virtual_getLayoutScope_1224588814561807654(SNode thisNode, SNode kind) {\n    if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x4780308f5d333ebL, \"jetbrains.mps.build.mps.structure.BuildMps_AbstractModule\")) || SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x14d3fb6fb843ebddL, \"jetbrains.mps.build.mps.structure.BuildMps_Group\")) || SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x5b7be37b4de9bb74L, \"jetbrains.mps.build.mps.structure.BuildMps_IdeaPlugin\"))) {\n      return DescendantsScope.forNamedElements(BuildPlugin_Behavior.call_getProject_1224588814561866657(thisNode), SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x668c6cfbafacf6f2L, \"parts\")), kind);\n    }\n\n    return null;\n  }","id":52891,"modified_method":"public static Scope virtual_getLayoutScope_1224588814561807654(SNode thisNode, SAbstractConcept kind) {\n    if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x4780308f5d333ebL, \"jetbrains.mps.build.mps.structure.BuildMps_AbstractModule\")) || SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x14d3fb6fb843ebddL, \"jetbrains.mps.build.mps.structure.BuildMps_Group\")) || SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x5b7be37b4de9bb74L, \"jetbrains.mps.build.mps.structure.BuildMps_IdeaPlugin\"))) {\n      return DescendantsScope.forNamedElements(BuildPlugin_Behavior.call_getProject_1224588814561866657(thisNode), MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x668c6cfbafacf6f2L, \"parts\"), kind);\n    }\n\n    return null;\n  }","commit_id":"6ecd64d4623c806d2ba8a4e249186befbad3905c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Scope virtual_getLayoutScope_1224588814561807654(SNode thisNode, SNode kind) {\n    return BuildMPSPlugin_Behavior.virtual_getLayoutScope_1224588814561807654(thisNode, kind);\n  }","id":52892,"modified_method":"public Scope virtual_getLayoutScope_1224588814561807654(SNode thisNode, SAbstractConcept kind) {\n    return BuildMPSPlugin_Behavior.virtual_getLayoutScope_1224588814561807654(thisNode, kind);\n  }","commit_id":"6ecd64d4623c806d2ba8a4e249186befbad3905c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Scope virtual_getProjectStructureScope_3734116213129936182(SNode thisNode, SNode kind) {\n    return BuildMPSPlugin_Behavior.virtual_getProjectStructureScope_3734116213129936182(thisNode, kind);\n  }","id":52893,"modified_method":"public Scope virtual_getProjectStructureScope_3734116213129936182(SNode thisNode, SAbstractConcept kind) {\n    return BuildMPSPlugin_Behavior.virtual_getProjectStructureScope_3734116213129936182(thisNode, kind);\n  }","commit_id":"6ecd64d4623c806d2ba8a4e249186befbad3905c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Scope virtual_getProjectStructureScope_3734116213129936182(SNode thisNode, SNode kind) {\n    return null;\n  }","id":52894,"modified_method":"public static Scope virtual_getProjectStructureScope_3734116213129936182(SNode thisNode, SAbstractConcept kind) {\n    return null;\n  }","commit_id":"6ecd64d4623c806d2ba8a4e249186befbad3905c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Scope virtual_getLayoutScope_1224588814561807654(SNode thisNode, SNode kind) {\n    return null;\n  }","id":52895,"modified_method":"public static Scope virtual_getLayoutScope_1224588814561807654(SNode thisNode, SAbstractConcept kind) {\n    return null;\n  }","commit_id":"6ecd64d4623c806d2ba8a4e249186befbad3905c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Scope virtual_getLayoutScope_1224588814561807654(SNode thisNode, SNode kind) {\n    return BuildPlugin_Behavior.virtual_getLayoutScope_1224588814561807654(thisNode, kind);\n  }","id":52896,"modified_method":"public Scope virtual_getLayoutScope_1224588814561807654(SNode thisNode, SAbstractConcept kind) {\n    return BuildPlugin_Behavior.virtual_getLayoutScope_1224588814561807654(thisNode, kind);\n  }","commit_id":"6ecd64d4623c806d2ba8a4e249186befbad3905c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Scope virtual_getProjectStructureScope_3734116213129936182(SNode thisNode, SNode kind) {\n    return BuildPlugin_Behavior.virtual_getProjectStructureScope_3734116213129936182(thisNode, kind);\n  }","id":52897,"modified_method":"public Scope virtual_getProjectStructureScope_3734116213129936182(SNode thisNode, SAbstractConcept kind) {\n    return BuildPlugin_Behavior.virtual_getProjectStructureScope_3734116213129936182(thisNode, kind);\n  }","commit_id":"6ecd64d4623c806d2ba8a4e249186befbad3905c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Scope call_getScope_1224588814561808649(SNode thisNode, SNode kind, String role) {\n    if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x63a87b9320d0bfc9L, \"jetbrains.mps.build.structure.BuildExternalLayout\"))) {\n      return new ModelPlusImportedScope(SNodeOperations.getModel(thisNode), true, NameUtil.nodeFQName(kind));\n    }\n\n    if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, \"jetbrains.mps.build.structure.BuildProject\"))) {\n      final SNode _this = thisNode;\n      return ScopeUtil.where(new ModelPlusImportedScope(SNodeOperations.getModel(thisNode), true, NameUtil.nodeFQName(kind)), new _FunctionTypes._return_P1_E0<Boolean, SNode>() {\n        public Boolean invoke(SNode n) {\n          return n != _this && !(Sequence.fromIterable(BuildProject_Behavior.call_getVisibleProjects_1224588814561807665(SNodeOperations.cast(n, MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, \"jetbrains.mps.build.structure.BuildProject\")), false)).contains(_this));\n        }\n      });\n    }\n\n    // NOTE: references in project structure and layout should be unordered, thus \n    //       we do not need index/child parameters here \n    if (\"layout\".equals(role)) {\n      if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getInterfaceConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x6b9a2011083f9402L, \"jetbrains.mps.build.structure.BuildSource_FilesetProjectPart\"))) {\n        return DescendantsScope.forNamedElements(thisNode, SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x668c6cfbafacf6f2L, \"parts\")), kind);\n      }\n      for (SNode plugin : ListSequence.fromList(SLinkOperations.getChildren(thisNode, MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x5c3f3e2c1ce9ac70L, \"plugins\")))) {\n        Scope layoutScope = BehaviorReflection.invokeVirtual(Scope.class, plugin, \"virtual_getLayoutScope_1224588814561807654\", new Object[]{kind});\n        if (layoutScope != null) {\n          return layoutScope;\n        }\n      }\n    } else if (\"parts\".equals(role)) {\n      for (SNode plugin : ListSequence.fromList(SLinkOperations.getChildren(thisNode, MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x5c3f3e2c1ce9ac70L, \"plugins\")))) {\n        Scope projectScope = BehaviorReflection.invokeVirtual(Scope.class, plugin, \"virtual_getProjectStructureScope_3734116213129936182\", new Object[]{kind});\n        if (projectScope != null) {\n          return projectScope;\n        }\n      }\n    }\n    return new EmptyScope();\n  }","id":52898,"modified_method":"public static Scope call_getScope_1224588814561808649(SNode thisNode, SAbstractConcept kind, String role) {\n    if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x63a87b9320d0bfc9L, \"jetbrains.mps.build.structure.BuildExternalLayout\"))) {\n      return new ModelPlusImportedScope(SNodeOperations.getModel(thisNode), true, kind.getQualifiedName());\n    }\n\n    if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, \"jetbrains.mps.build.structure.BuildProject\"))) {\n      final SNode _this = thisNode;\n      return ScopeUtil.where(new ModelPlusImportedScope(SNodeOperations.getModel(thisNode), true, kind.getQualifiedName()), new _FunctionTypes._return_P1_E0<Boolean, SNode>() {\n        public Boolean invoke(SNode n) {\n          return n != _this && !(Sequence.fromIterable(BuildProject_Behavior.call_getVisibleProjects_1224588814561807665(SNodeOperations.cast(n, MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, \"jetbrains.mps.build.structure.BuildProject\")), false)).contains(_this));\n        }\n      });\n    }\n\n    // NOTE: references in project structure and layout should be unordered, thus \n    //       we do not need index/child parameters here \n    if (\"layout\".equals(role)) {\n      if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getInterfaceConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x6b9a2011083f9402L, \"jetbrains.mps.build.structure.BuildSource_FilesetProjectPart\"))) {\n        return DescendantsScope.forNamedElements(thisNode, MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x668c6cfbafacf6f2L, \"parts\"), kind);\n      }\n      for (SNode plugin : ListSequence.fromList(SLinkOperations.getChildren(thisNode, MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x5c3f3e2c1ce9ac70L, \"plugins\")))) {\n        Scope layoutScope = BehaviorReflection.invokeVirtual(Scope.class, plugin, \"virtual_getLayoutScope_1224588814561807654\", new Object[]{kind});\n        if (layoutScope != null) {\n          return layoutScope;\n        }\n      }\n    } else if (\"parts\".equals(role)) {\n      for (SNode plugin : ListSequence.fromList(SLinkOperations.getChildren(thisNode, MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x5c3f3e2c1ce9ac70L, \"plugins\")))) {\n        Scope projectScope = BehaviorReflection.invokeVirtual(Scope.class, plugin, \"virtual_getProjectStructureScope_3734116213129936182\", new Object[]{kind});\n        if (projectScope != null) {\n          return projectScope;\n        }\n      }\n    }\n    return new EmptyScope();\n  }","commit_id":"6ecd64d4623c806d2ba8a4e249186befbad3905c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Scope virtual_getScope_7722139651431880752(SNode thisNode, SNode kind, String role, int index) {\n    return BuildProject_Behavior.call_getScope_1224588814561808649(thisNode, kind, role);\n  }","id":52899,"modified_method":"public static Scope virtual_getScope_7722139651431880752(SNode thisNode, SNode kind, String role, int index) {\n    return BuildProject_Behavior.call_getScope_1224588814561808649(thisNode, SNodeOperations.asSConcept(kind), role);\n  }","commit_id":"6ecd64d4623c806d2ba8a4e249186befbad3905c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, final SNode child) {\n    if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a1fL, \"jetbrains.mps.build.structure.BuildMacro\"))) {\n      return BuildProject_Behavior.call_getBuildMacroScope_3767587139141108514(thisNode, child, SetSequence.fromSet(new HashSet<SNode>()));\n    }\n\n    if (child != null) {\n      return BuildProject_Behavior.call_getScope_1224588814561808649(thisNode, kind, SNodeOperations.getContainingLinkRole(child));\n    }\n    return new EmptyScope();\n  }","id":52900,"modified_method":"public static Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, final SNode child) {\n    if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a1fL, \"jetbrains.mps.build.structure.BuildMacro\"))) {\n      return BuildProject_Behavior.call_getBuildMacroScope_3767587139141108514(thisNode, child, SetSequence.fromSet(new HashSet<SNode>()));\n    }\n\n    if (child != null) {\n      return BuildProject_Behavior.call_getScope_1224588814561808649(thisNode, SNodeOperations.asSConcept(kind), SNodeOperations.getContainingLinkRole(child));\n    }\n    return new EmptyScope();\n  }","commit_id":"6ecd64d4623c806d2ba8a4e249186befbad3905c","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public void createNewRow(int index) {\n    int rowCount = getRowCount();\n    assert index <= rowCount;\n    SNode newRowNode = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(SLinkOperations.getTarget(myChildLinkDeclaration, MetaAdapterFactory.getReferenceLink(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979bd086aL, 0xf98055fef0L, \"target\"))));\n    if (index == rowCount) {\n      myParentNode.addChild(SPropertyOperations.getString(myChildLinkDeclaration, MetaAdapterFactory.getProperty(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979bd086aL, 0xf98052f333L, \"role\")), newRowNode);\n    } else {\n      SNodeOperations.insertPrevSiblingChild(MapSequence.fromMap(myRowToNodeMap).get(getRow(index)), newRowNode);\n    }\n  }","id":52901,"modified_method":"@Override\n  public void createNewRow(int index) {\n    int rowCount = getRowCount();\n    assert index <= rowCount;\n    SAbstractConcept concept = myChildLink.getTargetConcept();\n    SNode newRowNode = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(concept));\n    if (index == rowCount) {\n      myParentNode.addChild(myChildLink, newRowNode);\n    } else {\n      SNodeOperations.insertPrevSiblingChild(MapSequence.fromMap(myRowToNodeMap).get(getRow(index)), newRowNode);\n    }\n  }","commit_id":"6ecd64d4623c806d2ba8a4e249186befbad3905c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public ChildrenTableModel(@NotNull SNode parentNode, @NotNull SNode childLinkDeclaration, boolean keepSameSizeRows) {\n    super(keepSameSizeRows);\n    myParentNode = parentNode;\n    myChildLinkDeclaration = childLinkDeclaration;\n  }","id":52902,"modified_method":"public ChildrenTableModel(@NotNull SNode parentNode, @NotNull SContainmentLink childLinkDeclaration, boolean keepSameSizeRows) {\n    super(keepSameSizeRows);\n    myParentNode = parentNode;\n    myChildLink = childLinkDeclaration;\n  }","commit_id":"6ecd64d4623c806d2ba8a4e249186befbad3905c","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public List<TableRow> getRows() {\n    if (myTableRows == null) {\n      myTableRows = ListSequence.fromList(new ArrayList<TableRow>());\n      for (SNode child : ListSequence.fromList(SNodeOperations.getChildren(myParentNode, myChildLinkDeclaration))) {\n        TableRow row = createTableRow(child, ListSequence.fromList(myTableRows).count());\n        ListSequence.fromList(myTableRows).addElement(row);\n        MapSequence.fromMap(myRowToNodeMap).put(row, child);\n      }\n      assert ListSequence.fromList(myTableRows).isNotEmpty();\n    }\n    return myTableRows;\n  }","id":52903,"modified_method":"@Override\n  public List<TableRow> getRows() {\n    if (myTableRows == null) {\n      myTableRows = ListSequence.fromList(new ArrayList<TableRow>());\n      for (SNode child : ListSequence.fromList(SNodeOperations.getChildren(myParentNode, myChildLink))) {\n        TableRow row = createTableRow(child, ListSequence.fromList(myTableRows).count());\n        ListSequence.fromList(myTableRows).addElement(row);\n        MapSequence.fromMap(myRowToNodeMap).put(row, child);\n      }\n      assert ListSequence.fromList(myTableRows).isNotEmpty();\n    }\n    return myTableRows;\n  }","commit_id":"6ecd64d4623c806d2ba8a4e249186befbad3905c","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public void createNewCell(int index) {\n    assert index <= ListSequence.fromList(getChildren()).count();\n    SNode newCellNode = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(SLinkOperations.getTarget(myChildLinkDeclaration, MetaAdapterFactory.getReferenceLink(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979bd086aL, 0xf98055fef0L, \"target\"))));\n    insertNewCell(newCellNode, index);\n  }","id":52904,"modified_method":"@Override\n  public void createNewCell(int index) {\n    assert index <= ListSequence.fromList(getChildren()).count();\n    SAbstractConcept targetConcept = myChildLinkDeclaration.getTargetConcept();\n    SNode newCellNode = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(targetConcept));\n    insertNewCell(newCellNode, index);\n  }","commit_id":"6ecd64d4623c806d2ba8a4e249186befbad3905c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public ChildrenTableRow(@NotNull SNode parentNode, @NotNull SNode childLinkDeclaration, int rowNumber) {\n    super(rowNumber);\n    myParentNode = parentNode;\n    myChildLinkDeclaration = childLinkDeclaration;\n  }","id":52905,"modified_method":"public ChildrenTableRow(@NotNull SNode parentNode, @NotNull SContainmentLink childLinkDeclaration, int rowNumber) {\n    super(rowNumber);\n    myParentNode = parentNode;\n    myChildLinkDeclaration = childLinkDeclaration;\n  }","commit_id":"6ecd64d4623c806d2ba8a4e249186befbad3905c","url":"https://github.com/JetBrains/MPS"},{"original_method":"protected void insertNewCell(SNode newCellNode, int index) {\n    // subclasses may implement this method in a different way \n    if (index == ListSequence.fromList(getChildren()).count()) {\n      myParentNode.addChild(SPropertyOperations.getString(myChildLinkDeclaration, MetaAdapterFactory.getProperty(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979bd086aL, 0xf98052f333L, \"role\")), newCellNode);\n    } else {\n      SNodeOperations.insertPrevSiblingChild(ListSequence.fromList(getChildren()).getElement(index), newCellNode);\n    }\n  }","id":52906,"modified_method":"protected void insertNewCell(SNode newCellNode, int index) {\n    // subclasses may implement this method in a different way \n    if (index == ListSequence.fromList(getChildren()).count()) {\n      myParentNode.addChild(myChildLinkDeclaration, newCellNode);\n    } else {\n      SNodeOperations.insertPrevSiblingChild(ListSequence.fromList(getChildren()).getElement(index), newCellNode);\n    }\n  }","commit_id":"6ecd64d4623c806d2ba8a4e249186befbad3905c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public DescendantsScope(SNode node, SNode link, SNode concept) {\n    this.node = node;\n    this.link = link;\n    this.concept = concept;\n  }","id":52907,"modified_method":"/**\n   * \n   * @deprecated use SContainmentLink variant, remove this after 3.3\n   */\n  @Deprecated\n  public DescendantsScope(SNode node, SNode link, SNode concept) {\n    this.node = node;\n    this.link = MetaAdapterByDeclaration.getContainmentLink(link);\n    this.concept = MetaAdapterByDeclaration.getConcept(concept);\n  }","commit_id":"6ecd64d4623c806d2ba8a4e249186befbad3905c","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public Iterable<SNode> getAvailableElements(@Nullable final String prefix) {\n    Iterable<SNode> seq = ListSequence.fromList(SNodeOperations.getChildren(node, link)).translate(new ITranslator2<SNode, SNode>() {\n      public Iterable<SNode> translate(SNode it) {\n        return SNodeUtil.getDescendants(it, new IsInstanceCondition(concept), true);\n      }\n    });\n    if (prefix == null || prefix.isEmpty()) {\n      return seq;\n    }\n    return Sequence.fromIterable(seq).where(new IWhereFilter<SNode>() {\n      public boolean accept(SNode it) {\n        String name = getName(it);\n        return name != null && name.startsWith(prefix);\n      }\n    });\n  }","id":52908,"modified_method":"@Override\n  public Iterable<SNode> getAvailableElements(@Nullable final String prefix) {\n    Iterable<SNode> seq = ListSequence.fromList(SNodeOperations.getChildren(node, link)).translate(new ITranslator2<SNode, SNode>() {\n      public Iterable<SNode> translate(SNode it) {\n        return SNodeUtil.getDescendants(it, new Condition<SNode>() {\n          public boolean met(SNode n) {\n            return SNodeOperations.isInstanceOf(n, SNodeOperations.asSConcept(concept));\n          }\n        }, true);\n      }\n    });\n    if (prefix == null || prefix.isEmpty()) {\n      return seq;\n    }\n    return Sequence.fromIterable(seq).where(new IWhereFilter<SNode>() {\n      public boolean accept(SNode it) {\n        String name = getName(it);\n        return name != null && name.startsWith(prefix);\n      }\n    });\n  }","commit_id":"6ecd64d4623c806d2ba8a4e249186befbad3905c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static DescendantsScope forNamedElements(SNode node, SNode link, SNode concept) {\n    return new DescendantsScope(node, link, concept) {\n      @Override\n      public String getName(SNode child) {\n        if (!(SNodeOperations.isInstanceOf(child, MetaAdapterFactory.getInterfaceConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, \"jetbrains.mps.lang.core.structure.INamedConcept\")))) {\n          return child.getPresentation();\n        }\n        return SPropertyOperations.getString(SNodeOperations.cast(child, MetaAdapterFactory.getInterfaceConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, \"jetbrains.mps.lang.core.structure.INamedConcept\")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\"));\n      }\n    };\n  }","id":52909,"modified_method":"/**\n   * \n   * @deprecated use SContainmentLink variant, remove this after 3.3\n   */\n  @Deprecated\n  public static DescendantsScope forNamedElements(SNode node, SNode link, SNode concept) {\n    return new DescendantsScope(node, link, concept) {\n      @Override\n      public String getName(SNode child) {\n        if (!(SNodeOperations.isInstanceOf(child, MetaAdapterFactory.getInterfaceConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, \"jetbrains.mps.lang.core.structure.INamedConcept\")))) {\n          return child.getPresentation();\n        }\n        return SPropertyOperations.getString(SNodeOperations.cast(child, MetaAdapterFactory.getInterfaceConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, \"jetbrains.mps.lang.core.structure.INamedConcept\")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\"));\n      }\n    };\n  }","commit_id":"6ecd64d4623c806d2ba8a4e249186befbad3905c","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n    public void testMethodImpl() throws Exception {\n      final Editor editor = TestBody.this.initEditor(\"141381309807688262\", \"141381309807688282\");\n      EditorComponent editorComponent = (EditorComponent) editor.getCurrentEditorComponent();\n      Mapper descendantMapper;\n      final Wrappers._T<SNode> node = new Wrappers._T<SNode>();\n      ModelAccess.instance().runReadAction(new Runnable() {\n        public void run() {\n          node.value = SNodeOperations.cast(TestBody.this.getNodeById(\"141381309807688263\"), \"jetbrains.mps.lang.editor.diagram.testLanguage.structure.NodeWithName\");\n        }\n      });\n      descendantMapper = DecoratorTestRunner.prepareAndGetMapper(node.value, editorComponent, BlockCell.class);\n      Assert.assertTrue(descendantMapper != null);\n      Assert.assertTrue(descendantMapper.getTarget() != null && descendantMapper.getTarget() instanceof NodeDecoratorView);\n      NodeDecoratorView nodeDecoratorView = ((NodeDecoratorView) descendantMapper.getTarget());\n      Assert.assertTrue(nodeDecoratorView.hasError.get());\n      View errorView = Sequence.fromIterable(JetpadUtils.getAllChildren(nodeDecoratorView)).findFirst(new IWhereFilter<View>() {\n        public boolean accept(View it) {\n          return it instanceof SelectionFrameView;\n        }\n      });\n      Assert.assertTrue(errorView != null && errorView.visible().get());\n\n\n    }","id":52910,"modified_method":"@Override\n    public void testMethodImpl() throws Exception {\n      final Editor editor = TestBody.this.initEditor(\"141381309807688262\", \"141381309807688282\");\n      EditorComponent editorComponent = (EditorComponent) editor.getCurrentEditorComponent();\n      Mapper descendantMapper;\n      final Wrappers._T<SNode> node = new Wrappers._T<SNode>();\n      ModelAccess.instance().runReadAction(new Runnable() {\n        public void run() {\n          node.value = SNodeOperations.cast(TestBody.this.getNodeById(\"141381309807688263\"), \"jetbrains.mps.lang.editor.diagram.testLanguage.structure.NodeWithName\");\n        }\n      });\n      descendantMapper = DecoratorTestRunner.prepareAndGetMapper(node.value, editorComponent, BlockCell.class);\n      Assert.assertTrue(descendantMapper != null);\n      Assert.assertTrue(descendantMapper.getTarget() != null);\n      Assert.assertTrue(descendantMapper.getTarget() instanceof NodeDecoratorView);\n      NodeDecoratorView nodeDecoratorView = ((NodeDecoratorView) descendantMapper.getTarget());\n      Assert.assertTrue(nodeDecoratorView.hasError.get());\n      View errorView = Sequence.fromIterable(JetpadUtils.getAllChildren(nodeDecoratorView)).findFirst(new IWhereFilter<View>() {\n        public boolean accept(View it) {\n          return it instanceof SelectionFrameView;\n        }\n      });\n      Assert.assertTrue(errorView != null);\n      Assert.assertTrue(errorView.visible().get());\n\n\n    }","commit_id":"7fdea6d416e62a9ba24d068853440ac25f04b6dc","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n    public void testMethodImpl() throws Exception {\n      final Editor editor = TestBody.this.initEditor(\"83003444452611280\", \"83003444452611284\");\n      final EditorComponent editorComponent = (EditorComponent) editor.getCurrentEditorComponent();\n      final Wrappers._T<Mapper> descendantMapper = new Wrappers._T<Mapper>();\n      ModelAccess.instance().runReadAction(new Runnable() {\n        public void run() {\n          descendantMapper.value = DecoratorTestRunner.getMapper(SNodeOperations.cast(TestBody.this.getNodeById(\"83003444452611281\"), \"jetbrains.mps.lang.editor.diagram.testLanguage.structure.NodeWithName\"), editorComponent);\n        }\n      });\n\n      Assert.assertTrue(descendantMapper.value != null);\n      Assert.assertTrue(descendantMapper.value.getTarget() != null && descendantMapper.value.getTarget() instanceof NodeDecoratorView);\n      Assert.assertFalse(((NodeDecoratorView) descendantMapper.value.getTarget()).hasError.get());\n    }","id":52911,"modified_method":"@Override\n    public void testMethodImpl() throws Exception {\n      final Editor editor = TestBody.this.initEditor(\"83003444452611280\", \"83003444452611284\");\n      final EditorComponent editorComponent = (EditorComponent) editor.getCurrentEditorComponent();\n      final Wrappers._T<Mapper> descendantMapper = new Wrappers._T<Mapper>();\n      ModelAccess.instance().runReadAction(new Runnable() {\n        public void run() {\n          descendantMapper.value = DecoratorTestRunner.getMapper(SNodeOperations.cast(TestBody.this.getNodeById(\"83003444452611281\"), \"jetbrains.mps.lang.editor.diagram.testLanguage.structure.NodeWithName\"), editorComponent);\n        }\n      });\n\n      Assert.assertTrue(descendantMapper.value != null);\n      Assert.assertTrue(descendantMapper.value.getTarget() != null);\n      Assert.assertTrue(descendantMapper.value.getTarget() instanceof NodeDecoratorView);\n      Assert.assertFalse(((NodeDecoratorView) descendantMapper.value.getTarget()).hasError.get());\n    }","commit_id":"7fdea6d416e62a9ba24d068853440ac25f04b6dc","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void updateCross(Vector position, int length) {\n    if (position == null) {\n      visible().set(false);\n      return;\n    }\n    myFirstLine.start().set(new Vector(position.x - length, position.y - length));\n    myFirstLine.end().set(new Vector(position.x + length, position.y + length));\n    mySecondLine.start().set(new Vector(position.x + length, position.y - length));\n    mySecondLine.end().set(new Vector(position.x - length, position.y + length));\n  }","id":52912,"modified_method":"private void updateCross(Vector position, int length) {\n    if (position == null) {\n      setVisible(false);\n      return;\n    } else {\n      setVisible(true);\n    }\n    myFirstLine.start().set(new Vector(position.x - length, position.y - length));\n    myFirstLine.end().set(new Vector(position.x + length, position.y + length));\n    mySecondLine.start().set(new Vector(position.x + length, position.y - length));\n    mySecondLine.end().set(new Vector(position.x - length, position.y + length));\n  }","commit_id":"7fdea6d416e62a9ba24d068853440ac25f04b6dc","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Mapper prepareAndGetMapper(final SNode node, final EditorComponent editorComponent, final Class cellClass) throws InterruptedException, InvocationTargetException {\n    SwingUtilities.invokeAndWait(new Runnable() {\n      public void run() {\n        ModelAccess.instance().runReadAction(new Runnable() {\n          public void run() {\n            editorComponent.getHighlightManager().mark(new ModelProblemMessage(node, MessageStatus.ERROR, null, \"error\", new EditorMessageOwner() {}));\n            editorComponent.getHighlightManager().repaintAndRebuildEditorMessages();\n          }\n        });\n      }\n    });\n    SwingUtilities.invokeAndWait(new Runnable() {\n      public void run() {\n        EditorCell portCell = CellFinderUtil.findChildByClass(editorComponent.getRootCell(), cellClass, true);\n        if (portCell instanceof AbstractJetpadCell) {\n          ((AbstractJetpadCell) portCell).paint(null, new ParentSettings());\n        }\n      }\n    });\n    return getMapper(node, editorComponent);\n  }","id":52913,"modified_method":"public static Mapper prepareAndGetMapper(final SNode node, final EditorComponent editorComponent, final Class cellClass) throws InterruptedException, InvocationTargetException {\n    SwingUtilities.invokeAndWait(new Runnable() {\n      public void run() {\n        editorComponent.getHighlightManager().mark(new ModelProblemMessage(node, MessageStatus.ERROR, null, \"error\", new EditorMessageOwner() {}));\n        editorComponent.getHighlightManager().repaintAndRebuildEditorMessages();\n      }\n    });\n    SwingUtilities.invokeAndWait(new Runnable() {\n      public void run() {\n        EditorCell cell = CellFinderUtil.findChildByClass(editorComponent.getRootCell(), cellClass, true);\n        if (cell instanceof AbstractJetpadCell) {\n          ((AbstractJetpadCell) cell).paint(null, new ParentSettings());\n        }\n      }\n    });\n    return getMapper(node, editorComponent);\n  }","commit_id":"7fdea6d416e62a9ba24d068853440ac25f04b6dc","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n    public void testMethodImpl() throws Exception {\n      final Editor editor = TestBody.this.initEditor(\"1638882350373488135\", \"1560508619093517333\");\n      EditorComponent editorComponent = (EditorComponent) editor.getCurrentEditorComponent();\n      final Wrappers._T<SNode> node = new Wrappers._T<SNode>();\n      ModelAccess.instance().runReadAction(new Runnable() {\n        public void run() {\n          node.value = SNodeOperations.cast(TestBody.this.getNodeById(\"1638882350373488142\"), \"jetbrains.mps.lang.editor.diagram.testLanguage.structure.OutputToInputPortConnector\");\n        }\n      });\n      Mapper descendantMapper;\n      descendantMapper = DecoratorTestRunner.prepareAndGetMapper(node.value, editorComponent, ConnectorCell.class);\n      Assert.assertTrue(descendantMapper != null);\n      Assert.assertTrue(descendantMapper.getTarget() != null && descendantMapper.getTarget() instanceof ConnectorDecoratorView);\n      ConnectorDecoratorView connectorDecoratorView = (ConnectorDecoratorView) descendantMapper.getTarget();\n      Assert.assertTrue(connectorDecoratorView.hasError.get());\n      View cross = Sequence.fromIterable(JetpadUtils.getAllChildren(connectorDecoratorView)).findFirst(new IWhereFilter<View>() {\n        public boolean accept(View it) {\n          return it instanceof CrossView;\n        }\n      });\n      Assert.assertTrue(cross != null && cross.visible().get());\n\n    }","id":52914,"modified_method":"@Override\n    public void testMethodImpl() throws Exception {\n      final Editor editor = TestBody.this.initEditor(\"1638882350373488135\", \"1560508619093517333\");\n      EditorComponent editorComponent = (EditorComponent) editor.getCurrentEditorComponent();\n      final Wrappers._T<SNode> node = new Wrappers._T<SNode>();\n      ModelAccess.instance().runReadAction(new Runnable() {\n        public void run() {\n          node.value = SNodeOperations.cast(TestBody.this.getNodeById(\"1638882350373488142\"), \"jetbrains.mps.lang.editor.diagram.testLanguage.structure.OutputToInputPortConnector\");\n        }\n      });\n      Mapper descendantMapper;\n      descendantMapper = DecoratorTestRunner.prepareAndGetMapper(node.value, editorComponent, ConnectorCell.class);\n      Assert.assertTrue(descendantMapper != null);\n      Assert.assertTrue(descendantMapper.getTarget() != null);\n      Assert.assertTrue(descendantMapper.getTarget() instanceof ConnectorDecoratorView);\n      ConnectorDecoratorView connectorDecoratorView = (ConnectorDecoratorView) descendantMapper.getTarget();\n      Assert.assertTrue(connectorDecoratorView.hasError.get());\n      View cross = Sequence.fromIterable(JetpadUtils.getAllChildren(connectorDecoratorView)).findFirst(new IWhereFilter<View>() {\n        public boolean accept(View it) {\n          return it instanceof CrossView;\n        }\n      });\n      Assert.assertTrue(cross != null);\n      Assert.assertTrue(cross.visible().get());\n\n    }","commit_id":"7fdea6d416e62a9ba24d068853440ac25f04b6dc","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n    public void testMethodImpl() throws Exception {\n      final Editor editor = TestBody.this.initEditor(\"83003444452668150\", \"83003444452668142\");\n      final EditorComponent editorComponent = (EditorComponent) editor.getCurrentEditorComponent();\n      final Wrappers._T<Mapper> descendantMapper = new Wrappers._T<Mapper>();\n      ModelAccess.instance().runReadAction(new Runnable() {\n        public void run() {\n          descendantMapper.value = DecoratorTestRunner.getMapper(SNodeOperations.cast(TestBody.this.getNodeById(\"1560508619093671384\"), \"jetbrains.mps.lang.editor.diagram.testLanguage.structure.OutputToInputPortConnector\"), editorComponent);\n        }\n      });\n      Assert.assertTrue(descendantMapper.value != null);\n      Assert.assertTrue(descendantMapper.value.getTarget() != null && descendantMapper.value.getTarget() instanceof ConnectorDecoratorView);\n      Assert.assertFalse(((ConnectorDecoratorView) descendantMapper.value.getTarget()).hasError.get());\n    }","id":52915,"modified_method":"@Override\n    public void testMethodImpl() throws Exception {\n      final Editor editor = TestBody.this.initEditor(\"83003444452668150\", \"83003444452668142\");\n      final EditorComponent editorComponent = (EditorComponent) editor.getCurrentEditorComponent();\n      final Wrappers._T<Mapper> descendantMapper = new Wrappers._T<Mapper>();\n      ModelAccess.instance().runReadAction(new Runnable() {\n        public void run() {\n          descendantMapper.value = DecoratorTestRunner.getMapper(SNodeOperations.cast(TestBody.this.getNodeById(\"1560508619093671384\"), \"jetbrains.mps.lang.editor.diagram.testLanguage.structure.OutputToInputPortConnector\"), editorComponent);\n        }\n      });\n      Assert.assertTrue(descendantMapper.value != null);\n      Assert.assertTrue(descendantMapper.value.getTarget() != null);\n      Assert.assertTrue(descendantMapper.value.getTarget() instanceof ConnectorDecoratorView);\n      Assert.assertFalse(((ConnectorDecoratorView) descendantMapper.value.getTarget()).hasError.get());\n    }","commit_id":"7fdea6d416e62a9ba24d068853440ac25f04b6dc","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n    public void testMethodImpl() throws Exception {\n      final Editor editor = TestBody.this.initEditor(\"1560508619094015368\", \"1560508619094015372\");\n      EditorComponent editorComponent = (EditorComponent) editor.getCurrentEditorComponent();\n      final Wrappers._T<SNode> node = new Wrappers._T<SNode>();\n      ModelAccess.instance().runReadAction(new Runnable() {\n        public void run() {\n          node.value = SNodeOperations.cast(TestBody.this.getNodeById(\"1560508619094050075\"), \"jetbrains.mps.lang.editor.diagram.testLanguage.structure.InputPort\");\n        }\n      });\n\n      Mapper descendantMapper;\n      descendantMapper = DecoratorTestRunner.prepareAndGetMapper(node.value, editorComponent, PortCell.class);\n\n      Assert.assertTrue(descendantMapper != null);\n      Assert.assertTrue(descendantMapper.getTarget() != null && descendantMapper.getTarget() instanceof PortDecoratorView);\n      PortDecoratorView portDecoratorView = ((PortDecoratorView) descendantMapper.getTarget());\n      Assert.assertTrue(portDecoratorView.hasError.get());\n      View errorView = Sequence.fromIterable(JetpadUtils.getAllChildren(portDecoratorView)).findFirst(new IWhereFilter<View>() {\n        public boolean accept(View it) {\n          return it instanceof SelectionFrameView;\n        }\n      });\n      Assert.assertTrue(errorView != null && errorView.visible().get());\n\n\n    }","id":52916,"modified_method":"@Override\n    public void testMethodImpl() throws Exception {\n      final Editor editor = TestBody.this.initEditor(\"1560508619094015368\", \"1560508619094015372\");\n      EditorComponent editorComponent = (EditorComponent) editor.getCurrentEditorComponent();\n      final Wrappers._T<SNode> node = new Wrappers._T<SNode>();\n      ModelAccess.instance().runReadAction(new Runnable() {\n        public void run() {\n          node.value = SNodeOperations.cast(TestBody.this.getNodeById(\"1560508619094050075\"), \"jetbrains.mps.lang.editor.diagram.testLanguage.structure.InputPort\");\n        }\n      });\n\n      Mapper descendantMapper;\n      descendantMapper = DecoratorTestRunner.prepareAndGetMapper(node.value, editorComponent, PortCell.class);\n\n      Assert.assertTrue(descendantMapper != null);\n      Assert.assertTrue(descendantMapper.getTarget() != null);\n      Assert.assertTrue(descendantMapper.getTarget() instanceof PortDecoratorView);\n      PortDecoratorView portDecoratorView = ((PortDecoratorView) descendantMapper.getTarget());\n      Assert.assertTrue(portDecoratorView.hasError.get());\n      View errorView = Sequence.fromIterable(JetpadUtils.getAllChildren(portDecoratorView)).findFirst(new IWhereFilter<View>() {\n        public boolean accept(View it) {\n          return it instanceof SelectionFrameView;\n        }\n      });\n      Assert.assertTrue(errorView != null);\n      Assert.assertTrue(errorView.visible().get());\n\n\n    }","commit_id":"7fdea6d416e62a9ba24d068853440ac25f04b6dc","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n    public void testMethodImpl() throws Exception {\n      final Editor editor = TestBody.this.initEditor(\"1560508619094462935\", \"1560508619094462940\");\n      final EditorComponent editorComponent = (EditorComponent) editor.getCurrentEditorComponent();\n      final Wrappers._T<Mapper> descendantMapper = new Wrappers._T<Mapper>();\n      ModelAccess.instance().runReadAction(new Runnable() {\n        public void run() {\n          descendantMapper.value = DecoratorTestRunner.getMapper(SNodeOperations.cast(TestBody.this.getNodeById(\"1560508619094462938\"), \"jetbrains.mps.lang.editor.diagram.testLanguage.structure.InputPort\"), editorComponent);\n        }\n      });\n      Assert.assertTrue(descendantMapper.value != null);\n      Assert.assertTrue(descendantMapper.value.getTarget() != null && descendantMapper.value.getTarget() instanceof PortDecoratorView);\n      Assert.assertFalse(((PortDecoratorView) descendantMapper.value.getTarget()).hasError.get());\n\n    }","id":52917,"modified_method":"@Override\n    public void testMethodImpl() throws Exception {\n      final Editor editor = TestBody.this.initEditor(\"1560508619094462935\", \"1560508619094462940\");\n      final EditorComponent editorComponent = (EditorComponent) editor.getCurrentEditorComponent();\n      final Wrappers._T<Mapper> descendantMapper = new Wrappers._T<Mapper>();\n      ModelAccess.instance().runReadAction(new Runnable() {\n        public void run() {\n          descendantMapper.value = DecoratorTestRunner.getMapper(SNodeOperations.cast(TestBody.this.getNodeById(\"1560508619094462938\"), \"jetbrains.mps.lang.editor.diagram.testLanguage.structure.InputPort\"), editorComponent);\n        }\n      });\n      Assert.assertTrue(descendantMapper.value != null);\n      Assert.assertTrue(descendantMapper.value.getTarget() != null);\n      Assert.assertTrue(descendantMapper.value.getTarget() instanceof PortDecoratorView);\n      Assert.assertFalse(((PortDecoratorView) descendantMapper.value.getTarget()).hasError.get());\n\n    }","commit_id":"7fdea6d416e62a9ba24d068853440ac25f04b6dc","url":"https://github.com/JetBrains/MPS"},{"original_method":"public RunResult<T> execute() {\n    final RunResult<T> result = new RunResult<T>();\n\n    if (canWriteNow()) {\n      executeCommand(result);\n      return result;\n    }\n\n    try {\n      if (EventQueue.isDispatchThread()) {\n        getApplication().runWriteAction(new Runnable() {\n          public void run() {\n            executeCommand(result);\n          }\n        });\n      } else {\n        SwingUtilities.invokeAndWait(new Runnable() {\n          public void run() {\n            getApplication().runWriteAction(new Runnable() {\n              public void run() {\n                executeCommand(result);\n              }\n            });\n          }\n        });\n      }\n    } catch (Exception e) {\n      throw new Error(e);\n    }\n    return result;\n  }","id":52918,"modified_method":"public RunResult<T> execute() {\n    final RunResult<T> result = new RunResult<T>();\n\n    if (canWriteNow()) {\n      executeCommand(result);\n      return result;\n    }\n\n    try {\n      if (EventQueue.isDispatchThread()) {\n        performWriteCommandAction(result);\n      } else {\n        SwingUtilities.invokeAndWait(new Runnable() {\n          public void run() {\n            performWriteCommandAction(result);\n          }\n        });\n      }\n    } catch (Exception e) {\n      throw new Error(e);\n    }\n    return result;\n  }","commit_id":"bcf7f43fa516fa7cb7e23bb9f92e889c9a394082","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static boolean migrate(final Project project) throws Exception {\n    MigrationManager m = ProjectHelper.toIdeaProject(project).getComponent(MigrationManager.class);\n    if (!(m.isMigrationRequired())) {\n      return false;\n    }\n\n    while (true) {\n      // we don't know which options are \"better\" so we \"select\" no one \n      MigrationManager.MigrationStep step = m.nextProjectStep(MapSequence.fromMap(new HashMap<ProjectMigrationWithOptions.Option, Object>()), true);\n      if (step == null) {\n        break;\n      }\n      if (!(step.execute())) {\n        throw new Exception(\"Problem on executing cleanup migrations\");\n      }\n    }\n\n    List<ScriptApplied.ScriptAppliedReference> missingMigrations = m.getMissingMigrations();\n    if (ListSequence.fromList(missingMigrations).isNotEmpty()) {\n      throw new Exception(\"Some migrations are missing\");\n    }\n\n    final Wrappers._boolean ok = new Wrappers._boolean(true);\n    project.getRepository().getModelAccess().runReadAction(new Runnable() {\n      public void run() {\n        Iterable<SModule> modules = MigrationsUtil.getMigrateableModulesFromProject(project);\n        ok.value = !(MigrationCheckUtil.haveProblems(modules, true, new _FunctionTypes._void_P1_E0<Double>() {\n          public void invoke(Double fraction) {\n          }\n        }));\n      }\n    });\n    if (!(ok.value)) {\n      throw new Exception(\"Pre-check failed\");\n    }\n\n    while (true) {\n      MigrationManager.MigrationStep step = m.nextProjectStep(MapSequence.fromMap(new HashMap<ProjectMigrationWithOptions.Option, Object>()), false);\n      if (step == null) {\n        break;\n      }\n      if (!(step.execute())) {\n        throw new Exception(\"Problem on executing project migrations\");\n      }\n    }\n\n    while (true) {\n      MigrationManager.MigrationStep step = m.nextModuleStep();\n      if (step == null) {\n        break;\n      }\n      if (!(step.execute())) {\n        throw new Exception(\"Problem on executing language migrations\");\n      }\n    }\n\n    project.getRepository().getModelAccess().runWriteInEDT(new Runnable() {\n      public void run() {\n        project.getRepository().saveAll();\n      }\n    });\n\n    project.getRepository().getModelAccess().runReadAction(new Runnable() {\n      public void run() {\n        Iterable<SModule> modules = MigrationsUtil.getMigrateableModulesFromProject(project);\n        ok.value = MigrationCheckUtil.haveProblems(modules, true, new _FunctionTypes._void_P1_E0<Double>() {\n          public void invoke(Double fraction) {\n          }\n        });\n      }\n    });\n    if (!(ok.value)) {\n      throw new Exception(\"Post-check failed\");\n    }\n\n    return true;\n  }","id":52919,"modified_method":"public static boolean migrate(final Project project) throws Exception {\n    final MigrationManager m = ProjectHelper.toIdeaProject(project).getComponent(MigrationManager.class);\n    if (!(m.isMigrationRequired())) {\n      return false;\n    }\n\n    final Wrappers._boolean ok = new Wrappers._boolean(true);\n    project.getRepository().getModelAccess().executeCommand(new Runnable() {\n      public void run() {\n        while (true) {\n          // we don't know which options are \"better\" so we \"select\" no one \n          MigrationManager.MigrationStep step = m.nextProjectStep(MapSequence.fromMap(new HashMap<ProjectMigrationWithOptions.Option, Object>()), true);\n          if (step == null) {\n            break;\n          }\n          if (!(step.execute())) {\n            throw new RuntimeException(\"Problem on executing cleanup migrations\");\n          }\n        }\n\n        List<ScriptApplied.ScriptAppliedReference> missingMigrations = m.getMissingMigrations();\n        if (ListSequence.fromList(missingMigrations).isNotEmpty()) {\n          throw new RuntimeException(\"Some migrations are missing\");\n        }\n\n        Iterable<SModule> modules = MigrationsUtil.getMigrateableModulesFromProject(project);\n        ok.value = !(MigrationCheckUtil.haveProblems(modules, true, new _FunctionTypes._void_P1_E0<Double>() {\n          public void invoke(Double fraction) {\n          }\n        }));\n\n        if (!(ok.value)) {\n          throw new RuntimeException(\"Pre-check failed\");\n        }\n\n        while (true) {\n          MigrationManager.MigrationStep step = m.nextProjectStep(MapSequence.fromMap(new HashMap<ProjectMigrationWithOptions.Option, Object>()), false);\n          if (step == null) {\n            break;\n          }\n          if (!(step.execute())) {\n            throw new RuntimeException(\"Problem on executing project migrations\");\n          }\n        }\n\n        while (true) {\n          MigrationManager.MigrationStep step = m.nextModuleStep();\n          if (step == null) {\n            break;\n          }\n          if (!(step.execute())) {\n            throw new RuntimeException(\"Problem on executing language migrations\");\n          }\n        }\n      }\n    });\n\n    project.getRepository().getModelAccess().runWriteInEDT(new Runnable() {\n      public void run() {\n        project.getRepository().saveAll();\n      }\n    });\n\n    project.getRepository().getModelAccess().runReadAction(new Runnable() {\n      public void run() {\n        Iterable<SModule> modules = MigrationsUtil.getMigrateableModulesFromProject(project);\n        ok.value = MigrationCheckUtil.haveProblems(modules, true, new _FunctionTypes._void_P1_E0<Double>() {\n          public void invoke(Double fraction) {\n          }\n        });\n      }\n    });\n    if (!(ok.value)) {\n      throw new RuntimeException(\"Post-check failed\");\n    }\n\n    return true;\n  }","commit_id":"58d79c69c47e5f635873c05dcac57eb25593dd7f","url":"https://github.com/JetBrains/MPS"},{"original_method":"public MigrationManager.MigrationStep nextProjectStep(Map<ProjectMigrationWithOptions.Option, Object> options, boolean cleanup) {\n    ProjectMigration current = next(lastProjectMigration, cleanup);\n\n    while (current != null && !(current.shouldBeExecuted(myMpsMproject))) {\n      current = next(current, cleanup);\n    }\n\n    if (current == null) {\n      return null;\n    }\n\n    lastProjectMigration = current;\n    if (current instanceof ProjectMigrationWithOptions) {\n      ((ProjectMigrationWithOptions) current).setOptionValues(options);\n    }\n\n    final ProjectMigration cc = current;\n    return new MigrationManager.MigrationStep() {\n      public String getDescription() {\n        return cc.getDescription();\n      }\n      public boolean execute() {\n        try {\n          myMpsMproject.getRepository().getModelAccess().executeCommand(new Runnable() {\n            public void run() {\n              cc.execute(myMpsMproject);\n            }\n          });\n        } catch (Throwable e) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Could not execute script\", e);\n          }\n          return false;\n        }\n        return true;\n      }\n\n      public void forceExecutionNextTime() {\n        if (!((cc instanceof CleanupProjectMigration))) {\n          throw new UnsupportedOperationException(\"only supported for cleanup project migrations\");\n        }\n        ((CleanupProjectMigration) cc).forceExecutionNextTime(myMpsMproject);\n      }\n    };\n  }","id":52920,"modified_method":"public MigrationManager.MigrationStep nextProjectStep(Map<ProjectMigrationWithOptions.Option, Object> options, boolean cleanup) {\n    ProjectMigration current = next(lastProjectMigration, cleanup);\n\n    while (current != null && !(current.shouldBeExecuted(myMpsMproject))) {\n      current = next(current, cleanup);\n    }\n\n    if (current == null) {\n      return null;\n    }\n\n    lastProjectMigration = current;\n    if (current instanceof ProjectMigrationWithOptions) {\n      ((ProjectMigrationWithOptions) current).setOptionValues(options);\n    }\n\n    final ProjectMigration cc = current;\n    return new MigrationManager.MigrationStep() {\n      public String getDescription() {\n        return cc.getDescription();\n      }\n      public boolean execute() {\n        try {\n          cc.execute(myMpsMproject);\n        } catch (Throwable e) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Could not execute script\", e);\n          }\n          return false;\n        }\n        return true;\n      }\n\n      public void forceExecutionNextTime() {\n        if (!((cc instanceof CleanupProjectMigration))) {\n          throw new UnsupportedOperationException(\"only supported for cleanup project migrations\");\n        }\n        ((CleanupProjectMigration) cc).forceExecutionNextTime(myMpsMproject);\n      }\n    };\n  }","commit_id":"58d79c69c47e5f635873c05dcac57eb25593dd7f","url":"https://github.com/JetBrains/MPS"},{"original_method":"public MigrationManager.MigrationStep nextModuleStep() {\n    final Wrappers._T<MigrationManager.MigrationStep> result = new Wrappers._T<MigrationManager.MigrationStep>(null);\n    myMpsMproject.getRepository().getModelAccess().runReadAction(new _Adapters._return_P0_E0_to_Runnable_adapter(new _FunctionTypes._return_P0_E0<MigrationManager.MigrationStep>() {\n      public MigrationManager.MigrationStep invoke() {\n        return result.value = Sequence.fromIterable(MigrationsUtil.getMigrateableModulesFromProject(ProjectHelper.toMPSProject(myProject))).translate(new ITranslator2<SModule, ScriptApplied.ScriptAppliedReference>() {\n          public Iterable<ScriptApplied.ScriptAppliedReference> translate(SModule module) {\n            return MigrationsUtil.getAllSteps(module);\n          }\n        }).select(new ISelector<ScriptApplied.ScriptAppliedReference, ScriptApplied>() {\n          public ScriptApplied select(ScriptApplied.ScriptAppliedReference it) {\n            return it.resolve(myMigrationComponent, false);\n          }\n        }).where(new IWhereFilter<ScriptApplied>() {\n          public boolean accept(ScriptApplied it) {\n            return it != null && Sequence.fromIterable(it.getDependencies()).where(new IWhereFilter<ScriptApplied.ScriptAppliedReference>() {\n              public boolean accept(ScriptApplied.ScriptAppliedReference it) {\n                return !(it.isAlreadyDone());\n              }\n            }).isEmpty();\n          }\n        }).select(new ISelector<ScriptApplied, MigrationManager.MigrationStep>() {\n          public MigrationManager.MigrationStep select(final ScriptApplied it) {\n            return new MigrationManager.MigrationStep() {\n              public String getDescription() {\n                return it.getDescription();\n              }\n              public boolean execute() {\n                final Wrappers._boolean res = new Wrappers._boolean();\n                myMpsMproject.getRepository().getModelAccess().executeCommand(new Runnable() {\n                  public void run() {\n                    res.value = it.execute(myMigrationComponent);\n                  }\n                });\n                return res.value;\n              }\n              public void forceExecutionNextTime() {\n                throw new UnsupportedOperationException(\"not supported for module migrations\");\n              }\n            };\n          }\n        }).first();\n      }\n    }));\n    return result.value;\n  }","id":52921,"modified_method":"public MigrationManager.MigrationStep nextModuleStep() {\n    final Wrappers._T<MigrationManager.MigrationStep> result = new Wrappers._T<MigrationManager.MigrationStep>(null);\n    myMpsMproject.getRepository().getModelAccess().runReadAction(new _Adapters._return_P0_E0_to_Runnable_adapter(new _FunctionTypes._return_P0_E0<MigrationManager.MigrationStep>() {\n      public MigrationManager.MigrationStep invoke() {\n        return result.value = Sequence.fromIterable(MigrationsUtil.getMigrateableModulesFromProject(ProjectHelper.toMPSProject(myProject))).translate(new ITranslator2<SModule, ScriptApplied.ScriptAppliedReference>() {\n          public Iterable<ScriptApplied.ScriptAppliedReference> translate(SModule module) {\n            return MigrationsUtil.getAllSteps(module);\n          }\n        }).select(new ISelector<ScriptApplied.ScriptAppliedReference, ScriptApplied>() {\n          public ScriptApplied select(ScriptApplied.ScriptAppliedReference it) {\n            return it.resolve(myMigrationComponent, false);\n          }\n        }).where(new IWhereFilter<ScriptApplied>() {\n          public boolean accept(ScriptApplied it) {\n            return it != null && Sequence.fromIterable(it.getDependencies()).where(new IWhereFilter<ScriptApplied.ScriptAppliedReference>() {\n              public boolean accept(ScriptApplied.ScriptAppliedReference it) {\n                return !(it.isAlreadyDone());\n              }\n            }).isEmpty();\n          }\n        }).select(new ISelector<ScriptApplied, MigrationManager.MigrationStep>() {\n          public MigrationManager.MigrationStep select(final ScriptApplied it) {\n            return new MigrationManager.MigrationStep() {\n              public String getDescription() {\n                return it.getDescription();\n              }\n              public boolean execute() {\n                return it.execute(myMigrationComponent);\n              }\n              public void forceExecutionNextTime() {\n                throw new UnsupportedOperationException(\"not supported for module migrations\");\n              }\n            };\n          }\n        }).first();\n      }\n    }));\n    return result.value;\n  }","commit_id":"58d79c69c47e5f635873c05dcac57eb25593dd7f","url":"https://github.com/JetBrains/MPS"},{"original_method":"private boolean executeSingleStep(final MigrationManager.MigrationStep result) {\n    if (result == null) {\n      return false;\n    }\n\n    final String step = ((MigrationManager.MigrationStep) result).getDescription();\n    addElementToMigrationList(step);\n\n    final Wrappers._boolean noException = new Wrappers._boolean();\n    ApplicationManager.getApplication().invokeAndWait(new Runnable() {\n      public void run() {\n        noException.value = ((MigrationManager.MigrationStep) result).execute();\n      }\n    }, myModalityState);\n\n    if (!(noException.value)) {\n      myErrorContainer.setErrorDescriptor(new MigrationsProgressWizardStep.MigrationExceptionError());\n    }\n\n    return noException.value;\n  }","id":52922,"modified_method":"private boolean executeSingleStep(final MigrationManager.MigrationStep result) {\n    if (result == null) {\n      return false;\n    }\n\n    final String step = ((MigrationManager.MigrationStep) result).getDescription();\n    addElementToMigrationList(step);\n\n    final Wrappers._boolean noException = new Wrappers._boolean();\n    ApplicationManager.getApplication().invokeAndWait(new Runnable() {\n      public void run() {\n        LocalHistoryAction action = LocalHistory.getInstance().startAction(result.getDescription());\n        getMPSProject().getRepository().getModelAccess().executeCommand(new Runnable() {\n          public void run() {\n            noException.value = ((MigrationManager.MigrationStep) result).execute();\n          }\n        });\n        action.finish();\n      }\n    }, myModalityState);\n\n    if (!(noException.value)) {\n      myErrorContainer.setErrorDescriptor(new MigrationsProgressWizardStep.MigrationExceptionError());\n    }\n\n    return noException.value;\n  }","commit_id":"58d79c69c47e5f635873c05dcac57eb25593dd7f","url":"https://github.com/JetBrains/MPS"},{"original_method":"private String analyzeParameters( XSLT xslt ) throws PortalException {\n\t\tString fragmentId = CommonUtils.nvl(runtimeData.getParameter(\"uPcFM_selectedID\"));\n\t\tString action = runtimeData.getParameter(\"uPcFM_action\");\n\t\tif (action != null) {\n\t\t\t\tif (action.equals(\"new\")) {\n\t\t\t\t\tString fragmentName = runtimeData.getParameter(\"fragment_name\");\n\t\t\t\t\tString funcName = runtimeData.getParameter(\"fragment_fname\");\n\t\t\t\t\tString fragmentDesc = runtimeData.getParameter(\"fragment_desc\");\n\t\t\t\t\tString fragmentType = runtimeData.getParameter(\"fragment_type\");\n\t\t\t\t\tString fragmentFolder = runtimeData.getParameter(\"fragment_add_folder\");\n\t\t\t\t\tboolean isPushedFragment = (\"true\".equals(fragmentType))?true:false;\n\t\t\t\t\tfragmentId = alm.createFragment(CommonUtils.nvl(funcName),CommonUtils.nvl(fragmentDesc),CommonUtils.nvl(fragmentName));\n\t\t\t\t\tALFragment newFragment = (ALFragment) alm.getFragment(fragmentId);\n\t\t\t\t\tif ( newFragment != null ) { \n\t\t\t\t\t  if ( isPushedFragment ) \n\t\t\t\t\t    newFragment.setPushedFragment(); \n\t\t\t\t\t  else\n\t\t\t\t\t    newFragment.setPulledFragment();\n\t\t\t\t\t  // Saving the changes in the database  \n\t\t\t\t\t  alm.saveFragment(newFragment);\n\t\t\t\t\t  // Updating the fragments map\n\t\t\t\t\t  fragments.put(fragmentId,newFragment); \n\t\t\t\t\t  // Check if we need to create an additional folder on the fragment root\n\t\t\t\t\t  if ( \"true\".equals(fragmentFolder) ) {\n\t\t\t\t\t  \talm.loadFragment(fragmentId);\n\t\t\t\t\t  \tcreateFolder(newFragment);\n\t\t\t\t\t  \talm.saveFragment();\n\t\t\t\t\t  }\n\t\t\t\t\t}     \n\t\t\t\t} else if (action.equals(\"edit\") ) {\n\t\t\t\t\tif (CommonUtils.parseInt(fragmentId) > 0) {\n\t\t\t\t\t  alm.loadFragment(fragmentId);\n\t\t\t\t\t  themePrefs.putParameterValue(\"selectedID\",CommonUtils.nvl(getFragmentRootId(fragmentId))); \n\t\t\t\t\t  themePrefs.putParameterValue(\"mode\",\"preferences\"); \t\n\t\t\t\t\t} else\n\t\t\t\t\t   new PortalException ( \"Invalid fragment ID=\"+fragmentId);\n\t\t\t\t} else if (action.equals(\"save\")) {\n\t\t\t\t\tString fragmentName = runtimeData.getParameter(\"fragment_name\");\n\t\t\t\t\tString fragmentDesc = runtimeData.getParameter(\"fragment_desc\");\n\t\t\t\t\tString fragmentType = runtimeData.getParameter(\"fragment_type\");\n\t\t\t\t\tboolean isPushedFragment = (\"true\".equals(fragmentType))?true:false;\n\t\t\t\t\tALFragment fragment = (ALFragment) fragments.get(fragmentId);\n\t\t\t\t    if ( fragment != null ) { \n\t\t\t\t\t   if ( isPushedFragment ) \n\t\t\t\t\t     fragment.setPushedFragment(); \n\t\t\t\t\t   else\n\t\t\t\t\t     fragment.setPulledFragment();\n\t\t\t\t\t   fragment.setName(CommonUtils.nvl(fragmentName));\n\t\t\t\t\t   fragment.setDescription(CommonUtils.nvl(fragmentDesc));  \n\t\t\t\t\t   // Saving the changes in the database  \n\t\t\t\t\t   alm.saveFragment(fragment);\t\t\t\t\t\t\t\n\t\t\t\t\t}     \n\t\t\t\t} else if (action.equals(\"delete\")) {\n\t\t\t\t\tif (CommonUtils.parseInt(fragmentId) > 0) {\n\t\t\t\t\t  alm.deleteFragment(fragmentId);\n\t\t\t\t\t  // Updating the fragments map\n\t\t\t\t\t  fragments.remove(fragmentId);  \n\t\t\t\t\t  fragmentId = (fragments != null && fragments.isEmpty())?(String) fragments.keySet().toArray()[0]:\"\";\n\t\t\t\t\t}\n\t\t\t\t} else if (action.equals(\"properties\")) {\n\t\t\t\t  \n\t\t\t\t}\n\t\t\t\txslt.setStylesheetParameter(\"uPcFM_selectedID\",fragmentId);\n\t\t}\n\t\t\n\t\treturn fragmentId;\n\t}","id":52923,"modified_method":"private String analyzeParameters( XSLT xslt ) throws PortalException {\n\t\tString fragmentId = CommonUtils.nvl(runtimeData.getParameter(\"uPcFM_selectedID\"));\n\t\tString action = CommonUtils.nvl(runtimeData.getParameter(\"uPcFM_action\"));\n\t\t\n\t\t\t\tif (action.equals(\"new\")) {\n\t\t\t\t\tString fragmentName = runtimeData.getParameter(\"fragment_name\");\n\t\t\t\t\tString funcName = runtimeData.getParameter(\"fragment_fname\");\n\t\t\t\t\tString fragmentDesc = runtimeData.getParameter(\"fragment_desc\");\n\t\t\t\t\tString fragmentType = runtimeData.getParameter(\"fragment_type\");\n\t\t\t\t\tString fragmentFolder = runtimeData.getParameter(\"fragment_add_folder\");\n\t\t\t\t\tboolean isPushedFragment = (\"true\".equals(fragmentType))?true:false;\n\t\t\t\t\tfragmentId = alm.createFragment(CommonUtils.nvl(funcName),CommonUtils.nvl(fragmentDesc),CommonUtils.nvl(fragmentName));\n\t\t\t\t\tALFragment newFragment = (ALFragment) alm.getFragment(fragmentId);\n\t\t\t\t\tif ( newFragment != null ) { \n\t\t\t\t\t  if ( isPushedFragment ) \n\t\t\t\t\t    newFragment.setPushedFragment(); \n\t\t\t\t\t  else\n\t\t\t\t\t    newFragment.setPulledFragment();\n\t\t\t\t\t  // Saving the changes in the database  \n\t\t\t\t\t  alm.saveFragment(newFragment);\n\t\t\t\t\t  // Updating the fragments map\n\t\t\t\t\t  fragments.put(fragmentId,newFragment); \n\t\t\t\t\t  // Check if we need to create an additional folder on the fragment root\n\t\t\t\t\t  if ( \"true\".equals(fragmentFolder) ) {\n\t\t\t\t\t  \talm.loadFragment(fragmentId);\n\t\t\t\t\t  \tcreateFolder(newFragment);\n\t\t\t\t\t  \talm.saveFragment();\n\t\t\t\t\t  }\n\t\t\t\t\t}     \n\t\t\t\t} else if (action.equals(\"save\")) {\n\t\t\t\t\tString funcName = runtimeData.getParameter(\"fragment_fname\");\n\t\t\t\t\tString fragmentName = runtimeData.getParameter(\"fragment_name\");\n\t\t\t\t\tString fragmentDesc = runtimeData.getParameter(\"fragment_desc\");\n\t\t\t\t\tString fragmentType = runtimeData.getParameter(\"fragment_type\");\n\t\t\t\t\tboolean isPushedFragment = (\"true\".equals(fragmentType))?true:false;\n\t\t\t\t\tALFragment fragment = (ALFragment) fragments.get(fragmentId);\n\t\t\t\t    if ( fragment != null ) { \n\t\t\t\t\t   if ( isPushedFragment ) \n\t\t\t\t\t     fragment.setPushedFragment(); \n\t\t\t\t\t   else\n\t\t\t\t\t     fragment.setPulledFragment();\n\t\t\t\t\t   fragment.setFunctionalName(CommonUtils.nvl(funcName));\n\t\t\t\t\t   fragment.setDescription(CommonUtils.nvl(fragmentDesc));  \n\t\t\t\t\t   String fragmentRootId = getFragmentRootId(fragmentId);\n\t\t\t\t\t   ALNode fragmentRoot = fragment.getNode(fragmentRootId);\n\t\t\t\t\t   fragmentRoot.getNodeDescription().setName(fragmentName);\n\t\t\t\t\t   // Saving the changes in the database  \n\t\t\t\t\t   alm.saveFragment(fragment);\t\t\t\t\t\t\t\n\t\t\t\t\t}     \n\t\t\t\t} else if (action.equals(\"delete\")) {\n\t\t\t\t\tif (CommonUtils.parseInt(fragmentId) > 0) {\n\t\t\t\t\t  alm.deleteFragment(fragmentId);\n\t\t\t\t\t  // Updating the fragments map\n\t\t\t\t\t  fragments.remove(fragmentId);  \n\t\t\t\t\t  fragmentId = (fragments != null && fragments.isEmpty())?(String) fragments.keySet().toArray()[0]:\"\";\n\t\t\t\t\t} else\n\t\t\t\t\t   new PortalException ( \"Invalid fragment ID=\"+fragmentId);\n\t\t\t\t} else if (action.equals(\"properties\")) {\n\t\t\t\t\t \n\t\t\t\t}\n\t\t\t\t\n\t\t\t\txslt.setStylesheetParameter(\"uPcFM_selectedID\",fragmentId);\n\t\t\t    xslt.setStylesheetParameter(\"uPcFM_action\",action);\t\n\t\t\n\t\treturn fragmentId;\n\t}","commit_id":"5ccf888ff76b3f5fbf6c3ff24766b58001f775cd","url":"https://github.com/Jasig/uPortal"},{"original_method":"private Document getFragmentList() throws PortalException {\n\t\tDocument document = DocumentFactory.getNewDocument();\n\t\tElement fragmentsNode = document.createElement(\"fragments\");\n\t\tdocument.appendChild(fragmentsNode);\n\t\tElement category = document.createElement(\"category\");\n\t\tcategory.setAttribute(\"name\", \"Fragments\");\n\t\tcategory.setAttribute(\"expanded\", \"true\");\n\t\tfragmentsNode.appendChild(category);\n\t\tif (fragments != null) {\n\t\t\tfor ( Iterator ids = fragments.keySet().iterator(); ids.hasNext(); ) {\n\t\t\t\tString fragmentId = (String) ids.next();\n\t\t\t\tALFragment fragment = (ALFragment) fragments.get(fragmentId);\n\t\t\t\tALFolder rootFolder =\n\t\t\t\t\t(ALFolder) fragment.getLayoutData().get(\n\t\t\t\t\t\tfragment.getRootId());\n\t\t\t\tString fragmentRootId = rootFolder.getFirstChildNodeId();\n\t\t\t\tElement fragmentNode = document.createElement(\"fragment\");\n\t\t\t\tcategory.appendChild(fragmentNode);\n\t\t\t\tElement id = document.createElement(\"ID\");\n\t\t\t\tid.appendChild(document.createTextNode(fragmentId));\n\t\t\t\tfragmentNode.appendChild(id);\n\t\t\t\tElement type = document.createElement(\"type\");\n\t\t\t\ttype.appendChild(\n\t\t\t\t\tdocument.createTextNode(\n\t\t\t\t\t\tfragment.isPushedFragment() ? \"pushed\" : \"pulled\"));\n\t\t\t\tfragmentNode.appendChild(type);\n\t\t\t\tElement fname = document.createElement(\"fname\");\n\t\t\t\tfname.appendChild(\n\t\t\t\t\tdocument.createTextNode(fragment.getFunctionalName()));\n\t\t\t\tfragmentNode.appendChild(fname);\n\t\t\t\tElement name = document.createElement(\"name\");\n\t\t\t\tname.appendChild(\n\t\t\t\t\tdocument.createTextNode(\n\t\t\t\t\t\tfragmentRootId != null\n\t\t\t\t\t\t\t? ((ALFolder) fragment\n\t\t\t\t\t\t\t\t.getLayoutData()\n\t\t\t\t\t\t\t\t.get(fragmentRootId))\n\t\t\t\t\t\t\t\t.getNodeDescription()\n\t\t\t\t\t\t\t\t.getName()\n\t\t\t\t\t\t\t: fragment.getFunctionalName()));\n\t\t\t\tfragmentNode.appendChild(name);\n\t\t\t\tElement desc = document.createElement(\"description\");\n\t\t\t\tdesc.appendChild(\n\t\t\t\t\tdocument.createTextNode(fragment.getDescription()));\n\t\t\t\tfragmentNode.appendChild(desc);\n\t\t\t}\n\t\t}\n\t\treturn document;\n\t}","id":52924,"modified_method":"private Document getFragmentList() throws PortalException {\n\t\tDocument document = DocumentFactory.getNewDocument();\n\t\tElement fragmentsNode = document.createElement(\"fragments\");\n\t\tdocument.appendChild(fragmentsNode);\n\t\tElement category = document.createElement(\"category\");\n\t\tcategory.setAttribute(\"name\", \"Fragments\");\n\t\tcategory.setAttribute(\"expanded\", \"true\");\n\t\tfragmentsNode.appendChild(category);\n\t\tif (fragments != null) {\n\t\t\tfor ( Iterator ids = fragments.keySet().iterator(); ids.hasNext(); ) {\n\t\t\t\tString fragmentId = (String) ids.next();\n\t\t\t\tALFragment fragment = (ALFragment) fragments.get(fragmentId);\n\t\t\t\tString fragmentRootId = getFragmentRootId(fragmentId);\n\t\t\t\tElement fragmentNode = document.createElement(\"fragment\");\n\t\t\t\tcategory.appendChild(fragmentNode);\n\t\t\t\tElement id = document.createElement(\"ID\");\n\t\t\t\tid.appendChild(document.createTextNode(fragmentId));\n\t\t\t\tfragmentNode.appendChild(id);\n\t\t\t\tElement rootId = document.createElement(\"rootNodeID\");\n\t\t\t\trootId.appendChild(document.createTextNode(fragmentRootId));\n\t\t\t\tfragmentNode.appendChild(rootId);\n\t\t\t\tElement type = document.createElement(\"type\");\n\t\t\t\ttype.appendChild(\n\t\t\t\t\tdocument.createTextNode(\n\t\t\t\t\t\tfragment.isPushedFragment() ? \"pushed\" : \"pulled\"));\n\t\t\t\tfragmentNode.appendChild(type);\n\t\t\t\tElement fname = document.createElement(\"fname\");\n\t\t\t\tfname.appendChild(\n\t\t\t\t\tdocument.createTextNode(fragment.getFunctionalName()));\n\t\t\t\tfragmentNode.appendChild(fname);\n\t\t\t\tElement name = document.createElement(\"name\");\n\t\t\t\tname.appendChild(\n\t\t\t\t\tdocument.createTextNode(\n\t\t\t\t\t\tfragmentRootId != null\n\t\t\t\t\t\t? ((ALNode) fragment.getNode(fragmentRootId)).getNodeDescription().getName()\n\t\t\t\t\t\t: fragment.getFunctionalName()));\n\t\t\t\tfragmentNode.appendChild(name);\n\t\t\t\tElement desc = document.createElement(\"description\");\n\t\t\t\tdesc.appendChild(document.createTextNode(fragment.getDescription()));\n\t\t\t\tfragmentNode.appendChild(desc);\n\t\t\t}\n\t\t}\n\t\treturn document;\n\t}","commit_id":"5ccf888ff76b3f5fbf6c3ff24766b58001f775cd","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n     * Process layout action events.\n     * Events are described by the following request params:\n     * uP_help_target\n     * uP_about_target\n     * uP_edit_target\n     * uP_remove_target\n     * uP_detach_target\n     * @param req a <code>HttpServletRequest<\/code> value\n     * @param channelManager a <code>ChannelManager<\/code> value\n     * @exception PortalException if an error occurs\n     */\n    private synchronized void processUserLayoutParameters (HttpServletRequest req, ChannelManager channelManager) throws PortalException {\n     try {\n\n       IUserLayoutManager ulm = uPreferencesManager.getUserLayoutManager();\n\n        // Sending the theme stylesheets parameters based on the user security context\n        UserPreferences userPrefs = uPreferencesManager.getUserPreferences();\n        ThemeStylesheetUserPreferences themePrefs = userPrefs.getThemeStylesheetUserPreferences();\n\t\tStructureStylesheetUserPreferences structPrefs = userPrefs.getStructureStylesheetUserPreferences();\n        if ( person.getSecurityContext().isAuthenticated() ) {\n          themePrefs.putParameterValue(\"authenticated\",\"true\");\n          String userName = person.getFullName();\n          if ( userName != null && userName.trim().length() > 0 )\n           themePrefs.putParameterValue(\"userName\",userName);\n          try {\n            if ( ChannelStaticData.getAuthorizationPrincipal(person).canPublish() )\n             themePrefs.putParameterValue(\"channelManager\",\"true\");\n          } catch ( Exception e ) {\n              LogService.log(LogService.ERROR, e);\n            }\n        }\n\n        String[] values;\n        if ((values = req.getParameterValues(\"uP_help_target\")) != null) {\n            for (int i = 0; i < values.length; i++) {\n                channelManager.passPortalEvent(values[i], new PortalEvent(PortalEvent.HELP_BUTTON_EVENT));\n            }\n        }\n        if ((values = req.getParameterValues(\"uP_about_target\")) != null) {\n            for (int i = 0; i < values.length; i++) {\n                channelManager.passPortalEvent(values[i], new PortalEvent(PortalEvent.ABOUT_BUTTON_EVENT));\n            }\n        }\n        if ((values = req.getParameterValues(\"uP_edit_target\")) != null) {\n            for (int i = 0; i < values.length; i++) {\n                channelManager.passPortalEvent(values[i], new PortalEvent(PortalEvent.EDIT_BUTTON_EVENT));\n            }\n        }\n        if ((values = req.getParameterValues(\"uP_detach_target\")) != null) {\n            channelManager.passPortalEvent(values[0], new PortalEvent(PortalEvent.DETACH_BUTTON_EVENT));\n        }\n\n        if ((values = req.getParameterValues(\"uP_request_move_targets\")) != null) {\n            if ( values[0].trim().length() == 0 ) values[0] = null;\n             ulm.markMoveTargets(values[0]);\n        } else {\n             ulm.markMoveTargets(null);\n          }\n\n        if ((values = req.getParameterValues(\"uP_request_add_targets\")) != null) {\n            String[] values1;\n            int nodeType = values[0].equals(\"folder\")?IUserLayoutNodeDescription.FOLDER:IUserLayoutNodeDescription.CHANNEL;\n            IUserLayoutNodeDescription nodeDesc = ulm.createNodeDescription(nodeType);\n            nodeDesc.setName(\"Unnamed\");\n            if ( nodeType == IUserLayoutNodeDescription.CHANNEL && (values1 = req.getParameterValues(\"contentPublishID\")) != null ) {\n             String contentPublishId = values1[0].trim();\n             if ( contentPublishId.length() > 0 ) {\n              ((IUserLayoutChannelDescription)nodeDesc).setChannelPublishId(contentPublishId);\n              themePrefs.putParameterValue(\"contentPublishID\",contentPublishId);\n             }\n            }\n            newNodeDescription = nodeDesc;\n            ulm.markAddTargets(newNodeDescription);\n        } else {\n            ulm.markAddTargets(null);\n          }\n\n        if ((values = req.getParameterValues(\"uP_add_target\")) != null) {\n         String[] values1, values2;\n         String value = null;\n         int nodeType = values[0].equals(\"folder\")?IUserLayoutNodeDescription.FOLDER:IUserLayoutNodeDescription.CHANNEL;\n         values1 =  req.getParameterValues(\"targetNextID\");\n         if ( values1 != null && values1.length > 0 )\n            value = values1[0];\n         if ( (values2 = req.getParameterValues(\"targetParentID\")) != null ) {\n          if (  newNodeDescription != null ) {\n            if ( CommonUtils.nvl(value).trim().length() == 0 ) value = null;\n            /*if ( newNodeDescription == null ) {\n             newNodeDescription = ulm.createNodeDescription(nodeType);\n             newNodeDescription.setName(\"Unnamed\");\n            }*/\n             // Adding a new node\n             String nodeId = ulm.addNode(newNodeDescription,values2[0],value).getId();\n            \n             // If we have created a new node we need to let the structure XSL know about it\n             if ( nodeId != null )\n\t\t\t   structPrefs.putParameterValue(\"newNodeID\",nodeId);\n\t\t\t \n          }\n         }\n            newNodeDescription = null;\n        }\n\n        if ((values = req.getParameterValues(\"uP_move_target\")) != null) {\n         String[] values1, values2;\n         String value = null;\n         values1 = req.getParameterValues(\"targetNextID\");\n         if ( values1 != null && values1.length > 0 )\n            value = values1[0];\n         if ( (values2 = req.getParameterValues(\"targetParentID\")) != null ) {\n            if ( CommonUtils.nvl(value).trim().length() == 0 ) value = null;\n            ulm.moveNode(values[0],values2[0],value);\n         }\n        }\n\n        if ((values = req.getParameterValues(\"uP_rename_target\")) != null) {\n         String[] values1;\n         if ( (values1 = req.getParameterValues(\"uP_target_name\")) != null ) {\n            IUserLayoutNodeDescription nodeDesc = ulm.getNode(values[0]);\n            if ( nodeDesc != null ) {\n             String oldName = nodeDesc.getName();\n             nodeDesc.setName(values1[0]);\n             if ( !ulm.updateNode(nodeDesc) )\n              nodeDesc.setName(oldName);\n            }\n         }\n        }\n\n        if ((values = req.getParameterValues(\"uP_remove_target\")) != null) {\n            for (int i = 0; i < values.length; i++) {\n                ulm.deleteNode(values[i]);\n            }\n        }\n\n        String param = req.getParameter(\"uP_cancel_targets\");\n        if ( param != null && param.equals(\"true\") ) {\n           ulm.markAddTargets(null);\n           ulm.markMoveTargets(null);\n           newNodeDescription = null;\n        }\n        \n\t\t/*param = req.getParameter(\"uP_fragment_action\");\n\t\tif ( param != null ) { \n\t\t  if ( ulm instanceof TransientUserLayoutManagerWrapper )\n\t\t    ulm = ((TransientUserLayoutManagerWrapper)ulm).getOriginalLayoutManager();\n\t\t  if ( ulm instanceof IAggregatedUserLayoutManager ) {\t\t\n\t\t\tIAggregatedUserLayoutManager alm = (IAggregatedUserLayoutManager) ulm;\n\t\t\tString fragmentId = req.getParameter(\"uP_fragment_ID\"); \n\t\t\tif ( param.equals(\"new\") ) {\n\t\t\t   String fragmentName = req.getParameter(\"uP_fragment_name\");\n\t\t\t   String fragmentDesc = req.getParameter(\"uP_fragment_desc\");\n\t\t\t   String defaultValue = IAggregatedUserLayoutManager.NEW_FRAGMENT;\n\t\t       fragmentId = alm.createFragment(CommonUtils.envl(fragmentName,defaultValue),CommonUtils.envl(fragmentDesc,\"The fragment\"));\n\t\t\t} else if ( param.equals(\"edit\") && fragmentId != null ) {\n\t\t         if ( CommonUtils.parseInt(fragmentId) > 0 ) alm.loadFragment(fragmentId); else alm.loadUserLayout();\n\t\t    } else if ( param.equals(\"save\") ) {\n\t\t\t     alm.saveFragment();\n\t\t\t} else if ( param.equals(\"delete\") ) {\n\t\t\t     alm.deleteFragment();\n\t\t\t}     \n\t\t   themePrefs.putParameterValue(\"currentFragmentID\",CommonUtils.envl(fragmentId,\"default_layout\")); \n\t\t  }\t  \n\t\t}*/\n\n\n      } catch ( Exception e ) {\n          e.printStackTrace();\n          throw new PortalException(e);\n        }\n    }","id":52925,"modified_method":"/**\n     * Process layout action events.\n     * Events are described by the following request params:\n     * uP_help_target\n     * uP_about_target\n     * uP_edit_target\n     * uP_remove_target\n     * uP_detach_target\n     * @param req a <code>HttpServletRequest<\/code> value\n     * @param channelManager a <code>ChannelManager<\/code> value\n     * @exception PortalException if an error occurs\n     */\n    private synchronized void processUserLayoutParameters (HttpServletRequest req, ChannelManager channelManager) throws PortalException {\n     try {\n\n       IUserLayoutManager ulm = uPreferencesManager.getUserLayoutManager();\n\n        // Sending the theme stylesheets parameters based on the user security context\n        UserPreferences userPrefs = uPreferencesManager.getUserPreferences();\n        ThemeStylesheetUserPreferences themePrefs = userPrefs.getThemeStylesheetUserPreferences();\n\t\tStructureStylesheetUserPreferences structPrefs = userPrefs.getStructureStylesheetUserPreferences();\n        if ( person.getSecurityContext().isAuthenticated() ) {\n          themePrefs.putParameterValue(\"authenticated\",\"true\");\n          String userName = person.getFullName();\n          if ( userName != null && userName.trim().length() > 0 )\n           themePrefs.putParameterValue(\"userName\",userName);\n          try {\n            if ( ChannelStaticData.getAuthorizationPrincipal(person).canPublish() )\n             themePrefs.putParameterValue(\"channelManager\",\"true\");\n          } catch ( Exception e ) {\n              LogService.log(LogService.ERROR, e);\n            }\n        }\n\n        String[] values;\n        if ((values = req.getParameterValues(\"uP_help_target\")) != null) {\n            for (int i = 0; i < values.length; i++) {\n                channelManager.passPortalEvent(values[i], new PortalEvent(PortalEvent.HELP_BUTTON_EVENT));\n            }\n        }\n        if ((values = req.getParameterValues(\"uP_about_target\")) != null) {\n            for (int i = 0; i < values.length; i++) {\n                channelManager.passPortalEvent(values[i], new PortalEvent(PortalEvent.ABOUT_BUTTON_EVENT));\n            }\n        }\n        if ((values = req.getParameterValues(\"uP_edit_target\")) != null) {\n            for (int i = 0; i < values.length; i++) {\n                channelManager.passPortalEvent(values[i], new PortalEvent(PortalEvent.EDIT_BUTTON_EVENT));\n            }\n        }\n        if ((values = req.getParameterValues(\"uP_detach_target\")) != null) {\n            channelManager.passPortalEvent(values[0], new PortalEvent(PortalEvent.DETACH_BUTTON_EVENT));\n        }\n\n        if ((values = req.getParameterValues(\"uP_request_move_targets\")) != null) {\n            if ( values[0].trim().length() == 0 ) values[0] = null;\n             ulm.markMoveTargets(values[0]);\n        } else {\n             ulm.markMoveTargets(null);\n          }\n\n        if ((values = req.getParameterValues(\"uP_request_add_targets\")) != null) {\n            String[] values1;\n            int nodeType = values[0].equals(\"folder\")?IUserLayoutNodeDescription.FOLDER:IUserLayoutNodeDescription.CHANNEL;\n            IUserLayoutNodeDescription nodeDesc = ulm.createNodeDescription(nodeType);\n            nodeDesc.setName(\"Unnamed\");\n            if ( nodeType == IUserLayoutNodeDescription.CHANNEL && (values1 = req.getParameterValues(\"contentPublishID\")) != null ) {\n             String contentPublishId = values1[0].trim();\n             if ( contentPublishId.length() > 0 ) {\n              ((IUserLayoutChannelDescription)nodeDesc).setChannelPublishId(contentPublishId);\n              themePrefs.putParameterValue(\"contentPublishID\",contentPublishId);\n             }\n            }\n            newNodeDescription = nodeDesc;\n            ulm.markAddTargets(newNodeDescription);\n        } else {\n            ulm.markAddTargets(null);\n          }\n\n        if ((values = req.getParameterValues(\"uP_add_target\")) != null) {\n         String[] values1, values2;\n         String value = null;\n         int nodeType = values[0].equals(\"folder\")?IUserLayoutNodeDescription.FOLDER:IUserLayoutNodeDescription.CHANNEL;\n         values1 =  req.getParameterValues(\"targetNextID\");\n         if ( values1 != null && values1.length > 0 )\n            value = values1[0];\n         if ( (values2 = req.getParameterValues(\"targetParentID\")) != null ) {\n          if (  newNodeDescription != null ) {\n            if ( CommonUtils.nvl(value).trim().length() == 0 ) value = null;\n            /*if ( newNodeDescription == null ) {\n             newNodeDescription = ulm.createNodeDescription(nodeType);\n             newNodeDescription.setName(\"Unnamed\");\n            }*/\n             // Adding a new node\n             String nodeId = ulm.addNode(newNodeDescription,values2[0],value).getId();\n            \n             // If we have created a new node we need to let the structure XSL know about it\n             if ( nodeId != null )\n\t\t\t   structPrefs.putParameterValue(\"newNodeID\",nodeId);\n\t\t\t \n          }\n         }\n            newNodeDescription = null;\n        }\n\n        if ((values = req.getParameterValues(\"uP_move_target\")) != null) {\n         String[] values1, values2;\n         String value = null;\n         values1 = req.getParameterValues(\"targetNextID\");\n         if ( values1 != null && values1.length > 0 )\n            value = values1[0];\n         if ( (values2 = req.getParameterValues(\"targetParentID\")) != null ) {\n            if ( CommonUtils.nvl(value).trim().length() == 0 ) value = null;\n            ulm.moveNode(values[0],values2[0],value);\n         }\n        }\n\n        if ((values = req.getParameterValues(\"uP_rename_target\")) != null) {\n         String[] values1;\n         if ( (values1 = req.getParameterValues(\"uP_target_name\")) != null ) {\n            IUserLayoutNodeDescription nodeDesc = ulm.getNode(values[0]);\n            if ( nodeDesc != null ) {\n             String oldName = nodeDesc.getName();\n             nodeDesc.setName(values1[0]);\n             if ( !ulm.updateNode(nodeDesc) )\n              nodeDesc.setName(oldName);\n            }\n         }\n        }\n\n        if ((values = req.getParameterValues(\"uP_remove_target\")) != null) {\n            for (int i = 0; i < values.length; i++) {\n                ulm.deleteNode(values[i]);\n            }\n        }\n\n        String param = req.getParameter(\"uP_cancel_targets\");\n        if ( param != null && param.equals(\"true\") ) {\n           ulm.markAddTargets(null);\n           ulm.markMoveTargets(null);\n           newNodeDescription = null;\n        }\n        \n\t\tparam = req.getParameter(\"uPcFM_action\");\n\t\tif ( param != null ) { \n\t\t  if ( ulm instanceof TransientUserLayoutManagerWrapper )\n\t\t    ulm = ((TransientUserLayoutManagerWrapper)ulm).getOriginalLayoutManager();\n\t\t  if ( ulm instanceof IAggregatedUserLayoutManager ) {\t\t\n\t\t\tIAggregatedUserLayoutManager alm = (IAggregatedUserLayoutManager) ulm;\n\t\t\tString fragmentId = req.getParameter(\"uP_fragmentID\"); \n\t\t\tif ( param.equals(\"edit\") && fragmentId != null ) {\n\t\t         if ( CommonUtils.parseInt(fragmentId) > 0 ) \n\t\t           alm.loadFragment(fragmentId); \n\t\t         else \n\t\t           alm.loadUserLayout();\n\t\t    } else if ( param.equals(\"save\") ) {\n\t\t\t       alm.saveFragment();\n\t\t\t}\n\t\t  }\t  \n\t\t}\n\n\n      } catch ( Exception e ) {\n          e.printStackTrace();\n          throw new PortalException(e);\n        }\n    }","commit_id":"5ccf888ff76b3f5fbf6c3ff24766b58001f775cd","url":"https://github.com/Jasig/uPortal"},{"original_method":"public ChannelCacheKey generateKey() {\n\n\tChannelCacheKey k=new ChannelCacheKey();\n\tStringBuffer sbKey = new StringBuffer(1024);\n\t// guest pages are cached system-wide\n\tif(staticData.getPerson().getID()==UserInstance.guestUserId) {\n\t    k.setKeyScope(ChannelCacheKey.SYSTEM_KEY_SCOPE);\n            sbKey.append(systemCacheId);\n\t} else {\n\t    k.setKeyScope(ChannelCacheKey.INSTANCE_KEY_SCOPE);\n\t}\n\tsbKey.append(\"userId:\").append(staticData.getPerson().getID()).append(\", \");\n\n        if(xslUriForKey==null) {\n            try {\n                xslUriForKey=XSLT.getStylesheetURI(sslLocation, runtimeData.getBrowserInfo());\n            } catch (PortalException pe) {\n                xslUriForKey = \"Not attainable!\";\n            }\n        }\n\tsbKey.append(\"xslUri:\").append(xslUriForKey).append(\", \");\n\tsbKey.append(\"bAuthenticated:\").append(bAuthenticated).append(\", \");\n\tsbKey.append(\"bAuthorizationAttemptFailed:\").append(bAuthorizationAttemptFailed).append(\", \");\n\tsbKey.append(\"attemptedUserName:\").append(attemptedUserName).append(\", \");\n\tsbKey.append(\"bSecurityError:\").append(bSecurityError);\n\tk.setKey(sbKey.toString());\n\tk.setKeyValidity(new Long(System.currentTimeMillis()));\n\treturn k;\n    }","id":52926,"modified_method":"public ChannelCacheKey generateKey() {\n\n  ChannelCacheKey k=new ChannelCacheKey();\n  StringBuffer sbKey = new StringBuffer(1024);\n  // guest pages are cached system-wide\n  if(staticData.getPerson().isGuest()) {\n      k.setKeyScope(ChannelCacheKey.SYSTEM_KEY_SCOPE);\n            sbKey.append(systemCacheId);\n  } else {\n      k.setKeyScope(ChannelCacheKey.INSTANCE_KEY_SCOPE);\n  }\n  sbKey.append(\"userId:\").append(staticData.getPerson().getID()).append(\", \");\n\n        if(xslUriForKey==null) {\n            try {\n                xslUriForKey=XSLT.getStylesheetURI(sslLocation, runtimeData.getBrowserInfo());\n            } catch (PortalException pe) {\n                xslUriForKey = \"Not attainable!\";\n            }\n        }\n  sbKey.append(\"xslUri:\").append(xslUriForKey).append(\", \");\n  sbKey.append(\"bAuthenticated:\").append(bAuthenticated).append(\", \");\n  sbKey.append(\"bAuthorizationAttemptFailed:\").append(bAuthorizationAttemptFailed).append(\", \");\n  sbKey.append(\"attemptedUserName:\").append(attemptedUserName).append(\", \");\n  sbKey.append(\"bSecurityError:\").append(bSecurityError);\n  k.setKey(sbKey.toString());\n  k.setKeyValidity(new Long(System.currentTimeMillis()));\n  return k;\n    }","commit_id":"5a3169c272f8718b7917e0bb4a6cf1875677b684","url":"https://github.com/Jasig/uPortal"},{"original_method":"public void renderXML (ContentHandler out) throws PortalException\n  {\n    String fullName = (String)staticData.getPerson().getFullName();\n    Document doc = new org.apache.xerces.dom.DocumentImpl();\n\n    // Create <login-status> element\n    Element loginStatusElement = doc.createElement(\"login-status\");\n\n    if (bSecurityError)\n    {\n      // Create <error> element under <login-status>\n      Element errorElement = doc.createElement(\"error\");\n      loginStatusElement.appendChild(errorElement);\n    }\n    else if (bAuthorizationAttemptFailed && !bAuthenticated)\n    {\n      // Create <failure> element under <login-status>\n      Element failureElement = doc.createElement(\"failure\");\n      failureElement.setAttribute(\"attemptedUserName\", attemptedUserName);\n      loginStatusElement.appendChild(failureElement);\n    }\n    else if (fullName != null)\n    {\n      // Create <full-name> element under <header>\n      Element fullNameElement = doc.createElement(\"full-name\");\n      fullNameElement.appendChild(doc.createTextNode(fullName));\n      loginStatusElement.appendChild(fullNameElement);\n    }\n\n    doc.appendChild(loginStatusElement);\n    \n    try\n    {\n      XSLT xslt = new XSLT();\n      xslt.setXML(doc);\n      xslt.setXSL(sslLocation, runtimeData.getBrowserInfo());\n      xslt.setTarget(out);\n      xslt.setStylesheetParameter(\"baseActionURL\", runtimeData.getBaseActionURL());\n      if (fullName != null && fullName.equals(\"Guest\"))\n        xslt.setStylesheetParameter(\"guest\", \"true\");            \n      xslt.transform();\n    }\n    catch (Exception e)\n    {\n      throw new GeneralRenderingException(e.getMessage());\n    }\n  }","id":52927,"modified_method":"public void renderXML (ContentHandler out) throws PortalException\n  {\n    String fullName = (String)staticData.getPerson().getFullName();\n    Document doc = new org.apache.xerces.dom.DocumentImpl();\n\n    // Create <login-status> element\n    Element loginStatusElement = doc.createElement(\"login-status\");\n\n    if (bSecurityError)\n    {\n      // Create <error> element under <login-status>\n      Element errorElement = doc.createElement(\"error\");\n      loginStatusElement.appendChild(errorElement);\n    }\n    else if (bAuthorizationAttemptFailed && !bAuthenticated)\n    {\n      // Create <failure> element under <login-status>\n      Element failureElement = doc.createElement(\"failure\");\n      failureElement.setAttribute(\"attemptedUserName\", attemptedUserName);\n      loginStatusElement.appendChild(failureElement);\n    }\n    else if (fullName != null)\n    {\n      // Create <full-name> element under <header>\n      Element fullNameElement = doc.createElement(\"full-name\");\n      fullNameElement.appendChild(doc.createTextNode(fullName));\n      loginStatusElement.appendChild(fullNameElement);\n    }\n\n    doc.appendChild(loginStatusElement);\n    \n    try\n    {\n      XSLT xslt = new XSLT();\n      xslt.setXML(doc);\n      xslt.setXSL(sslLocation, runtimeData.getBrowserInfo());\n      xslt.setTarget(out);\n      xslt.setStylesheetParameter(\"baseActionURL\", runtimeData.getBaseActionURL());\n      if (staticData.getPerson().isGuest() && !staticData.getPerson().getSecurityContext().isAuthenticated()) {\n        xslt.setStylesheetParameter(\"guest\", \"true\");\n      }\n      xslt.transform();\n    }\n    catch (Exception e)\n    {\n      throw new GeneralRenderingException(e.getMessage());\n    }\n  }","commit_id":"5a3169c272f8718b7917e0bb4a6cf1875677b684","url":"https://github.com/Jasig/uPortal"},{"original_method":"public ChannelCacheKey generateKey() {\n\tChannelCacheKey k=new ChannelCacheKey();\n\tStringBuffer sbKey = new StringBuffer(1024);\n\t// guest pages are cached system-wide\n\n        k.setKeyScope(ChannelCacheKey.SYSTEM_KEY_SCOPE);\n\n\tsbKey.append(\"userId:\").append(staticData.getPerson().getID()).append(\", \");\n        sbKey.append(\"baseActionURL:\").append(runtimeData.getBaseActionURL());\n        sbKey.append(\"stylesheetURI:\");\n        try {\n            sbKey.append(XSLT.getStylesheetURI(sslLocation,runtimeData.getBrowserInfo()));\n        } catch (Exception e) {\n            sbKey.append(\"not defined\");\n        }\n\n\tk.setKey(sbKey.toString());\n\tk.setKeyValidity(new Long(System.currentTimeMillis()));\n\treturn k;\n    }","id":52928,"modified_method":"/**\n   * put your documentation comment here\n   * @return \n   */\n  public ChannelCacheKey generateKey () {\n    ChannelCacheKey k = new ChannelCacheKey();\n    StringBuffer sbKey = new StringBuffer(1024);\n    // guest pages are cached system-wide\n    k.setKeyScope(ChannelCacheKey.SYSTEM_KEY_SCOPE);\n    sbKey.append(\"userId:\").append(staticData.getPerson().getID()).append(\", \");\n    sbKey.append(\"baseActionURL:\").append(runtimeData.getBaseActionURL());\n    sbKey.append(\"stylesheetURI:\");\n    try {\n      sbKey.append(XSLT.getStylesheetURI(sslLocation, runtimeData.getBrowserInfo()));\n    } catch (Exception e) {\n      sbKey.append(\"not defined\");\n    }\n    k.setKey(sbKey.toString());\n    k.setKeyValidity(new Long(System.currentTimeMillis()));\n    return  k;\n  }","commit_id":"844226b0d4846bba6c97cdc93981ba444d60001e","url":"https://github.com/Jasig/uPortal"},{"original_method":"public boolean isCacheValid(Object validity) {\n        if(validity instanceof Long) {\n            Long oldtime=(Long) validity;\n            if(staticData.getPerson().getID()==org.jasig.portal.UserInstance.guestUserId) {\n                return true;\n            }\n            if(System.currentTimeMillis()-oldtime.longValue()<1*60*1000) {\n                return true;\n            }\n        }\n        return false;\n    }","id":52929,"modified_method":"/**\n   * put your documentation comment here\n   * @param validity\n   * @return \n   */\n  public boolean isCacheValid (Object validity) {\n    if (validity instanceof Long) {\n      Long oldtime = (Long)validity;\n      if (staticData.getPerson().getID() == org.jasig.portal.UserInstance.guestUserId) {\n        return  true;\n      }\n      if (System.currentTimeMillis() - oldtime.longValue() < 1*60*1000) {\n        return  true;\n      }\n    }\n    return  false;\n  }","commit_id":"844226b0d4846bba6c97cdc93981ba444d60001e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Returns the DOM object associated with the user\n   * NOTE: This should be made more effecient through caching\n   * @return\n   */\n  private Document getUserXML () {\n    // Get the fullname of the current user\n    String fullName = (String)staticData.getPerson().getAttribute(\"displayName\");\n    // Get a new DOM instance\n    Document doc = DocumentFactory.getNewDocument();\n    // Create <header> element\n    Element headerEl = doc.createElement(\"header\");\n    // Create <full-name> element under <header>\n    Element fullNameEl = doc.createElement(\"full-name\");\n    fullNameEl.appendChild(doc.createTextNode(fullName));\n    headerEl.appendChild(fullNameEl);\n    // Create <timestamp-long> element under <header>\n    Element timeStampLongEl = doc.createElement(\"timestamp-long\");\n    timeStampLongEl.appendChild(doc.createTextNode(UtilitiesBean.getDate(\"EEEE, MMM d, yyyy 'at' hh:mm a\")));\n    headerEl.appendChild(timeStampLongEl);\n    // Create <timestamp-short> element under <header>\n    Element timeStampShortEl = doc.createElement(\"timestamp-short\");\n    timeStampShortEl.appendChild(doc.createTextNode(UtilitiesBean.getDate(\"M.d.y h:mm a\")));\n    headerEl.appendChild(timeStampShortEl);\n    // Don't render the publish, subscribe, user preferences links if it's the guest user\n    if (fullName != null && !fullName.equals(\"Guest\")) {\n      Context globalIDContext = null;\n      try {\n        // Get the context that holds the global IDs for this user\n        globalIDContext = (Context)staticData.getPortalContext().lookup(\"/users/\" + staticData.getPerson().getID() + \"/channel-ids\");\n        if (canUserPublish()) {\n          // Create <chan-mgr-chanid> element under <header>\n          Element chanMgrChanidEl = doc.createElement(\"chan-mgr-chanid\");\n          chanMgrChanidEl.appendChild(doc.createTextNode((String)globalIDContext.lookup(\"/portal/channelmanager/general\")));\n          headerEl.appendChild(chanMgrChanidEl);\n        }\n      } catch (NamingException e) {\n        LogService.instance().log(LogService.ERROR, e);\n      }\n      try {\n        // Create <preferences-chanid> element under <header>\n        Element preferencesChanidEl = doc.createElement(\"preferences-chanid\");\n        preferencesChanidEl.appendChild(doc.createTextNode((String)globalIDContext.lookup(\"/portal/userpreferences/general\")));\n        headerEl.appendChild(preferencesChanidEl);\n      } catch (NamingException e) {\n        LogService.instance().log(LogService.ERROR, e);\n      }\n    }\n    doc.appendChild(headerEl);\n    return doc;\n  }","id":52930,"modified_method":"/**\n   * Returns the DOM object associated with the user\n   * NOTE: This should be made more effecient through caching\n   * @return\n   */\n  private Document getUserXML () {\n    // Get the fullname of the current user\n    String fullName = (String)staticData.getPerson().getFullName();\n    // Get a new DOM instance\n    Document doc = DocumentFactory.getNewDocument();\n    // Create <header> element\n    Element headerEl = doc.createElement(\"header\");\n    // Create <full-name> element under <header>\n    Element fullNameEl = doc.createElement(\"full-name\");\n    fullNameEl.appendChild(doc.createTextNode(fullName));\n    headerEl.appendChild(fullNameEl);\n    // Create <timestamp-long> element under <header>\n    Element timeStampLongEl = doc.createElement(\"timestamp-long\");\n    timeStampLongEl.appendChild(doc.createTextNode(UtilitiesBean.getDate(\"EEEE, MMM d, yyyy 'at' hh:mm a\")));\n    headerEl.appendChild(timeStampLongEl);\n    // Create <timestamp-short> element under <header>\n    Element timeStampShortEl = doc.createElement(\"timestamp-short\");\n    timeStampShortEl.appendChild(doc.createTextNode(UtilitiesBean.getDate(\"M.d.y h:mm a\")));\n    headerEl.appendChild(timeStampShortEl);\n    // Don't render the publish, subscribe, user preferences links if it's the guest user\n    if (staticData.getPerson().getSecurityContext().isAuthenticated()) {\n      Context globalIDContext = null;\n      try {\n        // Get the context that holds the global IDs for this user\n        globalIDContext = (Context)staticData.getPortalContext().lookup(\"/users/\" + staticData.getPerson().getID() + \"/channel-ids\");\n        if (canUserPublish()) {\n          // Create <chan-mgr-chanid> element under <header>\n          Element chanMgrChanidEl = doc.createElement(\"chan-mgr-chanid\");\n          chanMgrChanidEl.appendChild(doc.createTextNode((String)globalIDContext.lookup(\"/portal/channelmanager/general\")));\n          headerEl.appendChild(chanMgrChanidEl);\n        }\n      } catch (NamingException e) {\n        LogService.instance().log(LogService.ERROR, e);\n      }\n      try {\n        // Create <preferences-chanid> element under <header>\n        Element preferencesChanidEl = doc.createElement(\"preferences-chanid\");\n        preferencesChanidEl.appendChild(doc.createTextNode((String)globalIDContext.lookup(\"/portal/userpreferences/general\")));\n        headerEl.appendChild(preferencesChanidEl);\n      } catch (NamingException e) {\n        LogService.instance().log(LogService.ERROR, e);\n      }\n    }\n    doc.appendChild(headerEl);\n    return  (doc);\n  }","commit_id":"844226b0d4846bba6c97cdc93981ba444d60001e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Render method.\n   * @param out\n   * @exception PortalException\n   */\n  public void renderXML (ContentHandler out) throws PortalException {\n    // Perform the transformation\n    XSLT xslt = new XSLT();\n    xslt.setXML(getUserXML());\n    xslt.setXSL(sslLocation, runtimeData.getBrowserInfo());\n    xslt.setTarget(out);\n    xslt.setStylesheetParameter(\"baseActionURL\", runtimeData.getBaseActionURL());\n    if (staticData.getPerson().getFullName() != null && staticData.getPerson().getFullName().equals(\"Guest\"))\n      xslt.setStylesheetParameter(\"guest\", \"true\");\n    xslt.transform();\n  }","id":52931,"modified_method":"/**\n   * Render method.\n   * @param out\n   * @exception PortalException\n   */\n  public void renderXML (ContentHandler out) throws PortalException {\n    // Perform the transformation\n    XSLT xslt = new XSLT();\n    xslt.setXML(getUserXML());\n    xslt.setXSL(sslLocation, runtimeData.getBrowserInfo());\n    xslt.setTarget(out);\n    xslt.setStylesheetParameter(\"baseActionURL\", runtimeData.getBaseActionURL());\n    if (staticData.getPerson().isGuest() && !staticData.getPerson().getSecurityContext().isAuthenticated()) {\n      xslt.setStylesheetParameter(\"guest\", \"true\");\n    }\n    xslt.transform();\n  }","commit_id":"844226b0d4846bba6c97cdc93981ba444d60001e","url":"https://github.com/Jasig/uPortal"},{"original_method":"public void testAddNewPrivateSamplePortletData() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Sign Out\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.open(\"http://localhost:8080/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.click(\"//input[@value='Sign In']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Joe Bloggs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\n\t\t\t\"//div[@id='banner']/div/div/ul/li[8]/ul/li[6]/ul/li[2]/a[1]\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=View Staged Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\tselenium.click(\"link=Add Application\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@id='CMS-Journal']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id='CMS-Journal']/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id='Collaboration-Blogs']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id='Collaboration-Blogs']/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id='CMS-AssetPublisher']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id='CMS-AssetPublisher']/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@id='Polls-Polls']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id='Polls-Polls']/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Add Question']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Add Question']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_25_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_25_title\",\n\t\t\tRuntimeVariables.replace(\"Superman or Batman?!\"));\n\t\tselenium.type(\"_25_description\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Who could be the best superhero of them all?\"));\n\t\tselenium.type(\"_25_choiceDescriptiona\",\n\t\t\tRuntimeVariables.replace(\"Superman\"));\n\t\tselenium.type(\"_25_choiceDescriptionb\",\n\t\t\tRuntimeVariables.replace(\"Batman\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=exact:Superman or Batman?!\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"_25_choiceId\");\n\t\tselenium.click(\"//input[@value='Vote']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[starts-with(@id,'portlet-wrapper-101')]/div[1]/span\"));\n\t\tselenium.click(\n\t\t\t\"//div[starts-with(@id, 'portlet-wrapper-101')]/div[1]/div[1]/nobr[2]/a\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Display Settings\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.select(\"_86_selectionStyle\", \"label=Manual\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"_86_assetType\", \"label=Blogs Entry\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Third Test Entry\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Third Test Entry\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Display Settings\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Return to Full Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Third Test Entry\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id='portlet-small-icon-bar_33']/nobr[2]/a/img\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id='portlet-small-icon-bar_33']/nobr[2]/a/img\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"_86_pageDelta\", RuntimeVariables.replace(\"label=1\"));\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Entry\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Second Test Entry\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Add Article']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Add Article']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_15_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_15_title\",\n\t\t\tRuntimeVariables.replace(\"Article to be Published\"));\n\t\tselenium.type(\"_15_title\",\n\t\t\tRuntimeVariables.replace(\"Article to be Published\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_15_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"_15_editor\\\"]\");\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"FCKeditor1___Frame\\\"]\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.typeKeys(\"//body\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This article needs to be published. Today!\"));\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This article needs to be published. Today!\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.type(\"_15_description\",\n\t\t\tRuntimeVariables.replace(\"Please publish me!\"));\n\t\tselenium.select(\"_15_type\", RuntimeVariables.replace(\"label=Test\"));\n\t\tselenium.click(\"//input[@value='Save and Approve']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Articles\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Article to be Published\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":52932,"modified_method":"public void testAddNewPrivateSamplePortletData() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Sign Out\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.open(\"http://localhost:8080/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.click(\"//input[@value='Sign In']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Joe Bloggs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\n\t\t\t\"//div[@id='banner']/div/div/ul/li[8]/ul/li[6]/ul/li[2]/a[1]\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=View Staged Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Add Application\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Add Application\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@id='CMS-Journal']/p\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id='CMS-Journal']/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id='Collaboration-Blogs']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id='Collaboration-Blogs']/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id='CMS-AssetPublisher']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id='CMS-AssetPublisher']/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@id='Polls-Polls']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id='Polls-Polls']/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Add Question']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Add Question']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_25_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_25_title\",\n\t\t\tRuntimeVariables.replace(\"Superman or Batman?!\"));\n\t\tselenium.type(\"_25_description\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Who could be the best superhero of them all?\"));\n\t\tselenium.type(\"_25_choiceDescriptiona\",\n\t\t\tRuntimeVariables.replace(\"Superman\"));\n\t\tselenium.type(\"_25_choiceDescriptionb\",\n\t\t\tRuntimeVariables.replace(\"Batman\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=exact:Superman or Batman?!\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"_25_choiceId\");\n\t\tselenium.click(\"//input[@value='Vote']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[starts-with(@id,'portlet-wrapper-101')]/div[1]/span\"));\n\t\tselenium.click(\n\t\t\t\"//div[starts-with(@id, 'portlet-wrapper-101')]/div[1]/div[1]/nobr[2]/a\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Display Settings\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.select(\"_86_selectionStyle\", \"label=Manual\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"_86_assetType\", \"label=Blogs Entry\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Third Test Entry\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Third Test Entry\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Display Settings\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Return to Full Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Third Test Entry\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id='portlet-small-icon-bar_33']/nobr[2]/a/img\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id='portlet-small-icon-bar_33']/nobr[2]/a/img\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"_86_pageDelta\", RuntimeVariables.replace(\"label=1\"));\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Entry\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Second Test Entry\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Add Article']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Add Article']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_15_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_15_title\",\n\t\t\tRuntimeVariables.replace(\"Article to be Published\"));\n\t\tselenium.type(\"_15_title\",\n\t\t\tRuntimeVariables.replace(\"Article to be Published\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_15_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"_15_editor\\\"]\");\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"FCKeditor1___Frame\\\"]\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.typeKeys(\"//body\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This article needs to be published. Today!\"));\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This article needs to be published. Today!\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.type(\"_15_description\",\n\t\t\tRuntimeVariables.replace(\"Please publish me!\"));\n\t\tselenium.select(\"_15_type\", RuntimeVariables.replace(\"label=Test\"));\n\t\tselenium.click(\"//input[@value='Save and Approve']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Articles\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Article to be Published\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"35082fa3f1aa70db4831ce7837f58e7fd6efa0a3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCreateRemoteTestCommunity() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//a[@id=\\\"my-community-private-pages\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Sign Out\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.open(\"http://192.168.94.175:8080/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.click(\"//input[@value='Sign In']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='I Agree']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//a[@id='my-community-private-pages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//a[@id='my-community-private-pages']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Add Community']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Add Community']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_29_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_29_name\",\n\t\t\tRuntimeVariables.replace(\"Remote Publishing Communitiy\"));\n\t\tselenium.type(\"_29_description\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This community will be published to remotely.\"));\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":52933,"modified_method":"public void testCreateRemoteTestCommunity() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//a[@id=\\\"my-community-private-pages\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Sign Out\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.open(\"http://5.227.126.113:8080/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.click(\"//input[@value='Sign In']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='I Agree']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//a[@id='my-community-private-pages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//a[@id='my-community-private-pages']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Add Community']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Add Community']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_29_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_29_name\",\n\t\t\tRuntimeVariables.replace(\"Remote Publishing Communitiy\"));\n\t\tselenium.type(\"_29_description\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This community will be published to remotely.\"));\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"35082fa3f1aa70db4831ce7837f58e7fd6efa0a3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testPublishNewPrivateSampleDataToLive()\n\t\tthrows Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Publish to Live\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Publish to Live\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Options\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Options\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_88_PORTLET_DATA_33\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"_88_PORTLET_DATA_25\");\n\t\tselenium.click(\"_88_PORTLET_DATA_33\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_88_PORTLET_DATA_25\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Scheduler\");\n\t\tselenium.click(\"link=Pages\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"publishBtn\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"publishBtn\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to publish these pages[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=View Live Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":52934,"modified_method":"public void testPublishNewPrivateSampleDataToLive()\n\t\tthrows Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Publish to Live\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Publish to Live\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Options\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Options\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_88_PORTLET_DATA_33\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_88_PORTLET_DATA_25\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"_88_PORTLET_DATA_25\");\n\t\tselenium.click(\"_88_PORTLET_DATA_33\");\n\t\tselenium.click(\"_88_PORTLET_USER_PREFERENCESCheckbox\");\n\t\tselenium.click(\"link=Scheduler\");\n\t\tselenium.click(\"link=Pages\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"publishBtn\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"publishBtn\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to publish these pages[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=View Live Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"35082fa3f1aa70db4831ce7837f58e7fd6efa0a3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemotePublishStagedPrivatePages() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"my-community-private-pages\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"my-community-private-pages\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=All Communities\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=All Communities\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[starts-with(@class, 'results-grid')]/table[1]/tbody[1]/tr[3]/td[6]/ul[1]/li[1]/ul[1]/li[3]/nobr[1]/a\"));\n\t\tselenium.click(\n\t\t\t\"//div[starts-with(@class, 'results-grid')]/table[1]/tbody[1]/tr[3]/td[6]/ul[1]/li[1]/ul[1]/li[3]/nobr[1]/a\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Private Pages\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Private Pages\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@value='Publish to Remote']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Publish to Remote']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Pages\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@value='Publish to Remote']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Publish to Remote']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Options\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Options\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_29_PORTLET_DATA_33\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"_29_PORTLET_DATA_33\");\n\t\tselenium.click(\"_29_PORTLET_DATA_25\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Remote Options\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Remote Options\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_29_remoteAddress\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_29_remoteAddress\",\n\t\t\tRuntimeVariables.replace(\"192.168.94.175\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_29_remoteGroupId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_29_remoteGroupId\",\n\t\t\tRuntimeVariables.replace(\"${GroupID}\"));\n\t\tselenium.click(\n\t\t\t\"//div[starts-with(@id, 'publish-to-remote')]/form[1]/ul[1]/li[1]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"publishBtn\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"publishBtn\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to publish these pages[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"my-community-private-pages\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":52935,"modified_method":"public void testRemotePublishStagedPrivatePages() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=View Staged Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=View Staged Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Manage Pages\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Manage Pages\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@value='Publish to Remote']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Publish to Remote']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Options\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Options\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_88_PORTLET_DATA_33\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"_88_PORTLET_DATA_33\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_88_PORTLET_DATA_25\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"_88_PORTLET_DATA_25\");\n\t\tselenium.click(\"_88_PORTLET_USER_PREFERENCESCheckbox\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Remote Options\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Remote Options\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_88_remoteAddress\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_88_remoteAddress\",\n\t\t\tRuntimeVariables.replace(\"5.227.126.113\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_88_remoteGroupId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_88_remoteGroupId\",\n\t\t\tRuntimeVariables.replace(\"${GroupID}\"));\n\t\tselenium.click(\n\t\t\t\"//div[starts-with(@id, 'publish-to-remote')]/form[1]/ul[1]/li[1]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"publishBtn\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"publishBtn\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to publish these pages[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"my-community-private-pages\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"35082fa3f1aa70db4831ce7837f58e7fd6efa0a3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemotePublishStagedPublicPages() throws Exception {\n\t\tselenium.open(\"http://localhost:8080/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.click(\"//input[@value='Sign In']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Joe Bloggs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\n\t\t\t\"//div[@id='banner']/div/div/ul/li[8]/ul/li[6]/ul/li[1]/a[1]\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=View Staged Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=View Staged Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Manage Pages\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Manage Pages\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Publish to Remote']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"The staging environment is activated. Publish to Remote publishes from the live environment.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Options\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Options\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_88_PORTLET_DATA_33\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"_88_PORTLET_DATA_33\");\n\t\tselenium.click(\"_88_PORTLET_DATA_8\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Remote Options\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Remote Options\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_88_remoteAddress\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_88_remoteAddress\",\n\t\t\tRuntimeVariables.replace(\"192.168.94.175\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_88_remoteGroupId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_88_remoteGroupId\",\n\t\t\tRuntimeVariables.replace(\"${GroupID}\"));\n\t\tselenium.click(\n\t\t\t\"//div[starts-with(@id, 'publish-to-remote')]/form[1]/ul[1]/li[1]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"publishBtn\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"publishBtn\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to publish these pages[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":52936,"modified_method":"public void testRemotePublishStagedPublicPages() throws Exception {\n\t\tselenium.open(\"http://localhost:8080/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.click(\"//input[@value='Sign In']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Joe Bloggs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\n\t\t\t\"//div[@id='banner']/div/div/ul/li[8]/ul/li[6]/ul/li[1]/a[1]\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=View Staged Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=View Staged Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Manage Pages\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Manage Pages\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Publish to Remote']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"The staging environment is activated. Publish to Remote publishes from the live environment.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Options\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Options\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_88_PORTLET_DATA_33\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"_88_PORTLET_DATA_33\");\n\t\tselenium.click(\"_88_PORTLET_DATA_8\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Remote Options\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Remote Options\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_88_remoteAddress\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_88_remoteAddress\",\n\t\t\tRuntimeVariables.replace(\"5.227.126.113\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_88_remoteGroupId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_88_remoteGroupId\",\n\t\t\tRuntimeVariables.replace(\"${GroupID}\"));\n\t\tselenium.click(\n\t\t\t\"//div[starts-with(@id, 'publish-to-remote')]/form[1]/ul[1]/li[1]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"publishBtn\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"publishBtn\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to publish these pages[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"35082fa3f1aa70db4831ce7837f58e7fd6efa0a3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testVerifyPublicStagedRemotePublishing()\n\t\tthrows Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Sign Out\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.open(\"http://192.168.94.175:8080/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.click(\"//input[@value='Sign In']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id='banner']/div/div/ul/li[8]/ul/li[5]/ul/li[1]/a[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\n\t\t\t\"//div[@id='banner']/div/div/ul/li[8]/ul/li[5]/ul/li[1]/a[1]\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Entry\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Second Test Entry\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Third Test Entry\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Selenium Testing Party\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Star Wars Marathon!\"));\n\t}","id":52937,"modified_method":"public void testVerifyPublicStagedRemotePublishing()\n\t\tthrows Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Sign Out\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.open(\"http://5.227.126.113:8080/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.click(\"//input[@value='Sign In']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id='banner']/div/div/ul/li[8]/ul/li[5]/ul/li[1]/a[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\n\t\t\t\"//div[@id='banner']/div/div/ul/li[8]/ul/li[5]/ul/li[1]/a[1]\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Entry\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Second Test Entry\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Third Test Entry\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Selenium Testing Party\"));\n\t}","commit_id":"35082fa3f1aa70db4831ce7837f58e7fd6efa0a3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testVerifyRemotePublishStagedPrivatePages()\n\t\tthrows Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"my-community-private-pages\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"my-community-private-pages\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Sign Out\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.open(\"http://192.168.94.175:8080/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.click(\"//input[@value='Sign In']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id='banner']/div/div/ul/li[8]/ul/li[5]/ul/li[2]/a[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\n\t\t\t\"//div[@id='banner']/div/div/ul/li[8]/ul/li[5]/ul/li[2]/a[1]\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Configuration']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tverifyTrue(selenium.isElementPresent(\"link=Superman or Batman?!\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=1\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Test Entry 3\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Test Entry\"));\n\t\tverifyFalse(selenium.isElementPresent(\"link=Test Entry 2\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Articles\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Articles\");\n\t\tverifyTrue(selenium.isElementPresent(\"link=Article to be Published\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Return to Full Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.open(\"http://localhost:8080/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.click(\"//input[@value='Sign In']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"my-community-private-pages\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":52938,"modified_method":"public void testVerifyRemotePublishStagedPrivatePages()\n\t\tthrows Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"my-community-private-pages\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"my-community-private-pages\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Sign Out\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.open(\"http://5.227.126.113:8080/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.click(\"//input[@value='Sign In']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id='banner']/div/div/ul/li[8]/ul/li[5]/ul/li[2]/a[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\n\t\t\t\"//div[@id='banner']/div/div/ul/li[8]/ul/li[5]/ul/li[2]/a[1]\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Configuration']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tverifyTrue(selenium.isElementPresent(\"link=Superman or Batman?!\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=1\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Test Entry 3\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Test Entry\"));\n\t\tverifyFalse(selenium.isElementPresent(\"link=Test Entry 2\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Articles\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Articles\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isElementPresent(\"link=Article to be Published\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Return to Full Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.open(\"http://localhost:8080/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.click(\"//input[@value='Sign In']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"my-community-private-pages\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"35082fa3f1aa70db4831ce7837f58e7fd6efa0a3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testVerifyStagedRemotePublishing() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Sign Out\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.open(\"http://192.168.94.175:8080/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.click(\"//input[@value='Sign In']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id='banner']/div/div/ul/li[8]/ul/li[5]/ul/li[1]/a[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\n\t\t\t\"//div[@id='banner']/div/div/ul/li[8]/ul/li[5]/ul/li[1]/a[1]\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Entry\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Second Test Entry\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Third Test Entry\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Selenium Testing Party\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Star Wars Marathon!\"));\n\t}","id":52939,"modified_method":"public void testVerifyStagedRemotePublishing() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Sign Out\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.open(\"http://5.227.126.113:8080/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.click(\"//input[@value='Sign In']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id='banner']/div/div/ul/li[8]/ul/li[5]/ul/li[1]/a[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\n\t\t\t\"//div[@id='banner']/div/div/ul/li[8]/ul/li[5]/ul/li[1]/a[1]\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Entry\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Second Test Entry\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Third Test Entry\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Selenium Testing Party\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Star Wars Marathon!\"));\n\t}","commit_id":"35082fa3f1aa70db4831ce7837f58e7fd6efa0a3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSitesSite() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/div/div/div/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div/div/div/div/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Home\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[3]/div/section/header/h1/span\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//form/div[2]/span/span/button[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Add Site\"),\n\t\t\tselenium.getText(\"//form/div[2]/span/span/button[1]\"));\n\t\tselenium.clickAt(\"//form/div[2]/span/span/button[1]\",\n\t\t\tRuntimeVariables.replace(\"Add Site\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Information\"),\n\t\t\tselenium.getText(\"//h1/span\"));\n\t\tassertTrue(selenium.isVisible(\"//input\"));\n\t\tselenium.type(\"//input\", RuntimeVariables.replace(\"Open Site Name\"));\n\t\tassertTrue(selenium.isVisible(\"//textarea\"));\n\t\tselenium.type(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Open Site Description\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/div[1]/h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Settings\"),\n\t\t\tselenium.getText(\"//div[2]/div[1]/h1/span\"));\n\t\tassertTrue(selenium.isVisible(\"//select\"));\n\t\tselenium.select(\"//select\",\n\t\t\tRuntimeVariables.replace(\"Default Social Office Site\"));\n\t\tassertTrue(selenium.isVisible(\"//span[2]/span/span/select\"));\n\t\tselenium.select(\"//span[2]/span/span/select\",\n\t\t\tRuntimeVariables.replace(\"Open\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/div[1]/h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Customization\"),\n\t\t\tselenium.getText(\"//div[3]/div[1]/h1/span\"));\n\t\tassertTrue(selenium.isChecked(\"//div[4]/span[1]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[2]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[3]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[4]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[5]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[6]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[7]/input\"));\n\t\tassertEquals(\"Save\", selenium.getValue(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t}","id":52940,"modified_method":"public void testAddSitesSite() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//li[contains(@class, 'selected')]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//li[contains(@class, 'selected')]/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[@id='so-sidebar']/h3\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//button[contains(.,'Add Site')]/span[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Add Site\"),\n\t\t\tselenium.getText(\"//button[contains(.,'Add Site')]/span[2]\"));\n\t\tselenium.clickAt(\"//button[contains(.,'Add Site')]/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Add Site\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Information\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[1]\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@id='_5_WAR_soportlet_name']\"));\n\t\tselenium.type(\"//input[@id='_5_WAR_soportlet_name']\",\n\t\t\tRuntimeVariables.replace(\"Open Site Name\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//textarea[@id='_5_WAR_soportlet_description']\"));\n\t\tselenium.type(\"//textarea[@id='_5_WAR_soportlet_description']\",\n\t\t\tRuntimeVariables.replace(\"Open Site Description\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Settings\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[2]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@id='_5_WAR_soportlet_layoutSetPrototypeSelect']\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_layoutSetPrototypeSelect']\",\n\t\t\tRuntimeVariables.replace(\"Default Social Office Site\"));\n\t\tassertTrue(selenium.isVisible(\"//select[@id='_5_WAR_soportlet_type']\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_type']\",\n\t\t\tRuntimeVariables.replace(\"Open\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[3]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Customization\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[3]\"));\n\t\tassertTrue(selenium.isChecked(\"//div[4]/span[1]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[2]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[3]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[4]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[5]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[6]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[7]/input\"));\n\t\tassertEquals(\"Save\", selenium.getValue(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t}","commit_id":"03078d4f26989dc2ec14b7e4613404fcf14cbd99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSitesSite() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/div/div/div/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div/div/div/div/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Home\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[3]/div/section/header/h1/span\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//form/div[2]/span/span/button[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Add Site\"),\n\t\t\tselenium.getText(\"//form/div[2]/span/span/button[1]\"));\n\t\tselenium.clickAt(\"//form/div[2]/span/span/button[1]\",\n\t\t\tRuntimeVariables.replace(\"Add Site\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Information\"),\n\t\t\tselenium.getText(\"//h1/span\"));\n\t\tassertTrue(selenium.isVisible(\"//input\"));\n\t\tselenium.type(\"//input\", RuntimeVariables.replace(\"Open Site Name\"));\n\t\tassertTrue(selenium.isVisible(\"//textarea\"));\n\t\tselenium.type(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Open Site Description\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/div[1]/h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Settings\"),\n\t\t\tselenium.getText(\"//div[2]/div[1]/h1/span\"));\n\t\tassertTrue(selenium.isVisible(\"//select\"));\n\t\tselenium.select(\"//select\",\n\t\t\tRuntimeVariables.replace(\"Default Social Office Site\"));\n\t\tassertTrue(selenium.isVisible(\"//span[2]/span/span/select\"));\n\t\tselenium.select(\"//span[2]/span/span/select\",\n\t\t\tRuntimeVariables.replace(\"Open\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/div[1]/h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Customization\"),\n\t\t\tselenium.getText(\"//div[3]/div[1]/h1/span\"));\n\t\tassertTrue(selenium.isChecked(\"//div[4]/span[1]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[2]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[3]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[4]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[5]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[6]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[7]/input\"));\n\t\tassertEquals(\"Save\", selenium.getValue(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t}","id":52941,"modified_method":"public void testAddSitesSite() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//li[contains(@class, 'selected')]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//li[contains(@class, 'selected')]/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[@id='so-sidebar']/h3\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//button[contains(.,'Add Site')]/span[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Add Site\"),\n\t\t\tselenium.getText(\"//button[contains(.,'Add Site')]/span[2]\"));\n\t\tselenium.clickAt(\"//button[contains(.,'Add Site')]/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Add Site\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Information\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[1]\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@id='_5_WAR_soportlet_name']\"));\n\t\tselenium.type(\"//input[@id='_5_WAR_soportlet_name']\",\n\t\t\tRuntimeVariables.replace(\"Open Site Name\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//textarea[@id='_5_WAR_soportlet_description']\"));\n\t\tselenium.type(\"//textarea[@id='_5_WAR_soportlet_description']\",\n\t\t\tRuntimeVariables.replace(\"Open Site Description\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Settings\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[2]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@id='_5_WAR_soportlet_layoutSetPrototypeSelect']\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_layoutSetPrototypeSelect']\",\n\t\t\tRuntimeVariables.replace(\"Default Social Office Site\"));\n\t\tassertTrue(selenium.isVisible(\"//select[@id='_5_WAR_soportlet_type']\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_type']\",\n\t\t\tRuntimeVariables.replace(\"Open\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[3]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Customization\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[3]\"));\n\t\tassertTrue(selenium.isChecked(\"//div[4]/span[1]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[2]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[3]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[4]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[5]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[6]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[7]/input\"));\n\t\tassertEquals(\"Save\", selenium.getValue(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t}","commit_id":"03078d4f26989dc2ec14b7e4613404fcf14cbd99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSitesSite() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/div/div/div/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div/div/div/div/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Home\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[3]/div/section/header/h1/span\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//form/div[2]/span/span/button[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Add Site\"),\n\t\t\tselenium.getText(\"//form/div[2]/span/span/button[1]\"));\n\t\tselenium.clickAt(\"//form/div[2]/span/span/button[1]\",\n\t\t\tRuntimeVariables.replace(\"Add Site\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Information\"),\n\t\t\tselenium.getText(\"//h1/span\"));\n\t\tassertTrue(selenium.isVisible(\"//input\"));\n\t\tselenium.type(\"//input\", RuntimeVariables.replace(\"Open Site Name\"));\n\t\tassertTrue(selenium.isVisible(\"//textarea\"));\n\t\tselenium.type(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Open Site Description\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/div[1]/h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Settings\"),\n\t\t\tselenium.getText(\"//div[2]/div[1]/h1/span\"));\n\t\tassertTrue(selenium.isVisible(\"//select\"));\n\t\tselenium.select(\"//select\",\n\t\t\tRuntimeVariables.replace(\"Default Social Office Site\"));\n\t\tassertTrue(selenium.isVisible(\"//span[2]/span/span/select\"));\n\t\tselenium.select(\"//span[2]/span/span/select\",\n\t\t\tRuntimeVariables.replace(\"Open\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/div[1]/h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Customization\"),\n\t\t\tselenium.getText(\"//div[3]/div[1]/h1/span\"));\n\t\tassertTrue(selenium.isChecked(\"//div[4]/span[1]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[2]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[3]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[4]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[5]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[6]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[7]/input\"));\n\t\tassertEquals(\"Save\", selenium.getValue(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t}","id":52942,"modified_method":"public void testAddSitesSite() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//li[contains(@class, 'selected')]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//li[contains(@class, 'selected')]/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[@id='so-sidebar']/h3\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//button[contains(.,'Add Site')]/span[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Add Site\"),\n\t\t\tselenium.getText(\"//button[contains(.,'Add Site')]/span[2]\"));\n\t\tselenium.clickAt(\"//button[contains(.,'Add Site')]/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Add Site\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Information\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[1]\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@id='_5_WAR_soportlet_name']\"));\n\t\tselenium.type(\"//input[@id='_5_WAR_soportlet_name']\",\n\t\t\tRuntimeVariables.replace(\"Open Site Name\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//textarea[@id='_5_WAR_soportlet_description']\"));\n\t\tselenium.type(\"//textarea[@id='_5_WAR_soportlet_description']\",\n\t\t\tRuntimeVariables.replace(\"Open Site Description\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Settings\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[2]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@id='_5_WAR_soportlet_layoutSetPrototypeSelect']\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_layoutSetPrototypeSelect']\",\n\t\t\tRuntimeVariables.replace(\"Default Social Office Site\"));\n\t\tassertTrue(selenium.isVisible(\"//select[@id='_5_WAR_soportlet_type']\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_type']\",\n\t\t\tRuntimeVariables.replace(\"Open\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[3]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Customization\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[3]\"));\n\t\tassertTrue(selenium.isChecked(\"//div[4]/span[1]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[2]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[3]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[4]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[5]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[6]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[7]/input\"));\n\t\tassertEquals(\"Save\", selenium.getValue(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t}","commit_id":"03078d4f26989dc2ec14b7e4613404fcf14cbd99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSitesSite() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/div/div/div/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div/div/div/div/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Home\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[3]/div/section/header/h1/span\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//form/div[2]/span/span/button[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Add Site\"),\n\t\t\tselenium.getText(\"//form/div[2]/span/span/button[1]\"));\n\t\tselenium.clickAt(\"//form/div[2]/span/span/button[1]\",\n\t\t\tRuntimeVariables.replace(\"Add Site\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Information\"),\n\t\t\tselenium.getText(\"//h1/span\"));\n\t\tassertTrue(selenium.isVisible(\"//input\"));\n\t\tselenium.type(\"//input\", RuntimeVariables.replace(\"Open Site Name\"));\n\t\tassertTrue(selenium.isVisible(\"//textarea\"));\n\t\tselenium.type(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Open Site Description\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/div[1]/h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Settings\"),\n\t\t\tselenium.getText(\"//div[2]/div[1]/h1/span\"));\n\t\tassertTrue(selenium.isVisible(\"//select\"));\n\t\tselenium.select(\"//select\",\n\t\t\tRuntimeVariables.replace(\"Default Social Office Site\"));\n\t\tassertTrue(selenium.isVisible(\"//span[2]/span/span/select\"));\n\t\tselenium.select(\"//span[2]/span/span/select\",\n\t\t\tRuntimeVariables.replace(\"Open\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/div[1]/h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Customization\"),\n\t\t\tselenium.getText(\"//div[3]/div[1]/h1/span\"));\n\t\tassertTrue(selenium.isChecked(\"//div[4]/span[1]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[2]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[3]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[4]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[5]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[6]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[7]/input\"));\n\t\tassertEquals(\"Save\", selenium.getValue(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t}","id":52943,"modified_method":"public void testAddSitesSite() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//li[contains(@class, 'selected')]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//li[contains(@class, 'selected')]/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[@id='so-sidebar']/h3\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//button[contains(.,'Add Site')]/span[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Add Site\"),\n\t\t\tselenium.getText(\"//button[contains(.,'Add Site')]/span[2]\"));\n\t\tselenium.clickAt(\"//button[contains(.,'Add Site')]/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Add Site\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Information\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[1]\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@id='_5_WAR_soportlet_name']\"));\n\t\tselenium.type(\"//input[@id='_5_WAR_soportlet_name']\",\n\t\t\tRuntimeVariables.replace(\"Open Site Name\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//textarea[@id='_5_WAR_soportlet_description']\"));\n\t\tselenium.type(\"//textarea[@id='_5_WAR_soportlet_description']\",\n\t\t\tRuntimeVariables.replace(\"Open Site Description\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Settings\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[2]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@id='_5_WAR_soportlet_layoutSetPrototypeSelect']\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_layoutSetPrototypeSelect']\",\n\t\t\tRuntimeVariables.replace(\"Default Social Office Site\"));\n\t\tassertTrue(selenium.isVisible(\"//select[@id='_5_WAR_soportlet_type']\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_type']\",\n\t\t\tRuntimeVariables.replace(\"Open\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[3]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Customization\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[3]\"));\n\t\tassertTrue(selenium.isChecked(\"//div[4]/span[1]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[2]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[3]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[4]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[5]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[6]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[7]/input\"));\n\t\tassertEquals(\"Save\", selenium.getValue(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t}","commit_id":"03078d4f26989dc2ec14b7e4613404fcf14cbd99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSitesSite() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/div/div/div/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div/div/div/div/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Home\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[3]/div/section/header/h1/span\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//form/div[2]/span/span/button[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Add Site\"),\n\t\t\tselenium.getText(\"//form/div[2]/span/span/button[1]\"));\n\t\tselenium.clickAt(\"//form/div[2]/span/span/button[1]\",\n\t\t\tRuntimeVariables.replace(\"Add Site\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Information\"),\n\t\t\tselenium.getText(\"//h1/span\"));\n\t\tassertTrue(selenium.isVisible(\"//input\"));\n\t\tselenium.type(\"//input\", RuntimeVariables.replace(\"Open Site Name\"));\n\t\tassertTrue(selenium.isVisible(\"//textarea\"));\n\t\tselenium.type(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Open Site Description\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/div[1]/h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Settings\"),\n\t\t\tselenium.getText(\"//div[2]/div[1]/h1/span\"));\n\t\tassertTrue(selenium.isVisible(\"//select\"));\n\t\tselenium.select(\"//select\",\n\t\t\tRuntimeVariables.replace(\"Default Social Office Site\"));\n\t\tassertTrue(selenium.isVisible(\"//span[2]/span/span/select\"));\n\t\tselenium.select(\"//span[2]/span/span/select\",\n\t\t\tRuntimeVariables.replace(\"Open\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/div[1]/h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Customization\"),\n\t\t\tselenium.getText(\"//div[3]/div[1]/h1/span\"));\n\t\tassertTrue(selenium.isChecked(\"//div[4]/span[1]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[2]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[3]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[4]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[5]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[6]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[7]/input\"));\n\t\tassertEquals(\"Save\", selenium.getValue(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t}","id":52944,"modified_method":"public void testAddSitesSite() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//li[contains(@class, 'selected')]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//li[contains(@class, 'selected')]/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[@id='so-sidebar']/h3\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//button[contains(.,'Add Site')]/span[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Add Site\"),\n\t\t\tselenium.getText(\"//button[contains(.,'Add Site')]/span[2]\"));\n\t\tselenium.clickAt(\"//button[contains(.,'Add Site')]/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Add Site\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Information\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[1]\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@id='_5_WAR_soportlet_name']\"));\n\t\tselenium.type(\"//input[@id='_5_WAR_soportlet_name']\",\n\t\t\tRuntimeVariables.replace(\"Open Site Name\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//textarea[@id='_5_WAR_soportlet_description']\"));\n\t\tselenium.type(\"//textarea[@id='_5_WAR_soportlet_description']\",\n\t\t\tRuntimeVariables.replace(\"Open Site Description\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Settings\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[2]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@id='_5_WAR_soportlet_layoutSetPrototypeSelect']\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_layoutSetPrototypeSelect']\",\n\t\t\tRuntimeVariables.replace(\"Default Social Office Site\"));\n\t\tassertTrue(selenium.isVisible(\"//select[@id='_5_WAR_soportlet_type']\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_type']\",\n\t\t\tRuntimeVariables.replace(\"Open\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[3]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Customization\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[3]\"));\n\t\tassertTrue(selenium.isChecked(\"//div[4]/span[1]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[2]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[3]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[4]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[5]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[6]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[7]/input\"));\n\t\tassertEquals(\"Save\", selenium.getValue(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t}","commit_id":"03078d4f26989dc2ec14b7e4613404fcf14cbd99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSitesSiteTypePrivate() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/div/div/div/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div/div/div/div/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Home\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[3]/div/section/header/h1/span\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//form/div[2]/span/span/button[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Add Site\"),\n\t\t\tselenium.getText(\"//form/div[2]/span/span/button[1]\"));\n\t\tselenium.clickAt(\"//form/div[2]/span/span/button[1]\",\n\t\t\tRuntimeVariables.replace(\"Add Site\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Information\"),\n\t\t\tselenium.getText(\"//h1/span\"));\n\t\tassertTrue(selenium.isVisible(\"//input\"));\n\t\tselenium.type(\"//input\", RuntimeVariables.replace(\"Private Site Name\"));\n\t\tassertTrue(selenium.isVisible(\"//textarea\"));\n\t\tselenium.type(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Private Site Description\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/div[1]/h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Settings\"),\n\t\t\tselenium.getText(\"//div[2]/div[1]/h1/span\"));\n\t\tassertTrue(selenium.isVisible(\"//select\"));\n\t\tselenium.select(\"//select\",\n\t\t\tRuntimeVariables.replace(\"Default Social Office Site\"));\n\t\tassertTrue(selenium.isVisible(\"//span[2]/span/span/select\"));\n\t\tselenium.select(\"//span[2]/span/span/select\",\n\t\t\tRuntimeVariables.replace(\"Private\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/div[1]/h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Customization\"),\n\t\t\tselenium.getText(\"//div[3]/div[1]/h1/span\"));\n\t\tassertTrue(selenium.isChecked(\"//div[4]/span[1]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[2]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[3]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[4]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[5]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[6]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[7]/input\"));\n\t\tassertEquals(\"Save\", selenium.getValue(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Private Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t}","id":52945,"modified_method":"public void testAddSitesSiteTypePrivate() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//li[contains(@class, 'selected')]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//li[contains(@class, 'selected')]/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[@id='so-sidebar']/h3\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//button[contains(.,'Add Site')]/span[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Add Site\"),\n\t\t\tselenium.getText(\"//button[contains(.,'Add Site')]/span[2]\"));\n\t\tselenium.clickAt(\"//button[contains(.,'Add Site')]/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Add Site\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Information\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[1]\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@id='_5_WAR_soportlet_name']\"));\n\t\tselenium.type(\"//input[@id='_5_WAR_soportlet_name']\",\n\t\t\tRuntimeVariables.replace(\"Private Site Name\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//textarea[@id='_5_WAR_soportlet_description']\"));\n\t\tselenium.type(\"//textarea[@id='_5_WAR_soportlet_description']\",\n\t\t\tRuntimeVariables.replace(\"Private Site Description\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Settings\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[2]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@id='_5_WAR_soportlet_layoutSetPrototypeSelect']\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_layoutSetPrototypeSelect']\",\n\t\t\tRuntimeVariables.replace(\"Default Social Office Site\"));\n\t\tassertTrue(selenium.isVisible(\"//select[@id='_5_WAR_soportlet_type']\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_type']\",\n\t\t\tRuntimeVariables.replace(\"Private\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[3]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Customization\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[3]\"));\n\t\tassertTrue(selenium.isChecked(\"//div[4]/span[1]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[2]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[3]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[4]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[5]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[6]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[7]/input\"));\n\t\tassertEquals(\"Save\", selenium.getValue(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Private Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t}","commit_id":"03078d4f26989dc2ec14b7e4613404fcf14cbd99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSitesSiteTypePrivate() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/div/div/div/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div/div/div/div/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Home\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[3]/div/section/header/h1/span\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//form/div[2]/span/span/button[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Add Site\"),\n\t\t\tselenium.getText(\"//form/div[2]/span/span/button[1]\"));\n\t\tselenium.clickAt(\"//form/div[2]/span/span/button[1]\",\n\t\t\tRuntimeVariables.replace(\"Add Site\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Information\"),\n\t\t\tselenium.getText(\"//h1/span\"));\n\t\tassertTrue(selenium.isVisible(\"//input\"));\n\t\tselenium.type(\"//input\", RuntimeVariables.replace(\"Private Site Name\"));\n\t\tassertTrue(selenium.isVisible(\"//textarea\"));\n\t\tselenium.type(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Private Site Description\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/div[1]/h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Settings\"),\n\t\t\tselenium.getText(\"//div[2]/div[1]/h1/span\"));\n\t\tassertTrue(selenium.isVisible(\"//select\"));\n\t\tselenium.select(\"//select\",\n\t\t\tRuntimeVariables.replace(\"Default Social Office Site\"));\n\t\tassertTrue(selenium.isVisible(\"//span[2]/span/span/select\"));\n\t\tselenium.select(\"//span[2]/span/span/select\",\n\t\t\tRuntimeVariables.replace(\"Private\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/div[1]/h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Customization\"),\n\t\t\tselenium.getText(\"//div[3]/div[1]/h1/span\"));\n\t\tassertTrue(selenium.isChecked(\"//div[4]/span[1]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[2]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[3]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[4]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[5]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[6]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[7]/input\"));\n\t\tassertEquals(\"Save\", selenium.getValue(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Private Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t}","id":52946,"modified_method":"public void testAddSitesSiteTypePrivate() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//li[contains(@class, 'selected')]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//li[contains(@class, 'selected')]/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[@id='so-sidebar']/h3\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//button[contains(.,'Add Site')]/span[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Add Site\"),\n\t\t\tselenium.getText(\"//button[contains(.,'Add Site')]/span[2]\"));\n\t\tselenium.clickAt(\"//button[contains(.,'Add Site')]/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Add Site\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Information\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[1]\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@id='_5_WAR_soportlet_name']\"));\n\t\tselenium.type(\"//input[@id='_5_WAR_soportlet_name']\",\n\t\t\tRuntimeVariables.replace(\"Private Site Name\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//textarea[@id='_5_WAR_soportlet_description']\"));\n\t\tselenium.type(\"//textarea[@id='_5_WAR_soportlet_description']\",\n\t\t\tRuntimeVariables.replace(\"Private Site Description\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Settings\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[2]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@id='_5_WAR_soportlet_layoutSetPrototypeSelect']\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_layoutSetPrototypeSelect']\",\n\t\t\tRuntimeVariables.replace(\"Default Social Office Site\"));\n\t\tassertTrue(selenium.isVisible(\"//select[@id='_5_WAR_soportlet_type']\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_type']\",\n\t\t\tRuntimeVariables.replace(\"Private\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[3]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Customization\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[3]\"));\n\t\tassertTrue(selenium.isChecked(\"//div[4]/span[1]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[2]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[3]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[4]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[5]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[6]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[7]/input\"));\n\t\tassertEquals(\"Save\", selenium.getValue(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Private Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t}","commit_id":"03078d4f26989dc2ec14b7e4613404fcf14cbd99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSitesSiteTypePrivate() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/div/div/div/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div/div/div/div/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Home\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[3]/div/section/header/h1/span\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//form/div[2]/span/span/button[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Add Site\"),\n\t\t\tselenium.getText(\"//form/div[2]/span/span/button[1]\"));\n\t\tselenium.clickAt(\"//form/div[2]/span/span/button[1]\",\n\t\t\tRuntimeVariables.replace(\"Add Site\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Information\"),\n\t\t\tselenium.getText(\"//h1/span\"));\n\t\tassertTrue(selenium.isVisible(\"//input\"));\n\t\tselenium.type(\"//input\", RuntimeVariables.replace(\"Private Site Name\"));\n\t\tassertTrue(selenium.isVisible(\"//textarea\"));\n\t\tselenium.type(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Private Site Description\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/div[1]/h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Settings\"),\n\t\t\tselenium.getText(\"//div[2]/div[1]/h1/span\"));\n\t\tassertTrue(selenium.isVisible(\"//select\"));\n\t\tselenium.select(\"//select\",\n\t\t\tRuntimeVariables.replace(\"Default Social Office Site\"));\n\t\tassertTrue(selenium.isVisible(\"//span[2]/span/span/select\"));\n\t\tselenium.select(\"//span[2]/span/span/select\",\n\t\t\tRuntimeVariables.replace(\"Private\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/div[1]/h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Customization\"),\n\t\t\tselenium.getText(\"//div[3]/div[1]/h1/span\"));\n\t\tassertTrue(selenium.isChecked(\"//div[4]/span[1]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[2]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[3]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[4]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[5]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[6]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[7]/input\"));\n\t\tassertEquals(\"Save\", selenium.getValue(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Private Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t}","id":52947,"modified_method":"public void testAddSitesSiteTypePrivate() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//li[contains(@class, 'selected')]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//li[contains(@class, 'selected')]/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[@id='so-sidebar']/h3\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//button[contains(.,'Add Site')]/span[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Add Site\"),\n\t\t\tselenium.getText(\"//button[contains(.,'Add Site')]/span[2]\"));\n\t\tselenium.clickAt(\"//button[contains(.,'Add Site')]/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Add Site\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Information\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[1]\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@id='_5_WAR_soportlet_name']\"));\n\t\tselenium.type(\"//input[@id='_5_WAR_soportlet_name']\",\n\t\t\tRuntimeVariables.replace(\"Private Site Name\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//textarea[@id='_5_WAR_soportlet_description']\"));\n\t\tselenium.type(\"//textarea[@id='_5_WAR_soportlet_description']\",\n\t\t\tRuntimeVariables.replace(\"Private Site Description\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Settings\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[2]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@id='_5_WAR_soportlet_layoutSetPrototypeSelect']\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_layoutSetPrototypeSelect']\",\n\t\t\tRuntimeVariables.replace(\"Default Social Office Site\"));\n\t\tassertTrue(selenium.isVisible(\"//select[@id='_5_WAR_soportlet_type']\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_type']\",\n\t\t\tRuntimeVariables.replace(\"Private\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[3]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Customization\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[3]\"));\n\t\tassertTrue(selenium.isChecked(\"//div[4]/span[1]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[2]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[3]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[4]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[5]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[6]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[7]/input\"));\n\t\tassertEquals(\"Save\", selenium.getValue(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Private Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t}","commit_id":"03078d4f26989dc2ec14b7e4613404fcf14cbd99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSitesSiteTypePrivate() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/div/div/div/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div/div/div/div/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Home\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[3]/div/section/header/h1/span\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//form/div[2]/span/span/button[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Add Site\"),\n\t\t\tselenium.getText(\"//form/div[2]/span/span/button[1]\"));\n\t\tselenium.clickAt(\"//form/div[2]/span/span/button[1]\",\n\t\t\tRuntimeVariables.replace(\"Add Site\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Information\"),\n\t\t\tselenium.getText(\"//h1/span\"));\n\t\tassertTrue(selenium.isVisible(\"//input\"));\n\t\tselenium.type(\"//input\", RuntimeVariables.replace(\"Private Site Name\"));\n\t\tassertTrue(selenium.isVisible(\"//textarea\"));\n\t\tselenium.type(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Private Site Description\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/div[1]/h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Settings\"),\n\t\t\tselenium.getText(\"//div[2]/div[1]/h1/span\"));\n\t\tassertTrue(selenium.isVisible(\"//select\"));\n\t\tselenium.select(\"//select\",\n\t\t\tRuntimeVariables.replace(\"Default Social Office Site\"));\n\t\tassertTrue(selenium.isVisible(\"//span[2]/span/span/select\"));\n\t\tselenium.select(\"//span[2]/span/span/select\",\n\t\t\tRuntimeVariables.replace(\"Private\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/div[1]/h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Customization\"),\n\t\t\tselenium.getText(\"//div[3]/div[1]/h1/span\"));\n\t\tassertTrue(selenium.isChecked(\"//div[4]/span[1]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[2]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[3]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[4]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[5]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[6]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[7]/input\"));\n\t\tassertEquals(\"Save\", selenium.getValue(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Private Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t}","id":52948,"modified_method":"public void testAddSitesSiteTypePrivate() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//li[contains(@class, 'selected')]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//li[contains(@class, 'selected')]/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[@id='so-sidebar']/h3\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//button[contains(.,'Add Site')]/span[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Add Site\"),\n\t\t\tselenium.getText(\"//button[contains(.,'Add Site')]/span[2]\"));\n\t\tselenium.clickAt(\"//button[contains(.,'Add Site')]/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Add Site\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Information\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[1]\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@id='_5_WAR_soportlet_name']\"));\n\t\tselenium.type(\"//input[@id='_5_WAR_soportlet_name']\",\n\t\t\tRuntimeVariables.replace(\"Private Site Name\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//textarea[@id='_5_WAR_soportlet_description']\"));\n\t\tselenium.type(\"//textarea[@id='_5_WAR_soportlet_description']\",\n\t\t\tRuntimeVariables.replace(\"Private Site Description\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Settings\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[2]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@id='_5_WAR_soportlet_layoutSetPrototypeSelect']\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_layoutSetPrototypeSelect']\",\n\t\t\tRuntimeVariables.replace(\"Default Social Office Site\"));\n\t\tassertTrue(selenium.isVisible(\"//select[@id='_5_WAR_soportlet_type']\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_type']\",\n\t\t\tRuntimeVariables.replace(\"Private\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[3]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Customization\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[3]\"));\n\t\tassertTrue(selenium.isChecked(\"//div[4]/span[1]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[2]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[3]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[4]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[5]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[6]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[7]/input\"));\n\t\tassertEquals(\"Save\", selenium.getValue(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Private Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t}","commit_id":"03078d4f26989dc2ec14b7e4613404fcf14cbd99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSitesSiteTypeRestricted() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/div/div/div/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div/div/div/div/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Home\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[3]/div/section/header/h1/span\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//form/div[2]/span/span/button[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Add Site\"),\n\t\t\tselenium.getText(\"//form/div[2]/span/span/button[1]\"));\n\t\tselenium.clickAt(\"//form/div[2]/span/span/button[1]\",\n\t\t\tRuntimeVariables.replace(\"Add Site\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Information\"),\n\t\t\tselenium.getText(\"//h1/span\"));\n\t\tassertTrue(selenium.isVisible(\"//input\"));\n\t\tselenium.type(\"//input\",\n\t\t\tRuntimeVariables.replace(\"Restricted Site Name\"));\n\t\tassertTrue(selenium.isVisible(\"//textarea\"));\n\t\tselenium.type(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Private Site Description\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/div[1]/h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Settings\"),\n\t\t\tselenium.getText(\"//div[2]/div[1]/h1/span\"));\n\t\tassertTrue(selenium.isVisible(\"//select\"));\n\t\tselenium.select(\"//select\",\n\t\t\tRuntimeVariables.replace(\"Default Social Office Site\"));\n\t\tassertTrue(selenium.isVisible(\"//span[2]/span/span/select\"));\n\t\tselenium.select(\"//span[2]/span/span/select\",\n\t\t\tRuntimeVariables.replace(\"Restricted\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/div[1]/h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Customization\"),\n\t\t\tselenium.getText(\"//div[3]/div[1]/h1/span\"));\n\t\tassertTrue(selenium.isChecked(\"//div[4]/span[1]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[2]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[3]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[4]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[5]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[6]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[7]/input\"));\n\t\tassertEquals(\"Save\", selenium.getValue(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Restricted Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t}","id":52949,"modified_method":"public void testAddSitesSiteTypeRestricted() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//li[contains(@class, 'selected')]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//li[contains(@class, 'selected')]/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[@id='so-sidebar']/h3\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//button[contains(.,'Add Site')]/span[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Add Site\"),\n\t\t\tselenium.getText(\"//button[contains(.,'Add Site')]/span[2]\"));\n\t\tselenium.clickAt(\"//button[contains(.,'Add Site')]/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Add Site\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Information\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[1]\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@id='_5_WAR_soportlet_name']\"));\n\t\tselenium.type(\"//input[@id='_5_WAR_soportlet_name']\",\n\t\t\tRuntimeVariables.replace(\"Restricted Site Name\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//textarea[@id='_5_WAR_soportlet_description']\"));\n\t\tselenium.type(\"//textarea[@id='_5_WAR_soportlet_description']\",\n\t\t\tRuntimeVariables.replace(\"Restricted Site Description\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Settings\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[2]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@id='_5_WAR_soportlet_layoutSetPrototypeSelect']\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_layoutSetPrototypeSelect']\",\n\t\t\tRuntimeVariables.replace(\"Default Social Office Site\"));\n\t\tassertTrue(selenium.isVisible(\"//select[@id='_5_WAR_soportlet_type']\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_type']\",\n\t\t\tRuntimeVariables.replace(\"Restricted\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[3]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Customization\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[3]\"));\n\t\tassertTrue(selenium.isChecked(\"//div[4]/span[1]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[2]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[3]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[4]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[5]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[6]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[7]/input\"));\n\t\tassertEquals(\"Save\", selenium.getValue(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Private Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t}","commit_id":"03078d4f26989dc2ec14b7e4613404fcf14cbd99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSitesSiteTypeRestricted() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/div/div/div/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div/div/div/div/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Home\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[3]/div/section/header/h1/span\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//form/div[2]/span/span/button[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Add Site\"),\n\t\t\tselenium.getText(\"//form/div[2]/span/span/button[1]\"));\n\t\tselenium.clickAt(\"//form/div[2]/span/span/button[1]\",\n\t\t\tRuntimeVariables.replace(\"Add Site\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Information\"),\n\t\t\tselenium.getText(\"//h1/span\"));\n\t\tassertTrue(selenium.isVisible(\"//input\"));\n\t\tselenium.type(\"//input\",\n\t\t\tRuntimeVariables.replace(\"Restricted Site Name\"));\n\t\tassertTrue(selenium.isVisible(\"//textarea\"));\n\t\tselenium.type(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Private Site Description\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/div[1]/h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Settings\"),\n\t\t\tselenium.getText(\"//div[2]/div[1]/h1/span\"));\n\t\tassertTrue(selenium.isVisible(\"//select\"));\n\t\tselenium.select(\"//select\",\n\t\t\tRuntimeVariables.replace(\"Default Social Office Site\"));\n\t\tassertTrue(selenium.isVisible(\"//span[2]/span/span/select\"));\n\t\tselenium.select(\"//span[2]/span/span/select\",\n\t\t\tRuntimeVariables.replace(\"Restricted\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/div[1]/h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Customization\"),\n\t\t\tselenium.getText(\"//div[3]/div[1]/h1/span\"));\n\t\tassertTrue(selenium.isChecked(\"//div[4]/span[1]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[2]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[3]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[4]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[5]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[6]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[7]/input\"));\n\t\tassertEquals(\"Save\", selenium.getValue(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Restricted Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t}","id":52950,"modified_method":"public void testAddSitesSiteTypeRestricted() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//li[contains(@class, 'selected')]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//li[contains(@class, 'selected')]/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[@id='so-sidebar']/h3\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//button[contains(.,'Add Site')]/span[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Add Site\"),\n\t\t\tselenium.getText(\"//button[contains(.,'Add Site')]/span[2]\"));\n\t\tselenium.clickAt(\"//button[contains(.,'Add Site')]/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Add Site\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Information\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[1]\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@id='_5_WAR_soportlet_name']\"));\n\t\tselenium.type(\"//input[@id='_5_WAR_soportlet_name']\",\n\t\t\tRuntimeVariables.replace(\"Restricted Site Name\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//textarea[@id='_5_WAR_soportlet_description']\"));\n\t\tselenium.type(\"//textarea[@id='_5_WAR_soportlet_description']\",\n\t\t\tRuntimeVariables.replace(\"Restricted Site Description\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Settings\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[2]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@id='_5_WAR_soportlet_layoutSetPrototypeSelect']\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_layoutSetPrototypeSelect']\",\n\t\t\tRuntimeVariables.replace(\"Default Social Office Site\"));\n\t\tassertTrue(selenium.isVisible(\"//select[@id='_5_WAR_soportlet_type']\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_type']\",\n\t\t\tRuntimeVariables.replace(\"Restricted\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[3]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Customization\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[3]\"));\n\t\tassertTrue(selenium.isChecked(\"//div[4]/span[1]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[2]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[3]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[4]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[5]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[6]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[7]/input\"));\n\t\tassertEquals(\"Save\", selenium.getValue(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Private Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t}","commit_id":"03078d4f26989dc2ec14b7e4613404fcf14cbd99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSitesSiteTypeRestricted() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/div/div/div/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div/div/div/div/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Home\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[3]/div/section/header/h1/span\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//form/div[2]/span/span/button[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Add Site\"),\n\t\t\tselenium.getText(\"//form/div[2]/span/span/button[1]\"));\n\t\tselenium.clickAt(\"//form/div[2]/span/span/button[1]\",\n\t\t\tRuntimeVariables.replace(\"Add Site\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Information\"),\n\t\t\tselenium.getText(\"//h1/span\"));\n\t\tassertTrue(selenium.isVisible(\"//input\"));\n\t\tselenium.type(\"//input\",\n\t\t\tRuntimeVariables.replace(\"Restricted Site Name\"));\n\t\tassertTrue(selenium.isVisible(\"//textarea\"));\n\t\tselenium.type(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Private Site Description\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/div[1]/h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Settings\"),\n\t\t\tselenium.getText(\"//div[2]/div[1]/h1/span\"));\n\t\tassertTrue(selenium.isVisible(\"//select\"));\n\t\tselenium.select(\"//select\",\n\t\t\tRuntimeVariables.replace(\"Default Social Office Site\"));\n\t\tassertTrue(selenium.isVisible(\"//span[2]/span/span/select\"));\n\t\tselenium.select(\"//span[2]/span/span/select\",\n\t\t\tRuntimeVariables.replace(\"Restricted\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/div[1]/h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Customization\"),\n\t\t\tselenium.getText(\"//div[3]/div[1]/h1/span\"));\n\t\tassertTrue(selenium.isChecked(\"//div[4]/span[1]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[2]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[3]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[4]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[5]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[6]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[7]/input\"));\n\t\tassertEquals(\"Save\", selenium.getValue(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Restricted Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t}","id":52951,"modified_method":"public void testAddSitesSiteTypeRestricted() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//li[contains(@class, 'selected')]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//li[contains(@class, 'selected')]/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[@id='so-sidebar']/h3\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//button[contains(.,'Add Site')]/span[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Add Site\"),\n\t\t\tselenium.getText(\"//button[contains(.,'Add Site')]/span[2]\"));\n\t\tselenium.clickAt(\"//button[contains(.,'Add Site')]/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Add Site\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Information\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[1]\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@id='_5_WAR_soportlet_name']\"));\n\t\tselenium.type(\"//input[@id='_5_WAR_soportlet_name']\",\n\t\t\tRuntimeVariables.replace(\"Restricted Site Name\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//textarea[@id='_5_WAR_soportlet_description']\"));\n\t\tselenium.type(\"//textarea[@id='_5_WAR_soportlet_description']\",\n\t\t\tRuntimeVariables.replace(\"Restricted Site Description\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Settings\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[2]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@id='_5_WAR_soportlet_layoutSetPrototypeSelect']\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_layoutSetPrototypeSelect']\",\n\t\t\tRuntimeVariables.replace(\"Default Social Office Site\"));\n\t\tassertTrue(selenium.isVisible(\"//select[@id='_5_WAR_soportlet_type']\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_type']\",\n\t\t\tRuntimeVariables.replace(\"Restricted\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[3]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Customization\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[3]\"));\n\t\tassertTrue(selenium.isChecked(\"//div[4]/span[1]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[2]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[3]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[4]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[5]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[6]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[7]/input\"));\n\t\tassertEquals(\"Save\", selenium.getValue(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Private Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t}","commit_id":"03078d4f26989dc2ec14b7e4613404fcf14cbd99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSitesSiteTypeRestricted() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/div/div/div/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div/div/div/div/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Home\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[3]/div/section/header/h1/span\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//form/div[2]/span/span/button[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Add Site\"),\n\t\t\tselenium.getText(\"//form/div[2]/span/span/button[1]\"));\n\t\tselenium.clickAt(\"//form/div[2]/span/span/button[1]\",\n\t\t\tRuntimeVariables.replace(\"Add Site\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Information\"),\n\t\t\tselenium.getText(\"//h1/span\"));\n\t\tassertTrue(selenium.isVisible(\"//input\"));\n\t\tselenium.type(\"//input\",\n\t\t\tRuntimeVariables.replace(\"Restricted Site Name\"));\n\t\tassertTrue(selenium.isVisible(\"//textarea\"));\n\t\tselenium.type(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Private Site Description\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/div[1]/h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Settings\"),\n\t\t\tselenium.getText(\"//div[2]/div[1]/h1/span\"));\n\t\tassertTrue(selenium.isVisible(\"//select\"));\n\t\tselenium.select(\"//select\",\n\t\t\tRuntimeVariables.replace(\"Default Social Office Site\"));\n\t\tassertTrue(selenium.isVisible(\"//span[2]/span/span/select\"));\n\t\tselenium.select(\"//span[2]/span/span/select\",\n\t\t\tRuntimeVariables.replace(\"Restricted\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/div[1]/h1/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Customization\"),\n\t\t\tselenium.getText(\"//div[3]/div[1]/h1/span\"));\n\t\tassertTrue(selenium.isChecked(\"//div[4]/span[1]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[2]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[3]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[4]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[5]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[6]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[7]/input\"));\n\t\tassertEquals(\"Save\", selenium.getValue(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Restricted Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t}","id":52952,"modified_method":"public void testAddSitesSiteTypeRestricted() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//li[contains(@class, 'selected')]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//li[contains(@class, 'selected')]/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[@id='so-sidebar']/h3\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//button[contains(.,'Add Site')]/span[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Add Site\"),\n\t\t\tselenium.getText(\"//button[contains(.,'Add Site')]/span[2]\"));\n\t\tselenium.clickAt(\"//button[contains(.,'Add Site')]/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Add Site\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Information\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[1]\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@id='_5_WAR_soportlet_name']\"));\n\t\tselenium.type(\"//input[@id='_5_WAR_soportlet_name']\",\n\t\t\tRuntimeVariables.replace(\"Restricted Site Name\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//textarea[@id='_5_WAR_soportlet_description']\"));\n\t\tselenium.type(\"//textarea[@id='_5_WAR_soportlet_description']\",\n\t\t\tRuntimeVariables.replace(\"Restricted Site Description\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Settings\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[2]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@id='_5_WAR_soportlet_layoutSetPrototypeSelect']\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_layoutSetPrototypeSelect']\",\n\t\t\tRuntimeVariables.replace(\"Default Social Office Site\"));\n\t\tassertTrue(selenium.isVisible(\"//select[@id='_5_WAR_soportlet_type']\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_type']\",\n\t\t\tRuntimeVariables.replace(\"Restricted\"));\n\t\tassertEquals(\"Next\", selenium.getValue(\"//input[@value='Next']\"));\n\t\tselenium.clickAt(\"//input[@value='Next']\",\n\t\t\tRuntimeVariables.replace(\"Next\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//h1[@class='header-title']/span)[3]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Customization\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[3]\"));\n\t\tassertTrue(selenium.isChecked(\"//div[4]/span[1]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[2]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[3]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[4]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[5]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[6]/input\"));\n\t\tassertTrue(selenium.isChecked(\"//span[7]/input\"));\n\t\tassertEquals(\"Save\", selenium.getValue(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Private Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t}","commit_id":"03078d4f26989dc2ec14b7e4613404fcf14cbd99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownSOSites() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"//strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Community Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Global\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Name\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean site1Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean site2Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean site3Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean site4Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean site5Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":52953,"modified_method":"public void testTearDownSOSites() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Name\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean community1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean community2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean community3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean community4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean community5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"03078d4f26989dc2ec14b7e4613404fcf14cbd99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownSOSites() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"//strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Community Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Global\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Name\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean site1Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean site2Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean site3Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean site4Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean site5Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":52954,"modified_method":"public void testTearDownSOSites() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Name\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean community1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean community2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean community3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean community4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean community5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"03078d4f26989dc2ec14b7e4613404fcf14cbd99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownSOSites() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"//strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Community Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Global\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Name\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean site1Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean site2Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean site3Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean site4Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean site5Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":52955,"modified_method":"public void testTearDownSOSites() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Name\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean community1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean community2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean community3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean community4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean community5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"03078d4f26989dc2ec14b7e4613404fcf14cbd99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownSOSites() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"//strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Community Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Global\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Name\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean site1Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean site2Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean site3Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean site4Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean site5Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":52956,"modified_method":"public void testTearDownSOSites() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Name\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean community1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean community2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean community3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean community4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean community5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"03078d4f26989dc2ec14b7e4613404fcf14cbd99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownSOSites() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"//strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Community Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Global\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Name\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean site1Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean site2Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean site3Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean site4Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean site5Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":52957,"modified_method":"public void testTearDownSOSites() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Name\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean community1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean community2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean community3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean community4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean community5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"03078d4f26989dc2ec14b7e4613404fcf14cbd99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownSOSites() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"//strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Community Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Global\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Name\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean site1Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean site2Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean site3Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean site4Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean site5Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":52958,"modified_method":"public void testTearDownSOSites() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Name\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean community1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean community2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean community3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean community4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean community5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"03078d4f26989dc2ec14b7e4613404fcf14cbd99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownSOSites() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"//strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Community Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Global\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Name\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean site1Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean site2Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean site3Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean site4Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean site5Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":52959,"modified_method":"public void testTearDownSOSites() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Name\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean community1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean community2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean community3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean community4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean community5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"03078d4f26989dc2ec14b7e4613404fcf14cbd99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownSOSites() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"//strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Community Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Global\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Name\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean site1Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean site2Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean site3Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean site4Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean site5Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":52960,"modified_method":"public void testTearDownSOSites() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Name\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean community1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean community2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean community3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean community4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean community5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"03078d4f26989dc2ec14b7e4613404fcf14cbd99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownSOSites() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"//strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Community Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Global\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Name\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean site1Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean site2Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean site3Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean site4Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean site5Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":52961,"modified_method":"public void testTearDownSOSites() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Name\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean community1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean community2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean community3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean community4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean community5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"03078d4f26989dc2ec14b7e4613404fcf14cbd99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownSOSites() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"//strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Community Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Global\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Name\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean site1Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean site2Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean site3Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean site4Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean site5Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":52962,"modified_method":"public void testTearDownSOSites() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Name\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean community1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean community2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean community3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean community4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean community5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"03078d4f26989dc2ec14b7e4613404fcf14cbd99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownSOSites() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"//strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Community Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Global\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Name\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean site1Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean site2Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean site3Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean site4Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean site5Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":52963,"modified_method":"public void testTearDownSOSites() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Name\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean community1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean community2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean community3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean community4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean community5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"03078d4f26989dc2ec14b7e4613404fcf14cbd99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownSOSites() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"//strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Community Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Global\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Name\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean site1Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean site2Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean site3Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean site4Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean site5Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":52964,"modified_method":"public void testTearDownSOSites() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Name\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean community1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean community2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean community3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean community4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean community5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"03078d4f26989dc2ec14b7e4613404fcf14cbd99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownSOSites() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"//strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Community Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Global\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Name\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean site1Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean site2Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean site3Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean site4Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean site5Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Name\");\n\n\t\t\t\tif (!site5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":52965,"modified_method":"public void testTearDownSOSites() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Name\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean community1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean community2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean community3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean community4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean community5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!community5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"03078d4f26989dc2ec14b7e4613404fcf14cbd99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddCategory() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Category']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_19_name\", RuntimeVariables.replace(\"Test Category\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Category\"));\n\t}","id":52966,"modified_method":"public void testAddCategory() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Category']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_19_name\", RuntimeVariables.replace(\"Test Category\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully. \"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Category\"));\n\t}","commit_id":"4f37ae663231d30f46b05fab9a4ea64fc61384a0","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMessage1() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value=\\\"Post New Thread\\\"]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_19_subject\", RuntimeVariables.replace(\"Test Message 1\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is Test Message 1.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"This is Test Message 1.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Message 1\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Message 1\"));\n\t\tSystem.out.println(\"Sample data 1 added successfully.\\n\");\n\t}","id":52967,"modified_method":"public void testAddMessage1() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value=\\\"Post New Thread\\\"]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_19_subject\", RuntimeVariables.replace(\"Test Message 1\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is Test Message 1.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"This is Test Message 1.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Message 1\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Message 1\"));\n\t\tSystem.out.println(\"Sample data 1 added successfully.\\n\");\n\t}","commit_id":"4f37ae663231d30f46b05fab9a4ea64fc61384a0","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMessage2() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value=\\\"Post New Thread\\\"]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_19_subject\", RuntimeVariables.replace(\"Test Message 2\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is Test Message 2.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"This is Test Message 2.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Message 2\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Message 2\"));\n\t\tSystem.out.println(\"Sample data 2 added successfully.\\n\");\n\t}","id":52968,"modified_method":"public void testAddMessage2() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value=\\\"Post New Thread\\\"]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_19_subject\", RuntimeVariables.replace(\"Test Message 2\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is Test Message 2.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"This is Test Message 2.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Message 2\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Message 2\"));\n\t\tSystem.out.println(\"Sample data 2 added successfully.\\n\");\n\t}","commit_id":"4f37ae663231d30f46b05fab9a4ea64fc61384a0","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMessage3() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value=\\\"Post New Thread\\\"]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_19_subject\", RuntimeVariables.replace(\"Test Message 3\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is Test Message 3.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"This is Test Message 3.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Message 3\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Message 3\"));\n\t\tSystem.out.println(\"Sample data 3 added successfully.\\n\");\n\t}","id":52969,"modified_method":"public void testAddMessage3() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value=\\\"Post New Thread\\\"]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_19_subject\", RuntimeVariables.replace(\"Test Message 3\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is Test Message 3.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"This is Test Message 3.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Message 3\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Message 3\"));\n\t\tSystem.out.println(\"Sample data 3 added successfully.\\n\");\n\t}","commit_id":"4f37ae663231d30f46b05fab9a4ea64fc61384a0","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMessage4() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value=\\\"Post New Thread\\\"]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_19_subject\", RuntimeVariables.replace(\"Test Message 4\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is Test Message 4.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"This is Test Message 4.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Message 4\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Message 4\"));\n\t\tSystem.out.println(\"Sample data 4 added successfully.\\n\");\n\t}","id":52970,"modified_method":"public void testAddMessage4() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value=\\\"Post New Thread\\\"]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_19_subject\", RuntimeVariables.replace(\"Test Message 4\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is Test Message 4.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"This is Test Message 4.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Message 4\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Message 4\"));\n\t\tSystem.out.println(\"Sample data 4 added successfully.\\n\");\n\t}","commit_id":"4f37ae663231d30f46b05fab9a4ea64fc61384a0","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMessage5() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value=\\\"Post New Thread\\\"]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_19_subject\", RuntimeVariables.replace(\"Test Message 5\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is Test Message 5.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"This is Test Message 5.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Message 5\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Message 5\"));\n\t\tSystem.out.println(\"Sample data 5 added successfully.\\n\");\n\t}","id":52971,"modified_method":"public void testAddMessage5() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value=\\\"Post New Thread\\\"]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_19_subject\", RuntimeVariables.replace(\"Test Message 5\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is Test Message 5.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"This is Test Message 5.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Message 5\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Message 5\"));\n\t\tSystem.out.println(\"Sample data 5 added successfully.\\n\");\n\t}","commit_id":"4f37ae663231d30f46b05fab9a4ea64fc61384a0","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Manage Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id='_88_layoutsTreeOutput']/ul/li/a/span\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_88_name_en_US\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.type(\"_88_name_en_US\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Add Page']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":52972,"modified_method":"public void testAddPage() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"addPage\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"addPage\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"4f37ae663231d30f46b05fab9a4ea64fc61384a0","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortlet() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Application\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Application\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"Collaboration-MessageBoards\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id=\\\"Collaboration-MessageBoards\\\"]/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Add Category']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":52973,"modified_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"m\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Message Boards']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Message Boards']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"4f37ae663231d30f46b05fab9a4ea64fc61384a0","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"addPage\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"addPage\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input\", RuntimeVariables.replace(\"Weather Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Weather Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Weather Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":52974,"modified_method":"public void testAddPage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Weather Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Weather Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Weather Test Page\",\n\t\t\tRuntimeVariables.replace(\"Weather Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"03d7c90acfa3fb98af761f632062c89d8b32447e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Weather Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Weather Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"w\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Weather']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Weather']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":52975,"modified_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Weather Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Weather Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@title='Weather']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Weather']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"03d7c90acfa3fb98af761f632062c89d8b32447e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeletePage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\n\t\t\t\tString guestCommunityName = selenium.getText(\n\t\t\t\t\t\t\"//nav[@id='breadcrumbs']/ul/li/span/a\");\n\t\t\t\tRuntimeVariables.setValue(\"guestCommunityName\",\n\t\t\t\t\tguestCommunityName);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div/div[3]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div/div[3]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"${guestCommunityName}\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//li[2]/div/div[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//td[2]/ul/li[1]/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//li[2]/div/div[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//td[2]/ul/li[1]/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//li[2]/div/div[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//td[2]/ul/li[1]/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//li[2]/div/div[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//td[2]/ul/li[1]/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//li[2]/div/div[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//td[2]/ul/li[1]/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":52976,"modified_method":"public void testDeletePage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"03d7c90acfa3fb98af761f632062c89d8b32447e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditPreferences() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Weather Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Weather Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"//strong/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\tThread.sleep(5000);\n\t\tselenium.type(\"_1_WAR_weatherportlet_zips\",\n\t\t\tRuntimeVariables.replace(\"Diamond Bar, CA\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Weather Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Weather Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Return to Full Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Diamond Bar, CA\"));\n\t}","id":52977,"modified_method":"public void testEditPreferences() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Weather Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Weather Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@name='_1_WAR_weatherportlet_zips']\",\n\t\t\tRuntimeVariables.replace(\"Diamond Bar, CA\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated your preferences.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Return to Full Page\",\n\t\t\tRuntimeVariables.replace(\"Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Diamond Bar, CA\"));\n\t}","commit_id":"03d7c90acfa3fb98af761f632062c89d8b32447e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddCategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Category']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_19_name\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_19_description\",\n\t\t\tRuntimeVariables.replace(\"This is a t\\u00e9st cat\\u00e9gory!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t}","id":52978,"modified_method":"public void testAddCategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Message Board Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Board Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Board Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Category']\",\n\t\t\tRuntimeVariables.replace(\"Add Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_name']\",\n\t\t\tRuntimeVariables.replace(\"MB Category Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_19_description']\",\n\t\t\tRuntimeVariables.replace(\"MB Category Description\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[1]/a\", \"MB Category Description\"));\n\t}","commit_id":"a2840fff8615083756695e7f1a629ec042d6cc3d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddCategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Category']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_19_name\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_19_description\",\n\t\t\tRuntimeVariables.replace(\"This is a t\\u00e9st cat\\u00e9gory!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t}","id":52979,"modified_method":"public void testAddCategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Message Board Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Board Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Board Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Category']\",\n\t\t\tRuntimeVariables.replace(\"Add Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_name']\",\n\t\t\tRuntimeVariables.replace(\"MB Category Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_19_description']\",\n\t\t\tRuntimeVariables.replace(\"MB Category Description\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[1]/a\", \"MB Category Description\"));\n\t}","commit_id":"a2840fff8615083756695e7f1a629ec042d6cc3d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddCategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Category']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_19_name\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_19_description\",\n\t\t\tRuntimeVariables.replace(\"This is a t\\u00e9st cat\\u00e9gory!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t}","id":52980,"modified_method":"public void testAddCategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Message Board Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Board Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Board Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Category']\",\n\t\t\tRuntimeVariables.replace(\"Add Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_name']\",\n\t\t\tRuntimeVariables.replace(\"MB Category Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_19_description']\",\n\t\t\tRuntimeVariables.replace(\"MB Category Description\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[1]/a\", \"MB Category Description\"));\n\t}","commit_id":"a2840fff8615083756695e7f1a629ec042d6cc3d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_19_subject\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[1]/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\"));\n\t}","id":52981,"modified_method":"public void testAddMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Message Board Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Board Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Board Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"MB Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"MB Subcategory Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"Post New Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_subject']\",\n\t\t\tRuntimeVariables.replace(\"MB Subcategory Message Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__19_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__19_editor']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"MB Subcategory Message Description\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"MB Subcategory Message Description\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t}","commit_id":"a2840fff8615083756695e7f1a629ec042d6cc3d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_19_subject\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[1]/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\"));\n\t}","id":52982,"modified_method":"public void testAddMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Message Board Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Board Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Board Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"MB Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"MB Subcategory Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"Post New Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_subject']\",\n\t\t\tRuntimeVariables.replace(\"MB Subcategory Message Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__19_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__19_editor']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"MB Subcategory Message Description\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"MB Subcategory Message Description\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t}","commit_id":"a2840fff8615083756695e7f1a629ec042d6cc3d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_19_subject\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[1]/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\"));\n\t}","id":52983,"modified_method":"public void testAddMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Message Board Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Board Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Board Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"MB Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"MB Subcategory Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"Post New Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_subject']\",\n\t\t\tRuntimeVariables.replace(\"MB Subcategory Message Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__19_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__19_editor']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"MB Subcategory Message Description\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Subcategory Message Name\"),\n\t\t\tselenium.getText(\"//div[@class='subject']/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"MB Subcategory Message Description\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t}","commit_id":"a2840fff8615083756695e7f1a629ec042d6cc3d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"addPage\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"addPage\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":52984,"modified_method":"public void testAddPage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Message Board Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Board Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Board Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Board Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"a2840fff8615083756695e7f1a629ec042d6cc3d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"addPage\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"addPage\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":52985,"modified_method":"public void testAddPage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Message Board Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Board Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Board Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Board Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"a2840fff8615083756695e7f1a629ec042d6cc3d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"addPage\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"addPage\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":52986,"modified_method":"public void testAddPage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Message Board Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Board Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Board Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Board Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"a2840fff8615083756695e7f1a629ec042d6cc3d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortalInstanceAble() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Portal Instances\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_135_webId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_135_webId\", RuntimeVariables.replace(\"www.able.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_135_virtualHostname\",\n\t\t\tRuntimeVariables.replace(\"www.able.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_135_mx\", RuntimeVariables.replace(\"able.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=www.able.com\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=able.com\"));\n\t}","id":52987,"modified_method":"public void testAddPortalInstanceAble() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Portal Instances\",\n\t\t\tRuntimeVariables.replace(\"Portal Instances\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add']\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_135_webId']\",\n\t\t\tRuntimeVariables.replace(\"www.able.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_135_virtualHostname']\",\n\t\t\tRuntimeVariables.replace(\"www.able.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_135_mx']\",\n\t\t\tRuntimeVariables.replace(\"able.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"www.able.com\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"www.able.com\"),\n\t\t\tselenium.getText(\"//tr[4]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"able.com\"),\n\t\t\tselenium.getText(\"//tr[4]/td[4]/a\"));\n\t}","commit_id":"a2840fff8615083756695e7f1a629ec042d6cc3d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortalInstanceBaker() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Portal Instances\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_135_webId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_135_webId\", RuntimeVariables.replace(\"www.baker.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_135_virtualHostname\",\n\t\t\tRuntimeVariables.replace(\"www.baker.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_135_mx\", RuntimeVariables.replace(\"baker.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=www.baker.com\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=baker.com\"));\n\t}","id":52988,"modified_method":"public void testAddPortalInstanceBaker() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Portal Instances\",\n\t\t\tRuntimeVariables.replace(\"Portal Instances\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add']\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_135_webId']\",\n\t\t\tRuntimeVariables.replace(\"www.baker.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_135_virtualHostname']\",\n\t\t\tRuntimeVariables.replace(\"www.baker.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_135_mx']\",\n\t\t\tRuntimeVariables.replace(\"baker.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"www.baker.com\"),\n\t\t\tselenium.getText(\"//tr[5]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"www.baker.com\"),\n\t\t\tselenium.getText(\"//tr[5]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"baker.com\"),\n\t\t\tselenium.getText(\"//tr[5]/td[4]/a\"));\n\t}","commit_id":"a2840fff8615083756695e7f1a629ec042d6cc3d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"m\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Message Boards']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Message Boards']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":52989,"modified_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Board Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Board Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Board Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Message Boards']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Message Boards']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"a2840fff8615083756695e7f1a629ec042d6cc3d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"m\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Message Boards']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Message Boards']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":52990,"modified_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Board Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Board Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Board Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Message Boards']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Message Boards']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"a2840fff8615083756695e7f1a629ec042d6cc3d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"m\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Message Boards']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Message Boards']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":52991,"modified_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Board Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Board Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Board Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Message Boards']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Message Boards']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"a2840fff8615083756695e7f1a629ec042d6cc3d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSubcategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Subcategory']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_19_name\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_19_description\",\n\t\t\tRuntimeVariables.replace(\"This is a t\\u00e9st subcat\\u00e9gory!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t}","id":52992,"modified_method":"public void testAddSubcategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Message Board Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Board Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Board Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"MB Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Subcategory']\",\n\t\t\tRuntimeVariables.replace(\"Add Subcategory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_name']\",\n\t\t\tRuntimeVariables.replace(\"MB Subcategory Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_19_description']\",\n\t\t\tRuntimeVariables.replace(\"MB Subcategory Description\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Subcategory Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[1]/a\",\n\t\t\t\t\"MB Subcategory Description\"));\n\t}","commit_id":"a2840fff8615083756695e7f1a629ec042d6cc3d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSubcategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Subcategory']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_19_name\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_19_description\",\n\t\t\tRuntimeVariables.replace(\"This is a t\\u00e9st subcat\\u00e9gory!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t}","id":52993,"modified_method":"public void testAddSubcategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Message Board Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Board Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Board Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"MB Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Subcategory']\",\n\t\t\tRuntimeVariables.replace(\"Add Subcategory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_name']\",\n\t\t\tRuntimeVariables.replace(\"MB Subcategory Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_19_description']\",\n\t\t\tRuntimeVariables.replace(\"MB Subcategory Description\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Subcategory Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[1]/a\",\n\t\t\t\t\"MB Subcategory Description\"));\n\t}","commit_id":"a2840fff8615083756695e7f1a629ec042d6cc3d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSubcategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Subcategory']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_19_name\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_19_description\",\n\t\t\tRuntimeVariables.replace(\"This is a t\\u00e9st subcat\\u00e9gory!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t}","id":52994,"modified_method":"public void testAddSubcategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Message Board Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Board Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Board Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"MB Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Subcategory']\",\n\t\t\tRuntimeVariables.replace(\"Add Subcategory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_name']\",\n\t\t\tRuntimeVariables.replace(\"MB Subcategory Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_19_description']\",\n\t\t\tRuntimeVariables.replace(\"MB Subcategory Description\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Subcategory Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[1]/a\",\n\t\t\t\t\"MB Subcategory Description\"));\n\t}","commit_id":"a2840fff8615083756695e7f1a629ec042d6cc3d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testLoginAble() throws Exception {\n\t\tselenium.setTimeout(\"180000\");\n\t\tselenium.open(\"/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Sign In\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@able.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"_58_rememberMeCheckbox\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Sign In']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Sign In']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='I Agree']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='I Agree']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"reminderQueryAnswer\", RuntimeVariables.replace(\"Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":52995,"modified_method":"public void testLoginAble() throws Exception {\n\t\tselenium.setTimeout(\"180000\");\n\t\tselenium.open(\"/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Sign In\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"test@able.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Remember Me\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Sign In']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='I Agree']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"reminderQueryAnswer\", RuntimeVariables.replace(\"Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"a2840fff8615083756695e7f1a629ec042d6cc3d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testLoginBaker() throws Exception {\n\t\tselenium.setTimeout(\"180000\");\n\t\tselenium.open(\"/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Sign In\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@baker.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"_58_rememberMeCheckbox\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Sign In']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Sign In']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='I Agree']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='I Agree']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"reminderQueryAnswer\", RuntimeVariables.replace(\"Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":52996,"modified_method":"public void testLoginBaker() throws Exception {\n\t\tselenium.setTimeout(\"180000\");\n\t\tselenium.open(\"/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Sign In\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"test@baker.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Remember Me\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Sign In']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Sign In']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='I Agree']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='I Agree']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"reminderQueryAnswer\", RuntimeVariables.replace(\"Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"a2840fff8615083756695e7f1a629ec042d6cc3d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWikiPage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Wiki Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page does not exist yet. Use the form below to create it.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tThread.sleep(5000);\n\t\tselenium.type(\"//input[@id='_36_title']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__36_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__36_editor']/iframe\");\n\t\tselenium.type(\"//body\", RuntimeVariables.replace(\"Wiki Page Content\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Submit for Publication']\",\n\t\t\tRuntimeVariables.replace(\"Submit for Publication\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki Page Title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Wiki Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Draft Pages\",\n\t\t\tRuntimeVariables.replace(\"Draft Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div/div/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Pending (Review)\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']/strong\"));\n\t}","id":52997,"modified_method":"public void testAddWikiPage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page does not exist yet. Use the form below to create it.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.type(\"//input[@id='_36_title']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//textarea[@id='_36_editor' and @style='display: none;']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//a[@class='cke_button_source cke_on']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__36_editor']/textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//td[@id='cke_contents__36_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//textarea[@id='_36_editor' and @style='display: none;']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[@id='cke_contents__36_editor']/iframe\"));\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__36_editor']/iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Wiki Page Content\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\"//body\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Submit for Publication']\",\n\t\t\tRuntimeVariables.replace(\"Submit for Publication\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki Page Title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Wiki Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Draft Pages\",\n\t\t\tRuntimeVariables.replace(\"Draft Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div/div/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Pending (Review)\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']/strong\"));\n\t}","commit_id":"92368ecd74582a261c25761ef90dd950dc37d9d1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWikiPage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Wiki Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page does not exist yet. Use the form below to create it.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tThread.sleep(5000);\n\t\tselenium.type(\"//input[@id='_36_title']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__36_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__36_editor']/iframe\");\n\t\tselenium.type(\"//body\", RuntimeVariables.replace(\"Wiki Page Content\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Submit for Publication']\",\n\t\t\tRuntimeVariables.replace(\"Submit for Publication\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki Page Title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Wiki Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Draft Pages\",\n\t\t\tRuntimeVariables.replace(\"Draft Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div/div/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Pending (Review)\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']/strong\"));\n\t}","id":52998,"modified_method":"public void testAddWikiPage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page does not exist yet. Use the form below to create it.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.type(\"//input[@id='_36_title']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//textarea[@id='_36_editor' and @style='display: none;']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//a[@class='cke_button_source cke_on']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__36_editor']/textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//td[@id='cke_contents__36_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//textarea[@id='_36_editor' and @style='display: none;']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[@id='cke_contents__36_editor']/iframe\"));\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__36_editor']/iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Wiki Page Content\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\"//body\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Submit for Publication']\",\n\t\t\tRuntimeVariables.replace(\"Submit for Publication\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki Page Title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Wiki Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Draft Pages\",\n\t\t\tRuntimeVariables.replace(\"Draft Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div/div/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Pending (Review)\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']/strong\"));\n\t}","commit_id":"92368ecd74582a261c25761ef90dd950dc37d9d1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWikiPage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Wiki Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page does not exist yet. Use the form below to create it.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tThread.sleep(5000);\n\t\tselenium.type(\"//input[@id='_36_title']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__36_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__36_editor']/iframe\");\n\t\tselenium.type(\"//body\", RuntimeVariables.replace(\"Wiki Page Content\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Submit for Publication']\",\n\t\t\tRuntimeVariables.replace(\"Submit for Publication\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki Page Title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Wiki Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Draft Pages\",\n\t\t\tRuntimeVariables.replace(\"Draft Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div/div/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Pending (Review)\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']/strong\"));\n\t}","id":52999,"modified_method":"public void testAddWikiPage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page does not exist yet. Use the form below to create it.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.type(\"//input[@id='_36_title']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//textarea[@id='_36_editor' and @style='display: none;']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//a[@class='cke_button_source cke_on']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__36_editor']/textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//td[@id='cke_contents__36_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//textarea[@id='_36_editor' and @style='display: none;']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[@id='cke_contents__36_editor']/iframe\"));\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__36_editor']/iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Wiki Page Content\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\"//body\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Submit for Publication']\",\n\t\t\tRuntimeVariables.replace(\"Submit for Publication\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki Page Title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Wiki Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Draft Pages\",\n\t\t\tRuntimeVariables.replace(\"Draft Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div/div/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Pending (Review)\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']/strong\"));\n\t}","commit_id":"92368ecd74582a261c25761ef90dd950dc37d9d1","url":"https://github.com/liferay/liferay-portal"}]