[{"original_method":"public OsmorcFacetJAREditorTab(FacetEditorContext editorContext, FacetValidatorsManager validatorsManager) {\n    myEditorContext = editorContext;\n    myValidatorsManager = validatorsManager;\n    final Project project = editorContext.getProject();\n\n    myIgnoreFilePatternTextField = new EditorTextField(\"\", project, FileTypes.PLAIN_TEXT);\n    FileType fileType = FileTypeManager.getInstance().getFileTypeByFileName(\"*.regexp\");\n    if (fileType == FileTypes.UNKNOWN) {\n      fileType = FileTypeManager.getInstance().getFileTypeByFileName(\"*.txt\"); // RegExp plugin is not installed\n    }\n\n    final PsiFile file =\n      PsiFileFactory.getInstance(project).createFileFromText(\"*.regexp\", fileType, myIgnoreFilePatternTextField.getText(), -1, true);\n    myIgnoreFilePatternTextField.setNewDocumentAndFileType(fileType, PsiDocumentManager.getInstance(project).getDocument(file));\n    myIgnoreFilePatternPanel.add(myIgnoreFilePatternTextField, BorderLayout.CENTER);\n\n    UserActivityWatcher watcher = new UserActivityWatcher();\n    watcher.addUserActivityListener(new UserActivityListener() {\n      public void stateChanged() {\n        myModified = true;\n        updateGui();\n      }\n    });\n\n    myJarOutputPathChooser.addActionListener(new ActionListener() {\n      @Override\n      public void actionPerformed(ActionEvent actionEvent) {\n        onOutputPathSelect();\n      }\n    });\n\n    ChangeListener listener = new ChangeListener() {\n      public void stateChanged(ChangeEvent e) {\n        updateGui();\n      }\n    };\n\n    myPlaceInProjectWideRadioButton.addChangeListener(listener);\n    myPlaceInThisPathRadioButton.addChangeListener(listener);\n    myPlaceInCompilerOutputPathRadioButton.addChangeListener(listener);\n\n    watcher.register(myRoot);\n\n    myAdditionalJARContentsTableModel = new AdditionalJARContentsTableModel();\n    myAdditionalJARContentsTable.setModel(myAdditionalJARContentsTableModel);\n\n    TableColumn col = myAdditionalJARContentsTable.getColumnModel().getColumn(0);\n    final FileSelectorTableCellEditor selectorTableCellEditor = new FileSelectorTableCellEditor(project, myEditorContext.getModule());\n    col.setCellEditor(selectorTableCellEditor);\n    selectorTableCellEditor.addCellEditorListener(new CellEditorListener() {\n      public void editingCanceled(ChangeEvent e) {\n      }\n\n      public void editingStopped(ChangeEvent e) {\n        // ok we finished editing the left, now get the stuff from there, calculate a destination name and edit the other cell\n        int row = myAdditionalJARContentsTable.getSelectedRow();\n        if (row > -1) {\n          Pair<String, String> additionalJARContent = myAdditionalJARContentsTableModel.getAdditionalJARContent(row);\n          VirtualFile preselectedPath = LocalFileSystem.getInstance().findFileByPath(additionalJARContent.getFirst());\n          String destinationName;\n          if (preselectedPath != null) {\n            destinationName = determineMostLikelyLocationInJAR(preselectedPath);\n          }\n          else {\n            destinationName = \"\";\n          }\n\n          myAdditionalJARContentsTableModel.changeAdditionalJARConent(row, additionalJARContent.first, destinationName);\n          myAdditionalJARContentsTable.editCellAt(row, 1);\n          myAdditionalJARContentsTable.getEditorComponent().requestFocus();\n        }\n      }\n    });\n\n    myAdditionalJARContentsTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {\n      public void valueChanged(ListSelectionEvent e) {\n        myRemoveButton.setEnabled(myAdditionalJARContentsTable.getSelectedRowCount() > 0);\n        myEditButton.setEnabled(myAdditionalJARContentsTable.getSelectedRowCount() > 0);\n      }\n    });\n\n\n    myAddButton.addActionListener(new ActionListener() {\n      public void actionPerformed(ActionEvent e) {\n        onAddAdditionalJARContent();\n      }\n    });\n\n    myRemoveButton.addActionListener(new ActionListener() {\n      public void actionPerformed(ActionEvent e) {\n        onRemoveAdditionalJARContent();\n      }\n    });\n\n    myEditButton.addActionListener(new ActionListener() {\n      public void actionPerformed(ActionEvent e) {\n        onEditAdditionalJARContent();\n      }\n    });\n\n    myEditButton.setEnabled(false);\n    myRemoveButton.setEnabled(false);\n\n    myValidatorsManager.registerValidator(new OsmorcFacetJarEditorValidator(myEditorContext, this));\n  }","id":15000,"modified_method":"public OsmorcFacetJAREditorTab(FacetEditorContext editorContext, FacetValidatorsManager validatorsManager) {\n    myEditorContext = editorContext;\n    myValidatorsManager = validatorsManager;\n    final Project project = editorContext.getProject();\n\n    myIgnoreFilePatternTextField = new EditorTextField(\"\", project, FileTypes.PLAIN_TEXT);\n    FileType fileType = FileTypeManager.getInstance().getFileTypeByFileName(\"*.regexp\");\n    if (fileType == FileTypes.UNKNOWN) {\n      fileType = FileTypeManager.getInstance().getFileTypeByFileName(\"*.txt\"); // RegExp plugin is not installed\n    }\n\n    final PsiFile file =\n      PsiFileFactory.getInstance(project).createFileFromText(\"*.regexp\", fileType, myIgnoreFilePatternTextField.getText(), -1, true);\n    myIgnoreFilePatternTextField.setNewDocumentAndFileType(fileType, PsiDocumentManager.getInstance(project).getDocument(file));\n    myIgnoreFilePatternPanel.add(myIgnoreFilePatternTextField, BorderLayout.CENTER);\n\n    UserActivityWatcher watcher = new UserActivityWatcher();\n    watcher.addUserActivityListener(new UserActivityListener() {\n      public void stateChanged() {\n        myModified = true;\n        updateGui();\n      }\n    });\n\n    myJarOutputPathChooser.addActionListener(new ActionListener() {\n      @Override\n      public void actionPerformed(ActionEvent actionEvent) {\n        onOutputPathSelect();\n      }\n    });\n\n    ChangeListener listener = new ChangeListener() {\n      public void stateChanged(ChangeEvent e) {\n        updateGui();\n      }\n    };\n\n    myPlaceInProjectWideRadioButton.addChangeListener(listener);\n    myPlaceInThisPathRadioButton.addChangeListener(listener);\n    myPlaceInCompilerOutputPathRadioButton.addChangeListener(listener);\n\n    watcher.register(myRoot);\n\n    myAdditionalJARContentsTableModel = new AdditionalJARContentsTableModel();\n    myAdditionalJARContentsTable = new JBTable(myAdditionalJARContentsTableModel);\n\n    TableColumn col = myAdditionalJARContentsTable.getColumnModel().getColumn(0);\n    final FileSelectorTableCellEditor selectorTableCellEditor = new FileSelectorTableCellEditor(project, myEditorContext.getModule());\n    col.setCellEditor(selectorTableCellEditor);\n    selectorTableCellEditor.addCellEditorListener(new CellEditorListener() {\n      public void editingCanceled(ChangeEvent e) {\n      }\n\n      public void editingStopped(ChangeEvent e) {\n        // ok we finished editing the left, now get the stuff from there, calculate a destination name and edit the other cell\n        int row = myAdditionalJARContentsTable.getSelectedRow();\n        if (row > -1) {\n          Pair<String, String> additionalJARContent = myAdditionalJARContentsTableModel.getAdditionalJARContent(row);\n          VirtualFile preselectedPath = LocalFileSystem.getInstance().findFileByPath(additionalJARContent.getFirst());\n          String destinationName;\n          if (preselectedPath != null) {\n            destinationName = determineMostLikelyLocationInJAR(preselectedPath);\n          }\n          else {\n            destinationName = \"\";\n          }\n\n          myAdditionalJARContentsTableModel.changeAdditionalJARConent(row, additionalJARContent.first, destinationName);\n          myAdditionalJARContentsTable.editCellAt(row, 1);\n          myAdditionalJARContentsTable.getEditorComponent().requestFocus();\n        }\n      }\n    });\n\n    myAdditionalJarContentsPanel.add(\n      ToolbarDecorator.createDecorator(myAdditionalJARContentsTable)\n        .setAddAction(new AnActionButtonRunnable() {\n          @Override\n          public void run(AnActionButton button) {\n            onAddAdditionalJARContent();\n          }\n        }).setRemoveAction(new AnActionButtonRunnable() {\n        @Override\n        public void run(AnActionButton button) {\n          onRemoveAdditionalJARContent();\n        }\n      }).setEditAction(new AnActionButtonRunnable() {\n        @Override\n        public void run(AnActionButton button) {\n          onEditAdditionalJARContent();\n        }\n      }).disableUpDownActions().createPanel(), BorderLayout.CENTER);\n\n    myValidatorsManager.registerValidator(new OsmorcFacetJarEditorValidator(myEditorContext, this));\n  }","commit_id":"43e3aeab397e4f9e7142367537f4df5cd6995847","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"private void updateGui() {\n    Boolean bnd = myEditorContext.getUserData(OsmorcFacetGeneralEditorTab.BND_CREATION_KEY);\n    Boolean bundlor = myEditorContext.getUserData(OsmorcFacetGeneralEditorTab.BUNDLOR_CREATION_KEY);\n    boolean useExternalTool = (bnd != null && bnd) || (bundlor != null && bundlor);\n    myJarOutputPathChooser.setEnabled(myPlaceInThisPathRadioButton.isSelected());\n    myAdditionalJARContentsTable.setEnabled(!useExternalTool);\n    myIgnoreFilePatternTextField.setEnabled(!useExternalTool);\n    myAddButton.setEnabled(!useExternalTool);\n    myRemoveButton.setEnabled(!useExternalTool);\n    myEditButton.setEnabled(!useExternalTool);\n    myAlwaysRebuildBundleJARCheckBox.setEnabled(!useExternalTool);\n    myAdditionalJarContentsPanel.setEnabled(!useExternalTool);\n    myFileIgnorePatternLabel.setEnabled(!useExternalTool);\n    myValidatorsManager.validate();\n    if (myPlaceInThisPathRadioButton.isSelected() && myJarOutputPathChooser.getText().trim().length() == 0) {\n      myErrorText.setError(\"Please select an output path\");\n    }\n    else {\n      myErrorText.setError(null);\n    }\n  }","id":15001,"modified_method":"private void updateGui() {\n    Boolean bnd = myEditorContext.getUserData(OsmorcFacetGeneralEditorTab.BND_CREATION_KEY);\n    Boolean bundlor = myEditorContext.getUserData(OsmorcFacetGeneralEditorTab.BUNDLOR_CREATION_KEY);\n    boolean useExternalTool = (bnd != null && bnd) || (bundlor != null && bundlor);\n    myJarOutputPathChooser.setEnabled(myPlaceInThisPathRadioButton.isSelected());\n    myAdditionalJARContentsTable.setEnabled(!useExternalTool);\n    myIgnoreFilePatternTextField.setEnabled(!useExternalTool);\n    myAdditionalJARContentsTable.setEnabled(!useExternalTool);\n    myAlwaysRebuildBundleJARCheckBox.setEnabled(!useExternalTool);\n    myAdditionalJarContentsPanel.setEnabled(!useExternalTool);\n    myFileIgnorePatternLabel.setEnabled(!useExternalTool);\n    myValidatorsManager.validate();\n    if (myPlaceInThisPathRadioButton.isSelected() && myJarOutputPathChooser.getText().trim().length() == 0) {\n      myErrorText.setError(\"Please select an output path\");\n    }\n    else {\n      myErrorText.setError(null);\n    }\n  }","commit_id":"43e3aeab397e4f9e7142367537f4df5cd6995847","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"private void doAdd() {\n    final FileChooserDescriptor descriptor = new FileChooserDescriptor(true, true, false, false, false, true);\n    final ModuleRootModel rootModel = myContext.getRootModel();\n    descriptor.setRoots(Arrays.asList(rootModel.getSourceRootUrls()));\n    final VirtualFile[] files = FileChooser.chooseFiles(myContext.getProject(), descriptor);\n    for (VirtualFile file : files) {\n      myFilesListModel.addElement(file.getPath());\n    }\n    updateButtons();\n  }","id":15002,"modified_method":"private void doAdd() {\n    final FileChooserDescriptor descriptor = new FileChooserDescriptor(true, true, false, false, false, true);\n    final ModuleRootModel rootModel = myContext.getRootModel();\n    descriptor.setRoots(Arrays.asList(rootModel.getSourceRootUrls()));\n    final VirtualFile[] files = FileChooser.chooseFiles(myContext.getProject(), descriptor);\n    for (VirtualFile file : files) {\n      myFilesListModel.addElement(file.getPath());\n    }\n  }","commit_id":"29ab9e29a45abf65adeee95787c8d1c2ee526a08","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public AppEngineFacetEditor(AppEngineFacetConfiguration facetConfiguration, FacetEditorContext context, FacetValidatorsManager validatorsManager) {\n    myFacetConfiguration = facetConfiguration;\n    myContext = context;\n    mySdkEditor = new AppEngineSdkEditor(myContext.getProject());\n    validatorsManager.registerValidator(new FacetEditorValidator() {\n      @Override\n      public ValidationResult check() {\n        return AppEngineSdkUtil.checkPath(mySdkEditor.getPath());\n      }\n    }, mySdkEditor.getComboBox());\n\n    myRunEnhancerOnMakeCheckBox.addActionListener(new ActionListener() {\n      public void actionPerformed(ActionEvent e) {\n        GuiUtils.enableChildren(myRunEnhancerOnMakeCheckBox.isSelected(), myFilesToEnhancePanel);\n        if (myRunEnhancerOnMakeCheckBox.isSelected() && myFilesListModel.isEmpty()) {\n          fillFilesList(AppEngineUtil.getDefaultSourceRootsToEnhance(myContext.getRootModel()));\n        }\n      }\n    });\n    myFilesListModel = new DefaultListModel();\n    myFilesList.setCellRenderer(new FilesListCellRenderer());\n    myFilesList.setModel(myFilesListModel);\n    myFilesList.addListSelectionListener(new ListSelectionListener() {\n      public void valueChanged(ListSelectionEvent e) {\n        updateButtons();\n      }\n    });\n    myAddButton.addActionListener(new ActionListener() {\n      public void actionPerformed(ActionEvent e) {\n        doAdd();\n      }\n    });\n    myRemoveButton.addActionListener(new ActionListener() {\n      public void actionPerformed(ActionEvent e) {\n        ListUtil.removeSelectedItems(myFilesList);\n        updateButtons();\n      }\n    });\n    PersistenceApiComboboxUtil.setComboboxModel(myPersistenceApiComboBox, false);\n    updateButtons();\n  }","id":15003,"modified_method":"public AppEngineFacetEditor(AppEngineFacetConfiguration facetConfiguration, FacetEditorContext context, FacetValidatorsManager validatorsManager) {\n    myFacetConfiguration = facetConfiguration;\n    myContext = context;\n    mySdkEditor = new AppEngineSdkEditor(myContext.getProject());\n    validatorsManager.registerValidator(new FacetEditorValidator() {\n      @Override\n      public ValidationResult check() {\n        return AppEngineSdkUtil.checkPath(mySdkEditor.getPath());\n      }\n    }, mySdkEditor.getComboBox());\n\n    myRunEnhancerOnMakeCheckBox.addActionListener(new ActionListener() {\n      public void actionPerformed(ActionEvent e) {\n        GuiUtils.enableChildren(myRunEnhancerOnMakeCheckBox.isSelected(), myFilesToEnhancePanel);\n        if (myRunEnhancerOnMakeCheckBox.isSelected() && myFilesListModel.isEmpty()) {\n          fillFilesList(AppEngineUtil.getDefaultSourceRootsToEnhance(myContext.getRootModel()));\n        }\n      }\n    });\n\n    myFilesListModel = new DefaultListModel();\n    myFilesList = new JBList(myFilesListModel);\n    myFilesList.setCellRenderer(new FilesListCellRenderer());\n    myFilesPanel.add(ToolbarDecorator.createDecorator(myFilesList)\n                       .setAddAction(new AnActionButtonRunnable() {\n                         @Override\n                         public void run(AnActionButton button) {\n                           doAdd();\n                         }\n                       }).disableUpDownActions().createPanel(), BorderLayout.CENTER);\n\n    PersistenceApiComboboxUtil.setComboboxModel(myPersistenceApiComboBox, false);\n  }","commit_id":"29ab9e29a45abf65adeee95787c8d1c2ee526a08","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public String toString() {\n\t\tStringBuilder b = new StringBuilder();\n\t\t\n\t\t\n\t\tb.append( String.format(\"      covered: %d%n      assessed: %d (%3.2f%%)%n         ref: %d (%3.2f%%)%n         variants: %d (%3.2f%%)%n            multiallelic: %d (%3.2f%%)%n\", \n\t\t\t\tcovered, assessed, Utils.percentage(assessed, covered), \n\t\t\t\tref, Utils.percentage(ref,assessed),\n\t\t\t\tvariant, Utils.percentage(variant,assessed),\n\t\t\t\tnon_biallelic_variant, Utils.percentage(non_biallelic_variant, variant))\n\t\t\t);\n\t\t\n\t\treturn b.toString();\n\t}","id":15004,"modified_method":"public String toString() {\n\t\tStringBuilder b = new StringBuilder();\n\t\t\n\t\t\n\t\tb.append( String.format(\"      covered: %d%n      assessed: %d (%3.2f%% covered)%n\", \n\t\t\t\tcovered, assessed, Utils.percentage(assessed, covered) )\n\t\t\t);\n\t\t\n\t\tb.append( String.format(\"         ref: %d (%3.2f%% assessed)%n\", \n\t\t\t\tref, Utils.percentage(ref,assessed))\n\t\t\t);\n\n\t\tint z = consistent_ref+inconsistent_ref;\n\t\tb.append( String.format(\"            ref assessed for consistency: %d (%3.2f%% ref)%n\", \n\t\t\t\tz, Utils.percentage(z, ref) )\n\t\t\t);\n\t\tb.append( String.format(\"               consistent ref: %d (%3.2f%% consistency-assessed ref)%n\", \n\t\t\t\tconsistent_ref, Utils.percentage(consistent_ref,z) )\n\t\t\t);\n\n\t\tb.append( String.format(\"         variants: %d (%3.2f%% assessed)%n\", \n\t\t\t\tvariant, Utils.percentage(variant,assessed))\n\t\t\t);\n\t\tb.append( String.format(\"            multiallelic: %d (%3.2f%% variants)%n\", \n\t\t\t\tnon_biallelic_variant, Utils.percentage(non_biallelic_variant, variant))\n\t\t\t);\n\t\t\n\t\tz = consistent_variant+inconsistent_variant;\n\t\tb.append( String.format(\"            variants assessed for consistency: %d (%3.2f%% variants)%n\", \n\t\t\t\tz, Utils.percentage(z, variant) )\n\t\t\t);\n\t\tb.append( String.format(\"               consistent variants: %d (%3.2f%% consistency-assessed variants)%n\", \n\t\t\t\tconsistent_ref, Utils.percentage(consistent_variant,z) )\n\t\t\t);\n\t\treturn b.toString();\n\t}","commit_id":"7afc10fd6f2d1caf3663a8b7c08b7d5d8920e25a","url":"https://github.com/broadgsa/gatk"},{"original_method":"public GenotypingCallStats add(GenotypingCallStats other) {\n\t\tthis.covered += other.covered;\n\t\tthis.assessed += other.assessed;\n\t\tthis.ref += other.ref;\n\t\tthis.variant += other.variant;\n\t\tthis.consistent_variant += other.consistent_variant;\n\t\tthis.consistent_ref += other.consistent_ref;\n\t\tthis.non_biallelic_variant += other.non_biallelic_variant;\n\t\treturn this;\n\t}","id":15005,"modified_method":"public GenotypingCallStats add(GenotypingCallStats other) {\n\t\tthis.covered += other.covered;\n\t\tthis.assessed += other.assessed;\n\t\tthis.ref += other.ref;\n\t\tthis.variant += other.variant;\n\t\tthis.consistent_variant += other.consistent_variant;\n\t\tthis.consistent_ref += other.consistent_ref;\n\t\tthis.inconsistent_variant += other.consistent_variant;\n\t\tthis.inconsistent_ref += other.consistent_ref;\n\t\tthis.non_biallelic_variant += other.non_biallelic_variant;\n\t\treturn this;\n\t}","commit_id":"7afc10fd6f2d1caf3663a8b7c08b7d5d8920e25a","url":"https://github.com/broadgsa/gatk"},{"original_method":"public Object removeProperty( String key )\n    {\n        if ( key == null )\n        {\n            throw new IllegalArgumentException( \"Null parameter.\" );\n        }\n        nodeManager.acquireLock( this, LockType.WRITE );\n        boolean success = false;\n        try\n        {\n            ensureFullProperties();\n            PropertyData property = null;\n            ArrayMap<Integer,PropertyData> addMap = \n                nodeManager.getCowPropertyAddMap( this );\n            ArrayMap<Integer,PropertyData> removeMap =\n                nodeManager.getCowPropertyRemoveMap( this, true );\n            for ( PropertyIndex cachedIndex : nodeManager.index( key ) )\n            {\n                if ( addMap != null )\n                {\n                    property = addMap.remove( cachedIndex.getKeyId() );\n                    if ( property != null )\n                    {\n                        removeMap.put( cachedIndex.getKeyId(), property );\n                        break;\n                    }\n                }\n                property = propertyMap.get( cachedIndex.getKeyId() );\n                if ( property != null )\n                {\n                    removeMap.put( cachedIndex.getKeyId(), property );\n                    break;\n                }\n            }\n            if ( property == null && !nodeManager.hasAllPropertyIndexes() )\n            {\n                if ( addMap != null )\n                {\n                    for ( int keyId : addMap.keySet() )\n                    {\n                        if ( !nodeManager.hasIndexFor( keyId ) )\n                        {\n                            PropertyIndex indexToCheck = nodeManager\n                                .getIndexFor( keyId );\n                            if ( indexToCheck.getKey().equals( key ) )\n                            {\n                                property = addMap.remove( indexToCheck\n                                    .getKeyId() );\n                                if ( property != null )\n                                {\n                                    removeMap.put( indexToCheck.getKeyId(),\n                                        property );\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    if ( property == null )\n                    {\n                        for ( int keyId : propertyMap.keySet() )\n                        {\n                            if ( !nodeManager.hasIndexFor( keyId ) )\n                            {\n                                PropertyIndex indexToCheck = nodeManager\n                                    .getIndexFor( keyId );\n                                if ( indexToCheck.getKey().equals( key ) )\n                                {\n                                    property = propertyMap.get( indexToCheck\n                                        .getKeyId() );\n                                    if ( property != null )\n                                    {\n                                        removeMap.put( indexToCheck.getKeyId(),\n                                            property );\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if ( property == null )\n            {\n                success = true;\n                return null;\n            }\n            removeProperty( property.getId() );\n            success = true;\n            return getPropertyValue( property );\n        }\n        finally\n        {\n            nodeManager.releaseLock( this, LockType.WRITE );\n            if ( !success )\n            {\n                setRollbackOnly();\n            }\n        }\n    }","id":15006,"modified_method":"public Object removeProperty( String key )\n    {\n        if ( key == null )\n        {\n            throw new IllegalArgumentException( \"Null parameter.\" );\n        }\n        nodeManager.acquireLock( this, LockType.WRITE );\n        boolean success = false;\n        try\n        {\n            ensureFullProperties();\n            PropertyData property = null;\n            ArrayMap<Integer,PropertyData> addMap = \n                nodeManager.getCowPropertyAddMap( this );\n            ArrayMap<Integer,PropertyData> removeMap =\n                nodeManager.getCowPropertyRemoveMap( this, true );\n            for ( PropertyIndex cachedIndex : nodeManager.index( key ) )\n            {\n                if ( addMap != null )\n                {\n                    property = addMap.remove( cachedIndex.getKeyId() );\n                    if ( property != null )\n                    {\n                        removeMap.put( cachedIndex.getKeyId(), property );\n                        break;\n                    }\n                }\n                if ( removeMap.get( cachedIndex.getKeyId() ) != null )\n                {\n                    success = true;\n                    return null;\n                }\n                property = propertyMap.get( cachedIndex.getKeyId() );\n                if ( property != null )\n                {\n                    removeMap.put( cachedIndex.getKeyId(), property );\n                    break;\n                }\n            }\n            if ( property == null && !nodeManager.hasAllPropertyIndexes() )\n            {\n                if ( addMap != null )\n                {\n                    for ( int keyId : addMap.keySet() )\n                    {\n                        if ( !nodeManager.hasIndexFor( keyId ) )\n                        {\n                            PropertyIndex indexToCheck = nodeManager\n                                .getIndexFor( keyId );\n                            if ( indexToCheck.getKey().equals( key ) )\n                            {\n                                property = addMap.remove( indexToCheck\n                                    .getKeyId() );\n                                if ( property != null )\n                                {\n                                    removeMap.put( indexToCheck.getKeyId(),\n                                        property );\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    if ( property == null )\n                    {\n                        for ( int keyId : propertyMap.keySet() )\n                        {\n                            if ( !nodeManager.hasIndexFor( keyId ) )\n                            {\n                                PropertyIndex indexToCheck = nodeManager\n                                    .getIndexFor( keyId );\n                                if ( indexToCheck.getKey().equals( key ) )\n                                {\n                                    property = propertyMap.get( indexToCheck\n                                        .getKeyId() );\n                                    if ( property != null )\n                                    {\n                                        removeMap.put( indexToCheck.getKeyId(),\n                                            property );\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if ( property == null )\n            {\n                success = true;\n                return null;\n            }\n            removeProperty( property.getId() );\n            success = true;\n            return getPropertyValue( property );\n        }\n        finally\n        {\n            nodeManager.releaseLock( this, LockType.WRITE );\n            if ( !success )\n            {\n                setRollbackOnly();\n            }\n        }\n    }","commit_id":"717004a2e611c7784e09eb3fb63cc74154cdbfea","url":"https://github.com/neo4j/neo4j"},{"original_method":"void relRemoveProperty( int relId, int propertyId )\n    {\n        RelationshipRecord relRecord = getRelationshipRecord( relId );\n        if ( relRecord == null )\n        {\n            relRecord = getRelationshipStore().getRecord( relId );\n        }\n        if ( !relRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Property remove on relationship[\" +\n                relId + \"] illegal since it has been deleted.\" );\n        }\n        PropertyRecord propRecord = getPropertyRecord( propertyId );\n        if ( propRecord == null )\n        {\n            propRecord = getPropertyStore().getRecord( propertyId );\n            addPropertyRecord( propRecord );\n        }\n        propRecord.setRelId( relId );\n        if ( propRecord.isLight() )\n        {\n            getPropertyStore().makeHeavy( propRecord );\n        }\n\n        propRecord.setInUse( false );\n        // TODO: update count on property index record\n        for ( DynamicRecord valueRecord : propRecord.getValueRecords() )\n        {\n            if ( valueRecord.inUse() )\n            {\n                valueRecord.setInUse( false, propRecord.getType().intValue() );\n            }\n        }\n        int prevProp = propRecord.getPrevProp();\n        int nextProp = propRecord.getNextProp();\n        if ( relRecord.getNextProp() == propertyId )\n        {\n            relRecord.setNextProp( nextProp );\n            // re-adding not a problem\n            addRelationshipRecord( relRecord );\n        }\n        if ( prevProp != Record.NO_PREVIOUS_PROPERTY.intValue() )\n        {\n            PropertyRecord prevPropRecord = getPropertyRecord( prevProp );\n            if ( prevPropRecord == null )\n            {\n                prevPropRecord = getPropertyStore().getLightRecord( prevProp );\n                addPropertyRecord( prevPropRecord );\n            }\n            prevPropRecord.setNextProp( nextProp );\n        }\n        if ( nextProp != Record.NO_NEXT_PROPERTY.intValue() )\n        {\n            PropertyRecord nextPropRecord = getPropertyRecord( nextProp );\n            if ( nextPropRecord == null )\n            {\n                nextPropRecord = getPropertyStore().getLightRecord( nextProp );\n                addPropertyRecord( nextPropRecord );\n            }\n            nextPropRecord.setPrevProp( prevProp );\n        }\n    }","id":15007,"modified_method":"void relRemoveProperty( int relId, int propertyId )\n    {\n        RelationshipRecord relRecord = getRelationshipRecord( relId );\n        if ( relRecord == null )\n        {\n            relRecord = getRelationshipStore().getRecord( relId );\n        }\n        if ( !relRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Property remove on relationship[\" +\n                relId + \"] illegal since it has been deleted.\" );\n        }\n        PropertyRecord propRecord = getPropertyRecord( propertyId );\n        if ( propRecord == null )\n        {\n            propRecord = getPropertyStore().getRecord( propertyId );\n            addPropertyRecord( propRecord );\n        }\n        if ( !propRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Unable to delete property[\" + \n                propertyId + \"] since it is already deleted.\" );\n        }\n        propRecord.setRelId( relId );\n        if ( propRecord.isLight() )\n        {\n            getPropertyStore().makeHeavy( propRecord );\n        }\n\n        propRecord.setInUse( false );\n        // TODO: update count on property index record\n        for ( DynamicRecord valueRecord : propRecord.getValueRecords() )\n        {\n            if ( valueRecord.inUse() )\n            {\n                valueRecord.setInUse( false, propRecord.getType().intValue() );\n            }\n        }\n        int prevProp = propRecord.getPrevProp();\n        int nextProp = propRecord.getNextProp();\n        if ( relRecord.getNextProp() == propertyId )\n        {\n            relRecord.setNextProp( nextProp );\n            // re-adding not a problem\n            addRelationshipRecord( relRecord );\n        }\n        if ( prevProp != Record.NO_PREVIOUS_PROPERTY.intValue() )\n        {\n            PropertyRecord prevPropRecord = getPropertyRecord( prevProp );\n            if ( prevPropRecord == null )\n            {\n                prevPropRecord = getPropertyStore().getLightRecord( prevProp );\n                addPropertyRecord( prevPropRecord );\n            }\n            assert prevPropRecord.inUse();\n            prevPropRecord.setNextProp( nextProp );\n        }\n        if ( nextProp != Record.NO_NEXT_PROPERTY.intValue() )\n        {\n            PropertyRecord nextPropRecord = getPropertyRecord( nextProp );\n            if ( nextPropRecord == null )\n            {\n                nextPropRecord = getPropertyStore().getLightRecord( nextProp );\n                addPropertyRecord( nextPropRecord );\n            }\n            assert nextPropRecord.inUse();\n            nextPropRecord.setPrevProp( prevProp );\n        }\n    }","commit_id":"717004a2e611c7784e09eb3fb63cc74154cdbfea","url":"https://github.com/neo4j/neo4j"},{"original_method":"void nodeChangeProperty( int nodeId, int propertyId, Object value )\n    {\n        NodeRecord nodeRecord = getNodeRecord( nodeId );\n        if ( nodeRecord == null )\n        {\n            nodeRecord = getNodeStore().getRecord( nodeId );\n        }\n        if ( !nodeRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Property change on node[\" +\n                nodeId + \"] illegal since it has been deleted.\" );\n        }\n        PropertyRecord propertyRecord = getPropertyRecord( propertyId );\n        if ( propertyRecord == null )\n        {\n            propertyRecord = getPropertyStore().getRecord( propertyId );\n            addPropertyRecord( propertyRecord );\n        }\n        propertyRecord.setNodeId( nodeId );\n        if ( propertyRecord.isLight() )\n        {\n            getPropertyStore().makeHeavy( propertyRecord );\n        }\n        if ( propertyRecord.getType() == PropertyType.STRING )\n        {\n            for ( DynamicRecord record : propertyRecord.getValueRecords() )\n            {\n                if ( record.inUse() )\n                {\n                    record.setInUse( false, PropertyType.STRING.intValue() );\n                }\n            }\n        }\n        else if ( propertyRecord.getType() == PropertyType.ARRAY )\n        {\n            for ( DynamicRecord record : propertyRecord.getValueRecords() )\n            {\n                if ( record.inUse() )\n                {\n                    record.setInUse( false, PropertyType.ARRAY.intValue() );\n                }\n            }\n        }\n        getPropertyStore().encodeValue( propertyRecord, value );\n        addPropertyRecord( propertyRecord );\n    }","id":15008,"modified_method":"void nodeChangeProperty( int nodeId, int propertyId, Object value )\n    {\n        NodeRecord nodeRecord = getNodeRecord( nodeId );\n        if ( nodeRecord == null )\n        {\n            nodeRecord = getNodeStore().getRecord( nodeId );\n        }\n        if ( !nodeRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Property change on node[\" +\n                nodeId + \"] illegal since it has been deleted.\" );\n        }\n        PropertyRecord propertyRecord = getPropertyRecord( propertyId );\n        if ( propertyRecord == null )\n        {\n            propertyRecord = getPropertyStore().getRecord( propertyId );\n            addPropertyRecord( propertyRecord );\n        }\n        if ( !propertyRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Unable to change property[\" + \n                propertyId + \"] since it is deleted.\" );\n        }\n        propertyRecord.setNodeId( nodeId );\n        if ( propertyRecord.isLight() )\n        {\n            getPropertyStore().makeHeavy( propertyRecord );\n        }\n        if ( propertyRecord.getType() == PropertyType.STRING )\n        {\n            for ( DynamicRecord record : propertyRecord.getValueRecords() )\n            {\n                if ( record.inUse() )\n                {\n                    record.setInUse( false, PropertyType.STRING.intValue() );\n                }\n            }\n        }\n        else if ( propertyRecord.getType() == PropertyType.ARRAY )\n        {\n            for ( DynamicRecord record : propertyRecord.getValueRecords() )\n            {\n                if ( record.inUse() )\n                {\n                    record.setInUse( false, PropertyType.ARRAY.intValue() );\n                }\n            }\n        }\n        getPropertyStore().encodeValue( propertyRecord, value );\n        addPropertyRecord( propertyRecord );\n    }","commit_id":"717004a2e611c7784e09eb3fb63cc74154cdbfea","url":"https://github.com/neo4j/neo4j"},{"original_method":"void nodeRemoveProperty( int nodeId, int propertyId )\n    {\n        NodeRecord nodeRecord = getNodeRecord( nodeId );\n        if ( nodeRecord == null )\n        {\n            nodeRecord = getNodeStore().getRecord( nodeId );\n        }\n        if ( !nodeRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Property remove on node[\" +\n                nodeId + \"] illegal since it has been deleted.\" );\n        }\n        PropertyRecord propRecord = getPropertyRecord( propertyId );\n        if ( propRecord == null )\n        {\n            propRecord = getPropertyStore().getRecord( propertyId );\n            addPropertyRecord( propRecord );\n        }\n        propRecord.setNodeId( nodeId );\n        if ( propRecord.isLight() )\n        {\n            getPropertyStore().makeHeavy( propRecord );\n        }\n\n        propRecord.setInUse( false );\n        // TODO: update count on property index record\n        for ( DynamicRecord valueRecord : propRecord.getValueRecords() )\n        {\n            if ( valueRecord.inUse() )\n            {\n                valueRecord.setInUse( false, propRecord.getType().intValue() );\n            }\n        }\n        int prevProp = propRecord.getPrevProp();\n        int nextProp = propRecord.getNextProp();\n        if ( nodeRecord.getNextProp() == propertyId )\n        {\n            nodeRecord.setNextProp( nextProp );\n            // re-adding not a problem\n            addNodeRecord( nodeRecord );\n        }\n        if ( prevProp != Record.NO_PREVIOUS_PROPERTY.intValue() )\n        {\n            PropertyRecord prevPropRecord = getPropertyRecord( prevProp );\n            if ( prevPropRecord == null )\n            {\n                prevPropRecord = getPropertyStore().getLightRecord( prevProp );\n            }\n            prevPropRecord.setNextProp( nextProp );\n            addPropertyRecord( prevPropRecord );\n        }\n        if ( nextProp != Record.NO_NEXT_PROPERTY.intValue() )\n        {\n            PropertyRecord nextPropRecord = getPropertyRecord( nextProp );\n            if ( nextPropRecord == null )\n            {\n                nextPropRecord = getPropertyStore().getLightRecord( nextProp );\n            }\n            nextPropRecord.setPrevProp( prevProp );\n            addPropertyRecord( nextPropRecord );\n        }\n    }","id":15009,"modified_method":"void nodeRemoveProperty( int nodeId, int propertyId )\n    {\n        NodeRecord nodeRecord = getNodeRecord( nodeId );\n        if ( nodeRecord == null )\n        {\n            nodeRecord = getNodeStore().getRecord( nodeId );\n        }\n        if ( !nodeRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Property remove on node[\" +\n                nodeId + \"] illegal since it has been deleted.\" );\n        }\n        PropertyRecord propRecord = getPropertyRecord( propertyId );\n        if ( propRecord == null )\n        {\n            propRecord = getPropertyStore().getRecord( propertyId );\n            addPropertyRecord( propRecord );\n        }\n        if ( !propRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Unable to delete property[\" + \n                propertyId + \"] since it is already deleted.\" );\n        }\n        propRecord.setNodeId( nodeId );\n        if ( propRecord.isLight() )\n        {\n            getPropertyStore().makeHeavy( propRecord );\n        }\n\n        propRecord.setInUse( false );\n        // TODO: update count on property index record\n        for ( DynamicRecord valueRecord : propRecord.getValueRecords() )\n        {\n            if ( valueRecord.inUse() )\n            {\n                valueRecord.setInUse( false, propRecord.getType().intValue() );\n            }\n        }\n        int prevProp = propRecord.getPrevProp();\n        int nextProp = propRecord.getNextProp();\n        if ( nodeRecord.getNextProp() == propertyId )\n        {\n            nodeRecord.setNextProp( nextProp );\n            // re-adding not a problem\n            addNodeRecord( nodeRecord );\n        }\n        if ( prevProp != Record.NO_PREVIOUS_PROPERTY.intValue() )\n        {\n            PropertyRecord prevPropRecord = getPropertyRecord( prevProp );\n            if ( prevPropRecord == null )\n            {\n                prevPropRecord = getPropertyStore().getLightRecord( prevProp );\n                addPropertyRecord( prevPropRecord );\n            }\n            assert prevPropRecord.inUse();\n            prevPropRecord.setNextProp( nextProp );\n        }\n        if ( nextProp != Record.NO_NEXT_PROPERTY.intValue() )\n        {\n            PropertyRecord nextPropRecord = getPropertyRecord( nextProp );\n            if ( nextPropRecord == null )\n            {\n                nextPropRecord = getPropertyStore().getLightRecord( nextProp );\n                addPropertyRecord( nextPropRecord );\n            }\n            assert nextPropRecord.inUse();\n            nextPropRecord.setPrevProp( prevProp );\n        }\n    }","commit_id":"717004a2e611c7784e09eb3fb63cc74154cdbfea","url":"https://github.com/neo4j/neo4j"},{"original_method":"void relChangeProperty( int relId, int propertyId, Object value )\n    {\n        RelationshipRecord relRecord = getRelationshipRecord( relId );\n        if ( relRecord == null )\n        {\n            relRecord = getRelationshipStore().getRecord( relId );\n        }\n        if ( !relRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Property change on relationship[\" +\n                relId + \"] illegal since it has been deleted.\" );\n        }\n        PropertyRecord propertyRecord = getPropertyRecord( propertyId );\n        if ( propertyRecord == null )\n        {\n            propertyRecord = getPropertyStore().getRecord( propertyId );\n            addPropertyRecord( propertyRecord );\n        }\n        propertyRecord.setRelId( relId );\n        if ( propertyRecord.isLight() )\n        {\n            getPropertyStore().makeHeavy( propertyRecord );\n        }\n        if ( propertyRecord.getType() == PropertyType.STRING )\n        {\n            for ( DynamicRecord record : propertyRecord.getValueRecords() )\n            {\n                if ( record.inUse() )\n                {\n                    record.setInUse( false, PropertyType.STRING.intValue() );\n                }\n            }\n        }\n        else if ( propertyRecord.getType() == PropertyType.ARRAY )\n        {\n            for ( DynamicRecord record : propertyRecord.getValueRecords() )\n            {\n                if ( record.inUse() )\n                {\n                    record.setInUse( false, PropertyType.ARRAY.intValue() );\n                }\n            }\n        }\n        getPropertyStore().encodeValue( propertyRecord, value );\n        addPropertyRecord( propertyRecord );\n    }","id":15010,"modified_method":"void relChangeProperty( int relId, int propertyId, Object value )\n    {\n        RelationshipRecord relRecord = getRelationshipRecord( relId );\n        if ( relRecord == null )\n        {\n            relRecord = getRelationshipStore().getRecord( relId );\n        }\n        if ( !relRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Property change on relationship[\" +\n                relId + \"] illegal since it has been deleted.\" );\n        }\n        PropertyRecord propertyRecord = getPropertyRecord( propertyId );\n        if ( propertyRecord == null )\n        {\n            propertyRecord = getPropertyStore().getRecord( propertyId );\n            addPropertyRecord( propertyRecord );\n        }\n        if ( !propertyRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Unable to change property[\" + \n                propertyId + \"] since it is deleted.\" );\n        }\n        propertyRecord.setRelId( relId );\n        if ( propertyRecord.isLight() )\n        {\n            getPropertyStore().makeHeavy( propertyRecord );\n        }\n        if ( propertyRecord.getType() == PropertyType.STRING )\n        {\n            for ( DynamicRecord record : propertyRecord.getValueRecords() )\n            {\n                if ( record.inUse() )\n                {\n                    record.setInUse( false, PropertyType.STRING.intValue() );\n                }\n            }\n        }\n        else if ( propertyRecord.getType() == PropertyType.ARRAY )\n        {\n            for ( DynamicRecord record : propertyRecord.getValueRecords() )\n            {\n                if ( record.inUse() )\n                {\n                    record.setInUse( false, PropertyType.ARRAY.intValue() );\n                }\n            }\n        }\n        getPropertyStore().encodeValue( propertyRecord, value );\n        addPropertyRecord( propertyRecord );\n    }","commit_id":"717004a2e611c7784e09eb3fb63cc74154cdbfea","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Object removeProperty( String key )\n    {\n        if ( key == null )\n        {\n            throw new IllegalArgumentException( \"Null parameter.\" );\n        }\n        nodeManager.acquireLock( this, LockType.WRITE );\n        boolean success = false;\n        try\n        {\n            ensureFullProperties();\n            PropertyData property = null;\n            ArrayMap<Integer,PropertyData> addMap = \n                nodeManager.getCowPropertyAddMap( this );\n            ArrayMap<Integer,PropertyData> removeMap =\n                nodeManager.getCowPropertyRemoveMap( this, true );\n            for ( PropertyIndex cachedIndex : nodeManager.index( key ) )\n            {\n                if ( addMap != null )\n                {\n                    property = addMap.remove( cachedIndex.getKeyId() );\n                    if ( property != null )\n                    {\n                        removeMap.put( cachedIndex.getKeyId(), property );\n                        break;\n                    }\n                }\n                property = propertyMap.get( cachedIndex.getKeyId() );\n                if ( property != null )\n                {\n                    removeMap.put( cachedIndex.getKeyId(), property );\n                    break;\n                }\n            }\n            if ( property == null && !nodeManager.hasAllPropertyIndexes() )\n            {\n                if ( addMap != null )\n                {\n                    for ( int keyId : addMap.keySet() )\n                    {\n                        if ( !nodeManager.hasIndexFor( keyId ) )\n                        {\n                            PropertyIndex indexToCheck = nodeManager\n                                .getIndexFor( keyId );\n                            if ( indexToCheck.getKey().equals( key ) )\n                            {\n                                property = addMap.remove( indexToCheck\n                                    .getKeyId() );\n                                if ( property != null )\n                                {\n                                    removeMap.put( indexToCheck.getKeyId(),\n                                        property );\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    if ( property == null )\n                    {\n                        for ( int keyId : propertyMap.keySet() )\n                        {\n                            if ( !nodeManager.hasIndexFor( keyId ) )\n                            {\n                                PropertyIndex indexToCheck = nodeManager\n                                    .getIndexFor( keyId );\n                                if ( indexToCheck.getKey().equals( key ) )\n                                {\n                                    property = propertyMap.get( indexToCheck\n                                        .getKeyId() );\n                                    if ( property != null )\n                                    {\n                                        removeMap.put( indexToCheck.getKeyId(),\n                                            property );\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if ( property == null )\n            {\n                success = true;\n                return null;\n            }\n            removeProperty( property.getId() );\n            success = true;\n            return getPropertyValue( property );\n        }\n        finally\n        {\n            nodeManager.releaseLock( this, LockType.WRITE );\n            if ( !success )\n            {\n                setRollbackOnly();\n            }\n        }\n    }","id":15011,"modified_method":"public Object removeProperty( String key )\n    {\n        if ( key == null )\n        {\n            throw new IllegalArgumentException( \"Null parameter.\" );\n        }\n        nodeManager.acquireLock( this, LockType.WRITE );\n        boolean success = false;\n        try\n        {\n            ensureFullProperties();\n            PropertyData property = null;\n            ArrayMap<Integer,PropertyData> addMap = \n                nodeManager.getCowPropertyAddMap( this );\n            ArrayMap<Integer,PropertyData> removeMap =\n                nodeManager.getCowPropertyRemoveMap( this, true );\n            for ( PropertyIndex cachedIndex : nodeManager.index( key ) )\n            {\n                if ( addMap != null )\n                {\n                    property = addMap.remove( cachedIndex.getKeyId() );\n                    if ( property != null )\n                    {\n                        removeMap.put( cachedIndex.getKeyId(), property );\n                        break;\n                    }\n                }\n                if ( removeMap.get( cachedIndex.getKeyId() ) != null )\n                {\n                    success = true;\n                    return null;\n                }\n                property = propertyMap.get( cachedIndex.getKeyId() );\n                if ( property != null )\n                {\n                    removeMap.put( cachedIndex.getKeyId(), property );\n                    break;\n                }\n            }\n            if ( property == null && !nodeManager.hasAllPropertyIndexes() )\n            {\n                if ( addMap != null )\n                {\n                    for ( int keyId : addMap.keySet() )\n                    {\n                        if ( !nodeManager.hasIndexFor( keyId ) )\n                        {\n                            PropertyIndex indexToCheck = nodeManager\n                                .getIndexFor( keyId );\n                            if ( indexToCheck.getKey().equals( key ) )\n                            {\n                                property = addMap.remove( indexToCheck\n                                    .getKeyId() );\n                                if ( property != null )\n                                {\n                                    removeMap.put( indexToCheck.getKeyId(),\n                                        property );\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    if ( property == null )\n                    {\n                        for ( int keyId : propertyMap.keySet() )\n                        {\n                            if ( !nodeManager.hasIndexFor( keyId ) )\n                            {\n                                PropertyIndex indexToCheck = nodeManager\n                                    .getIndexFor( keyId );\n                                if ( indexToCheck.getKey().equals( key ) )\n                                {\n                                    property = propertyMap.get( indexToCheck\n                                        .getKeyId() );\n                                    if ( property != null )\n                                    {\n                                        removeMap.put( indexToCheck.getKeyId(),\n                                            property );\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if ( property == null )\n            {\n                success = true;\n                return null;\n            }\n            removeProperty( property.getId() );\n            success = true;\n            return getPropertyValue( property );\n        }\n        finally\n        {\n            nodeManager.releaseLock( this, LockType.WRITE );\n            if ( !success )\n            {\n                setRollbackOnly();\n            }\n        }\n    }","commit_id":"98b1c0ce13a7dce41ffe7dc5110de44e841e3065","url":"https://github.com/neo4j/neo4j"},{"original_method":"void relRemoveProperty( int relId, int propertyId )\n    {\n        RelationshipRecord relRecord = getRelationshipRecord( relId );\n        if ( relRecord == null )\n        {\n            relRecord = getRelationshipStore().getRecord( relId );\n        }\n        if ( !relRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Property remove on relationship[\" +\n                relId + \"] illegal since it has been deleted.\" );\n        }\n        PropertyRecord propRecord = getPropertyRecord( propertyId );\n        if ( propRecord == null )\n        {\n            propRecord = getPropertyStore().getRecord( propertyId );\n            addPropertyRecord( propRecord );\n        }\n        propRecord.setRelId( relId );\n        if ( propRecord.isLight() )\n        {\n            getPropertyStore().makeHeavy( propRecord );\n        }\n\n        propRecord.setInUse( false );\n        // TODO: update count on property index record\n        for ( DynamicRecord valueRecord : propRecord.getValueRecords() )\n        {\n            if ( valueRecord.inUse() )\n            {\n                valueRecord.setInUse( false, propRecord.getType().intValue() );\n            }\n        }\n        int prevProp = propRecord.getPrevProp();\n        int nextProp = propRecord.getNextProp();\n        if ( relRecord.getNextProp() == propertyId )\n        {\n            relRecord.setNextProp( nextProp );\n            // re-adding not a problem\n            addRelationshipRecord( relRecord );\n        }\n        if ( prevProp != Record.NO_PREVIOUS_PROPERTY.intValue() )\n        {\n            PropertyRecord prevPropRecord = getPropertyRecord( prevProp );\n            if ( prevPropRecord == null )\n            {\n                prevPropRecord = getPropertyStore().getLightRecord( prevProp );\n                addPropertyRecord( prevPropRecord );\n            }\n            prevPropRecord.setNextProp( nextProp );\n        }\n        if ( nextProp != Record.NO_NEXT_PROPERTY.intValue() )\n        {\n            PropertyRecord nextPropRecord = getPropertyRecord( nextProp );\n            if ( nextPropRecord == null )\n            {\n                nextPropRecord = getPropertyStore().getLightRecord( nextProp );\n                addPropertyRecord( nextPropRecord );\n            }\n            nextPropRecord.setPrevProp( prevProp );\n        }\n    }","id":15012,"modified_method":"void relRemoveProperty( int relId, int propertyId )\n    {\n        RelationshipRecord relRecord = getRelationshipRecord( relId );\n        if ( relRecord == null )\n        {\n            relRecord = getRelationshipStore().getRecord( relId );\n        }\n        if ( !relRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Property remove on relationship[\" +\n                relId + \"] illegal since it has been deleted.\" );\n        }\n        PropertyRecord propRecord = getPropertyRecord( propertyId );\n        if ( propRecord == null )\n        {\n            propRecord = getPropertyStore().getRecord( propertyId );\n            addPropertyRecord( propRecord );\n        }\n        if ( !propRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Unable to delete property[\" + \n                propertyId + \"] since it is already deleted.\" );\n        }\n        propRecord.setRelId( relId );\n        if ( propRecord.isLight() )\n        {\n            getPropertyStore().makeHeavy( propRecord );\n        }\n\n        propRecord.setInUse( false );\n        // TODO: update count on property index record\n        for ( DynamicRecord valueRecord : propRecord.getValueRecords() )\n        {\n            if ( valueRecord.inUse() )\n            {\n                valueRecord.setInUse( false, propRecord.getType().intValue() );\n            }\n        }\n        int prevProp = propRecord.getPrevProp();\n        int nextProp = propRecord.getNextProp();\n        if ( relRecord.getNextProp() == propertyId )\n        {\n            relRecord.setNextProp( nextProp );\n            // re-adding not a problem\n            addRelationshipRecord( relRecord );\n        }\n        if ( prevProp != Record.NO_PREVIOUS_PROPERTY.intValue() )\n        {\n            PropertyRecord prevPropRecord = getPropertyRecord( prevProp );\n            if ( prevPropRecord == null )\n            {\n                prevPropRecord = getPropertyStore().getLightRecord( prevProp );\n                addPropertyRecord( prevPropRecord );\n            }\n            assert prevPropRecord.inUse();\n            prevPropRecord.setNextProp( nextProp );\n        }\n        if ( nextProp != Record.NO_NEXT_PROPERTY.intValue() )\n        {\n            PropertyRecord nextPropRecord = getPropertyRecord( nextProp );\n            if ( nextPropRecord == null )\n            {\n                nextPropRecord = getPropertyStore().getLightRecord( nextProp );\n                addPropertyRecord( nextPropRecord );\n            }\n            assert nextPropRecord.inUse();\n            nextPropRecord.setPrevProp( prevProp );\n        }\n    }","commit_id":"98b1c0ce13a7dce41ffe7dc5110de44e841e3065","url":"https://github.com/neo4j/neo4j"},{"original_method":"void nodeRemoveProperty( int nodeId, int propertyId )\n    {\n        NodeRecord nodeRecord = getNodeRecord( nodeId );\n        if ( nodeRecord == null )\n        {\n            nodeRecord = getNodeStore().getRecord( nodeId );\n        }\n        if ( !nodeRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Property remove on node[\" +\n                nodeId + \"] illegal since it has been deleted.\" );\n        }\n        PropertyRecord propRecord = getPropertyRecord( propertyId );\n        if ( propRecord == null )\n        {\n            propRecord = getPropertyStore().getRecord( propertyId );\n            addPropertyRecord( propRecord );\n        }\n        propRecord.setNodeId( nodeId );\n        if ( propRecord.isLight() )\n        {\n            getPropertyStore().makeHeavy( propRecord );\n        }\n\n        propRecord.setInUse( false );\n        // TODO: update count on property index record\n        for ( DynamicRecord valueRecord : propRecord.getValueRecords() )\n        {\n            if ( valueRecord.inUse() )\n            {\n                valueRecord.setInUse( false, propRecord.getType().intValue() );\n            }\n        }\n        int prevProp = propRecord.getPrevProp();\n        int nextProp = propRecord.getNextProp();\n        if ( nodeRecord.getNextProp() == propertyId )\n        {\n            nodeRecord.setNextProp( nextProp );\n            // re-adding not a problem\n            addNodeRecord( nodeRecord );\n        }\n        if ( prevProp != Record.NO_PREVIOUS_PROPERTY.intValue() )\n        {\n            PropertyRecord prevPropRecord = getPropertyRecord( prevProp );\n            if ( prevPropRecord == null )\n            {\n                prevPropRecord = getPropertyStore().getLightRecord( prevProp );\n            }\n            prevPropRecord.setNextProp( nextProp );\n            addPropertyRecord( prevPropRecord );\n        }\n        if ( nextProp != Record.NO_NEXT_PROPERTY.intValue() )\n        {\n            PropertyRecord nextPropRecord = getPropertyRecord( nextProp );\n            if ( nextPropRecord == null )\n            {\n                nextPropRecord = getPropertyStore().getLightRecord( nextProp );\n            }\n            nextPropRecord.setPrevProp( prevProp );\n            addPropertyRecord( nextPropRecord );\n        }\n    }","id":15013,"modified_method":"void nodeRemoveProperty( int nodeId, int propertyId )\n    {\n        NodeRecord nodeRecord = getNodeRecord( nodeId );\n        if ( nodeRecord == null )\n        {\n            nodeRecord = getNodeStore().getRecord( nodeId );\n        }\n        if ( !nodeRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Property remove on node[\" +\n                nodeId + \"] illegal since it has been deleted.\" );\n        }\n        PropertyRecord propRecord = getPropertyRecord( propertyId );\n        if ( propRecord == null )\n        {\n            propRecord = getPropertyStore().getRecord( propertyId );\n            addPropertyRecord( propRecord );\n        }\n        if ( !propRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Unable to delete property[\" + \n                propertyId + \"] since it is already deleted.\" );\n        }\n        propRecord.setNodeId( nodeId );\n        if ( propRecord.isLight() )\n        {\n            getPropertyStore().makeHeavy( propRecord );\n        }\n\n        propRecord.setInUse( false );\n        // TODO: update count on property index record\n        for ( DynamicRecord valueRecord : propRecord.getValueRecords() )\n        {\n            if ( valueRecord.inUse() )\n            {\n                valueRecord.setInUse( false, propRecord.getType().intValue() );\n            }\n        }\n        int prevProp = propRecord.getPrevProp();\n        int nextProp = propRecord.getNextProp();\n        if ( nodeRecord.getNextProp() == propertyId )\n        {\n            nodeRecord.setNextProp( nextProp );\n            // re-adding not a problem\n            addNodeRecord( nodeRecord );\n        }\n        if ( prevProp != Record.NO_PREVIOUS_PROPERTY.intValue() )\n        {\n            PropertyRecord prevPropRecord = getPropertyRecord( prevProp );\n            if ( prevPropRecord == null )\n            {\n                prevPropRecord = getPropertyStore().getLightRecord( prevProp );\n                addPropertyRecord( prevPropRecord );\n            }\n            assert prevPropRecord.inUse();\n            prevPropRecord.setNextProp( nextProp );\n        }\n        if ( nextProp != Record.NO_NEXT_PROPERTY.intValue() )\n        {\n            PropertyRecord nextPropRecord = getPropertyRecord( nextProp );\n            if ( nextPropRecord == null )\n            {\n                nextPropRecord = getPropertyStore().getLightRecord( nextProp );\n                addPropertyRecord( nextPropRecord );\n            }\n            assert nextPropRecord.inUse();\n            nextPropRecord.setPrevProp( prevProp );\n        }\n    }","commit_id":"98b1c0ce13a7dce41ffe7dc5110de44e841e3065","url":"https://github.com/neo4j/neo4j"},{"original_method":"void nodeChangeProperty( int nodeId, int propertyId, Object value )\n    {\n        NodeRecord nodeRecord = getNodeRecord( nodeId );\n        if ( nodeRecord == null )\n        {\n            nodeRecord = getNodeStore().getRecord( nodeId );\n        }\n        if ( !nodeRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Property change on node[\" +\n                nodeId + \"] illegal since it has been deleted.\" );\n        }\n        PropertyRecord propertyRecord = getPropertyRecord( propertyId );\n        if ( propertyRecord == null )\n        {\n            propertyRecord = getPropertyStore().getRecord( propertyId );\n            addPropertyRecord( propertyRecord );\n        }\n        propertyRecord.setNodeId( nodeId );\n        if ( propertyRecord.isLight() )\n        {\n            getPropertyStore().makeHeavy( propertyRecord );\n        }\n        if ( propertyRecord.getType() == PropertyType.STRING )\n        {\n            for ( DynamicRecord record : propertyRecord.getValueRecords() )\n            {\n                if ( record.inUse() )\n                {\n                    record.setInUse( false, PropertyType.STRING.intValue() );\n                }\n            }\n        }\n        else if ( propertyRecord.getType() == PropertyType.ARRAY )\n        {\n            for ( DynamicRecord record : propertyRecord.getValueRecords() )\n            {\n                if ( record.inUse() )\n                {\n                    record.setInUse( false, PropertyType.ARRAY.intValue() );\n                }\n            }\n        }\n        getPropertyStore().encodeValue( propertyRecord, value );\n        addPropertyRecord( propertyRecord );\n    }","id":15014,"modified_method":"void nodeChangeProperty( int nodeId, int propertyId, Object value )\n    {\n        NodeRecord nodeRecord = getNodeRecord( nodeId );\n        if ( nodeRecord == null )\n        {\n            nodeRecord = getNodeStore().getRecord( nodeId );\n        }\n        if ( !nodeRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Property change on node[\" +\n                nodeId + \"] illegal since it has been deleted.\" );\n        }\n        PropertyRecord propertyRecord = getPropertyRecord( propertyId );\n        if ( propertyRecord == null )\n        {\n            propertyRecord = getPropertyStore().getRecord( propertyId );\n            addPropertyRecord( propertyRecord );\n        }\n        if ( !propertyRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Unable to change property[\" + \n                propertyId + \"] since it is deleted.\" );\n        }\n        propertyRecord.setNodeId( nodeId );\n        if ( propertyRecord.isLight() )\n        {\n            getPropertyStore().makeHeavy( propertyRecord );\n        }\n        if ( propertyRecord.getType() == PropertyType.STRING )\n        {\n            for ( DynamicRecord record : propertyRecord.getValueRecords() )\n            {\n                if ( record.inUse() )\n                {\n                    record.setInUse( false, PropertyType.STRING.intValue() );\n                }\n            }\n        }\n        else if ( propertyRecord.getType() == PropertyType.ARRAY )\n        {\n            for ( DynamicRecord record : propertyRecord.getValueRecords() )\n            {\n                if ( record.inUse() )\n                {\n                    record.setInUse( false, PropertyType.ARRAY.intValue() );\n                }\n            }\n        }\n        getPropertyStore().encodeValue( propertyRecord, value );\n        addPropertyRecord( propertyRecord );\n    }","commit_id":"98b1c0ce13a7dce41ffe7dc5110de44e841e3065","url":"https://github.com/neo4j/neo4j"},{"original_method":"void relChangeProperty( int relId, int propertyId, Object value )\n    {\n        RelationshipRecord relRecord = getRelationshipRecord( relId );\n        if ( relRecord == null )\n        {\n            relRecord = getRelationshipStore().getRecord( relId );\n        }\n        if ( !relRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Property change on relationship[\" +\n                relId + \"] illegal since it has been deleted.\" );\n        }\n        PropertyRecord propertyRecord = getPropertyRecord( propertyId );\n        if ( propertyRecord == null )\n        {\n            propertyRecord = getPropertyStore().getRecord( propertyId );\n            addPropertyRecord( propertyRecord );\n        }\n        propertyRecord.setRelId( relId );\n        if ( propertyRecord.isLight() )\n        {\n            getPropertyStore().makeHeavy( propertyRecord );\n        }\n        if ( propertyRecord.getType() == PropertyType.STRING )\n        {\n            for ( DynamicRecord record : propertyRecord.getValueRecords() )\n            {\n                if ( record.inUse() )\n                {\n                    record.setInUse( false, PropertyType.STRING.intValue() );\n                }\n            }\n        }\n        else if ( propertyRecord.getType() == PropertyType.ARRAY )\n        {\n            for ( DynamicRecord record : propertyRecord.getValueRecords() )\n            {\n                if ( record.inUse() )\n                {\n                    record.setInUse( false, PropertyType.ARRAY.intValue() );\n                }\n            }\n        }\n        getPropertyStore().encodeValue( propertyRecord, value );\n        addPropertyRecord( propertyRecord );\n    }","id":15015,"modified_method":"void relChangeProperty( int relId, int propertyId, Object value )\n    {\n        RelationshipRecord relRecord = getRelationshipRecord( relId );\n        if ( relRecord == null )\n        {\n            relRecord = getRelationshipStore().getRecord( relId );\n        }\n        if ( !relRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Property change on relationship[\" +\n                relId + \"] illegal since it has been deleted.\" );\n        }\n        PropertyRecord propertyRecord = getPropertyRecord( propertyId );\n        if ( propertyRecord == null )\n        {\n            propertyRecord = getPropertyStore().getRecord( propertyId );\n            addPropertyRecord( propertyRecord );\n        }\n        if ( !propertyRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Unable to change property[\" + \n                propertyId + \"] since it is deleted.\" );\n        }\n        propertyRecord.setRelId( relId );\n        if ( propertyRecord.isLight() )\n        {\n            getPropertyStore().makeHeavy( propertyRecord );\n        }\n        if ( propertyRecord.getType() == PropertyType.STRING )\n        {\n            for ( DynamicRecord record : propertyRecord.getValueRecords() )\n            {\n                if ( record.inUse() )\n                {\n                    record.setInUse( false, PropertyType.STRING.intValue() );\n                }\n            }\n        }\n        else if ( propertyRecord.getType() == PropertyType.ARRAY )\n        {\n            for ( DynamicRecord record : propertyRecord.getValueRecords() )\n            {\n                if ( record.inUse() )\n                {\n                    record.setInUse( false, PropertyType.ARRAY.intValue() );\n                }\n            }\n        }\n        getPropertyStore().encodeValue( propertyRecord, value );\n        addPropertyRecord( propertyRecord );\n    }","commit_id":"98b1c0ce13a7dce41ffe7dc5110de44e841e3065","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Object removeProperty( String key )\n    {\n        if ( key == null )\n        {\n            throw new IllegalArgumentException( \"Null parameter.\" );\n        }\n        nodeManager.acquireLock( this, LockType.WRITE );\n        boolean success = false;\n        try\n        {\n            ensureFullProperties();\n            PropertyData property = null;\n            ArrayMap<Integer,PropertyData> addMap = \n                nodeManager.getCowPropertyAddMap( this );\n            ArrayMap<Integer,PropertyData> removeMap =\n                nodeManager.getCowPropertyRemoveMap( this, true );\n            for ( PropertyIndex cachedIndex : nodeManager.index( key ) )\n            {\n                if ( addMap != null )\n                {\n                    property = addMap.remove( cachedIndex.getKeyId() );\n                    if ( property != null )\n                    {\n                        removeMap.put( cachedIndex.getKeyId(), property );\n                        break;\n                    }\n                }\n                property = propertyMap.get( cachedIndex.getKeyId() );\n                if ( property != null )\n                {\n                    removeMap.put( cachedIndex.getKeyId(), property );\n                    break;\n                }\n            }\n            if ( property == null && !nodeManager.hasAllPropertyIndexes() )\n            {\n                if ( addMap != null )\n                {\n                    for ( int keyId : addMap.keySet() )\n                    {\n                        if ( !nodeManager.hasIndexFor( keyId ) )\n                        {\n                            PropertyIndex indexToCheck = nodeManager\n                                .getIndexFor( keyId );\n                            if ( indexToCheck.getKey().equals( key ) )\n                            {\n                                property = addMap.remove( indexToCheck\n                                    .getKeyId() );\n                                if ( property != null )\n                                {\n                                    removeMap.put( indexToCheck.getKeyId(),\n                                        property );\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    if ( property == null )\n                    {\n                        for ( int keyId : propertyMap.keySet() )\n                        {\n                            if ( !nodeManager.hasIndexFor( keyId ) )\n                            {\n                                PropertyIndex indexToCheck = nodeManager\n                                    .getIndexFor( keyId );\n                                if ( indexToCheck.getKey().equals( key ) )\n                                {\n                                    property = propertyMap.get( indexToCheck\n                                        .getKeyId() );\n                                    if ( property != null )\n                                    {\n                                        removeMap.put( indexToCheck.getKeyId(),\n                                            property );\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if ( property == null )\n            {\n                success = true;\n                return null;\n            }\n            removeProperty( property.getId() );\n            success = true;\n            return getPropertyValue( property );\n        }\n        finally\n        {\n            nodeManager.releaseLock( this, LockType.WRITE );\n            if ( !success )\n            {\n                setRollbackOnly();\n            }\n        }\n    }","id":15016,"modified_method":"public Object removeProperty( String key )\n    {\n        if ( key == null )\n        {\n            throw new IllegalArgumentException( \"Null parameter.\" );\n        }\n        nodeManager.acquireLock( this, LockType.WRITE );\n        boolean success = false;\n        try\n        {\n            ensureFullProperties();\n            PropertyData property = null;\n            ArrayMap<Integer,PropertyData> addMap = \n                nodeManager.getCowPropertyAddMap( this );\n            ArrayMap<Integer,PropertyData> removeMap =\n                nodeManager.getCowPropertyRemoveMap( this, true );\n            for ( PropertyIndex cachedIndex : nodeManager.index( key ) )\n            {\n                if ( addMap != null )\n                {\n                    property = addMap.remove( cachedIndex.getKeyId() );\n                    if ( property != null )\n                    {\n                        removeMap.put( cachedIndex.getKeyId(), property );\n                        break;\n                    }\n                }\n                if ( removeMap.get( cachedIndex.getKeyId() ) != null )\n                {\n                    success = true;\n                    return null;\n                }\n                property = propertyMap.get( cachedIndex.getKeyId() );\n                if ( property != null )\n                {\n                    removeMap.put( cachedIndex.getKeyId(), property );\n                    break;\n                }\n            }\n            if ( property == null && !nodeManager.hasAllPropertyIndexes() )\n            {\n                if ( addMap != null )\n                {\n                    for ( int keyId : addMap.keySet() )\n                    {\n                        if ( !nodeManager.hasIndexFor( keyId ) )\n                        {\n                            PropertyIndex indexToCheck = nodeManager\n                                .getIndexFor( keyId );\n                            if ( indexToCheck.getKey().equals( key ) )\n                            {\n                                property = addMap.remove( indexToCheck\n                                    .getKeyId() );\n                                if ( property != null )\n                                {\n                                    removeMap.put( indexToCheck.getKeyId(),\n                                        property );\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    if ( property == null )\n                    {\n                        for ( int keyId : propertyMap.keySet() )\n                        {\n                            if ( !nodeManager.hasIndexFor( keyId ) )\n                            {\n                                PropertyIndex indexToCheck = nodeManager\n                                    .getIndexFor( keyId );\n                                if ( indexToCheck.getKey().equals( key ) )\n                                {\n                                    property = propertyMap.get( indexToCheck\n                                        .getKeyId() );\n                                    if ( property != null )\n                                    {\n                                        removeMap.put( indexToCheck.getKeyId(),\n                                            property );\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if ( property == null )\n            {\n                success = true;\n                return null;\n            }\n            removeProperty( property.getId() );\n            success = true;\n            return getPropertyValue( property );\n        }\n        finally\n        {\n            nodeManager.releaseLock( this, LockType.WRITE );\n            if ( !success )\n            {\n                setRollbackOnly();\n            }\n        }\n    }","commit_id":"960447830ef490c5aad41d88f11c2b19a14dbfe1","url":"https://github.com/neo4j/neo4j"},{"original_method":"void relChangeProperty( int relId, int propertyId, Object value )\n    {\n        RelationshipRecord relRecord = getRelationshipRecord( relId );\n        if ( relRecord == null )\n        {\n            relRecord = getRelationshipStore().getRecord( relId );\n        }\n        if ( !relRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Property change on relationship[\" +\n                relId + \"] illegal since it has been deleted.\" );\n        }\n        PropertyRecord propertyRecord = getPropertyRecord( propertyId );\n        if ( propertyRecord == null )\n        {\n            propertyRecord = getPropertyStore().getRecord( propertyId );\n            addPropertyRecord( propertyRecord );\n        }\n        propertyRecord.setRelId( relId );\n        if ( propertyRecord.isLight() )\n        {\n            getPropertyStore().makeHeavy( propertyRecord );\n        }\n        if ( propertyRecord.getType() == PropertyType.STRING )\n        {\n            for ( DynamicRecord record : propertyRecord.getValueRecords() )\n            {\n                if ( record.inUse() )\n                {\n                    record.setInUse( false, PropertyType.STRING.intValue() );\n                }\n            }\n        }\n        else if ( propertyRecord.getType() == PropertyType.ARRAY )\n        {\n            for ( DynamicRecord record : propertyRecord.getValueRecords() )\n            {\n                if ( record.inUse() )\n                {\n                    record.setInUse( false, PropertyType.ARRAY.intValue() );\n                }\n            }\n        }\n        getPropertyStore().encodeValue( propertyRecord, value );\n        addPropertyRecord( propertyRecord );\n    }","id":15017,"modified_method":"void relChangeProperty( int relId, int propertyId, Object value )\n    {\n        RelationshipRecord relRecord = getRelationshipRecord( relId );\n        if ( relRecord == null )\n        {\n            relRecord = getRelationshipStore().getRecord( relId );\n        }\n        if ( !relRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Property change on relationship[\" +\n                relId + \"] illegal since it has been deleted.\" );\n        }\n        PropertyRecord propertyRecord = getPropertyRecord( propertyId );\n        if ( propertyRecord == null )\n        {\n            propertyRecord = getPropertyStore().getRecord( propertyId );\n            addPropertyRecord( propertyRecord );\n        }\n        if ( !propertyRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Unable to change property[\" + \n                propertyId + \"] since it is deleted.\" );\n        }\n        propertyRecord.setRelId( relId );\n        if ( propertyRecord.isLight() )\n        {\n            getPropertyStore().makeHeavy( propertyRecord );\n        }\n        if ( propertyRecord.getType() == PropertyType.STRING )\n        {\n            for ( DynamicRecord record : propertyRecord.getValueRecords() )\n            {\n                if ( record.inUse() )\n                {\n                    record.setInUse( false, PropertyType.STRING.intValue() );\n                }\n            }\n        }\n        else if ( propertyRecord.getType() == PropertyType.ARRAY )\n        {\n            for ( DynamicRecord record : propertyRecord.getValueRecords() )\n            {\n                if ( record.inUse() )\n                {\n                    record.setInUse( false, PropertyType.ARRAY.intValue() );\n                }\n            }\n        }\n        getPropertyStore().encodeValue( propertyRecord, value );\n        addPropertyRecord( propertyRecord );\n    }","commit_id":"960447830ef490c5aad41d88f11c2b19a14dbfe1","url":"https://github.com/neo4j/neo4j"},{"original_method":"void relRemoveProperty( int relId, int propertyId )\n    {\n        RelationshipRecord relRecord = getRelationshipRecord( relId );\n        if ( relRecord == null )\n        {\n            relRecord = getRelationshipStore().getRecord( relId );\n        }\n        if ( !relRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Property remove on relationship[\" +\n                relId + \"] illegal since it has been deleted.\" );\n        }\n        PropertyRecord propRecord = getPropertyRecord( propertyId );\n        if ( propRecord == null )\n        {\n            propRecord = getPropertyStore().getRecord( propertyId );\n            addPropertyRecord( propRecord );\n        }\n        propRecord.setRelId( relId );\n        if ( propRecord.isLight() )\n        {\n            getPropertyStore().makeHeavy( propRecord );\n        }\n\n        propRecord.setInUse( false );\n        // TODO: update count on property index record\n        for ( DynamicRecord valueRecord : propRecord.getValueRecords() )\n        {\n            if ( valueRecord.inUse() )\n            {\n                valueRecord.setInUse( false, propRecord.getType().intValue() );\n            }\n        }\n        int prevProp = propRecord.getPrevProp();\n        int nextProp = propRecord.getNextProp();\n        if ( relRecord.getNextProp() == propertyId )\n        {\n            relRecord.setNextProp( nextProp );\n            // re-adding not a problem\n            addRelationshipRecord( relRecord );\n        }\n        if ( prevProp != Record.NO_PREVIOUS_PROPERTY.intValue() )\n        {\n            PropertyRecord prevPropRecord = getPropertyRecord( prevProp );\n            if ( prevPropRecord == null )\n            {\n                prevPropRecord = getPropertyStore().getLightRecord( prevProp );\n                addPropertyRecord( prevPropRecord );\n            }\n            prevPropRecord.setNextProp( nextProp );\n        }\n        if ( nextProp != Record.NO_NEXT_PROPERTY.intValue() )\n        {\n            PropertyRecord nextPropRecord = getPropertyRecord( nextProp );\n            if ( nextPropRecord == null )\n            {\n                nextPropRecord = getPropertyStore().getLightRecord( nextProp );\n                addPropertyRecord( nextPropRecord );\n            }\n            nextPropRecord.setPrevProp( prevProp );\n        }\n    }","id":15018,"modified_method":"void relRemoveProperty( int relId, int propertyId )\n    {\n        RelationshipRecord relRecord = getRelationshipRecord( relId );\n        if ( relRecord == null )\n        {\n            relRecord = getRelationshipStore().getRecord( relId );\n        }\n        if ( !relRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Property remove on relationship[\" +\n                relId + \"] illegal since it has been deleted.\" );\n        }\n        PropertyRecord propRecord = getPropertyRecord( propertyId );\n        if ( propRecord == null )\n        {\n            propRecord = getPropertyStore().getRecord( propertyId );\n            addPropertyRecord( propRecord );\n        }\n        if ( !propRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Unable to delete property[\" + \n                propertyId + \"] since it is already deleted.\" );\n        }\n        propRecord.setRelId( relId );\n        if ( propRecord.isLight() )\n        {\n            getPropertyStore().makeHeavy( propRecord );\n        }\n\n        propRecord.setInUse( false );\n        // TODO: update count on property index record\n        for ( DynamicRecord valueRecord : propRecord.getValueRecords() )\n        {\n            if ( valueRecord.inUse() )\n            {\n                valueRecord.setInUse( false, propRecord.getType().intValue() );\n            }\n        }\n        int prevProp = propRecord.getPrevProp();\n        int nextProp = propRecord.getNextProp();\n        if ( relRecord.getNextProp() == propertyId )\n        {\n            relRecord.setNextProp( nextProp );\n            // re-adding not a problem\n            addRelationshipRecord( relRecord );\n        }\n        if ( prevProp != Record.NO_PREVIOUS_PROPERTY.intValue() )\n        {\n            PropertyRecord prevPropRecord = getPropertyRecord( prevProp );\n            if ( prevPropRecord == null )\n            {\n                prevPropRecord = getPropertyStore().getLightRecord( prevProp );\n                addPropertyRecord( prevPropRecord );\n            }\n            assert prevPropRecord.inUse();\n            prevPropRecord.setNextProp( nextProp );\n        }\n        if ( nextProp != Record.NO_NEXT_PROPERTY.intValue() )\n        {\n            PropertyRecord nextPropRecord = getPropertyRecord( nextProp );\n            if ( nextPropRecord == null )\n            {\n                nextPropRecord = getPropertyStore().getLightRecord( nextProp );\n                addPropertyRecord( nextPropRecord );\n            }\n            assert nextPropRecord.inUse();\n            nextPropRecord.setPrevProp( prevProp );\n        }\n    }","commit_id":"960447830ef490c5aad41d88f11c2b19a14dbfe1","url":"https://github.com/neo4j/neo4j"},{"original_method":"void nodeChangeProperty( int nodeId, int propertyId, Object value )\n    {\n        NodeRecord nodeRecord = getNodeRecord( nodeId );\n        if ( nodeRecord == null )\n        {\n            nodeRecord = getNodeStore().getRecord( nodeId );\n        }\n        if ( !nodeRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Property change on node[\" +\n                nodeId + \"] illegal since it has been deleted.\" );\n        }\n        PropertyRecord propertyRecord = getPropertyRecord( propertyId );\n        if ( propertyRecord == null )\n        {\n            propertyRecord = getPropertyStore().getRecord( propertyId );\n            addPropertyRecord( propertyRecord );\n        }\n        propertyRecord.setNodeId( nodeId );\n        if ( propertyRecord.isLight() )\n        {\n            getPropertyStore().makeHeavy( propertyRecord );\n        }\n        if ( propertyRecord.getType() == PropertyType.STRING )\n        {\n            for ( DynamicRecord record : propertyRecord.getValueRecords() )\n            {\n                if ( record.inUse() )\n                {\n                    record.setInUse( false, PropertyType.STRING.intValue() );\n                }\n            }\n        }\n        else if ( propertyRecord.getType() == PropertyType.ARRAY )\n        {\n            for ( DynamicRecord record : propertyRecord.getValueRecords() )\n            {\n                if ( record.inUse() )\n                {\n                    record.setInUse( false, PropertyType.ARRAY.intValue() );\n                }\n            }\n        }\n        getPropertyStore().encodeValue( propertyRecord, value );\n        addPropertyRecord( propertyRecord );\n    }","id":15019,"modified_method":"void nodeChangeProperty( int nodeId, int propertyId, Object value )\n    {\n        NodeRecord nodeRecord = getNodeRecord( nodeId );\n        if ( nodeRecord == null )\n        {\n            nodeRecord = getNodeStore().getRecord( nodeId );\n        }\n        if ( !nodeRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Property change on node[\" +\n                nodeId + \"] illegal since it has been deleted.\" );\n        }\n        PropertyRecord propertyRecord = getPropertyRecord( propertyId );\n        if ( propertyRecord == null )\n        {\n            propertyRecord = getPropertyStore().getRecord( propertyId );\n            addPropertyRecord( propertyRecord );\n        }\n        if ( !propertyRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Unable to change property[\" + \n                propertyId + \"] since it is deleted.\" );\n        }\n        propertyRecord.setNodeId( nodeId );\n        if ( propertyRecord.isLight() )\n        {\n            getPropertyStore().makeHeavy( propertyRecord );\n        }\n        if ( propertyRecord.getType() == PropertyType.STRING )\n        {\n            for ( DynamicRecord record : propertyRecord.getValueRecords() )\n            {\n                if ( record.inUse() )\n                {\n                    record.setInUse( false, PropertyType.STRING.intValue() );\n                }\n            }\n        }\n        else if ( propertyRecord.getType() == PropertyType.ARRAY )\n        {\n            for ( DynamicRecord record : propertyRecord.getValueRecords() )\n            {\n                if ( record.inUse() )\n                {\n                    record.setInUse( false, PropertyType.ARRAY.intValue() );\n                }\n            }\n        }\n        getPropertyStore().encodeValue( propertyRecord, value );\n        addPropertyRecord( propertyRecord );\n    }","commit_id":"960447830ef490c5aad41d88f11c2b19a14dbfe1","url":"https://github.com/neo4j/neo4j"},{"original_method":"void nodeRemoveProperty( int nodeId, int propertyId )\n    {\n        NodeRecord nodeRecord = getNodeRecord( nodeId );\n        if ( nodeRecord == null )\n        {\n            nodeRecord = getNodeStore().getRecord( nodeId );\n        }\n        if ( !nodeRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Property remove on node[\" +\n                nodeId + \"] illegal since it has been deleted.\" );\n        }\n        PropertyRecord propRecord = getPropertyRecord( propertyId );\n        if ( propRecord == null )\n        {\n            propRecord = getPropertyStore().getRecord( propertyId );\n            addPropertyRecord( propRecord );\n        }\n        propRecord.setNodeId( nodeId );\n        if ( propRecord.isLight() )\n        {\n            getPropertyStore().makeHeavy( propRecord );\n        }\n\n        propRecord.setInUse( false );\n        // TODO: update count on property index record\n        for ( DynamicRecord valueRecord : propRecord.getValueRecords() )\n        {\n            if ( valueRecord.inUse() )\n            {\n                valueRecord.setInUse( false, propRecord.getType().intValue() );\n            }\n        }\n        int prevProp = propRecord.getPrevProp();\n        int nextProp = propRecord.getNextProp();\n        if ( nodeRecord.getNextProp() == propertyId )\n        {\n            nodeRecord.setNextProp( nextProp );\n            // re-adding not a problem\n            addNodeRecord( nodeRecord );\n        }\n        if ( prevProp != Record.NO_PREVIOUS_PROPERTY.intValue() )\n        {\n            PropertyRecord prevPropRecord = getPropertyRecord( prevProp );\n            if ( prevPropRecord == null )\n            {\n                prevPropRecord = getPropertyStore().getLightRecord( prevProp );\n            }\n            prevPropRecord.setNextProp( nextProp );\n            addPropertyRecord( prevPropRecord );\n        }\n        if ( nextProp != Record.NO_NEXT_PROPERTY.intValue() )\n        {\n            PropertyRecord nextPropRecord = getPropertyRecord( nextProp );\n            if ( nextPropRecord == null )\n            {\n                nextPropRecord = getPropertyStore().getLightRecord( nextProp );\n            }\n            nextPropRecord.setPrevProp( prevProp );\n            addPropertyRecord( nextPropRecord );\n        }\n    }","id":15020,"modified_method":"void nodeRemoveProperty( int nodeId, int propertyId )\n    {\n        NodeRecord nodeRecord = getNodeRecord( nodeId );\n        if ( nodeRecord == null )\n        {\n            nodeRecord = getNodeStore().getRecord( nodeId );\n        }\n        if ( !nodeRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Property remove on node[\" +\n                nodeId + \"] illegal since it has been deleted.\" );\n        }\n        PropertyRecord propRecord = getPropertyRecord( propertyId );\n        if ( propRecord == null )\n        {\n            propRecord = getPropertyStore().getRecord( propertyId );\n            addPropertyRecord( propRecord );\n        }\n        if ( !propRecord.inUse() )\n        {\n            throw new IllegalStateException( \"Unable to delete property[\" + \n                propertyId + \"] since it is already deleted.\" );\n        }\n        propRecord.setNodeId( nodeId );\n        if ( propRecord.isLight() )\n        {\n            getPropertyStore().makeHeavy( propRecord );\n        }\n\n        propRecord.setInUse( false );\n        // TODO: update count on property index record\n        for ( DynamicRecord valueRecord : propRecord.getValueRecords() )\n        {\n            if ( valueRecord.inUse() )\n            {\n                valueRecord.setInUse( false, propRecord.getType().intValue() );\n            }\n        }\n        int prevProp = propRecord.getPrevProp();\n        int nextProp = propRecord.getNextProp();\n        if ( nodeRecord.getNextProp() == propertyId )\n        {\n            nodeRecord.setNextProp( nextProp );\n            // re-adding not a problem\n            addNodeRecord( nodeRecord );\n        }\n        if ( prevProp != Record.NO_PREVIOUS_PROPERTY.intValue() )\n        {\n            PropertyRecord prevPropRecord = getPropertyRecord( prevProp );\n            if ( prevPropRecord == null )\n            {\n                prevPropRecord = getPropertyStore().getLightRecord( prevProp );\n                addPropertyRecord( prevPropRecord );\n            }\n            assert prevPropRecord.inUse();\n            prevPropRecord.setNextProp( nextProp );\n        }\n        if ( nextProp != Record.NO_NEXT_PROPERTY.intValue() )\n        {\n            PropertyRecord nextPropRecord = getPropertyRecord( nextProp );\n            if ( nextPropRecord == null )\n            {\n                nextPropRecord = getPropertyStore().getLightRecord( nextProp );\n                addPropertyRecord( nextPropRecord );\n            }\n            assert nextPropRecord.inUse();\n            nextPropRecord.setPrevProp( prevProp );\n        }\n    }","commit_id":"960447830ef490c5aad41d88f11c2b19a14dbfe1","url":"https://github.com/neo4j/neo4j"},{"original_method":"/** \n      * Check if this resource is writeable by the user.\n      * @param cms The CmsObject\n      * @param res The resource to be checked.\n      * @return True or false.\n      * @exception CmsException if something goes wrong.\n      */\n     private boolean checkWriteable(A_CmsObject cms, CmsResource res)\n     throws CmsException {\n         boolean access=false;\n         int accessflags=res.getAccessFlags();\n         \n         if ( ((accessflags & C_ACCESS_PUBLIC_WRITE) > 0) ||\n\t\t\t  (cms.getRequestContext().isAdmin()) ||\n              (cms.readOwner(res).equals(cms.getRequestContext().currentUser()) && (accessflags & C_ACCESS_OWNER_WRITE) > 0) ||\n              (cms.readGroup(res).equals(cms.getRequestContext().currentGroup()) && (accessflags & C_ACCESS_GROUP_WRITE) > 0)) {    \n              access=true;\n         }\n               \n         return access;\n     }","id":15021,"modified_method":"/** \n      * Check if this resource should is writeable.\n      * @param cms The CmsObject\n      * @param res The resource to be checked.\n      * @return True or false.\n      * @exception CmsException if something goes wrong.\n      */\n     private boolean checkWriteable(A_CmsObject cms, CmsResource res)\n\t\t throws CmsException {\n         boolean access=false;\n         int accessflags=res.getAccessFlags();\n         \n         boolean groupAccess = false;\n         Enumeration allGroups = cms.getGroupsOfUser(cms.getRequestContext().currentUser().getName()).elements();\n         while((!groupAccess) && allGroups.hasMoreElements()) {\n             groupAccess = cms.readGroup(res).equals((A_CmsGroup)allGroups.nextElement());\n         }\n         \n         if ( ((accessflags & C_ACCESS_PUBLIC_WRITE) > 0) ||\n\t\t\t  (cms.getRequestContext().isAdmin()) ||\n              (cms.readOwner(res).equals(cms.getRequestContext().currentUser()) && (accessflags & C_ACCESS_OWNER_WRITE) > 0) ||\n              ( groupAccess && (accessflags & C_ACCESS_GROUP_WRITE) > 0)) {    \n            \n             access=true;\n         }\n               \n         return access;\n     }","commit_id":"e648fa5d81ab842d7da54916c815f2ca5c9996c1","url":"https://github.com/alkacon/opencms-core"},{"original_method":"public String merge(String siteId, Element root, String archivePath, String fromSiteId, Map attachmentNames, Map userIdTrans, Set userListAllowImport)\n\t{\n\t\tStringBuffer results = new StringBuffer();\n\t\tif (siteId != null && siteId.trim().length() > 0)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tNodeList allChildrenNodes = root.getChildNodes();\n\t\t\t\tint length = allChildrenNodes.getLength();\n\t\t\t\tfor (int i = 0; i < length; i++)\n\t\t\t\t{\n\t\t\t\t\tNode siteNode = allChildrenNodes.item(i);\n\t\t\t\t\tif (siteNode.getNodeType() == Node.ELEMENT_NODE)\n\t\t\t\t\t{\n\t\t\t\t\t\tElement siteElement = (Element) siteNode;\n\t\t\t\t\t\tif (siteElement.getTagName().equals(MESSAGEFORUM))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tNodeList allForumNodes = siteElement.getChildNodes();\n\t\t\t\t\t\t\tint lengthForum = allForumNodes.getLength();\n\t\t\t\t\t\t\tfor (int j = 0; j < lengthForum; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tNode child1 = allForumNodes.item(j);\n\t\t\t\t\t\t\t\tif (child1.getNodeType() == Node.ELEMENT_NODE)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tElement forumElement = (Element) child1;\n\t\t\t\t\t\t\t\t\tif (forumElement.getTagName().equals(DISCUSSION_FORUM))\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tDiscussionForum dfForum = forumManager.createDiscussionForum();\n\n\t\t\t\t\t\t\t\t\t\tString forumTitle = forumElement.getAttribute(DISCUSSION_FORUM_TITLE);\n\t\t\t\t\t\t\t\t\t\tdfForum.setTitle(forumTitle);\n\n\t\t\t\t\t\t\t\t\t\tString forumDraft = forumElement.getAttribute(DRAFT);\n\t\t\t\t\t\t\t\t\t\tif(forumDraft != null && forumDraft.length() >0)\n\t\t\t\t\t\t\t\t\t\t\tdfForum.setDraft(new Boolean(forumDraft));\n\n\t\t\t\t\t\t\t\t\t\tString forumLocked = forumElement.getAttribute(LOCKED);\n\t\t\t\t\t\t\t\t\t\tif(forumLocked != null && forumLocked.length() >0)\n\t\t\t\t\t\t\t\t\t\t\tdfForum.setLocked(new Boolean(forumLocked));\n\n\t\t\t\t\t\t\t\t\t\tString forumDesc = forumElement.getAttribute(DISCUSSION_FORUM_DESC);\n\t\t\t\t\t\t\t\t\t\tString trimBody = null;\n\t\t\t\t\t\t\t\t\t\tif(forumDesc != null && forumDesc.length() >0)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttrimBody = trimToNull(forumDesc);\n\t\t\t\t\t\t\t\t\t\t\tif (trimBody != null && trimBody.length() >0)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tbyte[] decoded = Base64.decode(trimBody);\n\t\t\t\t\t\t\t\t\t\t\t\ttrimBody = new String(decoded, \"UTF-8\");\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif(trimBody != null)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tdfForum.setExtendedDescription(trimBody);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tString forumShortDesc = forumElement.getAttribute(DISCUSSION_FORUM_SHORT_DESC);\n\t\t\t\t\t\t\t\t\t\tString trimSummary = null;\n\t\t\t\t\t\t\t\t\t\tif(forumShortDesc != null && forumShortDesc.length() >0)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttrimSummary = trimToNull(forumShortDesc);\n\t\t\t\t\t\t\t\t\t\t\tif (trimSummary != null && trimSummary.length() >0)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tbyte[] decoded = Base64.decode(trimSummary);\n\t\t\t\t\t\t\t\t\t\t\t\ttrimSummary = new String(decoded, \"UTF-8\");\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif(trimSummary != null)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tdfForum.setShortDescription(trimSummary);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tNodeList forumDetailNodes = forumElement.getChildNodes();\n\t\t\t\t\t\t\t\t\t\tboolean hasTopic = false;\n\t\t\t\t\t\t\t\t\t\tfor(int k=0; k<forumDetailNodes.getLength(); k++)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tNode forumChild = forumDetailNodes.item(k);\n\t\t\t\t\t\t\t\t\t\t\tif(forumChild.getNodeType() == Node.ELEMENT_NODE)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tElement forumChildElement = (Element) forumChild;\n\n\t\t\t\t\t\t\t\t\t\t\t\tif (forumChildElement.getTagName().equals(ATTACHMENT)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tString oldAttachId = forumChildElement.getAttribute(ATTACH_ID);\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (oldAttachId != null && oldAttachId.trim().length() > 0) {\t                \t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tString oldUrl = oldAttachId;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (oldUrl.startsWith(\"/content/attachment/\"))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString newUrl = (String) attachmentNames.get(oldUrl);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (newUrl != null)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toldAttachId = Validator.escapeQuestionMark(newUrl);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if (oldUrl.startsWith(\"/content/group/\" + fromSiteId + \"/\"))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString newUrl = \"/content/group/\" + siteId\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ oldUrl.substring(15 + fromSiteId.length());\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toldAttachId = Validator.escapeQuestionMark(newUrl);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tAttachment newAttachment = copyAttachment(oldAttachId);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (newAttachment != null)\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdfForum.addAttachment(newAttachment);\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t// PERMISSIONS\n\t\t\t\t\t\t\t\t\t\t\t\telse if(forumChildElement.getTagName().equals(PERMISSIONS)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tSet membershipItemSet = getMembershipItemSetFromPermissionElement(forumChildElement);\n\t\t\t\t\t\t\t\t\t\t\t\t\tList roleIdList = getSiteRoleIds(siteId);\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (membershipItemSet != null && membershipItemSet.size() > 0 && roleIdList != null && !roleIdList.isEmpty()) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tIterator membershipIter = membershipItemSet.iterator();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (membershipIter.hasNext()) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDBMembershipItem oldItem = (DBMembershipItem)membershipIter.next();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(roleIdList.contains(oldItem.getName())) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDBMembershipItem newItem = getMembershipItemCopy(oldItem);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (newItem != null) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpermissionManager.saveDBMembershipItem(newItem);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdfForum.addMembershipItem(newItem);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\telse if(forumChildElement.getTagName().equals(DISCUSSION_TOPIC))\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tDiscussionTopic dfTopic = forumManager.createDiscussionForumTopic(dfForum);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tString topicTitle = forumChildElement.getAttribute(TOPIC_TITLE);\n\t\t\t\t\t\t\t\t\t\t\t\t\tdfTopic.setTitle(topicTitle);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tString topicDraft = forumChildElement.getAttribute(DRAFT);\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(topicDraft != null && topicDraft.length() >0)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdfTopic.setDraft(new Boolean(topicDraft));\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tString topicLocked = forumChildElement.getAttribute(LOCKED);\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(topicLocked != null && topicLocked.length() >0)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdfTopic.setLocked(new Boolean(topicLocked));\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tNodeList topicPropertiesNodes = forumChildElement.getChildNodes();\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor(int m=0; m<topicPropertiesNodes.getLength(); m++)\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tNode propertiesNode = topicPropertiesNodes.item(m);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(propertiesNode.getNodeType() == Node.ELEMENT_NODE)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tElement propertiesElement = (Element)propertiesNode;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(propertiesElement.getTagName().equals(PROPERTIES))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNodeList propertyList = propertiesElement.getChildNodes();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor(int n=0; n<propertyList.getLength(); n++)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNode propertyNode = propertyList.item(n);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(propertyNode.getNodeType() == Node.ELEMENT_NODE)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tElement propertyElement = (Element)propertyNode;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(propertyElement.getTagName().equals(PROPERTY))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(TOPIC_SHORT_DESC.equals(propertyElement.getAttribute(NAME)))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(BASE64.equals(propertyElement.getAttribute(ENCODE)))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString topicDesc = propertyElement.getAttribute(VALUE);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString trimDesc = null;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(topicDesc != null && topicDesc.length() >0)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrimDesc = trimToNull(topicDesc);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (trimDesc != null && trimDesc.length() >0)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbyte[] decoded = Base64.decode(trimDesc);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrimDesc = new String(decoded, \"UTF-8\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(trimDesc != null)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdfTopic.setShortDescription(trimDesc);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdfTopic.setShortDescription(propertyElement.getAttribute(VALUE));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(TOPIC_LONG_DESC.equals(propertyElement.getAttribute(NAME)))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(BASE64.equals(propertyElement.getAttribute(ENCODE)))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString topicDesc = propertyElement.getAttribute(VALUE);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString trimDesc = null;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(topicDesc != null && topicDesc.length() >0)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrimDesc = trimToNull(topicDesc);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (trimDesc != null && trimDesc.length() >0)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbyte[] decoded = Base64.decode(trimDesc);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrimDesc = new String(decoded, \"UTF-8\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(trimDesc != null)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdfTopic.setExtendedDescription(trimDesc);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdfTopic.setExtendedDescription(propertyElement.getAttribute(VALUE));                  \t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if (propertiesElement.getTagName().equals(ATTACHMENT))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString oldAttachId = propertiesElement.getAttribute(ATTACH_ID);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (oldAttachId != null && oldAttachId.trim().length() > 0) {\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString oldUrl = oldAttachId;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (oldUrl.startsWith(\"/content/attachment/\"))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString newUrl = (String) attachmentNames.get(oldUrl);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (newUrl != null)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toldAttachId = Validator.escapeQuestionMark(newUrl);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if (oldUrl.startsWith(\"/content/group/\" + fromSiteId + \"/\"))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString newUrl = \"/content/group/\" + siteId\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ oldUrl.substring(15 + fromSiteId.length());\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toldAttachId = Validator.escapeQuestionMark(newUrl);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAttachment newAttachment = copyAttachment(oldAttachId);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (newAttachment != null)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdfTopic.addAttachment(newAttachment);\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if (propertiesElement.getTagName().equals(PERMISSIONS)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSet membershipItemSet = getMembershipItemSetFromPermissionElement(propertiesElement);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tList roleIdList = getSiteRoleIds(siteId);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (membershipItemSet != null && membershipItemSet.size() > 0 && roleIdList != null && !roleIdList.isEmpty()) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tIterator membershipIter = membershipItemSet.iterator();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (membershipIter.hasNext()) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDBMembershipItem oldItem = (DBMembershipItem)membershipIter.next();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(roleIdList.contains(oldItem.getName())) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDBMembershipItem newItem = getMembershipItemCopy(oldItem);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (newItem != null) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpermissionManager.saveDBMembershipItem(newItem);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdfTopic.addMembershipItem(newItem);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}                  \t\t\t\t\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(!hasTopic)\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tArea area = areaManager.getDiscusionArea();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdfForum.setArea(area);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdfForum.setDraft(new Boolean(\"false\"));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tforumManager.saveDiscussionForum(dfForum, false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\thasTopic = true;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tforumManager.saveDiscussionForumTopic(dfTopic);\n\t\t\t\t\t\t\t\t\t\t\t\t}                  \t\t\t\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif(!hasTopic)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tArea area = areaManager.getDiscusionArea();\n\t\t\t\t\t\t\t\t\t\t\tdfForum.setArea(area);\n\t\t\t\t\t\t\t\t\t\t\tdfForum.setDraft(new Boolean(\"false\"));\n\t\t\t\t\t\t\t\t\t\t\tforumManager.saveDiscussionForum(dfForum, false);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e)\n\t\t\t{     \n\t\t\t\tresults.append(\"merging \" + getLabel() + \" failed.\\n\");\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\n\t\t}\n\t\treturn null;\n\t}","id":15022,"modified_method":"public String merge(String siteId, Element root, String archivePath, String fromSiteId, Map attachmentNames, Map userIdTrans, Set userListAllowImport)\n\t{\n\t\tStringBuffer results = new StringBuffer();\n\t\tif (siteId != null && siteId.trim().length() > 0)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tNodeList allChildrenNodes = root.getChildNodes();\n\t\t\t\tint length = allChildrenNodes.getLength();\n\t\t\t\tfor (int i = 0; i < length; i++)\n\t\t\t\t{\n\t\t\t\t\tNode siteNode = allChildrenNodes.item(i);\n\t\t\t\t\tif (siteNode.getNodeType() == Node.ELEMENT_NODE)\n\t\t\t\t\t{\n\t\t\t\t\t\tElement siteElement = (Element) siteNode;\n\t\t\t\t\t\tif (siteElement.getTagName().equals(MESSAGEFORUM))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tNodeList allForumNodes = siteElement.getChildNodes();\n\t\t\t\t\t\t\tint lengthForum = allForumNodes.getLength();\n\t\t\t\t\t\t\tfor (int j = 0; j < lengthForum; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tNode child1 = allForumNodes.item(j);\n\t\t\t\t\t\t\t\tif (child1.getNodeType() == Node.ELEMENT_NODE)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tElement forumElement = (Element) child1;\n\t\t\t\t\t\t\t\t\tif (forumElement.getTagName().equals(DISCUSSION_FORUM))\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tDiscussionForum dfForum = forumManager.createDiscussionForum();\n\n\t\t\t\t\t\t\t\t\t\tString forumTitle = forumElement.getAttribute(DISCUSSION_FORUM_TITLE);\n\t\t\t\t\t\t\t\t\t\tdfForum.setTitle(forumTitle);\n\n\t\t\t\t\t\t\t\t\t\tString forumDraft = forumElement.getAttribute(DRAFT);\n\t\t\t\t\t\t\t\t\t\tif(forumDraft != null && forumDraft.length() >0)\n\t\t\t\t\t\t\t\t\t\t\tdfForum.setDraft(new Boolean(forumDraft));\n\n\t\t\t\t\t\t\t\t\t\tString forumLocked = forumElement.getAttribute(LOCKED);\n\t\t\t\t\t\t\t\t\t\tif(forumLocked != null && forumLocked.length() >0)\n\t\t\t\t\t\t\t\t\t\t\tdfForum.setLocked(new Boolean(forumLocked));\n\n\t\t\t\t\t\t\t\t\t\tString forumDesc = forumElement.getAttribute(DISCUSSION_FORUM_DESC);\n\t\t\t\t\t\t\t\t\t\tString trimBody = null;\n\t\t\t\t\t\t\t\t\t\tif(forumDesc != null && forumDesc.length() >0)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttrimBody = trimToNull(forumDesc);\n\t\t\t\t\t\t\t\t\t\t\tif (trimBody != null && trimBody.length() >0)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tbyte[] decoded = Base64.decode(trimBody);\n\t\t\t\t\t\t\t\t\t\t\t\ttrimBody = new String(decoded, \"UTF-8\");\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif(trimBody != null)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tdfForum.setExtendedDescription(trimBody);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tString forumShortDesc = forumElement.getAttribute(DISCUSSION_FORUM_SHORT_DESC);\n\t\t\t\t\t\t\t\t\t\tString trimSummary = null;\n\t\t\t\t\t\t\t\t\t\tif(forumShortDesc != null && forumShortDesc.length() >0)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttrimSummary = trimToNull(forumShortDesc);\n\t\t\t\t\t\t\t\t\t\t\tif (trimSummary != null && trimSummary.length() >0)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tbyte[] decoded = Base64.decode(trimSummary);\n\t\t\t\t\t\t\t\t\t\t\t\ttrimSummary = new String(decoded, \"UTF-8\");\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif(trimSummary != null)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tdfForum.setShortDescription(trimSummary);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tNodeList forumDetailNodes = forumElement.getChildNodes();\n\t\t\t\t\t\t\t\t\t\tboolean hasTopic = false;\n\t\t\t\t\t\t\t\t\t\tfor(int k=0; k<forumDetailNodes.getLength(); k++)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tNode forumChild = forumDetailNodes.item(k);\n\t\t\t\t\t\t\t\t\t\t\tif(forumChild.getNodeType() == Node.ELEMENT_NODE)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tElement forumChildElement = (Element) forumChild;\n\n\t\t\t\t\t\t\t\t\t\t\t\tif (forumChildElement.getTagName().equals(ATTACHMENT)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tString oldAttachId = forumChildElement.getAttribute(ATTACH_ID);\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (oldAttachId != null && oldAttachId.trim().length() > 0) {\t                \t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tString oldUrl = oldAttachId;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (oldUrl.startsWith(\"/content/attachment/\"))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString newUrl = (String) attachmentNames.get(oldUrl);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (newUrl != null)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toldAttachId = Validator.escapeQuestionMark(newUrl);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if (oldUrl.startsWith(\"/content/group/\" + fromSiteId + \"/\"))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString newUrl = \"/content/group/\" + siteId\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ oldUrl.substring(15 + fromSiteId.length());\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toldAttachId = Validator.escapeQuestionMark(newUrl);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tAttachment newAttachment = copyAttachment(oldAttachId);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (newAttachment != null)\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdfForum.addAttachment(newAttachment);\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t// PERMISSIONS\n\t\t\t\t\t\t\t\t\t\t\t\telse if(forumChildElement.getTagName().equals(PERMISSIONS)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tSet membershipItemSet = getMembershipItemSetFromPermissionElement(forumChildElement);\n\t\t\t\t\t\t\t\t\t\t\t\t\tList roleIdList = getSiteRoleIds(siteId);\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (membershipItemSet != null && membershipItemSet.size() > 0 && roleIdList != null && !roleIdList.isEmpty()) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tIterator membershipIter = membershipItemSet.iterator();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (membershipIter.hasNext()) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDBMembershipItem oldItem = (DBMembershipItem)membershipIter.next();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(roleIdList.contains(oldItem.getName())) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDBMembershipItem newItem = getMembershipItemCopy(oldItem);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (newItem != null) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpermissionManager.saveDBMembershipItem(newItem);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdfForum.addMembershipItem(newItem);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\telse if(forumChildElement.getTagName().equals(DISCUSSION_TOPIC))\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tDiscussionTopic dfTopic = forumManager.createDiscussionForumTopic(dfForum);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tString topicTitle = forumChildElement.getAttribute(TOPIC_TITLE);\n\t\t\t\t\t\t\t\t\t\t\t\t\tdfTopic.setTitle(topicTitle);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tString topicDraft = forumChildElement.getAttribute(DRAFT);\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(topicDraft != null && topicDraft.length() >0)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdfTopic.setDraft(new Boolean(topicDraft));\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tString topicLocked = forumChildElement.getAttribute(LOCKED);\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(topicLocked != null && topicLocked.length() >0)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdfTopic.setLocked(new Boolean(topicLocked));\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tNodeList topicPropertiesNodes = forumChildElement.getChildNodes();\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor(int m=0; m<topicPropertiesNodes.getLength(); m++)\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tNode propertiesNode = topicPropertiesNodes.item(m);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(propertiesNode.getNodeType() == Node.ELEMENT_NODE)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tElement propertiesElement = (Element)propertiesNode;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(propertiesElement.getTagName().equals(PROPERTIES))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNodeList propertyList = propertiesElement.getChildNodes();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor(int n=0; n<propertyList.getLength(); n++)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNode propertyNode = propertyList.item(n);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(propertyNode.getNodeType() == Node.ELEMENT_NODE)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tElement propertyElement = (Element)propertyNode;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(propertyElement.getTagName().equals(PROPERTY))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(TOPIC_SHORT_DESC.equals(propertyElement.getAttribute(NAME)))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(BASE64.equals(propertyElement.getAttribute(ENCODE)))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString topicDesc = propertyElement.getAttribute(VALUE);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString trimDesc = null;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(topicDesc != null && topicDesc.length() >0)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrimDesc = trimToNull(topicDesc);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (trimDesc != null && trimDesc.length() >0)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbyte[] decoded = Base64.decode(trimDesc);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrimDesc = new String(decoded, \"UTF-8\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(trimDesc != null)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdfTopic.setShortDescription(trimDesc);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdfTopic.setShortDescription(propertyElement.getAttribute(VALUE));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(TOPIC_LONG_DESC.equals(propertyElement.getAttribute(NAME)))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(BASE64.equals(propertyElement.getAttribute(ENCODE)))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString topicDesc = propertyElement.getAttribute(VALUE);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString trimDesc = null;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(topicDesc != null && topicDesc.length() >0)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrimDesc = trimToNull(topicDesc);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (trimDesc != null && trimDesc.length() >0)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbyte[] decoded = Base64.decode(trimDesc);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrimDesc = new String(decoded, \"UTF-8\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(trimDesc != null)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdfTopic.setExtendedDescription(trimDesc);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdfTopic.setExtendedDescription(propertyElement.getAttribute(VALUE));                  \t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if (propertiesElement.getTagName().equals(ATTACHMENT))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString oldAttachId = propertiesElement.getAttribute(ATTACH_ID);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (oldAttachId != null && oldAttachId.trim().length() > 0) {\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString oldUrl = oldAttachId;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (oldUrl.startsWith(\"/content/attachment/\"))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString newUrl = (String) attachmentNames.get(oldUrl);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (newUrl != null)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toldAttachId = Validator.escapeQuestionMark(newUrl);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if (oldUrl.startsWith(\"/content/group/\" + fromSiteId + \"/\"))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString newUrl = \"/content/group/\" + siteId\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ oldUrl.substring(15 + fromSiteId.length());\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toldAttachId = Validator.escapeQuestionMark(newUrl);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAttachment newAttachment = copyAttachment(oldAttachId);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (newAttachment != null)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdfTopic.addAttachment(newAttachment);\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if (propertiesElement.getTagName().equals(PERMISSIONS)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSet membershipItemSet = getMembershipItemSetFromPermissionElement(propertiesElement);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tList roleIdList = getSiteRoleIds(siteId);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (membershipItemSet != null && membershipItemSet.size() > 0 && roleIdList != null && !roleIdList.isEmpty()) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tIterator membershipIter = membershipItemSet.iterator();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (membershipIter.hasNext()) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDBMembershipItem oldItem = (DBMembershipItem)membershipIter.next();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(roleIdList.contains(oldItem.getName())) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDBMembershipItem newItem = getMembershipItemCopy(oldItem);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (newItem != null) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpermissionManager.saveDBMembershipItem(newItem);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdfTopic.addMembershipItem(newItem);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}                  \t\t\t\t\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(!hasTopic)\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tArea area = areaManager.getDiscusionArea();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdfForum.setArea(area);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (\"false\".equalsIgnoreCase(ServerConfigurationService.getString(\"import.importAsDraft\")))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tforumManager.saveDiscussionForum(dfForum, dfForum.getDraft().booleanValue());\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdfForum.setDraft(new Boolean(\"true\"));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tforumManager.saveDiscussionForum(dfForum, true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\thasTopic = true;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tforumManager.saveDiscussionForumTopic(dfTopic, dfForum.getDraft().booleanValue());\n\t\t\t\t\t\t\t\t\t\t\t\t}                  \t\t\t\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif(!hasTopic)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tArea area = areaManager.getDiscusionArea();\n\t\t\t\t\t\t\t\t\t\t\tdfForum.setArea(area);\n\t\t\t\t\t\t\t\t\t\t\tif (\"false\".equalsIgnoreCase(ServerConfigurationService.getString(\"import.importAsDraft\")))\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tforumManager.saveDiscussionForum(dfForum, dfForum.getDraft().booleanValue());\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tdfForum.setDraft(new Boolean(\"true\"));\n\t\t\t\t\t\t\t\t\t\t\t\tforumManager.saveDiscussionForum(dfForum, true);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e)\n\t\t\t{     \n\t\t\t\tresults.append(\"merging \" + getLabel() + \" failed.\\n\");\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\n\t\t}\n\t\treturn null;\n\t}","commit_id":"868a811779476ffb8810d06002d40c0b12c07f36","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public void transferCopyEntities(String fromContext, String toContext, List ids) {\n\t\ttry \n\t\t{\n\t\t\tLOG.debug(\"transfer copy mc items by transferCopyEntities\");\n\n\t\t\tList fromDfList = dfManager.getDiscussionForumsByContextId(fromContext);\n\n\t\t\tif (fromDfList != null && !fromDfList.isEmpty()) {\n\t\t\t\tfor (int currForum = 0; currForum < fromDfList.size(); currForum++) {\n\t\t\t\t\tDiscussionForum fromForum = (DiscussionForum)fromDfList.get(currForum);\n\t\t\t\t\tLong fromForumId = fromForum.getId();\n\n\t\t\t\t\tDiscussionForum newForum = forumManager.createDiscussionForum();\n\t\t\t\t\tnewForum.setTitle(fromForum.getTitle());\n\n\t\t\t\t\tif (fromForum.getShortDescription() != null && fromForum.getShortDescription().length() > 0) \n\t\t\t\t\t\tnewForum.setShortDescription(fromForum.getShortDescription());\n\n\t\t\t\t\tif (fromForum.getExtendedDescription() != null && fromForum.getExtendedDescription().length() > 0) \n\t\t\t\t\t\tnewForum.setExtendedDescription(fromForum.getExtendedDescription());\n\n\t\t\t\t\tnewForum.setDraft(fromForum.getDraft());\n\t\t\t\t\tnewForum.setLocked(fromForum.getLocked());\n\n\t\t\t\t\t// get permissions for \"from\" site\n\t\t\t\t\tSet membershipItemSet = fromForum.getMembershipItemSet();\n\t\t\t\t\tList roleIdList = getSiteRoleIds(toContext);\n\n\t\t\t\t\tif (membershipItemSet != null && !membershipItemSet.isEmpty() && roleIdList != null && !roleIdList.isEmpty()) {\n\t\t\t\t\t\tIterator membershipIter = membershipItemSet.iterator();\n\t\t\t\t\t\twhile (membershipIter.hasNext()) {\n\t\t\t\t\t\t\tDBMembershipItem oldItem = (DBMembershipItem)membershipIter.next();\n\t\t\t\t\t\t\tif(roleIdList.contains(oldItem.getName())) {\n\n\t\t\t\t\t\t\t\tDBMembershipItem newItem = getMembershipItemCopy(oldItem);\n\t\t\t\t\t\t\t\tif (newItem != null) {\n\t\t\t\t\t\t\t\t\tpermissionManager.saveDBMembershipItem(newItem);\n\t\t\t\t\t\t\t\t\tnewForum.addMembershipItem(newItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// get/add the forum's attachments\n\t\t\t\t\tList fromAttach = forumManager.getForumById(true, fromForumId).getAttachments();\n\t\t\t\t\tif (fromAttach != null && !fromAttach.isEmpty()) {\n\t\t\t\t\t\tfor (int currAttach=0; currAttach < fromAttach.size(); currAttach++) {                   \t\t\t\n\t\t\t\t\t\t\tAttachment thisAttach = (Attachment)fromAttach.get(currAttach);\n\t\t\t\t\t\t\tAttachment newAttachment = copyAttachment(thisAttach.getAttachmentId());\n\t\t\t\t\t\t\tif (newForum != null && newAttachment != null)\n\t\t\t\t\t\t\t\tnewForum.addAttachment(newAttachment);\n\t\t\t\t\t\t}\n\t\t\t\t\t}       \t\t\n\n\t\t\t\t\t// save the forum\n\t\t\t\t\tArea area = areaManager.getDiscusionArea();\n\t\t\t\t\tnewForum.setArea(area);\n\t\t\t\t\tnewForum.setDraft(new Boolean(\"false\"));\n\t\t\t\t\tforumManager.saveDiscussionForum(newForum, false);\n\n\t\t\t\t\t// get/add the topics\n\t\t\t\t\tList topicList = dfManager.getTopicsByIdWithMessagesAndAttachments(fromForumId);\n\t\t\t\t\tif (topicList != null && !topicList.isEmpty()) {\n\t\t\t\t\t\tfor (int currTopic = 0; currTopic < topicList.size(); currTopic++) {\n\t\t\t\t\t\t\tDiscussionTopic fromTopic = (DiscussionTopic)topicList.get(currTopic);\n\t\t\t\t\t\t\tLong fromTopicId = fromTopic.getId();\n\n\t\t\t\t\t\t\tDiscussionTopic newTopic = forumManager.createDiscussionForumTopic(newForum);\n\n\t\t\t\t\t\t\tnewTopic.setTitle(fromTopic.getTitle());\n\t\t\t\t\t\t\tif (fromTopic.getShortDescription() != null && fromTopic.getShortDescription().length() > 0)\n\t\t\t\t\t\t\t\tnewTopic.setShortDescription(fromTopic.getShortDescription());\n\t\t\t\t\t\t\tif (fromTopic.getExtendedDescription() != null && fromTopic.getExtendedDescription().length() > 0)\n\t\t\t\t\t\t\t\tnewTopic.setExtendedDescription(fromTopic.getExtendedDescription());\n\t\t\t\t\t\t\tnewTopic.setLocked(fromTopic.getLocked());\n\t\t\t\t\t\t\tnewTopic.setDraft(fromTopic.getDraft());\n\n\t\t\t\t\t\t\t// Get/set the topic's permissions\n\t\t\t\t\t\t\tSet topicMembershipItemSet = fromTopic.getMembershipItemSet();\n\n\t\t\t\t\t\t\tif (topicMembershipItemSet != null && !topicMembershipItemSet.isEmpty() && roleIdList != null && !roleIdList.isEmpty()) {\n\t\t\t\t\t\t\t\tIterator membershipIter = topicMembershipItemSet.iterator();\n\t\t\t\t\t\t\t\twhile (membershipIter.hasNext()) {\n\t\t\t\t\t\t\t\t\tDBMembershipItem oldItem = (DBMembershipItem)membershipIter.next();\n\t\t\t\t\t\t\t\t\tif(roleIdList.contains(oldItem.getName())) {\n\t\t\t\t\t\t\t\t\t\tDBMembershipItem newItem = getMembershipItemCopy(oldItem);\n\t\t\t\t\t\t\t\t\t\tif (newItem != null) {\n\t\t\t\t\t\t\t\t\t\t\tpermissionManager.saveDBMembershipItem(newItem);\n\t\t\t\t\t\t\t\t\t\t\tnewTopic.addMembershipItem(newItem);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Add the attachments\n\t\t\t\t\t\t\tList fromTopicAttach = forumManager.getTopicByIdWithAttachments(fromTopicId).getAttachments();\n\t\t\t\t\t\t\tif (fromTopicAttach != null && !fromTopicAttach.isEmpty()) {\n\t\t\t\t\t\t\t\tfor (int topicAttach=0; topicAttach < fromTopicAttach.size(); topicAttach++) {                   \t\t\t\n\t\t\t\t\t\t\t\t\tAttachment thisAttach = (Attachment)fromTopicAttach.get(topicAttach);\n\t\t\t\t\t\t\t\t\tAttachment newAttachment = copyAttachment(thisAttach.getAttachmentId());\n\t\t\t\t\t\t\t\t\tif (newTopic != null && newAttachment != null)\n\t\t\t\t\t\t\t\t\t\tnewTopic.addAttachment(newAttachment);\n\t\t\t\t\t\t\t\t}\t\t\t\n\t\t\t\t\t\t\t}\t\t\t\t\n\n\t\t\t\t\t\t\tforumManager.saveDiscussionForumTopic(newTopic);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t}\t\t\t\n\t\t}\n\n\t\tcatch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tLOG.error(e.getMessage(), e);\n\t\t}\n\t}","id":15023,"modified_method":"public void transferCopyEntities(String fromContext, String toContext, List ids) {\n\t\ttry \n\t\t{\n\t\t\tLOG.debug(\"transfer copy mc items by transferCopyEntities\");\n\n\t\t\tList fromDfList = dfManager.getDiscussionForumsByContextId(fromContext);\n\n\t\t\tif (fromDfList != null && !fromDfList.isEmpty()) {\n\t\t\t\tfor (int currForum = 0; currForum < fromDfList.size(); currForum++) {\n\t\t\t\t\tDiscussionForum fromForum = (DiscussionForum)fromDfList.get(currForum);\n\t\t\t\t\tLong fromForumId = fromForum.getId();\n\n\t\t\t\t\tDiscussionForum newForum = forumManager.createDiscussionForum();\n\t\t\t\t\tnewForum.setTitle(fromForum.getTitle());\n\n\t\t\t\t\tif (fromForum.getShortDescription() != null && fromForum.getShortDescription().length() > 0) \n\t\t\t\t\t\tnewForum.setShortDescription(fromForum.getShortDescription());\n\n\t\t\t\t\tif (fromForum.getExtendedDescription() != null && fromForum.getExtendedDescription().length() > 0) \n\t\t\t\t\t\tnewForum.setExtendedDescription(fromForum.getExtendedDescription());\n\n\t\t\t\t\tnewForum.setDraft(fromForum.getDraft());\n\t\t\t\t\tnewForum.setLocked(fromForum.getLocked());\n\n\t\t\t\t\t// get permissions for \"from\" site\n\t\t\t\t\tSet membershipItemSet = fromForum.getMembershipItemSet();\n\t\t\t\t\tList roleIdList = getSiteRoleIds(toContext);\n\n\t\t\t\t\tif (membershipItemSet != null && !membershipItemSet.isEmpty() && roleIdList != null && !roleIdList.isEmpty()) {\n\t\t\t\t\t\tIterator membershipIter = membershipItemSet.iterator();\n\t\t\t\t\t\twhile (membershipIter.hasNext()) {\n\t\t\t\t\t\t\tDBMembershipItem oldItem = (DBMembershipItem)membershipIter.next();\n\t\t\t\t\t\t\tif(roleIdList.contains(oldItem.getName())) {\n\n\t\t\t\t\t\t\t\tDBMembershipItem newItem = getMembershipItemCopy(oldItem);\n\t\t\t\t\t\t\t\tif (newItem != null) {\n\t\t\t\t\t\t\t\t\tpermissionManager.saveDBMembershipItem(newItem);\n\t\t\t\t\t\t\t\t\tnewForum.addMembershipItem(newItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// get/add the forum's attachments\n\t\t\t\t\tList fromAttach = forumManager.getForumById(true, fromForumId).getAttachments();\n\t\t\t\t\tif (fromAttach != null && !fromAttach.isEmpty()) {\n\t\t\t\t\t\tfor (int currAttach=0; currAttach < fromAttach.size(); currAttach++) {                   \t\t\t\n\t\t\t\t\t\t\tAttachment thisAttach = (Attachment)fromAttach.get(currAttach);\n\t\t\t\t\t\t\tAttachment newAttachment = copyAttachment(thisAttach.getAttachmentId());\n\t\t\t\t\t\t\tif (newForum != null && newAttachment != null)\n\t\t\t\t\t\t\t\tnewForum.addAttachment(newAttachment);\n\t\t\t\t\t\t}\n\t\t\t\t\t}       \t\t\n\n\t\t\t\t\t// save the forum\n\t\t\t\t\tArea area = areaManager.getDiscusionArea();\n\t\t\t\t\tnewForum.setArea(area);\n\t\t\t\t\t\n\t\t\t\t\tif (\"false\".equalsIgnoreCase(ServerConfigurationService.getString(\"import.importAsDraft\")))\n\t\t\t\t\t{\n\t\t\t\t\t\tforumManager.saveDiscussionForum(newForum, newForum.getDraft().booleanValue());\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnewForum.setDraft(new Boolean(\"true\"));\n\t\t\t\t\t\tforumManager.saveDiscussionForum(newForum, true);\n\t\t\t\t\t}\n\n\t\t\t\t\t// get/add the topics\n\t\t\t\t\tList topicList = dfManager.getTopicsByIdWithMessagesAndAttachments(fromForumId);\n\t\t\t\t\tif (topicList != null && !topicList.isEmpty()) {\n\t\t\t\t\t\tfor (int currTopic = 0; currTopic < topicList.size(); currTopic++) {\n\t\t\t\t\t\t\tDiscussionTopic fromTopic = (DiscussionTopic)topicList.get(currTopic);\n\t\t\t\t\t\t\tLong fromTopicId = fromTopic.getId();\n\n\t\t\t\t\t\t\tDiscussionTopic newTopic = forumManager.createDiscussionForumTopic(newForum);\n\n\t\t\t\t\t\t\tnewTopic.setTitle(fromTopic.getTitle());\n\t\t\t\t\t\t\tif (fromTopic.getShortDescription() != null && fromTopic.getShortDescription().length() > 0)\n\t\t\t\t\t\t\t\tnewTopic.setShortDescription(fromTopic.getShortDescription());\n\t\t\t\t\t\t\tif (fromTopic.getExtendedDescription() != null && fromTopic.getExtendedDescription().length() > 0)\n\t\t\t\t\t\t\t\tnewTopic.setExtendedDescription(fromTopic.getExtendedDescription());\n\t\t\t\t\t\t\tnewTopic.setLocked(fromTopic.getLocked());\n\t\t\t\t\t\t\tnewTopic.setDraft(fromTopic.getDraft());\n\n\t\t\t\t\t\t\t// Get/set the topic's permissions\n\t\t\t\t\t\t\tSet topicMembershipItemSet = fromTopic.getMembershipItemSet();\n\n\t\t\t\t\t\t\tif (topicMembershipItemSet != null && !topicMembershipItemSet.isEmpty() && roleIdList != null && !roleIdList.isEmpty()) {\n\t\t\t\t\t\t\t\tIterator membershipIter = topicMembershipItemSet.iterator();\n\t\t\t\t\t\t\t\twhile (membershipIter.hasNext()) {\n\t\t\t\t\t\t\t\t\tDBMembershipItem oldItem = (DBMembershipItem)membershipIter.next();\n\t\t\t\t\t\t\t\t\tif(roleIdList.contains(oldItem.getName())) {\n\t\t\t\t\t\t\t\t\t\tDBMembershipItem newItem = getMembershipItemCopy(oldItem);\n\t\t\t\t\t\t\t\t\t\tif (newItem != null) {\n\t\t\t\t\t\t\t\t\t\t\tpermissionManager.saveDBMembershipItem(newItem);\n\t\t\t\t\t\t\t\t\t\t\tnewTopic.addMembershipItem(newItem);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Add the attachments\n\t\t\t\t\t\t\tList fromTopicAttach = forumManager.getTopicByIdWithAttachments(fromTopicId).getAttachments();\n\t\t\t\t\t\t\tif (fromTopicAttach != null && !fromTopicAttach.isEmpty()) {\n\t\t\t\t\t\t\t\tfor (int topicAttach=0; topicAttach < fromTopicAttach.size(); topicAttach++) {                   \t\t\t\n\t\t\t\t\t\t\t\t\tAttachment thisAttach = (Attachment)fromTopicAttach.get(topicAttach);\n\t\t\t\t\t\t\t\t\tAttachment newAttachment = copyAttachment(thisAttach.getAttachmentId());\n\t\t\t\t\t\t\t\t\tif (newTopic != null && newAttachment != null)\n\t\t\t\t\t\t\t\t\t\tnewTopic.addAttachment(newAttachment);\n\t\t\t\t\t\t\t\t}\t\t\t\n\t\t\t\t\t\t\t}\t\t\t\t\n\n\t\t\t\t\t\t\tforumManager.saveDiscussionForumTopic(newTopic, newForum.getDraft().booleanValue());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t}\t\t\t\n\t\t}\n\n\t\tcatch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tLOG.error(e.getMessage(), e);\n\t\t}\n\t}","commit_id":"868a811779476ffb8810d06002d40c0b12c07f36","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n     * Save a discussion forum topic\n     */\n    public void saveDiscussionForumTopic(DiscussionTopic topic) {\n        boolean isNew = topic.getId() == null;\n\n//        if (isForumLocked(topic.getBaseForum().getId())) {\n//            LOG.info(\"saveDiscussionForumTopic executed [topicId: \" + (isNew ? \"new\" : topic.getId().toString()) + \"] but forum is locked -- save aborted\");\n//            throw new LockedException(\"Topic could not be saved [topicId: \" + (isNew ? \"new\" : topic.getId().toString()) + \"]\");\n//        }\n        \n        if (topic.getMutable() == null) {\n            topic.setMutable(Boolean.FALSE);\n        }\n        if (topic.getSortIndex() == null) {\n            topic.setSortIndex(new Integer(0));\n        }\n        topic.setModified(new Date());\n        topic.setModifiedBy(getCurrentUser());\n        if (topic.getId() == null) {\n            \n          DiscussionForum discussionForum = \n            (DiscussionForum) getForumByIdWithTopics(topic.getBaseForum().getId());\n          discussionForum.addTopic(topic);\n                                  \n//          DiscussionForum forum = (DiscussionForum) topic.getBaseForum();\n//          getHibernateTemplate().lock(forum, LockMode.NONE);\n//          getHibernateTemplate().initialize(forum.getTopicsSet());          \n//          forum.addTopic(topic);                       \n//          getHibernateTemplate().saveOrUpdate(topic);\n          saveDiscussionForum(discussionForum);\n            \n        } else {\n            getHibernateTemplate().saveOrUpdate(topic);\n        }\n\n        if (isNew) {\n            eventTrackingService.post(eventTrackingService.newEvent(DiscussionForumService.EVENT_RESOURCE_ADD, getEventMessage(topic), false));\n        } else {\n            eventTrackingService.post(eventTrackingService.newEvent(DiscussionForumService.EVENT_RESOURCE_WRITE, getEventMessage(topic), false));\n        }\n\n        LOG.debug(\"saveDiscussionForumTopic executed with topicId: \" + topic.getId());\n    }","id":15024,"modified_method":"public void saveDiscussionForumTopic(DiscussionTopic topic) {\t\n    \tsaveDiscussionForumTopic(topic, false);\n    }","commit_id":"868a811779476ffb8810d06002d40c0b12c07f36","url":"https://github.com/sakaiproject/sakai"},{"original_method":"private void testSimpleConfiguration(Settings settings) {\n        Index index = new Index(\"test\");\n        Injector injector = Guice.createInjector(\n                new IndexSettingsModule(settings),\n                new IndexNameModule(index),\n                new AnalysisModule(settings));\n\n        AnalysisService analysisService = injector.getInstance(AnalysisService.class);\n\n        Analyzer analyzer = analysisService.analyzer(\"custom1\").analyzer();\n\n        assertThat(analyzer, instanceOf(CustomAnalyzer.class));\n        CustomAnalyzer custom1 = (CustomAnalyzer) analyzer;\n        assertThat(custom1.tokenizerFactory(), instanceOf(StandardTokenizerFactory.class));\n        assertThat(custom1.tokenFilters().length, equalTo(2));\n\n        StopTokenFilterFactory stop1 = (StopTokenFilterFactory) custom1.tokenFilters()[0];\n        assertThat(stop1.stopWords().size(), equalTo(1));\n        assertThat(stop1.stopWords(), hasItem(\"test-stop\"));\n\n        analyzer = analysisService.analyzer(\"custom2\").analyzer();\n        assertThat(analyzer, instanceOf(CustomAnalyzer.class));\n        CustomAnalyzer custom2 = (CustomAnalyzer) analyzer;\n\n        HtmlStripCharFilterFactory html = (HtmlStripCharFilterFactory) custom2.charFilters()[0];\n        assertThat(html.readAheadLimit(), equalTo(HTMLStripCharFilter.DEFAULT_READ_AHEAD));\n\n        html = (HtmlStripCharFilterFactory) custom2.charFilters()[1];\n        assertThat(html.readAheadLimit(), equalTo(1024));\n    }","id":15025,"modified_method":"private void testSimpleConfiguration(Settings settings) {\n        Index index = new Index(\"test\");\n        Injector injector = Guice.createInjector(\n                new IndexSettingsModule(settings),\n                new IndexNameModule(index),\n                new AnalysisModule(settings));\n\n        AnalysisService analysisService = injector.getInstance(AnalysisService.class);\n\n        Analyzer analyzer = analysisService.analyzer(\"custom1\").analyzer();\n\n        assertThat(analyzer, instanceOf(CustomAnalyzer.class));\n        CustomAnalyzer custom1 = (CustomAnalyzer) analyzer;\n        assertThat(custom1.tokenizerFactory(), instanceOf(StandardTokenizerFactory.class));\n        assertThat(custom1.tokenFilters().length, equalTo(2));\n\n        StopTokenFilterFactory stop1 = (StopTokenFilterFactory) custom1.tokenFilters()[0];\n        assertThat(stop1.stopWords().size(), equalTo(1));\n        assertThat((Iterable<String>) stop1.stopWords(), hasItem(\"test-stop\"));\n\n        analyzer = analysisService.analyzer(\"custom2\").analyzer();\n        assertThat(analyzer, instanceOf(CustomAnalyzer.class));\n        CustomAnalyzer custom2 = (CustomAnalyzer) analyzer;\n\n        HtmlStripCharFilterFactory html = (HtmlStripCharFilterFactory) custom2.charFilters()[0];\n        assertThat(html.readAheadLimit(), equalTo(HTMLStripCharFilter.DEFAULT_READ_AHEAD));\n\n        html = (HtmlStripCharFilterFactory) custom2.charFilters()[1];\n        assertThat(html.readAheadLimit(), equalTo(1024));\n    }","commit_id":"c0552bdc7099a93a57e8b574f43b0daefc07a9d1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Inject public ArabicAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {\n        super(index, indexSettings, name);\n        String[] stopWords = settings.getAsArray(\"stopwords\", null);\n        if (stopWords != null) {\n            this.stopWords = ImmutableSet.copyOf(Iterators.forArray(stopWords));\n        } else {\n            this.stopWords = ArabicAnalyzer.getDefaultStopSet();\n        }\n        arabicAnalyzer = new ArabicAnalyzer(Lucene.ANALYZER_VERSION, this.stopWords);\n    }","id":15026,"modified_method":"@Inject public ArabicAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {\n        super(index, indexSettings, name);\n        Set<?> stopWords = Analysis.parseStopWords(settings, ArabicAnalyzer.getDefaultStopSet());\n        arabicAnalyzer = new ArabicAnalyzer(Lucene.ANALYZER_VERSION, stopWords);\n    }","commit_id":"c0552bdc7099a93a57e8b574f43b0daefc07a9d1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Inject public BrazilianAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {\n        super(index, indexSettings, name);\n        String[] stopWords = settings.getAsArray(\"stopwords\", null);\n        if (stopWords != null) {\n            this.stopWords = ImmutableSet.copyOf(Iterators.forArray(stopWords));\n        } else {\n            this.stopWords = BrazilianAnalyzer.getDefaultStopSet();\n        }\n\n        String[] stemExclusion = settings.getAsArray(\"stem_exclusion\");\n        if (stemExclusion.length > 0) {\n            this.stemExclusion = ImmutableSet.copyOf(Iterators.forArray(stemExclusion));\n        } else {\n            this.stemExclusion = ImmutableSet.of();\n        }\n        analyzer = new BrazilianAnalyzer(Lucene.ANALYZER_VERSION, this.stopWords, this.stemExclusion);\n    }","id":15027,"modified_method":"@Inject public BrazilianAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {\n        super(index, indexSettings, name);\n        Set<?> stopWords = Analysis.parseStopWords(settings, BrazilianAnalyzer.getDefaultStopSet());\n        String[] stemExclusion = settings.getAsArray(\"stem_exclusion\");\n        if (stemExclusion.length > 0) {\n            this.stemExclusion = ImmutableSet.copyOf(Iterators.forArray(stemExclusion));\n        } else {\n            this.stemExclusion = ImmutableSet.of();\n        }\n        analyzer = new BrazilianAnalyzer(Lucene.ANALYZER_VERSION, stopWords, this.stemExclusion);\n    }","commit_id":"c0552bdc7099a93a57e8b574f43b0daefc07a9d1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Inject public CjkAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {\n        super(index, indexSettings, name);\n        String[] stopWords = settings.getAsArray(\"stopwords\", null);\n        if (stopWords != null) {\n            this.stopWords = ImmutableSet.copyOf(Iterators.forArray(stopWords));\n        } else {\n            this.stopWords = CJKAnalyzer.getDefaultStopSet();\n        }\n\n        analyzer = new CJKAnalyzer(Lucene.ANALYZER_VERSION, this.stopWords);\n    }","id":15028,"modified_method":"@Inject public CjkAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {\n        super(index, indexSettings, name);\n        Set<?> stopWords = Analysis.parseStopWords(settings, CJKAnalyzer.getDefaultStopSet());\n\n        analyzer = new CJKAnalyzer(Lucene.ANALYZER_VERSION, stopWords);\n    }","commit_id":"c0552bdc7099a93a57e8b574f43b0daefc07a9d1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Inject public CzechAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {\n        super(index, indexSettings, name);\n        String[] stopWords = settings.getAsArray(\"stopwords\", null);\n        if (stopWords != null) {\n            this.stopWords = ImmutableSet.copyOf(Iterators.forArray(stopWords));\n        } else {\n            this.stopWords = CzechAnalyzer.getDefaultStopSet();\n        }\n\n        analyzer = new CzechAnalyzer(Lucene.ANALYZER_VERSION, this.stopWords);\n    }","id":15029,"modified_method":"@Inject public CzechAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {\n        super(index, indexSettings, name);\n        Set<?> stopWords = Analysis.parseStopWords(settings, CzechAnalyzer.getDefaultStopSet());\n\n        analyzer = new CzechAnalyzer(Lucene.ANALYZER_VERSION, stopWords);\n    }","commit_id":"c0552bdc7099a93a57e8b574f43b0daefc07a9d1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Inject public DutchAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {\n        super(index, indexSettings, name);\n        String[] stopWords = settings.getAsArray(\"stopwords\", null);\n        if (stopWords != null) {\n            this.stopWords = ImmutableSet.copyOf(Iterators.forArray(stopWords));\n        } else {\n            this.stopWords = DutchAnalyzer.getDefaultStopSet();\n        }\n\n        String[] stemExclusion = settings.getAsArray(\"stem_exclusion\");\n        if (stemExclusion.length > 0) {\n            this.stemExclusion = ImmutableSet.copyOf(Iterators.forArray(stemExclusion));\n        } else {\n            this.stemExclusion = ImmutableSet.of();\n        }\n        analyzer = new DutchAnalyzer(Lucene.VERSION, this.stopWords, this.stemExclusion);\n    }","id":15030,"modified_method":"@Inject public DutchAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {\n        super(index, indexSettings, name);\n        Set<?> stopWords = Analysis.parseStopWords(settings, DutchAnalyzer.getDefaultStopSet());\n\n        String[] stemExclusion = settings.getAsArray(\"stem_exclusion\");\n        if (stemExclusion.length > 0) {\n            this.stemExclusion = ImmutableSet.copyOf(Iterators.forArray(stemExclusion));\n        } else {\n            this.stemExclusion = ImmutableSet.of();\n        }\n        analyzer = new DutchAnalyzer(Lucene.VERSION, stopWords, this.stemExclusion);\n    }","commit_id":"c0552bdc7099a93a57e8b574f43b0daefc07a9d1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Inject public FrenchAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {\n        super(index, indexSettings, name);\n        String[] stopWords = settings.getAsArray(\"stopwords\", null);\n        if (stopWords != null) {\n            this.stopWords = ImmutableSet.copyOf(Iterators.forArray(stopWords));\n        } else {\n            this.stopWords = FrenchAnalyzer.getDefaultStopSet();\n        }\n\n        String[] stemExclusion = settings.getAsArray(\"stem_exclusion\");\n        if (stemExclusion.length > 0) {\n            this.stemExclusion = ImmutableSet.copyOf(Iterators.forArray(stemExclusion));\n        } else {\n            this.stemExclusion = ImmutableSet.of();\n        }\n        analyzer = new FrenchAnalyzer(Lucene.ANALYZER_VERSION, this.stopWords, this.stemExclusion);\n    }","id":15031,"modified_method":"@Inject public FrenchAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {\n        super(index, indexSettings, name);\n        Set<?> stopWords = Analysis.parseStopWords(settings, FrenchAnalyzer.getDefaultStopSet());\n\n        String[] stemExclusion = settings.getAsArray(\"stem_exclusion\");\n        if (stemExclusion.length > 0) {\n            this.stemExclusion = ImmutableSet.copyOf(Iterators.forArray(stemExclusion));\n        } else {\n            this.stemExclusion = ImmutableSet.of();\n        }\n        analyzer = new FrenchAnalyzer(Lucene.ANALYZER_VERSION, stopWords, this.stemExclusion);\n    }","commit_id":"c0552bdc7099a93a57e8b574f43b0daefc07a9d1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Inject public GermanAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {\n        super(index, indexSettings, name);\n        String[] stopWords = settings.getAsArray(\"stopwords\", null);\n        if (stopWords != null) {\n            this.stopWords = ImmutableSet.copyOf(Iterators.forArray(stopWords));\n        } else {\n            this.stopWords = GermanAnalyzer.getDefaultStopSet();\n        }\n\n        String[] stemExclusion = settings.getAsArray(\"stem_exclusion\");\n        if (stemExclusion.length > 0) {\n            this.stemExclusion = ImmutableSet.copyOf(Iterators.forArray(stemExclusion));\n        } else {\n            this.stemExclusion = ImmutableSet.of();\n        }\n        analyzer = new GermanAnalyzer(Lucene.ANALYZER_VERSION, this.stopWords, this.stemExclusion);\n    }","id":15032,"modified_method":"@Inject public GermanAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {\n        super(index, indexSettings, name);\n        Set<?> stopWords = Analysis.parseStopWords(settings, GermanAnalyzer.getDefaultStopSet());\n\n        String[] stemExclusion = settings.getAsArray(\"stem_exclusion\");\n        if (stemExclusion.length > 0) {\n            this.stemExclusion = ImmutableSet.copyOf(Iterators.forArray(stemExclusion));\n        } else {\n            this.stemExclusion = ImmutableSet.of();\n        }\n        analyzer = new GermanAnalyzer(Lucene.ANALYZER_VERSION, stopWords, this.stemExclusion);\n    }","commit_id":"c0552bdc7099a93a57e8b574f43b0daefc07a9d1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Inject public GreekAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {\n        super(index, indexSettings, name);\n        String[] stopWords = settings.getAsArray(\"stopwords\", null);\n        if (stopWords != null) {\n            this.stopWords = ImmutableSet.copyOf(Iterators.forArray(stopWords));\n        } else {\n            this.stopWords = GreekAnalyzer.getDefaultStopSet();\n        }\n\n        analyzer = new GreekAnalyzer(Lucene.ANALYZER_VERSION, this.stopWords);\n    }","id":15033,"modified_method":"@Inject public GreekAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {\n        super(index, indexSettings, name);\n        Set<?> stopWords = Analysis.parseStopWords(settings, GreekAnalyzer.getDefaultStopSet());\n\n        analyzer = new GreekAnalyzer(Lucene.ANALYZER_VERSION, stopWords);\n    }","commit_id":"c0552bdc7099a93a57e8b574f43b0daefc07a9d1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Inject public PatternAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {\n        super(index, indexSettings, name);\n\n        boolean lowercase = settings.getAsBoolean(\"lowercase\", true);\n\n        String[] stopWords = settings.getAsArray(\"stopwords\", null);\n        if (stopWords != null) {\n            this.stopWords = ImmutableSet.copyOf(Iterators.forArray(stopWords));\n        } else {\n            this.stopWords = ImmutableSet.copyOf((Iterable<? extends String>) StopAnalyzer.ENGLISH_STOP_WORDS_SET);\n        }\n\n        String sPattern = settings.get(\"pattern\", \"\\\\W+\" /*PatternAnalyzer.NON_WORD_PATTERN*/);\n        if (sPattern == null) {\n            throw new ElasticSearchIllegalArgumentException(\"Analyzer [\" + name + \"] of type pattern must have a `pattern` set\");\n        }\n        Pattern pattern = Regex.compile(sPattern, settings.get(\"flags\"));\n\n        analyzer = new PatternAnalyzer(Lucene.ANALYZER_VERSION, pattern, lowercase, this.stopWords);\n    }","id":15034,"modified_method":"@Inject public PatternAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {\n        super(index, indexSettings, name);\n\n        boolean lowercase = settings.getAsBoolean(\"lowercase\", true);\n\n        Set<?> stopWords = Analysis.parseStopWords(settings, StopAnalyzer.ENGLISH_STOP_WORDS_SET);\n\n        String sPattern = settings.get(\"pattern\", \"\\\\W+\" /*PatternAnalyzer.NON_WORD_PATTERN*/);\n        if (sPattern == null) {\n            throw new ElasticSearchIllegalArgumentException(\"Analyzer [\" + name + \"] of type pattern must have a `pattern` set\");\n        }\n        Pattern pattern = Regex.compile(sPattern, settings.get(\"flags\"));\n\n        analyzer = new PatternAnalyzer(Lucene.ANALYZER_VERSION, pattern, lowercase, stopWords);\n    }","commit_id":"c0552bdc7099a93a57e8b574f43b0daefc07a9d1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Inject public PersianAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {\n        super(index, indexSettings, name);\n        String[] stopWords = settings.getAsArray(\"stopwords\", null);\n        if (stopWords != null) {\n            this.stopWords = ImmutableSet.copyOf(Iterators.forArray(stopWords));\n        } else {\n            this.stopWords = PersianAnalyzer.getDefaultStopSet();\n        }\n\n        analyzer = new PersianAnalyzer(Lucene.ANALYZER_VERSION, this.stopWords);\n    }","id":15035,"modified_method":"@Inject public PersianAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {\n        super(index, indexSettings, name);\n        Set<?> stopWords = Analysis.parseStopWords(settings, PersianAnalyzer.getDefaultStopSet());\n\n        analyzer = new PersianAnalyzer(Lucene.ANALYZER_VERSION, stopWords);\n    }","commit_id":"c0552bdc7099a93a57e8b574f43b0daefc07a9d1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Inject public RussianAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {\n        super(index, indexSettings, name);\n        String[] stopWords = settings.getAsArray(\"stopwords\", null);\n        if (stopWords != null) {\n            analyzer = new RussianAnalyzer(Lucene.ANALYZER_VERSION, ImmutableSet.copyOf(Iterators.forArray(stopWords)));\n        } else {\n            analyzer = new RussianAnalyzer(Lucene.ANALYZER_VERSION);\n        }\n    }","id":15036,"modified_method":"@Inject public RussianAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {\n        super(index, indexSettings, name);\n        if (Analysis.isNoStopwords(settings)) {\n            analyzer = new RussianAnalyzer(Lucene.ANALYZER_VERSION, ImmutableSet.of());\n        } else {\n            Set<?> stopWords = Analysis.parseStopWords(settings, ImmutableSet.of());\n            if (!stopWords.isEmpty()) {\n                analyzer = new RussianAnalyzer(Lucene.ANALYZER_VERSION, stopWords);\n            } else {\n                analyzer = new RussianAnalyzer(Lucene.ANALYZER_VERSION);\n            }\n        }\n    }","commit_id":"c0552bdc7099a93a57e8b574f43b0daefc07a9d1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Inject public StandardAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {\n        super(index, indexSettings, name);\n        String[] stopWords = settings.getAsArray(\"stopwords\", null);\n        if (stopWords != null) {\n            this.stopWords = ImmutableSet.copyOf(Iterators.forArray(stopWords));\n        } else {\n            this.stopWords = ImmutableSet.copyOf((Iterable<? extends String>) StopAnalyzer.ENGLISH_STOP_WORDS_SET);\n        }\n        maxTokenLength = settings.getAsInt(\"max_token_length\", StandardAnalyzer.DEFAULT_MAX_TOKEN_LENGTH);\n        standardAnalyzer = new StandardAnalyzer(Lucene.ANALYZER_VERSION, this.stopWords);\n        standardAnalyzer.setMaxTokenLength(maxTokenLength);\n    }","id":15037,"modified_method":"@Inject public StandardAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {\n        super(index, indexSettings, name);\n        Set<?> stopWords = Analysis.parseStopWords(settings, StopAnalyzer.ENGLISH_STOP_WORDS_SET);\n        int maxTokenLength = settings.getAsInt(\"max_token_length\", StandardAnalyzer.DEFAULT_MAX_TOKEN_LENGTH);\n        standardAnalyzer = new StandardAnalyzer(Lucene.ANALYZER_VERSION, stopWords);\n        standardAnalyzer.setMaxTokenLength(maxTokenLength);\n    }","commit_id":"c0552bdc7099a93a57e8b574f43b0daefc07a9d1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Inject public StopAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {\n        super(index, indexSettings, name);\n        String[] stopWords = settings.getAsArray(\"stopwords\", null);\n        if (stopWords != null) {\n            this.stopWords = ImmutableSet.copyOf(Iterators.forArray(stopWords));\n        } else {\n            this.stopWords = ImmutableSet.copyOf((Iterable<? extends String>) StopAnalyzer.ENGLISH_STOP_WORDS_SET);\n        }\n        this.stopAnalyzer = new StopAnalyzer(Lucene.ANALYZER_VERSION, this.stopWords);\n    }","id":15038,"modified_method":"@Inject public StopAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {\n        super(index, indexSettings, name);\n        Set<?> stopWords = Analysis.parseStopWords(settings, StopAnalyzer.ENGLISH_STOP_WORDS_SET);\n        this.stopAnalyzer = new StopAnalyzer(Lucene.ANALYZER_VERSION, stopWords);\n    }","commit_id":"c0552bdc7099a93a57e8b574f43b0daefc07a9d1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public Set<String> stopWords() {\n        return stopWords;\n    }","id":15039,"modified_method":"public Set<?> stopWords() {\n        return stopWords;\n    }","commit_id":"c0552bdc7099a93a57e8b574f43b0daefc07a9d1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Inject public StopTokenFilterFactory(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {\n        super(index, indexSettings, name);\n        String[] stopWords = settings.getAsArray(\"stopwords\", null);\n        if (stopWords != null) {\n            this.stopWords = ImmutableSet.copyOf(Iterators.forArray(stopWords));\n        } else {\n            this.stopWords = ImmutableSet.copyOf((Iterable<? extends String>) StopAnalyzer.ENGLISH_STOP_WORDS_SET);\n        }\n        this.enablePositionIncrements = settings.getAsBoolean(\"enable_position_increments\", true);\n        this.ignoreCase = settings.getAsBoolean(\"ignore_case\", false);\n    }","id":15040,"modified_method":"@Inject public StopTokenFilterFactory(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {\n        super(index, indexSettings, name);\n        this.stopWords = Analysis.parseStopWords(settings, StopAnalyzer.ENGLISH_STOP_WORDS_SET);\n        this.enablePositionIncrements = settings.getAsBoolean(\"enable_position_increments\", true);\n        this.ignoreCase = settings.getAsBoolean(\"ignore_case\", false);\n    }","commit_id":"c0552bdc7099a93a57e8b574f43b0daefc07a9d1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private Document loadDoc() {\r\n        DocumentBuilderFactory builderFactory =\r\n                DocumentBuilderFactory.newInstance();\r\n\r\n        Document ret = null;\r\n\r\n\r\n        try {\r\n            DocumentBuilder builder = builderFactory.newDocumentBuilder();\r\n            ret = builder.parse(\r\n                    new FileInputStream(xmlFile));\r\n        } catch (ParserConfigurationException e) {\r\n            logger.log(Level.SEVERE, \"Error loading hash sets: can't initialize parser.\", e);\r\n\r\n        } catch (SAXException e) {\r\n            logger.log(Level.SEVERE, \"Error loading hash sets: can't parse XML.\", e);\r\n\r\n        } catch (IOException e) {\r\n            //error reading file\r\n            logger.log(Level.SEVERE, \"Error loading hash sets: can't read file.\", e);\r\n\r\n        }\r\n        try{\r\n            PlatformUtil.xmlIsValid(ret, PlatformUtil.hashsetXSD);\r\n        }\r\n        catch(SAXException e){\r\n            logger.log(Level.SEVERE, \"Error loading Keyword lists: Could not validate against Hashset.xsd\", e);\r\n        }\r\n        return ret;\r\n\r\n    }","id":15041,"modified_method":"private Document loadDoc() {\r\n        DocumentBuilderFactory builderFactory =\r\n                DocumentBuilderFactory.newInstance();\r\n\r\n        Document ret = null;\r\n\r\n\r\n        try {\r\n            DocumentBuilder builder = builderFactory.newDocumentBuilder();\r\n            ret = builder.parse(\r\n                    new FileInputStream(xmlFile));\r\n        } catch (ParserConfigurationException e) {\r\n            logger.log(Level.SEVERE, \"Error loading hash sets: can't initialize parser.\", e);\r\n\r\n        } catch (SAXException e) {\r\n            logger.log(Level.SEVERE, \"Error loading hash sets: can't parse XML.\", e);\r\n\r\n        } catch (IOException e) {\r\n            //error reading file\r\n            logger.log(Level.SEVERE, \"Error loading hash sets: can't read file.\", e);\r\n\r\n        }\r\n        if(! PlatformUtil.xmlIsValid(ret, HashDbXML.class, PlatformUtil.hashsetXSD)){\r\n            logger.log(Level.SEVERE, \"Error loading hash sets: could not validate against \" + PlatformUtil.hashsetXSD);\r\n            return null;\r\n        }\r\n        \r\n        return ret;\r\n\r\n    }","commit_id":"e5d6329ec7ec397eb7bb0d7bb7c190b231a767ac","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * add autodiscovered module to raw pipeline to be validated and\n     * instantiated\n     *\n     * @param moduleClass\n     * @param pipelineType\n     */\n    private void addModuleToRawPipeline(Class<?> moduleClass, XmlPipelineRaw.PIPELINE_TYPE pipelineType) throws IngestModuleLoaderException {\n        String moduleLocation = moduleClass.getName();\n\n        XmlModuleRaw modRaw = new XmlModuleRaw();\n        modRaw.arguments = \"\"; //default, no arguments\n        modRaw.location = moduleLocation;\n        modRaw.order = Integer.MAX_VALUE - (numModDiscovered++); //add to end\n        modRaw.type = XmlModuleRaw.MODULE_TYPE.PLUGIN.toString();\n        modRaw.valid = false; //to be validated\n\n        //save the current numModDiscovered\n        ModuleSettings.setConfigSetting(IngestManager.MODULE_PROPERTIES, CUR_MODULES_DISCOVERED_SETTING, Integer.toString(numModDiscovered));\n\n        //find the pipeline of that type\n        XmlPipelineRaw pipeline = null;\n        for (XmlPipelineRaw rawP : this.pipelinesXML) {\n            if (rawP.type.equals(pipelineType.toString())) {\n                pipeline = rawP;\n                break;\n            }\n        }\n        if (pipeline == null) {\n            throw new IngestModuleLoaderException(\"Could not find expected pipeline of type: \" + pipelineType.toString() + \", cannot add autodiscovered module: \" + moduleLocation);\n        } else {\n            pipeline.modules.add(modRaw);\n            logger.log(Level.INFO, \"Added a new module \" + moduleClass.getName() + \" to pipeline \" + pipelineType.toString());\n        }\n    }","id":15042,"modified_method":"/**\n     * add autodiscovered module to raw pipeline to be validated and\n     * instantiated\n     *\n     * @param moduleClass\n     * @param pipelineType\n     */\n    private void addModuleToRawPipeline(Class<?> moduleClass, IngestModuleLoader.XmlPipelineRaw.PIPELINE_TYPE pipelineType) throws IngestModuleLoaderException {\n        String moduleLocation = moduleClass.getName();\n\n        IngestModuleLoader.XmlModuleRaw modRaw = new IngestModuleLoader.XmlModuleRaw();\n        modRaw.arguments = \"\"; //default, no arguments\n        modRaw.location = moduleLocation;\n        modRaw.order = Integer.MAX_VALUE - (numModDiscovered++); //add to end\n        modRaw.type = IngestModuleLoader.XmlModuleRaw.MODULE_TYPE.PLUGIN.toString();\n        modRaw.valid = false; //to be validated\n\n        //save the current numModDiscovered\n        ModuleSettings.setConfigSetting(IngestManager.MODULE_PROPERTIES, CUR_MODULES_DISCOVERED_SETTING, Integer.toString(numModDiscovered));\n\n        //find the pipeline of that type\n        IngestModuleLoader.XmlPipelineRaw pipeline = null;\n        for (IngestModuleLoader.XmlPipelineRaw rawP : this.pipelinesXML) {\n            if (rawP.type.equals(pipelineType.toString())) {\n                pipeline = rawP;\n                break;\n            }\n        }\n        if (pipeline == null) {\n            throw new IngestModuleLoaderException(\"Could not find expected pipeline of type: \" + pipelineType.toString() + \", cannot add autodiscovered module: \" + moduleLocation);\n        } else {\n            pipeline.modules.add(modRaw);\n            logger.log(Level.INFO, \"Added a new module \" + moduleClass.getName() + \" to pipeline \" + pipelineType.toString());\n        }\n    }","commit_id":"e5d6329ec7ec397eb7bb0d7bb7c190b231a767ac","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * validate raw pipeline, set valid to true member on pipeline and modules\n     * if valid log if invalid\n     *\n     * valid pipeline: valid pipeline type, modules have unique ordering\n     *\n     * valid module: module class exists, module can be loaded, module\n     * implements correct interface, module has proper methods and modifiers to\n     * create an instance\n     *\n     * @throws IngestModuleLoaderException\n     */\n    private void validate() throws IngestModuleLoaderException {\n        for (XmlPipelineRaw pRaw : pipelinesXML) {\n            boolean pipelineErrors = false;\n\n            //check pipelineType\n            String pipelineType = pRaw.type;\n\n            XmlPipelineRaw.PIPELINE_TYPE pType = null;\n\n            try {\n                pType = XmlPipelineRaw.getPipelineType(pipelineType);\n            } catch (IllegalArgumentException e) {\n                pipelineErrors = true;\n                logger.log(Level.SEVERE, \"Unknown pipeline type: \" + pipelineType);\n\n            }\n            //ordering store\n            Map<Integer, Integer> orderings = new HashMap<Integer, Integer>();\n\n            for (XmlModuleRaw pMod : pRaw.modules) {\n                boolean moduleErrors = false;\n\n                //record ordering for validation\n                int order = pMod.order;\n                if (orderings.containsKey(order)) {\n                    orderings.put(order, orderings.get(order) + 1);\n                } else {\n                    orderings.put(order, 1);\n                }\n\n                //check pipelineType\n                String modType = pMod.type;\n                if (!modType.equals(XmlModuleRaw.MODULE_TYPE.PLUGIN.toString())) {\n                    moduleErrors = true;\n                    logger.log(Level.SEVERE, \"Unknown module type: \" + modType);\n                }\n\n                //classes exist and interfaces implemented\n                String location = pMod.location;\n                try {\n                    //netbeans uses custom class loader, otherwise can't load classes from other modules\n\n                    final Class<?> moduleClass = Class.forName(location, false, classLoader);\n                    final Type[] intfs = moduleClass.getGenericInterfaces();\n\n                    if (intfs.length != 0 && pType != null) {\n                        //check if one of the module interfaces matches the pipeline type\n                        boolean interfaceFound = false;\n                        Class moduleMeta = ((IngestModuleMapping) pType).getIngestModuleInterface();\n                        String moduleIntNameCan = moduleMeta.getCanonicalName();\n                        String[] moduleIntNameTok = moduleIntNameCan.split(\" \");\n                        String moduleIntName = moduleIntNameTok[moduleIntNameTok.length - 1];\n                        for (Type intf : intfs) {\n                            String intNameCan = intf.toString();\n                            String[] intNameCanTok = intNameCan.split(\" \");\n                            String intName = intNameCanTok[intNameCanTok.length - 1];\n                            if (intName.equals(moduleIntName)) {\n                                interfaceFound = true;\n                                break;\n                            }\n                        }\n\n                        if (interfaceFound == false) {\n                            moduleErrors = true;\n                            logger.log(Level.WARNING, \"Module class: \" + location\n                                    + \" does not implement correct interface: \" + moduleMeta.getName()\n                                    + \" required for pipeline: \" + pType.toString()\n                                    + \", module will not be active.\");\n                        }\n                    } else {\n                        moduleErrors = true;\n                        logger.log(Level.WARNING, \"Module class: \" + location + \" does not implement any interface, module will not be active.\");\n                    }\n\n                    //if file module: check if has public static getDefault()\n                    if (pType == XmlPipelineRaw.PIPELINE_TYPE.FILE_ANALYSIS) {\n                        try {\n                            Method getDefaultMethod = moduleClass.getMethod(\"getDefault\");\n                            int modifiers = getDefaultMethod.getModifiers();\n                            if (!(Modifier.isPublic(modifiers) && Modifier.isStatic(modifiers))) {\n                                moduleErrors = true;\n                                logger.log(Level.WARNING, \"Module class: \" + location + \" does not implement public static getDefault() singleton method.\");\n                            }\n                            if (!getDefaultMethod.getReturnType().equals(moduleClass)) {\n                                logger.log(Level.WARNING, \"Module class: \" + location + \" getDefault() singleton method should return the module class instance: \" + moduleClass.getName());\n                            }\n\n                        } catch (NoSuchMethodException ex) {\n                            Exceptions.printStackTrace(ex);\n                        } catch (SecurityException ex) {\n                            Exceptions.printStackTrace(ex);\n                        }\n                    } //if image module: check if has public constructor with no args\n                    else if (pType == XmlPipelineRaw.PIPELINE_TYPE.IMAGE_ANALYSIS) {\n                        try {\n                            Constructor<?> constr = moduleClass.getConstructor();\n                            int modifiers = constr.getModifiers();\n                            if (!Modifier.isPublic(modifiers)) {\n                                moduleErrors = true;\n                                logger.log(Level.WARNING, \"Module class: \" + location + \" lacks a public default constructor.\");\n                            }\n                        } catch (NoSuchMethodException ex) {\n                            moduleErrors = true;\n                            logger.log(Level.WARNING, \"Module class: \" + location + \" lacks a public default constructor.\");\n                        } catch (SecurityException ex) {\n                            moduleErrors = true;\n                            logger.log(Level.WARNING, \"Module class: \" + location + \" lacks a public default constructor.\");\n                        }\n                    }\n\n                } catch (ClassNotFoundException ex) {\n                    moduleErrors = true;\n                    logger.log(Level.WARNING, \"Module class: \" + location + \" not found, module will not be active.\");\n                }\n\n\n                //validate ordering\n                for (int o : orderings.keySet()) {\n                    int count = orderings.get(o);\n                    if (count > 1) {\n                        pipelineErrors = true;\n                        logger.log(Level.SEVERE, \"Pipeline \" + pipelineType + \" invalid non-unique ordering of modules, order: \" + o);\n                    }\n                }\n\n                pMod.valid = !moduleErrors;\n                logger.log(Level.INFO, \"Module \" + pMod.location + \" valid: \" + pMod.valid);\n            } //end module\n\n            pRaw.valid = !pipelineErrors;\n            logger.log(Level.INFO, \"Pipeline \" + pType + \" valid: \" + pRaw.valid);\n        } //end pipeline\n\n    }","id":15043,"modified_method":"/**\n     * validate raw pipeline, set valid to true member on pipeline and modules\n     * if valid log if invalid\n     *\n     * valid pipeline: valid pipeline type, modules have unique ordering\n     *\n     * valid module: module class exists, module can be loaded, module\n     * implements correct interface, module has proper methods and modifiers to\n     * create an instance\n     *\n     * @throws IngestModuleLoaderException\n     */\n    private void validate() throws IngestModuleLoaderException {\n        for (IngestModuleLoader.XmlPipelineRaw pRaw : pipelinesXML) {\n            boolean pipelineErrors = false;\n\n            //check pipelineType\n            String pipelineType = pRaw.type;\n\n            IngestModuleLoader.XmlPipelineRaw.PIPELINE_TYPE pType = null;\n\n            try {\n                pType = IngestModuleLoader.XmlPipelineRaw.getPipelineType(pipelineType);\n            } catch (IllegalArgumentException e) {\n                pipelineErrors = true;\n                logger.log(Level.SEVERE, \"Unknown pipeline type: \" + pipelineType);\n\n            }\n            //ordering store\n            Map<Integer, Integer> orderings = new HashMap<Integer, Integer>();\n\n            for (IngestModuleLoader.XmlModuleRaw pMod : pRaw.modules) {\n                boolean moduleErrors = false;\n\n                //record ordering for validation\n                int order = pMod.order;\n                if (orderings.containsKey(order)) {\n                    orderings.put(order, orderings.get(order) + 1);\n                } else {\n                    orderings.put(order, 1);\n                }\n\n                //check pipelineType\n                String modType = pMod.type;\n                if (!modType.equals(IngestModuleLoader.XmlModuleRaw.MODULE_TYPE.PLUGIN.toString())) {\n                    moduleErrors = true;\n                    logger.log(Level.SEVERE, \"Unknown module type: \" + modType);\n                }\n\n                //classes exist and interfaces implemented\n                String location = pMod.location;\n                try {\n                    //netbeans uses custom class loader, otherwise can't load classes from other modules\n\n                    final Class<?> moduleClass = Class.forName(location, false, classLoader);\n                    final Type[] intfs = moduleClass.getGenericInterfaces();\n\n                    if (intfs.length != 0 && pType != null) {\n                        //check if one of the module interfaces matches the pipeline type\n                        boolean interfaceFound = false;\n                        Class moduleMeta = ((IngestModuleMapping) pType).getIngestModuleInterface();\n                        String moduleIntNameCan = moduleMeta.getCanonicalName();\n                        String[] moduleIntNameTok = moduleIntNameCan.split(\" \");\n                        String moduleIntName = moduleIntNameTok[moduleIntNameTok.length - 1];\n                        for (Type intf : intfs) {\n                            String intNameCan = intf.toString();\n                            String[] intNameCanTok = intNameCan.split(\" \");\n                            String intName = intNameCanTok[intNameCanTok.length - 1];\n                            if (intName.equals(moduleIntName)) {\n                                interfaceFound = true;\n                                break;\n                            }\n                        }\n\n                        if (interfaceFound == false) {\n                            moduleErrors = true;\n                            logger.log(Level.WARNING, \"Module class: \" + location\n                                    + \" does not implement correct interface: \" + moduleMeta.getName()\n                                    + \" required for pipeline: \" + pType.toString()\n                                    + \", module will not be active.\");\n                        }\n                    } else {\n                        moduleErrors = true;\n                        logger.log(Level.WARNING, \"Module class: \" + location + \" does not implement any interface, module will not be active.\");\n                    }\n\n                    //if file module: check if has public static getDefault()\n                    if (pType == IngestModuleLoader.XmlPipelineRaw.PIPELINE_TYPE.FILE_ANALYSIS) {\n                        try {\n                            Method getDefaultMethod = moduleClass.getMethod(\"getDefault\");\n                            int modifiers = getDefaultMethod.getModifiers();\n                            if (!(Modifier.isPublic(modifiers) && Modifier.isStatic(modifiers))) {\n                                moduleErrors = true;\n                                logger.log(Level.WARNING, \"Module class: \" + location + \" does not implement public static getDefault() singleton method.\");\n                            }\n                            if (!getDefaultMethod.getReturnType().equals(moduleClass)) {\n                                logger.log(Level.WARNING, \"Module class: \" + location + \" getDefault() singleton method should return the module class instance: \" + moduleClass.getName());\n                            }\n\n                        } catch (NoSuchMethodException ex) {\n                            Exceptions.printStackTrace(ex);\n                        } catch (SecurityException ex) {\n                            Exceptions.printStackTrace(ex);\n                        }\n                    } //if image module: check if has public constructor with no args\n                    else if (pType == IngestModuleLoader.XmlPipelineRaw.PIPELINE_TYPE.IMAGE_ANALYSIS) {\n                        try {\n                            Constructor<?> constr = moduleClass.getConstructor();\n                            int modifiers = constr.getModifiers();\n                            if (!Modifier.isPublic(modifiers)) {\n                                moduleErrors = true;\n                                logger.log(Level.WARNING, \"Module class: \" + location + \" lacks a public default constructor.\");\n                            }\n                        } catch (NoSuchMethodException ex) {\n                            moduleErrors = true;\n                            logger.log(Level.WARNING, \"Module class: \" + location + \" lacks a public default constructor.\");\n                        } catch (SecurityException ex) {\n                            moduleErrors = true;\n                            logger.log(Level.WARNING, \"Module class: \" + location + \" lacks a public default constructor.\");\n                        }\n                    }\n\n                } catch (ClassNotFoundException ex) {\n                    moduleErrors = true;\n                    logger.log(Level.WARNING, \"Module class: \" + location + \" not found, module will not be active.\");\n                }\n\n\n                //validate ordering\n                for (int o : orderings.keySet()) {\n                    int count = orderings.get(o);\n                    if (count > 1) {\n                        pipelineErrors = true;\n                        logger.log(Level.SEVERE, \"Pipeline \" + pipelineType + \" invalid non-unique ordering of modules, order: \" + o);\n                    }\n                }\n\n                pMod.valid = !moduleErrors;\n                logger.log(Level.INFO, \"Module \" + pMod.location + \" valid: \" + pMod.valid);\n            } //end module\n\n            pRaw.valid = !pipelineErrors;\n            logger.log(Level.INFO, \"Pipeline \" + pType + \" valid: \" + pRaw.valid);\n        } //end pipeline\n\n    }","commit_id":"e5d6329ec7ec397eb7bb0d7bb7c190b231a767ac","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Set a new order of the module\n     *\n     * @param pipeLineType pipeline type where the module to reorder is present\n     * @param moduleLocation loaded module name (location), fully qualified\n     * class path\n     * @param newOrder new order to set\n     */\n    void setModuleOrder(XmlPipelineRaw.PIPELINE_TYPE pipeLineType, String moduleLocation, int newOrder) throws IngestModuleLoaderException {\n        throw new IngestModuleLoaderException(\"Not yet implemented\");\n    }","id":15044,"modified_method":"/**\n     * Set a new order of the module\n     *\n     * @param pipeLineType pipeline type where the module to reorder is present\n     * @param moduleLocation loaded module name (location), fully qualified\n     * class path\n     * @param newOrder new order to set\n     */\n    void setModuleOrder(IngestModuleLoader.XmlPipelineRaw.PIPELINE_TYPE pipeLineType, String moduleLocation, int newOrder) throws IngestModuleLoaderException {\n        throw new IngestModuleLoaderException(\"Not yet implemented\");\n    }","commit_id":"e5d6329ec7ec397eb7bb0d7bb7c190b231a767ac","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Load XML into raw pipeline representation\n     *\n     * @throws IngestModuleLoaderException\n     */\n    private void loadRawPipeline() throws IngestModuleLoaderException {\n        final Document doc = loadDoc();\n        if (doc == null) {\n            throw new IngestModuleLoaderException(\"Could not load pipeline config XML: \" + this.absFilePath);\n        }\n        Element root = doc.getDocumentElement();\n        if (root == null) {\n            String msg = \"Error loading pipeline configuration: invalid file format.\";\n            logger.log(Level.SEVERE, msg);\n            throw new IngestModuleLoaderException(msg);\n        }\n        NodeList pipelineNodes = root.getElementsByTagName(XmlPipelineRaw.XML_PIPELINE_EL);\n        int numPipelines = pipelineNodes.getLength();\n        if (numPipelines == 0) {\n            throw new IngestModuleLoaderException(\"No pipelines found in the pipeline configuration: \" + absFilePath);\n        }\n        for (int pipelineNum = 0; pipelineNum < numPipelines; ++pipelineNum) {\n            //process pipelines\n            Element pipelineEl = (Element) pipelineNodes.item(pipelineNum);\n            final String pipelineType = pipelineEl.getAttribute(XmlPipelineRaw.XML_PIPELINE_TYPE_ATTR);\n            logger.log(Level.INFO, \"Found pipeline type: \" + pipelineType);\n\n            XmlPipelineRaw pipelineRaw = new XmlPipelineRaw();\n            pipelineRaw.type = pipelineType;\n            this.pipelinesXML.add(pipelineRaw);\n\n            //process modules\n            NodeList modulesNodes = pipelineEl.getElementsByTagName(XmlModuleRaw.XML_MODULE_EL);\n            int numModules = modulesNodes.getLength();\n            if (numModules == 0) {\n                logger.log(Level.WARNING, \"Pipeline: \" + pipelineType + \" has no modules defined.\");\n            }\n            for (int moduleNum = 0; moduleNum < numModules; ++moduleNum) {\n                //process modules\n                Element moduleEl = (Element) modulesNodes.item(moduleNum);\n                final String moduleType = moduleEl.getAttribute(XmlModuleRaw.XML_MODULE_TYPE_ATTR);\n                final String moduleOrder = moduleEl.getAttribute(XmlModuleRaw.XML_MODULE_ORDER_ATTR);\n                final String moduleLoc = moduleEl.getAttribute(XmlModuleRaw.XML_MODULE_LOC_ATTR);\n                final String moduleArgs = moduleEl.getAttribute(XmlModuleRaw.XML_MODULE_ARGS_ATTR);\n                XmlModuleRaw module = new XmlModuleRaw();\n                module.arguments = moduleArgs;\n                module.location = moduleLoc;\n                try {\n                    module.order = Integer.parseInt(moduleOrder);\n                } catch (NumberFormatException e) {\n                    logger.log(Level.WARNING, \"Invalid module order, need integer: \" + moduleOrder + \", adding to end of the list\");\n                    module.order = Integer.MAX_VALUE - (numModDiscovered++);\n                    //save the current numModDiscovered\n                    ModuleSettings.setConfigSetting(IngestManager.MODULE_PROPERTIES, CUR_MODULES_DISCOVERED_SETTING, Integer.toString(numModDiscovered));\n\n                }\n                module.type = moduleType;\n                pipelineRaw.modules.add(module);\n            }\n\n        }\n\n    }","id":15045,"modified_method":"/**\n     * Load XML into raw pipeline representation\n     *\n     * @throws IngestModuleLoaderException\n     */\n    private void loadRawPipeline() throws IngestModuleLoaderException {\n        final Document doc = loadDoc();\n        if (doc == null) {\n            throw new IngestModuleLoaderException(\"Could not load pipeline config XML: \" + this.absFilePath);\n        }\n        Element root = doc.getDocumentElement();\n        if (root == null) {\n            String msg = \"Error loading pipeline configuration: invalid file format.\";\n            logger.log(Level.SEVERE, msg);\n            throw new IngestModuleLoaderException(msg);\n        }\n        NodeList pipelineNodes = root.getElementsByTagName(IngestModuleLoader.XmlPipelineRaw.XML_PIPELINE_EL);\n        int numPipelines = pipelineNodes.getLength();\n        if (numPipelines == 0) {\n            throw new IngestModuleLoaderException(\"No pipelines found in the pipeline configuration: \" + absFilePath);\n        }\n        for (int pipelineNum = 0; pipelineNum < numPipelines; ++pipelineNum) {\n            //process pipelines\n            Element pipelineEl = (Element) pipelineNodes.item(pipelineNum);\n            final String pipelineType = pipelineEl.getAttribute(IngestModuleLoader.XmlPipelineRaw.XML_PIPELINE_TYPE_ATTR);\n            logger.log(Level.INFO, \"Found pipeline type: \" + pipelineType);\n\n            IngestModuleLoader.XmlPipelineRaw pipelineRaw = new IngestModuleLoader.XmlPipelineRaw();\n            pipelineRaw.type = pipelineType;\n            this.pipelinesXML.add(pipelineRaw);\n\n            //process modules\n            NodeList modulesNodes = pipelineEl.getElementsByTagName(IngestModuleLoader.XmlModuleRaw.XML_MODULE_EL);\n            int numModules = modulesNodes.getLength();\n            if (numModules == 0) {\n                logger.log(Level.WARNING, \"Pipeline: \" + pipelineType + \" has no modules defined.\");\n            }\n            for (int moduleNum = 0; moduleNum < numModules; ++moduleNum) {\n                //process modules\n                Element moduleEl = (Element) modulesNodes.item(moduleNum);\n                final String moduleType = moduleEl.getAttribute(IngestModuleLoader.XmlModuleRaw.XML_MODULE_TYPE_ATTR);\n                final String moduleOrder = moduleEl.getAttribute(IngestModuleLoader.XmlModuleRaw.XML_MODULE_ORDER_ATTR);\n                final String moduleLoc = moduleEl.getAttribute(IngestModuleLoader.XmlModuleRaw.XML_MODULE_LOC_ATTR);\n                final String moduleArgs = moduleEl.getAttribute(IngestModuleLoader.XmlModuleRaw.XML_MODULE_ARGS_ATTR);\n                IngestModuleLoader.XmlModuleRaw module = new IngestModuleLoader.XmlModuleRaw();\n                module.arguments = moduleArgs;\n                module.location = moduleLoc;\n                try {\n                    module.order = Integer.parseInt(moduleOrder);\n                } catch (NumberFormatException e) {\n                    logger.log(Level.WARNING, \"Invalid module order, need integer: \" + moduleOrder + \", adding to end of the list\");\n                    module.order = Integer.MAX_VALUE - (numModDiscovered++);\n                    //save the current numModDiscovered\n                    ModuleSettings.setConfigSetting(IngestManager.MODULE_PROPERTIES, CUR_MODULES_DISCOVERED_SETTING, Integer.toString(numModDiscovered));\n\n                }\n                module.type = moduleType;\n                pipelineRaw.modules.add(module);\n            }\n\n        }\n\n    }","commit_id":"e5d6329ec7ec397eb7bb0d7bb7c190b231a767ac","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private IngestModuleLoader() {\n        pipelinesXML = new ArrayList<XmlPipelineRaw>();\n        filePipeline = new ArrayList<IngestModuleAbstractFile>();\n        imagePipeline = new ArrayList<IngestModuleImage>();\n        dateFormatter = new SimpleDateFormat(DATE_FORMAT);\n\n        String numModDiscoveredStr = ModuleSettings.getConfigSetting(IngestManager.MODULE_PROPERTIES, CUR_MODULES_DISCOVERED_SETTING);\n        if (numModDiscoveredStr != null) {\n            try {\n                numModDiscovered = Integer.valueOf(numModDiscoveredStr);\n            } catch (NumberFormatException e) {\n                numModDiscovered = 0;\n                logger.log(Level.WARNING, \"Could not parse numModDiscovered setting, defaulting to 0\", e);\n            }\n        }\n\n        pcs = new PropertyChangeSupport(this);\n        registerModulesChange();\n    }","id":15046,"modified_method":"private IngestModuleLoader() {\n        pipelinesXML = new ArrayList<IngestModuleLoader.XmlPipelineRaw>();\n        filePipeline = new ArrayList<IngestModuleAbstractFile>();\n        imagePipeline = new ArrayList<IngestModuleImage>();\n        dateFormatter = new SimpleDateFormat(DATE_FORMAT);\n\n        String numModDiscoveredStr = ModuleSettings.getConfigSetting(IngestManager.MODULE_PROPERTIES, CUR_MODULES_DISCOVERED_SETTING);\n        if (numModDiscoveredStr != null) {\n            try {\n                numModDiscovered = Integer.valueOf(numModDiscoveredStr);\n            } catch (NumberFormatException e) {\n                numModDiscovered = 0;\n                logger.log(Level.WARNING, \"Could not parse numModDiscovered setting, defaulting to 0\", e);\n            }\n        }\n\n        pcs = new PropertyChangeSupport(this);\n        registerModulesChange();\n    }","commit_id":"e5d6329ec7ec397eb7bb0d7bb7c190b231a767ac","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private Document loadDoc() {\n        DocumentBuilderFactory builderFactory =\n                DocumentBuilderFactory.newInstance();\n\n        Document ret = null;\n\n\n        try {\n            DocumentBuilder builder = builderFactory.newDocumentBuilder();\n            ret = builder.parse(\n                    new FileInputStream(absFilePath));\n        } catch (ParserConfigurationException e) {\n            logger.log(Level.SEVERE, \"Error loading pipeline configuration: can't initialize parser.\", e);\n\n        } catch (SAXException e) {\n            logger.log(Level.SEVERE, \"Error loading pipeline configuration: can't parse XML.\", e);\n\n        } catch (IOException e) {\n            //error reading file\n            logger.log(Level.SEVERE, \"Error loading pipeline configuration: can't read file.\", e);\n\n        }\n        try{\n            PlatformUtil.xmlIsValid(ret, PlatformUtil.pipelineXSD);\n        }\n        catch(SAXException e){\n            logger.log(Level.SEVERE, \"Error loading pipeine configuration: Could not validate XML against pipeline_config.xsd\", e);\n        }\n        return ret;\n\n    }","id":15047,"modified_method":"private Document loadDoc() {\n        DocumentBuilderFactory builderFactory =\n                DocumentBuilderFactory.newInstance();\n\n        Document ret = null;\n\n\n        try {\n            DocumentBuilder builder = builderFactory.newDocumentBuilder();\n            ret = builder.parse(\n                    new FileInputStream(absFilePath));\n        } catch (ParserConfigurationException e) {\n            logger.log(Level.SEVERE, \"Error loading pipeline configuration: can't initialize parser.\", e);\n\n        } catch (SAXException e) {\n            logger.log(Level.SEVERE, \"Error loading pipeline configuration: can't parse XML.\", e);\n\n        } catch (IOException e) {\n            //error reading file\n            logger.log(Level.SEVERE, \"Error loading pipeline configuration: can't read file.\", e);\n\n        }\n        if(!PlatformUtil.xmlIsValid(ret, IngestModuleLoader.class, PlatformUtil.pipelineXSD)){\n            logger.log(Level.SEVERE, \"Error loading pipeine configuration: Could not validate XML against \"+ PlatformUtil.pipelineXSD);\n            return null;\n        }\n        return ret;\n\n    }","commit_id":"e5d6329ec7ec397eb7bb0d7bb7c190b231a767ac","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Instantiate valid pipeline and modules and store the module object\n     * references\n     *\n     * @throws IngestModuleLoaderException\n     */\n    @SuppressWarnings(\"unchecked\")\n    private void instantiate() throws IngestModuleLoaderException {\n\n        //clear current\n        filePipeline.clear();\n        imagePipeline.clear();\n\n        //add autodiscovered modules to pipelinesXML\n        autodiscover();\n\n        //validate all modules: from XML + just autodiscovered\n\n        validate();\n\n        for (XmlPipelineRaw pRaw : pipelinesXML) {\n            if (pRaw.valid == false) {\n                //skip invalid pipelines\n                continue;\n            }\n\n            //sort modules by order parameter, in case XML order is different\n            Collections.sort(pRaw.modules, new Comparator<XmlModuleRaw>() {\n                @Override\n                public int compare(XmlModuleRaw o1, XmlModuleRaw o2) {\n                    return Integer.valueOf(o1.order).compareTo(Integer.valueOf(o2.order));\n                }\n            });\n\n            //check pipelineType, add  to right pipeline collection\n            XmlPipelineRaw.PIPELINE_TYPE pType = XmlPipelineRaw.getPipelineType(pRaw.type);\n\n            for (XmlModuleRaw pMod : pRaw.modules) {\n                try {\n                    if (pMod.valid == false) {\n                        //skip invalid modules\n                        continue;\n                    }\n\n                    //add to right pipeline\n                    switch (pType) {\n                        case FILE_ANALYSIS:\n                            IngestModuleAbstractFile fileModuleInstance = null;\n                            final Class<IngestModuleAbstractFile> fileModuleClass =\n                                    (Class<IngestModuleAbstractFile>) Class.forName(pMod.location, true, classLoader);\n                            try {\n                                Method getDefaultMethod = fileModuleClass.getMethod(\"getDefault\");\n                                if (getDefaultMethod != null) {\n                                    fileModuleInstance = (IngestModuleAbstractFile) getDefaultMethod.invoke(null);\n                                }\n                            } catch (NoSuchMethodException ex) {\n                                logger.log(Level.WARNING, \"Validated module, but not public getDefault() found: \" + pMod.location);\n                                pMod.valid = false; //prevent from trying to load again\n                            } catch (SecurityException ex) {\n                                logger.log(Level.WARNING, \"Validated module, but not public getDefault() found: \" + pMod.location);\n                                pMod.valid = false; //prevent from trying to load again\n                            } catch (IllegalAccessException ex) {\n                                logger.log(Level.WARNING, \"Validated module, but not public getDefault() found: \" + pMod.location);\n                                pMod.valid = false; //prevent from trying to load again\n                            } catch (InvocationTargetException ex) {\n                                logger.log(Level.WARNING, \"Validated module, but not public getDefault() found: \" + pMod.location);\n                                pMod.valid = false; //prevent from trying to load again\n                            }\n                            //final IngestModuleAbstract fileModuleInstance =\n                            //      getNewIngestModuleInstance(fileModuleClass);\n                            if (fileModuleInstance != null) {\n                                //set arguments\n                                fileModuleInstance.setArguments(pMod.arguments);\n                            }\n                            filePipeline.add(fileModuleInstance);\n                            break;\n                        case IMAGE_ANALYSIS:\n                            final Class<IngestModuleImage> imageModuleClass =\n                                    (Class<IngestModuleImage>) Class.forName(pMod.location, true, classLoader);\n\n                            try {\n                                Constructor<IngestModuleImage> constr = imageModuleClass.getConstructor();\n                                IngestModuleImage imageModuleInstance = constr.newInstance();\n\n                                if (imageModuleInstance != null) {\n                                    //set arguments\n                                    imageModuleInstance.setArguments(pMod.arguments);\n                                    imagePipeline.add(imageModuleInstance);\n                                }\n\n                            } catch (NoSuchMethodException ex) {\n                                logger.log(Level.WARNING, \"Validated module, could not initialize, check for bugs in the module: \" + pMod.location, ex);\n                                pMod.valid = false;\n                            } catch (SecurityException ex) {\n                                logger.log(Level.WARNING, \"Validated module, could not initialize, check for bugs in the module: \" + pMod.location, ex);\n                                pMod.valid = false;\n                            } catch (InstantiationException ex) {\n                                logger.log(Level.WARNING, \"Validated module, could not initialize, check for bugs in the module: \" + pMod.location, ex);\n                                pMod.valid = false; //prevent from trying to load again\n                            } catch (IllegalAccessException ex) {\n                                logger.log(Level.WARNING, \"Validated module, could not initialize, check for bugs in the module: \" + pMod.location, ex);\n                                pMod.valid = false; //prevent from trying to load again\n                            } catch (IllegalArgumentException ex) {\n                                logger.log(Level.WARNING, \"Validated module, could not initialize, check for bugs in the module: \" + pMod.location, ex);\n                                pMod.valid = false; //prevent from trying to load again\n                            } catch (InvocationTargetException ex) {\n                                logger.log(Level.WARNING, \"Validated module, could not initialize, check for bugs in the module: \" + pMod.location, ex);\n                                pMod.valid = false; //prevent from trying to load again\n                            }\n\n\n                            break;\n                        default:\n                            logger.log(Level.SEVERE, \"Unexpected pipeline type to add module to: \" + pType);\n                    }\n\n\n                } catch (ClassNotFoundException ex) {\n                    logger.log(Level.SEVERE, \"Validated module, but could not load (shouldn't happen): \" + pMod.location);\n                }\n            }\n\n        } //end instantiating modules in XML\n\n\n\n    }","id":15048,"modified_method":"/**\n     * Instantiate valid pipeline and modules and store the module object\n     * references\n     *\n     * @throws IngestModuleLoaderException\n     */\n    @SuppressWarnings(\"unchecked\")\n    private void instantiate() throws IngestModuleLoaderException {\n\n        //clear current\n        filePipeline.clear();\n        imagePipeline.clear();\n\n        //add autodiscovered modules to pipelinesXML\n        autodiscover();\n\n        //validate all modules: from XML + just autodiscovered\n\n        validate();\n\n        for (IngestModuleLoader.XmlPipelineRaw pRaw : pipelinesXML) {\n            if (pRaw.valid == false) {\n                //skip invalid pipelines\n                continue;\n            }\n\n            //sort modules by order parameter, in case XML order is different\n            Collections.sort(pRaw.modules, new Comparator<IngestModuleLoader.XmlModuleRaw>() {\n                @Override\n                public int compare(IngestModuleLoader.XmlModuleRaw o1, IngestModuleLoader.XmlModuleRaw o2) {\n                    return Integer.valueOf(o1.order).compareTo(Integer.valueOf(o2.order));\n                }\n            });\n\n            //check pipelineType, add  to right pipeline collection\n            IngestModuleLoader.XmlPipelineRaw.PIPELINE_TYPE pType = IngestModuleLoader.XmlPipelineRaw.getPipelineType(pRaw.type);\n\n            for (IngestModuleLoader.XmlModuleRaw pMod : pRaw.modules) {\n                try {\n                    if (pMod.valid == false) {\n                        //skip invalid modules\n                        continue;\n                    }\n\n                    //add to right pipeline\n                    switch (pType) {\n                        case FILE_ANALYSIS:\n                            IngestModuleAbstractFile fileModuleInstance = null;\n                            final Class<IngestModuleAbstractFile> fileModuleClass =\n                                    (Class<IngestModuleAbstractFile>) Class.forName(pMod.location, true, classLoader);\n                            try {\n                                Method getDefaultMethod = fileModuleClass.getMethod(\"getDefault\");\n                                if (getDefaultMethod != null) {\n                                    fileModuleInstance = (IngestModuleAbstractFile) getDefaultMethod.invoke(null);\n                                }\n                            } catch (NoSuchMethodException ex) {\n                                logger.log(Level.WARNING, \"Validated module, but not public getDefault() found: \" + pMod.location);\n                                pMod.valid = false; //prevent from trying to load again\n                            } catch (SecurityException ex) {\n                                logger.log(Level.WARNING, \"Validated module, but not public getDefault() found: \" + pMod.location);\n                                pMod.valid = false; //prevent from trying to load again\n                            } catch (IllegalAccessException ex) {\n                                logger.log(Level.WARNING, \"Validated module, but not public getDefault() found: \" + pMod.location);\n                                pMod.valid = false; //prevent from trying to load again\n                            } catch (InvocationTargetException ex) {\n                                logger.log(Level.WARNING, \"Validated module, but not public getDefault() found: \" + pMod.location);\n                                pMod.valid = false; //prevent from trying to load again\n                            }\n                            //final IngestModuleAbstract fileModuleInstance =\n                            //      getNewIngestModuleInstance(fileModuleClass);\n                            if (fileModuleInstance != null) {\n                                //set arguments\n                                fileModuleInstance.setArguments(pMod.arguments);\n                            }\n                            filePipeline.add(fileModuleInstance);\n                            break;\n                        case IMAGE_ANALYSIS:\n                            final Class<IngestModuleImage> imageModuleClass =\n                                    (Class<IngestModuleImage>) Class.forName(pMod.location, true, classLoader);\n\n                            try {\n                                Constructor<IngestModuleImage> constr = imageModuleClass.getConstructor();\n                                IngestModuleImage imageModuleInstance = constr.newInstance();\n\n                                if (imageModuleInstance != null) {\n                                    //set arguments\n                                    imageModuleInstance.setArguments(pMod.arguments);\n                                    imagePipeline.add(imageModuleInstance);\n                                }\n\n                            } catch (NoSuchMethodException ex) {\n                                logger.log(Level.WARNING, \"Validated module, could not initialize, check for bugs in the module: \" + pMod.location, ex);\n                                pMod.valid = false;\n                            } catch (SecurityException ex) {\n                                logger.log(Level.WARNING, \"Validated module, could not initialize, check for bugs in the module: \" + pMod.location, ex);\n                                pMod.valid = false;\n                            } catch (InstantiationException ex) {\n                                logger.log(Level.WARNING, \"Validated module, could not initialize, check for bugs in the module: \" + pMod.location, ex);\n                                pMod.valid = false; //prevent from trying to load again\n                            } catch (IllegalAccessException ex) {\n                                logger.log(Level.WARNING, \"Validated module, could not initialize, check for bugs in the module: \" + pMod.location, ex);\n                                pMod.valid = false; //prevent from trying to load again\n                            } catch (IllegalArgumentException ex) {\n                                logger.log(Level.WARNING, \"Validated module, could not initialize, check for bugs in the module: \" + pMod.location, ex);\n                                pMod.valid = false; //prevent from trying to load again\n                            } catch (InvocationTargetException ex) {\n                                logger.log(Level.WARNING, \"Validated module, could not initialize, check for bugs in the module: \" + pMod.location, ex);\n                                pMod.valid = false; //prevent from trying to load again\n                            }\n\n\n                            break;\n                        default:\n                            logger.log(Level.SEVERE, \"Unexpected pipeline type to add module to: \" + pType);\n                    }\n\n\n                } catch (ClassNotFoundException ex) {\n                    logger.log(Level.SEVERE, \"Validated module, but could not load (shouldn't happen): \" + pMod.location);\n                }\n            }\n\n        } //end instantiating modules in XML\n\n\n\n    }","commit_id":"e5d6329ec7ec397eb7bb0d7bb7c190b231a767ac","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Auto-discover ingest modules in all platform modules that are \"enabled\"\n     * If discovered ingest module is not already in XML config, add it do\n     * config and add to in-memory pipeline.\n     *\n     * @throws IngestModuleLoaderException\n     */\n    @SuppressWarnings(\"unchecked\")\n    private void autodiscover() throws IngestModuleLoaderException {\n\n        Collection<? extends ModuleInfo> moduleInfos = Lookup.getDefault().lookupAll(ModuleInfo.class);\n        logger.log(Level.INFO, \"Autodiscovery, found #platform modules: \" + moduleInfos.size());\n\n        Set<URL> urls = getJarPaths(moduleInfos);\n\n        for (final ModuleInfo moduleInfo : moduleInfos) {\n            if (moduleInfo.isEnabled()) {\n                String basePackageName = moduleInfo.getCodeNameBase();\n                if (basePackageName.startsWith(\"org.netbeans\")\n                        || basePackageName.startsWith(\"org.openide\")) {\n                    //skip\n                    continue;\n                }\n\n                logger.log(Level.INFO, \"Module enabled: \" + moduleInfo.getDisplayName() + \" \" + basePackageName \n                        + \" Build version: \" + moduleInfo.getBuildVersion()\n                        + \" Spec version: \" + moduleInfo.getSpecificationVersion()\n                        + \" Impl version: \" + moduleInfo.getImplementationVersion());\n\n                ConfigurationBuilder cb = new ConfigurationBuilder();\n                cb.filterInputsBy(new FilterBuilder().include(FilterBuilder.prefix(basePackageName)));\n                cb.setUrls(urls);\n                cb.setScanners(new SubTypesScanner(), new ResourcesScanner());\n                Reflections reflections = new Reflections(cb);\n\n                Set<?> fileModules = reflections.getSubTypesOf(IngestModuleAbstractFile.class);\n                Iterator<?> it = fileModules.iterator();\n                while (it.hasNext()) {\n                    logger.log(Level.INFO, \"Found file ingest module in: \" + basePackageName + \": \" + it.next().toString());\n                }\n\n                Set<?> imageModules = reflections.getSubTypesOf(IngestModuleImage.class);\n                it = imageModules.iterator();\n                while (it.hasNext()) {\n                    logger.log(Level.INFO, \"Found image ingest module in: \" + basePackageName + \": \" + it.next().toString());\n                }\n\n                //find out which modules to add\n                //TODO check which modules to remove (which modules were uninstalled)\n                boolean modulesChanged = false;\n\n                it = fileModules.iterator();\n                while (it.hasNext()) {\n                    boolean exists = false;\n                    Class<IngestModuleAbstractFile> foundClass = (Class<IngestModuleAbstractFile>) it.next();\n\n                    for (XmlPipelineRaw rawP : pipelinesXML) {\n                        if (!rawP.type.equals(XmlPipelineRaw.PIPELINE_TYPE.FILE_ANALYSIS.toString())) {\n                            continue; //skip\n                        }\n\n                        for (XmlModuleRaw rawM : rawP.modules) {\n                            //logger.log(Level.INFO, \"CLASS NAME : \" + foundClass.getName());\n                            if (foundClass.getName().equals(rawM.location)) {\n                                exists = true;\n                                break;\n                            }\n                        }\n                        if (exists == true) {\n                            break;\n                        }\n                    }\n\n                    if (exists == false) {\n                        logger.log(Level.INFO, \"Discovered a new file module to load: \" + foundClass.getName());\n                        //ADD MODULE\n                        addModuleToRawPipeline(foundClass, XmlPipelineRaw.PIPELINE_TYPE.FILE_ANALYSIS);\n                        modulesChanged = true;\n                    }\n\n                }\n\n                it = imageModules.iterator();\n                while (it.hasNext()) {\n                    boolean exists = false;\n                    Class<IngestModuleImage> foundClass = (Class<IngestModuleImage>) it.next();\n\n                    for (XmlPipelineRaw rawP : pipelinesXML) {\n                        if (!rawP.type.equals(XmlPipelineRaw.PIPELINE_TYPE.IMAGE_ANALYSIS.toString())) {\n                            continue; //skip\n                        }\n\n\n                        for (XmlModuleRaw rawM : rawP.modules) {\n                            //logger.log(Level.INFO, \"CLASS NAME : \" + foundClass.getName());\n                            if (foundClass.getName().equals(rawM.location)) {\n                                exists = true;\n                                break;\n                            }\n                        }\n                        if (exists == true) {\n                            break;\n                        }\n                    }\n\n                    if (exists == false) {\n                        logger.log(Level.INFO, \"Discovered a new image module to load: \" + foundClass.getName());\n                        //ADD MODULE \n                        addModuleToRawPipeline(foundClass, XmlPipelineRaw.PIPELINE_TYPE.IMAGE_ANALYSIS);\n                        modulesChanged = true;\n                    }\n\n                }\n\n                if (modulesChanged) {\n                    save();\n                    pcs.firePropertyChange(Event.ModulesReloaded.toString(), 0, 1);\n                }\n\n                /*\n                 //Enumeration<URL> resources = moduleClassLoader.getResources(basePackageName);\n                 Enumeration<URL> resources = classLoader.getResources(basePackageName);\n                 while (resources.hasMoreElements()) {\n                 System.out.println(resources.nextElement());\n                 } */\n\n            } else {\n                //logger.log(Level.INFO, \"Module disabled: \" + moduleInfo.getDisplayName() );\n            }\n        }\n\n    }","id":15049,"modified_method":"/**\n     * Auto-discover ingest modules in all platform modules that are \"enabled\"\n     * If discovered ingest module is not already in XML config, add it do\n     * config and add to in-memory pipeline.\n     *\n     * @throws IngestModuleLoaderException\n     */\n    @SuppressWarnings(\"unchecked\")\n    private void autodiscover() throws IngestModuleLoaderException {\n\n        Collection<? extends ModuleInfo> moduleInfos = Lookup.getDefault().lookupAll(ModuleInfo.class);\n        logger.log(Level.INFO, \"Autodiscovery, found #platform modules: \" + moduleInfos.size());\n\n        Set<URL> urls = getJarPaths(moduleInfos);\n\n        for (final ModuleInfo moduleInfo : moduleInfos) {\n            if (moduleInfo.isEnabled()) {\n                String basePackageName = moduleInfo.getCodeNameBase();\n                if (basePackageName.startsWith(\"org.netbeans\")\n                        || basePackageName.startsWith(\"org.openide\")) {\n                    //skip\n                    continue;\n                }\n\n                logger.log(Level.INFO, \"Module enabled: \" + moduleInfo.getDisplayName() + \" \" + basePackageName \n                        + \" Build version: \" + moduleInfo.getBuildVersion()\n                        + \" Spec version: \" + moduleInfo.getSpecificationVersion()\n                        + \" Impl version: \" + moduleInfo.getImplementationVersion());\n\n                ConfigurationBuilder cb = new ConfigurationBuilder();\n                cb.filterInputsBy(new FilterBuilder().include(FilterBuilder.prefix(basePackageName)));\n                cb.setUrls(urls);\n                cb.setScanners(new SubTypesScanner(), new ResourcesScanner());\n                Reflections reflections = new Reflections(cb);\n\n                Set<?> fileModules = reflections.getSubTypesOf(IngestModuleAbstractFile.class);\n                Iterator<?> it = fileModules.iterator();\n                while (it.hasNext()) {\n                    logger.log(Level.INFO, \"Found file ingest module in: \" + basePackageName + \": \" + it.next().toString());\n                }\n\n                Set<?> imageModules = reflections.getSubTypesOf(IngestModuleImage.class);\n                it = imageModules.iterator();\n                while (it.hasNext()) {\n                    logger.log(Level.INFO, \"Found image ingest module in: \" + basePackageName + \": \" + it.next().toString());\n                }\n\n                //find out which modules to add\n                //TODO check which modules to remove (which modules were uninstalled)\n                boolean modulesChanged = false;\n\n                it = fileModules.iterator();\n                while (it.hasNext()) {\n                    boolean exists = false;\n                    Class<IngestModuleAbstractFile> foundClass = (Class<IngestModuleAbstractFile>) it.next();\n\n                    for (IngestModuleLoader.XmlPipelineRaw rawP : pipelinesXML) {\n                        if (!rawP.type.equals(IngestModuleLoader.XmlPipelineRaw.PIPELINE_TYPE.FILE_ANALYSIS.toString())) {\n                            continue; //skip\n                        }\n\n                        for (IngestModuleLoader.XmlModuleRaw rawM : rawP.modules) {\n                            //logger.log(Level.INFO, \"CLASS NAME : \" + foundClass.getName());\n                            if (foundClass.getName().equals(rawM.location)) {\n                                exists = true;\n                                break;\n                            }\n                        }\n                        if (exists == true) {\n                            break;\n                        }\n                    }\n\n                    if (exists == false) {\n                        logger.log(Level.INFO, \"Discovered a new file module to load: \" + foundClass.getName());\n                        //ADD MODULE\n                        addModuleToRawPipeline(foundClass, IngestModuleLoader.XmlPipelineRaw.PIPELINE_TYPE.FILE_ANALYSIS);\n                        modulesChanged = true;\n                    }\n\n                }\n\n                it = imageModules.iterator();\n                while (it.hasNext()) {\n                    boolean exists = false;\n                    Class<IngestModuleImage> foundClass = (Class<IngestModuleImage>) it.next();\n\n                    for (IngestModuleLoader.XmlPipelineRaw rawP : pipelinesXML) {\n                        if (!rawP.type.equals(IngestModuleLoader.XmlPipelineRaw.PIPELINE_TYPE.IMAGE_ANALYSIS.toString())) {\n                            continue; //skip\n                        }\n\n\n                        for (IngestModuleLoader.XmlModuleRaw rawM : rawP.modules) {\n                            //logger.log(Level.INFO, \"CLASS NAME : \" + foundClass.getName());\n                            if (foundClass.getName().equals(rawM.location)) {\n                                exists = true;\n                                break;\n                            }\n                        }\n                        if (exists == true) {\n                            break;\n                        }\n                    }\n\n                    if (exists == false) {\n                        logger.log(Level.INFO, \"Discovered a new image module to load: \" + foundClass.getName());\n                        //ADD MODULE \n                        addModuleToRawPipeline(foundClass, IngestModuleLoader.XmlPipelineRaw.PIPELINE_TYPE.IMAGE_ANALYSIS);\n                        modulesChanged = true;\n                    }\n\n                }\n\n                if (modulesChanged) {\n                    save();\n                    pcs.firePropertyChange(IngestModuleLoader.Event.ModulesReloaded.toString(), 0, 1);\n                }\n\n                /*\n                 //Enumeration<URL> resources = moduleClassLoader.getResources(basePackageName);\n                 Enumeration<URL> resources = classLoader.getResources(basePackageName);\n                 while (resources.hasMoreElements()) {\n                 System.out.println(resources.nextElement());\n                 } */\n\n            } else {\n                //logger.log(Level.INFO, \"Module disabled: \" + moduleInfo.getDisplayName() );\n            }\n        }\n\n    }","commit_id":"e5d6329ec7ec397eb7bb0d7bb7c190b231a767ac","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n         * get pipeline type for string mapping to type toString() method\n         *\n         * @param s string equals to one of the types toString() representation\n         * @return matching type\n         */\n        static PIPELINE_TYPE getPipelineType(String s) throws IllegalArgumentException {\n            PIPELINE_TYPE[] types = PIPELINE_TYPE.values();\n            for (int i = 0; i < types.length; ++i) {\n                if (types[i].toString().equals(s)) {\n                    return types[i];\n                }\n            }\n            throw new IllegalArgumentException(\"No PIPELINE_TYPE for string: \" + s);\n        }","id":15050,"modified_method":"/**\n         * get pipeline type for string mapping to type toString() method\n         *\n         * @param s string equals to one of the types toString() representation\n         * @return matching type\n         */\n        static IngestModuleLoader.XmlPipelineRaw.PIPELINE_TYPE getPipelineType(String s) throws IllegalArgumentException {\n            IngestModuleLoader.XmlPipelineRaw.PIPELINE_TYPE[] types = IngestModuleLoader.XmlPipelineRaw.PIPELINE_TYPE.values();\n            for (int i = 0; i < types.length; ++i) {\n                if (types[i].toString().equals(s)) {\n                    return types[i];\n                }\n            }\n            throw new IllegalArgumentException(\"No PIPELINE_TYPE for string: \" + s);\n        }","commit_id":"e5d6329ec7ec397eb7bb0d7bb7c190b231a767ac","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Save the current in memory pipeline config, including autodiscovered\n     * modules\n     *\n     * @throws IngestModuleLoaderException\n     */\n    public void save() throws IngestModuleLoaderException {\n        DocumentBuilderFactory dbfac = DocumentBuilderFactory.newInstance();\n\n        try {\n            DocumentBuilder docBuilder = dbfac.newDocumentBuilder();\n            Document doc = docBuilder.newDocument();\n\n\n            Comment comment = doc.createComment(\"Saved by: \" + getClass().getName()\n                    + \" on: \" + dateFormatter.format(System.currentTimeMillis()));\n            doc.appendChild(comment);\n            Element rootEl = doc.createElement(XmlPipelineRaw.XML_PIPELINE_ROOT);\n            doc.appendChild(rootEl);\n\n            for (XmlPipelineRaw rawP : this.pipelinesXML) {\n                Element pipelineEl = doc.createElement(XmlPipelineRaw.XML_PIPELINE_EL);\n                pipelineEl.setAttribute(XmlPipelineRaw.XML_PIPELINE_TYPE_ATTR, rawP.type);\n                rootEl.appendChild(pipelineEl);\n\n                for (XmlModuleRaw rawM : rawP.modules) {\n                    Element moduleEl = doc.createElement(XmlModuleRaw.XML_MODULE_EL);\n\n                    moduleEl.setAttribute(XmlModuleRaw.XML_MODULE_LOC_ATTR, rawM.location);\n                    moduleEl.setAttribute(XmlModuleRaw.XML_MODULE_TYPE_ATTR, rawM.type);\n                    moduleEl.setAttribute(XmlModuleRaw.XML_MODULE_ORDER_ATTR, Integer.toString(rawM.order));\n                    moduleEl.setAttribute(XmlModuleRaw.XML_MODULE_TYPE_ATTR, rawM.type);\n\n                    pipelineEl.appendChild(moduleEl);\n                }\n            }\n\n            saveDoc(doc);\n            logger.log(Level.INFO, \"Pipeline configuration saved to: \" + this.absFilePath);\n        } catch (ParserConfigurationException e) {\n            logger.log(Level.SEVERE, \"Error saving pipeline config XML: can't initialize parser.\", e);\n        }\n\n    }","id":15051,"modified_method":"/**\n     * Save the current in memory pipeline config, including autodiscovered\n     * modules\n     *\n     * @throws IngestModuleLoaderException\n     */\n    public void save() throws IngestModuleLoaderException {\n        DocumentBuilderFactory dbfac = DocumentBuilderFactory.newInstance();\n\n        try {\n            DocumentBuilder docBuilder = dbfac.newDocumentBuilder();\n            Document doc = docBuilder.newDocument();\n\n\n            Comment comment = doc.createComment(\"Saved by: \" + getClass().getName()\n                    + \" on: \" + dateFormatter.format(System.currentTimeMillis()));\n            doc.appendChild(comment);\n            Element rootEl = doc.createElement(IngestModuleLoader.XmlPipelineRaw.XML_PIPELINE_ROOT);\n            doc.appendChild(rootEl);\n\n            for (IngestModuleLoader.XmlPipelineRaw rawP : this.pipelinesXML) {\n                Element pipelineEl = doc.createElement(IngestModuleLoader.XmlPipelineRaw.XML_PIPELINE_EL);\n                pipelineEl.setAttribute(IngestModuleLoader.XmlPipelineRaw.XML_PIPELINE_TYPE_ATTR, rawP.type);\n                rootEl.appendChild(pipelineEl);\n\n                for (IngestModuleLoader.XmlModuleRaw rawM : rawP.modules) {\n                    Element moduleEl = doc.createElement(IngestModuleLoader.XmlModuleRaw.XML_MODULE_EL);\n\n                    moduleEl.setAttribute(IngestModuleLoader.XmlModuleRaw.XML_MODULE_LOC_ATTR, rawM.location);\n                    moduleEl.setAttribute(IngestModuleLoader.XmlModuleRaw.XML_MODULE_TYPE_ATTR, rawM.type);\n                    moduleEl.setAttribute(IngestModuleLoader.XmlModuleRaw.XML_MODULE_ORDER_ATTR, Integer.toString(rawM.order));\n                    moduleEl.setAttribute(IngestModuleLoader.XmlModuleRaw.XML_MODULE_TYPE_ATTR, rawM.type);\n\n                    pipelineEl.appendChild(moduleEl);\n                }\n            }\n\n            saveDoc(doc);\n            logger.log(Level.INFO, \"Pipeline configuration saved to: \" + this.absFilePath);\n        } catch (ParserConfigurationException e) {\n            logger.log(Level.SEVERE, \"Error saving pipeline config XML: can't initialize parser.\", e);\n        }\n\n    }","commit_id":"e5d6329ec7ec397eb7bb0d7bb7c190b231a767ac","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private Document loadDoc() {\n        DocumentBuilderFactory builderFactory =\n                DocumentBuilderFactory.newInstance();\n\n        Document ret = null;\n\n\n        try {\n            DocumentBuilder builder = builderFactory.newDocumentBuilder();\n            ret = builder.parse(\n                    new FileInputStream(filePath));\n        } catch (ParserConfigurationException e) {\n            logger.log(Level.SEVERE, \"Error loading keyword list: can't initialize parser.\", e);\n\n        } catch (SAXException e) {\n            logger.log(Level.SEVERE, \"Error loading keyword list: can't parse XML.\", e);\n\n        } catch (IOException e) {\n            //error reading file\n            logger.log(Level.SEVERE, \"Error loading keyword list: can't read file.\", e);\n\n        }\n         try{\n            PlatformUtil.xmlIsValid(ret, PlatformUtil.keywordXSD);\n        }\n        catch(SAXException e){\n            logger.log(Level.SEVERE, \"Error loading Keyword lists: Could not validate against KeywordSchema.xsd\", e);\n        }\n        return ret;\n\n    }","id":15052,"modified_method":"private Document loadDoc() {\n        DocumentBuilderFactory builderFactory =\n                DocumentBuilderFactory.newInstance();\n\n        Document ret = null;\n\n\n        try {\n            DocumentBuilder builder = builderFactory.newDocumentBuilder();\n            ret = builder.parse(\n                    new FileInputStream(filePath));\n        } catch (ParserConfigurationException e) {\n            logger.log(Level.SEVERE, \"Error loading keyword list: can't initialize parser.\", e);\n\n        } catch (SAXException e) {\n            logger.log(Level.SEVERE, \"Error loading keyword list: can't parse XML.\", e);\n\n        } catch (IOException e) {\n            //error reading file\n            logger.log(Level.SEVERE, \"Error loading keyword list: can't read file.\", e);\n\n        }\n        if(! PlatformUtil.xmlIsValid(ret, KeywordSearchListsXML.class, PlatformUtil.keywordXSD)){\n            logger.log(Level.SEVERE, \"Error loading keyword lists: could not validate against \" + PlatformUtil.keywordXSD);\n            return null;\n        }\n        \n        return ret;\n\n    }","commit_id":"e5d6329ec7ec397eb7bb0d7bb7c190b231a767ac","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/** Utility to evaluate XML files against pre-defined schema files.\n     *  The schema files are extracted automatically when this function is called, the xml being validated is not.\n     *  Be sure the xml file is already extracted otherwise the return will be false.\n     * @param xmlfile The xml file to validate\n     * @param type The type of schema to validate against, available from PlatformUtil.{keywordXSD, hashsetXSD, searchEngineXSD, pipelineXSD}\n     */\n    public static boolean xmlIsValid(Document doc, String type) throws SAXException{\n           DOMSource dms = new DOMSource(doc);\n           return xmlIsValid(dms, type);\n    }","id":15053,"modified_method":"/** Utility to evaluate XML files against pre-defined schema files.\n     *  The schema files are extracted automatically when this function is called, the xml being validated is not.\n     *  Be sure the xml file is already extracted otherwise the return will be false.\n     * @param xmlfile The xml file to validate\n     * @param type The type of schema to validate against, available from PlatformUtil.{keywordXSD, hashsetXSD, searchEngineXSD, pipelineXSD}\n     */\n    public static boolean xmlIsValid(Document doc, Class clazz, String type){\n           DOMSource dms = new DOMSource(doc);\n           return xmlIsValid(dms, clazz, type);\n    }","commit_id":"e5d6329ec7ec397eb7bb0d7bb7c190b231a767ac","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/** Utility to evaluate XML files against pre-defined schema files.\n     *  The schema files are extracted automatically when this function is called, the xml being validated is not.\n     *  Be sure the xml file is already extracted otherwise the return will be false.\n     * @param xmlfile The xml file to validate, in DOMSource format\n     * @param type The type of schema to validate against, available from PlatformUtil.{keywordXSD, hashsetXSD, searchEngineXSD, pipelineXSD}\n     */\n    public static boolean xmlIsValid(DOMSource xmlfile, String type) throws SAXException{\n        if(!type.equals(hashsetXSD) && !type.equals(keywordXSD) && !type.equals(searchEngineXSD) && !type.equals(pipelineXSD)){\n             return false;\n        }\n      try{\n        extractResourceToUserConfigDir(PlatformUtil.class, type);\n        File schemaLoc = new File(PlatformUtil.getUserConfigDirectory() + File.separator + type);\n        SchemaFactory schm = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);\n        Schema schema = schm.newSchema(schemaLoc);\n        Validator validator = schema.newValidator();\n        DOMResult result = new DOMResult();\n        validator.validate(xmlfile, result);\n        return true;\n      }\n      catch(IOException e){\n            Logger.getLogger(PlatformUtil.class.getName()).log(Level.WARNING, \"Unable to load XML file [\" + xmlfile.toString() + \"] of type [\"+type+\"]\", e);\n            return false;\n        }\n    }","id":15054,"modified_method":"/** Utility to evaluate XML files against pre-defined schema files.\n     *  The schema files are extracted automatically when this function is called, the xml being validated is not.\n     *  Be sure the xml file is already extracted otherwise the return will be false.\n     * @param xmlfile The xml file to validate, in DOMSource format\n     * @param type The type of schema to validate against, available from PlatformUtil.{keywordXSD, hashsetXSD, searchEngineXSD, pipelineXSD}\n     */\n    public static boolean xmlIsValid(DOMSource xmlfile, Class clazz, String type) {\n        if(!type.equals(hashsetXSD) && !type.equals(keywordXSD) && !type.equals(searchEngineXSD) && !type.equals(pipelineXSD)){\n             return false;\n        }\n      try{\n        extractResourceToUserConfigDir(clazz, type);\n        File schemaLoc = new File(PlatformUtil.getUserConfigDirectory() + File.separator + type);\n        SchemaFactory schm = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);\n        try{\n        Schema schema = schm.newSchema(schemaLoc);\n        Validator validator = schema.newValidator();\n        DOMResult result = new DOMResult();\n        validator.validate(xmlfile, result);\n        return true;\n        }\n        catch(SAXException e){\n            Logger.getLogger(PlatformUtil.class.getName()).log(Level.WARNING, \"Unable to validate XML file.\", e);\n            return false;\n        }\n      }\n      catch(IOException e){\n            Logger.getLogger(PlatformUtil.class.getName()).log(Level.WARNING, \"Unable to load XML file [\" + xmlfile.toString() + \"] of type [\"+type+\"]\", e);\n            return false;\n        }\n    }","commit_id":"e5d6329ec7ec397eb7bb0d7bb7c190b231a767ac","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void init2(){\n        try{\n           String path = PlatformUtil.getUserConfigDirectory() + File.separator + XMLFile;\n           File f = new File(path);\n           System.out.println(\"Load successful\");\n           DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n           DocumentBuilder db = dbf.newDocumentBuilder();\n           Document xml = db.parse(f);\n           xmlinput = xml; \n\n           if(!PlatformUtil.xmlIsValid(xml, PlatformUtil.searchEngineXSD)){\n              logger.log(Level.WARNING, \"Could not parse validate XML file. Terminating SEUQA.\");\n           }\n           else{\n               try{\n                   createEngines();\n                   getSearchEngineNames();\n               }\n               catch(Exception e){\n                   logger.log(Level.WARNING, \"Unable to create Search Engines!\", e);\n               }\n           }\n        }\n        catch(Exception e){\n            logger.log(Level.WARNING, \"Was not able to load SEUQAMappings.xml\", e);\n        }\n    }","id":15055,"modified_method":"private void init2(){\n        try{\n           String path = PlatformUtil.getUserConfigDirectory() + File.separator + XMLFile;\n           File f = new File(path);\n           System.out.println(\"Load successful\");\n           DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n           DocumentBuilder db = dbf.newDocumentBuilder();\n           Document xml = db.parse(f);\n           xmlinput = xml; \n\n           if(!PlatformUtil.xmlIsValid(xml, SearchEngineURLQueryAnalyzer.class, PlatformUtil.searchEngineXSD)){\n              logger.log(Level.WARNING, \"Error loading Search Engines: could not validate against \" + PlatformUtil.searchEngineXSD);\n           }\n           else{\n               try{\n                   createEngines();\n                   getSearchEngineNames();\n               }\n               catch(Exception e){\n                   logger.log(Level.WARNING, \"Unable to create Search Engines!\", e);\n               }\n           }\n        }\n        catch(Exception e){\n            logger.log(Level.WARNING, \"Was not able to load SEUQAMappings.xml\", e);\n        }\n    }","commit_id":"e5d6329ec7ec397eb7bb0d7bb7c190b231a767ac","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Attempts to extract the query from a URL.\n     *\n     * @param url The URL string to be dissected.\n     * @return The extracted search query.\n     */\n       \n\n private String extractSearchEngineQuery(String url){\n      String x = \"NoQuery\";\n      SearchEngine eng = getSearchEngine(url);\n        for(Map.Entry<String,String> kvp : eng.getSplits()){\n            if(url.contains(kvp.getKey())){\n                x = split2(url, kvp.getValue());\n                break;\n            }\n        }\n        try { //try to decode the url\n            String decoded = URLDecoder.decode(x, \"UTF-8\");\n            return decoded;\n        } catch (UnsupportedEncodingException uee) { //if it fails, return the encoded string\n            logger.log(Level.FINE, \"Error during URL decoding \", uee);\n            return x;\n        }\n    }","id":15056,"modified_method":"/**\n     * Attempts to extract the query from a URL.\n     *\n     * @param url The URL string to be dissected.\n     * @return The extracted search query.\n     */\n       \n\n private String extractSearchEngineQuery(String url){\n      String x = \"NoQuery\";\n      SearchEngineURLQueryAnalyzer.SearchEngine eng = getSearchEngine(url);\n        for(Map.Entry<String,String> kvp : eng.getSplits()){\n            if(url.contains(kvp.getKey())){\n                x = split2(url, kvp.getValue());\n                break;\n            }\n        }\n        try { //try to decode the url\n            String decoded = URLDecoder.decode(x, \"UTF-8\");\n            return decoded;\n        } catch (UnsupportedEncodingException uee) { //if it fails, return the encoded string\n            logger.log(Level.FINE, \"Error during URL decoding \", uee);\n            return x;\n        }\n    }","commit_id":"e5d6329ec7ec397eb7bb0d7bb7c190b231a767ac","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void createEngines(){\n        NodeList nlist = xmlinput.getElementsByTagName(\"SearchEngine\");\n        SearchEngine[] listEngines = new SearchEngine[nlist.getLength()];\n        for(int i = 0;i < nlist.getLength(); i++){\n            try{\n                NamedNodeMap nnm = nlist.item(i).getAttributes();\n                \n                String EngineName = nnm.getNamedItem(\"engine\").getNodeValue();\n                String EnginedomainSubstring = nnm.getNamedItem(\"domainSubstring\").getNodeValue();\n                Map<String,String> splits = new HashMap<String,String>();\n                \n                NodeList listSplits = xmlinput.getElementsByTagName(\"splitToken\");\n                for(int k = 0; k<listSplits.getLength();k++){\n                   if(listSplits.item(k).getParentNode().getAttributes().getNamedItem(\"engine\").getNodeValue().equals(EngineName)){\n                       splits.put(listSplits.item(k).getAttributes().getNamedItem(\"plainToken\").getNodeValue(), listSplits.item(k).getAttributes().getNamedItem(\"regexToken\").getNodeValue());\n                   }\n                }\n                \n                SearchEngine Se = new SearchEngine(EngineName, EnginedomainSubstring, splits);\n                System.out.println(\"Search Engine: \" + Se.toString());\n                listEngines[i] = Se;\n            }\n            catch(Exception e){\n               logger.log(Level.WARNING, \"Unable to create search engines!\", e);\n            }\n        }\n        engines = listEngines;\n    }","id":15057,"modified_method":"private void createEngines(){\n        NodeList nlist = xmlinput.getElementsByTagName(\"SearchEngine\");\n        SearchEngineURLQueryAnalyzer.SearchEngine[] listEngines = new SearchEngineURLQueryAnalyzer.SearchEngine[nlist.getLength()];\n        for(int i = 0;i < nlist.getLength(); i++){\n            try{\n                NamedNodeMap nnm = nlist.item(i).getAttributes();\n                \n                String EngineName = nnm.getNamedItem(\"engine\").getNodeValue();\n                String EnginedomainSubstring = nnm.getNamedItem(\"domainSubstring\").getNodeValue();\n                Map<String,String> splits = new HashMap<String,String>();\n                \n                NodeList listSplits = xmlinput.getElementsByTagName(\"splitToken\");\n                for(int k = 0; k<listSplits.getLength();k++){\n                   if(listSplits.item(k).getParentNode().getAttributes().getNamedItem(\"engine\").getNodeValue().equals(EngineName)){\n                       splits.put(listSplits.item(k).getAttributes().getNamedItem(\"plainToken\").getNodeValue(), listSplits.item(k).getAttributes().getNamedItem(\"regexToken\").getNodeValue());\n                   }\n                }\n                \n                SearchEngineURLQueryAnalyzer.SearchEngine Se = new SearchEngineURLQueryAnalyzer.SearchEngine(EngineName, EnginedomainSubstring, splits);\n                System.out.println(\"Search Engine: \" + Se.toString());\n                listEngines[i] = Se;\n            }\n            catch(Exception e){\n               logger.log(Level.WARNING, \"Unable to create search engines!\", e);\n            }\n        }\n        engines = listEngines;\n    }","commit_id":"e5d6329ec7ec397eb7bb0d7bb7c190b231a767ac","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"@Override\n    public ModuleType getType() {\n        return ModuleType.Image;\n    }","id":15058,"modified_method":"@Override\n    public IngestModuleAbstract.ModuleType getType() {\n        return IngestModuleAbstract.ModuleType.Image;\n    }","commit_id":"e5d6329ec7ec397eb7bb0d7bb7c190b231a767ac","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private String getTotals() {\n        String total = \"\";\n        if (engines == null) {\n            return total;\n        }\n        for (SearchEngine se : engines) {\n           total+= se.getEngineName() + \" : \"+ se.getTotal() + \"\\n\";\n        }\n        return total;\n    }","id":15059,"modified_method":"private String getTotals() {\n        String total = \"\";\n        if (engines == null) {\n            return total;\n        }\n        for (SearchEngineURLQueryAnalyzer.SearchEngine se : engines) {\n           total+= se.getEngineName() + \" : \"+ se.getTotal() + \"\\n\";\n        }\n        return total;\n    }","commit_id":"e5d6329ec7ec397eb7bb0d7bb7c190b231a767ac","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void getURLs(Image image, IngestImageWorkerController controller) {\n        int totalQueries = 0;\n        try {\n            //from blackboard_artifacts\n            Collection<BlackboardArtifact> listArtifacts = currentCase.getSleuthkitCase().getMatchingArtifacts(\"WHERE (`artifact_type_id` = '\" + ARTIFACT_TYPE.TSK_WEB_BOOKMARK.getTypeID()\n                    + \"' OR `artifact_type_id` = '\" + ARTIFACT_TYPE.TSK_WEB_HISTORY.getTypeID() + \"') \");  //List of every 'web_history' and 'bookmark' artifact\n            logger.info(\"Processing \" + listArtifacts.size() + \" blackboard artifacts.\");\n            getAll:\n            for (BlackboardArtifact artifact : listArtifacts) {\n                //initializing default attributes\n                String query = \"\";\n                String searchEngineDomain = \"\";\n                String browser = \"\";\n                long last_accessed = -1;\n                //from tsk_files\n                FsContent fs = this.extractFiles(image, \"select * from tsk_files where `obj_id` = '\" + artifact.getObjectID() + \"'\").get(0); //associated file\n                SearchEngine se = NullEngine;\n                //from blackboard_attributes\n                Collection<BlackboardAttribute> listAttributes = currentCase.getSleuthkitCase().getMatchingAttributes(\"Where `artifact_id` = \" + artifact.getArtifactID());\n                getAttributes:\n                for (BlackboardAttribute attribute : listAttributes) {\n                    if (controller.isCancelled()) {\n                        break getAll;       //User cancled the process.\n                    }\n                    if (attribute.getAttributeTypeID() == BlackboardAttribute.ATTRIBUTE_TYPE.TSK_URL.getTypeID()) {\n                        final String urlString = attribute.getValueString();\n                        se = getSearchEngine(urlString);\n                        if (!se.equals(NullEngine)) {\n                            query = extractSearchEngineQuery(attribute.getValueString());   \n                            if (query.equals(\"NoQuery\") || query.equals(\"\")) {   //False positive match, artifact was not a query.\n                                break getAttributes;\n                            }\n                        } else if (se.equals(NullEngine)) {\n                            break getAttributes;    //could not determine type. Will move onto next artifact\n                        }\n                    } else if (attribute.getAttributeTypeID() == BlackboardAttribute.ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID()) {\n                        browser = attribute.getValueString();\n                    }\n                    else if (attribute.getAttributeTypeID() == BlackboardAttribute.ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID()) {\n                        searchEngineDomain = attribute.getValueString();\n                    }\n                    else if (attribute.getAttributeTypeID() == BlackboardAttribute.ATTRIBUTE_TYPE.TSK_DATETIME_ACCESSED.getTypeID()) {\n                        last_accessed = attribute.getValueLong();\n                    }\n                }\n\n                if (!se.equals(NullEngine) && !query.equals(\"NoQuery\") && !query.equals(\"\")) {\n                    try {\n                        \n                        Collection<BlackboardAttribute> bbattributes = new ArrayList<BlackboardAttribute>();\n                        bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), MODULE_NAME, searchEngineDomain));\n                        bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_TEXT.getTypeID(), MODULE_NAME, query));\n                        bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID(), MODULE_NAME, browser));\n                        bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME_ACCESSED.getTypeID(), MODULE_NAME, last_accessed));\n                        this.addArtifact(ARTIFACT_TYPE.TSK_WEB_SEARCH_QUERY, fs, bbattributes);\n                        se.increment();\n                        ++totalQueries;\n                    } catch (Exception e) {\n                        logger.log(Level.WARNING, \"Error during add artifact.\", e);\n                        this.addErrorMessage(this.getName() + \": Error while adding artifact\");\n                    }\n                    services.fireModuleDataEvent(new ModuleDataEvent(\"RecentActivity\", BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_SEARCH_QUERY));\n                }\n\n\n            }\n        } catch (Exception e) {\n            logger.log(Level.WARNING, \"Encountered error retrieving artifacts: \", e);\n        } finally {\n            if (controller.isCancelled()) {\n                logger.info(\"Operation terminated by user.\");\n            }\n            logger.info(\"Extracted \" + totalQueries + \" queries from the blackboard\");\n        }\n    }","id":15060,"modified_method":"private void getURLs(Image image, IngestImageWorkerController controller) {\n        int totalQueries = 0;\n        try {\n            //from blackboard_artifacts\n            Collection<BlackboardArtifact> listArtifacts = currentCase.getSleuthkitCase().getMatchingArtifacts(\"WHERE (`artifact_type_id` = '\" + ARTIFACT_TYPE.TSK_WEB_BOOKMARK.getTypeID()\n                    + \"' OR `artifact_type_id` = '\" + ARTIFACT_TYPE.TSK_WEB_HISTORY.getTypeID() + \"') \");  //List of every 'web_history' and 'bookmark' artifact\n            logger.info(\"Processing \" + listArtifacts.size() + \" blackboard artifacts.\");\n            getAll:\n            for (BlackboardArtifact artifact : listArtifacts) {\n                //initializing default attributes\n                String query = \"\";\n                String searchEngineDomain = \"\";\n                String browser = \"\";\n                long last_accessed = -1;\n                //from tsk_files\n                FsContent fs = this.extractFiles(image, \"select * from tsk_files where `obj_id` = '\" + artifact.getObjectID() + \"'\").get(0); //associated file\n                SearchEngineURLQueryAnalyzer.SearchEngine se = NullEngine;\n                //from blackboard_attributes\n                Collection<BlackboardAttribute> listAttributes = currentCase.getSleuthkitCase().getMatchingAttributes(\"Where `artifact_id` = \" + artifact.getArtifactID());\n                getAttributes:\n                for (BlackboardAttribute attribute : listAttributes) {\n                    if (controller.isCancelled()) {\n                        break getAll;       //User cancled the process.\n                    }\n                    if (attribute.getAttributeTypeID() == BlackboardAttribute.ATTRIBUTE_TYPE.TSK_URL.getTypeID()) {\n                        final String urlString = attribute.getValueString();\n                        se = getSearchEngine(urlString);\n                        if (!se.equals(NullEngine)) {\n                            query = extractSearchEngineQuery(attribute.getValueString());   \n                            if (query.equals(\"NoQuery\") || query.equals(\"\")) {   //False positive match, artifact was not a query.\n                                break getAttributes;\n                            }\n                        } else if (se.equals(NullEngine)) {\n                            break getAttributes;    //could not determine type. Will move onto next artifact\n                        }\n                    } else if (attribute.getAttributeTypeID() == BlackboardAttribute.ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID()) {\n                        browser = attribute.getValueString();\n                    }\n                    else if (attribute.getAttributeTypeID() == BlackboardAttribute.ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID()) {\n                        searchEngineDomain = attribute.getValueString();\n                    }\n                    else if (attribute.getAttributeTypeID() == BlackboardAttribute.ATTRIBUTE_TYPE.TSK_DATETIME_ACCESSED.getTypeID()) {\n                        last_accessed = attribute.getValueLong();\n                    }\n                }\n\n                if (!se.equals(NullEngine) && !query.equals(\"NoQuery\") && !query.equals(\"\")) {\n                    try {\n                        \n                        Collection<BlackboardAttribute> bbattributes = new ArrayList<BlackboardAttribute>();\n                        bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), MODULE_NAME, searchEngineDomain));\n                        bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_TEXT.getTypeID(), MODULE_NAME, query));\n                        bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID(), MODULE_NAME, browser));\n                        bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME_ACCESSED.getTypeID(), MODULE_NAME, last_accessed));\n                        this.addArtifact(ARTIFACT_TYPE.TSK_WEB_SEARCH_QUERY, fs, bbattributes);\n                        se.increment();\n                        ++totalQueries;\n                    } catch (Exception e) {\n                        logger.log(Level.WARNING, \"Error during add artifact.\", e);\n                        this.addErrorMessage(this.getName() + \": Error while adding artifact\");\n                    }\n                    services.fireModuleDataEvent(new ModuleDataEvent(\"RecentActivity\", BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_SEARCH_QUERY));\n                }\n\n\n            }\n        } catch (Exception e) {\n            logger.log(Level.WARNING, \"Encountered error retrieving artifacts: \", e);\n        } finally {\n            if (controller.isCancelled()) {\n                logger.info(\"Operation terminated by user.\");\n            }\n            logger.info(\"Extracted \" + totalQueries + \" queries from the blackboard\");\n        }\n    }","commit_id":"e5d6329ec7ec397eb7bb0d7bb7c190b231a767ac","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private Document loadDoc() {\r\n        DocumentBuilderFactory builderFactory =\r\n                DocumentBuilderFactory.newInstance();\r\n\r\n        Document ret = null;\r\n\r\n\r\n        try {\r\n            DocumentBuilder builder = builderFactory.newDocumentBuilder();\r\n            ret = builder.parse(\r\n                    new FileInputStream(xmlFile));\r\n        } catch (ParserConfigurationException e) {\r\n            logger.log(Level.SEVERE, \"Error loading hash sets: can't initialize parser.\", e);\r\n\r\n        } catch (SAXException e) {\r\n            logger.log(Level.SEVERE, \"Error loading hash sets: can't parse XML.\", e);\r\n\r\n        } catch (IOException e) {\r\n            //error reading file\r\n            logger.log(Level.SEVERE, \"Error loading hash sets: can't read file.\", e);\r\n\r\n        }\r\n        try{\r\n            PlatformUtil.xmlIsValid(ret, PlatformUtil.hashsetXSD);\r\n        }\r\n        catch(SAXException e){\r\n            logger.log(Level.SEVERE, \"Error loading Keyword lists: Could not validate against Hashset.xsd\", e);\r\n        }\r\n        return ret;\r\n\r\n    }","id":15061,"modified_method":"private Document loadDoc() {\r\n        DocumentBuilderFactory builderFactory =\r\n                DocumentBuilderFactory.newInstance();\r\n\r\n        Document ret = null;\r\n\r\n\r\n        try {\r\n            DocumentBuilder builder = builderFactory.newDocumentBuilder();\r\n            ret = builder.parse(\r\n                    new FileInputStream(xmlFile));\r\n        } catch (ParserConfigurationException e) {\r\n            logger.log(Level.SEVERE, \"Error loading hash sets: can't initialize parser.\", e);\r\n\r\n        } catch (SAXException e) {\r\n            logger.log(Level.SEVERE, \"Error loading hash sets: can't parse XML.\", e);\r\n\r\n        } catch (IOException e) {\r\n            //error reading file\r\n            logger.log(Level.SEVERE, \"Error loading hash sets: can't read file.\", e);\r\n\r\n        }\r\n        if(! PlatformUtil.xmlIsValid(ret, HashDbXML.class, PlatformUtil.hashsetXSD)){\r\n            logger.log(Level.SEVERE, \"Error loading hash sets: could not validate against \" + PlatformUtil.hashsetXSD);\r\n            return null;\r\n        }\r\n        \r\n        return ret;\r\n\r\n    }","commit_id":"93a22ff4779913e749dd8c27850a91443ccf8fe2","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private IngestModuleLoader() {\n        pipelinesXML = new ArrayList<XmlPipelineRaw>();\n        filePipeline = new ArrayList<IngestModuleAbstractFile>();\n        imagePipeline = new ArrayList<IngestModuleImage>();\n        dateFormatter = new SimpleDateFormat(DATE_FORMAT);\n\n        String numModDiscoveredStr = ModuleSettings.getConfigSetting(IngestManager.MODULE_PROPERTIES, CUR_MODULES_DISCOVERED_SETTING);\n        if (numModDiscoveredStr != null) {\n            try {\n                numModDiscovered = Integer.valueOf(numModDiscoveredStr);\n            } catch (NumberFormatException e) {\n                numModDiscovered = 0;\n                logger.log(Level.WARNING, \"Could not parse numModDiscovered setting, defaulting to 0\", e);\n            }\n        }\n\n        pcs = new PropertyChangeSupport(this);\n        registerModulesChange();\n    }","id":15062,"modified_method":"private IngestModuleLoader() {\n        pipelinesXML = new ArrayList<IngestModuleLoader.XmlPipelineRaw>();\n        filePipeline = new ArrayList<IngestModuleAbstractFile>();\n        imagePipeline = new ArrayList<IngestModuleImage>();\n        dateFormatter = new SimpleDateFormat(DATE_FORMAT);\n\n        String numModDiscoveredStr = ModuleSettings.getConfigSetting(IngestManager.MODULE_PROPERTIES, CUR_MODULES_DISCOVERED_SETTING);\n        if (numModDiscoveredStr != null) {\n            try {\n                numModDiscovered = Integer.valueOf(numModDiscoveredStr);\n            } catch (NumberFormatException e) {\n                numModDiscovered = 0;\n                logger.log(Level.WARNING, \"Could not parse numModDiscovered setting, defaulting to 0\", e);\n            }\n        }\n\n        pcs = new PropertyChangeSupport(this);\n        registerModulesChange();\n    }","commit_id":"93a22ff4779913e749dd8c27850a91443ccf8fe2","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Load XML into raw pipeline representation\n     *\n     * @throws IngestModuleLoaderException\n     */\n    private void loadRawPipeline() throws IngestModuleLoaderException {\n        final Document doc = loadDoc();\n        if (doc == null) {\n            throw new IngestModuleLoaderException(\"Could not load pipeline config XML: \" + this.absFilePath);\n        }\n        Element root = doc.getDocumentElement();\n        if (root == null) {\n            String msg = \"Error loading pipeline configuration: invalid file format.\";\n            logger.log(Level.SEVERE, msg);\n            throw new IngestModuleLoaderException(msg);\n        }\n        NodeList pipelineNodes = root.getElementsByTagName(XmlPipelineRaw.XML_PIPELINE_EL);\n        int numPipelines = pipelineNodes.getLength();\n        if (numPipelines == 0) {\n            throw new IngestModuleLoaderException(\"No pipelines found in the pipeline configuration: \" + absFilePath);\n        }\n        for (int pipelineNum = 0; pipelineNum < numPipelines; ++pipelineNum) {\n            //process pipelines\n            Element pipelineEl = (Element) pipelineNodes.item(pipelineNum);\n            final String pipelineType = pipelineEl.getAttribute(XmlPipelineRaw.XML_PIPELINE_TYPE_ATTR);\n            logger.log(Level.INFO, \"Found pipeline type: \" + pipelineType);\n\n            XmlPipelineRaw pipelineRaw = new XmlPipelineRaw();\n            pipelineRaw.type = pipelineType;\n            this.pipelinesXML.add(pipelineRaw);\n\n            //process modules\n            NodeList modulesNodes = pipelineEl.getElementsByTagName(XmlModuleRaw.XML_MODULE_EL);\n            int numModules = modulesNodes.getLength();\n            if (numModules == 0) {\n                logger.log(Level.WARNING, \"Pipeline: \" + pipelineType + \" has no modules defined.\");\n            }\n            for (int moduleNum = 0; moduleNum < numModules; ++moduleNum) {\n                //process modules\n                Element moduleEl = (Element) modulesNodes.item(moduleNum);\n                final String moduleType = moduleEl.getAttribute(XmlModuleRaw.XML_MODULE_TYPE_ATTR);\n                final String moduleOrder = moduleEl.getAttribute(XmlModuleRaw.XML_MODULE_ORDER_ATTR);\n                final String moduleLoc = moduleEl.getAttribute(XmlModuleRaw.XML_MODULE_LOC_ATTR);\n                final String moduleArgs = moduleEl.getAttribute(XmlModuleRaw.XML_MODULE_ARGS_ATTR);\n                XmlModuleRaw module = new XmlModuleRaw();\n                module.arguments = moduleArgs;\n                module.location = moduleLoc;\n                try {\n                    module.order = Integer.parseInt(moduleOrder);\n                } catch (NumberFormatException e) {\n                    logger.log(Level.WARNING, \"Invalid module order, need integer: \" + moduleOrder + \", adding to end of the list\");\n                    module.order = Integer.MAX_VALUE - (numModDiscovered++);\n                    //save the current numModDiscovered\n                    ModuleSettings.setConfigSetting(IngestManager.MODULE_PROPERTIES, CUR_MODULES_DISCOVERED_SETTING, Integer.toString(numModDiscovered));\n\n                }\n                module.type = moduleType;\n                pipelineRaw.modules.add(module);\n            }\n\n        }\n\n    }","id":15063,"modified_method":"/**\n     * Load XML into raw pipeline representation\n     *\n     * @throws IngestModuleLoaderException\n     */\n    private void loadRawPipeline() throws IngestModuleLoaderException {\n        final Document doc = loadDoc();\n        if (doc == null) {\n            throw new IngestModuleLoaderException(\"Could not load pipeline config XML: \" + this.absFilePath);\n        }\n        Element root = doc.getDocumentElement();\n        if (root == null) {\n            String msg = \"Error loading pipeline configuration: invalid file format.\";\n            logger.log(Level.SEVERE, msg);\n            throw new IngestModuleLoaderException(msg);\n        }\n        NodeList pipelineNodes = root.getElementsByTagName(IngestModuleLoader.XmlPipelineRaw.XML_PIPELINE_EL);\n        int numPipelines = pipelineNodes.getLength();\n        if (numPipelines == 0) {\n            throw new IngestModuleLoaderException(\"No pipelines found in the pipeline configuration: \" + absFilePath);\n        }\n        for (int pipelineNum = 0; pipelineNum < numPipelines; ++pipelineNum) {\n            //process pipelines\n            Element pipelineEl = (Element) pipelineNodes.item(pipelineNum);\n            final String pipelineType = pipelineEl.getAttribute(IngestModuleLoader.XmlPipelineRaw.XML_PIPELINE_TYPE_ATTR);\n            logger.log(Level.INFO, \"Found pipeline type: \" + pipelineType);\n\n            IngestModuleLoader.XmlPipelineRaw pipelineRaw = new IngestModuleLoader.XmlPipelineRaw();\n            pipelineRaw.type = pipelineType;\n            this.pipelinesXML.add(pipelineRaw);\n\n            //process modules\n            NodeList modulesNodes = pipelineEl.getElementsByTagName(IngestModuleLoader.XmlModuleRaw.XML_MODULE_EL);\n            int numModules = modulesNodes.getLength();\n            if (numModules == 0) {\n                logger.log(Level.WARNING, \"Pipeline: \" + pipelineType + \" has no modules defined.\");\n            }\n            for (int moduleNum = 0; moduleNum < numModules; ++moduleNum) {\n                //process modules\n                Element moduleEl = (Element) modulesNodes.item(moduleNum);\n                final String moduleType = moduleEl.getAttribute(IngestModuleLoader.XmlModuleRaw.XML_MODULE_TYPE_ATTR);\n                final String moduleOrder = moduleEl.getAttribute(IngestModuleLoader.XmlModuleRaw.XML_MODULE_ORDER_ATTR);\n                final String moduleLoc = moduleEl.getAttribute(IngestModuleLoader.XmlModuleRaw.XML_MODULE_LOC_ATTR);\n                final String moduleArgs = moduleEl.getAttribute(IngestModuleLoader.XmlModuleRaw.XML_MODULE_ARGS_ATTR);\n                IngestModuleLoader.XmlModuleRaw module = new IngestModuleLoader.XmlModuleRaw();\n                module.arguments = moduleArgs;\n                module.location = moduleLoc;\n                try {\n                    module.order = Integer.parseInt(moduleOrder);\n                } catch (NumberFormatException e) {\n                    logger.log(Level.WARNING, \"Invalid module order, need integer: \" + moduleOrder + \", adding to end of the list\");\n                    module.order = Integer.MAX_VALUE - (numModDiscovered++);\n                    //save the current numModDiscovered\n                    ModuleSettings.setConfigSetting(IngestManager.MODULE_PROPERTIES, CUR_MODULES_DISCOVERED_SETTING, Integer.toString(numModDiscovered));\n\n                }\n                module.type = moduleType;\n                pipelineRaw.modules.add(module);\n            }\n\n        }\n\n    }","commit_id":"93a22ff4779913e749dd8c27850a91443ccf8fe2","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n         * get pipeline type for string mapping to type toString() method\n         *\n         * @param s string equals to one of the types toString() representation\n         * @return matching type\n         */\n        static PIPELINE_TYPE getPipelineType(String s) throws IllegalArgumentException {\n            PIPELINE_TYPE[] types = PIPELINE_TYPE.values();\n            for (int i = 0; i < types.length; ++i) {\n                if (types[i].toString().equals(s)) {\n                    return types[i];\n                }\n            }\n            throw new IllegalArgumentException(\"No PIPELINE_TYPE for string: \" + s);\n        }","id":15064,"modified_method":"/**\n         * get pipeline type for string mapping to type toString() method\n         *\n         * @param s string equals to one of the types toString() representation\n         * @return matching type\n         */\n        static IngestModuleLoader.XmlPipelineRaw.PIPELINE_TYPE getPipelineType(String s) throws IllegalArgumentException {\n            IngestModuleLoader.XmlPipelineRaw.PIPELINE_TYPE[] types = IngestModuleLoader.XmlPipelineRaw.PIPELINE_TYPE.values();\n            for (int i = 0; i < types.length; ++i) {\n                if (types[i].toString().equals(s)) {\n                    return types[i];\n                }\n            }\n            throw new IllegalArgumentException(\"No PIPELINE_TYPE for string: \" + s);\n        }","commit_id":"93a22ff4779913e749dd8c27850a91443ccf8fe2","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Set a new order of the module\n     *\n     * @param pipeLineType pipeline type where the module to reorder is present\n     * @param moduleLocation loaded module name (location), fully qualified\n     * class path\n     * @param newOrder new order to set\n     */\n    void setModuleOrder(XmlPipelineRaw.PIPELINE_TYPE pipeLineType, String moduleLocation, int newOrder) throws IngestModuleLoaderException {\n        throw new IngestModuleLoaderException(\"Not yet implemented\");\n    }","id":15065,"modified_method":"/**\n     * Set a new order of the module\n     *\n     * @param pipeLineType pipeline type where the module to reorder is present\n     * @param moduleLocation loaded module name (location), fully qualified\n     * class path\n     * @param newOrder new order to set\n     */\n    void setModuleOrder(IngestModuleLoader.XmlPipelineRaw.PIPELINE_TYPE pipeLineType, String moduleLocation, int newOrder) throws IngestModuleLoaderException {\n        throw new IngestModuleLoaderException(\"Not yet implemented\");\n    }","commit_id":"93a22ff4779913e749dd8c27850a91443ccf8fe2","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * add autodiscovered module to raw pipeline to be validated and\n     * instantiated\n     *\n     * @param moduleClass\n     * @param pipelineType\n     */\n    private void addModuleToRawPipeline(Class<?> moduleClass, XmlPipelineRaw.PIPELINE_TYPE pipelineType) throws IngestModuleLoaderException {\n        String moduleLocation = moduleClass.getName();\n\n        XmlModuleRaw modRaw = new XmlModuleRaw();\n        modRaw.arguments = \"\"; //default, no arguments\n        modRaw.location = moduleLocation;\n        modRaw.order = Integer.MAX_VALUE - (numModDiscovered++); //add to end\n        modRaw.type = XmlModuleRaw.MODULE_TYPE.PLUGIN.toString();\n        modRaw.valid = false; //to be validated\n\n        //save the current numModDiscovered\n        ModuleSettings.setConfigSetting(IngestManager.MODULE_PROPERTIES, CUR_MODULES_DISCOVERED_SETTING, Integer.toString(numModDiscovered));\n\n        //find the pipeline of that type\n        XmlPipelineRaw pipeline = null;\n        for (XmlPipelineRaw rawP : this.pipelinesXML) {\n            if (rawP.type.equals(pipelineType.toString())) {\n                pipeline = rawP;\n                break;\n            }\n        }\n        if (pipeline == null) {\n            throw new IngestModuleLoaderException(\"Could not find expected pipeline of type: \" + pipelineType.toString() + \", cannot add autodiscovered module: \" + moduleLocation);\n        } else {\n            pipeline.modules.add(modRaw);\n            logger.log(Level.INFO, \"Added a new module \" + moduleClass.getName() + \" to pipeline \" + pipelineType.toString());\n        }\n    }","id":15066,"modified_method":"/**\n     * add autodiscovered module to raw pipeline to be validated and\n     * instantiated\n     *\n     * @param moduleClass\n     * @param pipelineType\n     */\n    private void addModuleToRawPipeline(Class<?> moduleClass, IngestModuleLoader.XmlPipelineRaw.PIPELINE_TYPE pipelineType) throws IngestModuleLoaderException {\n        String moduleLocation = moduleClass.getName();\n\n        IngestModuleLoader.XmlModuleRaw modRaw = new IngestModuleLoader.XmlModuleRaw();\n        modRaw.arguments = \"\"; //default, no arguments\n        modRaw.location = moduleLocation;\n        modRaw.order = Integer.MAX_VALUE - (numModDiscovered++); //add to end\n        modRaw.type = IngestModuleLoader.XmlModuleRaw.MODULE_TYPE.PLUGIN.toString();\n        modRaw.valid = false; //to be validated\n\n        //save the current numModDiscovered\n        ModuleSettings.setConfigSetting(IngestManager.MODULE_PROPERTIES, CUR_MODULES_DISCOVERED_SETTING, Integer.toString(numModDiscovered));\n\n        //find the pipeline of that type\n        IngestModuleLoader.XmlPipelineRaw pipeline = null;\n        for (IngestModuleLoader.XmlPipelineRaw rawP : this.pipelinesXML) {\n            if (rawP.type.equals(pipelineType.toString())) {\n                pipeline = rawP;\n                break;\n            }\n        }\n        if (pipeline == null) {\n            throw new IngestModuleLoaderException(\"Could not find expected pipeline of type: \" + pipelineType.toString() + \", cannot add autodiscovered module: \" + moduleLocation);\n        } else {\n            pipeline.modules.add(modRaw);\n            logger.log(Level.INFO, \"Added a new module \" + moduleClass.getName() + \" to pipeline \" + pipelineType.toString());\n        }\n    }","commit_id":"93a22ff4779913e749dd8c27850a91443ccf8fe2","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Save the current in memory pipeline config, including autodiscovered\n     * modules\n     *\n     * @throws IngestModuleLoaderException\n     */\n    public void save() throws IngestModuleLoaderException {\n        DocumentBuilderFactory dbfac = DocumentBuilderFactory.newInstance();\n\n        try {\n            DocumentBuilder docBuilder = dbfac.newDocumentBuilder();\n            Document doc = docBuilder.newDocument();\n\n\n            Comment comment = doc.createComment(\"Saved by: \" + getClass().getName()\n                    + \" on: \" + dateFormatter.format(System.currentTimeMillis()));\n            doc.appendChild(comment);\n            Element rootEl = doc.createElement(XmlPipelineRaw.XML_PIPELINE_ROOT);\n            doc.appendChild(rootEl);\n\n            for (XmlPipelineRaw rawP : this.pipelinesXML) {\n                Element pipelineEl = doc.createElement(XmlPipelineRaw.XML_PIPELINE_EL);\n                pipelineEl.setAttribute(XmlPipelineRaw.XML_PIPELINE_TYPE_ATTR, rawP.type);\n                rootEl.appendChild(pipelineEl);\n\n                for (XmlModuleRaw rawM : rawP.modules) {\n                    Element moduleEl = doc.createElement(XmlModuleRaw.XML_MODULE_EL);\n\n                    moduleEl.setAttribute(XmlModuleRaw.XML_MODULE_LOC_ATTR, rawM.location);\n                    moduleEl.setAttribute(XmlModuleRaw.XML_MODULE_TYPE_ATTR, rawM.type);\n                    moduleEl.setAttribute(XmlModuleRaw.XML_MODULE_ORDER_ATTR, Integer.toString(rawM.order));\n                    moduleEl.setAttribute(XmlModuleRaw.XML_MODULE_TYPE_ATTR, rawM.type);\n\n                    pipelineEl.appendChild(moduleEl);\n                }\n            }\n\n            saveDoc(doc);\n            logger.log(Level.INFO, \"Pipeline configuration saved to: \" + this.absFilePath);\n        } catch (ParserConfigurationException e) {\n            logger.log(Level.SEVERE, \"Error saving pipeline config XML: can't initialize parser.\", e);\n        }\n\n    }","id":15067,"modified_method":"/**\n     * Save the current in memory pipeline config, including autodiscovered\n     * modules\n     *\n     * @throws IngestModuleLoaderException\n     */\n    public void save() throws IngestModuleLoaderException {\n        DocumentBuilderFactory dbfac = DocumentBuilderFactory.newInstance();\n\n        try {\n            DocumentBuilder docBuilder = dbfac.newDocumentBuilder();\n            Document doc = docBuilder.newDocument();\n\n\n            Comment comment = doc.createComment(\"Saved by: \" + getClass().getName()\n                    + \" on: \" + dateFormatter.format(System.currentTimeMillis()));\n            doc.appendChild(comment);\n            Element rootEl = doc.createElement(IngestModuleLoader.XmlPipelineRaw.XML_PIPELINE_ROOT);\n            doc.appendChild(rootEl);\n\n            for (IngestModuleLoader.XmlPipelineRaw rawP : this.pipelinesXML) {\n                Element pipelineEl = doc.createElement(IngestModuleLoader.XmlPipelineRaw.XML_PIPELINE_EL);\n                pipelineEl.setAttribute(IngestModuleLoader.XmlPipelineRaw.XML_PIPELINE_TYPE_ATTR, rawP.type);\n                rootEl.appendChild(pipelineEl);\n\n                for (IngestModuleLoader.XmlModuleRaw rawM : rawP.modules) {\n                    Element moduleEl = doc.createElement(IngestModuleLoader.XmlModuleRaw.XML_MODULE_EL);\n\n                    moduleEl.setAttribute(IngestModuleLoader.XmlModuleRaw.XML_MODULE_LOC_ATTR, rawM.location);\n                    moduleEl.setAttribute(IngestModuleLoader.XmlModuleRaw.XML_MODULE_TYPE_ATTR, rawM.type);\n                    moduleEl.setAttribute(IngestModuleLoader.XmlModuleRaw.XML_MODULE_ORDER_ATTR, Integer.toString(rawM.order));\n                    moduleEl.setAttribute(IngestModuleLoader.XmlModuleRaw.XML_MODULE_TYPE_ATTR, rawM.type);\n\n                    pipelineEl.appendChild(moduleEl);\n                }\n            }\n\n            saveDoc(doc);\n            logger.log(Level.INFO, \"Pipeline configuration saved to: \" + this.absFilePath);\n        } catch (ParserConfigurationException e) {\n            logger.log(Level.SEVERE, \"Error saving pipeline config XML: can't initialize parser.\", e);\n        }\n\n    }","commit_id":"93a22ff4779913e749dd8c27850a91443ccf8fe2","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * validate raw pipeline, set valid to true member on pipeline and modules\n     * if valid log if invalid\n     *\n     * valid pipeline: valid pipeline type, modules have unique ordering\n     *\n     * valid module: module class exists, module can be loaded, module\n     * implements correct interface, module has proper methods and modifiers to\n     * create an instance\n     *\n     * @throws IngestModuleLoaderException\n     */\n    private void validate() throws IngestModuleLoaderException {\n        for (XmlPipelineRaw pRaw : pipelinesXML) {\n            boolean pipelineErrors = false;\n\n            //check pipelineType\n            String pipelineType = pRaw.type;\n\n            XmlPipelineRaw.PIPELINE_TYPE pType = null;\n\n            try {\n                pType = XmlPipelineRaw.getPipelineType(pipelineType);\n            } catch (IllegalArgumentException e) {\n                pipelineErrors = true;\n                logger.log(Level.SEVERE, \"Unknown pipeline type: \" + pipelineType);\n\n            }\n            //ordering store\n            Map<Integer, Integer> orderings = new HashMap<Integer, Integer>();\n\n            for (XmlModuleRaw pMod : pRaw.modules) {\n                boolean moduleErrors = false;\n\n                //record ordering for validation\n                int order = pMod.order;\n                if (orderings.containsKey(order)) {\n                    orderings.put(order, orderings.get(order) + 1);\n                } else {\n                    orderings.put(order, 1);\n                }\n\n                //check pipelineType\n                String modType = pMod.type;\n                if (!modType.equals(XmlModuleRaw.MODULE_TYPE.PLUGIN.toString())) {\n                    moduleErrors = true;\n                    logger.log(Level.SEVERE, \"Unknown module type: \" + modType);\n                }\n\n                //classes exist and interfaces implemented\n                String location = pMod.location;\n                try {\n                    //netbeans uses custom class loader, otherwise can't load classes from other modules\n\n                    final Class<?> moduleClass = Class.forName(location, false, classLoader);\n                    final Type[] intfs = moduleClass.getGenericInterfaces();\n\n                    if (intfs.length != 0 && pType != null) {\n                        //check if one of the module interfaces matches the pipeline type\n                        boolean interfaceFound = false;\n                        Class moduleMeta = ((IngestModuleMapping) pType).getIngestModuleInterface();\n                        String moduleIntNameCan = moduleMeta.getCanonicalName();\n                        String[] moduleIntNameTok = moduleIntNameCan.split(\" \");\n                        String moduleIntName = moduleIntNameTok[moduleIntNameTok.length - 1];\n                        for (Type intf : intfs) {\n                            String intNameCan = intf.toString();\n                            String[] intNameCanTok = intNameCan.split(\" \");\n                            String intName = intNameCanTok[intNameCanTok.length - 1];\n                            if (intName.equals(moduleIntName)) {\n                                interfaceFound = true;\n                                break;\n                            }\n                        }\n\n                        if (interfaceFound == false) {\n                            moduleErrors = true;\n                            logger.log(Level.WARNING, \"Module class: \" + location\n                                    + \" does not implement correct interface: \" + moduleMeta.getName()\n                                    + \" required for pipeline: \" + pType.toString()\n                                    + \", module will not be active.\");\n                        }\n                    } else {\n                        moduleErrors = true;\n                        logger.log(Level.WARNING, \"Module class: \" + location + \" does not implement any interface, module will not be active.\");\n                    }\n\n                    //if file module: check if has public static getDefault()\n                    if (pType == XmlPipelineRaw.PIPELINE_TYPE.FILE_ANALYSIS) {\n                        try {\n                            Method getDefaultMethod = moduleClass.getMethod(\"getDefault\");\n                            int modifiers = getDefaultMethod.getModifiers();\n                            if (!(Modifier.isPublic(modifiers) && Modifier.isStatic(modifiers))) {\n                                moduleErrors = true;\n                                logger.log(Level.WARNING, \"Module class: \" + location + \" does not implement public static getDefault() singleton method.\");\n                            }\n                            if (!getDefaultMethod.getReturnType().equals(moduleClass)) {\n                                logger.log(Level.WARNING, \"Module class: \" + location + \" getDefault() singleton method should return the module class instance: \" + moduleClass.getName());\n                            }\n\n                        } catch (NoSuchMethodException ex) {\n                            Exceptions.printStackTrace(ex);\n                        } catch (SecurityException ex) {\n                            Exceptions.printStackTrace(ex);\n                        }\n                    } //if image module: check if has public constructor with no args\n                    else if (pType == XmlPipelineRaw.PIPELINE_TYPE.IMAGE_ANALYSIS) {\n                        try {\n                            Constructor<?> constr = moduleClass.getConstructor();\n                            int modifiers = constr.getModifiers();\n                            if (!Modifier.isPublic(modifiers)) {\n                                moduleErrors = true;\n                                logger.log(Level.WARNING, \"Module class: \" + location + \" lacks a public default constructor.\");\n                            }\n                        } catch (NoSuchMethodException ex) {\n                            moduleErrors = true;\n                            logger.log(Level.WARNING, \"Module class: \" + location + \" lacks a public default constructor.\");\n                        } catch (SecurityException ex) {\n                            moduleErrors = true;\n                            logger.log(Level.WARNING, \"Module class: \" + location + \" lacks a public default constructor.\");\n                        }\n                    }\n\n                } catch (ClassNotFoundException ex) {\n                    moduleErrors = true;\n                    logger.log(Level.WARNING, \"Module class: \" + location + \" not found, module will not be active.\");\n                }\n\n\n                //validate ordering\n                for (int o : orderings.keySet()) {\n                    int count = orderings.get(o);\n                    if (count > 1) {\n                        pipelineErrors = true;\n                        logger.log(Level.SEVERE, \"Pipeline \" + pipelineType + \" invalid non-unique ordering of modules, order: \" + o);\n                    }\n                }\n\n                pMod.valid = !moduleErrors;\n                logger.log(Level.INFO, \"Module \" + pMod.location + \" valid: \" + pMod.valid);\n            } //end module\n\n            pRaw.valid = !pipelineErrors;\n            logger.log(Level.INFO, \"Pipeline \" + pType + \" valid: \" + pRaw.valid);\n        } //end pipeline\n\n    }","id":15068,"modified_method":"/**\n     * validate raw pipeline, set valid to true member on pipeline and modules\n     * if valid log if invalid\n     *\n     * valid pipeline: valid pipeline type, modules have unique ordering\n     *\n     * valid module: module class exists, module can be loaded, module\n     * implements correct interface, module has proper methods and modifiers to\n     * create an instance\n     *\n     * @throws IngestModuleLoaderException\n     */\n    private void validate() throws IngestModuleLoaderException {\n        for (IngestModuleLoader.XmlPipelineRaw pRaw : pipelinesXML) {\n            boolean pipelineErrors = false;\n\n            //check pipelineType\n            String pipelineType = pRaw.type;\n\n            IngestModuleLoader.XmlPipelineRaw.PIPELINE_TYPE pType = null;\n\n            try {\n                pType = IngestModuleLoader.XmlPipelineRaw.getPipelineType(pipelineType);\n            } catch (IllegalArgumentException e) {\n                pipelineErrors = true;\n                logger.log(Level.SEVERE, \"Unknown pipeline type: \" + pipelineType);\n\n            }\n            //ordering store\n            Map<Integer, Integer> orderings = new HashMap<Integer, Integer>();\n\n            for (IngestModuleLoader.XmlModuleRaw pMod : pRaw.modules) {\n                boolean moduleErrors = false;\n\n                //record ordering for validation\n                int order = pMod.order;\n                if (orderings.containsKey(order)) {\n                    orderings.put(order, orderings.get(order) + 1);\n                } else {\n                    orderings.put(order, 1);\n                }\n\n                //check pipelineType\n                String modType = pMod.type;\n                if (!modType.equals(IngestModuleLoader.XmlModuleRaw.MODULE_TYPE.PLUGIN.toString())) {\n                    moduleErrors = true;\n                    logger.log(Level.SEVERE, \"Unknown module type: \" + modType);\n                }\n\n                //classes exist and interfaces implemented\n                String location = pMod.location;\n                try {\n                    //netbeans uses custom class loader, otherwise can't load classes from other modules\n\n                    final Class<?> moduleClass = Class.forName(location, false, classLoader);\n                    final Type[] intfs = moduleClass.getGenericInterfaces();\n\n                    if (intfs.length != 0 && pType != null) {\n                        //check if one of the module interfaces matches the pipeline type\n                        boolean interfaceFound = false;\n                        Class moduleMeta = ((IngestModuleMapping) pType).getIngestModuleInterface();\n                        String moduleIntNameCan = moduleMeta.getCanonicalName();\n                        String[] moduleIntNameTok = moduleIntNameCan.split(\" \");\n                        String moduleIntName = moduleIntNameTok[moduleIntNameTok.length - 1];\n                        for (Type intf : intfs) {\n                            String intNameCan = intf.toString();\n                            String[] intNameCanTok = intNameCan.split(\" \");\n                            String intName = intNameCanTok[intNameCanTok.length - 1];\n                            if (intName.equals(moduleIntName)) {\n                                interfaceFound = true;\n                                break;\n                            }\n                        }\n\n                        if (interfaceFound == false) {\n                            moduleErrors = true;\n                            logger.log(Level.WARNING, \"Module class: \" + location\n                                    + \" does not implement correct interface: \" + moduleMeta.getName()\n                                    + \" required for pipeline: \" + pType.toString()\n                                    + \", module will not be active.\");\n                        }\n                    } else {\n                        moduleErrors = true;\n                        logger.log(Level.WARNING, \"Module class: \" + location + \" does not implement any interface, module will not be active.\");\n                    }\n\n                    //if file module: check if has public static getDefault()\n                    if (pType == IngestModuleLoader.XmlPipelineRaw.PIPELINE_TYPE.FILE_ANALYSIS) {\n                        try {\n                            Method getDefaultMethod = moduleClass.getMethod(\"getDefault\");\n                            int modifiers = getDefaultMethod.getModifiers();\n                            if (!(Modifier.isPublic(modifiers) && Modifier.isStatic(modifiers))) {\n                                moduleErrors = true;\n                                logger.log(Level.WARNING, \"Module class: \" + location + \" does not implement public static getDefault() singleton method.\");\n                            }\n                            if (!getDefaultMethod.getReturnType().equals(moduleClass)) {\n                                logger.log(Level.WARNING, \"Module class: \" + location + \" getDefault() singleton method should return the module class instance: \" + moduleClass.getName());\n                            }\n\n                        } catch (NoSuchMethodException ex) {\n                            Exceptions.printStackTrace(ex);\n                        } catch (SecurityException ex) {\n                            Exceptions.printStackTrace(ex);\n                        }\n                    } //if image module: check if has public constructor with no args\n                    else if (pType == IngestModuleLoader.XmlPipelineRaw.PIPELINE_TYPE.IMAGE_ANALYSIS) {\n                        try {\n                            Constructor<?> constr = moduleClass.getConstructor();\n                            int modifiers = constr.getModifiers();\n                            if (!Modifier.isPublic(modifiers)) {\n                                moduleErrors = true;\n                                logger.log(Level.WARNING, \"Module class: \" + location + \" lacks a public default constructor.\");\n                            }\n                        } catch (NoSuchMethodException ex) {\n                            moduleErrors = true;\n                            logger.log(Level.WARNING, \"Module class: \" + location + \" lacks a public default constructor.\");\n                        } catch (SecurityException ex) {\n                            moduleErrors = true;\n                            logger.log(Level.WARNING, \"Module class: \" + location + \" lacks a public default constructor.\");\n                        }\n                    }\n\n                } catch (ClassNotFoundException ex) {\n                    moduleErrors = true;\n                    logger.log(Level.WARNING, \"Module class: \" + location + \" not found, module will not be active.\");\n                }\n\n\n                //validate ordering\n                for (int o : orderings.keySet()) {\n                    int count = orderings.get(o);\n                    if (count > 1) {\n                        pipelineErrors = true;\n                        logger.log(Level.SEVERE, \"Pipeline \" + pipelineType + \" invalid non-unique ordering of modules, order: \" + o);\n                    }\n                }\n\n                pMod.valid = !moduleErrors;\n                logger.log(Level.INFO, \"Module \" + pMod.location + \" valid: \" + pMod.valid);\n            } //end module\n\n            pRaw.valid = !pipelineErrors;\n            logger.log(Level.INFO, \"Pipeline \" + pType + \" valid: \" + pRaw.valid);\n        } //end pipeline\n\n    }","commit_id":"93a22ff4779913e749dd8c27850a91443ccf8fe2","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private Document loadDoc() {\n        DocumentBuilderFactory builderFactory =\n                DocumentBuilderFactory.newInstance();\n\n        Document ret = null;\n\n\n        try {\n            DocumentBuilder builder = builderFactory.newDocumentBuilder();\n            ret = builder.parse(\n                    new FileInputStream(absFilePath));\n        } catch (ParserConfigurationException e) {\n            logger.log(Level.SEVERE, \"Error loading pipeline configuration: can't initialize parser.\", e);\n\n        } catch (SAXException e) {\n            logger.log(Level.SEVERE, \"Error loading pipeline configuration: can't parse XML.\", e);\n\n        } catch (IOException e) {\n            //error reading file\n            logger.log(Level.SEVERE, \"Error loading pipeline configuration: can't read file.\", e);\n\n        }\n        try{\n            PlatformUtil.xmlIsValid(ret, PlatformUtil.pipelineXSD);\n        }\n        catch(SAXException e){\n            logger.log(Level.SEVERE, \"Error loading pipeine configuration: Could not validate XML against pipeline_config.xsd\", e);\n        }\n        return ret;\n\n    }","id":15069,"modified_method":"private Document loadDoc() {\n        DocumentBuilderFactory builderFactory =\n                DocumentBuilderFactory.newInstance();\n\n        Document ret = null;\n\n\n        try {\n            DocumentBuilder builder = builderFactory.newDocumentBuilder();\n            ret = builder.parse(\n                    new FileInputStream(absFilePath));\n        } catch (ParserConfigurationException e) {\n            logger.log(Level.SEVERE, \"Error loading pipeline configuration: can't initialize parser.\", e);\n\n        } catch (SAXException e) {\n            logger.log(Level.SEVERE, \"Error loading pipeline configuration: can't parse XML.\", e);\n\n        } catch (IOException e) {\n            //error reading file\n            logger.log(Level.SEVERE, \"Error loading pipeline configuration: can't read file.\", e);\n\n        }\n        if(!PlatformUtil.xmlIsValid(ret, IngestModuleLoader.class, PlatformUtil.pipelineXSD)){\n            logger.log(Level.SEVERE, \"Error loading pipeine configuration: Could not validate XML against \"+ PlatformUtil.pipelineXSD);\n            return null;\n        }\n        return ret;\n\n    }","commit_id":"93a22ff4779913e749dd8c27850a91443ccf8fe2","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Instantiate valid pipeline and modules and store the module object\n     * references\n     *\n     * @throws IngestModuleLoaderException\n     */\n    @SuppressWarnings(\"unchecked\")\n    private void instantiate() throws IngestModuleLoaderException {\n\n        //clear current\n        filePipeline.clear();\n        imagePipeline.clear();\n\n        //add autodiscovered modules to pipelinesXML\n        autodiscover();\n\n        //validate all modules: from XML + just autodiscovered\n\n        validate();\n\n        for (XmlPipelineRaw pRaw : pipelinesXML) {\n            if (pRaw.valid == false) {\n                //skip invalid pipelines\n                continue;\n            }\n\n            //sort modules by order parameter, in case XML order is different\n            Collections.sort(pRaw.modules, new Comparator<XmlModuleRaw>() {\n                @Override\n                public int compare(XmlModuleRaw o1, XmlModuleRaw o2) {\n                    return Integer.valueOf(o1.order).compareTo(Integer.valueOf(o2.order));\n                }\n            });\n\n            //check pipelineType, add  to right pipeline collection\n            XmlPipelineRaw.PIPELINE_TYPE pType = XmlPipelineRaw.getPipelineType(pRaw.type);\n\n            for (XmlModuleRaw pMod : pRaw.modules) {\n                try {\n                    if (pMod.valid == false) {\n                        //skip invalid modules\n                        continue;\n                    }\n\n                    //add to right pipeline\n                    switch (pType) {\n                        case FILE_ANALYSIS:\n                            IngestModuleAbstractFile fileModuleInstance = null;\n                            final Class<IngestModuleAbstractFile> fileModuleClass =\n                                    (Class<IngestModuleAbstractFile>) Class.forName(pMod.location, true, classLoader);\n                            try {\n                                Method getDefaultMethod = fileModuleClass.getMethod(\"getDefault\");\n                                if (getDefaultMethod != null) {\n                                    fileModuleInstance = (IngestModuleAbstractFile) getDefaultMethod.invoke(null);\n                                }\n                            } catch (NoSuchMethodException ex) {\n                                logger.log(Level.WARNING, \"Validated module, but not public getDefault() found: \" + pMod.location);\n                                pMod.valid = false; //prevent from trying to load again\n                            } catch (SecurityException ex) {\n                                logger.log(Level.WARNING, \"Validated module, but not public getDefault() found: \" + pMod.location);\n                                pMod.valid = false; //prevent from trying to load again\n                            } catch (IllegalAccessException ex) {\n                                logger.log(Level.WARNING, \"Validated module, but not public getDefault() found: \" + pMod.location);\n                                pMod.valid = false; //prevent from trying to load again\n                            } catch (InvocationTargetException ex) {\n                                logger.log(Level.WARNING, \"Validated module, but not public getDefault() found: \" + pMod.location);\n                                pMod.valid = false; //prevent from trying to load again\n                            }\n                            //final IngestModuleAbstract fileModuleInstance =\n                            //      getNewIngestModuleInstance(fileModuleClass);\n                            if (fileModuleInstance != null) {\n                                //set arguments\n                                fileModuleInstance.setArguments(pMod.arguments);\n                            }\n                            filePipeline.add(fileModuleInstance);\n                            break;\n                        case IMAGE_ANALYSIS:\n                            final Class<IngestModuleImage> imageModuleClass =\n                                    (Class<IngestModuleImage>) Class.forName(pMod.location, true, classLoader);\n\n                            try {\n                                Constructor<IngestModuleImage> constr = imageModuleClass.getConstructor();\n                                IngestModuleImage imageModuleInstance = constr.newInstance();\n\n                                if (imageModuleInstance != null) {\n                                    //set arguments\n                                    imageModuleInstance.setArguments(pMod.arguments);\n                                    imagePipeline.add(imageModuleInstance);\n                                }\n\n                            } catch (NoSuchMethodException ex) {\n                                logger.log(Level.WARNING, \"Validated module, could not initialize, check for bugs in the module: \" + pMod.location, ex);\n                                pMod.valid = false;\n                            } catch (SecurityException ex) {\n                                logger.log(Level.WARNING, \"Validated module, could not initialize, check for bugs in the module: \" + pMod.location, ex);\n                                pMod.valid = false;\n                            } catch (InstantiationException ex) {\n                                logger.log(Level.WARNING, \"Validated module, could not initialize, check for bugs in the module: \" + pMod.location, ex);\n                                pMod.valid = false; //prevent from trying to load again\n                            } catch (IllegalAccessException ex) {\n                                logger.log(Level.WARNING, \"Validated module, could not initialize, check for bugs in the module: \" + pMod.location, ex);\n                                pMod.valid = false; //prevent from trying to load again\n                            } catch (IllegalArgumentException ex) {\n                                logger.log(Level.WARNING, \"Validated module, could not initialize, check for bugs in the module: \" + pMod.location, ex);\n                                pMod.valid = false; //prevent from trying to load again\n                            } catch (InvocationTargetException ex) {\n                                logger.log(Level.WARNING, \"Validated module, could not initialize, check for bugs in the module: \" + pMod.location, ex);\n                                pMod.valid = false; //prevent from trying to load again\n                            }\n\n\n                            break;\n                        default:\n                            logger.log(Level.SEVERE, \"Unexpected pipeline type to add module to: \" + pType);\n                    }\n\n\n                } catch (ClassNotFoundException ex) {\n                    logger.log(Level.SEVERE, \"Validated module, but could not load (shouldn't happen): \" + pMod.location);\n                }\n            }\n\n        } //end instantiating modules in XML\n\n\n\n    }","id":15070,"modified_method":"/**\n     * Instantiate valid pipeline and modules and store the module object\n     * references\n     *\n     * @throws IngestModuleLoaderException\n     */\n    @SuppressWarnings(\"unchecked\")\n    private void instantiate() throws IngestModuleLoaderException {\n\n        //clear current\n        filePipeline.clear();\n        imagePipeline.clear();\n\n        //add autodiscovered modules to pipelinesXML\n        autodiscover();\n\n        //validate all modules: from XML + just autodiscovered\n\n        validate();\n\n        for (IngestModuleLoader.XmlPipelineRaw pRaw : pipelinesXML) {\n            if (pRaw.valid == false) {\n                //skip invalid pipelines\n                continue;\n            }\n\n            //sort modules by order parameter, in case XML order is different\n            Collections.sort(pRaw.modules, new Comparator<IngestModuleLoader.XmlModuleRaw>() {\n                @Override\n                public int compare(IngestModuleLoader.XmlModuleRaw o1, IngestModuleLoader.XmlModuleRaw o2) {\n                    return Integer.valueOf(o1.order).compareTo(Integer.valueOf(o2.order));\n                }\n            });\n\n            //check pipelineType, add  to right pipeline collection\n            IngestModuleLoader.XmlPipelineRaw.PIPELINE_TYPE pType = IngestModuleLoader.XmlPipelineRaw.getPipelineType(pRaw.type);\n\n            for (IngestModuleLoader.XmlModuleRaw pMod : pRaw.modules) {\n                try {\n                    if (pMod.valid == false) {\n                        //skip invalid modules\n                        continue;\n                    }\n\n                    //add to right pipeline\n                    switch (pType) {\n                        case FILE_ANALYSIS:\n                            IngestModuleAbstractFile fileModuleInstance = null;\n                            final Class<IngestModuleAbstractFile> fileModuleClass =\n                                    (Class<IngestModuleAbstractFile>) Class.forName(pMod.location, true, classLoader);\n                            try {\n                                Method getDefaultMethod = fileModuleClass.getMethod(\"getDefault\");\n                                if (getDefaultMethod != null) {\n                                    fileModuleInstance = (IngestModuleAbstractFile) getDefaultMethod.invoke(null);\n                                }\n                            } catch (NoSuchMethodException ex) {\n                                logger.log(Level.WARNING, \"Validated module, but not public getDefault() found: \" + pMod.location);\n                                pMod.valid = false; //prevent from trying to load again\n                            } catch (SecurityException ex) {\n                                logger.log(Level.WARNING, \"Validated module, but not public getDefault() found: \" + pMod.location);\n                                pMod.valid = false; //prevent from trying to load again\n                            } catch (IllegalAccessException ex) {\n                                logger.log(Level.WARNING, \"Validated module, but not public getDefault() found: \" + pMod.location);\n                                pMod.valid = false; //prevent from trying to load again\n                            } catch (InvocationTargetException ex) {\n                                logger.log(Level.WARNING, \"Validated module, but not public getDefault() found: \" + pMod.location);\n                                pMod.valid = false; //prevent from trying to load again\n                            }\n                            //final IngestModuleAbstract fileModuleInstance =\n                            //      getNewIngestModuleInstance(fileModuleClass);\n                            if (fileModuleInstance != null) {\n                                //set arguments\n                                fileModuleInstance.setArguments(pMod.arguments);\n                            }\n                            filePipeline.add(fileModuleInstance);\n                            break;\n                        case IMAGE_ANALYSIS:\n                            final Class<IngestModuleImage> imageModuleClass =\n                                    (Class<IngestModuleImage>) Class.forName(pMod.location, true, classLoader);\n\n                            try {\n                                Constructor<IngestModuleImage> constr = imageModuleClass.getConstructor();\n                                IngestModuleImage imageModuleInstance = constr.newInstance();\n\n                                if (imageModuleInstance != null) {\n                                    //set arguments\n                                    imageModuleInstance.setArguments(pMod.arguments);\n                                    imagePipeline.add(imageModuleInstance);\n                                }\n\n                            } catch (NoSuchMethodException ex) {\n                                logger.log(Level.WARNING, \"Validated module, could not initialize, check for bugs in the module: \" + pMod.location, ex);\n                                pMod.valid = false;\n                            } catch (SecurityException ex) {\n                                logger.log(Level.WARNING, \"Validated module, could not initialize, check for bugs in the module: \" + pMod.location, ex);\n                                pMod.valid = false;\n                            } catch (InstantiationException ex) {\n                                logger.log(Level.WARNING, \"Validated module, could not initialize, check for bugs in the module: \" + pMod.location, ex);\n                                pMod.valid = false; //prevent from trying to load again\n                            } catch (IllegalAccessException ex) {\n                                logger.log(Level.WARNING, \"Validated module, could not initialize, check for bugs in the module: \" + pMod.location, ex);\n                                pMod.valid = false; //prevent from trying to load again\n                            } catch (IllegalArgumentException ex) {\n                                logger.log(Level.WARNING, \"Validated module, could not initialize, check for bugs in the module: \" + pMod.location, ex);\n                                pMod.valid = false; //prevent from trying to load again\n                            } catch (InvocationTargetException ex) {\n                                logger.log(Level.WARNING, \"Validated module, could not initialize, check for bugs in the module: \" + pMod.location, ex);\n                                pMod.valid = false; //prevent from trying to load again\n                            }\n\n\n                            break;\n                        default:\n                            logger.log(Level.SEVERE, \"Unexpected pipeline type to add module to: \" + pType);\n                    }\n\n\n                } catch (ClassNotFoundException ex) {\n                    logger.log(Level.SEVERE, \"Validated module, but could not load (shouldn't happen): \" + pMod.location);\n                }\n            }\n\n        } //end instantiating modules in XML\n\n\n\n    }","commit_id":"93a22ff4779913e749dd8c27850a91443ccf8fe2","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Auto-discover ingest modules in all platform modules that are \"enabled\"\n     * If discovered ingest module is not already in XML config, add it do\n     * config and add to in-memory pipeline.\n     *\n     * @throws IngestModuleLoaderException\n     */\n    @SuppressWarnings(\"unchecked\")\n    private void autodiscover() throws IngestModuleLoaderException {\n\n        Collection<? extends ModuleInfo> moduleInfos = Lookup.getDefault().lookupAll(ModuleInfo.class);\n        logger.log(Level.INFO, \"Autodiscovery, found #platform modules: \" + moduleInfos.size());\n\n        Set<URL> urls = getJarPaths(moduleInfos);\n\n        for (final ModuleInfo moduleInfo : moduleInfos) {\n            if (moduleInfo.isEnabled()) {\n                String basePackageName = moduleInfo.getCodeNameBase();\n                if (basePackageName.startsWith(\"org.netbeans\")\n                        || basePackageName.startsWith(\"org.openide\")) {\n                    //skip\n                    continue;\n                }\n\n                logger.log(Level.INFO, \"Module enabled: \" + moduleInfo.getDisplayName() + \" \" + basePackageName \n                        + \" Build version: \" + moduleInfo.getBuildVersion()\n                        + \" Spec version: \" + moduleInfo.getSpecificationVersion()\n                        + \" Impl version: \" + moduleInfo.getImplementationVersion());\n\n                ConfigurationBuilder cb = new ConfigurationBuilder();\n                cb.filterInputsBy(new FilterBuilder().include(FilterBuilder.prefix(basePackageName)));\n                cb.setUrls(urls);\n                cb.setScanners(new SubTypesScanner(), new ResourcesScanner());\n                Reflections reflections = new Reflections(cb);\n\n                Set<?> fileModules = reflections.getSubTypesOf(IngestModuleAbstractFile.class);\n                Iterator<?> it = fileModules.iterator();\n                while (it.hasNext()) {\n                    logger.log(Level.INFO, \"Found file ingest module in: \" + basePackageName + \": \" + it.next().toString());\n                }\n\n                Set<?> imageModules = reflections.getSubTypesOf(IngestModuleImage.class);\n                it = imageModules.iterator();\n                while (it.hasNext()) {\n                    logger.log(Level.INFO, \"Found image ingest module in: \" + basePackageName + \": \" + it.next().toString());\n                }\n\n                //find out which modules to add\n                //TODO check which modules to remove (which modules were uninstalled)\n                boolean modulesChanged = false;\n\n                it = fileModules.iterator();\n                while (it.hasNext()) {\n                    boolean exists = false;\n                    Class<IngestModuleAbstractFile> foundClass = (Class<IngestModuleAbstractFile>) it.next();\n\n                    for (XmlPipelineRaw rawP : pipelinesXML) {\n                        if (!rawP.type.equals(XmlPipelineRaw.PIPELINE_TYPE.FILE_ANALYSIS.toString())) {\n                            continue; //skip\n                        }\n\n                        for (XmlModuleRaw rawM : rawP.modules) {\n                            //logger.log(Level.INFO, \"CLASS NAME : \" + foundClass.getName());\n                            if (foundClass.getName().equals(rawM.location)) {\n                                exists = true;\n                                break;\n                            }\n                        }\n                        if (exists == true) {\n                            break;\n                        }\n                    }\n\n                    if (exists == false) {\n                        logger.log(Level.INFO, \"Discovered a new file module to load: \" + foundClass.getName());\n                        //ADD MODULE\n                        addModuleToRawPipeline(foundClass, XmlPipelineRaw.PIPELINE_TYPE.FILE_ANALYSIS);\n                        modulesChanged = true;\n                    }\n\n                }\n\n                it = imageModules.iterator();\n                while (it.hasNext()) {\n                    boolean exists = false;\n                    Class<IngestModuleImage> foundClass = (Class<IngestModuleImage>) it.next();\n\n                    for (XmlPipelineRaw rawP : pipelinesXML) {\n                        if (!rawP.type.equals(XmlPipelineRaw.PIPELINE_TYPE.IMAGE_ANALYSIS.toString())) {\n                            continue; //skip\n                        }\n\n\n                        for (XmlModuleRaw rawM : rawP.modules) {\n                            //logger.log(Level.INFO, \"CLASS NAME : \" + foundClass.getName());\n                            if (foundClass.getName().equals(rawM.location)) {\n                                exists = true;\n                                break;\n                            }\n                        }\n                        if (exists == true) {\n                            break;\n                        }\n                    }\n\n                    if (exists == false) {\n                        logger.log(Level.INFO, \"Discovered a new image module to load: \" + foundClass.getName());\n                        //ADD MODULE \n                        addModuleToRawPipeline(foundClass, XmlPipelineRaw.PIPELINE_TYPE.IMAGE_ANALYSIS);\n                        modulesChanged = true;\n                    }\n\n                }\n\n                if (modulesChanged) {\n                    save();\n                    pcs.firePropertyChange(Event.ModulesReloaded.toString(), 0, 1);\n                }\n\n                /*\n                 //Enumeration<URL> resources = moduleClassLoader.getResources(basePackageName);\n                 Enumeration<URL> resources = classLoader.getResources(basePackageName);\n                 while (resources.hasMoreElements()) {\n                 System.out.println(resources.nextElement());\n                 } */\n\n            } else {\n                //logger.log(Level.INFO, \"Module disabled: \" + moduleInfo.getDisplayName() );\n            }\n        }\n\n    }","id":15071,"modified_method":"/**\n     * Auto-discover ingest modules in all platform modules that are \"enabled\"\n     * If discovered ingest module is not already in XML config, add it do\n     * config and add to in-memory pipeline.\n     *\n     * @throws IngestModuleLoaderException\n     */\n    @SuppressWarnings(\"unchecked\")\n    private void autodiscover() throws IngestModuleLoaderException {\n\n        Collection<? extends ModuleInfo> moduleInfos = Lookup.getDefault().lookupAll(ModuleInfo.class);\n        logger.log(Level.INFO, \"Autodiscovery, found #platform modules: \" + moduleInfos.size());\n\n        Set<URL> urls = getJarPaths(moduleInfos);\n\n        for (final ModuleInfo moduleInfo : moduleInfos) {\n            if (moduleInfo.isEnabled()) {\n                String basePackageName = moduleInfo.getCodeNameBase();\n                if (basePackageName.startsWith(\"org.netbeans\")\n                        || basePackageName.startsWith(\"org.openide\")) {\n                    //skip\n                    continue;\n                }\n\n                logger.log(Level.INFO, \"Module enabled: \" + moduleInfo.getDisplayName() + \" \" + basePackageName \n                        + \" Build version: \" + moduleInfo.getBuildVersion()\n                        + \" Spec version: \" + moduleInfo.getSpecificationVersion()\n                        + \" Impl version: \" + moduleInfo.getImplementationVersion());\n\n                ConfigurationBuilder cb = new ConfigurationBuilder();\n                cb.filterInputsBy(new FilterBuilder().include(FilterBuilder.prefix(basePackageName)));\n                cb.setUrls(urls);\n                cb.setScanners(new SubTypesScanner(), new ResourcesScanner());\n                Reflections reflections = new Reflections(cb);\n\n                Set<?> fileModules = reflections.getSubTypesOf(IngestModuleAbstractFile.class);\n                Iterator<?> it = fileModules.iterator();\n                while (it.hasNext()) {\n                    logger.log(Level.INFO, \"Found file ingest module in: \" + basePackageName + \": \" + it.next().toString());\n                }\n\n                Set<?> imageModules = reflections.getSubTypesOf(IngestModuleImage.class);\n                it = imageModules.iterator();\n                while (it.hasNext()) {\n                    logger.log(Level.INFO, \"Found image ingest module in: \" + basePackageName + \": \" + it.next().toString());\n                }\n\n                //find out which modules to add\n                //TODO check which modules to remove (which modules were uninstalled)\n                boolean modulesChanged = false;\n\n                it = fileModules.iterator();\n                while (it.hasNext()) {\n                    boolean exists = false;\n                    Class<IngestModuleAbstractFile> foundClass = (Class<IngestModuleAbstractFile>) it.next();\n\n                    for (IngestModuleLoader.XmlPipelineRaw rawP : pipelinesXML) {\n                        if (!rawP.type.equals(IngestModuleLoader.XmlPipelineRaw.PIPELINE_TYPE.FILE_ANALYSIS.toString())) {\n                            continue; //skip\n                        }\n\n                        for (IngestModuleLoader.XmlModuleRaw rawM : rawP.modules) {\n                            //logger.log(Level.INFO, \"CLASS NAME : \" + foundClass.getName());\n                            if (foundClass.getName().equals(rawM.location)) {\n                                exists = true;\n                                break;\n                            }\n                        }\n                        if (exists == true) {\n                            break;\n                        }\n                    }\n\n                    if (exists == false) {\n                        logger.log(Level.INFO, \"Discovered a new file module to load: \" + foundClass.getName());\n                        //ADD MODULE\n                        addModuleToRawPipeline(foundClass, IngestModuleLoader.XmlPipelineRaw.PIPELINE_TYPE.FILE_ANALYSIS);\n                        modulesChanged = true;\n                    }\n\n                }\n\n                it = imageModules.iterator();\n                while (it.hasNext()) {\n                    boolean exists = false;\n                    Class<IngestModuleImage> foundClass = (Class<IngestModuleImage>) it.next();\n\n                    for (IngestModuleLoader.XmlPipelineRaw rawP : pipelinesXML) {\n                        if (!rawP.type.equals(IngestModuleLoader.XmlPipelineRaw.PIPELINE_TYPE.IMAGE_ANALYSIS.toString())) {\n                            continue; //skip\n                        }\n\n\n                        for (IngestModuleLoader.XmlModuleRaw rawM : rawP.modules) {\n                            //logger.log(Level.INFO, \"CLASS NAME : \" + foundClass.getName());\n                            if (foundClass.getName().equals(rawM.location)) {\n                                exists = true;\n                                break;\n                            }\n                        }\n                        if (exists == true) {\n                            break;\n                        }\n                    }\n\n                    if (exists == false) {\n                        logger.log(Level.INFO, \"Discovered a new image module to load: \" + foundClass.getName());\n                        //ADD MODULE \n                        addModuleToRawPipeline(foundClass, IngestModuleLoader.XmlPipelineRaw.PIPELINE_TYPE.IMAGE_ANALYSIS);\n                        modulesChanged = true;\n                    }\n\n                }\n\n                if (modulesChanged) {\n                    save();\n                    pcs.firePropertyChange(IngestModuleLoader.Event.ModulesReloaded.toString(), 0, 1);\n                }\n\n                /*\n                 //Enumeration<URL> resources = moduleClassLoader.getResources(basePackageName);\n                 Enumeration<URL> resources = classLoader.getResources(basePackageName);\n                 while (resources.hasMoreElements()) {\n                 System.out.println(resources.nextElement());\n                 } */\n\n            } else {\n                //logger.log(Level.INFO, \"Module disabled: \" + moduleInfo.getDisplayName() );\n            }\n        }\n\n    }","commit_id":"93a22ff4779913e749dd8c27850a91443ccf8fe2","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private Document loadDoc() {\n        DocumentBuilderFactory builderFactory =\n                DocumentBuilderFactory.newInstance();\n\n        Document ret = null;\n\n\n        try {\n            DocumentBuilder builder = builderFactory.newDocumentBuilder();\n            ret = builder.parse(\n                    new FileInputStream(filePath));\n        } catch (ParserConfigurationException e) {\n            logger.log(Level.SEVERE, \"Error loading keyword list: can't initialize parser.\", e);\n\n        } catch (SAXException e) {\n            logger.log(Level.SEVERE, \"Error loading keyword list: can't parse XML.\", e);\n\n        } catch (IOException e) {\n            //error reading file\n            logger.log(Level.SEVERE, \"Error loading keyword list: can't read file.\", e);\n\n        }\n         try{\n            PlatformUtil.xmlIsValid(ret, PlatformUtil.keywordXSD);\n        }\n        catch(SAXException e){\n            logger.log(Level.SEVERE, \"Error loading Keyword lists: Could not validate against KeywordSchema.xsd\", e);\n        }\n        return ret;\n\n    }","id":15072,"modified_method":"private Document loadDoc() {\n        DocumentBuilderFactory builderFactory =\n                DocumentBuilderFactory.newInstance();\n\n        Document ret = null;\n\n\n        try {\n            DocumentBuilder builder = builderFactory.newDocumentBuilder();\n            ret = builder.parse(\n                    new FileInputStream(filePath));\n        } catch (ParserConfigurationException e) {\n            logger.log(Level.SEVERE, \"Error loading keyword list: can't initialize parser.\", e);\n\n        } catch (SAXException e) {\n            logger.log(Level.SEVERE, \"Error loading keyword list: can't parse XML.\", e);\n\n        } catch (IOException e) {\n            //error reading file\n            logger.log(Level.SEVERE, \"Error loading keyword list: can't read file.\", e);\n\n        }\n        if(! PlatformUtil.xmlIsValid(ret, KeywordSearchListsXML.class, PlatformUtil.keywordXSD)){\n            logger.log(Level.SEVERE, \"Error loading keyword lists: could not validate against \" + PlatformUtil.keywordXSD);\n            return null;\n        }\n        \n        return ret;\n\n    }","commit_id":"93a22ff4779913e749dd8c27850a91443ccf8fe2","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void createEngines(){\n        NodeList nlist = xmlinput.getElementsByTagName(\"SearchEngine\");\n        SearchEngine[] listEngines = new SearchEngine[nlist.getLength()];\n        for(int i = 0;i < nlist.getLength(); i++){\n            try{\n                NamedNodeMap nnm = nlist.item(i).getAttributes();\n                \n                String EngineName = nnm.getNamedItem(\"engine\").getNodeValue();\n                String EnginedomainSubstring = nnm.getNamedItem(\"domainSubstring\").getNodeValue();\n                Map<String,String> splits = new HashMap<String,String>();\n                \n                NodeList listSplits = xmlinput.getElementsByTagName(\"splitToken\");\n                for(int k = 0; k<listSplits.getLength();k++){\n                   if(listSplits.item(k).getParentNode().getAttributes().getNamedItem(\"engine\").getNodeValue().equals(EngineName)){\n                       splits.put(listSplits.item(k).getAttributes().getNamedItem(\"plainToken\").getNodeValue(), listSplits.item(k).getAttributes().getNamedItem(\"regexToken\").getNodeValue());\n                   }\n                }\n                \n                SearchEngine Se = new SearchEngine(EngineName, EnginedomainSubstring, splits);\n                System.out.println(\"Search Engine: \" + Se.toString());\n                listEngines[i] = Se;\n            }\n            catch(Exception e){\n               logger.log(Level.WARNING, \"Unable to create search engines!\", e);\n            }\n        }\n        engines = listEngines;\n    }","id":15073,"modified_method":"private void createEngines(){\n        NodeList nlist = xmlinput.getElementsByTagName(\"SearchEngine\");\n        SearchEngineURLQueryAnalyzer.SearchEngine[] listEngines = new SearchEngineURLQueryAnalyzer.SearchEngine[nlist.getLength()];\n        for(int i = 0;i < nlist.getLength(); i++){\n            try{\n                NamedNodeMap nnm = nlist.item(i).getAttributes();\n                \n                String EngineName = nnm.getNamedItem(\"engine\").getNodeValue();\n                String EnginedomainSubstring = nnm.getNamedItem(\"domainSubstring\").getNodeValue();\n                Map<String,String> splits = new HashMap<String,String>();\n                \n                NodeList listSplits = xmlinput.getElementsByTagName(\"splitToken\");\n                for(int k = 0; k<listSplits.getLength();k++){\n                   if(listSplits.item(k).getParentNode().getAttributes().getNamedItem(\"engine\").getNodeValue().equals(EngineName)){\n                       splits.put(listSplits.item(k).getAttributes().getNamedItem(\"plainToken\").getNodeValue(), listSplits.item(k).getAttributes().getNamedItem(\"regexToken\").getNodeValue());\n                   }\n                }\n                \n                SearchEngineURLQueryAnalyzer.SearchEngine Se = new SearchEngineURLQueryAnalyzer.SearchEngine(EngineName, EnginedomainSubstring, splits);\n                System.out.println(\"Search Engine: \" + Se.toString());\n                listEngines[i] = Se;\n            }\n            catch(Exception e){\n               logger.log(Level.WARNING, \"Unable to create search engines!\", e);\n            }\n        }\n        engines = listEngines;\n    }","commit_id":"93a22ff4779913e749dd8c27850a91443ccf8fe2","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void init2(){\n        try{\n           String path = PlatformUtil.getUserConfigDirectory() + File.separator + XMLFile;\n           File f = new File(path);\n           System.out.println(\"Load successful\");\n           DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n           DocumentBuilder db = dbf.newDocumentBuilder();\n           Document xml = db.parse(f);\n           xmlinput = xml; \n\n           if(!PlatformUtil.xmlIsValid(xml, PlatformUtil.searchEngineXSD)){\n              logger.log(Level.WARNING, \"Could not parse validate XML file. Terminating SEUQA.\");\n           }\n           else{\n               try{\n                   createEngines();\n                   getSearchEngineNames();\n               }\n               catch(Exception e){\n                   logger.log(Level.WARNING, \"Unable to create Search Engines!\", e);\n               }\n           }\n        }\n        catch(Exception e){\n            logger.log(Level.WARNING, \"Was not able to load SEUQAMappings.xml\", e);\n        }\n    }","id":15074,"modified_method":"private void init2(){\n        try{\n           String path = PlatformUtil.getUserConfigDirectory() + File.separator + XMLFile;\n           File f = new File(path);\n           System.out.println(\"Load successful\");\n           DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n           DocumentBuilder db = dbf.newDocumentBuilder();\n           Document xml = db.parse(f);\n           xmlinput = xml; \n\n           if(!PlatformUtil.xmlIsValid(xml, SearchEngineURLQueryAnalyzer.class, PlatformUtil.searchEngineXSD)){\n              logger.log(Level.WARNING, \"Error loading Search Engines: could not validate against \" + PlatformUtil.searchEngineXSD);\n           }\n           else{\n               try{\n                   createEngines();\n                   getSearchEngineNames();\n               }\n               catch(Exception e){\n                   logger.log(Level.WARNING, \"Unable to create Search Engines!\", e);\n               }\n           }\n        }\n        catch(Exception e){\n            logger.log(Level.WARNING, \"Was not able to load SEUQAMappings.xml\", e);\n        }\n    }","commit_id":"93a22ff4779913e749dd8c27850a91443ccf8fe2","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Attempts to extract the query from a URL.\n     *\n     * @param url The URL string to be dissected.\n     * @return The extracted search query.\n     */\n       \n\n private String extractSearchEngineQuery(String url){\n      String x = \"NoQuery\";\n      SearchEngine eng = getSearchEngine(url);\n        for(Map.Entry<String,String> kvp : eng.getSplits()){\n            if(url.contains(kvp.getKey())){\n                x = split2(url, kvp.getValue());\n                break;\n            }\n        }\n        try { //try to decode the url\n            String decoded = URLDecoder.decode(x, \"UTF-8\");\n            return decoded;\n        } catch (UnsupportedEncodingException uee) { //if it fails, return the encoded string\n            logger.log(Level.FINE, \"Error during URL decoding \", uee);\n            return x;\n        }\n    }","id":15075,"modified_method":"/**\n     * Attempts to extract the query from a URL.\n     *\n     * @param url The URL string to be dissected.\n     * @return The extracted search query.\n     */\n       \n\n private String extractSearchEngineQuery(String url){\n      String x = \"NoQuery\";\n      SearchEngineURLQueryAnalyzer.SearchEngine eng = getSearchEngine(url);\n        for(Map.Entry<String,String> kvp : eng.getSplits()){\n            if(url.contains(kvp.getKey())){\n                x = split2(url, kvp.getValue());\n                break;\n            }\n        }\n        try { //try to decode the url\n            String decoded = URLDecoder.decode(x, \"UTF-8\");\n            return decoded;\n        } catch (UnsupportedEncodingException uee) { //if it fails, return the encoded string\n            logger.log(Level.FINE, \"Error during URL decoding \", uee);\n            return x;\n        }\n    }","commit_id":"93a22ff4779913e749dd8c27850a91443ccf8fe2","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void getURLs(Image image, IngestImageWorkerController controller) {\n        int totalQueries = 0;\n        try {\n            //from blackboard_artifacts\n            Collection<BlackboardArtifact> listArtifacts = currentCase.getSleuthkitCase().getMatchingArtifacts(\"WHERE (`artifact_type_id` = '\" + ARTIFACT_TYPE.TSK_WEB_BOOKMARK.getTypeID()\n                    + \"' OR `artifact_type_id` = '\" + ARTIFACT_TYPE.TSK_WEB_HISTORY.getTypeID() + \"') \");  //List of every 'web_history' and 'bookmark' artifact\n            logger.info(\"Processing \" + listArtifacts.size() + \" blackboard artifacts.\");\n            getAll:\n            for (BlackboardArtifact artifact : listArtifacts) {\n                //initializing default attributes\n                String query = \"\";\n                String searchEngineDomain = \"\";\n                String browser = \"\";\n                long last_accessed = -1;\n                //from tsk_files\n                FsContent fs = this.extractFiles(image, \"select * from tsk_files where `obj_id` = '\" + artifact.getObjectID() + \"'\").get(0); //associated file\n                SearchEngine se = NullEngine;\n                //from blackboard_attributes\n                Collection<BlackboardAttribute> listAttributes = currentCase.getSleuthkitCase().getMatchingAttributes(\"Where `artifact_id` = \" + artifact.getArtifactID());\n                getAttributes:\n                for (BlackboardAttribute attribute : listAttributes) {\n                    if (controller.isCancelled()) {\n                        break getAll;       //User cancled the process.\n                    }\n                    if (attribute.getAttributeTypeID() == BlackboardAttribute.ATTRIBUTE_TYPE.TSK_URL.getTypeID()) {\n                        final String urlString = attribute.getValueString();\n                        se = getSearchEngine(urlString);\n                        if (!se.equals(NullEngine)) {\n                            query = extractSearchEngineQuery(attribute.getValueString());   \n                            if (query.equals(\"NoQuery\") || query.equals(\"\")) {   //False positive match, artifact was not a query.\n                                break getAttributes;\n                            }\n                        } else if (se.equals(NullEngine)) {\n                            break getAttributes;    //could not determine type. Will move onto next artifact\n                        }\n                    } else if (attribute.getAttributeTypeID() == BlackboardAttribute.ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID()) {\n                        browser = attribute.getValueString();\n                    }\n                    else if (attribute.getAttributeTypeID() == BlackboardAttribute.ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID()) {\n                        searchEngineDomain = attribute.getValueString();\n                    }\n                    else if (attribute.getAttributeTypeID() == BlackboardAttribute.ATTRIBUTE_TYPE.TSK_DATETIME_ACCESSED.getTypeID()) {\n                        last_accessed = attribute.getValueLong();\n                    }\n                }\n\n                if (!se.equals(NullEngine) && !query.equals(\"NoQuery\") && !query.equals(\"\")) {\n                    try {\n                        \n                        Collection<BlackboardAttribute> bbattributes = new ArrayList<BlackboardAttribute>();\n                        bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), MODULE_NAME, searchEngineDomain));\n                        bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_TEXT.getTypeID(), MODULE_NAME, query));\n                        bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID(), MODULE_NAME, browser));\n                        bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME_ACCESSED.getTypeID(), MODULE_NAME, last_accessed));\n                        this.addArtifact(ARTIFACT_TYPE.TSK_WEB_SEARCH_QUERY, fs, bbattributes);\n                        se.increment();\n                        ++totalQueries;\n                    } catch (Exception e) {\n                        logger.log(Level.WARNING, \"Error during add artifact.\", e);\n                        this.addErrorMessage(this.getName() + \": Error while adding artifact\");\n                    }\n                    services.fireModuleDataEvent(new ModuleDataEvent(\"RecentActivity\", BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_SEARCH_QUERY));\n                }\n\n\n            }\n        } catch (Exception e) {\n            logger.log(Level.WARNING, \"Encountered error retrieving artifacts: \", e);\n        } finally {\n            if (controller.isCancelled()) {\n                logger.info(\"Operation terminated by user.\");\n            }\n            logger.info(\"Extracted \" + totalQueries + \" queries from the blackboard\");\n        }\n    }","id":15076,"modified_method":"private void getURLs(Image image, IngestImageWorkerController controller) {\n        int totalQueries = 0;\n        try {\n            //from blackboard_artifacts\n            Collection<BlackboardArtifact> listArtifacts = currentCase.getSleuthkitCase().getMatchingArtifacts(\"WHERE (`artifact_type_id` = '\" + ARTIFACT_TYPE.TSK_WEB_BOOKMARK.getTypeID()\n                    + \"' OR `artifact_type_id` = '\" + ARTIFACT_TYPE.TSK_WEB_HISTORY.getTypeID() + \"') \");  //List of every 'web_history' and 'bookmark' artifact\n            logger.info(\"Processing \" + listArtifacts.size() + \" blackboard artifacts.\");\n            getAll:\n            for (BlackboardArtifact artifact : listArtifacts) {\n                //initializing default attributes\n                String query = \"\";\n                String searchEngineDomain = \"\";\n                String browser = \"\";\n                long last_accessed = -1;\n                //from tsk_files\n                FsContent fs = this.extractFiles(image, \"select * from tsk_files where `obj_id` = '\" + artifact.getObjectID() + \"'\").get(0); //associated file\n                SearchEngineURLQueryAnalyzer.SearchEngine se = NullEngine;\n                //from blackboard_attributes\n                Collection<BlackboardAttribute> listAttributes = currentCase.getSleuthkitCase().getMatchingAttributes(\"Where `artifact_id` = \" + artifact.getArtifactID());\n                getAttributes:\n                for (BlackboardAttribute attribute : listAttributes) {\n                    if (controller.isCancelled()) {\n                        break getAll;       //User cancled the process.\n                    }\n                    if (attribute.getAttributeTypeID() == BlackboardAttribute.ATTRIBUTE_TYPE.TSK_URL.getTypeID()) {\n                        final String urlString = attribute.getValueString();\n                        se = getSearchEngine(urlString);\n                        if (!se.equals(NullEngine)) {\n                            query = extractSearchEngineQuery(attribute.getValueString());   \n                            if (query.equals(\"NoQuery\") || query.equals(\"\")) {   //False positive match, artifact was not a query.\n                                break getAttributes;\n                            }\n                        } else if (se.equals(NullEngine)) {\n                            break getAttributes;    //could not determine type. Will move onto next artifact\n                        }\n                    } else if (attribute.getAttributeTypeID() == BlackboardAttribute.ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID()) {\n                        browser = attribute.getValueString();\n                    }\n                    else if (attribute.getAttributeTypeID() == BlackboardAttribute.ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID()) {\n                        searchEngineDomain = attribute.getValueString();\n                    }\n                    else if (attribute.getAttributeTypeID() == BlackboardAttribute.ATTRIBUTE_TYPE.TSK_DATETIME_ACCESSED.getTypeID()) {\n                        last_accessed = attribute.getValueLong();\n                    }\n                }\n\n                if (!se.equals(NullEngine) && !query.equals(\"NoQuery\") && !query.equals(\"\")) {\n                    try {\n                        \n                        Collection<BlackboardAttribute> bbattributes = new ArrayList<BlackboardAttribute>();\n                        bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), MODULE_NAME, searchEngineDomain));\n                        bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_TEXT.getTypeID(), MODULE_NAME, query));\n                        bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID(), MODULE_NAME, browser));\n                        bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME_ACCESSED.getTypeID(), MODULE_NAME, last_accessed));\n                        this.addArtifact(ARTIFACT_TYPE.TSK_WEB_SEARCH_QUERY, fs, bbattributes);\n                        se.increment();\n                        ++totalQueries;\n                    } catch (Exception e) {\n                        logger.log(Level.WARNING, \"Error during add artifact.\", e);\n                        this.addErrorMessage(this.getName() + \": Error while adding artifact\");\n                    }\n                    services.fireModuleDataEvent(new ModuleDataEvent(\"RecentActivity\", BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_SEARCH_QUERY));\n                }\n\n\n            }\n        } catch (Exception e) {\n            logger.log(Level.WARNING, \"Encountered error retrieving artifacts: \", e);\n        } finally {\n            if (controller.isCancelled()) {\n                logger.info(\"Operation terminated by user.\");\n            }\n            logger.info(\"Extracted \" + totalQueries + \" queries from the blackboard\");\n        }\n    }","commit_id":"93a22ff4779913e749dd8c27850a91443ccf8fe2","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private String getTotals() {\n        String total = \"\";\n        if (engines == null) {\n            return total;\n        }\n        for (SearchEngine se : engines) {\n           total+= se.getEngineName() + \" : \"+ se.getTotal() + \"\\n\";\n        }\n        return total;\n    }","id":15077,"modified_method":"private String getTotals() {\n        String total = \"\";\n        if (engines == null) {\n            return total;\n        }\n        for (SearchEngineURLQueryAnalyzer.SearchEngine se : engines) {\n           total+= se.getEngineName() + \" : \"+ se.getTotal() + \"\\n\";\n        }\n        return total;\n    }","commit_id":"93a22ff4779913e749dd8c27850a91443ccf8fe2","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"@Override\n    public ModuleType getType() {\n        return ModuleType.Image;\n    }","id":15078,"modified_method":"@Override\n    public IngestModuleAbstract.ModuleType getType() {\n        return IngestModuleAbstract.ModuleType.Image;\n    }","commit_id":"93a22ff4779913e749dd8c27850a91443ccf8fe2","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * {@inheritDoc}\n     *\n     * Returns true if the protocol defined by this plugin is supported. If\n     * the protocol is not supported then a false value is returned to the\n     * caller. The qualifier map passed to the method is used by the plugin to\n     * return additional information by key-name. These key-value pairs can be\n     * added to service events if needed.\n     */\n    @Override\n    public boolean isServiceDetected(InetAddress address, DetectorMonitor detectMonitor) {\n        boolean detected = false;\n        \n        SnmpAgentConfig agentConfig = getAgentConfigFactory().getAgentConfig(address);\n        \n        configureAgentPTR(agentConfig);\n\n        configureAgentVersion(agentConfig);\n        \n        try {\n            /*\n             * Get two maps one with all configured administration tags and one with \n             * operational status\n             */\n            Map<SnmpInstId, SnmpValue> tagResults = getTable(agentConfig, RTT_ADMIN_TAG_OID);\n            if (tagResults == null || tagResults.isEmpty()) {\n                log().warn(getServiceName() + \": No admin tags received! \");\n                return detected;\n            }\n\n            Map<SnmpInstId, SnmpValue> operStateResults = getTable(agentConfig,RTT_OPER_STATE_OID);\n            if (operStateResults == null || operStateResults.isEmpty()) {\n                log().warn(getServiceName() + \": No oper status received! \");\n                return detected;\n            }\n            \n            // Iterate over the list of configured IP SLAs\n            for (SnmpInstId ipslaInstance : tagResults.keySet()) {\n                log().debug(getServiceName() + \" detect: [\" + tagResults.get(ipslaInstance).toString() + \"] compared with [\" + getVbvalue() + \"]\");\n                /*\n                 * Check if a configured IP SLA with specific tag exist and the\n                 * the operational state ACTIVE(6), detected with first match.\n                 */\n                if (tagResults.get(ipslaInstance).toString().equals(getVbvalue())\n                        && operStateResults.get(ipslaInstance).toInt() == RTT_MON_OPER_STATE.ACTIVE.value()) {\n                    log().debug(getServiceName()\n                                        + \": admin tag [\" + getVbvalue() + \"] found and status is \"\n                                        + operStateResults.get(ipslaInstance).toInt());\n                    detected = true;\n                    break; // detected leave for()\n                } else {\n                    log().debug(getServiceName()\n                                + \": admin tag [\" + getVbvalue() + \"] found and status is \"\n                                + operStateResults.get(ipslaInstance).toInt());\n                    detected = false; // not detected, check next or return with not detected\n                }\n            }\n        } catch (NullPointerException e) {\n            log().warn(\"SNMP not available or CISCO-RTT-MON-MIB not supported!\");\n        } catch (NumberFormatException e) {\n            log().warn(\"Number operator used on a non-number \"\n                               + e.getMessage());\n        } catch (IllegalArgumentException e) {\n            log().warn(\"Invalid Snmp Criteria: \" + e.getMessage());\n        } catch (Throwable t) {\n            log().warn(\"Unexpected exception during SNMP poll of interface \"\n                               + address.getHostAddress(), t);\n        }\n        return detected; // return detected\n    }","id":15079,"modified_method":"/**\n     * {@inheritDoc}\n     *\n     * Returns true if the protocol defined by this plugin is supported. If\n     * the protocol is not supported then a false value is returned to the\n     * caller. The qualifier map passed to the method is used by the plugin to\n     * return additional information by key-name. These key-value pairs can be\n     * added to service events if needed.\n     */\n    @Override\n    public boolean isServiceDetected(InetAddress address, DetectorMonitor detectMonitor) {\n        boolean detected = false;\n        \n        SnmpAgentConfig agentConfig = getAgentConfigFactory().getAgentConfig(address);\n        \n        configureAgentPTR(agentConfig);\n\n        configureAgentVersion(agentConfig);\n        \n        try {\n            /*\n             * Get two maps one with all configured administration tags and one with \n             * operational status\n             */\n            Map<SnmpInstId, SnmpValue> tagResults = getTable(agentConfig, RTT_ADMIN_TAG_OID);\n            if (tagResults == null || tagResults.isEmpty()) {\n                LogUtils.warnf(this, \"%s: No admin tags received!\", getServiceName());\n                return detected;\n            }\n\n            Map<SnmpInstId, SnmpValue> operStateResults = getTable(agentConfig,RTT_OPER_STATE_OID);\n            if (operStateResults == null || operStateResults.isEmpty()) {\n                LogUtils.warnf(this, \"%s: No oper status received!\", getServiceName());\n                return detected;\n            }\n            \n            // Iterate over the list of configured IP SLAs\n            for (SnmpInstId ipslaInstance : tagResults.keySet()) {\n                LogUtils.debugf(this, getServiceName() + \"%s detect: [%s] compared with [%s]\", getServiceName(), tagResults.get(ipslaInstance), getVbvalue());\n                /*\n                 * Check if a configured IP SLA with specific tag exist and the\n                 * the operational state ACTIVE(6), detected with first match.\n                 */\n                if (tagResults.get(ipslaInstance).toString().equals(getVbvalue())\n                        && operStateResults.get(ipslaInstance).toInt() == RTT_MON_OPER_STATE.ACTIVE.value()) {\n                    LogUtils.debugf(this, \"%s: admin tag [%s] found and status is %d\", getServiceName(), getVbvalue(), operStateResults.get(ipslaInstance).toInt());\n                    detected = true;\n                    break; // detected leave for()\n                } else {\n                    LogUtils.debugf(this, \"%s: admin tag [%s] not found and status is %d\", getServiceName(), getVbvalue(), operStateResults.get(ipslaInstance).toInt());\n                    detected = false; // not detected, check next or return with not detected\n                }\n            }\n        } catch (final NullPointerException e) {\n            LogUtils.warnf(this, e, \"SNMP not available or CISCO-RTT-MON-MIB not supported!\");\n        } catch (final NumberFormatException e) {\n            LogUtils.warnf(this, e, \"Number operator used on a non-number.\");\n        } catch (final IllegalArgumentException e) {\n            LogUtils.warnf(this, e, \"Invalid SNMP criteria.\");\n        } catch (final Throwable t) {\n            LogUtils.warnf(this, t, \"Unexpected exception during SNMP poll of interface %s\", address.getHostAddress());\n        }\n        return detected; // return detected\n    }","commit_id":"8c779802a1ad37ab38f1add119a6682a2dac9c33","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Overwrite isTable from SnmpDetector. Parameter is not used and will be\n     * ignored.\n     * \n     * @param isTable @ {java.lang.String} object\n     */\n    public void setIsTable (String isTable) {\n        log().warn(\"The paramater isTable is not used and will be ignored.\");\n    }","id":15080,"modified_method":"/**\n     * Overwrite isTable from SnmpDetector. Parameter is not used and will be\n     * ignored.\n     * \n     * @param isTable @ {java.lang.String} object\n     */\n    public void setIsTable (String isTable) {\n        LogUtils.warnf(this, \"The paramater isTable is not used and will be ignored.\");\n    }","commit_id":"8c779802a1ad37ab38f1add119a6682a2dac9c33","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Sets the value of the given variable\n     * @param name the name of the variable to set\n     * @param value the new value for the given variable\n     */\n    public void setVariable(String name, Object value) {\n        if (variables == null)\n          variables = new HashMap();\n        variables.put(name, value);\n    }","id":15081,"modified_method":"/**\n     * Sets the value of the given variable\n     *\n     * @param name  the name of the variable to set\n     * @param value the new value for the given variable\n     */\n    public void setVariable(String name, Object value) {\n        if (variables == null)\n            variables = new LinkedHashMap();\n        variables.put(name, value);\n    }","commit_id":"d841dca58161110478d2f85ce032ab8afa49be14","url":"https://github.com/apache/groovy"},{"original_method":"public Map getVariables() {\n        if (variables == null)\n          variables = new HashMap();\n        return variables;\n    }","id":15082,"modified_method":"public Map getVariables() {\n        if (variables == null)\n            variables = new LinkedHashMap();\n        return variables;\n    }","commit_id":"d841dca58161110478d2f85ce032ab8afa49be14","url":"https://github.com/apache/groovy"},{"original_method":"/**\n     * @param name the name of the variable to lookup\n     * @return the variable value\n     */\n    public Object getVariable(String name) {\n        if (variables == null)\n            throw new MissingPropertyException(name, Binding.class);\n\n        Object result = variables.get(name);\n        \n        if (result == null && !variables.containsKey(name)) {\n            throw new MissingPropertyException(name, Binding.class);\n        }\n        \n        return result;\n    }","id":15083,"modified_method":"/**\n     * @param name the name of the variable to lookup\n     * @return the variable value\n     */\n    public Object getVariable(String name) {\n        if (variables == null)\n            throw new MissingPropertyException(name, this.getClass());\n\n        Object result = variables.get(name);\n\n        if (result == null && !variables.containsKey(name)) {\n            throw new MissingPropertyException(name, this.getClass());\n        }\n\n        return result;\n    }","commit_id":"d841dca58161110478d2f85ce032ab8afa49be14","url":"https://github.com/apache/groovy"},{"original_method":"/**\n     * @return a writer, an output stream, a markup builder or another requested object\n     */\n    public Object getVariable(String name) {\n        /*\n         * Check sanity.\n         */\n        if (name == null) {\n            throw new IllegalArgumentException(\"No variable with null key name.\");\n        }\n        if (name.length() == 0) {\n            throw new IllegalArgumentException(\"No variable with blank key name. [length=0]\");\n        }\n        /*\n         * Check implicite key names. See setVariable(String, Object)!\n         */\n        try {\n            if (\"out\".equals(name)) {\n                return response.getWriter();\n            }\n            if (\"sout\".equals(name)) {\n                return response.getOutputStream();\n            }\n            if (\"html\".equals(name)) {\n                if (html == null) {\n                    html = new MarkupBuilder(response.getWriter());\n                }\n                return html;\n            }\n        } catch (IOException e) {\n            String message = \"Failed to get writer or output stream from response.\";\n            context.log(message, e);\n            throw new RuntimeException(message, e);\n        }\n        /*\n         * Still here? Delegate to the binding object.\n         */\n        return binding.getVariable(name);\n    }","id":15084,"modified_method":"/**\n     * @return a writer, an output stream, a markup builder or another requested object\n     */\n    @Override\n    public Object getVariable(String name) {\n        lazyInit();\n        validateArgs(name, \"No variable with\");\n        return super.getVariable(name);\n    }","commit_id":"d841dca58161110478d2f85ce032ab8afa49be14","url":"https://github.com/apache/groovy"},{"original_method":"/**\n     * Initializes a servlet binding.\n     */\n    public ServletBinding(HttpServletRequest request, HttpServletResponse response, ServletContext context) {\n        this.binding = new Binding();\n        this.request = request;\n        this.response = response;\n        this.context = context;\n\n        /*\n         * Bind the default variables.\n         */\n        binding.setVariable(\"request\", request);\n        binding.setVariable(\"response\", response);\n        binding.setVariable(\"context\", context);\n        binding.setVariable(\"application\", context);\n\n        /*\n         * Bind the HTTP session object - if there is one.\n         * Note: we don't create one here!\n         */\n        binding.setVariable(\"session\", request.getSession(false));\n\n        /*\n         * Bind form parameter key-value hash map.\n         *\n         * If there are multiple, they are passed as an array.\n         */\n        Map params = new HashMap();\n        for (Enumeration names = request.getParameterNames(); names.hasMoreElements();) {\n            String name = (String) names.nextElement();\n            if (!binding.getVariables().containsKey(name)) {\n                String[] values = request.getParameterValues(name);\n                if (values.length == 1) {\n                    params.put(name, values[0]);\n                } else {\n                    params.put(name, values);\n                }\n            }\n        }\n        binding.setVariable(\"params\", params);\n\n        /*\n         * Bind request header key-value hash map.\n         */\n        Map headers = new HashMap();\n        for (Enumeration names = request.getHeaderNames(); names.hasMoreElements();) {\n            String headerName = (String) names.nextElement();\n            String headerValue = request.getHeader(headerName);\n            headers.put(headerName, headerValue);\n        }\n        binding.setVariable(\"headers\", headers);\n    }","id":15085,"modified_method":"/**\n     * Initializes a servlet binding.\n     *\n     * @param request  the HttpServletRequest object\n     * @param response the HttpServletRequest object\n     * @param context  the ServletContext object\n     */\n    public ServletBinding(HttpServletRequest request, HttpServletResponse response, ServletContext context) {\n        /*\n         * Bind the default variables.\n         */\n        super.setVariable(\"request\", request);\n        super.setVariable(\"response\", response);\n        super.setVariable(\"context\", context);\n        super.setVariable(\"application\", context);\n\n        /*\n         * Bind the HTTP session object - if there is one.\n         * Note: we don't create one here!\n         */\n        super.setVariable(\"session\", request.getSession(false));\n\n        /*\n         * Bind form parameter key-value hash map.\n         *\n         * If there are multiple, they are passed as an array.\n         */\n        Map params = new HashMap();\n        for (Enumeration names = request.getParameterNames(); names.hasMoreElements();) {\n            String name = (String) names.nextElement();\n            if (!super.getVariables().containsKey(name)) {\n                String[] values = request.getParameterValues(name);\n                if (values.length == 1) {\n                    params.put(name, values[0]);\n                } else {\n                    params.put(name, values);\n                }\n            }\n        }\n        super.setVariable(\"params\", params);\n\n        /*\n         * Bind request header key-value hash map.\n         */\n        Map<String, String> headers = new LinkedHashMap<String, String>();\n        for (Enumeration names = request.getHeaderNames(); names.hasMoreElements();) {\n            String headerName = (String) names.nextElement();\n            String headerValue = request.getHeader(headerName);\n            headers.put(headerName, headerValue);\n        }\n        super.setVariable(\"headers\", headers);\n    }","commit_id":"d841dca58161110478d2f85ce032ab8afa49be14","url":"https://github.com/apache/groovy"},{"original_method":"public void setVariable(String name, Object value) {\n        /*\n         * Check sanity.\n         */\n        if (name == null) {\n            throw new IllegalArgumentException(\"Can't bind variable to null key.\");\n        }\n        if (name.length() == 0) {\n            throw new IllegalArgumentException(\"Can't bind variable to blank key name. [length=0]\");\n        }\n        /*\n         * Check implicite key names. See getVariable(String)!\n         */\n        if (\"out\".equals(name)) {\n            throw new IllegalArgumentException(\"Can't bind variable to key named '\" + name + \"'.\");\n        }\n        if (\"sout\".equals(name)) {\n            throw new IllegalArgumentException(\"Can't bind variable to key named '\" + name + \"'.\");\n        }\n        if (\"html\".equals(name)) {\n            throw new IllegalArgumentException(\"Can't bind variable to key named '\" + name + \"'.\");\n        }\n        /*\n         * TODO Check default key names. See constructor(s).\n         */\n        \n        /*\n         * All checks passed, set the variable.\n         */\n        binding.setVariable(name, value);\n    }","id":15086,"modified_method":"@Override\n    public void setVariable(String name, Object value) {\n        lazyInit();\n        validateArgs(name, \"Can't bind variable to\");\n        excludeReservedName(name, \"out\");\n        excludeReservedName(name, \"sout\");\n        excludeReservedName(name, \"html\");\n        super.setVariable(name, value);\n    }","commit_id":"d841dca58161110478d2f85ce032ab8afa49be14","url":"https://github.com/apache/groovy"},{"original_method":"public Map getVariables() {\n        return binding.getVariables();\n    }","id":15087,"modified_method":"@Override\n    public Map getVariables() {\n        lazyInit();\n        return super.getVariables();\n    }","commit_id":"d841dca58161110478d2f85ce032ab8afa49be14","url":"https://github.com/apache/groovy"},{"original_method":"public OnmsIpInterface updateIpInterfaceAttributes(Integer nodeId, OnmsIpInterface scannedIface) {\n        if (scannedIface.getSnmpInterface() != null) {\n            scannedIface.setSnmpInterface(updateSnmpInterfaceAttributes(nodeId, scannedIface.getSnmpInterface()));\n        }\n        \n        OnmsIpInterface dbIface = m_ipInterfaceDao.findByNodeIdAndIpAddress(nodeId, scannedIface.getIpAddress());\n        if (dbIface != null) {\n            dbIface.mergeInterfaceAttributes(scannedIface);\n            m_ipInterfaceDao.save(dbIface);\n            return dbIface;\n        } else {\n            OnmsNode dbNode = m_nodeDao.load(nodeId);\n            assertNotNull(dbNode, \"no node found with nodeId %d\", nodeId);\n            // for performance reasons we don't add the ip interface to the node so we avoid loading all the interfaces\n            // setNode only sets the node in the interface\n            scannedIface.setNode(dbNode);\n            m_ipInterfaceDao.save(scannedIface);\n            AddEventVisitor visitor = new AddEventVisitor(m_eventForwarder);\n            scannedIface.visit(visitor);\n            return scannedIface;\n        }\n\n    }","id":15088,"modified_method":"public OnmsIpInterface updateIpInterfaceAttributes(Integer nodeId, OnmsIpInterface scannedIface) {\n        if (scannedIface.getSnmpInterface() != null) {\n            scannedIface.setSnmpInterface(updateSnmpInterfaceAttributes(nodeId, scannedIface.getSnmpInterface()));\n        }\n        \n        OnmsIpInterface dbIface = m_ipInterfaceDao.findByNodeIdAndIpAddress(nodeId, scannedIface.getIpAddress());\n        if (dbIface != null) {\n            dbIface.mergeInterfaceAttributes(scannedIface);\n            m_ipInterfaceDao.update(dbIface);\n            return dbIface;\n        } else {\n            OnmsNode dbNode = m_nodeDao.load(nodeId);\n            assertNotNull(dbNode, \"no node found with nodeId %d\", nodeId);\n            // for performance reasons we don't add the ip interface to the node so we avoid loading all the interfaces\n            // setNode only sets the node in the interface\n            scannedIface.setNode(dbNode);\n            saveOrUpdate(scannedIface);\n            AddEventVisitor visitor = new AddEventVisitor(m_eventForwarder);\n            scannedIface.visit(visitor);\n            return scannedIface;\n        }\n\n    }","commit_id":"792a49308e2633a50b3f838d0123f5b3440005cc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Transactional\n    public OnmsNode getRequisitionedNode(String foreignSource, String foreignId) throws ForeignSourceRepositoryException {\n        OnmsNodeRequisition nodeReq = m_foreignSourceRepository.getNodeRequisition(foreignSource, foreignId);\n        Assert.notNull(nodeReq, \"nodeReq for node \"+foreignSource+\":\"+foreignId+\" cannot be null!\");\n        return nodeReq.constructOnmsNodeFromRequisition();\n    }","id":15089,"modified_method":"@Transactional\n    public OnmsNode getRequisitionedNode(String foreignSource, String foreignId) throws ForeignSourceRepositoryException {\n        OnmsNodeRequisition nodeReq = m_foreignSourceRepository.getNodeRequisition(foreignSource, foreignId);\n        Assert.notNull(nodeReq, \"nodeReq for node \"+foreignSource+\":\"+foreignId+\" cannot be null!\");\n        OnmsNode node = nodeReq.constructOnmsNodeFromRequisition();\n        \n        // fill in real db categories\n        HashSet<OnmsCategory> dbCategories = new HashSet<OnmsCategory>();\n        for(OnmsCategory category : node.getCategories()) {\n            OnmsCategory dbCategory = createCategoryIfNecessary(category.getName());\n            dbCategories.add(dbCategory);\n        }\n        \n        node.setCategories(dbCategories);\n        \n        // fill in reall service types\n        node.visit(new ServiceTypeFulfiller());\n        \n        return node;\n    }","commit_id":"792a49308e2633a50b3f838d0123f5b3440005cc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public OnmsIpInterface updateIpInterfaceAttributes(Integer nodeId, OnmsIpInterface scannedIface) {\n        if (scannedIface.getSnmpInterface() != null) {\n            scannedIface.setSnmpInterface(updateSnmpInterfaceAttributes(nodeId, scannedIface.getSnmpInterface()));\n        }\n        \n        OnmsIpInterface dbIface = m_ipInterfaceDao.findByNodeIdAndIpAddress(nodeId, scannedIface.getIpAddress());\n        if (dbIface != null) {\n            dbIface.mergeInterfaceAttributes(scannedIface);\n            m_ipInterfaceDao.save(dbIface);\n            return dbIface;\n        } else {\n            OnmsNode dbNode = m_nodeDao.load(nodeId);\n            assertNotNull(dbNode, \"no node found with nodeId %d\", nodeId);\n            // for performance reasons we don't add the ip interface to the node so we avoid loading all the interfaces\n            // setNode only sets the node in the interface\n            scannedIface.setNode(dbNode);\n            m_ipInterfaceDao.save(scannedIface);\n            AddEventVisitor visitor = new AddEventVisitor(m_eventForwarder);\n            scannedIface.visit(visitor);\n            return scannedIface;\n        }\n\n    }","id":15090,"modified_method":"public OnmsIpInterface updateIpInterfaceAttributes(Integer nodeId, OnmsIpInterface scannedIface) {\n        if (scannedIface.getSnmpInterface() != null) {\n            scannedIface.setSnmpInterface(updateSnmpInterfaceAttributes(nodeId, scannedIface.getSnmpInterface()));\n        }\n        \n        OnmsIpInterface dbIface = m_ipInterfaceDao.findByNodeIdAndIpAddress(nodeId, scannedIface.getIpAddress());\n        if (dbIface != null) {\n            dbIface.mergeInterfaceAttributes(scannedIface);\n            m_ipInterfaceDao.update(dbIface);\n            return dbIface;\n        } else {\n            OnmsNode dbNode = m_nodeDao.load(nodeId);\n            assertNotNull(dbNode, \"no node found with nodeId %d\", nodeId);\n            // for performance reasons we don't add the ip interface to the node so we avoid loading all the interfaces\n            // setNode only sets the node in the interface\n            scannedIface.setNode(dbNode);\n            saveOrUpdate(scannedIface);\n            AddEventVisitor visitor = new AddEventVisitor(m_eventForwarder);\n            scannedIface.visit(visitor);\n            return scannedIface;\n        }\n\n    }","commit_id":"6fe795b5cb13b69f5723e24b72cd659dea2aa688","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Transactional\n    public OnmsNode getRequisitionedNode(String foreignSource, String foreignId) throws ForeignSourceRepositoryException {\n        OnmsNodeRequisition nodeReq = m_foreignSourceRepository.getNodeRequisition(foreignSource, foreignId);\n        Assert.notNull(nodeReq, \"nodeReq for node \"+foreignSource+\":\"+foreignId+\" cannot be null!\");\n        return nodeReq.constructOnmsNodeFromRequisition();\n    }","id":15091,"modified_method":"@Transactional\n    public OnmsNode getRequisitionedNode(String foreignSource, String foreignId) throws ForeignSourceRepositoryException {\n        OnmsNodeRequisition nodeReq = m_foreignSourceRepository.getNodeRequisition(foreignSource, foreignId);\n        Assert.notNull(nodeReq, \"nodeReq for node \"+foreignSource+\":\"+foreignId+\" cannot be null!\");\n        OnmsNode node = nodeReq.constructOnmsNodeFromRequisition();\n        \n        // fill in real db categories\n        HashSet<OnmsCategory> dbCategories = new HashSet<OnmsCategory>();\n        for(OnmsCategory category : node.getCategories()) {\n            OnmsCategory dbCategory = createCategoryIfNecessary(category.getName());\n            dbCategories.add(dbCategory);\n        }\n        \n        node.setCategories(dbCategories);\n        \n        // fill in reall service types\n        node.visit(new ServiceTypeFulfiller());\n        \n        return node;\n    }","commit_id":"6fe795b5cb13b69f5723e24b72cd659dea2aa688","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public OnmsIpInterface updateIpInterfaceAttributes(Integer nodeId, OnmsIpInterface scannedIface) {\n        if (scannedIface.getSnmpInterface() != null) {\n            scannedIface.setSnmpInterface(updateSnmpInterfaceAttributes(nodeId, scannedIface.getSnmpInterface()));\n        }\n        \n        OnmsIpInterface dbIface = m_ipInterfaceDao.findByNodeIdAndIpAddress(nodeId, scannedIface.getIpAddress());\n        if (dbIface != null) {\n            dbIface.mergeInterfaceAttributes(scannedIface);\n            m_ipInterfaceDao.save(dbIface);\n            return dbIface;\n        } else {\n            OnmsNode dbNode = m_nodeDao.load(nodeId);\n            assertNotNull(dbNode, \"no node found with nodeId %d\", nodeId);\n            // for performance reasons we don't add the ip interface to the node so we avoid loading all the interfaces\n            // setNode only sets the node in the interface\n            scannedIface.setNode(dbNode);\n            m_ipInterfaceDao.save(scannedIface);\n            AddEventVisitor visitor = new AddEventVisitor(m_eventForwarder);\n            scannedIface.visit(visitor);\n            return scannedIface;\n        }\n\n    }","id":15092,"modified_method":"public OnmsIpInterface updateIpInterfaceAttributes(Integer nodeId, OnmsIpInterface scannedIface) {\n        if (scannedIface.getSnmpInterface() != null) {\n            scannedIface.setSnmpInterface(updateSnmpInterfaceAttributes(nodeId, scannedIface.getSnmpInterface()));\n        }\n        \n        OnmsIpInterface dbIface = m_ipInterfaceDao.findByNodeIdAndIpAddress(nodeId, scannedIface.getIpAddress());\n        if (dbIface != null) {\n            dbIface.mergeInterfaceAttributes(scannedIface);\n            m_ipInterfaceDao.update(dbIface);\n            return dbIface;\n        } else {\n            OnmsNode dbNode = m_nodeDao.load(nodeId);\n            assertNotNull(dbNode, \"no node found with nodeId %d\", nodeId);\n            // for performance reasons we don't add the ip interface to the node so we avoid loading all the interfaces\n            // setNode only sets the node in the interface\n            scannedIface.setNode(dbNode);\n            saveOrUpdate(scannedIface);\n            AddEventVisitor visitor = new AddEventVisitor(m_eventForwarder);\n            scannedIface.visit(visitor);\n            return scannedIface;\n        }\n\n    }","commit_id":"abd955c1fdb1dfcdc11ea9da4acd3cc50f607e5c","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Transactional\n    public OnmsNode getRequisitionedNode(String foreignSource, String foreignId) throws ForeignSourceRepositoryException {\n        OnmsNodeRequisition nodeReq = m_foreignSourceRepository.getNodeRequisition(foreignSource, foreignId);\n        Assert.notNull(nodeReq, \"nodeReq for node \"+foreignSource+\":\"+foreignId+\" cannot be null!\");\n        return nodeReq.constructOnmsNodeFromRequisition();\n    }","id":15093,"modified_method":"@Transactional\n    public OnmsNode getRequisitionedNode(String foreignSource, String foreignId) throws ForeignSourceRepositoryException {\n        OnmsNodeRequisition nodeReq = m_foreignSourceRepository.getNodeRequisition(foreignSource, foreignId);\n        Assert.notNull(nodeReq, \"nodeReq for node \"+foreignSource+\":\"+foreignId+\" cannot be null!\");\n        OnmsNode node = nodeReq.constructOnmsNodeFromRequisition();\n        \n        // fill in real db categories\n        HashSet<OnmsCategory> dbCategories = new HashSet<OnmsCategory>();\n        for(OnmsCategory category : node.getCategories()) {\n            OnmsCategory dbCategory = createCategoryIfNecessary(category.getName());\n            dbCategories.add(dbCategory);\n        }\n        \n        node.setCategories(dbCategories);\n        \n        // fill in reall service types\n        node.visit(new ServiceTypeFulfiller());\n        \n        return node;\n    }","commit_id":"abd955c1fdb1dfcdc11ea9da4acd3cc50f607e5c","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private void mergeRangeConditionsToBetweenOperators(OSQLFilter filter) {\r\n    OSQLFilterCondition condition = filter.getRootCondition();\r\n\r\n    OSQLFilterCondition newCondition = convertToBetweenClause(condition);\r\n    if (newCondition != null) {\r\n      filter.setRootCondition(newCondition);\r\n      return;\r\n    }\r\n\r\n    mergeRangeConditionsToBetweenOperators(condition);\r\n  }","id":15094,"modified_method":"private void mergeRangeConditionsToBetweenOperators(OSQLFilter filter) {\r\n    OSQLFilterCondition condition = filter.getRootCondition();\r\n\r\n    OSQLFilterCondition newCondition = convertToBetweenClause(condition);\r\n    if (newCondition != null) {\r\n      filter.setRootCondition(newCondition);\r\n      metricRecorder.recordRangeQueryConvertedInBetween();\r\n      return;\r\n    }\r\n\r\n    mergeRangeConditionsToBetweenOperators(condition);\r\n  }","commit_id":"8ad92b6260e47a02d33384366cc91a1dae419f10","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"private void mergeRangeConditionsToBetweenOperators(OSQLFilterCondition condition) {\r\n    if (condition == null)\r\n      return;\r\n\r\n    OSQLFilterCondition newCondition;\r\n\r\n    if (condition.getLeft() instanceof OSQLFilterCondition) {\r\n      OSQLFilterCondition leftCondition = (OSQLFilterCondition) condition.getLeft();\r\n      newCondition = convertToBetweenClause(leftCondition);\r\n\r\n      if (newCondition != null)\r\n        condition.setLeft(newCondition);\r\n      else\r\n        mergeRangeConditionsToBetweenOperators(leftCondition);\r\n    }\r\n\r\n    if (condition.getRight() instanceof OSQLFilterCondition) {\r\n      OSQLFilterCondition rightCondition = (OSQLFilterCondition) condition.getRight();\r\n\r\n      newCondition = convertToBetweenClause(rightCondition);\r\n      if (newCondition != null)\r\n        condition.setRight(newCondition);\r\n      else\r\n        mergeRangeConditionsToBetweenOperators(rightCondition);\r\n    }\r\n  }","id":15095,"modified_method":"private void mergeRangeConditionsToBetweenOperators(OSQLFilterCondition condition) {\r\n    if (condition == null)\r\n      return;\r\n\r\n    OSQLFilterCondition newCondition;\r\n\r\n    if (condition.getLeft() instanceof OSQLFilterCondition) {\r\n      OSQLFilterCondition leftCondition = (OSQLFilterCondition) condition.getLeft();\r\n      newCondition = convertToBetweenClause(leftCondition);\r\n\r\n      if (newCondition != null) {\r\n        condition.setLeft(newCondition);\r\n        metricRecorder.recordRangeQueryConvertedInBetween();\r\n      } else\r\n        mergeRangeConditionsToBetweenOperators(leftCondition);\r\n    }\r\n\r\n    if (condition.getRight() instanceof OSQLFilterCondition) {\r\n      OSQLFilterCondition rightCondition = (OSQLFilterCondition) condition.getRight();\r\n\r\n      newCondition = convertToBetweenClause(rightCondition);\r\n      if (newCondition != null) {\r\n        condition.setRight(newCondition);\r\n        metricRecorder.recordRangeQueryConvertedInBetween();\r\n      } else\r\n        mergeRangeConditionsToBetweenOperators(rightCondition);\r\n    }\r\n  }","commit_id":"8ad92b6260e47a02d33384366cc91a1dae419f10","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"private OSQLFilterCondition convertToBetweenClause(OSQLFilterCondition condition) {\r\n    if (condition == null)\r\n      return null;\r\n\r\n    final Object right = condition.getRight();\r\n    final Object left = condition.getLeft();\r\n\r\n    final OQueryOperator operator = condition.getOperator();\r\n    if (!(operator instanceof OQueryOperatorAnd))\r\n      return null;\r\n\r\n    if (!(right instanceof OSQLFilterCondition))\r\n      return null;\r\n\r\n    if (!(left instanceof OSQLFilterCondition))\r\n      return null;\r\n\r\n    String rightField;\r\n\r\n    final OSQLFilterCondition rightCondition = (OSQLFilterCondition) right;\r\n    final OSQLFilterCondition leftCondition = (OSQLFilterCondition) left;\r\n\r\n    if (rightCondition.getLeft() instanceof OSQLFilterItemField && rightCondition.getRight() instanceof OSQLFilterItemField)\r\n      return condition;\r\n\r\n    if (!(rightCondition.getLeft() instanceof OSQLFilterItemField) && !(rightCondition.getRight() instanceof OSQLFilterItemField))\r\n      return condition;\r\n\r\n    final List<Object> betweenBoundaries = new ArrayList<Object>();\r\n\r\n    if (rightCondition.getLeft() instanceof OSQLFilterItemField) {\r\n      OSQLFilterItemField itemField = (OSQLFilterItemField) rightCondition.getLeft();\r\n      if (itemField.isFieldChain())\r\n        return null;\r\n\r\n      rightField = itemField.getRoot();\r\n      betweenBoundaries.add(rightCondition.getRight());\r\n    } else {\r\n      OSQLFilterItemField itemField = (OSQLFilterItemField) rightCondition.getRight();\r\n      if (itemField.isFieldChain())\r\n        return null;\r\n\r\n      rightField = itemField.getRoot();\r\n      betweenBoundaries.add(rightCondition.getLeft());\r\n    }\r\n\r\n    String leftField;\r\n    if (leftCondition.getLeft() instanceof OSQLFilterItemField) {\r\n      OSQLFilterItemField itemField = (OSQLFilterItemField) leftCondition.getLeft();\r\n      if (itemField.isFieldChain())\r\n        return null;\r\n\r\n      leftField = itemField.getRoot();\r\n      betweenBoundaries.add(leftCondition.getRight());\r\n    } else {\r\n      OSQLFilterItemField itemField = (OSQLFilterItemField) leftCondition.getRight();\r\n      if (itemField.isFieldChain())\r\n        return null;\r\n\r\n      leftField = itemField.getRoot();\r\n      betweenBoundaries.add(leftCondition.getLeft());\r\n    }\r\n\r\n    if (!leftField.equalsIgnoreCase(rightField))\r\n      return null;\r\n\r\n    final OQueryOperator rightOperator = ((OSQLFilterCondition) right).getOperator();\r\n    final OQueryOperator leftOperator = ((OSQLFilterCondition) left).getOperator();\r\n\r\n    if ((rightOperator instanceof OQueryOperatorMajor || rightOperator instanceof OQueryOperatorMajorEquals)\r\n        && (leftOperator instanceof OQueryOperatorMinor || leftOperator instanceof OQueryOperatorMinorEquals)) {\r\n\r\n      final OQueryOperatorBetween between = new OQueryOperatorBetween();\r\n\r\n      if (rightOperator instanceof OQueryOperatorMajor)\r\n        between.setLeftInclusive(false);\r\n\r\n      if (leftOperator instanceof OQueryOperatorMinor)\r\n        between.setRightInclusive(false);\r\n\r\n      return new OSQLFilterCondition(new OSQLFilterItemField(this, leftField), between, betweenBoundaries);\r\n    }\r\n\r\n    if ((leftOperator instanceof OQueryOperatorMajor || leftOperator instanceof OQueryOperatorMajorEquals)\r\n        && (rightOperator instanceof OQueryOperatorMinor || rightOperator instanceof OQueryOperatorMinorEquals)) {\r\n      final OQueryOperatorBetween between = new OQueryOperatorBetween();\r\n\r\n      if (leftOperator instanceof OQueryOperatorMajor)\r\n        between.setLeftInclusive(false);\r\n\r\n      if (rightOperator instanceof OQueryOperatorMinor)\r\n        between.setRightInclusive(false);\r\n\r\n      return new OSQLFilterCondition(new OSQLFilterItemField(this, leftField), between, betweenBoundaries);\r\n\r\n    }\r\n\r\n    return null;\r\n  }","id":15096,"modified_method":"private OSQLFilterCondition convertToBetweenClause(OSQLFilterCondition condition) {\r\n    if (condition == null)\r\n      return null;\r\n\r\n    final Object right = condition.getRight();\r\n    final Object left = condition.getLeft();\r\n\r\n    final OQueryOperator operator = condition.getOperator();\r\n    if (!(operator instanceof OQueryOperatorAnd))\r\n      return null;\r\n\r\n    if (!(right instanceof OSQLFilterCondition))\r\n      return null;\r\n\r\n    if (!(left instanceof OSQLFilterCondition))\r\n      return null;\r\n\r\n    String rightField;\r\n\r\n    final OSQLFilterCondition rightCondition = (OSQLFilterCondition) right;\r\n    final OSQLFilterCondition leftCondition = (OSQLFilterCondition) left;\r\n\r\n    if (rightCondition.getLeft() instanceof OSQLFilterItemField && rightCondition.getRight() instanceof OSQLFilterItemField)\r\n      return null;\r\n\r\n    if (!(rightCondition.getLeft() instanceof OSQLFilterItemField) && !(rightCondition.getRight() instanceof OSQLFilterItemField))\r\n      return null;\r\n\r\n    if (leftCondition.getLeft() instanceof OSQLFilterItemField && leftCondition.getRight() instanceof OSQLFilterItemField)\r\n      return null;\r\n\r\n    if (!(leftCondition.getLeft() instanceof OSQLFilterItemField) && !(leftCondition.getRight() instanceof OSQLFilterItemField))\r\n      return null;\r\n\r\n    final List<Object> betweenBoundaries = new ArrayList<Object>();\r\n\r\n    if (rightCondition.getLeft() instanceof OSQLFilterItemField) {\r\n      OSQLFilterItemField itemField = (OSQLFilterItemField) rightCondition.getLeft();\r\n      if (!itemField.isFieldChain())\r\n        return null;\r\n\r\n      if (itemField.getFieldChain().getItemCount() > 1)\r\n        return null;\r\n\r\n      rightField = itemField.getRoot();\r\n      betweenBoundaries.add(rightCondition.getRight());\r\n    } else if (rightCondition.getRight() instanceof OSQLFilterItemField) {\r\n      OSQLFilterItemField itemField = (OSQLFilterItemField) rightCondition.getRight();\r\n      if (!itemField.isFieldChain())\r\n        return null;\r\n\r\n      if (itemField.getFieldChain().getItemCount() > 1)\r\n        return null;\r\n\r\n      rightField = itemField.getRoot();\r\n      betweenBoundaries.add(rightCondition.getLeft());\r\n    } else\r\n      return null;\r\n\r\n    betweenBoundaries.add(\"and\");\r\n\r\n    String leftField;\r\n    if (leftCondition.getLeft() instanceof OSQLFilterItemField) {\r\n      OSQLFilterItemField itemField = (OSQLFilterItemField) leftCondition.getLeft();\r\n      if (!itemField.isFieldChain())\r\n        return null;\r\n\r\n      if (itemField.getFieldChain().getItemCount() > 1)\r\n        return null;\r\n\r\n      leftField = itemField.getRoot();\r\n      betweenBoundaries.add(leftCondition.getRight());\r\n    } else if (leftCondition.getRight() instanceof OSQLFilterItemField) {\r\n      OSQLFilterItemField itemField = (OSQLFilterItemField) leftCondition.getRight();\r\n      if (!itemField.isFieldChain())\r\n        return null;\r\n\r\n      if (itemField.getFieldChain().getItemCount() > 1)\r\n        return null;\r\n\r\n      leftField = itemField.getRoot();\r\n      betweenBoundaries.add(leftCondition.getLeft());\r\n    } else\r\n      return null;\r\n\r\n    if (!leftField.equalsIgnoreCase(rightField))\r\n      return null;\r\n\r\n    final OQueryOperator rightOperator = ((OSQLFilterCondition) right).getOperator();\r\n    final OQueryOperator leftOperator = ((OSQLFilterCondition) left).getOperator();\r\n\r\n    if ((rightOperator instanceof OQueryOperatorMajor || rightOperator instanceof OQueryOperatorMajorEquals)\r\n        && (leftOperator instanceof OQueryOperatorMinor || leftOperator instanceof OQueryOperatorMinorEquals)) {\r\n\r\n      final OQueryOperatorBetween between = new OQueryOperatorBetween();\r\n\r\n      if (rightOperator instanceof OQueryOperatorMajor)\r\n        between.setLeftInclusive(false);\r\n\r\n      if (leftOperator instanceof OQueryOperatorMinor)\r\n        between.setRightInclusive(false);\r\n\r\n      return new OSQLFilterCondition(new OSQLFilterItemField(this, leftField), between, betweenBoundaries.toArray());\r\n    }\r\n\r\n    if ((leftOperator instanceof OQueryOperatorMajor || leftOperator instanceof OQueryOperatorMajorEquals)\r\n        && (rightOperator instanceof OQueryOperatorMinor || rightOperator instanceof OQueryOperatorMinorEquals)) {\r\n      final OQueryOperatorBetween between = new OQueryOperatorBetween();\r\n\r\n      if (leftOperator instanceof OQueryOperatorMajor)\r\n        between.setLeftInclusive(false);\r\n\r\n      if (rightOperator instanceof OQueryOperatorMinor)\r\n        between.setRightInclusive(false);\r\n\r\n      Collections.reverse(betweenBoundaries);\r\n\r\n      return new OSQLFilterCondition(new OSQLFilterItemField(this, leftField), between, betweenBoundaries.toArray());\r\n\r\n    }\r\n\r\n    return null;\r\n  }","commit_id":"8ad92b6260e47a02d33384366cc91a1dae419f10","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        jLabel2 = new javax.swing.JLabel();\n        jLabel4 = new javax.swing.JLabel();\n        jLabel6 = new javax.swing.JLabel();\n        jButton3 = new javax.swing.JButton();\n        ingestWarningLabel = new javax.swing.JLabel();\n        jScrollPane1 = new javax.swing.JScrollPane();\n        hashSetTable = new HashSetTable();\n        deleteDatabaseButton = new javax.swing.JButton();\n        importDatabaseButton = new javax.swing.JButton();\n        hashDatabasesLabel = new javax.swing.JLabel();\n        nameLabel = new javax.swing.JLabel();\n        hashDbNameLabel = new javax.swing.JLabel();\n        hashDbLocationLabel = new javax.swing.JLabel();\n        locationLabel = new javax.swing.JLabel();\n        typeLabel = new javax.swing.JLabel();\n        hashDbTypeLabel = new javax.swing.JLabel();\n        hashDbIndexStatusLabel = new javax.swing.JLabel();\n        indexLabel = new javax.swing.JLabel();\n        indexButton = new javax.swing.JButton();\n        sendIngestMessagesCheckBox = new javax.swing.JCheckBox();\n        informationLabel = new javax.swing.JLabel();\n        optionsLabel = new javax.swing.JLabel();\n        informationSeparator = new javax.swing.JSeparator();\n        optionsSeparator = new javax.swing.JSeparator();\n        createDatabaseButton = new javax.swing.JButton();\n        indexPathLabelLabel = new javax.swing.JLabel();\n        indexPathLabel = new javax.swing.JLabel();\n\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.jLabel2.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.jLabel4.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.jLabel6.text\")); // NOI18N\n\n        jButton3.setFont(jButton3.getFont().deriveFont(14.0f));\n        org.openide.awt.Mnemonics.setLocalizedText(jButton3, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.jButton3.text\")); // NOI18N\n\n        setMinimumSize(new java.awt.Dimension(700, 500));\n        setPreferredSize(new java.awt.Dimension(700, 500));\n\n        ingestWarningLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/modules/hashdatabase/warning16.png\"))); // NOI18N NON-NLS\n        org.openide.awt.Mnemonics.setLocalizedText(ingestWarningLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.ingestWarningLabel.text\")); // NOI18N\n\n        hashSetTable.setModel(new javax.swing.table.DefaultTableModel(\n            new Object [][] {\n\n            },\n            new String [] {\n\n            }\n        ));\n        hashSetTable.setShowHorizontalLines(false);\n        hashSetTable.setShowVerticalLines(false);\n        hashSetTable.addKeyListener(new java.awt.event.KeyAdapter() {\n            public void keyPressed(java.awt.event.KeyEvent evt) {\n                hashSetTableKeyPressed(evt);\n            }\n        });\n        jScrollPane1.setViewportView(hashSetTable);\n\n        deleteDatabaseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/modules/hashdatabase/delete16.png\"))); // NOI18N NON-NLS\n        org.openide.awt.Mnemonics.setLocalizedText(deleteDatabaseButton, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.deleteDatabaseButton.text\")); // NOI18N\n        deleteDatabaseButton.setMaximumSize(new java.awt.Dimension(140, 25));\n        deleteDatabaseButton.setMinimumSize(new java.awt.Dimension(140, 25));\n        deleteDatabaseButton.setPreferredSize(new java.awt.Dimension(140, 25));\n        deleteDatabaseButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                deleteDatabaseButtonActionPerformed(evt);\n            }\n        });\n\n        importDatabaseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/modules/hashdatabase/import16.png\"))); // NOI18N NON-NLS\n        org.openide.awt.Mnemonics.setLocalizedText(importDatabaseButton, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.importDatabaseButton.text\")); // NOI18N\n        importDatabaseButton.setMaximumSize(new java.awt.Dimension(140, 25));\n        importDatabaseButton.setMinimumSize(new java.awt.Dimension(140, 25));\n        importDatabaseButton.setPreferredSize(new java.awt.Dimension(140, 25));\n        importDatabaseButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                importDatabaseButtonActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(hashDatabasesLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.hashDatabasesLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(nameLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.nameLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(hashDbNameLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.hashDbNameLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(hashDbLocationLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.hashDbLocationLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(locationLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.locationLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(typeLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.typeLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(hashDbTypeLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.hashDbTypeLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(hashDbIndexStatusLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.hashDbIndexStatusLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(indexLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.indexLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(indexButton, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.indexButton.text\")); // NOI18N\n        indexButton.setEnabled(false);\n        indexButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                indexButtonActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(sendIngestMessagesCheckBox, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.sendIngestMessagesCheckBox.text\")); // NOI18N\n        sendIngestMessagesCheckBox.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                sendIngestMessagesCheckBoxActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(informationLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.informationLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(optionsLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.optionsLabel.text\")); // NOI18N\n\n        createDatabaseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/modules/hashdatabase/new16.png\"))); // NOI18N NON-NLS\n        org.openide.awt.Mnemonics.setLocalizedText(createDatabaseButton, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.createDatabaseButton.text\")); // NOI18N\n        createDatabaseButton.setMaximumSize(new java.awt.Dimension(140, 25));\n        createDatabaseButton.setMinimumSize(new java.awt.Dimension(140, 25));\n        createDatabaseButton.setPreferredSize(new java.awt.Dimension(140, 25));\n        createDatabaseButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                createDatabaseButtonActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(indexPathLabelLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.indexPathLabelLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(indexPathLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.indexPathLabel.text\")); // NOI18N\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(layout.createSequentialGroup()\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                    .addGroup(layout.createSequentialGroup()\n                                        .addComponent(informationLabel)\n                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                        .addComponent(informationSeparator))\n                                    .addComponent(ingestWarningLabel)\n                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                                        .addGap(10, 10, 10)\n                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                            .addGroup(layout.createSequentialGroup()\n                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                                    .addComponent(locationLabel)\n                                                    .addComponent(indexButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                                    .addComponent(typeLabel)\n                                                    .addComponent(indexLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                                    .addComponent(indexPathLabelLabel))\n                                                .addGap(10, 10, 10)\n                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                                    .addComponent(hashDbTypeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)\n                                                    .addComponent(hashDbLocationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                                                    .addComponent(indexPathLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                                                    .addComponent(hashDbIndexStatusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))\n                                            .addGroup(layout.createSequentialGroup()\n                                                .addComponent(nameLabel)\n                                                .addGap(53, 53, 53)\n                                                .addComponent(hashDbNameLabel)\n                                                .addGap(0, 0, Short.MAX_VALUE))))\n                                    .addGroup(layout.createSequentialGroup()\n                                        .addComponent(optionsLabel)\n                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                        .addComponent(optionsSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))))\n                            .addGroup(layout.createSequentialGroup()\n                                .addGap(23, 23, 23)\n                                .addComponent(sendIngestMessagesCheckBox)\n                                .addGap(0, 0, Short.MAX_VALUE))))\n                    .addGroup(layout.createSequentialGroup()\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(hashDatabasesLabel)\n                            .addGroup(layout.createSequentialGroup()\n                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)\n                                    .addComponent(deleteDatabaseButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)\n                                    .addComponent(createDatabaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(importDatabaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))\n                        .addGap(0, 0, Short.MAX_VALUE)))\n                .addGap(24, 24, 24))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(hashDatabasesLabel)\n                .addGap(6, 6, 6)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(layout.createSequentialGroup()\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(informationLabel)\n                            .addGroup(layout.createSequentialGroup()\n                                .addGap(7, 7, 7)\n                                .addComponent(informationSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)))\n                        .addGap(7, 7, 7)\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(nameLabel)\n                            .addComponent(hashDbNameLabel))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(typeLabel)\n                            .addComponent(hashDbTypeLabel))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(locationLabel)\n                            .addComponent(hashDbLocationLabel))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(indexPathLabelLabel)\n                            .addComponent(indexPathLabel))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(indexLabel)\n                            .addComponent(hashDbIndexStatusLabel))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(indexButton)\n                        .addGap(18, 18, 18)\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                            .addComponent(optionsLabel)\n                            .addComponent(optionsSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE))\n                        .addGap(18, 18, 18)\n                        .addComponent(sendIngestMessagesCheckBox)\n                        .addGap(18, 18, 18)\n                        .addComponent(ingestWarningLabel)\n                        .addGap(0, 0, Short.MAX_VALUE))\n                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(importDatabaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(createDatabaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(deleteDatabaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap())\n        );\n    }","id":15097,"modified_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        jLabel2 = new javax.swing.JLabel();\n        jLabel4 = new javax.swing.JLabel();\n        jLabel6 = new javax.swing.JLabel();\n        jButton3 = new javax.swing.JButton();\n        ingestWarningLabel = new javax.swing.JLabel();\n        jScrollPane1 = new javax.swing.JScrollPane();\n        hashSetTable = new HashSetTable();\n        deleteDatabaseButton = new javax.swing.JButton();\n        importDatabaseButton = new javax.swing.JButton();\n        hashDatabasesLabel = new javax.swing.JLabel();\n        nameLabel = new javax.swing.JLabel();\n        hashDbNameLabel = new javax.swing.JLabel();\n        hashDbLocationLabel = new javax.swing.JLabel();\n        locationLabel = new javax.swing.JLabel();\n        typeLabel = new javax.swing.JLabel();\n        hashDbTypeLabel = new javax.swing.JLabel();\n        hashDbIndexStatusLabel = new javax.swing.JLabel();\n        indexLabel = new javax.swing.JLabel();\n        indexButton = new javax.swing.JButton();\n        sendIngestMessagesCheckBox = new javax.swing.JCheckBox();\n        informationLabel = new javax.swing.JLabel();\n        optionsLabel = new javax.swing.JLabel();\n        informationSeparator = new javax.swing.JSeparator();\n        optionsSeparator = new javax.swing.JSeparator();\n        createDatabaseButton = new javax.swing.JButton();\n        indexPathLabelLabel = new javax.swing.JLabel();\n        indexPathLabel = new javax.swing.JLabel();\n\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.jLabel2.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.jLabel4.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.jLabel6.text\")); // NOI18N\n\n        jButton3.setFont(new java.awt.Font(jButton3.getFont().getName(), Font.PLAIN, 14));\n        org.openide.awt.Mnemonics.setLocalizedText(jButton3, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.jButton3.text\")); // NOI18N\n\n        setMinimumSize(new java.awt.Dimension(700, 500));\n        setPreferredSize(new java.awt.Dimension(700, 500));\n\n        ingestWarningLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/modules/hashdatabase/warning16.png\"))); // NOI18N NON-NLS\n        org.openide.awt.Mnemonics.setLocalizedText(ingestWarningLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.ingestWarningLabel.text\")); // NOI18N\n\n        hashSetTable.setModel(new javax.swing.table.DefaultTableModel(\n            new Object [][] {\n\n            },\n            new String [] {\n\n            }\n        ));\n        hashSetTable.setShowHorizontalLines(false);\n        hashSetTable.setShowVerticalLines(false);\n        hashSetTable.addKeyListener(new java.awt.event.KeyAdapter() {\n            public void keyPressed(java.awt.event.KeyEvent evt) {\n                hashSetTableKeyPressed(evt);\n            }\n        });\n        jScrollPane1.setViewportView(hashSetTable);\n\n        deleteDatabaseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/modules/hashdatabase/delete16.png\"))); // NOI18N NON-NLS\n        org.openide.awt.Mnemonics.setLocalizedText(deleteDatabaseButton, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.deleteDatabaseButton.text\")); // NOI18N\n        deleteDatabaseButton.setMaximumSize(new java.awt.Dimension(140, 25));\n        deleteDatabaseButton.setMinimumSize(new java.awt.Dimension(140, 25));\n        deleteDatabaseButton.setPreferredSize(new java.awt.Dimension(140, 25));\n        deleteDatabaseButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                deleteDatabaseButtonActionPerformed(evt);\n            }\n        });\n\n        importDatabaseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/modules/hashdatabase/import16.png\"))); // NOI18N NON-NLS\n        org.openide.awt.Mnemonics.setLocalizedText(importDatabaseButton, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.importDatabaseButton.text\")); // NOI18N\n        importDatabaseButton.setMaximumSize(new java.awt.Dimension(140, 25));\n        importDatabaseButton.setMinimumSize(new java.awt.Dimension(140, 25));\n        importDatabaseButton.setPreferredSize(new java.awt.Dimension(140, 25));\n        importDatabaseButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                importDatabaseButtonActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(hashDatabasesLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.hashDatabasesLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(nameLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.nameLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(hashDbNameLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.hashDbNameLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(hashDbLocationLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.hashDbLocationLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(locationLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.locationLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(typeLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.typeLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(hashDbTypeLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.hashDbTypeLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(hashDbIndexStatusLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.hashDbIndexStatusLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(indexLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.indexLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(indexButton, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.indexButton.text\")); // NOI18N\n        indexButton.setEnabled(false);\n        indexButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                indexButtonActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(sendIngestMessagesCheckBox, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.sendIngestMessagesCheckBox.text\")); // NOI18N\n        sendIngestMessagesCheckBox.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                sendIngestMessagesCheckBoxActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(informationLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.informationLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(optionsLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.optionsLabel.text\")); // NOI18N\n\n        createDatabaseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/modules/hashdatabase/new16.png\"))); // NOI18N NON-NLS\n        org.openide.awt.Mnemonics.setLocalizedText(createDatabaseButton, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.createDatabaseButton.text\")); // NOI18N\n        createDatabaseButton.setMaximumSize(new java.awt.Dimension(140, 25));\n        createDatabaseButton.setMinimumSize(new java.awt.Dimension(140, 25));\n        createDatabaseButton.setPreferredSize(new java.awt.Dimension(140, 25));\n        createDatabaseButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                createDatabaseButtonActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(indexPathLabelLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.indexPathLabelLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(indexPathLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.indexPathLabel.text\")); // NOI18N\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(layout.createSequentialGroup()\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                    .addGroup(layout.createSequentialGroup()\n                                        .addComponent(informationLabel)\n                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                        .addComponent(informationSeparator))\n                                    .addComponent(ingestWarningLabel)\n                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                                        .addGap(10, 10, 10)\n                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                            .addGroup(layout.createSequentialGroup()\n                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                                    .addComponent(locationLabel)\n                                                    .addComponent(indexButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                                    .addComponent(typeLabel)\n                                                    .addComponent(indexLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                                    .addComponent(indexPathLabelLabel))\n                                                .addGap(10, 10, 10)\n                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                                    .addComponent(hashDbTypeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)\n                                                    .addComponent(hashDbLocationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                                                    .addComponent(indexPathLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                                                    .addComponent(hashDbIndexStatusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))\n                                            .addGroup(layout.createSequentialGroup()\n                                                .addComponent(nameLabel)\n                                                .addGap(53, 53, 53)\n                                                .addComponent(hashDbNameLabel)\n                                                .addGap(0, 0, Short.MAX_VALUE))))\n                                    .addGroup(layout.createSequentialGroup()\n                                        .addComponent(optionsLabel)\n                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                        .addComponent(optionsSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))))\n                            .addGroup(layout.createSequentialGroup()\n                                .addGap(23, 23, 23)\n                                .addComponent(sendIngestMessagesCheckBox)\n                                .addGap(0, 0, Short.MAX_VALUE))))\n                    .addGroup(layout.createSequentialGroup()\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(hashDatabasesLabel)\n                            .addGroup(layout.createSequentialGroup()\n                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)\n                                    .addComponent(deleteDatabaseButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)\n                                    .addComponent(createDatabaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(importDatabaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))\n                        .addGap(0, 0, Short.MAX_VALUE)))\n                .addGap(24, 24, 24))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(hashDatabasesLabel)\n                .addGap(6, 6, 6)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(layout.createSequentialGroup()\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(informationLabel)\n                            .addGroup(layout.createSequentialGroup()\n                                .addGap(7, 7, 7)\n                                .addComponent(informationSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)))\n                        .addGap(7, 7, 7)\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(nameLabel)\n                            .addComponent(hashDbNameLabel))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(typeLabel)\n                            .addComponent(hashDbTypeLabel))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(locationLabel)\n                            .addComponent(hashDbLocationLabel))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(indexPathLabelLabel)\n                            .addComponent(indexPathLabel))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(indexLabel)\n                            .addComponent(hashDbIndexStatusLabel))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(indexButton)\n                        .addGap(18, 18, 18)\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                            .addComponent(optionsLabel)\n                            .addComponent(optionsSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE))\n                        .addGap(18, 18, 18)\n                        .addComponent(sendIngestMessagesCheckBox)\n                        .addGap(18, 18, 18)\n                        .addComponent(ingestWarningLabel)\n                        .addGap(0, 0, Short.MAX_VALUE))\n                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(importDatabaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(createDatabaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(deleteDatabaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap())\n        );\n    }","commit_id":"9dd7eaf5a7c62b27a3f392b15f130801e642daa6","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        INDEXING_PROGBAR = new javax.swing.JProgressBar();\n        GO_GET_COFFEE_LABEL = new javax.swing.JLabel();\n        CURRENTLYON_LABEL = new javax.swing.JLabel();\n        CURRENTDB_LABEL = new javax.swing.JLabel();\n        CANCEL_BUTTON = new javax.swing.JButton();\n\n        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);\n        setMinimumSize(new java.awt.Dimension(519, 130));\n        setModal(true);\n        setResizable(false);\n\n        GO_GET_COFFEE_LABEL.setDisplayedMnemonic('H');\n        org.openide.awt.Mnemonics.setLocalizedText(GO_GET_COFFEE_LABEL, org.openide.util.NbBundle.getMessage(ModalNoButtons.class, \"ModalNoButtons.GO_GET_COFFEE_LABEL.text\")); // NOI18N\n\n        CURRENTLYON_LABEL.setFont(CURRENTLYON_LABEL.getFont().deriveFont(14.0f));\n        org.openide.awt.Mnemonics.setLocalizedText(CURRENTLYON_LABEL, org.openide.util.NbBundle.getMessage(ModalNoButtons.class, \"ModalNoButtons.CURRENTLYON_LABEL.text\")); // NOI18N\n\n        CURRENTDB_LABEL.setFont(CURRENTDB_LABEL.getFont().deriveFont(14.0f));\n        org.openide.awt.Mnemonics.setLocalizedText(CURRENTDB_LABEL, org.openide.util.NbBundle.getMessage(ModalNoButtons.class, \"ModalNoButtons.CURRENTDB_LABEL.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(CANCEL_BUTTON, org.openide.util.NbBundle.getMessage(ModalNoButtons.class, \"ModalNoButtons.CANCEL_BUTTON.text\")); // NOI18N\n        CANCEL_BUTTON.addMouseListener(new java.awt.event.MouseAdapter() {\n            public void mouseClicked(java.awt.event.MouseEvent evt) {\n                CANCEL_BUTTONMouseClicked(evt);\n            }\n        });\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());\n        getContentPane().setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(INDEXING_PROGBAR, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                    .addGroup(layout.createSequentialGroup()\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(GO_GET_COFFEE_LABEL)\n                            .addGroup(layout.createSequentialGroup()\n                                .addComponent(CURRENTLYON_LABEL)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(CURRENTDB_LABEL)))\n                        .addGap(0, 161, Short.MAX_VALUE))\n                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                        .addGap(0, 0, Short.MAX_VALUE)\n                        .addComponent(CANCEL_BUTTON, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))\n                .addContainerGap())\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(GO_GET_COFFEE_LABEL)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(CURRENTLYON_LABEL)\n                    .addComponent(CURRENTDB_LABEL))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                .addComponent(INDEXING_PROGBAR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(CANCEL_BUTTON)\n                .addGap(36, 36, 36))\n        );\n\n        pack();\n    }","id":15098,"modified_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        INDEXING_PROGBAR = new javax.swing.JProgressBar();\n        GO_GET_COFFEE_LABEL = new javax.swing.JLabel();\n        CURRENTLYON_LABEL = new javax.swing.JLabel();\n        CURRENTDB_LABEL = new javax.swing.JLabel();\n        CANCEL_BUTTON = new javax.swing.JButton();\n\n        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);\n        setMinimumSize(new java.awt.Dimension(519, 130));\n        setModal(true);\n        setResizable(false);\n\n        GO_GET_COFFEE_LABEL.setDisplayedMnemonic('H');\n        org.openide.awt.Mnemonics.setLocalizedText(GO_GET_COFFEE_LABEL, org.openide.util.NbBundle.getMessage(ModalNoButtons.class, \"ModalNoButtons.GO_GET_COFFEE_LABEL.text\")); // NOI18N\n\n        CURRENTLYON_LABEL.setFont(new java.awt.Font(CURRENTLYON_LABEL.getFont().getName(), Font.PLAIN, 14));\n        org.openide.awt.Mnemonics.setLocalizedText(CURRENTLYON_LABEL, org.openide.util.NbBundle.getMessage(ModalNoButtons.class, \"ModalNoButtons.CURRENTLYON_LABEL.text\")); // NOI18N\n\n        CURRENTDB_LABEL.setFont(new java.awt.Font(CURRENTDB_LABEL.getFont().getName(), Font.PLAIN, 14));\n        org.openide.awt.Mnemonics.setLocalizedText(CURRENTDB_LABEL, org.openide.util.NbBundle.getMessage(ModalNoButtons.class, \"ModalNoButtons.CURRENTDB_LABEL.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(CANCEL_BUTTON, org.openide.util.NbBundle.getMessage(ModalNoButtons.class, \"ModalNoButtons.CANCEL_BUTTON.text\")); // NOI18N\n        CANCEL_BUTTON.addMouseListener(new java.awt.event.MouseAdapter() {\n            public void mouseClicked(java.awt.event.MouseEvent evt) {\n                CANCEL_BUTTONMouseClicked(evt);\n            }\n        });\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());\n        getContentPane().setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(INDEXING_PROGBAR, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                    .addGroup(layout.createSequentialGroup()\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(GO_GET_COFFEE_LABEL)\n                            .addGroup(layout.createSequentialGroup()\n                                .addComponent(CURRENTLYON_LABEL)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(CURRENTDB_LABEL)))\n                        .addGap(0, 161, Short.MAX_VALUE))\n                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                        .addGap(0, 0, Short.MAX_VALUE)\n                        .addComponent(CANCEL_BUTTON, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))\n                .addContainerGap())\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(GO_GET_COFFEE_LABEL)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(CURRENTLYON_LABEL)\n                    .addComponent(CURRENTDB_LABEL))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                .addComponent(INDEXING_PROGBAR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(CANCEL_BUTTON)\n                .addGap(36, 36, 36))\n        );\n\n        pack();\n    }","commit_id":"9dd7eaf5a7c62b27a3f392b15f130801e642daa6","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/** This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        closeButton = new javax.swing.JButton();\n        editorPanel = new javax.swing.JPanel();\n        newCaseButton = new javax.swing.JButton();\n        openRecentButton = new javax.swing.JButton();\n        createNewLabel = new javax.swing.JLabel();\n        openRecentLabel = new javax.swing.JLabel();\n        openCaseButton = new javax.swing.JButton();\n        openLabel = new javax.swing.JLabel();\n        autopsyLogo = new javax.swing.JLabel();\n        this.autopsyLogo.setText(\"\");\n\n        closeButton.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.closeButton.text\")); // NOI18N\n\n        newCaseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/casemodule/btn_icon_create_new_case.png\"))); // NOI18N NON-NLS\n        newCaseButton.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.newCaseButton.text\")); // NOI18N\n        newCaseButton.setBorder(null);\n        newCaseButton.setBorderPainted(false);\n        newCaseButton.setContentAreaFilled(false);\n        newCaseButton.setPreferredSize(new java.awt.Dimension(70, 70));\n        newCaseButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                newCaseButtonActionPerformed(evt);\n            }\n        });\n\n        openRecentButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/casemodule/btn_icon_open_recent.png\"))); // NOI18N NON-NLS\n        openRecentButton.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.openRecentButton.text\")); // NOI18N\n        openRecentButton.setBorder(null);\n        openRecentButton.setBorderPainted(false);\n        openRecentButton.setContentAreaFilled(false);\n        openRecentButton.setPreferredSize(new java.awt.Dimension(70, 70));\n        openRecentButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                openRecentButtonActionPerformed(evt);\n            }\n        });\n\n//        createNewLabel.setFont(new java.awt.Font(\"Tahoma\", 0, 13)); // NOI18N NON-NLS\n        createNewLabel.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.createNewLabel.text\")); // NOI18N\n        createNewLabel.setFont(createNewLabel.getFont().deriveFont(13.0f));\n\n//        openRecentLabel.setFont(new java.awt.Font(\"Tahoma\", 0, 13)); // NOI18N NON-NLS\n        openRecentLabel.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.openRecentLabel.text\")); // NOI18N\n        openRecentLabel.setFont(openRecentLabel.getFont().deriveFont(13.0f));\n\n        openCaseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/casemodule/btn_icon_open_existing.png\"))); // NOI18N NON-NLS\n        openCaseButton.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.openCaseButton.text\")); // NOI18N\n        openCaseButton.setBorder(null);\n        openCaseButton.setBorderPainted(false);\n        openCaseButton.setContentAreaFilled(false);\n        openCaseButton.setMargin(new java.awt.Insets(1, 1, 1, 1));\n        openCaseButton.setPreferredSize(new java.awt.Dimension(70, 70));\n        openCaseButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                openCaseButtonActionPerformed(evt);\n            }\n        });\n\n//        openLabel.setFont(new java.awt.Font(\"Tahoma\", 0, 13)); // NOI18N NON-NLS\n        openLabel.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.openLabel.text\")); // NOI18N\n        openLabel.setFont(openLabel.getFont().deriveFont(13.0f));\n\n        javax.swing.GroupLayout editorPanelLayout = new javax.swing.GroupLayout(editorPanel);\n        editorPanel.setLayout(editorPanelLayout);\n        editorPanelLayout.setHorizontalGroup(\n            editorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(editorPanelLayout.createSequentialGroup()\n                .addGroup(editorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(editorPanelLayout.createSequentialGroup()\n                        .addComponent(newCaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(createNewLabel))\n                    .addGroup(editorPanelLayout.createSequentialGroup()\n                        .addComponent(openRecentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(openRecentLabel))\n                    .addGroup(editorPanelLayout.createSequentialGroup()\n                        .addComponent(openCaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(openLabel)))\n                .addContainerGap(60, Short.MAX_VALUE))\n        );\n        editorPanelLayout.setVerticalGroup(\n            editorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(editorPanelLayout.createSequentialGroup()\n                .addGap(32, 32, 32)\n                .addGroup(editorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)\n                    .addComponent(createNewLabel)\n                    .addComponent(newCaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(editorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)\n                    .addComponent(openRecentLabel)\n                    .addComponent(openRecentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addGap(0, 0, Short.MAX_VALUE)\n                .addGroup(editorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)\n                    .addComponent(openLabel)\n                    .addComponent(openCaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addContainerGap(25, Short.MAX_VALUE))\n        );\n\n        autopsyLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/casemodule/welcome_logo.png\"))); // NOI18N NON-NLS\n        autopsyLogo.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.autopsyLogo.text\")); // NOI18N\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(autopsyLogo)\n                .addGap(29, 29, 29)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addComponent(editorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addContainerGap())\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(autopsyLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(editorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addGap(18, 18, 18)\n                        .addComponent(closeButton)))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n    }","id":15099,"modified_method":"/** This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        closeButton = new javax.swing.JButton();\n        editorPanel = new javax.swing.JPanel();\n        newCaseButton = new javax.swing.JButton();\n        openRecentButton = new javax.swing.JButton();\n        createNewLabel = new javax.swing.JLabel();\n        openRecentLabel = new javax.swing.JLabel();\n        openCaseButton = new javax.swing.JButton();\n        openLabel = new javax.swing.JLabel();\n        autopsyLogo = new javax.swing.JLabel();\n        this.autopsyLogo.setText(\"\");\n\n        closeButton.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.closeButton.text\")); // NOI18N\n\n        newCaseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/casemodule/btn_icon_create_new_case.png\"))); // NOI18N NON-NLS\n        newCaseButton.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.newCaseButton.text\")); // NOI18N\n        newCaseButton.setBorder(null);\n        newCaseButton.setBorderPainted(false);\n        newCaseButton.setContentAreaFilled(false);\n        newCaseButton.setPreferredSize(new java.awt.Dimension(70, 70));\n        newCaseButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                newCaseButtonActionPerformed(evt);\n            }\n        });\n\n        openRecentButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/casemodule/btn_icon_open_recent.png\"))); // NOI18N NON-NLS\n        openRecentButton.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.openRecentButton.text\")); // NOI18N\n        openRecentButton.setBorder(null);\n        openRecentButton.setBorderPainted(false);\n        openRecentButton.setContentAreaFilled(false);\n        openRecentButton.setPreferredSize(new java.awt.Dimension(70, 70));\n        openRecentButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                openRecentButtonActionPerformed(evt);\n            }\n        });\n\n        createNewLabel.setFont(new java.awt.Font(createNewLabel.getFont().getName(), Font.PLAIN, 13));\n        createNewLabel.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.createNewLabel.text\")); // NOI18N\n\n        openRecentLabel.setFont(new java.awt.Font(openRecentLabel.getFont().getName(), Font.PLAIN, 13));\n        openRecentLabel.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.openRecentLabel.text\")); // NOI18N\n\n        openCaseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/casemodule/btn_icon_open_existing.png\"))); // NOI18N NON-NLS\n        openCaseButton.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.openCaseButton.text\")); // NOI18N\n        openCaseButton.setBorder(null);\n        openCaseButton.setBorderPainted(false);\n        openCaseButton.setContentAreaFilled(false);\n        openCaseButton.setMargin(new java.awt.Insets(1, 1, 1, 1));\n        openCaseButton.setPreferredSize(new java.awt.Dimension(70, 70));\n        openCaseButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                openCaseButtonActionPerformed(evt);\n            }\n        });\n\n        openLabel.setFont(new java.awt.Font(openLabel.getFont().getName(), Font.PLAIN, 13));\n        openLabel.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.openLabel.text\")); // NOI18N\n\n        javax.swing.GroupLayout editorPanelLayout = new javax.swing.GroupLayout(editorPanel);\n        editorPanel.setLayout(editorPanelLayout);\n        editorPanelLayout.setHorizontalGroup(\n            editorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(editorPanelLayout.createSequentialGroup()\n                .addGroup(editorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(editorPanelLayout.createSequentialGroup()\n                        .addComponent(newCaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(createNewLabel))\n                    .addGroup(editorPanelLayout.createSequentialGroup()\n                        .addComponent(openRecentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(openRecentLabel))\n                    .addGroup(editorPanelLayout.createSequentialGroup()\n                        .addComponent(openCaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(openLabel)))\n                .addContainerGap(60, Short.MAX_VALUE))\n        );\n        editorPanelLayout.setVerticalGroup(\n            editorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(editorPanelLayout.createSequentialGroup()\n                .addGap(32, 32, 32)\n                .addGroup(editorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)\n                    .addComponent(createNewLabel)\n                    .addComponent(newCaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(editorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)\n                    .addComponent(openRecentLabel)\n                    .addComponent(openRecentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addGap(0, 0, Short.MAX_VALUE)\n                .addGroup(editorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)\n                    .addComponent(openLabel)\n                    .addComponent(openCaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addContainerGap(25, Short.MAX_VALUE))\n        );\n\n        autopsyLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/casemodule/welcome_logo.png\"))); // NOI18N NON-NLS\n        autopsyLogo.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.autopsyLogo.text\")); // NOI18N\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(autopsyLogo)\n                .addGap(29, 29, 29)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addComponent(editorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addContainerGap())\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(autopsyLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(editorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addGap(18, 18, 18)\n                        .addComponent(closeButton)))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n    }","commit_id":"69a26f17ac0f84919e7d19362c36a7084e78408a","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"@SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        buttonPanel = new javax.swing.JPanel();\n        selectButton = new javax.swing.JButton();\n        cancelButton = new javax.swing.JButton();\n        containerPanel = new javax.swing.JPanel();\n        pathNameTextField = new javax.swing.JTextField();\n        browseButton = new javax.swing.JButton();\n        titleLabel = new javax.swing.JLabel();\n        titleSeparator = new javax.swing.JSeparator();\n\n        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);\n\n        org.openide.awt.Mnemonics.setLocalizedText(selectButton, org.openide.util.NbBundle.getMessage(MissingImageDialog.class, \"MissingImageDialog.selectButton.text\")); // NOI18N\n        selectButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                selectButtonActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(cancelButton, org.openide.util.NbBundle.getMessage(MissingImageDialog.class, \"MissingImageDialog.cancelButton.text\")); // NOI18N\n        cancelButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                cancelButtonActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);\n        buttonPanel.setLayout(buttonPanelLayout);\n        buttonPanelLayout.setHorizontalGroup(\n            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonPanelLayout.createSequentialGroup()\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                .addComponent(selectButton)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(cancelButton)\n                .addContainerGap())\n        );\n        buttonPanelLayout.setVerticalGroup(\n            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(buttonPanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(selectButton)\n                    .addComponent(cancelButton))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n\n        pathNameTextField.setText(org.openide.util.NbBundle.getMessage(MissingImageDialog.class, \"MissingImageDialog.pathNameTextField.text\")); // NOI18N\n        pathNameTextField.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                pathNameTextFieldActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(browseButton, org.openide.util.NbBundle.getMessage(MissingImageDialog.class, \"MissingImageDialog.browseButton.text\")); // NOI18N\n        browseButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                browseButtonActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout containerPanelLayout = new javax.swing.GroupLayout(containerPanel);\n        containerPanel.setLayout(containerPanelLayout);\n        containerPanelLayout.setHorizontalGroup(\n            containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(containerPanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(pathNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(browseButton)\n                .addContainerGap(83, Short.MAX_VALUE))\n        );\n        containerPanelLayout.setVerticalGroup(\n            containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(containerPanelLayout.createSequentialGroup()\n                .addGap(18, 18, 18)\n                .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(pathNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(browseButton))\n                .addContainerGap(62, Short.MAX_VALUE))\n        );\n\n//        titleLabel.setFont(new java.awt.Font(\"Tahoma\", 1, 12)); // NOI18N NON-NLS\n        org.openide.awt.Mnemonics.setLocalizedText(titleLabel, org.openide.util.NbBundle.getMessage(MissingImageDialog.class, \"MissingImageDialog.titleLabel.text\")); // NOI18N\n        titleLabel.setFont(titleLabel.getFont().deriveFont(12.0f));\n\n        titleSeparator.setForeground(new java.awt.Color(102, 102, 102));\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());\n        getContentPane().setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(buttonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(containerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(titleLabel)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(titleSeparator)))\n                .addContainerGap())\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addComponent(titleLabel)\n                    .addComponent(titleSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(containerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n        );\n\n        pack();\n    }","id":15100,"modified_method":"@SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        buttonPanel = new javax.swing.JPanel();\n        selectButton = new javax.swing.JButton();\n        cancelButton = new javax.swing.JButton();\n        containerPanel = new javax.swing.JPanel();\n        pathNameTextField = new javax.swing.JTextField();\n        browseButton = new javax.swing.JButton();\n        titleLabel = new javax.swing.JLabel();\n        titleSeparator = new javax.swing.JSeparator();\n\n        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);\n\n        org.openide.awt.Mnemonics.setLocalizedText(selectButton, org.openide.util.NbBundle.getMessage(MissingImageDialog.class, \"MissingImageDialog.selectButton.text\")); // NOI18N\n        selectButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                selectButtonActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(cancelButton, org.openide.util.NbBundle.getMessage(MissingImageDialog.class, \"MissingImageDialog.cancelButton.text\")); // NOI18N\n        cancelButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                cancelButtonActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);\n        buttonPanel.setLayout(buttonPanelLayout);\n        buttonPanelLayout.setHorizontalGroup(\n            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonPanelLayout.createSequentialGroup()\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                .addComponent(selectButton)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(cancelButton)\n                .addContainerGap())\n        );\n        buttonPanelLayout.setVerticalGroup(\n            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(buttonPanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(selectButton)\n                    .addComponent(cancelButton))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n\n        pathNameTextField.setText(org.openide.util.NbBundle.getMessage(MissingImageDialog.class, \"MissingImageDialog.pathNameTextField.text\")); // NOI18N\n        pathNameTextField.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                pathNameTextFieldActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(browseButton, org.openide.util.NbBundle.getMessage(MissingImageDialog.class, \"MissingImageDialog.browseButton.text\")); // NOI18N\n        browseButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                browseButtonActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout containerPanelLayout = new javax.swing.GroupLayout(containerPanel);\n        containerPanel.setLayout(containerPanelLayout);\n        containerPanelLayout.setHorizontalGroup(\n            containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(containerPanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(pathNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(browseButton)\n                .addContainerGap(83, Short.MAX_VALUE))\n        );\n        containerPanelLayout.setVerticalGroup(\n            containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(containerPanelLayout.createSequentialGroup()\n                .addGap(18, 18, 18)\n                .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(pathNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(browseButton))\n                .addContainerGap(62, Short.MAX_VALUE))\n        );\n\n        titleLabel.setFont(new java.awt.Font(titleLabel.getFont().getName(), Font.BOLD, 12));\n        org.openide.awt.Mnemonics.setLocalizedText(titleLabel, org.openide.util.NbBundle\n                .getMessage(MissingImageDialog.class, \"MissingImageDialog.titleLabel.text\")); // NOI18N\n\n        titleSeparator.setForeground(new java.awt.Color(102, 102, 102));\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());\n        getContentPane().setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(buttonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(containerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(titleLabel)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(titleSeparator)))\n                .addContainerGap())\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addComponent(titleLabel)\n                    .addComponent(titleSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(containerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n        );\n\n        pack();\n    }","commit_id":"69a26f17ac0f84919e7d19362c36a7084e78408a","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/** This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        jLabel1 = new javax.swing.JLabel();\n        caseNameLabel = new javax.swing.JLabel();\n        caseDirLabel = new javax.swing.JLabel();\n        caseNameTextField = new javax.swing.JTextField();\n        caseParentDirTextField = new javax.swing.JTextField();\n        caseDirBrowseButton = new javax.swing.JButton();\n        jLabel2 = new javax.swing.JLabel();\n        caseDirTextField = new javax.swing.JTextField();\n\n//        jLabel1.setFont(new java.awt.Font(\"Tahoma\", 1, 14)); // NOI18N NON-NLS\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(NewCaseVisualPanel1.class, \"NewCaseVisualPanel1.jLabel1.text_1\")); // NOI18N\n        jLabel1.setFont(jLabel1.getFont().deriveFont(14.0f));\n\n        org.openide.awt.Mnemonics.setLocalizedText(caseNameLabel, org.openide.util.NbBundle.getMessage(NewCaseVisualPanel1.class, \"NewCaseVisualPanel1.caseNameLabel.text_1\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(caseDirLabel, org.openide.util.NbBundle.getMessage(NewCaseVisualPanel1.class, \"NewCaseVisualPanel1.caseDirLabel.text\")); // NOI18N\n\n        caseNameTextField.setText(org.openide.util.NbBundle.getMessage(NewCaseVisualPanel1.class, \"NewCaseVisualPanel1.caseNameTextField.text_1\")); // NOI18N\n\n        caseParentDirTextField.setText(org.openide.util.NbBundle.getMessage(NewCaseVisualPanel1.class, \"NewCaseVisualPanel1.caseParentDirTextField.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(caseDirBrowseButton, org.openide.util.NbBundle.getMessage(NewCaseVisualPanel1.class, \"NewCaseVisualPanel1.caseDirBrowseButton.text\")); // NOI18N\n        caseDirBrowseButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                caseDirBrowseButtonActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(NewCaseVisualPanel1.class, \"NewCaseVisualPanel1.jLabel2.text_1\")); // NOI18N\n\n        caseDirTextField.setEditable(false);\n        caseDirTextField.setText(org.openide.util.NbBundle.getMessage(NewCaseVisualPanel1.class, \"NewCaseVisualPanel1.caseDirTextField.text_1\")); // NOI18N\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(jLabel2)\n                    .addGroup(layout.createSequentialGroup()\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)\n                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()\n                                .addComponent(caseDirLabel)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addComponent(caseParentDirTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))\n                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()\n                                .addComponent(caseNameLabel)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                                .addComponent(caseNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))\n                            .addComponent(caseDirTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(caseDirBrowseButton)))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addGap(31, 31, 31)\n                .addComponent(jLabel1)\n                .addGap(18, 18, 18)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(caseNameLabel)\n                    .addComponent(caseNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(caseDirLabel)\n                    .addComponent(caseParentDirTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(caseDirBrowseButton))\n                .addGap(18, 18, 18)\n                .addComponent(jLabel2)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(caseDirTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap(32, Short.MAX_VALUE))\n        );\n    }","id":15101,"modified_method":"/** This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        jLabel1 = new javax.swing.JLabel();\n        caseNameLabel = new javax.swing.JLabel();\n        caseDirLabel = new javax.swing.JLabel();\n        caseNameTextField = new javax.swing.JTextField();\n        caseParentDirTextField = new javax.swing.JTextField();\n        caseDirBrowseButton = new javax.swing.JButton();\n        jLabel2 = new javax.swing.JLabel();\n        caseDirTextField = new javax.swing.JTextField();\n\n        jLabel1.setFont(new java.awt.Font(jLabel1.getFont().getName(), Font.BOLD, 14));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle\n                .getMessage(NewCaseVisualPanel1.class, \"NewCaseVisualPanel1.jLabel1.text_1\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(caseNameLabel, org.openide.util.NbBundle.getMessage(NewCaseVisualPanel1.class, \"NewCaseVisualPanel1.caseNameLabel.text_1\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(caseDirLabel, org.openide.util.NbBundle.getMessage(NewCaseVisualPanel1.class, \"NewCaseVisualPanel1.caseDirLabel.text\")); // NOI18N\n\n        caseNameTextField.setText(org.openide.util.NbBundle.getMessage(NewCaseVisualPanel1.class, \"NewCaseVisualPanel1.caseNameTextField.text_1\")); // NOI18N\n\n        caseParentDirTextField.setText(org.openide.util.NbBundle.getMessage(NewCaseVisualPanel1.class, \"NewCaseVisualPanel1.caseParentDirTextField.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(caseDirBrowseButton, org.openide.util.NbBundle.getMessage(NewCaseVisualPanel1.class, \"NewCaseVisualPanel1.caseDirBrowseButton.text\")); // NOI18N\n        caseDirBrowseButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                caseDirBrowseButtonActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(NewCaseVisualPanel1.class, \"NewCaseVisualPanel1.jLabel2.text_1\")); // NOI18N\n\n        caseDirTextField.setEditable(false);\n        caseDirTextField.setText(org.openide.util.NbBundle.getMessage(NewCaseVisualPanel1.class, \"NewCaseVisualPanel1.caseDirTextField.text_1\")); // NOI18N\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(jLabel2)\n                    .addGroup(layout.createSequentialGroup()\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)\n                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()\n                                .addComponent(caseDirLabel)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addComponent(caseParentDirTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))\n                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()\n                                .addComponent(caseNameLabel)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                                .addComponent(caseNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))\n                            .addComponent(caseDirTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(caseDirBrowseButton)))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addGap(31, 31, 31)\n                .addComponent(jLabel1)\n                .addGap(18, 18, 18)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(caseNameLabel)\n                    .addComponent(caseNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(caseDirLabel)\n                    .addComponent(caseParentDirTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(caseDirBrowseButton))\n                .addGap(18, 18, 18)\n                .addComponent(jLabel2)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(caseDirTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap(32, Short.MAX_VALUE))\n        );\n    }","commit_id":"69a26f17ac0f84919e7d19362c36a7084e78408a","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/** This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        caseNumberTextField = new javax.swing.JTextField();\n        examinerTextField = new javax.swing.JTextField();\n        caseNumberLabel = new javax.swing.JLabel();\n        examinerLabel = new javax.swing.JLabel();\n        optionalLabel = new javax.swing.JLabel();\n\n        caseNumberTextField.setText(org.openide.util.NbBundle.getMessage(NewCaseVisualPanel2.class, \"NewCaseVisualPanel2.caseNumberTextField.text\")); // NOI18N\n\n        examinerTextField.setText(org.openide.util.NbBundle.getMessage(NewCaseVisualPanel2.class, \"NewCaseVisualPanel2.examinerTextField.text\")); // NOI18N\n\n        caseNumberLabel.setText(org.openide.util.NbBundle.getMessage(NewCaseVisualPanel2.class, \"NewCaseVisualPanel2.caseNumberLabel.text\")); // NOI18N\n\n        examinerLabel.setText(org.openide.util.NbBundle.getMessage(NewCaseVisualPanel2.class, \"NewCaseVisualPanel2.examinerLabel.text\")); // NOI18N\n\n        optionalLabel.setFont(new java.awt.Font(\"Tahoma\", 1, 14)); // NOI18N NON-NLS\n        optionalLabel.setText(org.openide.util.NbBundle.getMessage(NewCaseVisualPanel2.class, \"NewCaseVisualPanel2.optionalLabel.text\")); // NOI18N\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(optionalLabel)\n                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                        .addComponent(caseNumberLabel)\n                        .addGap(25, 25, 25)\n                        .addComponent(caseNumberTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE))\n                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                        .addComponent(examinerLabel)\n                        .addGap(45, 45, 45)\n                        .addComponent(examinerTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)))\n                .addContainerGap())\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(optionalLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(caseNumberLabel)\n                    .addComponent(caseNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addGap(18, 18, 18)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(examinerLabel)\n                    .addComponent(examinerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n    }","id":15102,"modified_method":"/** This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        caseNumberTextField = new javax.swing.JTextField();\n        examinerTextField = new javax.swing.JTextField();\n        caseNumberLabel = new javax.swing.JLabel();\n        examinerLabel = new javax.swing.JLabel();\n        optionalLabel = new javax.swing.JLabel();\n\n        caseNumberTextField.setText(org.openide.util.NbBundle.getMessage(NewCaseVisualPanel2.class, \"NewCaseVisualPanel2.caseNumberTextField.text\")); // NOI18N\n\n        examinerTextField.setText(org.openide.util.NbBundle.getMessage(NewCaseVisualPanel2.class, \"NewCaseVisualPanel2.examinerTextField.text\")); // NOI18N\n\n        caseNumberLabel.setText(org.openide.util.NbBundle.getMessage(NewCaseVisualPanel2.class, \"NewCaseVisualPanel2.caseNumberLabel.text\")); // NOI18N\n\n        examinerLabel.setText(org.openide.util.NbBundle.getMessage(NewCaseVisualPanel2.class, \"NewCaseVisualPanel2.examinerLabel.text\")); // NOI18N\n\n        optionalLabel.setFont(new java.awt.Font(optionalLabel.getFont().getName(), Font.BOLD, 14));\n        optionalLabel.setText(org.openide.util.NbBundle.getMessage(NewCaseVisualPanel2.class, \"NewCaseVisualPanel2.optionalLabel.text\")); // NOI18N\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(optionalLabel)\n                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                        .addComponent(caseNumberLabel)\n                        .addGap(25, 25, 25)\n                        .addComponent(caseNumberTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE))\n                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                        .addComponent(examinerLabel)\n                        .addGap(45, 45, 45)\n                        .addComponent(examinerTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)))\n                .addContainerGap())\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(optionalLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(caseNumberLabel)\n                    .addComponent(caseNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addGap(18, 18, 18)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(examinerLabel)\n                    .addComponent(examinerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n    }","commit_id":"69a26f17ac0f84919e7d19362c36a7084e78408a","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/** \n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        OKButton = new javax.swing.JButton();\n        jSplitPane1 = new javax.swing.JSplitPane();\n        genInfoPanel = new javax.swing.JPanel();\n        fsTypeLabel = new javax.swing.JLabel();\n        imgOffsetLabel = new javax.swing.JLabel();\n        volumeIDLabel = new javax.swing.JLabel();\n        blockSizeLabel = new javax.swing.JLabel();\n        blockCountLabel = new javax.swing.JLabel();\n        rootInumLabel = new javax.swing.JLabel();\n        firstInumLabel = new javax.swing.JLabel();\n        lastInumLabel = new javax.swing.JLabel();\n        fsTypeValue = new javax.swing.JLabel();\n        imgOffsetValue = new javax.swing.JLabel();\n        volumeIDValue = new javax.swing.JLabel();\n        blockSizeValue = new javax.swing.JLabel();\n        blockCountValue = new javax.swing.JLabel();\n        rootInumValue = new javax.swing.JLabel();\n        firstInumValue = new javax.swing.JLabel();\n        lastInumValue = new javax.swing.JLabel();\n        genInfoLabel = new javax.swing.JLabel();\n        jSeparator1 = new javax.swing.JSeparator();\n        jLabel2 = new javax.swing.JLabel();\n        jLabel3 = new javax.swing.JLabel();\n        detailInfoPanel = new javax.swing.JPanel();\n        jLabel1 = new javax.swing.JLabel();\n\n        OKButton.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.OKButton.text\")); // NOI18N\n\n        jSplitPane1.setDividerLocation(180);\n        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);\n\n        genInfoPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());\n        genInfoPanel.setPreferredSize(new java.awt.Dimension(815, 170));\n\n        fsTypeLabel.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.fsTypeLabel.text\")); // NOI18N\n\n        imgOffsetLabel.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.imgOffsetLabel.text\")); // NOI18N\n\n        volumeIDLabel.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.volumeIDLabel.text\")); // NOI18N\n\n        blockSizeLabel.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.blockSizeLabel.text\")); // NOI18N\n\n        blockCountLabel.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.blockCountLabel.text\")); // NOI18N\n\n        rootInumLabel.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.rootInumLabel.text\")); // NOI18N\n\n        firstInumLabel.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.firstInumLabel.text\")); // NOI18N\n\n        lastInumLabel.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.lastInumLabel.text\")); // NOI18N\n\n        fsTypeValue.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.fsTypeValue.text\")); // NOI18N\n\n        imgOffsetValue.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.imgOffsetValue.text\")); // NOI18N\n\n        volumeIDValue.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.volumeIDValue.text\")); // NOI18N\n\n        blockSizeValue.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.blockSizeValue.text\")); // NOI18N\n\n        blockCountValue.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.blockCountValue.text\")); // NOI18N\n\n        rootInumValue.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.rootInumValue.text\")); // NOI18N\n\n        firstInumValue.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.firstInumValue.text\")); // NOI18N\n\n        lastInumValue.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.lastInumValue.text\")); // NOI18N\n\n        genInfoLabel.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.genInfoLabel.text\")); // NOI18N\n        genInfoLabel.setFont(genInfoLabel.getFont().deriveFont(18.0f));\n\n        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);\n\n        jLabel2.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.jLabel2.text\")); // NOI18N\n\n        jLabel3.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.jLabel3.text\")); // NOI18N\n\n        javax.swing.GroupLayout genInfoPanelLayout = new javax.swing.GroupLayout(genInfoPanel);\n        genInfoPanel.setLayout(genInfoPanelLayout);\n        genInfoPanelLayout.setHorizontalGroup(\n            genInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(genInfoPanelLayout.createSequentialGroup()\n                .addGap(95, 95, 95)\n                .addGroup(genInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(fsTypeLabel)\n                    .addComponent(imgOffsetLabel)\n                    .addComponent(volumeIDLabel)\n                    .addComponent(blockSizeLabel))\n                .addGap(108, 108, 108)\n                .addGroup(genInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(genInfoLabel)\n                    .addGroup(genInfoPanelLayout.createSequentialGroup()\n                        .addGroup(genInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(blockSizeValue)\n                            .addComponent(volumeIDValue)\n                            .addComponent(imgOffsetValue)\n                            .addComponent(fsTypeValue))\n                        .addGap(31, 31, 31)\n                        .addGroup(genInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(jLabel2)\n                            .addComponent(jLabel3))\n                        .addGap(33, 33, 33)\n                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addGap(31, 31, 31)\n                        .addGroup(genInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(blockCountLabel)\n                            .addComponent(rootInumLabel)\n                            .addComponent(firstInumLabel)\n                            .addComponent(lastInumLabel))\n                        .addGap(111, 111, 111)\n                        .addGroup(genInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(lastInumValue)\n                            .addComponent(firstInumValue)\n                            .addComponent(rootInumValue)\n                            .addComponent(blockCountValue))))\n                .addGap(245, 245, 245))\n        );\n        genInfoPanelLayout.setVerticalGroup(\n            genInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, genInfoPanelLayout.createSequentialGroup()\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                .addComponent(genInfoLabel)\n                .addGap(18, 18, 18)\n                .addGroup(genInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(genInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                        .addGroup(genInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(genInfoPanelLayout.createSequentialGroup()\n                                .addComponent(fsTypeLabel)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addComponent(imgOffsetLabel)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addComponent(volumeIDLabel)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addComponent(blockSizeLabel))\n                            .addGroup(genInfoPanelLayout.createSequentialGroup()\n                                .addComponent(fsTypeValue)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addGroup(genInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                                    .addComponent(imgOffsetValue)\n                                    .addComponent(jLabel2))\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addComponent(volumeIDValue)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addGroup(genInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                                    .addComponent(blockSizeValue)\n                                    .addComponent(jLabel3))))\n                        .addGroup(genInfoPanelLayout.createSequentialGroup()\n                            .addComponent(blockCountValue)\n                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                            .addComponent(rootInumValue)\n                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                            .addComponent(firstInumValue)\n                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                            .addComponent(lastInumValue))\n                        .addGroup(genInfoPanelLayout.createSequentialGroup()\n                            .addComponent(blockCountLabel)\n                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                            .addComponent(rootInumLabel)\n                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                            .addComponent(firstInumLabel)\n                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                            .addComponent(lastInumLabel)))\n                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE))\n                .addContainerGap())\n        );\n\n        jSplitPane1.setTopComponent(genInfoPanel);\n\n        detailInfoPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());\n        detailInfoPanel.setPreferredSize(new java.awt.Dimension(516, 293));\n\n        jLabel1.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.jLabel1.text\")); // NOI18N\n        jLabel1.setFont(jLabel1.getFont().deriveFont(18.0f));\n\n        javax.swing.GroupLayout detailInfoPanelLayout = new javax.swing.GroupLayout(detailInfoPanel);\n        detailInfoPanel.setLayout(detailInfoPanelLayout);\n        detailInfoPanelLayout.setHorizontalGroup(\n            detailInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detailInfoPanelLayout.createSequentialGroup()\n                .addContainerGap(278, Short.MAX_VALUE)\n                .addComponent(jLabel1)\n                .addGap(276, 276, 276))\n        );\n        detailInfoPanelLayout.setVerticalGroup(\n            detailInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(detailInfoPanelLayout.createSequentialGroup()\n                .addGap(23, 23, 23)\n                .addComponent(jLabel1)\n                .addContainerGap(259, Short.MAX_VALUE))\n        );\n\n        jSplitPane1.setRightComponent(detailInfoPanel);\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(layout.createSequentialGroup()\n                        .addGap(367, 367, 367)\n                        .addComponent(OKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addGroup(layout.createSequentialGroup()\n                        .addContainerGap()\n                        .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 786, javax.swing.GroupLayout.PREFERRED_SIZE)))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(18, 18, 18)\n                .addComponent(OKButton)\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n    }","id":15103,"modified_method":"/** \n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        OKButton = new javax.swing.JButton();\n        jSplitPane1 = new javax.swing.JSplitPane();\n        genInfoPanel = new javax.swing.JPanel();\n        fsTypeLabel = new javax.swing.JLabel();\n        imgOffsetLabel = new javax.swing.JLabel();\n        volumeIDLabel = new javax.swing.JLabel();\n        blockSizeLabel = new javax.swing.JLabel();\n        blockCountLabel = new javax.swing.JLabel();\n        rootInumLabel = new javax.swing.JLabel();\n        firstInumLabel = new javax.swing.JLabel();\n        lastInumLabel = new javax.swing.JLabel();\n        fsTypeValue = new javax.swing.JLabel();\n        imgOffsetValue = new javax.swing.JLabel();\n        volumeIDValue = new javax.swing.JLabel();\n        blockSizeValue = new javax.swing.JLabel();\n        blockCountValue = new javax.swing.JLabel();\n        rootInumValue = new javax.swing.JLabel();\n        firstInumValue = new javax.swing.JLabel();\n        lastInumValue = new javax.swing.JLabel();\n        genInfoLabel = new javax.swing.JLabel();\n        jSeparator1 = new javax.swing.JSeparator();\n        jLabel2 = new javax.swing.JLabel();\n        jLabel3 = new javax.swing.JLabel();\n        detailInfoPanel = new javax.swing.JPanel();\n        jLabel1 = new javax.swing.JLabel();\n\n        OKButton.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.OKButton.text\")); // NOI18N\n\n        jSplitPane1.setDividerLocation(180);\n        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);\n\n        genInfoPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());\n        genInfoPanel.setPreferredSize(new java.awt.Dimension(815, 170));\n\n        fsTypeLabel.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.fsTypeLabel.text\")); // NOI18N\n\n        imgOffsetLabel.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.imgOffsetLabel.text\")); // NOI18N\n\n        volumeIDLabel.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.volumeIDLabel.text\")); // NOI18N\n\n        blockSizeLabel.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.blockSizeLabel.text\")); // NOI18N\n\n        blockCountLabel.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.blockCountLabel.text\")); // NOI18N\n\n        rootInumLabel.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.rootInumLabel.text\")); // NOI18N\n\n        firstInumLabel.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.firstInumLabel.text\")); // NOI18N\n\n        lastInumLabel.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.lastInumLabel.text\")); // NOI18N\n\n        fsTypeValue.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.fsTypeValue.text\")); // NOI18N\n\n        imgOffsetValue.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.imgOffsetValue.text\")); // NOI18N\n\n        volumeIDValue.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.volumeIDValue.text\")); // NOI18N\n\n        blockSizeValue.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.blockSizeValue.text\")); // NOI18N\n\n        blockCountValue.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.blockCountValue.text\")); // NOI18N\n\n        rootInumValue.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.rootInumValue.text\")); // NOI18N\n\n        firstInumValue.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.firstInumValue.text\")); // NOI18N\n\n        lastInumValue.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.lastInumValue.text\")); // NOI18N\n\n        genInfoLabel.setFont(new java.awt.Font(genInfoLabel.getFont().getName(), Font.BOLD, 18));\n        genInfoLabel.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.genInfoLabel.text\")); // NOI18N\n\n        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);\n\n        jLabel2.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.jLabel2.text\")); // NOI18N\n\n        jLabel3.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.jLabel3.text\")); // NOI18N\n\n        javax.swing.GroupLayout genInfoPanelLayout = new javax.swing.GroupLayout(genInfoPanel);\n        genInfoPanel.setLayout(genInfoPanelLayout);\n        genInfoPanelLayout.setHorizontalGroup(\n            genInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(genInfoPanelLayout.createSequentialGroup()\n                .addGap(95, 95, 95)\n                .addGroup(genInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(fsTypeLabel)\n                    .addComponent(imgOffsetLabel)\n                    .addComponent(volumeIDLabel)\n                    .addComponent(blockSizeLabel))\n                .addGap(108, 108, 108)\n                .addGroup(genInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(genInfoLabel)\n                    .addGroup(genInfoPanelLayout.createSequentialGroup()\n                        .addGroup(genInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(blockSizeValue)\n                            .addComponent(volumeIDValue)\n                            .addComponent(imgOffsetValue)\n                            .addComponent(fsTypeValue))\n                        .addGap(31, 31, 31)\n                        .addGroup(genInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(jLabel2)\n                            .addComponent(jLabel3))\n                        .addGap(33, 33, 33)\n                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addGap(31, 31, 31)\n                        .addGroup(genInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(blockCountLabel)\n                            .addComponent(rootInumLabel)\n                            .addComponent(firstInumLabel)\n                            .addComponent(lastInumLabel))\n                        .addGap(111, 111, 111)\n                        .addGroup(genInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(lastInumValue)\n                            .addComponent(firstInumValue)\n                            .addComponent(rootInumValue)\n                            .addComponent(blockCountValue))))\n                .addGap(245, 245, 245))\n        );\n        genInfoPanelLayout.setVerticalGroup(\n            genInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, genInfoPanelLayout.createSequentialGroup()\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                .addComponent(genInfoLabel)\n                .addGap(18, 18, 18)\n                .addGroup(genInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(genInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                        .addGroup(genInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(genInfoPanelLayout.createSequentialGroup()\n                                .addComponent(fsTypeLabel)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addComponent(imgOffsetLabel)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addComponent(volumeIDLabel)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addComponent(blockSizeLabel))\n                            .addGroup(genInfoPanelLayout.createSequentialGroup()\n                                .addComponent(fsTypeValue)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addGroup(genInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                                    .addComponent(imgOffsetValue)\n                                    .addComponent(jLabel2))\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addComponent(volumeIDValue)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addGroup(genInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                                    .addComponent(blockSizeValue)\n                                    .addComponent(jLabel3))))\n                        .addGroup(genInfoPanelLayout.createSequentialGroup()\n                            .addComponent(blockCountValue)\n                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                            .addComponent(rootInumValue)\n                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                            .addComponent(firstInumValue)\n                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                            .addComponent(lastInumValue))\n                        .addGroup(genInfoPanelLayout.createSequentialGroup()\n                            .addComponent(blockCountLabel)\n                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                            .addComponent(rootInumLabel)\n                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                            .addComponent(firstInumLabel)\n                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                            .addComponent(lastInumLabel)))\n                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE))\n                .addContainerGap())\n        );\n\n        jSplitPane1.setTopComponent(genInfoPanel);\n\n        detailInfoPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());\n        detailInfoPanel.setPreferredSize(new java.awt.Dimension(516, 293));\n\n        jLabel1.setFont(new java.awt.Font(jLabel1.getFont().getName(), Font.BOLD, 18));\n        jLabel1.setText(org.openide.util.NbBundle.getMessage(FileSystemDetailsPanel.class, \"FileSystemDetailsPanel.jLabel1.text\")); // NOI18N\n\n        javax.swing.GroupLayout detailInfoPanelLayout = new javax.swing.GroupLayout(detailInfoPanel);\n        detailInfoPanel.setLayout(detailInfoPanelLayout);\n        detailInfoPanelLayout.setHorizontalGroup(\n            detailInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detailInfoPanelLayout.createSequentialGroup()\n                .addContainerGap(278, Short.MAX_VALUE)\n                .addComponent(jLabel1)\n                .addGap(276, 276, 276))\n        );\n        detailInfoPanelLayout.setVerticalGroup(\n            detailInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(detailInfoPanelLayout.createSequentialGroup()\n                .addGap(23, 23, 23)\n                .addComponent(jLabel1)\n                .addContainerGap(259, Short.MAX_VALUE))\n        );\n\n        jSplitPane1.setRightComponent(detailInfoPanel);\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(layout.createSequentialGroup()\n                        .addGap(367, 367, 367)\n                        .addComponent(OKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addGroup(layout.createSequentialGroup()\n                        .addContainerGap()\n                        .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 786, javax.swing.GroupLayout.PREFERRED_SIZE)))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(18, 18, 18)\n                .addComponent(OKButton)\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n    }","commit_id":"4d574570504a02bfd2e7877fb59a53b74466976b","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/** This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        imageInfoLabel = new javax.swing.JLabel();\n        imgNameLabel = new javax.swing.JLabel();\n        imgTypeLabel = new javax.swing.JLabel();\n        imgSectorSizeLabel = new javax.swing.JLabel();\n        imgNameValue = new javax.swing.JLabel();\n        imgTypeValue = new javax.swing.JLabel();\n        imgSectorSizeValue = new javax.swing.JLabel();\n        OKButton = new javax.swing.JButton();\n        imgTotalSizeLabel = new javax.swing.JLabel();\n        imgTotalSizeValue = new javax.swing.JLabel();\n        imgHashLabel = new javax.swing.JLabel();\n        imgHashValue = new javax.swing.JLabel();\n\n        imageInfoLabel.setText(org.openide.util.NbBundle.getMessage(ImageDetailsPanel.class, \"ImageDetailsPanel.imageInfoLabel.text\")); // NOI18N\n        imageInfoLabel.setFont(imageInfoLabel.getFont().deriveFont(18.0f));\n\n        imgNameLabel.setText(org.openide.util.NbBundle.getMessage(ImageDetailsPanel.class, \"ImageDetailsPanel.imgNameLabel.text\")); // NOI18N\n\n        imgTypeLabel.setText(org.openide.util.NbBundle.getMessage(ImageDetailsPanel.class, \"ImageDetailsPanel.imgTypeLabel.text\")); // NOI18N\n\n        imgSectorSizeLabel.setText(org.openide.util.NbBundle.getMessage(ImageDetailsPanel.class, \"ImageDetailsPanel.imgSectorSizeLabel.text\")); // NOI18N\n\n        imgNameValue.setText(org.openide.util.NbBundle.getMessage(ImageDetailsPanel.class, \"ImageDetailsPanel.imgNameValue.text\")); // NOI18N\n\n        imgTypeValue.setText(org.openide.util.NbBundle.getMessage(ImageDetailsPanel.class, \"ImageDetailsPanel.imgTypeValue.text\")); // NOI18N\n\n        imgSectorSizeValue.setText(org.openide.util.NbBundle.getMessage(ImageDetailsPanel.class, \"ImageDetailsPanel.imgSectorSizeValue.text\")); // NOI18N\n\n        OKButton.setText(org.openide.util.NbBundle.getMessage(ImageDetailsPanel.class, \"ImageDetailsPanel.OKButton.text\")); // NOI18N\n\n        imgTotalSizeLabel.setText(org.openide.util.NbBundle.getMessage(ImageDetailsPanel.class, \"ImageDetailsPanel.imgTotalSizeLabel.text\")); // NOI18N\n\n        imgTotalSizeValue.setText(org.openide.util.NbBundle.getMessage(ImageDetailsPanel.class, \"ImageDetailsPanel.imgTotalSizeValue.text\")); // NOI18N\n\n        imgHashLabel.setText(org.openide.util.NbBundle.getMessage(ImageDetailsPanel.class, \"ImageDetailsPanel.imgHashLabel.text\")); // NOI18N\n\n        imgHashValue.setText(org.openide.util.NbBundle.getMessage(ImageDetailsPanel.class, \"ImageDetailsPanel.imgHashValue.text\")); // NOI18N\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addGap(0, 68, Short.MAX_VALUE)\n                .addComponent(imageInfoLabel)\n                .addContainerGap(78, Short.MAX_VALUE))\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(imgNameLabel)\n                    .addComponent(imgTypeLabel)\n                    .addComponent(imgSectorSizeLabel)\n                    .addComponent(imgTotalSizeLabel)\n                    .addComponent(imgHashLabel))\n                .addGap(18, 18, 18)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(imgNameValue)\n                    .addComponent(imgTypeValue)\n                    .addComponent(imgSectorSizeValue)\n                    .addComponent(imgTotalSizeValue)\n                    .addComponent(imgHashValue))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                .addComponent(OKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addGap(38, 38, 38)\n                .addComponent(imageInfoLabel)\n                .addGap(18, 18, 18)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(imgNameValue)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(imgTypeValue)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(imgSectorSizeValue)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(imgTotalSizeValue)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(imgHashValue))\n                    .addGroup(layout.createSequentialGroup()\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                            .addGroup(layout.createSequentialGroup()\n                                .addComponent(imgNameLabel)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addComponent(imgTypeLabel)\n                                .addGap(25, 25, 25))\n                            .addGroup(layout.createSequentialGroup()\n                                .addGap(50, 50, 50)\n                                .addComponent(imgSectorSizeLabel)))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(imgTotalSizeLabel)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(imgHashLabel)))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)\n                .addComponent(OKButton)\n                .addContainerGap())\n        );\n    }","id":15104,"modified_method":"/** This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        imageInfoLabel = new javax.swing.JLabel();\n        imgNameLabel = new javax.swing.JLabel();\n        imgTypeLabel = new javax.swing.JLabel();\n        imgSectorSizeLabel = new javax.swing.JLabel();\n        imgNameValue = new javax.swing.JLabel();\n        imgTypeValue = new javax.swing.JLabel();\n        imgSectorSizeValue = new javax.swing.JLabel();\n        OKButton = new javax.swing.JButton();\n        imgTotalSizeLabel = new javax.swing.JLabel();\n        imgTotalSizeValue = new javax.swing.JLabel();\n        imgHashLabel = new javax.swing.JLabel();\n        imgHashValue = new javax.swing.JLabel();\n\n        imageInfoLabel.setFont(new java.awt.Font(imageInfoLabel.getFont().getName(), Font.BOLD, 18));\n        imageInfoLabel.setText(org.openide.util.NbBundle.getMessage(ImageDetailsPanel.class, \"ImageDetailsPanel.imageInfoLabel.text\")); // NOI18N\n\n        imgNameLabel.setText(org.openide.util.NbBundle.getMessage(ImageDetailsPanel.class, \"ImageDetailsPanel.imgNameLabel.text\")); // NOI18N\n\n        imgTypeLabel.setText(org.openide.util.NbBundle.getMessage(ImageDetailsPanel.class, \"ImageDetailsPanel.imgTypeLabel.text\")); // NOI18N\n\n        imgSectorSizeLabel.setText(org.openide.util.NbBundle.getMessage(ImageDetailsPanel.class, \"ImageDetailsPanel.imgSectorSizeLabel.text\")); // NOI18N\n\n        imgNameValue.setText(org.openide.util.NbBundle.getMessage(ImageDetailsPanel.class, \"ImageDetailsPanel.imgNameValue.text\")); // NOI18N\n\n        imgTypeValue.setText(org.openide.util.NbBundle.getMessage(ImageDetailsPanel.class, \"ImageDetailsPanel.imgTypeValue.text\")); // NOI18N\n\n        imgSectorSizeValue.setText(org.openide.util.NbBundle.getMessage(ImageDetailsPanel.class, \"ImageDetailsPanel.imgSectorSizeValue.text\")); // NOI18N\n\n        OKButton.setText(org.openide.util.NbBundle.getMessage(ImageDetailsPanel.class, \"ImageDetailsPanel.OKButton.text\")); // NOI18N\n\n        imgTotalSizeLabel.setText(org.openide.util.NbBundle.getMessage(ImageDetailsPanel.class, \"ImageDetailsPanel.imgTotalSizeLabel.text\")); // NOI18N\n\n        imgTotalSizeValue.setText(org.openide.util.NbBundle.getMessage(ImageDetailsPanel.class, \"ImageDetailsPanel.imgTotalSizeValue.text\")); // NOI18N\n\n        imgHashLabel.setText(org.openide.util.NbBundle.getMessage(ImageDetailsPanel.class, \"ImageDetailsPanel.imgHashLabel.text\")); // NOI18N\n\n        imgHashValue.setText(org.openide.util.NbBundle.getMessage(ImageDetailsPanel.class, \"ImageDetailsPanel.imgHashValue.text\")); // NOI18N\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addGap(0, 68, Short.MAX_VALUE)\n                .addComponent(imageInfoLabel)\n                .addContainerGap(78, Short.MAX_VALUE))\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(imgNameLabel)\n                    .addComponent(imgTypeLabel)\n                    .addComponent(imgSectorSizeLabel)\n                    .addComponent(imgTotalSizeLabel)\n                    .addComponent(imgHashLabel))\n                .addGap(18, 18, 18)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(imgNameValue)\n                    .addComponent(imgTypeValue)\n                    .addComponent(imgSectorSizeValue)\n                    .addComponent(imgTotalSizeValue)\n                    .addComponent(imgHashValue))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                .addComponent(OKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addGap(38, 38, 38)\n                .addComponent(imageInfoLabel)\n                .addGap(18, 18, 18)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(imgNameValue)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(imgTypeValue)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(imgSectorSizeValue)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(imgTotalSizeValue)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(imgHashValue))\n                    .addGroup(layout.createSequentialGroup()\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                            .addGroup(layout.createSequentialGroup()\n                                .addComponent(imgNameLabel)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addComponent(imgTypeLabel)\n                                .addGap(25, 25, 25))\n                            .addGroup(layout.createSequentialGroup()\n                                .addGap(50, 50, 50)\n                                .addComponent(imgSectorSizeLabel)))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(imgTotalSizeLabel)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(imgHashLabel)))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)\n                .addComponent(OKButton)\n                .addContainerGap())\n        );\n    }","commit_id":"4d574570504a02bfd2e7877fb59a53b74466976b","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/** \n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always \n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        jPanel1 = new javax.swing.JPanel();\n        flagsValue = new javax.swing.JLabel();\n        descValue = new javax.swing.JLabel();\n        lengthValue = new javax.swing.JLabel();\n        startValue = new javax.swing.JLabel();\n        startLabel = new javax.swing.JLabel();\n        lengthLabel = new javax.swing.JLabel();\n        jLabel1 = new javax.swing.JLabel();\n        volumeIDLabel = new javax.swing.JLabel();\n        volumeIDValue = new javax.swing.JLabel();\n        descLabel = new javax.swing.JLabel();\n        flagsLabel = new javax.swing.JLabel();\n        OKButton = new javax.swing.JButton();\n\n        flagsValue.setText(org.openide.util.NbBundle.getMessage(VolumeDetailsPanel.class, \"VolumeDetailsPanel.flagsValue.text\")); // NOI18N\n\n        descValue.setText(org.openide.util.NbBundle.getMessage(VolumeDetailsPanel.class, \"VolumeDetailsPanel.descValue.text\")); // NOI18N\n\n        lengthValue.setText(org.openide.util.NbBundle.getMessage(VolumeDetailsPanel.class, \"VolumeDetailsPanel.lengthValue.text\")); // NOI18N\n\n        startValue.setText(org.openide.util.NbBundle.getMessage(VolumeDetailsPanel.class, \"VolumeDetailsPanel.startValue.text\")); // NOI18N\n\n        startLabel.setText(org.openide.util.NbBundle.getMessage(VolumeDetailsPanel.class, \"VolumeDetailsPanel.startLabel.text\")); // NOI18N\n\n        lengthLabel.setText(org.openide.util.NbBundle.getMessage(VolumeDetailsPanel.class, \"VolumeDetailsPanel.lengthLabel.text\")); // NOI18N\n\n        jLabel1.setText(org.openide.util.NbBundle.getMessage(VolumeDetailsPanel.class, \"VolumeDetailsPanel.jLabel1.text\")); // NOI18N\n        jLabel1.setFont(jLabel1.getFont().deriveFont(18.0f));\n\n        volumeIDLabel.setText(org.openide.util.NbBundle.getMessage(VolumeDetailsPanel.class, \"VolumeDetailsPanel.volumeIDLabel.text\")); // NOI18N\n\n        volumeIDValue.setText(org.openide.util.NbBundle.getMessage(VolumeDetailsPanel.class, \"VolumeDetailsPanel.volumeIDValue.text\")); // NOI18N\n\n        descLabel.setText(org.openide.util.NbBundle.getMessage(VolumeDetailsPanel.class, \"VolumeDetailsPanel.descLabel.text\")); // NOI18N\n\n        flagsLabel.setText(org.openide.util.NbBundle.getMessage(VolumeDetailsPanel.class, \"VolumeDetailsPanel.flagsLabel.text\")); // NOI18N\n\n        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);\n        jPanel1.setLayout(jPanel1Layout);\n        jPanel1Layout.setHorizontalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(112, 112, 112)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(startLabel)\n                            .addComponent(volumeIDLabel)\n                            .addComponent(lengthLabel)\n                            .addComponent(descLabel)\n                            .addComponent(flagsLabel))\n                        .addGap(18, 18, 18)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(flagsValue)\n                            .addComponent(descValue)\n                            .addComponent(lengthValue)\n                            .addComponent(startValue)\n                            .addComponent(volumeIDValue)))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(59, 59, 59)\n                        .addComponent(jLabel1)))\n                .addContainerGap(58, Short.MAX_VALUE))\n        );\n        jPanel1Layout.setVerticalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(11, 11, 11)\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(volumeIDLabel)\n                    .addComponent(volumeIDValue))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(startLabel)\n                    .addComponent(startValue))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(lengthLabel)\n                    .addComponent(lengthValue))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addComponent(descLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(flagsLabel)\n                            .addComponent(flagsValue)))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addComponent(descValue)\n                        .addGap(25, 25, 25)))\n                .addContainerGap(15, Short.MAX_VALUE))\n        );\n\n        OKButton.setText(org.openide.util.NbBundle.getMessage(VolumeDetailsPanel.class, \"VolumeDetailsPanel.OKButton.text\")); // NOI18N\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                        .addContainerGap())\n                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                        .addComponent(OKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addGap(145, 145, 145))))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                .addGap(18, 18, 18)\n                .addComponent(OKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap())\n        );\n    }","id":15105,"modified_method":"/** \n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always \n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        jPanel1 = new javax.swing.JPanel();\n        flagsValue = new javax.swing.JLabel();\n        descValue = new javax.swing.JLabel();\n        lengthValue = new javax.swing.JLabel();\n        startValue = new javax.swing.JLabel();\n        startLabel = new javax.swing.JLabel();\n        lengthLabel = new javax.swing.JLabel();\n        jLabel1 = new javax.swing.JLabel();\n        volumeIDLabel = new javax.swing.JLabel();\n        volumeIDValue = new javax.swing.JLabel();\n        descLabel = new javax.swing.JLabel();\n        flagsLabel = new javax.swing.JLabel();\n        OKButton = new javax.swing.JButton();\n\n        flagsValue.setText(org.openide.util.NbBundle.getMessage(VolumeDetailsPanel.class, \"VolumeDetailsPanel.flagsValue.text\")); // NOI18N\n\n        descValue.setText(org.openide.util.NbBundle.getMessage(VolumeDetailsPanel.class, \"VolumeDetailsPanel.descValue.text\")); // NOI18N\n\n        lengthValue.setText(org.openide.util.NbBundle.getMessage(VolumeDetailsPanel.class, \"VolumeDetailsPanel.lengthValue.text\")); // NOI18N\n\n        startValue.setText(org.openide.util.NbBundle.getMessage(VolumeDetailsPanel.class, \"VolumeDetailsPanel.startValue.text\")); // NOI18N\n\n        startLabel.setText(org.openide.util.NbBundle.getMessage(VolumeDetailsPanel.class, \"VolumeDetailsPanel.startLabel.text\")); // NOI18N\n\n        lengthLabel.setText(org.openide.util.NbBundle.getMessage(VolumeDetailsPanel.class, \"VolumeDetailsPanel.lengthLabel.text\")); // NOI18N\n\n        jLabel1.setFont(new java.awt.Font(jLabel1.getFont().getName(), Font.BOLD, 18));\n        jLabel1.setText(org.openide.util.NbBundle.getMessage(VolumeDetailsPanel.class, \"VolumeDetailsPanel.jLabel1.text\")); // NOI18N\n\n        volumeIDLabel.setText(org.openide.util.NbBundle.getMessage(VolumeDetailsPanel.class, \"VolumeDetailsPanel.volumeIDLabel.text\")); // NOI18N\n\n        volumeIDValue.setText(org.openide.util.NbBundle.getMessage(VolumeDetailsPanel.class, \"VolumeDetailsPanel.volumeIDValue.text\")); // NOI18N\n\n        descLabel.setText(org.openide.util.NbBundle.getMessage(VolumeDetailsPanel.class, \"VolumeDetailsPanel.descLabel.text\")); // NOI18N\n\n        flagsLabel.setText(org.openide.util.NbBundle.getMessage(VolumeDetailsPanel.class, \"VolumeDetailsPanel.flagsLabel.text\")); // NOI18N\n\n        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);\n        jPanel1.setLayout(jPanel1Layout);\n        jPanel1Layout.setHorizontalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(112, 112, 112)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(startLabel)\n                            .addComponent(volumeIDLabel)\n                            .addComponent(lengthLabel)\n                            .addComponent(descLabel)\n                            .addComponent(flagsLabel))\n                        .addGap(18, 18, 18)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(flagsValue)\n                            .addComponent(descValue)\n                            .addComponent(lengthValue)\n                            .addComponent(startValue)\n                            .addComponent(volumeIDValue)))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(59, 59, 59)\n                        .addComponent(jLabel1)))\n                .addContainerGap(58, Short.MAX_VALUE))\n        );\n        jPanel1Layout.setVerticalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(11, 11, 11)\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(volumeIDLabel)\n                    .addComponent(volumeIDValue))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(startLabel)\n                    .addComponent(startValue))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(lengthLabel)\n                    .addComponent(lengthValue))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addComponent(descLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(flagsLabel)\n                            .addComponent(flagsValue)))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addComponent(descValue)\n                        .addGap(25, 25, 25)))\n                .addContainerGap(15, Short.MAX_VALUE))\n        );\n\n        OKButton.setText(org.openide.util.NbBundle.getMessage(VolumeDetailsPanel.class, \"VolumeDetailsPanel.OKButton.text\")); // NOI18N\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                        .addContainerGap())\n                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                        .addComponent(OKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addGap(145, 145, 145))))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                .addGap(18, 18, 18)\n                .addComponent(OKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap())\n        );\n    }","commit_id":"4d574570504a02bfd2e7877fb59a53b74466976b","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/** This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        jScrollPane1 = new javax.swing.JScrollPane();\n        jTextArea1 = new javax.swing.JTextArea();\n        casePropLabel = new javax.swing.JLabel();\n        caseNameLabel = new javax.swing.JLabel();\n        crDateLabel = new javax.swing.JLabel();\n        caseDirLabel = new javax.swing.JLabel();\n        crDateTextField = new javax.swing.JTextField();\n        caseNameTextField = new javax.swing.JTextField();\n        updateCaseNameButton = new javax.swing.JButton();\n        genInfoLabel = new javax.swing.JLabel();\n        imgInfoLabel = new javax.swing.JLabel();\n        OKButton = new javax.swing.JButton();\n        imagesTableScrollPane = new javax.swing.JScrollPane();\n        imagesTable = new javax.swing.JTable();\n        jScrollPane2 = new javax.swing.JScrollPane();\n        caseDirTextArea = new javax.swing.JTextArea();\n        deleteCaseButton = new javax.swing.JButton();\n        caseNumberLabel = new javax.swing.JLabel();\n        examinerLabel = new javax.swing.JLabel();\n        caseNumberTextField = new javax.swing.JTextField();\n        examinerTextField = new javax.swing.JTextField();\n\n        jTextArea1.setColumns(20);\n        jTextArea1.setRows(5);\n        jScrollPane1.setViewportView(jTextArea1);\n\n//        casePropLabel.setFont(new java.awt.Font(\"Tahoma\", 1, 24)); //NON-NLS\n        casePropLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);\n        casePropLabel.setText(org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.casePropLabel.text\")); // NOI18N\n        casePropLabel.setFont(casePropLabel.getFont().deriveFont(24.0f));\n\n        caseNameLabel.setText(org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.caseNameLabel.text\")); // NOI18N\n\n        crDateLabel.setText(org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.crDateLabel.text\")); // NOI18N\n\n        caseDirLabel.setText(org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.caseDirLabel.text\")); // NOI18N\n\n        crDateTextField.setEditable(false);\n        crDateTextField.setText(org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.crDateTextField.text\")); // NOI18N\n\n        caseNameTextField.setText(org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.caseNameTextField.text\")); // NOI18N\n\n        updateCaseNameButton.setText(org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.updateCaseNameButton.text\")); // NOI18N\n        updateCaseNameButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                updateCaseNameButtonActionPerformed(evt);\n            }\n        });\n\n//        genInfoLabel.setFont(new java.awt.Font(\"Tahoma\", 1, 14)); //NON-NLS\n        genInfoLabel.setText(org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.genInfoLabel.text\")); // NOI18N\n        genInfoLabel.setFont(genInfoLabel.getFont().deriveFont(14.0f));\n\n//        imgInfoLabel.setFont(new java.awt.Font(\"Tahoma\", 1, 14)); //NON-NLS\n        imgInfoLabel.setText(org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.imgInfoLabel.text\")); // NOI18N\n        imgInfoLabel.setFont(imgInfoLabel.getFont().deriveFont(14.0f));\n\n        OKButton.setText(org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.OKButton.text\")); // NOI18N\n\n        imagesTable.setModel(new javax.swing.table.DefaultTableModel(\n            new Object [][] {\n\n            },\n            new String [] {\n                \"Path\", \"Remove\" //NON-NLS\n            }\n        ) {\n            boolean[] canEdit = new boolean [] {\n                false, true\n            };\n\n            public boolean isCellEditable(int rowIndex, int columnIndex) {\n                return canEdit [columnIndex];\n            }\n        });\n        imagesTable.setShowHorizontalLines(false);\n        imagesTable.setShowVerticalLines(false);\n        imagesTable.getTableHeader().setReorderingAllowed(false);\n        imagesTable.setUpdateSelectionOnSort(false);\n        imagesTableScrollPane.setViewportView(imagesTable);\n\n        caseDirTextArea.setBackground(new java.awt.Color(240, 240, 240));\n        caseDirTextArea.setColumns(20);\n        caseDirTextArea.setEditable(false);\n        caseDirTextArea.setRows(1);\n        caseDirTextArea.setRequestFocusEnabled(false);\n        jScrollPane2.setViewportView(caseDirTextArea);\n\n        deleteCaseButton.setText(org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.deleteCaseButton.text\")); // NOI18N\n        deleteCaseButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                deleteCaseButtonActionPerformed(evt);\n            }\n        });\n\n        caseNumberLabel.setText(org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.caseNumberLabel.text\")); // NOI18N\n\n        examinerLabel.setText(org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.examinerLabel.text\")); // NOI18N\n\n        caseNumberTextField.setEditable(false);\n        caseNumberTextField.setText(org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.caseNumberTextField.text\")); // NOI18N\n\n        examinerTextField.setEditable(false);\n        examinerTextField.setText(org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.examinerTextField.text\")); // NOI18N\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(casePropLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)\n                    .addComponent(genInfoLabel)\n                    .addComponent(imgInfoLabel)\n                    .addComponent(imagesTableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)\n                    .addGroup(layout.createSequentialGroup()\n                        .addGap(181, 181, 181)\n                        .addComponent(OKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addGroup(layout.createSequentialGroup()\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                            .addGroup(layout.createSequentialGroup()\n                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                    .addComponent(caseNameLabel)\n                                    .addComponent(caseNumberLabel))\n                                .addGap(25, 25, 25)\n                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                    .addComponent(caseNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)\n                                    .addComponent(caseNumberTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)))\n                            .addGroup(layout.createSequentialGroup()\n                                .addComponent(examinerLabel)\n                                .addGap(45, 45, 45)\n                                .addComponent(examinerTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE))\n                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()\n                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                    .addComponent(caseDirLabel)\n                                    .addComponent(crDateLabel))\n                                .addGap(18, 18, 18)\n                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)\n                                    .addComponent(crDateTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE))))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(updateCaseNameButton)\n                            .addComponent(deleteCaseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))\n                .addContainerGap())\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(casePropLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(18, 18, 18)\n                .addComponent(genInfoLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(caseNameLabel)\n                    .addComponent(caseNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(updateCaseNameButton))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(caseNumberLabel)\n                    .addComponent(caseNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addGap(18, 18, 18)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(examinerLabel)\n                    .addComponent(examinerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(crDateLabel)\n                    .addComponent(crDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(layout.createSequentialGroup()\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(caseDirLabel)\n                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))\n                        .addGap(39, 39, 39)\n                        .addComponent(imgInfoLabel))\n                    .addComponent(deleteCaseButton))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(imagesTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(OKButton)\n                .addContainerGap())\n        );\n    }","id":15106,"modified_method":"/** This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        jScrollPane1 = new javax.swing.JScrollPane();\n        jTextArea1 = new javax.swing.JTextArea();\n        casePropLabel = new javax.swing.JLabel();\n        caseNameLabel = new javax.swing.JLabel();\n        crDateLabel = new javax.swing.JLabel();\n        caseDirLabel = new javax.swing.JLabel();\n        crDateTextField = new javax.swing.JTextField();\n        caseNameTextField = new javax.swing.JTextField();\n        updateCaseNameButton = new javax.swing.JButton();\n        genInfoLabel = new javax.swing.JLabel();\n        imgInfoLabel = new javax.swing.JLabel();\n        OKButton = new javax.swing.JButton();\n        imagesTableScrollPane = new javax.swing.JScrollPane();\n        imagesTable = new javax.swing.JTable();\n        jScrollPane2 = new javax.swing.JScrollPane();\n        caseDirTextArea = new javax.swing.JTextArea();\n        deleteCaseButton = new javax.swing.JButton();\n        caseNumberLabel = new javax.swing.JLabel();\n        examinerLabel = new javax.swing.JLabel();\n        caseNumberTextField = new javax.swing.JTextField();\n        examinerTextField = new javax.swing.JTextField();\n\n        jTextArea1.setColumns(20);\n        jTextArea1.setRows(5);\n        jScrollPane1.setViewportView(jTextArea1);\n\n        casePropLabel.setFont(new Font(casePropLabel.getFont().getName(), Font.BOLD, 24));\n        casePropLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);\n        casePropLabel.setText(org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.casePropLabel.text\")); // NOI18N\n\n        caseNameLabel.setText(org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.caseNameLabel.text\")); // NOI18N\n\n        crDateLabel.setText(org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.crDateLabel.text\")); // NOI18N\n\n        caseDirLabel.setText(org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.caseDirLabel.text\")); // NOI18N\n\n        crDateTextField.setEditable(false);\n        crDateTextField.setText(org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.crDateTextField.text\")); // NOI18N\n\n        caseNameTextField.setText(org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.caseNameTextField.text\")); // NOI18N\n\n        updateCaseNameButton.setText(org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.updateCaseNameButton.text\")); // NOI18N\n        updateCaseNameButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                updateCaseNameButtonActionPerformed(evt);\n            }\n        });\n\n        genInfoLabel.setFont(new java.awt.Font(genInfoLabel.getFont().getName(), Font.BOLD, 14));\n        genInfoLabel.setText(\n                org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.genInfoLabel.text\")); // NOI18N\n\n        imgInfoLabel.setFont(new java.awt.Font(imgInfoLabel.getFont().getName(), Font.BOLD, 14));\n        imgInfoLabel.setText(org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.imgInfoLabel.text\")); // NOI18N\n\n        OKButton.setText(org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.OKButton.text\")); // NOI18N\n\n        imagesTable.setModel(new javax.swing.table.DefaultTableModel(\n            new Object [][] {\n\n            },\n            new String [] {\n                \"Path\", \"Remove\" //NON-NLS\n            }\n        ) {\n            boolean[] canEdit = new boolean [] {\n                false, true\n            };\n\n            public boolean isCellEditable(int rowIndex, int columnIndex) {\n                return canEdit [columnIndex];\n            }\n        });\n        imagesTable.setShowHorizontalLines(false);\n        imagesTable.setShowVerticalLines(false);\n        imagesTable.getTableHeader().setReorderingAllowed(false);\n        imagesTable.setUpdateSelectionOnSort(false);\n        imagesTableScrollPane.setViewportView(imagesTable);\n\n        caseDirTextArea.setBackground(new java.awt.Color(240, 240, 240));\n        caseDirTextArea.setColumns(20);\n        caseDirTextArea.setEditable(false);\n        caseDirTextArea.setRows(1);\n        caseDirTextArea.setRequestFocusEnabled(false);\n        jScrollPane2.setViewportView(caseDirTextArea);\n\n        deleteCaseButton.setText(org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.deleteCaseButton.text\")); // NOI18N\n        deleteCaseButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                deleteCaseButtonActionPerformed(evt);\n            }\n        });\n\n        caseNumberLabel.setText(org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.caseNumberLabel.text\")); // NOI18N\n\n        examinerLabel.setText(org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.examinerLabel.text\")); // NOI18N\n\n        caseNumberTextField.setEditable(false);\n        caseNumberTextField.setText(org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.caseNumberTextField.text\")); // NOI18N\n\n        examinerTextField.setEditable(false);\n        examinerTextField.setText(org.openide.util.NbBundle.getMessage(CasePropertiesForm.class, \"CasePropertiesForm.examinerTextField.text\")); // NOI18N\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(casePropLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)\n                    .addComponent(genInfoLabel)\n                    .addComponent(imgInfoLabel)\n                    .addComponent(imagesTableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)\n                    .addGroup(layout.createSequentialGroup()\n                        .addGap(181, 181, 181)\n                        .addComponent(OKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addGroup(layout.createSequentialGroup()\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                            .addGroup(layout.createSequentialGroup()\n                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                    .addComponent(caseNameLabel)\n                                    .addComponent(caseNumberLabel))\n                                .addGap(25, 25, 25)\n                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                    .addComponent(caseNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)\n                                    .addComponent(caseNumberTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)))\n                            .addGroup(layout.createSequentialGroup()\n                                .addComponent(examinerLabel)\n                                .addGap(45, 45, 45)\n                                .addComponent(examinerTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE))\n                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()\n                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                    .addComponent(caseDirLabel)\n                                    .addComponent(crDateLabel))\n                                .addGap(18, 18, 18)\n                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)\n                                    .addComponent(crDateTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE))))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(updateCaseNameButton)\n                            .addComponent(deleteCaseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))\n                .addContainerGap())\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(casePropLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(18, 18, 18)\n                .addComponent(genInfoLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(caseNameLabel)\n                    .addComponent(caseNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(updateCaseNameButton))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(caseNumberLabel)\n                    .addComponent(caseNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addGap(18, 18, 18)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(examinerLabel)\n                    .addComponent(examinerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(crDateLabel)\n                    .addComponent(crDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(layout.createSequentialGroup()\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(caseDirLabel)\n                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))\n                        .addGap(39, 39, 39)\n                        .addComponent(imgInfoLabel))\n                    .addComponent(deleteCaseButton))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(imagesTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(OKButton)\n                .addContainerGap())\n        );\n    }","commit_id":"a4ea25e19ecc0aa37dcf686e12ef69ad59f41333","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"protected void addWebContentPage(\n\t\t\tlong companyId, long defaultUserId,\n\t\t\tList<LayoutPrototype> layoutPrototypes)\n\t\tthrows Exception {\n\n\t\tLayout layout = addLayoutPrototype(\n\t\t\tcompanyId, defaultUserId, \"Content Display Page\",\n\t\t\t\"Create, edit, and explore web content with this page. Search \" +\n\t\t\t\t\"available content, explore related content with tags, and \" +\n\t\t\t\t\t\"browse content categories.\",\n\t\t\t\"2_columns_ii\", layoutPrototypes);\n\n\t\tif (layout == null) {\n\t\t\treturn;\n\t\t}\n\n\t\taddPortletId(layout, PortletKeys.TAGS_ENTRIES_NAVIGATION, \"column-1\");\n\t\taddPortletId(\n\t\t\tlayout, PortletKeys.TAGS_CATEGORIES_NAVIGATION, \"column-1\");\n\t\taddPortletId(layout, PortletKeys.SEARCH, \"column-2\");\n\t\tString portletId = addPortletId(\n\t\t\tlayout, PortletKeys.ASSET_PUBLISHER, \"column-2\");\n\n\t\tUnicodeProperties typeSettingsProperties =\n\t\t\tlayout.getTypeSettingsProperties();\n\n\t\ttypeSettingsProperties.setProperty(\n\t\t\tLayoutTypePortletConstants.DEFAULT_ASSET_PUBLISHER_PORTLET_ID,\n\t\t\tportletId);\n\n\t\tlayout = LayoutLocalServiceUtil.updateLayout(\n\t\t\tlayout.getGroupId(), layout.isPrivateLayout(),\n\t\t\tlayout.getLayoutId(), layout.getTypeSettings());\n\t}","id":15107,"modified_method":"protected void addWebContentPage(\n\t\t\tlong companyId, long defaultUserId,\n\t\t\tList<LayoutPrototype> layoutPrototypes)\n\t\tthrows Exception {\n\n\t\tLayout layout = addLayoutPrototype(\n\t\t\tcompanyId, defaultUserId, \"Content Display Page\",\n\t\t\t\"Create, edit, and explore web content with this page. Search \" +\n\t\t\t\t\"available content, explore related content with tags, and \" +\n\t\t\t\t\t\"browse content categories.\",\n\t\t\t\"2_columns_ii\", layoutPrototypes);\n\n\t\tif (layout == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tString portletId = addPortletId(\n            layout, PortletKeys.TAGS_ENTRIES_NAVIGATION, \"column-1\");\n        addResourcePermissions(companyId, portletId, layout.getPlid());\n\n        portletId = addPortletId(\n\t\t\tlayout, PortletKeys.TAGS_CATEGORIES_NAVIGATION, \"column-1\");\n        addResourcePermissions(companyId, portletId, layout.getPlid());\n\n        portletId = addPortletId(layout, PortletKeys.SEARCH, \"column-2\");\n        addResourcePermissions(companyId, portletId, layout.getPlid());\n\n        portletId = addPortletId(\n\t\t\tlayout, PortletKeys.ASSET_PUBLISHER, \"column-2\");\n        addResourcePermissions(companyId, portletId, layout.getPlid());\n\n\t\tUnicodeProperties typeSettingsProperties =\n\t\t\tlayout.getTypeSettingsProperties();\n\n\t\ttypeSettingsProperties.setProperty(\n\t\t\tLayoutTypePortletConstants.DEFAULT_ASSET_PUBLISHER_PORTLET_ID,\n\t\t\tportletId);\n\n\t\tlayout = LayoutLocalServiceUtil.updateLayout(\n\t\t\tlayout.getGroupId(), layout.isPrivateLayout(),\n\t\t\tlayout.getLayoutId(), layout.getTypeSettings());\n\t}","commit_id":"14af95b9e8072a60bffb34e2a1beb8e13d68d2d2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void addWikiPage(\n\t\t\tlong companyId, long defaultUserId,\n\t\t\tList<LayoutPrototype> layoutPrototypes)\n\t\tthrows Exception {\n\n\t\tLayout layout = addLayoutPrototype(\n\t\t\tcompanyId, defaultUserId, \"Wiki\",\n\t\t\t\"Collaborate with members through the wiki on this page. \" +\n\t\t\t\t\"Discover related content through tags, and navigate quickly \" +\n\t\t\t\t\t\"and easily with categories.\",\n\t\t\t\"2_columns_iii\", layoutPrototypes);\n\n\t\tif (layout == null) {\n\t\t\treturn;\n\t\t}\n\n\t\taddPortletId(layout, PortletKeys.WIKI, \"column-1\");\n\t\taddPortletId(\n\t\t\tlayout, PortletKeys.TAGS_CATEGORIES_NAVIGATION, \"column-2\");\n\t\taddPortletId(layout, PortletKeys.TAGS_ENTRIES_NAVIGATION, \"column-2\");\n\t}","id":15108,"modified_method":"protected void addWikiPage(\n\t\t\tlong companyId, long defaultUserId,\n\t\t\tList<LayoutPrototype> layoutPrototypes)\n\t\tthrows Exception {\n\n\t\tLayout layout = addLayoutPrototype(\n\t\t\tcompanyId, defaultUserId, \"Wiki\",\n\t\t\t\"Collaborate with members through the wiki on this page. \" +\n\t\t\t\t\"Discover related content through tags, and navigate quickly \" +\n\t\t\t\t\t\"and easily with categories.\",\n\t\t\t\"2_columns_iii\", layoutPrototypes);\n\n\t\tif (layout == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tString portletId = addPortletId(layout, PortletKeys.WIKI, \"column-1\");\n        addResourcePermissions(companyId, portletId, layout.getPlid());\n\n        portletId = addPortletId(\n\t\t\tlayout, PortletKeys.TAGS_CATEGORIES_NAVIGATION, \"column-2\");\n        addResourcePermissions(companyId, portletId, layout.getPlid());\n\n        portletId = addPortletId(layout, PortletKeys.TAGS_ENTRIES_NAVIGATION,\n            \"column-2\");\n        addResourcePermissions(companyId, portletId, layout.getPlid());\n\t}","commit_id":"14af95b9e8072a60bffb34e2a1beb8e13d68d2d2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void addBlogPage(\n\t\t\tlong companyId, long defaultUserId,\n\t\t\tList<LayoutPrototype> layoutPrototypes)\n\t\tthrows Exception {\n\n\t\tLayout layout = addLayoutPrototype(\n\t\t\tcompanyId, defaultUserId, \"Blog\",\n\t\t\t\"Create, edit, and view blogs from this page. Explore topics \" +\n\t\t\t\t\"using tags, and connect with other members that blog.\",\n\t\t\t\"2_columns_iii\", layoutPrototypes);\n\n\t\tif (layout == null) {\n\t\t\treturn;\n\t\t}\n\n\t\taddPortletId(layout, PortletKeys.BLOGS, \"column-1\");\n\t\taddPortletId(layout, PortletKeys.TAGS_CLOUD, \"column-2\");\n\t\taddPortletId(layout, PortletKeys.RECENT_BLOGGERS, \"column-2\");\n\t}","id":15109,"modified_method":"protected void addBlogPage(\n\t\t\tlong companyId, long defaultUserId,\n\t\t\tList<LayoutPrototype> layoutPrototypes)\n\t\tthrows Exception {\n\n\t\tLayout layout = addLayoutPrototype(\n\t\t\tcompanyId, defaultUserId, \"Blog\",\n\t\t\t\"Create, edit, and view blogs from this page. Explore topics \" +\n\t\t\t\t\"using tags, and connect with other members that blog.\",\n\t\t\t\"2_columns_iii\", layoutPrototypes);\n\n\t\tif (layout == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tString portletId = addPortletId(layout, PortletKeys.BLOGS, \"column-1\");\n        addResourcePermissions(companyId, portletId, layout.getPlid());\n\n        portletId = addPortletId(layout, PortletKeys.TAGS_CLOUD, \"column-2\");\n        addResourcePermissions(companyId, portletId, layout.getPlid());\n\n        portletId = addPortletId(layout, PortletKeys.RECENT_BLOGGERS,\n            \"column-2\");\n        addResourcePermissions(companyId, portletId, layout.getPlid());\n\t}","commit_id":"14af95b9e8072a60bffb34e2a1beb8e13d68d2d2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Area self = (Area) comp;\r\n\t\twh.write(\"<area id=\\\"\").write(self.getUuid()).write(\r\n\t\t\t\t\"\\\" z.type=\\\"Area\\\"\").write(self.getOuterAttrs()).write(\"/>\");\r\n\t\twh.writeln();\r\n\t}","id":15110,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Area self = (Area) comp;\r\n\t\twh.write(\"<area id=\\\"\").write(self.getUuid()).write(\r\n\t\t\t\t\"\\\" z.type=\\\"Area\\\"\").write(self.getOuterAttrs()).write(\"/>\");\r\n\t}","commit_id":"2c9fbd8388a12aba85ed278f6ed11918b8ce2d64","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Audio self = (Audio) comp;\r\n\t\twh.write(\"<embed id=\\\"\").write(self.getUuid()).write(\"\\\"\").write(\r\n\t\t\t\tself.getOuterAttrs()).write(self.getInnerAttrs()).write(\r\n\t\t\t\t\" mastersound z.type=\\\"zul.audio.Audio\\\"/>\");\r\n\t\twh.writeln();\r\n\t}","id":15111,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Audio self = (Audio) comp;\r\n\t\twh.write(\"<embed id=\\\"\").write(self.getUuid()).write(\"\\\"\").write(\r\n\t\t\t\tself.getOuterAttrs()).write(self.getInnerAttrs()).write(\r\n\t\t\t\t\" mastersound z.type=\\\"zul.audio.Audio\\\"/>\");\r\n\t}","commit_id":"2c9fbd8388a12aba85ed278f6ed11918b8ce2d64","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Button self = (Button) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\tif (!self.isImageAssigned() && Executions.getCurrent().isSafari()) {\r\n\t\t\twh.write(\"<input type=\\\"button\\\" id=\\\"\").write(uuid).write(\"\\\"\");\r\n\t\t\twh.write(\" z.type=\\\"zul.widget.Button\\\" value=\\\"\").write(\r\n\t\t\t\t\tself.getLabel()).write(\"\\\"\");\r\n\t\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\r\n\t\t\t\t\t\"/>\");\r\n\t\t\twh.writeln();\r\n\t\t} else {\r\n\t\t\twh.write(\"<button type=\\\"button\\\" id=\\\"\").write(uuid).write(\"\\\"\");\r\n\t\t\twh.write(\" z.type=\\\"zul.widget.Button\\\"\").write(\r\n\t\t\t\t\tself.getOuterAttrs());\r\n\t\t\twh.write(self.getInnerAttrs()).write(\">\");\r\n\r\n\t\t\tif (self.getDir().equals(\"reverse\")) {\r\n\t\t\t\tnew Out(self.getLabel()).render(out);\r\n\t\t\t\tif (self.isImageAssigned()\r\n\t\t\t\t\t\t&& self.getOrient().equals(\"vertical\"))\r\n\t\t\t\t\twh.write(\"<br/>\");\r\n\t\t\t\twh.write(self.getImgTag());\r\n\t\t\t} else {\r\n\t\t\t\twh.write(self.getImgTag());\r\n\t\t\t\tif (self.isImageAssigned()\r\n\t\t\t\t\t\t&& self.getOrient().equals(\"vertical\"))\r\n\t\t\t\t\twh.write(\"<br/>\");\r\n\t\t\t\tnew Out(self.getLabel()).render(out);\r\n\t\t\t}\r\n\t\t\twh.write(\"<\/button>\");\r\n\t\t\twh.writeln();\r\n\t\t}\r\n\t}","id":15112,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Button self = (Button) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\tif (!self.isImageAssigned() && Executions.getCurrent().isSafari()) {\r\n\t\t\twh.write(\"<input type=\\\"button\\\" id=\\\"\").write(uuid).write(\"\\\"\");\r\n\t\t\twh.write(\" z.type=\\\"zul.widget.Button\\\" value=\\\"\").write(\r\n\t\t\t\t\tself.getLabel()).write(\"\\\"\");\r\n\t\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\r\n\t\t\t\t\t\"/>\");\r\n\t\t} else {\r\n\t\t\twh.write(\"<button type=\\\"button\\\" id=\\\"\").write(uuid).write(\"\\\"\");\r\n\t\t\twh.write(\" z.type=\\\"zul.widget.Button\\\"\").write(\r\n\t\t\t\t\tself.getOuterAttrs());\r\n\t\t\twh.write(self.getInnerAttrs()).write(\">\");\r\n\r\n\t\t\tif (self.getDir().equals(\"reverse\")) {\r\n\t\t\t\tnew Out(self.getLabel()).render(out);\r\n\t\t\t\tif (self.isImageAssigned()\r\n\t\t\t\t\t\t&& self.getOrient().equals(\"vertical\"))\r\n\t\t\t\t\twh.writeln(\"<br/>\");\r\n\t\t\t\twh.write(self.getImgTag());\r\n\t\t\t} else {\r\n\t\t\t\twh.write(self.getImgTag());\r\n\t\t\t\tif (self.isImageAssigned()\r\n\t\t\t\t\t\t&& self.getOrient().equals(\"vertical\"))\r\n\t\t\t\t\twh.writeln(\"<br/>\");\r\n\t\t\t\tnew Out(self.getLabel()).render(out);\r\n\t\t\t}\r\n\t\t\twh.write(\"<\/button>\");\r\n\t\t}\r\n\t}","commit_id":"2c9fbd8388a12aba85ed278f6ed11918b8ce2d64","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Calendar self = (Calendar) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<table id=\\\"\").write(uuid).write(\"\\\"\");\r\n\t\twh.write(\" z.type=\\\"zul.db.Cal\\\"\");\r\n\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs());\r\n\t\twh.write(\"><\/table>\");\r\n\t\twh.writeln();\r\n\t}","id":15113,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Calendar self = (Calendar) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<table id=\\\"\").write(uuid).write(\"\\\"\");\r\n\t\twh.write(\" z.type=\\\"zul.db.Cal\\\"\");\r\n\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs());\r\n\t\twh.write(\"><\/table>\");\r\n\t}","commit_id":"2c9fbd8388a12aba85ed278f6ed11918b8ce2d64","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Checkbox self = (Checkbox) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<span id=\\\"\").write(uuid).write(\"\\\"\");\r\n\t\twh.write(\" z.type=\\\"zul.widget.Ckbox\\\"\");\r\n\t\twh.write(self.getOuterAttrs()).write(\"><input type=\\\"checkbox\\\" id=\\\"\");\r\n\t\twh.write(uuid).write(\"!real\\\"\").write(self.getInnerAttrs());\r\n\t\twh.write(\"/><label for=\\\"\").write(uuid).write(\"!real\\\"\");\r\n\t\twh.write(self.getLabelAttrs()).write(\">\").write(self.getImgTag());\r\n\t\tnew Out(self.getLabel()).render(out);\r\n\t\twh.write(\"<\/label><\/span>\");\r\n\t\twh.writeln();\r\n\t}","id":15114,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Checkbox self = (Checkbox) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<span id=\\\"\").write(uuid).write(\"\\\"\");\r\n\t\twh.write(\" z.type=\\\"zul.widget.Ckbox\\\"\");\r\n\t\twh.write(self.getOuterAttrs()).write(\"><input type=\\\"checkbox\\\" id=\\\"\");\r\n\t\twh.write(uuid).write(\"!real\\\"\").write(self.getInnerAttrs());\r\n\t\twh.write(\"/><label for=\\\"\").write(uuid).write(\"!real\\\"\");\r\n\t\twh.write(self.getLabelAttrs()).write(\">\").write(self.getImgTag());\r\n\t\tnew Out(self.getLabel()).render(out);\r\n\t\twh.write(\"<\/label><\/span>\");\r\n\t}","commit_id":"2c9fbd8388a12aba85ed278f6ed11918b8ce2d64","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Combobox self = (Combobox) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\tfinal Execution exec = Executions.getCurrent();\r\n\t\twh.write(\"<span id=\\\"\").write(uuid).write(\"\\\"\");\r\n\t\twh.write(self.getOuterAttrs());\r\n\t\twh.write(\" z.type=\\\"zul.cb.Cmbox\\\" z.combo=\\\"true\\\"><input id=\\\"\");\r\n\t\twh.write(uuid).write(\"!real\\\" autocomplete=\\\"off\\\"\");\r\n\t\twh.write(self.getInnerAttrs()).write(\"/><span id=\\\"\");\r\n\t\twh.write(uuid).write(\"!btn\\\" class=\\\"rbtnbk\\\"><img src=\\\"\");\r\n\t\twh.write(exec.encodeURL(self.getImage())).write(\"\\\"\");\r\n\t\tif (self.isButtonVisible())\r\n\t\t\twh.write(\"\");\r\n\t\telse wh.write(\" style=\\\"display:none\\\"\");\r\n\t\twh.write(\"/><\/span><div id=\\\"\").write(uuid);\r\n\t\twh.write(\"!pp\\\" class=\\\"comboboxpp\\\" style=\\\"display:none\\\" tabindex=\\\"-1\\\">\");\r\n\t\twh.write(\"<table id=\\\"\").write(uuid).write(\r\n\t\t\t\t\"!cave\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\");\r\n\t\twh.writeChildren(self);\r\n\t\twh.write(\"<\/table><\/div><\/span>\");\r\n\t\twh.writeln();\r\n\t}","id":15115,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Combobox self = (Combobox) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\tfinal Execution exec = Executions.getCurrent();\r\n\t\twh.write(\"<span id=\\\"\").write(uuid).write(\"\\\"\");\r\n\t\twh.write(self.getOuterAttrs());\r\n\t\twh.write(\" z.type=\\\"zul.cb.Cmbox\\\" z.combo=\\\"true\\\"><input id=\\\"\");\r\n\t\twh.write(uuid).write(\"!real\\\" autocomplete=\\\"off\\\"\");\r\n\t\twh.write(self.getInnerAttrs()).write(\"/><span id=\\\"\");\r\n\t\twh.write(uuid).write(\"!btn\\\" class=\\\"rbtnbk\\\"><img src=\\\"\");\r\n\t\twh.write(exec.encodeURL(self.getImage())).write(\"\\\"\");\r\n\t\tif (!self.isButtonVisible())\r\n\t\t\twh.write(\" style=\\\"display:none\\\"\");\r\n\t\twh.write(\"/><\/span><div id=\\\"\").write(uuid);\r\n\t\twh.write(\"!pp\\\" class=\\\"comboboxpp\\\" style=\\\"display:none\\\" tabindex=\\\"-1\\\">\");\r\n\t\twh.write(\"<table id=\\\"\").write(uuid).write(\r\n\t\t\t\t\"!cave\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\");\r\n\t\twh.writeChildren(self);\r\n\t\twh.write(\"<\/table><\/div><\/span>\");\r\n\t}","commit_id":"2c9fbd8388a12aba85ed278f6ed11918b8ce2d64","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Comboitem self = (Comboitem) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<tr id=\\\"\").write(uuid).write(\"\\\" z.type=\\\"Cmit\\\"\");\r\n\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\">\");\r\n\t\twh.write(\"<td>\").write(self.getImgTag()).write(\"<\/td><td>\");\r\n\t\tnew Out(self.getLabel()).render(out);\r\n\t\tif (!Strings.isBlank(self.getDescription())\r\n\t\t\t\t|| !Strings.isBlank(self.getContent())) {\r\n\t\t\twh.write(\"<br/><span>\");\r\n\t\t\tnew Out(self.getDescription()).render(out);\r\n\t\t\twh.write(\"<\/span>\").write(self.getContent());\r\n\t\t}\r\n\t\twh.write(\"<\/td><\/tr>\");\r\n\t\twh.writeln();\r\n\t}","id":15116,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Comboitem self = (Comboitem) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<tr id=\\\"\").write(uuid).write(\"\\\" z.type=\\\"Cmit\\\"\")\r\n\t\t\t.write(self.getOuterAttrs()).write(self.getInnerAttrs()).writeln(\">\")\r\n\t\t\t.write(\"<td>\").write(self.getImgTag()).write(\"<\/td>\\n<td>\");\r\n\r\n\t\tnew Out(self.getLabel()).render(out);\r\n\t\tif (!Strings.isBlank(self.getDescription())\r\n\t\t\t\t|| !Strings.isBlank(self.getContent())) {\r\n\t\t\twh.write(\"<br/>\\n<span>\");\r\n\t\t\tnew Out(self.getDescription()).render(out);\r\n\t\t\twh.write(\"<\/span>\").write(self.getContent());\r\n\t\t}\r\n\t\twh.writeln(\"<\/td><\/tr>\");\r\n\t}","commit_id":"2c9fbd8388a12aba85ed278f6ed11918b8ce2d64","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Datebox self = (Datebox) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\tfinal Execution exec = Executions.getCurrent();\r\n\r\n\t\twh.write(\"<span id=\\\"\").write(uuid).write(\"\\\"\");\r\n\t\twh.write(self.getOuterAttrs()).write(\" z.type=\\\"zul.db.Dtbox\\\" z.combo=\\\"true\\\"><input id=\\\"\");\r\n\t\twh.write(uuid).write(\"!real\\\" autocomplete=\\\"off\\\"\");\r\n\t\twh.write(self.getInnerAttrs()).write(\"/><span id=\\\"\");\r\n\t\twh.write(uuid).write(\"!btn\\\" class=\\\"rbtnbk\\\"><img src=\\\"\");\r\n\t\twh.write(exec.encodeURL(self.getImage()));\r\n\t\twh.write(\"\\\"\");\r\n\t\tif (self.isButtonVisible())\r\n\t\t\twh.write(\"\");\r\n\t\telse wh.write(\" style=\\\"display:none\\\"\");\r\n\t\twh.write(\"/><\/span><div id=\\\"\").write(uuid);\r\n\t\twh.write(\"!pp\\\" class=\\\"dateboxpp\\\" style=\\\"display:none\\\" tabindex=\\\"-1\\\"><\/div><\/span>\");\r\n\t\twh.writeln();\r\n\t}","id":15117,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Datebox self = (Datebox) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\tfinal Execution exec = Executions.getCurrent();\r\n\r\n\t\twh.write(\"<span id=\\\"\").write(uuid).write(\"\\\"\");\r\n\t\twh.write(self.getOuterAttrs()).write(\" z.type=\\\"zul.db.Dtbox\\\" z.combo=\\\"true\\\"><input id=\\\"\");\r\n\t\twh.write(uuid).write(\"!real\\\" autocomplete=\\\"off\\\"\");\r\n\t\twh.write(self.getInnerAttrs()).write(\"/><span id=\\\"\");\r\n\t\twh.write(uuid).write(\"!btn\\\" class=\\\"rbtnbk\\\"><img src=\\\"\");\r\n\t\twh.write(exec.encodeURL(self.getImage()));\r\n\t\twh.write(\"\\\"\");\r\n\t\tif (!self.isButtonVisible())\r\n\t\t\twh.write(\" style=\\\"display:none\\\"\");\r\n\t\twh.write(\"/><\/span><div id=\\\"\").write(uuid);\r\n\t\twh.write(\"!pp\\\" class=\\\"dateboxpp\\\" style=\\\"display:none\\\" tabindex=\\\"-1\\\"><\/div><\/span>\");\r\n\t}","commit_id":"2c9fbd8388a12aba85ed278f6ed11918b8ce2d64","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Decimalbox self = (Decimalbox) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<input id=\\\"\").write(uuid).write(\"\\\"\");\r\n        wh.write(\" z.type=\\\"zul.widget.Dcbox\\\"\");\r\n        wh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\"/>\");\r\n        wh.writeln();\r\n\t}","id":15118,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Decimalbox self = (Decimalbox) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<input id=\\\"\").write(uuid).write(\"\\\"\");\r\n        wh.write(\" z.type=\\\"zul.widget.Dcbox\\\"\");\r\n        wh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\"/>\");\r\n\t}","commit_id":"2c9fbd8388a12aba85ed278f6ed11918b8ce2d64","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Doublebox self = (Doublebox) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<input id=\\\"\").write(uuid).write(\"\\\"\");\r\n\t\twh.write(\" z.type=\\\"zul.widget.Dbbox\\\"\");\r\n\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\"/>\");\r\n\t\twh.writeln();\r\n\t}","id":15119,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Doublebox self = (Doublebox) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<input id=\\\"\").write(uuid).write(\"\\\"\");\r\n\t\twh.write(\" z.type=\\\"zul.widget.Dbbox\\\"\");\r\n\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\"/>\");\r\n\t}","commit_id":"2c9fbd8388a12aba85ed278f6ed11918b8ce2d64","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Flash self = (Flash) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"\\\" \");\r\n\t\twh.write(self.getOuterAttrs()).write(\" z.type=\\\"zul.flash.Flash\\\">\");\r\n\t\twh.write(\"<object id=\\\"\").write(uuid).write(\"!obj\\\"  width=\\\"\");\r\n\t\twh.write(self.getWidth()).write(\"\\\" height=\\\"\").write(self.getHeight()).write(\"\\\">\");\r\n\t\twh.write(\"<param name=\\\"movie\\\" value=\\\"\").write(self.getSrc()).write(\"\\\"><\/param>\");\r\n\t\twh.write(\"<param name=\\\"wmode\\\" value=\\\"transparent\\\"><\/param>\");\r\n\t\twh.write(\"<embed id=\\\"\").write(uuid).write(\"!emb\\\" src=\\\"\");\r\n\t\twh.write(self.getSrc()).write(\"\\\" type=\\\"application/x-shockwave-flash\\\" wmode=\\\"transparent\\\" width=\\\"\");\r\n\t\twh.write(self.getWidth()).write(\"\\\" height=\\\"\").write(self.getHeight()).write(\"\\\">\");\r\n\t\twh.write(\"<\/embed><\/object><\/div>\");\r\n\t\twh.writeln();\r\n\t}","id":15120,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Flash self = (Flash) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"\\\" \");\r\n\t\twh.write(self.getOuterAttrs()).write(\" z.type=\\\"zul.flash.Flash\\\">\");\r\n\t\twh.write(\"<object id=\\\"\").write(uuid).write(\"!obj\\\"  width=\\\"\");\r\n\t\twh.write(self.getWidth()).write(\"\\\" height=\\\"\").write(self.getHeight()).write(\"\\\">\");\r\n\t\twh.write(\"<param name=\\\"movie\\\" value=\\\"\").write(self.getSrc()).write(\"\\\"><\/param>\");\r\n\t\twh.write(\"<param name=\\\"wmode\\\" value=\\\"transparent\\\"><\/param>\");\r\n\t\twh.write(\"<embed id=\\\"\").write(uuid).write(\"!emb\\\" src=\\\"\");\r\n\t\twh.write(self.getSrc()).write(\"\\\" type=\\\"application/x-shockwave-flash\\\" wmode=\\\"transparent\\\" width=\\\"\");\r\n\t\twh.write(self.getWidth()).write(\"\\\" height=\\\"\").write(self.getHeight()).write(\"\\\">\");\r\n\t\twh.write(\"<\/embed><\/object><\/div>\");\r\n\t}","commit_id":"2c9fbd8388a12aba85ed278f6ed11918b8ce2d64","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Listbox self = (Listbox)comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\t\r\n\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"\\\" z.type=\\\"zul.sel.Libox\\\"\");\r\n\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).writeln(\">\");\r\n\t\tif(self.getListhead() != null){\r\n\t\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"!head\\\" class=\\\"listbox-head\\\">\");\r\n\t\t\twh.write(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"table-layout:fixed\\\">\");\r\n\t\t\tself.getListhead().redraw(out);\r\n\t\t\twh.write(\"<\/table><\/div>\");\r\n\t\t}\r\n\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"!body\\\" class=\\\"listbox-body\\\">\");\r\n\t\twh.write(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" id=\\\"\").write(uuid).write(\"!cave\\\" class=\\\"listbox-btable\\\">\");\r\n\t\tfor (Iterator it = self.getItems().iterator(); it.hasNext();) {\r\n\t\t\tfinal Component item = (Component)it.next();\r\n\t\t\titem.redraw(out);\r\n\t\t}\r\n\t\twh.write(\"<\/table><\/div>\");\r\n\t\tif(self.getListfoot() != null){\r\n\t\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"!foot\\\" class=\\\"listbox-foot\\\">\");\r\n\t\t\twh.write(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"table-layout:fixed\\\">\");\r\n\t\t\tself.getListfoot().redraw(out);\r\n\t\t\twh.write(\"<\/table><\/div>\");\r\n\t\t}\r\n\t\twh.write(\"<\/div>\");\r\n\t\t/*\r\n\t\t<c:set var=\"self\" value=\"${requestScope.arg.self}\"/>\r\n\t\t<div id=\"${self.uuid}\" z.type=\"zul.sel.Libox\"${self.outerAttrs}${self.innerAttrs}>\r\n\t\t<c:if test=\"${!empty self.listhead}\">\r\n\t\t\t<div id=\"${self.uuid}!head\" class=\"listbox-head\">\r\n\t\t\t<table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"table-layout:fixed\">\r\n\t\t${z:redraw(self.listhead, null)}\r\n\t\t\t<\/table>\r\n\t\t\t<\/div>\r\n\t\t<\/c:if>\r\n\t\t\t<div id=\"${self.uuid}!body\" class=\"listbox-body\">\r\n\t\t\t<table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" id=\"${self.uuid}!cave\" class=\"listbox-btable\">\r\n\t\t\t<c:forEach var=\"item\" items=\"${self.items}\">\r\n\t\t${z:redraw(item, null)}\r\n\t\t\t<\/c:forEach>\r\n\t\t\t<\/table>\r\n\t\t\t<\/div>\r\n\t\t<c:if test=\"${!empty self.listfoot}\">\r\n\t\t\t<div id=\"${self.uuid}!foot\" class=\"listbox-foot\">\r\n\t\t\t<table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"table-layout:fixed\">\r\n\t\t${z:redraw(self.listfoot, null)}\r\n\t\t\t<\/table>\r\n\t\t\t<\/div>\r\n\t\t<\/c:if>\r\n\t\t<\/div>\r\n\t\t*/\r\n\r\n\t}","id":15121,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Listbox self = (Listbox)comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\t\r\n\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"\\\" z.type=\\\"zul.sel.Libox\\\"\")\r\n\t\t\t.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\">\");\r\n\r\n\t\tif(self.getListhead() != null){\r\n\t\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"!head\\\" class=\\\"listbox-head\\\">\")\r\n\t\t\t\t.writeln(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"table-layout:fixed\\\">\")\r\n\t\t\t\t.writeln(self.getListhead())\r\n\t\t\t\t.write(\"<\/table><\/div>\");\r\n\t\t}\r\n\r\n\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"!body\\\" class=\\\"listbox-body\\\">\")\r\n\t\t\t.write(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" id=\\\"\")\r\n\t\t\t.write(uuid).writeln(\"!cave\\\" class=\\\"listbox-btable\\\">\")\r\n\t\t\t.write(self.getItems())\r\n\t\t\t.write(\"\\n<\/table><\/div>\");\r\n\r\n\t\tif(self.getListfoot() != null){\r\n\t\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"!foot\\\" class=\\\"listbox-foot\\\">\")\r\n\t\t\t\t.writeln(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"table-layout:fixed\\\">\")\r\n\t\t\t\t.writeln(self.getListfoot())\r\n\t\t\t\t.write(\"<\/table><\/div>\");\r\n\t\t}\r\n\r\n\t\twh.write(\"<\/div>\");\r\n\t}","commit_id":"2c9fbd8388a12aba85ed278f6ed11918b8ce2d64","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Listbox self = (Listbox)comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\t\r\n\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"\\\" z.type=\\\"zul.sel.Libox\\\"\");\r\n\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).writeln(\">\");\r\n\t\t\r\n\t\twh.write(\"<div id=\\\"\").write(uuid)\r\n\t\t\t.write(\"!paging\\\" class=\\\"listbox-paging\\\">\")\r\n\t\t\t.write(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" class=\\\"listbox-btable\\\">\");\r\n\r\n\t\t//header\r\n\t\twh.write(\"<tbody>\").write(self.getListhead()).write(\"<\/tbody>\");\r\n\r\n\t\t//body\r\n\t\twh.write(\"<tbody id=\\\"\").write(uuid).write(\"!cave\\\">\");\r\n\t\tint i = self.getVisibleBegin();\r\n\t\tif (i < self.getItems().size()) {\r\n\t\t\tListIterator it = self.getItems().listIterator(i);\r\n\t\t\tfor (int end = self.getVisibleEnd(); i <= end && it.hasNext(); i++) {\r\n\t\t\t\t((Component)it.next()).redraw(out);\r\n\t\t\t}\r\n\t\t}\r\n\t\twh.write(\"<\/tbody>\");\r\n\r\n\t\t//Footer\r\n\t\twh.write(\"<tbody class=\\\"grid-foot\\\">\").write(self.getListfoot())\r\n\t\t\t.write(\"<\/tbody><\/table>\");\r\n\r\n\t\t//Paging\r\n\t\twh.write(\"<div id=\\\"\").write(uuid)\r\n\t\t\t.write(\"!pgi\\\" class=\\\"listbox-pgi\\\">\")\r\n\t\t\t.write(self.getPaging())\r\n\t\t\t.write(\"<\/div><\/div><\/div>\");\r\n\r\n\t\t/*\r\n\t\t<div id=\"${self.uuid}\" z.type=\"zul.sel.Libox\"${self.outerAttrs}${self.innerAttrs}>\r\n\t\t\t<div id=\"${self.uuid}!paging\" class=\"listbox-paging\">\r\n\t\t\t<table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"listbox-btable\">\r\n\t\t\t<tbody>\r\n\t\t${z:redraw(self.listhead, null)}\r\n\t\t\t<\/tbody>\r\n\t\r\n\t\t\t<tbody id=\"${self.uuid}!cave\">\r\n\t\t\t<c:forEach var=\"item\" items=\"${self.items}\" begin=\"${self.visibleBegin}\" end=\"${self.visibleEnd}\">\r\n\t\t${z:redraw(item, null)}\r\n\t\t\t<\/c:forEach>\r\n\t\t\t<\/tbody>\r\n\t\r\n\t\t\t<tbody class=\"grid-foot\">\r\n\t\t${z:redraw(self.listfoot, null)}\r\n\t\t\t<\/tbody>\r\n\t\t\t<\/table>\r\n\t\t\t<div id=\"${self.uuid}!pgi\" class=\"listbox-pgi\">\r\n\t\t\t${z:redraw(self.paging, null)}\r\n\t\t\t<\/div>\r\n\t\t\t<\/div>\r\n\t\t<\/div>\r\n\t\t*/\t\t\r\n\t}","id":15122,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Listbox self = (Listbox)comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\t\r\n\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"\\\" z.type=\\\"zul.sel.Libox\\\"\");\r\n\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).writeln(\">\");\r\n\t\t\r\n\t\twh.write(\"<div id=\\\"\").write(uuid)\r\n\t\t\t.write(\"!paging\\\" class=\\\"listbox-paging\\\">\")\r\n\t\t\t.write(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" class=\\\"listbox-btable\\\">\");\r\n\r\n\t\t//header\r\n\t\twh.write(\"<tbody>\").write(self.getListhead()).write(\"<\/tbody>\");\r\n\r\n\t\t//body\r\n\t\twh.write(\"<tbody id=\\\"\").write(uuid).writeln(\"!cave\\\">\")\r\n\t\t\t.write(self.getItems(), self.getVisibleBegin(), self.getVisibleEnd())\r\n\t\t\t.writeln(\"<\/tbody>\");\r\n\r\n\t\t//Footer\r\n\t\twh.write(\"<tbody class=\\\"grid-foot\\\">\").write(self.getListfoot())\r\n\t\t\t.write(\"<\/tbody><\/table>\");\r\n\r\n\t\t//Paging\r\n\t\twh.write(\"<div id=\\\"\").write(uuid)\r\n\t\t\t.write(\"!pgi\\\" class=\\\"listbox-pgi\\\">\")\r\n\t\t\t.write(self.getPaging())\r\n\t\t\t.write(\"<\/div><\/div><\/div>\");\r\n\r\n\t\t/*\r\n\t\t<div id=\"${self.uuid}\" z.type=\"zul.sel.Libox\"${self.outerAttrs}${self.innerAttrs}>\r\n\t\t\t<div id=\"${self.uuid}!paging\" class=\"listbox-paging\">\r\n\t\t\t<table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"listbox-btable\">\r\n\t\t\t<tbody>\r\n\t\t${z:redraw(self.listhead, null)}\r\n\t\t\t<\/tbody>\r\n\t\r\n\t\t\t<tbody id=\"${self.uuid}!cave\">\r\n\t\t\t<c:forEach var=\"item\" items=\"${self.items}\" begin=\"${self.visibleBegin}\" end=\"${self.visibleEnd}\">\r\n\t\t${z:redraw(item, null)}\r\n\t\t\t<\/c:forEach>\r\n\t\t\t<\/tbody>\r\n\t\r\n\t\t\t<tbody class=\"grid-foot\">\r\n\t\t${z:redraw(self.listfoot, null)}\r\n\t\t\t<\/tbody>\r\n\t\t\t<\/table>\r\n\t\t\t<div id=\"${self.uuid}!pgi\" class=\"listbox-pgi\">\r\n\t\t\t${z:redraw(self.paging, null)}\r\n\t\t\t<\/div>\r\n\t\t\t<\/div>\r\n\t\t<\/div>\r\n\t\t*/\t\t\r\n\t}","commit_id":"2c9fbd8388a12aba85ed278f6ed11918b8ce2d64","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Listbox self = (Listbox)comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<select id=\\\"\").write(uuid).write(\"\\\" z.type=\\\"zul.sel.Lisel\\\"\").write(self.getOuterAttrs()).write(self.getInnerAttrs()).writeln(\">\");\r\n\t\tfor (Iterator it = self.getItems().iterator(); it.hasNext();) {\r\n\t\t\tfinal Listitem item = (Listitem)it.next();\r\n\t\t\twh.write(\"<option id=\\\"\").write(item.getUuid()).write(\"\\\"\").write(item.getOuterAttrs()).write(item.getInnerAttrs()).writeln(\">\");\r\n\t\t\tnew Out(item.getLabel()).setMaxlength(self.getMaxlength()).render(out);\r\n\t\t\twh.write(\"<\/option>\");\r\n\t\t}\r\n\t\twh.write(\"<\/select>\");\r\n\t\t/*\r\n\t\t<select id=\"${self.uuid}\" z.type=\"zul.sel.Lisel\"${self.outerAttrs}${self.innerAttrs}>\r\n\t\t<c:forEach var=\"item\" items=\"${self.items}\">\r\n\t\t<option id=\"${item.uuid}\"${item.outerAttrs}${item.innerAttrs}><c:out value=\"${item.label}\" maxlength=\"${self.maxlength}\"/><\/option>\r\n\t\t<\/c:forEach><%-- for better performance, we don't use z:redraw --%>\r\n\t\t<\/select>\r\n\t\t*/\r\n\t}","id":15123,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Listbox self = (Listbox)comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<select id=\\\"\").write(uuid).write(\"\\\" z.type=\\\"zul.sel.Lisel\\\"\")\r\n\t\t\t.write(self.getOuterAttrs()).write(self.getInnerAttrs()).writeln(\">\");\r\n\r\n\t\tfor (Iterator it = self.getItems().iterator(); it.hasNext();) {\r\n\t\t\tfinal Listitem item = (Listitem)it.next();\r\n\t\t\twh.write(\"<option id=\\\"\").write(item.getUuid()).write(\"\\\"\")\r\n\t\t\t\t.write(item.getOuterAttrs()).write(item.getInnerAttrs()).write(\">\");\r\n\t\t\tnew Out(item.getLabel()).setMaxlength(self.getMaxlength()).render(out);\r\n\t\t\twh.writeln(\"<\/option>\");\r\n\t\t}\r\n\r\n\t\twh.write(\"<\/select>\");\r\n\t}","commit_id":"2c9fbd8388a12aba85ed278f6ed11918b8ce2d64","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Rows self = (Rows) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<tbody id=\\\"\").write(uuid).write(\"\\\"\");\r\n\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\">\");\r\n\r\n\t\tint i = self.getVisibleBegin();\r\n\t\tif (i < self.getChildren().size()) {\r\n\t\t\tListIterator it = self.getChildren().listIterator(i);\r\n\t\t\tfor (int end = self.getVisibleEnd(); i <= end && it.hasNext(); i++) {\r\n\t\t\t\t((Component)it.next()).redraw(out);\r\n\t\t\t}\r\n\t\t}\r\n\t\twh.writeln(\"<\/tbody>\");\r\n\t}","id":15124,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Rows self = (Rows) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<tbody id=\\\"\").write(uuid).write(\"\\\"\")\r\n\t\t\t.write(self.getOuterAttrs()).write(self.getInnerAttrs()).writeln(\">\")\r\n\t\t\t.writeChildren(self, self.getVisibleBegin(), self.getVisibleEnd())\r\n\t\t\t.writeln(\"<\/tbody>\");\r\n\t}","commit_id":"2c9fbd8388a12aba85ed278f6ed11918b8ce2d64","url":"https://github.com/zkoss/zk"},{"original_method":"/**\r\n<c:set var=\"self\" value=\"${requestScope.arg.self}\"/>\r\n<div id=\"${self.uuid}\" z.type=\"zul.tree.Tree\"${self.outerAttrs}${self.innerAttrs}>\r\n<c:if test=\"${!empty self.treecols}\">\r\n\t<div id=\"${self.uuid}!head\" class=\"tree-head\">\r\n\t<table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"table-layout:fixed\">\r\n${z:redraw(self.treecols, null)}\r\n\t<\/table>\r\n\t<\/div>\r\n<\/c:if>\r\n\t<div id=\"${self.uuid}!body\" class=\"tree-body\">\r\n\t<table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n${z:redraw(self.treechildren, null)}\r\n\t<\/table>\r\n\t<\/div>\r\n<c:if test=\"${!empty self.treefoot}\">\r\n\t<div id=\"${self.uuid}!foot\" class=\"tree-foot\">\r\n\t<table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"table-layout:fixed\">\r\n${z:redraw(self.treefoot, null)}\r\n\t<\/table>\r\n\t<\/div>\r\n<\/c:if>\r\n<\/div>\r\n\t */\r\n\t/* (non-Javadoc)\r\n\t * @see org.zkoss.zk.ui.render.ComponentRenderer#render(org.zkoss.zk.ui.Component, java.io.Writer)\r\n\t */\r\n\tpublic void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Tree self = (Tree) comp;\r\n\t\tfinal Treecols tcs = (Treecols) self.getTreecols();\r\n\t\tfinal Treechildren tc = (Treechildren) self.getTreechildren();\r\n\t\tfinal Treefoot tf = (Treefoot) self.getTreefoot();\r\n\t\t\r\n\t\twh.write(\"<div id=\\\"\" + self.getUuid() + \"\\\" z.type=\\\"zul.tree.Tree\\\"\" \r\n\t\t\t\t+ self.getOuterAttrs() + self.getInnerAttrs() + \">\");\r\n\t\tif(!(self.getTreecols() == null)){\r\n\t\t\twh.write(\"<div id=\\\"\" + self.getUuid() + \"!head\\\" class=\\\"tree-head\\\">\");\r\n\t\t\twh.write(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"table-layout:fixed\\\">\");\r\n\t\t\tif(tcs != null)\r\n\t\t\t\ttcs.redraw(out);\t\t\r\n\t\t\twh.write(\"<\/table>\");\r\n\t\t\twh.write(\"<\/div>\");\r\n\t\t}\r\n\t\twh.write(\"<div id=\\\"\" + self.getUuid() + \"!body\\\" class=\\\"tree-body\\\">\");\r\n\t\twh.write(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\" );\r\n\t\tif(tc != null)\r\n\t\t\ttc.redraw(out);\t\t\r\n\t\twh.write(\"<\/table>\");\r\n\t\twh.write(\"<\/div>\");\t\t\r\n\t\tif(!(self.getTreefoot() == null)){\r\n\t\t\twh.write(\"<div id=\\\"\" + self.getUuid() + \"!foot\\\" class=\\\"tree-foot\\\">\");\r\n\t\t\twh.write(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"table-layout:fixed\\\">\");\r\n\t\t\tif(tf != null)\r\n\t\t\t\ttf.redraw(out);\t\t\r\n\t\t\twh.write(\"<\/table>\");\r\n\t\t\twh.write(\"<\/div>\");\r\n\t\t}\r\n\t\twh.write(\"<\/div>\");\r\n\t}","id":15125,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Tree self = (Tree) comp;\r\n\r\n\t\twh.write(\"<div id=\\\"\").write(self.getUuid()).write(\"\\\" z.type=\\\"zul.tree.Tree\\\"\")\r\n\t\t\t.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\">\");\r\n\r\n\t\tif(self.getTreecols() != null){\r\n\t\t\twh.write(\"<div id=\\\"\").write(self.getUuid()).write(\"!head\\\" class=\\\"tree-head\\\">\")\r\n\t\t\t\t.writeln(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"table-layout:fixed\\\">\")\r\n\t\t\t\t.writeln(self.getTreecols())\r\n\t\t\t\t.write(\"<\/table><\/div>\");\r\n\t\t}\r\n\r\n\t\twh.write(\"<div id=\\\"\").write(self.getUuid()).write(\"!body\\\" class=\\\"tree-body\\\">\")\r\n\t\t\t.writeln(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\")\r\n\t\t\t.writeln(self.getTreechildren())\r\n\t\t\t.write(\"<\/table><\/div>\");\r\n\r\n\t\tif(self.getTreefoot() != null){\r\n\t\t\twh.write(\"<div id=\\\"\").write(self.getUuid()).write(\"!foot\\\" class=\\\"tree-foot\\\">\")\r\n\t\t\t\t.writeln(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"table-layout:fixed\\\">\")\r\n\t\t\t\t.writeln(self.getTreefoot())\r\n\t\t\t\t.write(\"<\/table><\/div>\");\r\n\t\t}\r\n\t\twh.write(\"<\/div>\");\r\n\t}","commit_id":"2c9fbd8388a12aba85ed278f6ed11918b8ce2d64","url":"https://github.com/zkoss/zk"},{"original_method":"/**\r\n<c:set var=\"self\" value=\"${requestScope.arg.self}\"/>\r\n<c:choose>\r\n<c:when test=\"${self.tree == self.parent}\">\r\n<tbody id=\"${self.uuid}\"${self.outerAttrs}${self.innerAttrs}>\r\n\t<c:forEach var=\"child\" items=\"${self.children}\" begin=\"${self.visibleBegin}\" end=\"${self.visibleEnd}\">\r\n\t${z:redraw(child, null)}\r\n\t<\/c:forEach>\r\n<\/tbody>\r\n<\/c:when>\r\n<c:otherwise>\r\n\t<c:forEach var=\"child\" items=\"${self.children}\" begin=\"${self.visibleBegin}\" end=\"${self.visibleEnd}\">\r\n\t${z:redraw(child, null)}\r\n\t<\/c:forEach>\r\n<\/c:otherwise>\r\n<\/c:choose>\r\n\r\n */\r\n\tpublic void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Treechildren self = (Treechildren) comp;\r\n\t\t\r\n\t\tif(self.getTree() == self.getParent()){\r\n\t\t\twh.write(\"<tbody id=\\\"\" + self.getUuid() + \"\\\"\" + self.getOuterAttrs() \r\n\t\t\t\t\t+ self.getInnerAttrs() +\">\");\t\t\t\r\n\t\t\tint i = self.getVisibleBegin();\r\n\t\t\tif (i < self.getChildren().size()) \r\n\t\t\t{\r\n\t\t\t\tListIterator it = self.getChildren().listIterator(i);\r\n\t\t\t\tfor (int end = self.getVisibleEnd(); i <= end && it.hasNext(); i++) \r\n\t\t\t\t{\r\n\t\t\t\t\t((Component)it.next()).redraw(out);\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\twh.write(\"<\/tbody>\");\r\n\t\t\t\r\n\t\t}\r\n\t\telse{\r\n\t\t\tint i = self.getVisibleBegin();\r\n\t\t\tif (i < self.getChildren().size()) \r\n\t\t\t{\r\n\t\t\t\tListIterator it = self.getChildren().listIterator(i);\r\n\t\t\t\tfor (int end = self.getVisibleEnd(); i <= end && it.hasNext(); i++) \r\n\t\t\t\t{\r\n\t\t\t\t\t((Component)it.next()).redraw(out);\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\r\n\t}","id":15126,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Treechildren self = (Treechildren) comp;\r\n\t\t\r\n\t\tif (self.getParent() instanceof Tree) { //top level\r\n\t\t\twh.write(\"<tbody id=\\\"\").write(self.getUuid()).write('\"')\r\n\t\t\t\t.write(self.getOuterAttrs()).write( self.getInnerAttrs() ).writeln(\">\")\r\n\t\t\t\t.writeChildren(self, self.getVisibleBegin(), self.getVisibleEnd())\r\n\t\t\t\t.writeln(\"<\/tbody>\");\r\n\t\t} else {\r\n\t\t\twh.writeChildren(self, self.getVisibleBegin(), self.getVisibleEnd());\r\n\t\t}\r\n\t}","commit_id":"2c9fbd8388a12aba85ed278f6ed11918b8ce2d64","url":"https://github.com/zkoss/zk"},{"original_method":"/**\r\n<c:set var=\"self\" value=\"${requestScope.arg.self}\"/>\r\n<th id=\"${self.uuid}\" z.type=\"Tcol\"${self.outerAttrs}${self.innerAttrs}>${self.imgTag}<c:out value=\"${self.label}\"/>\r\n<\/th>\r\n\r\n */\r\n\tpublic void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Treecol self = (Treecol) comp;\r\n\t\t\r\n\t\twh.write(\"<th id=\\\"\" + self.getUuid() + \"\\\" z.type=\\\"Tcol\\\"\" \r\n\t\t\t\t+ self.getOuterAttrs() + self.getInnerAttrs());\r\n\t\twh.write(self.getImgTag());\r\n\t\twh.write(\">\");\r\n\t\tnew Out(self.getLabel()).render(out);\t\t\r\n\t\twh.write(\"<\/th>\");\r\n\t\t\r\n\r\n\t}","id":15127,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Treecol self = (Treecol) comp;\r\n\t\t\r\n\t\twh.write(\"<th id=\\\"\").write(self.getUuid()).write(\"\\\" z.type=\\\"Tcol\\\"\")\r\n\t\t\t.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\">\")\r\n\t\t\t.write(self.getImgTag());\r\n\t\tnew Out(self.getLabel()).render(out);\t\t\r\n\t\twh.writeln(\"<\/th>\");\r\n\t}","commit_id":"2c9fbd8388a12aba85ed278f6ed11918b8ce2d64","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Treefooter self = (Treefooter) comp;\r\n\t\t\r\n\t\twh.write(\"<td id=\\\"\").write(self.getUuid()).write('\"')\r\n\t\t\t.write(self.getOuterAttrs()).write(self.getInnerAttrs())\r\n\t\t\t.write(self.getImgTag());\r\n\r\n\t\tnew Out(self.getLabel()).render(out);\r\n\r\n\t\twh.write('>')\t\t\r\n\t\t\t.writeChildren(self)\r\n\t\t\t.writeln(\"<\/td>\");\r\n\t}","id":15128,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Treefooter self = (Treefooter) comp;\r\n\t\t\r\n\t\twh.write(\"<td id=\\\"\").write(self.getUuid()).write('\"')\r\n\t\t\t.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write('>')\r\n\t\t\t.write(self.getImgTag());\r\n\r\n\t\tnew Out(self.getLabel()).render(out);\r\n\r\n\t\twh.writeChildren(self)\r\n\t\t\t.writeln(\"<\/td>\");\r\n\t}","commit_id":"2c9fbd8388a12aba85ed278f6ed11918b8ce2d64","url":"https://github.com/zkoss/zk"},{"original_method":"/**\r\n<c:set var=\"self\" value=\"${requestScope.arg.self}\"/>\r\n${z:redraw(self.treerow, null)}\r\n${z:redraw(self.treechildren, null)}\r\n */\r\n\tpublic void render(Component comp, Writer out) throws IOException {\t\t\r\n\t\tfinal Treeitem self = (Treeitem) comp;\r\n\t\tnew SmartWriter(out)\r\n\t\t\t.write(self.getTreerow())\r\n\t\t\t.write(self.getTreechildren());\r\n\t}","id":15129,"modified_method":"public void render(Component comp, Writer out) throws IOException {\t\t\r\n\t\tfinal Treeitem self = (Treeitem) comp;\r\n\t\tnew SmartWriter(out)\r\n\t\t\t.write(self.getTreerow())\r\n\t\t\t.write(self.getTreechildren());\r\n\t}","commit_id":"2c9fbd8388a12aba85ed278f6ed11918b8ce2d64","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Treerow self = (Treerow) comp;\r\n\t\t\r\n\t\twh.write(\"<tr id=\\\"\").write(self.getUuid()).write(\"\\\" z.type=\\\"Trow\\\"\")\r\n\t\t\t.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write('>')\r\n\t\t\t.writeChildren(self)\r\n\t\t\t.write(\"<\/tr>\");\r\n\r\n\t}","id":15130,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal SmartWriter wh = new SmartWriter(out);\r\n\t\tfinal Treerow self = (Treerow) comp;\r\n\t\t\r\n\t\twh.write(\"<tr id=\\\"\").write(self.getUuid()).write(\"\\\" z.type=\\\"Trow\\\"\")\r\n\t\t\t.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write('>')\r\n\t\t\t.writeChildren(self)\r\n\t\t\t.writeln(\"<\/tr>\");\r\n\r\n\t}","commit_id":"2c9fbd8388a12aba85ed278f6ed11918b8ce2d64","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Button self = (Button) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\tif (!self.isImageAssigned() && Executions.getCurrent().isSafari()) {\r\n\t\t\twh.write(\"<input type=\\\"button\\\" id=\\\"\").write(uuid).write(\"\\\"\");\r\n\t\t\twh.write(\" z.type=\\\"zul.widget.Button\\\" value=\\\"\").write(\r\n\t\t\t\t\tself.getLabel()).write(\"\\\"\");\r\n\t\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\r\n\t\t\t\t\t\"/>\");\r\n\t\t\twh.writeln();\r\n\t\t} else {\r\n\t\t\twh.write(\"<button type=\\\"button\\\" id=\\\"\").write(uuid).write(\"\\\"\");\r\n\t\t\twh.write(\" z.type=\\\"zul.widget.Button\\\"\").write(\r\n\t\t\t\t\tself.getOuterAttrs());\r\n\t\t\twh.write(self.getInnerAttrs()).write(\">\");\r\n\r\n\t\t\tif (self.getDir().equals(\"reverse\")) {\r\n\t\t\t\tnew Out(out).setValue(self.getLabel()).render();\r\n\t\t\t\tif (self.isImageAssigned()\r\n\t\t\t\t\t\t&& self.getOrient().equals(\"vertical\"))\r\n\t\t\t\t\twh.write(\"<br/>\");\r\n\t\t\t\twh.write(self.getImgTag());\r\n\t\t\t} else {\r\n\t\t\t\twh.write(self.getImgTag());\r\n\t\t\t\tif (self.isImageAssigned()\r\n\t\t\t\t\t\t&& self.getOrient().equals(\"vertical\"))\r\n\t\t\t\t\twh.write(\"<br/>\");\r\n\t\t\t\tnew Out(out).setValue(self.getLabel()).render();\r\n\t\t\t}\r\n\t\t\twh.write(\"<\/button>\");\r\n\t\t\twh.writeln();\r\n\t\t}\r\n\t}","id":15131,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Button self = (Button) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\tif (!self.isImageAssigned() && Executions.getCurrent().isSafari()) {\r\n\t\t\twh.write(\"<input type=\\\"button\\\" id=\\\"\").write(uuid).write(\"\\\"\");\r\n\t\t\twh.write(\" z.type=\\\"zul.widget.Button\\\" value=\\\"\").write(\r\n\t\t\t\t\tself.getLabel()).write(\"\\\"\");\r\n\t\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\r\n\t\t\t\t\t\"/>\");\r\n\t\t\twh.writeln();\r\n\t\t} else {\r\n\t\t\twh.write(\"<button type=\\\"button\\\" id=\\\"\").write(uuid).write(\"\\\"\");\r\n\t\t\twh.write(\" z.type=\\\"zul.widget.Button\\\"\").write(\r\n\t\t\t\t\tself.getOuterAttrs());\r\n\t\t\twh.write(self.getInnerAttrs()).write(\">\");\r\n\r\n\t\t\tif (self.getDir().equals(\"reverse\")) {\r\n\t\t\t\tnew Out(out, self.getLabel()).render();\r\n\t\t\t\tif (self.isImageAssigned()\r\n\t\t\t\t\t\t&& self.getOrient().equals(\"vertical\"))\r\n\t\t\t\t\twh.write(\"<br/>\");\r\n\t\t\t\twh.write(self.getImgTag());\r\n\t\t\t} else {\r\n\t\t\t\twh.write(self.getImgTag());\r\n\t\t\t\tif (self.isImageAssigned()\r\n\t\t\t\t\t\t&& self.getOrient().equals(\"vertical\"))\r\n\t\t\t\t\twh.write(\"<br/>\");\r\n\t\t\t\tnew Out(out, self.getLabel()).render();\r\n\t\t\t}\r\n\t\t\twh.write(\"<\/button>\");\r\n\t\t\twh.writeln();\r\n\t\t}\r\n\t}","commit_id":"f8a80773826791bd9470f9a1e77a9d9a4c012001","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\n\t\tfinal WriterHelper wh = new WriterHelper(out);\n\t\tfinal Caption self = (Caption) comp;\n\t\tfinal String uuid = self.getUuid();\n\t\tfinal Execution exec = Executions.getCurrent();\n\t\tfinal String imgTag = self.getImgTag();\n\n\t\tif (self.isLegend()) {\n\t\t\twh.write(\"<legend>\").write(imgTag);\n\t\t\tnew Out(out).setValue(self.getLabel()).render();\n\t\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\n\t\t\t\t((Component) it.next()).redraw(out);\n\t\t\t}\n\t\t\twh.write(\"<\/legend>\");\n\t\t\twh.writeln();\n\t\t} else {\n\t\t\twh.write(\"<table id=\\\"\").write(uuid).write(\"\\\" \");\n\t\t\twh.write(\"z.type=\\\"zul.widget.Capt\\\"\").write(self.getOuterAttrs())\n\t\t\t\t\t.write(self.getInnerAttrs());\n\t\t\twh.write(\" width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\");\n\t\t\twh.write(\"<tr valign=\\\"middle\\\">\");\n\t\t\twh.write(\"<td align=\\\"left\\\" class=\\\"caption\\\">\").write(imgTag);\n\t\t\tnew Out(out).setValue(self.getCompoundLabel()).setNbsp(\n\t\t\t\t\ttrue).render();\n\t\t\twh.write(\"<\/td>\");\n\n\t\t\twh.write(\"<td align=\\\"right\\\" class=\\\"caption\\\" id=\\\"\").write(uuid)\n\t\t\t\t\t.write(\"!cave\\\">\");\n\n\t\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\n\t\t\t\t((Component) it.next()).redraw(out);\n\t\t\t}\n\n\t\t\twh.write(\"<\/td>\");\n\t\t\tif (self.isClosableVisible()) {\n\t\t\t\twh.write(\"<td width=\\\"16\\\"><img id=\\\"\").write(\n\t\t\t\t\t\tself.getParent().getUuid()).write(\"!close\\\" src=\\\"\");\n\t\t\t\twh.write(exec.encodeURL(\"~./zul/img/close-off.gif\")).write(\n\t\t\t\t\t\t\"\\\"/><\/td>\");\n\n\t\t\t}\n\n\t\t\twh.writeln(\"<\/tr><\/table>\");\n\t\t\twh.writeln();\n\t\t}\n\t}","id":15132,"modified_method":"public void render(Component comp, Writer out) throws IOException {\n\t\tfinal WriterHelper wh = new WriterHelper(out);\n\t\tfinal Caption self = (Caption) comp;\n\t\tfinal String uuid = self.getUuid();\n\t\tfinal Execution exec = Executions.getCurrent();\n\t\tfinal String imgTag = self.getImgTag();\n\n\t\tif (self.isLegend()) {\n\t\t\twh.write(\"<legend>\").write(imgTag);\n\t\t\tnew Out(out, self.getLabel()).render();\n\t\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\n\t\t\t\t((Component) it.next()).redraw(out);\n\t\t\t}\n\t\t\twh.write(\"<\/legend>\");\n\t\t\twh.writeln();\n\t\t} else {\n\t\t\twh.write(\"<table id=\\\"\").write(uuid).write(\"\\\" \");\n\t\t\twh.write(\"z.type=\\\"zul.widget.Capt\\\"\").write(self.getOuterAttrs())\n\t\t\t\t\t.write(self.getInnerAttrs());\n\t\t\twh.write(\" width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\");\n\t\t\twh.write(\"<tr valign=\\\"middle\\\">\");\n\t\t\twh.write(\"<td align=\\\"left\\\" class=\\\"caption\\\">\").write(imgTag);\n\t\t\tnew Out(out, self.getCompoundLabel()).setNbsp(true).render();\n\t\t\twh.write(\"<\/td>\");\n\n\t\t\twh.write(\"<td align=\\\"right\\\" class=\\\"caption\\\" id=\\\"\").write(uuid)\n\t\t\t\t\t.write(\"!cave\\\">\");\n\n\t\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\n\t\t\t\t((Component) it.next()).redraw(out);\n\t\t\t}\n\n\t\t\twh.write(\"<\/td>\");\n\t\t\tif (self.isClosableVisible()) {\n\t\t\t\twh.write(\"<td width=\\\"16\\\"><img id=\\\"\").write(\n\t\t\t\t\t\tself.getParent().getUuid()).write(\"!close\\\" src=\\\"\");\n\t\t\t\twh.write(exec.encodeURL(\"~./zul/img/close-off.gif\")).write(\n\t\t\t\t\t\t\"\\\"/><\/td>\");\n\n\t\t\t}\n\n\t\t\twh.writeln(\"<\/tr><\/table>\");\n\t\t\twh.writeln();\n\t\t}\n\t}","commit_id":"f8a80773826791bd9470f9a1e77a9d9a4c012001","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Checkbox self = (Checkbox) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<span id=\\\"\").write(uuid).write(\"\\\"\");\r\n\t\twh.write(\" z.type=\\\"zul.widget.Ckbox\\\"\");\r\n\t\twh.write(self.getOuterAttrs()).write(\"><input type=\\\"checkbox\\\" id=\\\"\");\r\n\t\twh.write(uuid).write(\"!real\\\"\").write(self.getInnerAttrs());\r\n\t\twh.write(\"/><label for=\\\"\").write(uuid).write(\"!real\\\"\");\r\n\t\twh.write(self.getLabelAttrs()).write(\">\").write(self.getImgTag());\r\n\t\tnew Out(out).setValue(self.getLabel()).render();\r\n\t\twh.write(\"<\/label><\/span>\");\r\n\t\twh.writeln();\r\n\t}","id":15133,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Checkbox self = (Checkbox) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<span id=\\\"\").write(uuid).write(\"\\\"\");\r\n\t\twh.write(\" z.type=\\\"zul.widget.Ckbox\\\"\");\r\n\t\twh.write(self.getOuterAttrs()).write(\"><input type=\\\"checkbox\\\" id=\\\"\");\r\n\t\twh.write(uuid).write(\"!real\\\"\").write(self.getInnerAttrs());\r\n\t\twh.write(\"/><label for=\\\"\").write(uuid).write(\"!real\\\"\");\r\n\t\twh.write(self.getLabelAttrs()).write(\">\").write(self.getImgTag());\r\n\t\tnew Out(out, self.getLabel()).render();\r\n\t\twh.write(\"<\/label><\/span>\");\r\n\t\twh.writeln();\r\n\t}","commit_id":"f8a80773826791bd9470f9a1e77a9d9a4c012001","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Column self = (Column) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<th id=\\\"\").write(uuid).write(\"\\\"\").write(\" z.type=\\\"Col\\\"\");\r\n\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\">\");\r\n\t\twh.write(self.getImgTag());\r\n\t\tnew Out(out).setValue(self.getLabel()).render();\r\n\t\twh.writeln(\"<\/th>\");\r\n\t}","id":15134,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Column self = (Column) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<th id=\\\"\").write(uuid).write(\"\\\"\").write(\" z.type=\\\"Col\\\"\");\r\n\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\">\");\r\n\t\twh.write(self.getImgTag());\r\n\t\tnew Out(out, self.getLabel()).render();\r\n\t\twh.writeln(\"<\/th>\");\r\n\t}","commit_id":"f8a80773826791bd9470f9a1e77a9d9a4c012001","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Comboitem self = (Comboitem) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<tr id=\\\"\").write(uuid).write(\"\\\" z.type=\\\"Cmit\\\"\");\r\n\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\">\");\r\n\t\twh.write(\"<td>\").write(self.getImgTag()).write(\"<\/td><td>\");\r\n\t\tnew Out(out).setValue(self.getLabel()).render();\r\n\t\tif (!Strings.isBlank(self.getDescription())\r\n\t\t\t\t|| !Strings.isBlank(self.getContent())) {\r\n\t\t\twh.write(\"<br/><span>\");\r\n\t\t\tnew Out(out).setValue(self.getDescription()).render();\r\n\t\t\twh.write(\"<\/span>\").write(self.getContent());\r\n\t\t}\r\n\t\twh.write(\"<\/td><\/tr>\");\r\n\t\twh.writeln();\r\n\t}","id":15135,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Comboitem self = (Comboitem) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<tr id=\\\"\").write(uuid).write(\"\\\" z.type=\\\"Cmit\\\"\");\r\n\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\">\");\r\n\t\twh.write(\"<td>\").write(self.getImgTag()).write(\"<\/td><td>\");\r\n\t\tnew Out(out, self.getLabel()).render();\r\n\t\tif (!Strings.isBlank(self.getDescription())\r\n\t\t\t\t|| !Strings.isBlank(self.getContent())) {\r\n\t\t\twh.write(\"<br/><span>\");\r\n\t\t\tnew Out(out, self.getDescription()).render();\r\n\t\t\twh.write(\"<\/span>\").write(self.getContent());\r\n\t\t}\r\n\t\twh.write(\"<\/td><\/tr>\");\r\n\t\twh.writeln();\r\n\t}","commit_id":"f8a80773826791bd9470f9a1e77a9d9a4c012001","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Footer self = (Footer) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<td id=\\\"\").write(uuid).write(\"\\\"\");\r\n\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\">\");\r\n\t\twh.write(self.getImgTag());\r\n\t\tnew Out(out).setValue(self.getLabel()).render();\r\n\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\r\n\t\t\t((Component) it.next()).redraw(out);\r\n\t\t}\r\n\t\twh.writeln(\"<\/td>\");\r\n\t}","id":15136,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Footer self = (Footer) comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<td id=\\\"\").write(uuid).write(\"\\\"\");\r\n\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\">\");\r\n\t\twh.write(self.getImgTag());\r\n\t\tnew Out(out, self.getLabel()).render();\r\n\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\r\n\t\t\t((Component) it.next()).redraw(out);\r\n\t\t}\r\n\t\twh.writeln(\"<\/td>\");\r\n\t}","commit_id":"f8a80773826791bd9470f9a1e77a9d9a4c012001","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Listbox self = (Listbox)comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<select id=\\\"\").write(uuid).write(\"\\\" z.type=\\\"zul.sel.Lisel\\\"\").write(self.getOuterAttrs()).write(self.getInnerAttrs()).writeln(\">\");\r\n\t\tfor (Iterator it = self.getItems().iterator(); it.hasNext();) {\r\n\t\t\tfinal Listitem item = (Listitem)it.next();\r\n\t\t\twh.write(\"<option id=\\\"\").write(item.getUuid()).write(\"\\\"\").write(item.getOuterAttrs()).write(item.getInnerAttrs()).writeln(\">\");\r\n\t\t\tnew Out(out).setMaxlength(self.getMaxlength()).setValue(item.getLabel()).render();\r\n\t\t\twh.write(\"<\/option>\");\r\n\t\t}\r\n\t\twh.write(\"<\/select>\");\r\n\t\t/*\r\n\t\t<select id=\"${self.uuid}\" z.type=\"zul.sel.Lisel\"${self.outerAttrs}${self.innerAttrs}>\r\n\t\t<c:forEach var=\"item\" items=\"${self.items}\">\r\n\t\t<option id=\"${item.uuid}\"${item.outerAttrs}${item.innerAttrs}><c:out value=\"${item.label}\" maxlength=\"${self.maxlength}\"/><\/option>\r\n\t\t<\/c:forEach><%-- for better performance, we don't use z:redraw --%>\r\n\t\t<\/select>\r\n\t\t*/\r\n\t}","id":15137,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Listbox self = (Listbox)comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<select id=\\\"\").write(uuid).write(\"\\\" z.type=\\\"zul.sel.Lisel\\\"\").write(self.getOuterAttrs()).write(self.getInnerAttrs()).writeln(\">\");\r\n\t\tfor (Iterator it = self.getItems().iterator(); it.hasNext();) {\r\n\t\t\tfinal Listitem item = (Listitem)it.next();\r\n\t\t\twh.write(\"<option id=\\\"\").write(item.getUuid()).write(\"\\\"\").write(item.getOuterAttrs()).write(item.getInnerAttrs()).writeln(\">\");\r\n\t\t\tnew Out(out, item.getLabel()).setMaxlength(self.getMaxlength()).render();\r\n\t\t\twh.write(\"<\/option>\");\r\n\t\t}\r\n\t\twh.write(\"<\/select>\");\r\n\t\t/*\r\n\t\t<select id=\"${self.uuid}\" z.type=\"zul.sel.Lisel\"${self.outerAttrs}${self.innerAttrs}>\r\n\t\t<c:forEach var=\"item\" items=\"${self.items}\">\r\n\t\t<option id=\"${item.uuid}\"${item.outerAttrs}${item.innerAttrs}><c:out value=\"${item.label}\" maxlength=\"${self.maxlength}\"/><\/option>\r\n\t\t<\/c:forEach><%-- for better performance, we don't use z:redraw --%>\r\n\t\t<\/select>\r\n\t\t*/\r\n\t}","commit_id":"f8a80773826791bd9470f9a1e77a9d9a4c012001","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Listcell self = (Listcell)comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<td id=\\\"\").write(uuid).write(\"\\\"\").write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\">\");\r\n\t\twh.write(self.getColumnHtmlPrefix()).write(self.getImgTag());\r\n\t\tnew Out(out).setMaxlength(self.getMaxlength()).setValue(self.getLabel()).render();\r\n\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\r\n\t\t\tfinal Component child = (Component)it.next();\r\n\t\t\tchild.redraw(out);\r\n\t\t}\r\n\t\twh.write(self.getColumnHtmlPostfix()).write(\"<\/td>\");\r\n\t\t\r\n\t\t/*\r\n\t\t<td id=\"${self.uuid}\"${self.outerAttrs}${self.innerAttrs}>\r\n\t\t${self.columnHtmlPrefix}${self.imgTag}\r\n\t\t<c:out value=\"${self.label}\" maxlength=\"${self.maxlength}\"/>\r\n\t\t<c:forEach var=\"child\" items=\"${self.children}\">\r\n\t\t${z:redraw(child, null)}\r\n\t\t<\/c:forEach>\r\n\t\t${self.columnHtmlPostfix}<\/td>\r\n\t\t*/\r\n\t}","id":15138,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Listcell self = (Listcell)comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<td id=\\\"\").write(uuid).write(\"\\\"\").write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\">\");\r\n\t\twh.write(self.getColumnHtmlPrefix()).write(self.getImgTag());\r\n\t\tnew Out(out, self.getLabel()).setMaxlength(self.getMaxlength()).render();\r\n\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\r\n\t\t\tfinal Component child = (Component)it.next();\r\n\t\t\tchild.redraw(out);\r\n\t\t}\r\n\t\twh.write(self.getColumnHtmlPostfix()).write(\"<\/td>\");\r\n\t}","commit_id":"f8a80773826791bd9470f9a1e77a9d9a4c012001","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Listfooter self = (Listfooter)comp;\r\n\t\twh.write(\"<td id=\\\"\").write(self.getUuid()).write(\"\\\" \").write(self.getOuterAttrs()).write(self.getInnerAttrs()).writeln(\">\");\r\n\t\twh.write(self.getImgTag());\r\n\t\tnew Out(out).setValue(self.getLabel()).render();\r\n\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\r\n\t\t\tfinal Component child = (Component)it.next();\r\n\t\t\tchild.redraw(out);\r\n\t\t}\r\n\t\twh.write(\"<\/td>\");\r\n\t\t/*\r\n\t\t<td id=\"${self.uuid}\"${self.outerAttrs}${self.innerAttrs}>\r\n\t\t${self.imgTag}\r\n\t\t<c:out value=\"${self.label}\"/>\r\n\t\t<c:forEach var=\"child\" items=\"${self.children}\">\r\n\t\t${z:redraw(child, null)}\r\n\t\t<\/c:forEach><\/td>\r\n\t\t*/\r\n\t}","id":15139,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Listfooter self = (Listfooter)comp;\r\n\t\twh.write(\"<td id=\\\"\").write(self.getUuid()).write(\"\\\" \").write(self.getOuterAttrs()).write(self.getInnerAttrs()).writeln(\">\");\r\n\t\twh.write(self.getImgTag());\r\n\t\tnew Out(out, self.getLabel()).render();\r\n\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\r\n\t\t\tfinal Component child = (Component)it.next();\r\n\t\t\tchild.redraw(out);\r\n\t\t}\r\n\t\twh.write(\"<\/td>\");\r\n\t}","commit_id":"f8a80773826791bd9470f9a1e77a9d9a4c012001","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Listheader self = (Listheader)comp;\r\n\t\twh.write(\"<th id=\\\"\").write(self.getUuid()).write(\"\\\" z.type=\\\"Lhr\\\"\").write(self.getOuterAttrs()).write(self.getInnerAttrs()).writeln(\">\");\r\n\t\twh.write(self.getImgTag());\r\n\t\tnew Out(out).setValue(self.getLabel()).render();\r\n\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\r\n\t\t\tfinal Component child = (Component)it.next();\r\n\t\t\tchild.redraw(out);\r\n\t\t}\r\n\t\twh.write(\"<\/th>\");\r\n\t\t/*\r\n\t\t<th id=\"${self.uuid}\" z.type=\"Lhr\"${self.outerAttrs}${self.innerAttrs}>\r\n\t\t${self.imgTag}\r\n\t\t<c:out value=\"${self.label}\"/>\r\n\t\t<\/th>\r\n\t\t*/\r\n\t}","id":15140,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Listheader self = (Listheader)comp;\r\n\t\twh.write(\"<th id=\\\"\").write(self.getUuid()).write(\"\\\" z.type=\\\"Lhr\\\"\").write(self.getOuterAttrs()).write(self.getInnerAttrs()).writeln(\">\");\r\n\t\twh.write(self.getImgTag());\r\n\t\tnew Out(out, self.getLabel()).render();\r\n\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\r\n\t\t\tfinal Component child = (Component)it.next();\r\n\t\t\tchild.redraw(out);\r\n\t\t}\r\n\t\twh.write(\"<\/th>\");\r\n\t\t/*\r\n\t\t<th id=\"${self.uuid}\" z.type=\"Lhr\"${self.outerAttrs}${self.innerAttrs}>\r\n\t\t${self.imgTag}\r\n\t\t<c:out value=\"${self.label}\"/>\r\n\t\t<\/th>\r\n\t\t*/\r\n\t}","commit_id":"f8a80773826791bd9470f9a1e77a9d9a4c012001","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Listitem self = (Listitem)comp;\r\n\t\t\r\n\t\tif(self.getMold().equals(\"select\")){\r\n\t\t\twh.write(\"<option id=\\\"\").write(self.getUuid()).write(\"\\\"\").write(self.getOuterAttrs()).write(self.getInnerAttrs()).writeln(\">\");\r\n\t\t\tnew Out(out).setMaxlength(self.getMaxlength()).setValue(self.getLabel()).render();\r\n\t\t\twh.write(\"<\/option>\");\r\n\t\t}else{\r\n\t\t\twh.write(\"<tr id=\\\"\").write(self.getUuid()).write(\"\\\" z.type=\\\"Lit\\\"\").write(self.getOuterAttrs()).write(self.getInnerAttrs()).writeln(\">\");\r\n\t\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\r\n\t\t\t\tfinal Component child = (Component)it.next();\r\n\t\t\t\tchild.redraw(out);\r\n\t\t\t}\r\n\t\t\twh.write(\"<\/tr>\");\r\n\t\t}\r\n\t\t//${self.listbox.mold == 'select' ? '~./zul/html/listitem-select.dsp': '~./zul/html/listitem.dsp'}\r\n\t\t/*\r\n\t\t select:\r\n\t\t<option id=\"${self.uuid}\"${self.outerAttrs}${self.innerAttrs}><c:out value=\"${self.label}\" maxlength=\"${self.maxlength}\"/><\/option>\r\n\t\t default:\r\n\t\t <tr id=\"${self.uuid}\" z.type=\"Lit\"${self.outerAttrs}${self.innerAttrs}>\r\n\t\t\t<c:forEach var=\"child\" items=\"${self.children}\">\r\n\t\t\t${z:redraw(child, null)}\r\n\t\t\t<\/c:forEach>\r\n\t\t<\/tr>\r\n\t\t*/\r\n\t}","id":15141,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Listitem self = (Listitem)comp;\r\n\t\t\r\n\t\tif(self.getMold().equals(\"select\")){\r\n\t\t\twh.write(\"<option id=\\\"\").write(self.getUuid()).write(\"\\\"\").write(self.getOuterAttrs()).write(self.getInnerAttrs()).writeln(\">\");\r\n\t\t\tnew Out(out, self.getLabel()).setMaxlength(self.getMaxlength()).render();\r\n\t\t\twh.write(\"<\/option>\");\r\n\t\t}else{\r\n\t\t\twh.write(\"<tr id=\\\"\").write(self.getUuid()).write(\"\\\" z.type=\\\"Lit\\\"\").write(self.getOuterAttrs()).write(self.getInnerAttrs()).writeln(\">\");\r\n\t\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\r\n\t\t\t\tfinal Component child = (Component)it.next();\r\n\t\t\t\tchild.redraw(out);\r\n\t\t\t}\r\n\t\t\twh.write(\"<\/tr>\");\r\n\t\t}\r\n\t\t//${self.listbox.mold == 'select' ? '~./zul/html/listitem-select.dsp': '~./zul/html/listitem.dsp'}\r\n\t\t/*\r\n\t\t select:\r\n\t\t<option id=\"${self.uuid}\"${self.outerAttrs}${self.innerAttrs}><c:out value=\"${self.label}\" maxlength=\"${self.maxlength}\"/><\/option>\r\n\t\t default:\r\n\t\t <tr id=\"${self.uuid}\" z.type=\"Lit\"${self.outerAttrs}${self.innerAttrs}>\r\n\t\t\t<c:forEach var=\"child\" items=\"${self.children}\">\r\n\t\t\t${z:redraw(child, null)}\r\n\t\t\t<\/c:forEach>\r\n\t\t<\/tr>\r\n\t\t*/\r\n\t}","commit_id":"f8a80773826791bd9470f9a1e77a9d9a4c012001","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Menu self = (Menu)comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\tfinal Execution exec = Executions.getCurrent();\r\n\t\t\r\n\t\tif(self.isTopmost()){\r\n\t\t\twh.write(\"<td id=\\\"\").write(uuid).write(\"\\\" align=\\\"left\\\" z.type=\\\"zul.menu.Menu\\\"\");\r\n\t\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\">\");\r\n\t\t\twh.write(\"<a href=\\\"javascript:;\\\" id=\\\"\").write(uuid).write(\"!a\\\">\").write(self.getImgTag());\r\n\t\t\tnew Out(out).setValue(self.getLabel()).render();\r\n\t\t\twh.write(\"<\/a>\")\r\n\t\t\t\t.write(self.getMenupopup())\r\n\t\t\t\t.writeln(\"<\/td>\");\r\n\t\t}else{\r\n\t\t\twh.write(\"<tr id=\\\"\").write(uuid).write(\"\\\" z.type=\\\"zul.menu.Menu\\\"\");\r\n\t\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).writeln(\">\");\r\n\t\t\twh.write(\"<td><img src=\\\"\").write(exec.encodeURL(\"~./img/spacer.gif\")).writeln(\"\\\" width=\\\"11\\\"/><\/td>\");\r\n\t\t\twh.write(\"<td align=\\\"left\\\"><a href=\\\"javascript:;\\\" id=\\\"\").write(uuid).write(\"!a\\\">\").write(self.getImgTag());\r\n\r\n\t\t\tnew Out(out).setValue(self.getLabel()).render();\r\n\r\n\t\t\twh.write(\"<\/a>\")\r\n\t\t\t\t.write(self.getMenupopup())\r\n\t\t\t\t.writeln(\"<\/td>\")\r\n\t\t\t\t.write(\"<td><img src=\\\"\").write(exec.encodeURL(\"~./zul/img/menu/arrow.gif\")).writeln(\"\\\" width=\\\"9\\\"/><\/td>\")\r\n\t\t\t\t.write(\"<\/tr>\");\r\n\t\t}\r\n\r\n\t}","id":15142,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Menu self = (Menu)comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\tfinal Execution exec = Executions.getCurrent();\r\n\t\t\r\n\t\tif(self.isTopmost()){\r\n\t\t\twh.write(\"<td id=\\\"\").write(uuid).write(\"\\\" align=\\\"left\\\" z.type=\\\"zul.menu.Menu\\\"\");\r\n\t\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\">\");\r\n\t\t\twh.write(\"<a href=\\\"javascript:;\\\" id=\\\"\").write(uuid).write(\"!a\\\">\").write(self.getImgTag());\r\n\t\t\tnew Out(out, self.getLabel()).render();\r\n\t\t\twh.write(\"<\/a>\")\r\n\t\t\t\t.write(self.getMenupopup())\r\n\t\t\t\t.writeln(\"<\/td>\");\r\n\t\t}else{\r\n\t\t\twh.write(\"<tr id=\\\"\").write(uuid).write(\"\\\" z.type=\\\"zul.menu.Menu\\\"\");\r\n\t\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).writeln(\">\");\r\n\t\t\twh.write(\"<td><img src=\\\"\").write(exec.encodeURL(\"~./img/spacer.gif\")).writeln(\"\\\" width=\\\"11\\\"/><\/td>\");\r\n\t\t\twh.write(\"<td align=\\\"left\\\"><a href=\\\"javascript:;\\\" id=\\\"\").write(uuid).write(\"!a\\\">\").write(self.getImgTag());\r\n\r\n\t\t\tnew Out(out, self.getLabel()).render();\r\n\r\n\t\t\twh.write(\"<\/a>\")\r\n\t\t\t\t.write(self.getMenupopup())\r\n\t\t\t\t.writeln(\"<\/td>\")\r\n\t\t\t\t.write(\"<td><img src=\\\"\").write(exec.encodeURL(\"~./zul/img/menu/arrow.gif\")).writeln(\"\\\" width=\\\"9\\\"/><\/td>\")\r\n\t\t\t\t.write(\"<\/tr>\");\r\n\t\t}\r\n\r\n\t}","commit_id":"f8a80773826791bd9470f9a1e77a9d9a4c012001","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Menuitem self = (Menuitem)comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\tfinal Execution exec = Executions.getCurrent();\r\n\t\tif(self.isTopmost()){\r\n\t\t\twh.write(\"<td id=\\\"\").write(uuid).write(\"\\\" align=\\\"left\\\" z.type=\\\"Menuit\\\"\");\r\n\t\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\">\");\r\n\t\t\twh.write(\"<a href=\\\"\");\r\n\t\t\tif(Strings.isBlank(self.getHref()))\r\n\t\t\t\twh.write(\"javascript:;\");\r\n\t\t\telse\r\n\t\t\t\twh.write(exec.encodeURL(self.getHref()));\r\n\t\t\twh.write(\"\\\"\").writeAttr(\"target\",self.getTarget());\r\n\t\t\twh.write(\" id=\\\"\").write(uuid).write(\"!a\\\">\").write(self.getImgTag());\r\n\t\t\tnew Out(out).setValue(self.getLabel()).render();\r\n\t\t\twh.write(\"<\/a>\");\r\n\t\t\twh.writeln(\"<\/td>\");\r\n\t\t}else{\r\n\t\t\twh.write(\"<tr id=\\\"\").write(uuid).write(\"\\\" z.type=\\\"Menuit\\\"\");\r\n\t\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).writeln(\">\");\r\n\t\t\twh.write(\"<td><img src=\\\"\");\r\n\t\t\tif(self.isChecked())\r\n\t\t\t\twh.write(exec.encodeURL(\"~./zul/img/menu/checked.gif\"));\r\n\t\t\telse\r\n\t\t\t\twh.write(exec.encodeURL(\"~./img/spacer.gif\"));\r\n\t\t\twh.writeln(\"\\\" width=\\\"11\\\"/><\/td>\");\r\n\t\t\twh.write(\"<td align=\\\"left\\\"><a href=\\\"\");\r\n\t\t\tif(Strings.isBlank(self.getHref()))\r\n\t\t\t\twh.write(\"javascript:;\");\r\n\t\t\telse\r\n\t\t\t\twh.write(exec.encodeURL(self.getHref()));\r\n\t\t\twh.write(\"\\\"\").writeAttr(\"target\",self.getTarget());\r\n\t\t\twh.write(\" id=\\\"\").write(uuid).write(\"!a\\\">\").write(self.getImgTag());\r\n\t\t\tnew Out(out).setValue(self.getLabel()).render();\r\n\t\t\twh.write(\"<\/a>\");\r\n\t\t\twh.writeln(\"<\/td>\");\r\n\t\t\twh.write(\"<td><img src=\\\"\").write(exec.encodeURL(\"~./img/spacer.gif\")).writeln(\"\\\" width=\\\"9\\\"/><\/td>\");\r\n\t\t\twh.write(\"<\/tr>\");\r\n\t\t}\r\n\t\t/*\r\n\t\t<c:choose>\r\n\t\t<c:when test=\"${self.topmost}\">\r\n\t\t <td id=\"${self.uuid}\" align=\"left\" z.type=\"Menuit\"${self.outerAttrs}${self.innerAttrs}><a href=\"${empty self.href?'javascript:;':c:encodeURL(self.href)}\"${c:attr('target',self.target)} id=\"${self.uuid}!a\">${self.imgTag}<c:out value=\"${self.label}\"/><\/a><\/td>\r\n\t\t<\/c:when>\r\n\t\t<c:otherwise>\r\n\t\t <tr id=\"${self.uuid}\" z.type=\"Menuit\"${self.outerAttrs}${self.innerAttrs}>\r\n\t\t <td><img src=\"${c:encodeURL(self.checked?'~./zul/img/menu/checked.gif':'~./img/spacer.gif')}\" width=\"11\"/><\/td>\r\n\t\t <td align=\"left\"><a href=\"${empty self.href?'javascript:;':c:encodeURL(self.href)}\"${c:attr('target',self.target)} id=\"${self.uuid}!a\">${self.imgTag}<c:out value=\"${self.label}\"/><\/a><\/td>\r\n\t\t <td><img src=\"${c:encodeURL('~./img/spacer.gif')}\" width=\"9\"/><\/td>\r\n\t\t <\/tr>\r\n\t\t<\/c:otherwise>\r\n\t\t<\/c:choose>\r\n\t\t*/\r\n\t}","id":15143,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Menuitem self = (Menuitem)comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\tfinal Execution exec = Executions.getCurrent();\r\n\t\tif(self.isTopmost()){\r\n\t\t\twh.write(\"<td id=\\\"\").write(uuid).write(\"\\\" align=\\\"left\\\" z.type=\\\"Menuit\\\"\");\r\n\t\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\">\");\r\n\t\t\twh.write(\"<a href=\\\"\");\r\n\t\t\tif(Strings.isBlank(self.getHref()))\r\n\t\t\t\twh.write(\"javascript:;\");\r\n\t\t\telse\r\n\t\t\t\twh.write(exec.encodeURL(self.getHref()));\r\n\t\t\twh.write(\"\\\"\").writeAttr(\"target\",self.getTarget());\r\n\t\t\twh.write(\" id=\\\"\").write(uuid).write(\"!a\\\">\").write(self.getImgTag());\r\n\t\t\tnew Out(out, self.getLabel()).render();\r\n\t\t\twh.write(\"<\/a>\");\r\n\t\t\twh.writeln(\"<\/td>\");\r\n\t\t}else{\r\n\t\t\twh.write(\"<tr id=\\\"\").write(uuid).write(\"\\\" z.type=\\\"Menuit\\\"\");\r\n\t\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).writeln(\">\");\r\n\t\t\twh.write(\"<td><img src=\\\"\");\r\n\t\t\tif(self.isChecked())\r\n\t\t\t\twh.write(exec.encodeURL(\"~./zul/img/menu/checked.gif\"));\r\n\t\t\telse\r\n\t\t\t\twh.write(exec.encodeURL(\"~./img/spacer.gif\"));\r\n\t\t\twh.writeln(\"\\\" width=\\\"11\\\"/><\/td>\");\r\n\t\t\twh.write(\"<td align=\\\"left\\\"><a href=\\\"\");\r\n\t\t\tif(Strings.isBlank(self.getHref()))\r\n\t\t\t\twh.write(\"javascript:;\");\r\n\t\t\telse\r\n\t\t\t\twh.write(exec.encodeURL(self.getHref()));\r\n\t\t\twh.write(\"\\\"\").writeAttr(\"target\",self.getTarget());\r\n\t\t\twh.write(\" id=\\\"\").write(uuid).write(\"!a\\\">\").write(self.getImgTag());\r\n\t\t\tnew Out(out, self.getLabel()).render();\r\n\t\t\twh.write(\"<\/a>\");\r\n\t\t\twh.writeln(\"<\/td>\");\r\n\t\t\twh.write(\"<td><img src=\\\"\").write(exec.encodeURL(\"~./img/spacer.gif\")).writeln(\"\\\" width=\\\"9\\\"/><\/td>\");\r\n\t\t\twh.write(\"<\/tr>\");\r\n\t\t}\r\n\t\t/*\r\n\t\t<c:choose>\r\n\t\t<c:when test=\"${self.topmost}\">\r\n\t\t <td id=\"${self.uuid}\" align=\"left\" z.type=\"Menuit\"${self.outerAttrs}${self.innerAttrs}><a href=\"${empty self.href?'javascript:;':c:encodeURL(self.href)}\"${c:attr('target',self.target)} id=\"${self.uuid}!a\">${self.imgTag}<c:out value=\"${self.label}\"/><\/a><\/td>\r\n\t\t<\/c:when>\r\n\t\t<c:otherwise>\r\n\t\t <tr id=\"${self.uuid}\" z.type=\"Menuit\"${self.outerAttrs}${self.innerAttrs}>\r\n\t\t <td><img src=\"${c:encodeURL(self.checked?'~./zul/img/menu/checked.gif':'~./img/spacer.gif')}\" width=\"11\"/><\/td>\r\n\t\t <td align=\"left\"><a href=\"${empty self.href?'javascript:;':c:encodeURL(self.href)}\"${c:attr('target',self.target)} id=\"${self.uuid}!a\">${self.imgTag}<c:out value=\"${self.label}\"/><\/a><\/td>\r\n\t\t <td><img src=\"${c:encodeURL('~./img/spacer.gif')}\" width=\"9\"/><\/td>\r\n\t\t <\/tr>\r\n\t\t<\/c:otherwise>\r\n\t\t<\/c:choose>\r\n\t\t*/\r\n\t}","commit_id":"f8a80773826791bd9470f9a1e77a9d9a4c012001","url":"https://github.com/zkoss/zk"},{"original_method":"public Out(Writer writer) {\n\t\t_writer = writer;\n\t}","id":15144,"modified_method":"public Out(Writer writer, String value) {\n\t\t_writer = writer;\n\t\t_value = value;\n\t}","commit_id":"f8a80773826791bd9470f9a1e77a9d9a4c012001","url":"https://github.com/zkoss/zk"},{"original_method":"/**\r\n<c:set var=\"self\" value=\"${requestScope.arg.self}\"/>\r\n<table id=\"${self.uuid}\"${self.outerAttrs}${self.innerAttrs} z.accd=\"true\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n${z:redraw(self.tabpanels, null)}\r\n<\/table>\r\n\t */\r\n\r\n\tpublic void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Tabbox self = (Tabbox) comp;\t\t\r\n\t\twh.write(\"<table id=\\\"\" + self.getUuid() + \"\\\"\" + self.getOuterAttrs() + self.getInnerAttrs() + \" z.accd=\\\"true\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\");\t\r\n\t\tself.getTabpanels().redraw(out);\t\t\r\n\t\twh.write(\"<\/table>\");\r\n\t}","id":15145,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Tabbox self = (Tabbox) comp;\r\n\t\twh.write(\"<table id=\\\"\").write(self.getUuid()).write(\"\\\"\")\r\n\t\t\t.write(self.getOuterAttrs()).write(self.getInnerAttrs())\r\n\t\t\t.writeln(\" z.accd=\\\"true\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\")\r\n\t\t\t.write(self.getTabpanels())\r\n\t\t\t.write(\"<\/table>\");\r\n\t}","commit_id":"f8a80773826791bd9470f9a1e77a9d9a4c012001","url":"https://github.com/zkoss/zk"},{"original_method":"/**\r\n<c:set var=\\\"self\\\" value=\\\"${requestScope.arg.self}\\\"/>\r\n<c:set var=\\\"tab\\\" value=\\\"${self.linkedTab}\\\"/>\r\n<c:set var=\\\"suffix\\\" value=\\\"-sel\\\" if=\\\"${tab.selected}\\\"/>\r\n<c:set var=\\\"suffix\\\" value=\\\"-uns\\\" unless=\\\"${tab.selected}\\\"/>\r\n<tr id=\\\"${self.uuid}\\\"><%-- no exteriorAttribute here because tab.js controls it diff --%>\r\n<td>\r\n<table id=\\\"${tab.uuid}\\\"${tab.outerAttrs}${tab.innerAttrs} z.sel=\\\"${tab.selected}\\\" z.type=\\\"zul.tab.Tab\\\" z.box=\\\"${tab.tabbox.uuid}\\\" z.panel=\\\"${self.uuid}\\\" width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\r\n<c:if test=\\\"${!empty self.tabbox.panelSpacing and self.index!=0}\\\"><tr height=\\\"${self.tabbox.panelSpacing}\\\"><td><\/td><\/tr>\r\n<\/c:if>\r\n<tr>\r\n\t<td class=\\\"${c:cat('tabaccd-3d-tl',suffix)}\\\"><\/td>\r\n\t<td colspan=\\\"${tab.closable?4:3}\\\" class=\\\"${c:cat('tabaccd-3d-tm',suffix)}\\\"><\/td>\r\n\t<td class=\\\"${c:cat('tabaccd-3d-tr',suffix)}\\\"><\/td>\r\n<\/tr>\r\n<tr height=\\\"${empty tab.height ? '22':tab.height}\\\">\r\n\t<td class=\\\"${c:cat('tabaccd-3d-ml',suffix)}\\\"><\/td>\r\n\t<td width=\\\"3\\\" class=\\\"${c:cat('tabaccd-3d-mm',suffix)}\\\"><\/td>\r\n\t<td align=\\\"left\\\" class=\\\"${c:cat('tabaccd-3d-mm',suffix)}\\\"><a href=\\\"javascript:;\\\" id=\\\"${tab.uuid}!a\\\">${tab.imgTag}<c:out value=\\\"${tab.label}\\\"/><\/a><\/td>\r\n<c:if test=\\\"${tab.closable}\\\">\r\n\t<td width=\\\"11\\\" align=\\\"right\\\" class=\\\"${c:cat('tabaccd-3d-mm',suffix)}\\\"><img id=\\\"${tab.uuid}!close\\\" src=\\\"${c:encodeURL('~./zul/img/close-off.gif')}\\\"/><\/td>\r\n<\/c:if>\r\n\t<td width=\\\"3\\\" class=\\\"${c:cat('tabaccd-3d-mm',suffix)}\\\"><\/td>\r\n\t<td class=\\\"${c:cat('tabaccd-3d-mr',suffix)}\\\"><\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td colspan=\\\"${tab.closable?6:5}\\\" class=\\\"tabaccd-3d-b\\\"><\/td>\r\n<\/tr>\r\n<\/table>\r\n\t<div id=\\\"${self.uuid}!real\\\"${self.outerAttrs}${self.innerAttrs}><div id=\\\"${self.uuid}!cave\\\">\r\n<c:forEach var=\\\"child\\\" items=\\\"${self.children}\\\">\r\n\t${z:redraw(child, null)}\r\n<\/c:forEach>\r\n\t<\/div><\/div>\r\n<\/td>\r\n<\/tr>\r\n\t */\r\n\r\n\tpublic void render(Component comp, Writer out) throws IOException {\t\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Execution exec = Executions.getCurrent();\r\n\t\tfinal Tabpanel self = (Tabpanel) comp;\r\n\t\tfinal Tab tab = self.getLinkedTab();\r\n\t\tfinal String suffix = (self.isSelected()) ? \"-sel\" : \"-uns\";\r\n\t\tfinal int colspan1 = (tab.isClosable()) ? 4:3;\r\n\t\tfinal int colspan2 = (tab.isClosable()) ? 6:5;\r\n\t\tfinal String height = Strings.isBlank(self.getHeight()) ? \"22\" : self.getHeight(); \t\t\r\n\t\t\r\n\t\twh.write(\"<tr id=\\\"\" + self.getUuid() +\"\\\">\"); //no exteriorAttribute here because tab.js controls it diff\r\n\t\twh.write(\"<td>\");\r\n\t\twh.write(\"<table id=\\\"\" + tab.getUuid()+\"\\\"\"+ tab.getOuterAttrs() + tab.getInnerAttrs() \r\n\t\t\t\t+ \" z.sel=\\\"\"+tab.isSelected()+\"\\\" z.type=\\\"zul.tab.Tab\\\" z.box=\\\"\" \r\n\t\t\t\t+ tab.getTabbox().getUuid()+ \"\\\" z.panel=\\\"\" + self.getUuid() \r\n\t\t\t\t+\"\\\" width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\");\t\t\r\n\t\tif(!Strings.isBlank(self.getTabbox().getPanelSpacing()) && self.getIndex() != 0)\r\n\t\t\twh.write(\"<tr height=\\\"\"+ self.getTabbox().getPanelSpacing()+ \"\\\"><td><\/td><\/tr>\");\r\n\t\t\r\n\t\twh.write(\"<tr>\");\r\n\t\t\twh.write(\"<td class=\\\"\").write(\"tabaccd-3d-tl\").write(suffix).write(\"\\\"><\/td>\");\t\t\t\r\n\t\t\twh.write(\"<td colspan=\\\"\" + colspan1 + \"\\\" class=\\\"\").write(\"tabaccd-3d-tm\").write(suffix).write(\"\\\"><\/td>\");\r\n\t\t\twh.write(\"<td class=\\\"\").write(\"tabaccd-3d-tr\").write(suffix).write(\"\\\"><\/td>\");\t\t\t\r\n\t\twh.write(\"<\/tr>\");\t\r\n\t    \r\n\t\twh.write(\"<tr height=\\\"\" + height + \"\\\">\");\t\t\r\n\t\t\twh.write(\"<td class=\\\"\").write(\"tabaccd-3d-ml\").write(suffix).write(\"\\\"><\/td>\");\r\n\t\t\twh.write(\"<td width=\\\"3\\\" class=\\\"\").write(\"tabaccd-3d-mm\").write(suffix).write(\"\\\"><\/td>\");\r\n\t\t\twh.write(\"<td align=\\\"left\\\" class=\\\"\").write(\"tabaccd-3d-mm\").write(suffix).write(\"\\\"><a href=\\\"javascript:;\\\"\")\r\n\t\t\t.write(\" id=\\\"\").write(tab.getUuid()).write(\"!a\\\">\");\t\t\t\r\n\t\t\tif (!Strings.isBlank(tab.getImgTag()))\r\n\t\t\t\twh.write(tab.getImgTag());\r\n\t\t\tif (!Strings.isBlank(tab.getLabel()))\r\n\t\t\t\tnew Out(out).setValue(tab.getLabel()).render();\r\n\t\t\twh.write( \"<\/a><\/td>\");\t\t\t\r\n\r\n\t\tif(tab.isClosable()){\r\n\t\t\twh.write(\"<td width=\\\"11\\\" align=\\\"right\\\" class=\\\"\").write(\"tabaccd-3d-mm\").write(suffix) \r\n\t\t\t.write(\"\\\"><img id=\\\"\").write(self.getUuid()).write(\"!close\\\" src=\\\"\")\r\n\t\t\t.write(exec.encodeURL(\"~./zul/img/close-off.gif\")).write(\"\\\"/><\/td>\");\r\n\t\t}\r\n\t\t\twh.write(\"<td width=\\\"3\\\" class=\\\"\").write(\"tabaccd-3d-mm\").write(suffix).write(\"\\\"><\/td>\");\t\r\n\t\t\twh.write(\"<td class=\\\"\").write(\"tabaccd-3d-mr\").write(suffix).write(\"\\\"><\/td>\");\r\n\t\twh.write(\"<\/tr>\");\t\r\n\t\twh.write(\"<tr>\");\r\n\t\t\twh.write(\"<td colspan=\\\"\" + colspan2 + \"\\\" class=\\\"tabaccd-3d-b\\\"><\/td>\");\t\t\t\r\n\t\twh.write(\"<\/tr>\");\r\n\t\twh.write(\"<\/table>\");\r\n\t\t\twh.write(\"<div id=\\\"\" + self.getUuid() +\"!real\\\"\"+ self.getOuterAttrs()+ self.getInnerAttrs() + \"><div id=\\\"\" + self.getUuid() +\"!cave\\\">\");\r\n\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\r\n\t\t\tfinal Component child = (Component) it.next();\r\n\t\t\tchild.redraw(out);\r\n\t\t}\r\n\t\twh.write(\"<\/div><\/div>\");\r\n\t\twh.write(\"<\/td>\");\r\n\t\twh.write(\"<\/tr>\");\r\n\r\n\t}","id":15146,"modified_method":"/**\r\n<c:set var=\\\"self\\\" value=\\\"${requestScope.arg.self}\\\"/>\r\n<c:set var=\\\"tab\\\" value=\\\"${self.linkedTab}\\\"/>\r\n<c:set var=\\\"suffix\\\" value=\\\"-sel\\\" if=\\\"${tab.selected}\\\"/>\r\n<c:set var=\\\"suffix\\\" value=\\\"-uns\\\" unless=\\\"${tab.selected}\\\"/>\r\n<tr id=\\\"${self.uuid}\\\"><%-- no exteriorAttribute here because tab.js controls it diff --%>\r\n<td>\r\n<table id=\\\"${tab.uuid}\\\"${tab.outerAttrs}${tab.innerAttrs} z.sel=\\\"${tab.selected}\\\" z.type=\\\"zul.tab.Tab\\\" z.box=\\\"${tab.tabbox.uuid}\\\" z.panel=\\\"${self.uuid}\\\" width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\r\n<c:if test=\\\"${!empty self.tabbox.panelSpacing and self.index!=0}\\\"><tr height=\\\"${self.tabbox.panelSpacing}\\\"><td><\/td><\/tr>\r\n<\/c:if>\r\n<tr>\r\n\t<td class=\\\"${c:cat('tabaccd-3d-tl',suffix)}\\\"><\/td>\r\n\t<td colspan=\\\"${tab.closable?4:3}\\\" class=\\\"${c:cat('tabaccd-3d-tm',suffix)}\\\"><\/td>\r\n\t<td class=\\\"${c:cat('tabaccd-3d-tr',suffix)}\\\"><\/td>\r\n<\/tr>\r\n<tr height=\\\"${empty tab.height ? '22':tab.height}\\\">\r\n\t<td class=\\\"${c:cat('tabaccd-3d-ml',suffix)}\\\"><\/td>\r\n\t<td width=\\\"3\\\" class=\\\"${c:cat('tabaccd-3d-mm',suffix)}\\\"><\/td>\r\n\t<td align=\\\"left\\\" class=\\\"${c:cat('tabaccd-3d-mm',suffix)}\\\"><a href=\\\"javascript:;\\\" id=\\\"${tab.uuid}!a\\\">${tab.imgTag}<c:out value=\\\"${tab.label}\\\"/><\/a><\/td>\r\n<c:if test=\\\"${tab.closable}\\\">\r\n\t<td width=\\\"11\\\" align=\\\"right\\\" class=\\\"${c:cat('tabaccd-3d-mm',suffix)}\\\"><img id=\\\"${tab.uuid}!close\\\" src=\\\"${c:encodeURL('~./zul/img/close-off.gif')}\\\"/><\/td>\r\n<\/c:if>\r\n\t<td width=\\\"3\\\" class=\\\"${c:cat('tabaccd-3d-mm',suffix)}\\\"><\/td>\r\n\t<td class=\\\"${c:cat('tabaccd-3d-mr',suffix)}\\\"><\/td>\r\n<\/tr>\r\n<tr>\r\n\t<td colspan=\\\"${tab.closable?6:5}\\\" class=\\\"tabaccd-3d-b\\\"><\/td>\r\n<\/tr>\r\n<\/table>\r\n\t<div id=\\\"${self.uuid}!real\\\"${self.outerAttrs}${self.innerAttrs}><div id=\\\"${self.uuid}!cave\\\">\r\n<c:forEach var=\\\"child\\\" items=\\\"${self.children}\\\">\r\n\t${z:redraw(child, null)}\r\n<\/c:forEach>\r\n\t<\/div><\/div>\r\n<\/td>\r\n<\/tr>\r\n\t */\r\n\r\n\tpublic void render(Component comp, Writer out) throws IOException {\t\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Execution exec = Executions.getCurrent();\r\n\t\tfinal Tabpanel self = (Tabpanel) comp;\r\n\t\tfinal Tab tab = self.getLinkedTab();\r\n\t\tfinal String suffix = (self.isSelected()) ? \"-sel\" : \"-uns\";\r\n\t\tfinal int colspan1 = (tab.isClosable()) ? 4:3;\r\n\t\tfinal int colspan2 = (tab.isClosable()) ? 6:5;\r\n\t\tfinal String height = Strings.isBlank(self.getHeight()) ? \"22\" : self.getHeight(); \t\t\r\n\t\t\r\n\t\twh.write(\"<tr id=\\\"\" + self.getUuid() +\"\\\">\"); //no exteriorAttribute here because tab.js controls it diff\r\n\t\twh.write(\"<td>\");\r\n\t\twh.write(\"<table id=\\\"\" + tab.getUuid()+\"\\\"\"+ tab.getOuterAttrs() + tab.getInnerAttrs() \r\n\t\t\t\t+ \" z.sel=\\\"\"+tab.isSelected()+\"\\\" z.type=\\\"zul.tab.Tab\\\" z.box=\\\"\" \r\n\t\t\t\t+ tab.getTabbox().getUuid()+ \"\\\" z.panel=\\\"\" + self.getUuid() \r\n\t\t\t\t+\"\\\" width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\");\t\t\r\n\t\tif(!Strings.isBlank(self.getTabbox().getPanelSpacing()) && self.getIndex() != 0)\r\n\t\t\twh.write(\"<tr height=\\\"\"+ self.getTabbox().getPanelSpacing()+ \"\\\"><td><\/td><\/tr>\");\r\n\t\t\r\n\t\twh.write(\"<tr>\");\r\n\t\t\twh.write(\"<td class=\\\"\").write(\"tabaccd-3d-tl\").write(suffix).write(\"\\\"><\/td>\");\t\t\t\r\n\t\t\twh.write(\"<td colspan=\\\"\" + colspan1 + \"\\\" class=\\\"\").write(\"tabaccd-3d-tm\").write(suffix).write(\"\\\"><\/td>\");\r\n\t\t\twh.write(\"<td class=\\\"\").write(\"tabaccd-3d-tr\").write(suffix).write(\"\\\"><\/td>\");\t\t\t\r\n\t\twh.write(\"<\/tr>\");\t\r\n\t    \r\n\t\twh.write(\"<tr height=\\\"\" + height + \"\\\">\");\t\t\r\n\t\t\twh.write(\"<td class=\\\"\").write(\"tabaccd-3d-ml\").write(suffix).write(\"\\\"><\/td>\");\r\n\t\t\twh.write(\"<td width=\\\"3\\\" class=\\\"\").write(\"tabaccd-3d-mm\").write(suffix).write(\"\\\"><\/td>\");\r\n\t\t\twh.write(\"<td align=\\\"left\\\" class=\\\"\").write(\"tabaccd-3d-mm\").write(suffix).write(\"\\\"><a href=\\\"javascript:;\\\"\")\r\n\t\t\t.write(\" id=\\\"\").write(tab.getUuid()).write(\"!a\\\">\");\t\t\t\r\n\t\t\twh.write(tab.getImgTag());\r\n\t\t\tnew Out(out, tab.getLabel()).render();\r\n\t\t\twh.write( \"<\/a><\/td>\");\t\t\t\r\n\r\n\t\tif(tab.isClosable()){\r\n\t\t\twh.write(\"<td width=\\\"11\\\" align=\\\"right\\\" class=\\\"\").write(\"tabaccd-3d-mm\").write(suffix) \r\n\t\t\t.write(\"\\\"><img id=\\\"\").write(self.getUuid()).write(\"!close\\\" src=\\\"\")\r\n\t\t\t.write(exec.encodeURL(\"~./zul/img/close-off.gif\")).write(\"\\\"/><\/td>\");\r\n\t\t}\r\n\t\t\twh.write(\"<td width=\\\"3\\\" class=\\\"\").write(\"tabaccd-3d-mm\").write(suffix).write(\"\\\"><\/td>\");\t\r\n\t\t\twh.write(\"<td class=\\\"\").write(\"tabaccd-3d-mr\").write(suffix).write(\"\\\"><\/td>\");\r\n\t\twh.write(\"<\/tr>\");\t\r\n\t\twh.write(\"<tr>\");\r\n\t\t\twh.write(\"<td colspan=\\\"\" + colspan2 + \"\\\" class=\\\"tabaccd-3d-b\\\"><\/td>\");\t\t\t\r\n\t\twh.write(\"<\/tr>\");\r\n\t\twh.write(\"<\/table>\");\r\n\t\t\twh.write(\"<div id=\\\"\" + self.getUuid() +\"!real\\\"\"+ self.getOuterAttrs()+ self.getInnerAttrs() + \"><div id=\\\"\" + self.getUuid() +\"!cave\\\">\");\r\n\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\r\n\t\t\tfinal Component child = (Component) it.next();\r\n\t\t\tchild.redraw(out);\r\n\t\t}\r\n\t\twh.write(\"<\/div><\/div>\");\r\n\t\twh.write(\"<\/td>\");\r\n\t\twh.write(\"<\/tr>\");\r\n\r\n\t}","commit_id":"f8a80773826791bd9470f9a1e77a9d9a4c012001","url":"https://github.com/zkoss/zk"},{"original_method":"/**\r\n\t * tabpanel.dsp\r\n\t * <tr id=\\\"${self.uuid}\"${self.outerAttrs}>\r\n\t * <td id=\"${self.uuid}!real\" class=\"tabpanel-hr\"${self.innerAttrs}>\r\n\t * <c:forEach var=\"child\" items=\"${self.children}\"> ${z:redraw(child, null)}\r\n\t * <\/c:forEach> <\/td>\r\n\t * <\/tr>\r\n\t * \r\n\t * vtabpanel.dsp\r\n\t * <div id=\"${self.uuid}\"${self.outerAttrs}${self.innerAttrs}>\r\n\t   <c:forEach var=\"child\" items=\"${self.children}\">\r\n\t   ${z:redraw(child, null)}\r\n\t\t<\/c:forEach>\r\n\t   <\/div>\r\n\t * \r\n\t */\r\n\tpublic void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Tabpanel self = (Tabpanel) comp;\r\n\t\t\r\n\t\tif(self.getTabbox().getOrient().equals(\"vertical\")){\r\n\t\t\twh.write(\"<div id=\\\"\" + self.getUuid() + \"\\\"\" + self.getOuterAttrs() + self.getInnerAttrs() + \">\");\t\t\r\n\t\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\r\n\t\t\t\tfinal Component child = (Component) it.next();\r\n\t\t\t\tchild.redraw(out);\r\n\t\t\t}\t\r\n\t\t\twh.write(\"<\/div>\");\t\t\r\n\t\t}\r\n\t\telse{\r\n\t\t\twh.write(\"<tr id=\\\"\" + self.getUuid() + \"\\\"\" + self.getOuterAttrs() + \">\");\r\n\t\t\twh.write(\"<td id=\\\"\" + self.getUuid() + \"!real\\\" class=\\\"tabpanel-hr\\\"\"\r\n\t\t\t\t+ self.getInnerAttrs() + \">\");\r\n\t\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\r\n\t\t\t\tfinal Component child = (Component) it.next();\r\n\t\t\t\tchild.redraw(out);\r\n\t\t\t}\t\t\r\n\t\t\twh.write(\"<\/td>\");\r\n\t\t\twh.write(\"<\/tr>\");\r\n\t\t}\r\n\t}","id":15147,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Tabpanel self = (Tabpanel) comp;\r\n\t\t\r\n\t\tif(self.getTabbox().getOrient().equals(\"vertical\")){\r\n\t\t\twh.write(\"<div id=\\\"\" + self.getUuid() + \"\\\"\" + self.getOuterAttrs() + self.getInnerAttrs() + \">\");\t\t\r\n\t\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\r\n\t\t\t\tfinal Component child = (Component) it.next();\r\n\t\t\t\tchild.redraw(out);\r\n\t\t\t}\t\r\n\t\t\twh.write(\"<\/div>\");\t\t\r\n\t\t}\r\n\t\telse{\r\n\t\t\twh.write(\"<tr id=\\\"\" + self.getUuid() + \"\\\"\" + self.getOuterAttrs() + \">\");\r\n\t\t\twh.write(\"<td id=\\\"\" + self.getUuid() + \"!real\\\" class=\\\"tabpanel-hr\\\"\"\r\n\t\t\t\t+ self.getInnerAttrs() + \">\");\r\n\t\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\r\n\t\t\t\tfinal Component child = (Component) it.next();\r\n\t\t\t\tchild.redraw(out);\r\n\t\t\t}\t\t\r\n\t\t\twh.write(\"<\/td>\");\r\n\t\t\twh.write(\"<\/tr>\");\r\n\t\t}\r\n\t}","commit_id":"f8a80773826791bd9470f9a1e77a9d9a4c012001","url":"https://github.com/zkoss/zk"},{"original_method":"/**\r\n\t * tabpanel.dsp\r\n<c:set var=\"self\" value=\"${requestScope.arg.self}\"/>\r\n<tbody id=\"${self.uuid}\"${self.outerAttrs}${self.innerAttrs}>\r\n\t<c:forEach var=\"child\" items=\"${self.children}\">\r\n\t${z:redraw(child, null)}\r\n\t<\/c:forEach>\r\n<\/tbody>\r\n\r\nvtabpanel.dsp\r\n<td id=\"${self.uuid}\"${self.outerAttrs}${self.innerAttrs}>\r\n\t<c:forEach var=\"child\" items=\"${self.children}\">\r\n\t${z:redraw(child, null)}\r\n\t<\/c:forEach>\r\n<\/td>\r\n\t */\r\n\tpublic void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Tabpanels self = (Tabpanels) comp;\r\n\t\t\r\n\t\tif(((Tabbox)self.getParent()).getOrient().equals(\"vertical\")){\r\n\t\t\twh.write(\"<td id=\\\"\" + self.getUuid() + \"\\\"\" + self.getOuterAttrs() + self.getInnerAttrs()+ \">\");\t\t\r\n\t\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\r\n\t\t\t\tfinal Component child = (Component) it.next();\r\n\t\t\t\tchild.redraw(out);\r\n\t\t\t}\t\r\n\t\t\twh.write(\"<\/td>\");\r\n\t\t}\r\n\t\telse{\r\n\t\t\twh.write(\"<tbody id=\\\"\" + self.getUuid() + \"\\\"\" + self.getOuterAttrs() + self.getInnerAttrs()+ \">\");\t\t\r\n\t\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\r\n\t\t\t\tfinal Component child = (Component) it.next();\r\n\t\t\t\tchild.redraw(out);\r\n\t\t\t}\t\r\n\t\t\twh.write(\"<\/tbody>\");\r\n\t\t}\r\n\t}","id":15148,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Tabpanels self = (Tabpanels) comp;\r\n\r\n\t\tif(((Tabbox)self.getParent()).getOrient().equals(\"vertical\")){\r\n\t\t\twh.write(\"<td id=\\\"\").write(self.getUuid()).write(\"\\\"\")\r\n\t\t\t\t.write(self.getOuterAttrs()).write(self.getInnerAttrs()).writeln(\">\");\r\n\r\n\t\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\r\n\t\t\t\t((Component) it.next()).redraw(out);\r\n\t\t\t}\t\r\n\r\n\t\t\twh.writeln(\"<\/td>\");\r\n\t\t} else {\r\n\t\t\twh.write(\"<tbody id=\\\"\").write(self.getUuid()).write(\"\\\"\")\r\n\t\t\t\t.write(self.getOuterAttrs()).write(self.getInnerAttrs()).writeln(\">\");\t\t\r\n\r\n\t\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\r\n\t\t\t\t((Component) it.next()).redraw(out);\r\n\t\t\t}\t\r\n\r\n\t\t\twh.writeln(\"<\/tbody>\");\r\n\t\t}\r\n\t}","commit_id":"f8a80773826791bd9470f9a1e77a9d9a4c012001","url":"https://github.com/zkoss/zk"},{"original_method":"/**\r\n<c:set var=\"self\" value=\"${requestScope.arg.self}\"/>\r\n<a id=\"${self.uuid}\" z.type=\"zul.widget.Tbtn\" ${self.outerAttrs}${self.innerAttrs}>\r\n<c:choose>\r\n<c:when test=\"${self.dir == 'reverse'}\">\r\n\t<c:out value=\"${self.label}\"/>\r\n\t<c:if test=\"${self.imageAssigned and self.orient == 'vertical'}\">\r\n\t  <br/>\r\n\t<\/c:if>\r\n\t${self.imgTag}\r\n<\/c:when>\r\n<c:otherwise>\r\n\t${self.imgTag}\r\n\t<c:if test=\"${self.imageAssigned and self.orient == 'vertical'}\">\r\n\t  <br/>\r\n\t<\/c:if>\r\n\t<c:out value=\"${self.label}\"/>\r\n<\/c:otherwise>\r\n<\/c:choose><\/a>\r\n\t */\r\n\tpublic void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Toolbarbutton self = (Toolbarbutton) comp;\r\n\t\t\r\n\t\twh.write(\"<a id=\\\"\" + self.getUuid() + \"\\\" z.type=\\\"zul.widget.Tbtn\\\"\" + self.getOuterAttrs() + self.getInnerAttrs() + \">\");\r\n\t\tif (self.getDir().equals(\"reverse\")){\r\n\t\t\tnew Out(out).setValue(self.getLabel()).render();\r\n\t\t\tif (self.isImageAssigned() && self.getOrient().equals(\"vertical\")){\r\n\t\t\t\twh.write(\"<br/>\");\r\n\t\t\t}\r\n\t\t\twh.write(self.getImgTag());\r\n\t\t}\r\n\t\telse{\r\n\t\t\twh.write(self.getImgTag());\r\n\t\t\tif (self.isImageAssigned() && self.getOrient().equals(\"vertical\")){\r\n\t\t\t\twh.write(\"<br/>\");\t\t\t\t\r\n\t\t\t}\r\n\t\t\tnew Out(out).setValue(self.getLabel()).render();\r\n\t\t}\t\t\r\n\t\twh.write(\"<\/a>\");\r\n\r\n\t}","id":15149,"modified_method":"/**\r\n<c:set var=\"self\" value=\"${requestScope.arg.self}\"/>\r\n<a id=\"${self.uuid}\" z.type=\"zul.widget.Tbtn\" ${self.outerAttrs}${self.innerAttrs}>\r\n<c:choose>\r\n<c:when test=\"${self.dir == 'reverse'}\">\r\n\t<c:out value=\"${self.label}\"/>\r\n\t<c:if test=\"${self.imageAssigned and self.orient == 'vertical'}\">\r\n\t  <br/>\r\n\t<\/c:if>\r\n\t${self.imgTag}\r\n<\/c:when>\r\n<c:otherwise>\r\n\t${self.imgTag}\r\n\t<c:if test=\"${self.imageAssigned and self.orient == 'vertical'}\">\r\n\t  <br/>\r\n\t<\/c:if>\r\n\t<c:out value=\"${self.label}\"/>\r\n<\/c:otherwise>\r\n<\/c:choose><\/a>\r\n\t */\r\n\tpublic void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Toolbarbutton self = (Toolbarbutton) comp;\r\n\t\t\r\n\t\twh.write(\"<a id=\\\"\" + self.getUuid() + \"\\\" z.type=\\\"zul.widget.Tbtn\\\"\" + self.getOuterAttrs() + self.getInnerAttrs() + \">\");\r\n\t\tif (self.getDir().equals(\"reverse\")){\r\n\t\t\tnew Out(out, self.getLabel()).render();\r\n\t\t\tif (self.isImageAssigned() && self.getOrient().equals(\"vertical\")){\r\n\t\t\t\twh.write(\"<br/>\");\r\n\t\t\t}\r\n\t\t\twh.write(self.getImgTag());\r\n\t\t}\r\n\t\telse{\r\n\t\t\twh.write(self.getImgTag());\r\n\t\t\tif (self.isImageAssigned() && self.getOrient().equals(\"vertical\")){\r\n\t\t\t\twh.write(\"<br/>\");\t\t\t\t\r\n\t\t\t}\r\n\t\t\tnew Out(out, self.getLabel()).render();\r\n\t\t}\t\t\r\n\t\twh.write(\"<\/a>\");\r\n\r\n\t}","commit_id":"f8a80773826791bd9470f9a1e77a9d9a4c012001","url":"https://github.com/zkoss/zk"},{"original_method":"/**\r\n<c:set var=\"self\" value=\"${requestScope.arg.self}\"/>\r\n<td id=\"${self.uuid}\"${self.outerAttrs}${self.innerAttrs}>${self.columnHtmlPrefix}${self.imgTag}\r\n<c:out value=\"${self.label}\" maxlength=\"${self.maxlength}\"/>\r\n<c:forEach var=\"child\" items=\"${self.children}\">\r\n${z:redraw(child, null)}\r\n<\/c:forEach>\r\n${self.columnHtmlPostfix}\r\n<\/td>\r\n\r\n */\r\n\tpublic void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Treecell self = (Treecell) comp;\r\n\t\t\r\n\t\twh.write(\"<td id=\\\"\" + self.getUuid() + \"\\\"\" + self.getOuterAttrs() + self.getInnerAttrs() +\">\");\r\n\t\t\r\n\t\tif(!Strings.isBlank(self.getColumnHtmlPrefix()))\r\n\t\t\twh.write(self.getColumnHtmlPrefix());\r\n\t\tif (!Strings.isBlank(self.getImgTag()))\r\n\t\t\twh.write(self.getImgTag());\r\n\t\tif (!Strings.isBlank(self.getLabel()))\r\n\t\t\tnew Out(out).setValue(self.getLabel()).render();\r\n\t\tnew Out(out).setMaxlength(self.getMaxlength()).render();\r\n\t\t\r\n\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\r\n\t\t\tfinal Component child = (Component) it.next();\r\n\t\t\tchild.redraw(out);\r\n\t\t}\t\r\n\t\tif(!Strings.isBlank(self.getColumnHtmlPostfix()))\r\n\t\t\twh.write(self.getColumnHtmlPostfix());\r\n\t\t\r\n\t\twh.write(\"<\/td>\");\r\n\r\n\t}","id":15150,"modified_method":"/**\r\n<c:set var=\"self\" value=\"${requestScope.arg.self}\"/>\r\n<td id=\"${self.uuid}\"${self.outerAttrs}${self.innerAttrs}>${self.columnHtmlPrefix}${self.imgTag}\r\n<c:out value=\"${self.label}\" maxlength=\"${self.maxlength}\"/>\r\n<c:forEach var=\"child\" items=\"${self.children}\">\r\n${z:redraw(child, null)}\r\n<\/c:forEach>\r\n${self.columnHtmlPostfix}\r\n<\/td>\r\n\r\n */\r\n\tpublic void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Treecell self = (Treecell) comp;\r\n\t\t\r\n\t\twh.write(\"<td id=\\\"\" + self.getUuid() + \"\\\"\" + self.getOuterAttrs() + self.getInnerAttrs() +\">\");\r\n\t\t\r\n\t\twh.write(self.getColumnHtmlPrefix());\r\n\t\twh.write(self.getImgTag());\r\n\t\tnew Out(out, self.getLabel()).setMaxlength(self.getMaxlength()).render();\r\n\t\t\r\n\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\r\n\t\t\tfinal Component child = (Component) it.next();\r\n\t\t\tchild.redraw(out);\r\n\t\t}\t\r\n\t\twh.write(self.getColumnHtmlPostfix());\r\n\t\t\r\n\t\twh.write(\"<\/td>\");\r\n\r\n\t}","commit_id":"f8a80773826791bd9470f9a1e77a9d9a4c012001","url":"https://github.com/zkoss/zk"},{"original_method":"/**\r\n<c:set var=\"self\" value=\"${requestScope.arg.self}\"/>\r\n<th id=\"${self.uuid}\" z.type=\"Tcol\"${self.outerAttrs}${self.innerAttrs}>${self.imgTag}<c:out value=\"${self.label}\"/>\r\n<\/th>\r\n\r\n */\r\n\tpublic void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Treecol self = (Treecol) comp;\r\n\t\t\r\n\t\twh.write(\"<th id=\\\"\" + self.getUuid() + \"\\\" z.type=\\\"Tcol\\\"\" \r\n\t\t\t\t+ self.getOuterAttrs() + self.getInnerAttrs());\r\n\t\tif (!Strings.isBlank(self.getImgTag()))\r\n\t\t\twh.write(self.getImgTag());\r\n\t\twh.write(\">\");\r\n\t\tif (!Strings.isBlank(self.getLabel()))\r\n\t\t\tnew Out(out).setValue(self.getLabel()).render();\t\t\r\n\t\twh.write(\"<\/th>\");\r\n\t\t\r\n\r\n\t}","id":15151,"modified_method":"/**\r\n<c:set var=\"self\" value=\"${requestScope.arg.self}\"/>\r\n<th id=\"${self.uuid}\" z.type=\"Tcol\"${self.outerAttrs}${self.innerAttrs}>${self.imgTag}<c:out value=\"${self.label}\"/>\r\n<\/th>\r\n\r\n */\r\n\tpublic void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Treecol self = (Treecol) comp;\r\n\t\t\r\n\t\twh.write(\"<th id=\\\"\" + self.getUuid() + \"\\\" z.type=\\\"Tcol\\\"\" \r\n\t\t\t\t+ self.getOuterAttrs() + self.getInnerAttrs());\r\n\t\twh.write(self.getImgTag());\r\n\t\twh.write(\">\");\r\n\t\tnew Out(out, self.getLabel()).render();\t\t\r\n\t\twh.write(\"<\/th>\");\r\n\t\t\r\n\r\n\t}","commit_id":"f8a80773826791bd9470f9a1e77a9d9a4c012001","url":"https://github.com/zkoss/zk"},{"original_method":"/**\r\n<c:set var=\"self\" value=\"${requestScope.arg.self}\"/>\r\n<td id=\"${self.uuid}\"${self.outerAttrs}${self.innerAttrs}>${self.imgTag}<c:out value=\"${self.label}\"/>\r\n<c:forEach var=\"child\" items=\"${self.children}\">\r\n\t${z:redraw(child, null)}\r\n<\/c:forEach><\/td>\r\n */\r\n\tpublic void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Treefooter self = (Treefooter) comp;\r\n\t\t\r\n\t\twh.write(\"<td id=\\\"\" + self.getUuid() + \"\\\"\" + self.getOuterAttrs() + self.getInnerAttrs() );\r\n\t\tif (!Strings.isBlank(self.getImgTag()))\r\n\t\t\twh.write(self.getImgTag());\r\n\t\tif (!Strings.isBlank(self.getLabel()))\r\n\t\t\tnew Out(out).setValue(self.getLabel()).render();\t\t\r\n\t\twh.write(\">\");\r\n\t\t\r\n\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\r\n\t\t\tfinal Component child = (Component) it.next();\r\n\t\t\tchild.redraw(out);\r\n\t\t}\t\r\n\t\twh.write(\"<\/td>\");\r\n\t\t\r\n\r\n\t}","id":15152,"modified_method":"/**\r\n<c:set var=\"self\" value=\"${requestScope.arg.self}\"/>\r\n<td id=\"${self.uuid}\"${self.outerAttrs}${self.innerAttrs}>${self.imgTag}<c:out value=\"${self.label}\"/>\r\n<c:forEach var=\"child\" items=\"${self.children}\">\r\n\t${z:redraw(child, null)}\r\n<\/c:forEach><\/td>\r\n */\r\n\tpublic void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Treefooter self = (Treefooter) comp;\r\n\t\t\r\n\t\twh.write(\"<td id=\\\"\" + self.getUuid() + \"\\\"\" + self.getOuterAttrs() + self.getInnerAttrs() );\r\n\t\twh.write(self.getImgTag());\r\n\t\tnew Out(out, self.getLabel()).render();\t\t\r\n\t\twh.write(\">\");\r\n\t\t\r\n\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\r\n\t\t\tfinal Component child = (Component) it.next();\r\n\t\t\tchild.redraw(out);\r\n\t\t}\t\r\n\t\twh.write(\"<\/td>\");\r\n\t\t\r\n\r\n\t}","commit_id":"f8a80773826791bd9470f9a1e77a9d9a4c012001","url":"https://github.com/zkoss/zk"},{"original_method":"/**\n\t * @throws Exception\n\t */\n\tpublic void testBookmarkableRequest() throws Exception\n\t{\n\t\ttester.setupRequestAndResponse();\n\n\t\tWebRequestCycle cycle = tester.createRequestCycle();\n\n\t\tString url = cycle.urlFor(\n\t\t\t\tnew BookmarkablePageRequestTarget(BookmarkableHomePageLinksPage.class, null))\n\t\t\t\t.toString();\n\n\t\ttester.setupRequestAndResponse();\n\t\ttester.getServletRequest().setURL(\n\t\t\t\t\"/WicketTester$DummyWebApplication/WicketTester$DummyWebApplication/\" + url);\n\n\t\ttester.processRequestCycle();\n\n\t\tassertEquals(tester.getLastRenderedPage().getClass(), BookmarkableHomePageLinksPage.class);\n\n\t}","id":15153,"modified_method":"/**\n\t * @throws Exception\n\t */\n\tpublic void testBookmarkableRequest() throws Exception\n\t{\n\t\ttester.startPage(BookmarkableHomePageLinksPage.class);\n\n\t\tassertEquals(tester.getLastRenderedPage().getClass(), BookmarkableHomePageLinksPage.class);\n\n\t}","commit_id":"4cbd84fbbd591697b0c75b739213f90e2aa3dedd","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * @throws Exception\n\t */\n\tpublic void testBookmarkableRequestWithInterceptWithParams() throws Exception\n\t{\n\t\ttester.setupRequestAndResponse();\n\n\t\tWebRequestCycle cycle = tester.createRequestCycle();\n\n\t\tPageParameters pp = new PageParameters();\n\t\tpp.put(\"test\", \"test\");\n\t\tString url = cycle.urlFor(\n\t\t\t\tnew BookmarkablePageRequestTarget(BookmarkableThrowsInterceptPage.class, pp))\n\t\t\t\t.toString();\n\t\tString url2 = cycle.urlFor(\n\t\t\t\tnew BookmarkablePageRequestTarget(BookmarkableContinueToPage.class, null))\n\t\t\t\t.toString();\n\n\t\ttester.setupRequestAndResponse();\n\t\ttester.getServletRequest().setURL(\n\t\t\t\t\"/WicketTester$DummyWebApplication/WicketTester$DummyWebApplication/\" + url);\n\t\ttester.processRequestCycle();\n\n\t\tassertEquals(tester.getLastRenderedPage().getClass(), BookmarkableSetSecurityPage.class);\n\n\t\ttester.setupRequestAndResponse();\n\t\ttester.getServletRequest().setURL(\n\t\t\t\t\"/WicketTester$DummyWebApplication/WicketTester$DummyWebApplication/\" + url2);\n\t\ttester.processRequestCycle();\n\t\tassertEquals(tester.getLastRenderedPage().getClass(), BookmarkableThrowsInterceptPage.class);\n\n\t}","id":15154,"modified_method":"/**\n\t * @throws Exception\n\t */\n\tpublic void testBookmarkableRequestWithInterceptWithParams() throws Exception\n\t{\n\n\t\tPageParameters pp = new PageParameters();\n\t\tpp.put(\"test\", \"test\");\n\n\t\ttester.startPage(BookmarkableThrowsInterceptPage.class, pp);\n\n\t\tassertEquals(tester.getLastRenderedPage().getClass(), BookmarkableSetSecurityPage.class);\n\n\t\ttester.startPage(BookmarkableContinueToPage.class);\n\t\tassertEquals(tester.getLastRenderedPage().getClass(), BookmarkableThrowsInterceptPage.class);\n\n\t}","commit_id":"4cbd84fbbd591697b0c75b739213f90e2aa3dedd","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * @throws Exception\n\t */\n\tpublic void testBookmarkableRequestWithIntercept() throws Exception\n\t{\n\t\ttester.setupRequestAndResponse();\n\n\t\tWebRequestCycle cycle = tester.createRequestCycle();\n\n\t\tString url = cycle.urlFor(\n\t\t\t\tnew BookmarkablePageRequestTarget(BookmarkableThrowsInterceptPage.class, null))\n\t\t\t\t.toString();\n\t\tString url2 = cycle.urlFor(\n\t\t\t\tnew BookmarkablePageRequestTarget(BookmarkableContinueToPage.class, null))\n\t\t\t\t.toString();\n\n\t\ttester.setupRequestAndResponse();\n\t\ttester.getServletRequest().setURL(\n\t\t\t\t\"/WicketTester$DummyWebApplication/WicketTester$DummyWebApplication/\" + url);\n\t\ttester.processRequestCycle();\n\n\t\tassertEquals(tester.getLastRenderedPage().getClass(), BookmarkableSetSecurityPage.class);\n\n\t\ttester.setupRequestAndResponse();\n\t\ttester.getServletRequest().setURL(\n\t\t\t\t\"/WicketTester$DummyWebApplication/WicketTester$DummyWebApplication/\" + url2);\n\t\ttester.processRequestCycle();\n\t\tassertEquals(tester.getLastRenderedPage().getClass(), BookmarkableThrowsInterceptPage.class);\n\n\t}","id":15155,"modified_method":"/**\n\t * @throws Exception\n\t */\n\tpublic void testBookmarkableRequestWithIntercept() throws Exception\n\t{\n\n\t\ttester.startPage(BookmarkableThrowsInterceptPage.class);\n\n\t\tassertEquals(tester.getLastRenderedPage().getClass(), BookmarkableSetSecurityPage.class);\n\n\t\ttester.startPage(BookmarkableContinueToPage.class);\n\t\tassertEquals(tester.getLastRenderedPage().getClass(), BookmarkableThrowsInterceptPage.class);\n\n\t}","commit_id":"4cbd84fbbd591697b0c75b739213f90e2aa3dedd","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Initialize a new WebRequestCycle and all its dependent objects\n\t * \n\t * @param pageClass\n\t * @param params\n\t */\n\tpublic void processRequestCycle(final Class pageClass, PageParameters params)\n\t{\n\t\tsetupRequestAndResponse();\n\t\tfinal WebRequestCycle cycle = createRequestCycle();\n\t\ttry\n\t\t{\n\t\t\tBaseWicketTester.callOnBeginRequest(cycle);\n\t\t\tcycle.request(new BookmarkablePageRequestTarget(pageClass, params));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tcycle.getResponse().close();\n\t\t}\n\t\tpostProcessRequestCycle(cycle);\n\t}","id":15156,"modified_method":"/**\n\t * Initialize a new WebRequestCycle and all its dependent objects\n\t * \n\t * @param pageClass\n\t * @param params\n\t */\n\tpublic void processRequestCycle(final Class pageClass, PageParameters params)\n\t{\n\t\tsetupRequestAndResponse();\n\t\tfinal WebRequestCycle cycle = createRequestCycle();\n\t\ttry\n\t\t{\n\t\t\tBaseWicketTester.callOnBeginRequest(cycle);\n\t\t\tBookmarkablePageRequestTarget requestTarget = new BookmarkablePageRequestTarget(\n\t\t\t\tpageClass, params);\n\t\t\tif (application.getHomePage() != null)\n\t\t\t{\n\t\t\t\tString url = cycle.urlFor(requestTarget).toString();\n\t\t\t\tString path = application.getClass().getName();\n\t\t\t\tpath = path.substring(path.lastIndexOf('.') + 1);\n\t\t\t\tpath = \"/\" + path + \"/\" + path + \"/\";\n\t\t\t\tgetServletRequest().setURL(path + url);\n\t\t\t}\n\t\t\telse\n\t\t\t\tlog.warn(\"The application does not have a HomePage, this might cause problems or unexpected behavior\");\n\t\t\tcycle.request(requestTarget);\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tcycle.getResponse().close();\n\t\t}\n\t\tpostProcessRequestCycle(cycle);\n\t}","commit_id":"4cbd84fbbd591697b0c75b739213f90e2aa3dedd","url":"https://github.com/apache/wicket"},{"original_method":"/** Fixe setting response page in constructor. */\n\tpublic void testSetResponsePage()\n\t{\n\t\tWicketTester tester = new WicketTester(Page1.class);\n\t\ttester.setupRequestAndResponse();\n\t\ttester.getServletRequest()\n\t\t\t\t.setURL(\"?wicket:bookmarkablePage=:\" + Page1.class.getName() + \"\");\n\t\ttester.processRequestCycle();\n\t\ttester.assertRenderedPage(Page3.class);\n\t\ttester.destroy();\n\t}","id":15157,"modified_method":"/** Fixe setting response page in constructor. */\n\tpublic void testSetResponsePage()\n\t{\n\t\tWicketTester tester = new WicketTester(Page1.class);\n\t\ttester.setupRequestAndResponse();\n// tester.getServletRequest()\n// .setURL(\"?wicket:bookmarkablePage=:\" + Page1.class.getName() + \"\");\n// tester.processRequestCycle();\n\t\ttester.startPage(Page1.class);\n\t\ttester.assertRenderedPage(Page3.class);\n\t\ttester.destroy();\n\t}","commit_id":"4cbd84fbbd591697b0c75b739213f90e2aa3dedd","url":"https://github.com/apache/wicket"},{"original_method":"public void run(CassandraClient client) throws IOException\n    {\n        List<CounterColumn> columns = new ArrayList<CounterColumn>();\n        List<CounterSuperColumn> superColumns = new ArrayList<CounterSuperColumn>();\n\n        // format used for keys\n        String format = \"%0\" + session.getTotalKeysLength() + \"d\";\n\n        for (int i = 0; i < session.getColumnsPerKey(); i++)\n        {\n            String columnName = (\"C\" + Integer.toString(i));\n\n            columns.add(new CounterColumn(ByteBufferUtil.bytes(columnName), 1L));\n        }\n\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n        {\n            // supers = [SuperColumn('S' + str(j), columns) for j in xrange(supers_per_key)]\n            for (int i = 0; i < session.getSuperColumns(); i++)\n            {\n                String superColumnName = \"S\" + Integer.toString(i);\n                superColumns.add(new CounterSuperColumn(ByteBuffer.wrap(superColumnName.getBytes()), columns));\n            }\n        }\n\n        String rawKey = String.format(format, index);\n        Map<ByteBuffer, Map<String, List<Mutation>>> record = new HashMap<ByteBuffer, Map<String, List<Mutation>>>();\n\n        record.put(ByteBufferUtil.bytes(rawKey), session.getColumnFamilyType() == ColumnFamilyType.Super\n                                                                                ? getSuperColumnsMutationMap(superColumns)\n                                                                                : getColumnsMutationMap(columns));\n\n        long start = System.currentTimeMillis();\n\n        boolean success = false;\n        String exceptionMessage = null;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                client.batch_mutate(record, session.getConsistencyLevel());\n                success = true;\n            }\n            catch (Exception e)\n            {\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error incrementing key %s %s%n\",\n                                index,\n                                session.getRetryTimes(),\n                                rawKey,\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        session.latency.getAndAdd(System.currentTimeMillis() - start);\n    }","id":15158,"modified_method":"public void run(CassandraClient client) throws IOException\n    {\n        List<CounterColumn> columns = new ArrayList<CounterColumn>();\n        List<CounterSuperColumn> superColumns = new ArrayList<CounterSuperColumn>();\n\n        // format used for keys\n        String format = \"%0\" + session.getTotalKeysLength() + \"d\";\n\n        for (int i = 0; i < session.getColumnsPerKey(); i++)\n        {\n            String columnName = (\"C\" + Integer.toString(i));\n\n            columns.add(new CounterColumn(ByteBufferUtil.bytes(columnName), 1L));\n        }\n\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n        {\n            // supers = [SuperColumn('S' + str(j), columns) for j in xrange(supers_per_key)]\n            for (int i = 0; i < session.getSuperColumns(); i++)\n            {\n                String superColumnName = \"S\" + Integer.toString(i);\n                superColumns.add(new CounterSuperColumn(ByteBuffer.wrap(superColumnName.getBytes()), columns));\n            }\n        }\n\n        String rawKey = String.format(format, index);\n        Map<ByteBuffer, Map<String, List<Mutation>>> record = new HashMap<ByteBuffer, Map<String, List<Mutation>>>();\n\n        record.put(ByteBufferUtil.bytes(rawKey), session.getColumnFamilyType() == ColumnFamilyType.Super\n                                                                                ? getSuperColumnsMutationMap(superColumns)\n                                                                                : getColumnsMutationMap(columns));\n\n        TimerContext context = session.latency.time();\n\n        boolean success = false;\n        String exceptionMessage = null;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                client.batch_mutate(record, session.getConsistencyLevel());\n                success = true;\n            }\n            catch (Exception e)\n            {\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error incrementing key %s %s%n\",\n                                index,\n                                session.getRetryTimes(),\n                                rawKey,\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        context.stop();\n    }","commit_id":"b475602be82230ad3d20da8d0b56b99f47b9d192","url":"https://github.com/apache/cassandra"},{"original_method":"private void runCounterGetter(SlicePredicate predicate, Cassandra.Client client) throws IOException\n    {\n        ColumnParent parent = new ColumnParent(\"Counter1\");\n\n        byte[] key = generateKey();\n        ByteBuffer keyBuffer = ByteBuffer.wrap(key);\n\n        long start = System.currentTimeMillis();\n\n        boolean success = false;\n        String exceptionMessage = null;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                List<ColumnOrSuperColumn> counters;\n                counters = client.get_slice(keyBuffer, parent, predicate, session.getConsistencyLevel());\n                success = (counters.size() != 0);\n            }\n            catch (Exception e)\n            {\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error reading counter key %s %s%n\",\n                                index,\n                                session.getRetryTimes(),\n                                new String(key),\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        session.latency.getAndAdd(System.currentTimeMillis() - start);\n    }","id":15159,"modified_method":"private void runCounterGetter(SlicePredicate predicate, Cassandra.Client client) throws IOException\n    {\n        ColumnParent parent = new ColumnParent(\"Counter1\");\n\n        byte[] key = generateKey();\n        ByteBuffer keyBuffer = ByteBuffer.wrap(key);\n\n        TimerContext context = session.latency.time();\n\n        boolean success = false;\n        String exceptionMessage = null;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                List<ColumnOrSuperColumn> counters;\n                counters = client.get_slice(keyBuffer, parent, predicate, session.getConsistencyLevel());\n                success = (counters.size() != 0);\n            }\n            catch (Exception e)\n            {\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error reading counter key %s %s%n\",\n                                index,\n                                session.getRetryTimes(),\n                                new String(key),\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        context.stop();\n    }","commit_id":"b475602be82230ad3d20da8d0b56b99f47b9d192","url":"https://github.com/apache/cassandra"},{"original_method":"private void runSuperCounterGetter(SlicePredicate predicate, Cassandra.Client client) throws IOException\n    {\n        byte[] rawKey = generateKey();\n        ByteBuffer key = ByteBuffer.wrap(rawKey);\n\n        for (int j = 0; j < session.getSuperColumns(); j++)\n        {\n            String superColumn = 'S' + Integer.toString(j);\n            ColumnParent parent = new ColumnParent(\"SuperCounter1\").setSuper_column(superColumn.getBytes());\n\n            long start = System.currentTimeMillis();\n\n            boolean success = false;\n            String exceptionMessage = null;\n\n            for (int t = 0; t < session.getRetryTimes(); t++)\n            {\n                if (success)\n                    break;\n\n                try\n                {\n                    List<ColumnOrSuperColumn> counters;\n                    counters = client.get_slice(key, parent, predicate, session.getConsistencyLevel());\n                    success = (counters.size() != 0);\n                }\n                catch (Exception e)\n                {\n                    exceptionMessage = getExceptionMessage(e);\n                    success = false;\n                }\n            }\n\n            if (!success)\n            {\n                error(String.format(\"Operation [%d] retried %d times - error reading counter key %s %s%n\",\n                                    index,\n                                    session.getRetryTimes(),\n                                    new String(rawKey),\n                                    (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n            }\n\n            session.operations.getAndIncrement();\n            session.keys.getAndIncrement();\n            session.latency.getAndAdd(System.currentTimeMillis() - start);\n        }\n    }","id":15160,"modified_method":"private void runSuperCounterGetter(SlicePredicate predicate, Cassandra.Client client) throws IOException\n    {\n        byte[] rawKey = generateKey();\n        ByteBuffer key = ByteBuffer.wrap(rawKey);\n\n        for (int j = 0; j < session.getSuperColumns(); j++)\n        {\n            String superColumn = 'S' + Integer.toString(j);\n            ColumnParent parent = new ColumnParent(\"SuperCounter1\").setSuper_column(superColumn.getBytes());\n\n            TimerContext context = session.latency.time();\n\n            boolean success = false;\n            String exceptionMessage = null;\n\n            for (int t = 0; t < session.getRetryTimes(); t++)\n            {\n                if (success)\n                    break;\n\n                try\n                {\n                    List<ColumnOrSuperColumn> counters;\n                    counters = client.get_slice(key, parent, predicate, session.getConsistencyLevel());\n                    success = (counters.size() != 0);\n                }\n                catch (Exception e)\n                {\n                    exceptionMessage = getExceptionMessage(e);\n                    success = false;\n                }\n            }\n\n            if (!success)\n            {\n                error(String.format(\"Operation [%d] retried %d times - error reading counter key %s %s%n\",\n                                    index,\n                                    session.getRetryTimes(),\n                                    new String(rawKey),\n                                    (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n            }\n\n            session.operations.getAndIncrement();\n            session.keys.getAndIncrement();\n            context.stop();\n        }\n    }","commit_id":"b475602be82230ad3d20da8d0b56b99f47b9d192","url":"https://github.com/apache/cassandra"},{"original_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n            throw new RuntimeException(\"Super columns are not implemented for CQL\");\n\n        if (cqlQuery == null)\n        {\n            String counterCF = session.cqlVersion.startsWith(\"2\") ? \"Counter1\" : \"Counter3\";\n\n            StringBuilder query = new StringBuilder(\"UPDATE \").append(wrapInQuotesIfRequired(counterCF));\n\n            if (session.cqlVersion.startsWith(\"2\"))\n                query.append(\" USING CONSISTENCY \").append(session.getConsistencyLevel());\n\n            query.append(\" SET \");\n\n            for (int i = 0; i < session.getColumnsPerKey(); i++)\n            {\n                if (i > 0)\n                    query.append(\",\");\n\n                query.append('C').append(i).append(\"=C\").append(i).append(\"+1\");\n            }\n            query.append(\" WHERE KEY=?\");\n            cqlQuery = query.toString();\n        }\n\n        String key = String.format(\"%0\" + session.getTotalKeysLength() + \"d\", index);\n        String formattedQuery = null;\n\n        long start = System.currentTimeMillis();\n\n        boolean success = false;\n        String exceptionMessage = null;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                if (session.usePreparedStatements())\n                {\n                    Integer stmntId = getPreparedStatement(client, cqlQuery);\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        client.execute_prepared_cql3_query(stmntId, Collections.singletonList(ByteBufferUtil.bytes(getUnQuotedCqlBlob(key))), session.getConsistencyLevel());\n                    else\n                        client.execute_prepared_cql_query(stmntId, Collections.singletonList(ByteBufferUtil.bytes(getUnQuotedCqlBlob(key))));\n                }\n                else\n                {\n                    if (formattedQuery == null)\n                        formattedQuery = formatCqlQuery(cqlQuery, Collections.singletonList(getUnQuotedCqlBlob(key)));\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        client.execute_cql3_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE, session.getConsistencyLevel());\n                    else\n                        client.execute_cql_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE);\n                }\n\n                success = true;\n            }\n            catch (Exception e)\n            {\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error incrementing key %s %s%n\",\n                                index,\n                                session.getRetryTimes(),\n                                key,\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        session.latency.getAndAdd(System.currentTimeMillis() - start);\n    }","id":15161,"modified_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n            throw new RuntimeException(\"Super columns are not implemented for CQL\");\n\n        if (cqlQuery == null)\n        {\n            String counterCF = session.cqlVersion.startsWith(\"2\") ? \"Counter1\" : \"Counter3\";\n\n            StringBuilder query = new StringBuilder(\"UPDATE \").append(wrapInQuotesIfRequired(counterCF));\n\n            if (session.cqlVersion.startsWith(\"2\"))\n                query.append(\" USING CONSISTENCY \").append(session.getConsistencyLevel());\n\n            query.append(\" SET \");\n\n            for (int i = 0; i < session.getColumnsPerKey(); i++)\n            {\n                if (i > 0)\n                    query.append(\",\");\n\n                query.append('C').append(i).append(\"=C\").append(i).append(\"+1\");\n            }\n            query.append(\" WHERE KEY=?\");\n            cqlQuery = query.toString();\n        }\n\n        String key = String.format(\"%0\" + session.getTotalKeysLength() + \"d\", index);\n        String formattedQuery = null;\n\n        TimerContext context = session.latency.time();\n\n        boolean success = false;\n        String exceptionMessage = null;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                if (session.usePreparedStatements())\n                {\n                    Integer stmntId = getPreparedStatement(client, cqlQuery);\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        client.execute_prepared_cql3_query(stmntId, Collections.singletonList(ByteBufferUtil.bytes(getUnQuotedCqlBlob(key))), session.getConsistencyLevel());\n                    else\n                        client.execute_prepared_cql_query(stmntId, Collections.singletonList(ByteBufferUtil.bytes(getUnQuotedCqlBlob(key))));\n                }\n                else\n                {\n                    if (formattedQuery == null)\n                        formattedQuery = formatCqlQuery(cqlQuery, Collections.singletonList(getUnQuotedCqlBlob(key)));\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        client.execute_cql3_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE, session.getConsistencyLevel());\n                    else\n                        client.execute_cql_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE);\n                }\n\n                success = true;\n            }\n            catch (Exception e)\n            {\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error incrementing key %s %s%n\",\n                                index,\n                                session.getRetryTimes(),\n                                key,\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        context.stop();\n    }","commit_id":"b475602be82230ad3d20da8d0b56b99f47b9d192","url":"https://github.com/apache/cassandra"},{"original_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n            throw new RuntimeException(\"Super columns are not implemented for CQL\");\n\n        if (cqlQuery == null)\n        {\n            StringBuilder query = new StringBuilder(\"SELECT \");\n\n            if (session.cqlVersion.startsWith(\"2\"))\n                query.append(\"FIRST \").append(session.getColumnsPerKey()).append(\" ''..''\");\n            else\n                query.append(\"*\");\n\n            String counterCF = session.cqlVersion.startsWith(\"2\") ? \"Counter1\" : \"Counter3\";\n\n            query.append(\" FROM \").append(wrapInQuotesIfRequired(counterCF));\n\n            if (session.cqlVersion.startsWith(\"2\"))\n                query.append(\" USING CONSISTENCY \").append(session.getConsistencyLevel().toString());\n\n            cqlQuery = query.append(\" WHERE KEY=?\").toString();\n        }\n\n        byte[] key = generateKey();\n        String formattedQuery = null;\n\n        long start = System.currentTimeMillis();\n\n        boolean success = false;\n        String exceptionMessage = null;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                CqlResult result = null;\n\n                if (session.usePreparedStatements())\n                {\n                    Integer stmntId = getPreparedStatement(client, cqlQuery);\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        result = client.execute_prepared_cql3_query(stmntId, Collections.singletonList(ByteBufferUtil.bytes(getUnQuotedCqlBlob(key))), session.getConsistencyLevel());\n                    else\n                        result = client.execute_prepared_cql_query(stmntId, Collections.singletonList(ByteBufferUtil.bytes(getUnQuotedCqlBlob(key))));\n                }\n                else\n                {\n                    if (formattedQuery == null)\n                        formattedQuery = formatCqlQuery(cqlQuery, Collections.singletonList(getUnQuotedCqlBlob(key)));\n\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        result = client.execute_cql3_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE, session.getConsistencyLevel());\n                    else\n                        result = client.execute_cql_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE);\n                }\n\n                assert result.type.equals(CqlResultType.ROWS) : \"expected ROWS result type\";\n                assert result.rows.size() == 0 : \"expected exactly one row\";\n                success = (result.rows.get(0).columns.size() != 0);\n            }\n            catch (Exception e)\n            {\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error reading counter key %s %s%n\",\n                                index,\n                                session.getRetryTimes(),\n                                new String(key),\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        session.latency.getAndAdd(System.currentTimeMillis() - start);\n    }","id":15162,"modified_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n            throw new RuntimeException(\"Super columns are not implemented for CQL\");\n\n        if (cqlQuery == null)\n        {\n            StringBuilder query = new StringBuilder(\"SELECT \");\n\n            if (session.cqlVersion.startsWith(\"2\"))\n                query.append(\"FIRST \").append(session.getColumnsPerKey()).append(\" ''..''\");\n            else\n                query.append(\"*\");\n\n            String counterCF = session.cqlVersion.startsWith(\"2\") ? \"Counter1\" : \"Counter3\";\n\n            query.append(\" FROM \").append(wrapInQuotesIfRequired(counterCF));\n\n            if (session.cqlVersion.startsWith(\"2\"))\n                query.append(\" USING CONSISTENCY \").append(session.getConsistencyLevel().toString());\n\n            cqlQuery = query.append(\" WHERE KEY=?\").toString();\n        }\n\n        byte[] key = generateKey();\n        String formattedQuery = null;\n\n        TimerContext context = session.latency.time();\n\n        boolean success = false;\n        String exceptionMessage = null;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                CqlResult result = null;\n\n                if (session.usePreparedStatements())\n                {\n                    Integer stmntId = getPreparedStatement(client, cqlQuery);\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        result = client.execute_prepared_cql3_query(stmntId, Collections.singletonList(ByteBufferUtil.bytes(getUnQuotedCqlBlob(key))), session.getConsistencyLevel());\n                    else\n                        result = client.execute_prepared_cql_query(stmntId, Collections.singletonList(ByteBufferUtil.bytes(getUnQuotedCqlBlob(key))));\n                }\n                else\n                {\n                    if (formattedQuery == null)\n                        formattedQuery = formatCqlQuery(cqlQuery, Collections.singletonList(getUnQuotedCqlBlob(key)));\n\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        result = client.execute_cql3_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE, session.getConsistencyLevel());\n                    else\n                        result = client.execute_cql_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE);\n                }\n\n                assert result.type.equals(CqlResultType.ROWS) : \"expected ROWS result type\";\n                assert result.rows.size() == 0 : \"expected exactly one row\";\n                success = (result.rows.get(0).columns.size() != 0);\n            }\n            catch (Exception e)\n            {\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error reading counter key %s %s%n\",\n                                index,\n                                session.getRetryTimes(),\n                                new String(key),\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        context.stop();\n    }","commit_id":"b475602be82230ad3d20da8d0b56b99f47b9d192","url":"https://github.com/apache/cassandra"},{"original_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n            throw new RuntimeException(\"Super columns are not implemented for CQL\");\n\n        if (values == null)\n            values = generateValues();\n\n        if (cqlQuery == null)\n        {\n            StringBuilder query = new StringBuilder(\"SELECT FIRST \").append(session.getColumnsPerKey())\n                 .append(\" ''..'' FROM Standard1\");\n\n            if (session.cqlVersion.startsWith(\"2\"))\n                query.append(\" USING CONSISTENCY \").append(session.getConsistencyLevel());\n\n            query.append(\" WHERE C1=\").append(getUnQuotedCqlBlob(values.get(1).array()))\n                 .append(\" AND KEY > ? LIMIT \").append(session.getKeysPerCall());\n\n            cqlQuery = query.toString();\n        }\n\n        String format = \"%0\" + session.getTotalKeysLength() + \"d\";\n        String startOffset = String.format(format, 0);\n\n        int expectedPerValue = session.getNumKeys() / values.size(), received = 0;\n\n        while (received < expectedPerValue)\n        {\n            long start = System.currentTimeMillis();\n\n            boolean success = false;\n            String exceptionMessage = null;\n            CqlResult results = null;\n            String formattedQuery = null;\n            List<String> queryParms = Collections.singletonList(getUnQuotedCqlBlob(startOffset));\n\n            for (int t = 0; t < session.getRetryTimes(); t++)\n            {\n                if (success)\n                    break;\n\n                try\n                {\n                    if (session.usePreparedStatements())\n                    {\n                        Integer stmntId = getPreparedStatement(client, cqlQuery);\n                        if (session.cqlVersion.startsWith(\"3\"))\n                            results = client.execute_prepared_cql3_query(stmntId, queryParamsAsByteBuffer(queryParms), session.getConsistencyLevel());\n                        else\n                            results = client.execute_prepared_cql_query(stmntId, queryParamsAsByteBuffer(queryParms));\n                    }\n                    else\n                    {\n                        if (formattedQuery ==  null)\n                            formattedQuery = formatCqlQuery(cqlQuery, queryParms);\n                        if (session.cqlVersion.startsWith(\"3\"))\n                            results = client.execute_cql3_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE, session.getConsistencyLevel());\n                        else\n                            results = client.execute_cql_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE);\n                    }\n\n                    success = (results.rows.size() != 0);\n                }\n                catch (Exception e)\n                {\n                    exceptionMessage = getExceptionMessage(e);\n                    success = false;\n                }\n            }\n\n            if (!success)\n            {\n                error(String.format(\"Operation [%d] retried %d times - error executing indexed range query with offset %s %s%n\",\n                                    index,\n                                    session.getRetryTimes(),\n                                    startOffset,\n                                    (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n            }\n\n            received += results.rows.size();\n\n            // convert max key found back to an integer, and increment it\n            startOffset = String.format(format, (1 + getMaxKey(results.rows)));\n\n            session.operations.getAndIncrement();\n            session.keys.getAndAdd(results.rows.size());\n            session.latency.getAndAdd(System.currentTimeMillis() - start);\n        }\n    }","id":15163,"modified_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n            throw new RuntimeException(\"Super columns are not implemented for CQL\");\n\n        if (values == null)\n            values = generateValues();\n\n        if (cqlQuery == null)\n        {\n            StringBuilder query = new StringBuilder(\"SELECT FIRST \").append(session.getColumnsPerKey())\n                 .append(\" ''..'' FROM Standard1\");\n\n            if (session.cqlVersion.startsWith(\"2\"))\n                query.append(\" USING CONSISTENCY \").append(session.getConsistencyLevel());\n\n            query.append(\" WHERE C1=\").append(getUnQuotedCqlBlob(values.get(1).array()))\n                 .append(\" AND KEY > ? LIMIT \").append(session.getKeysPerCall());\n\n            cqlQuery = query.toString();\n        }\n\n        String format = \"%0\" + session.getTotalKeysLength() + \"d\";\n        String startOffset = String.format(format, 0);\n\n        int expectedPerValue = session.getNumKeys() / values.size(), received = 0;\n\n        while (received < expectedPerValue)\n        {\n            TimerContext context = session.latency.time();\n\n            boolean success = false;\n            String exceptionMessage = null;\n            CqlResult results = null;\n            String formattedQuery = null;\n            List<String> queryParms = Collections.singletonList(getUnQuotedCqlBlob(startOffset));\n\n            for (int t = 0; t < session.getRetryTimes(); t++)\n            {\n                if (success)\n                    break;\n\n                try\n                {\n                    if (session.usePreparedStatements())\n                    {\n                        Integer stmntId = getPreparedStatement(client, cqlQuery);\n                        if (session.cqlVersion.startsWith(\"3\"))\n                            results = client.execute_prepared_cql3_query(stmntId, queryParamsAsByteBuffer(queryParms), session.getConsistencyLevel());\n                        else\n                            results = client.execute_prepared_cql_query(stmntId, queryParamsAsByteBuffer(queryParms));\n                    }\n                    else\n                    {\n                        if (formattedQuery ==  null)\n                            formattedQuery = formatCqlQuery(cqlQuery, queryParms);\n                        if (session.cqlVersion.startsWith(\"3\"))\n                            results = client.execute_cql3_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE, session.getConsistencyLevel());\n                        else\n                            results = client.execute_cql_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE);\n                    }\n\n                    success = (results.rows.size() != 0);\n                }\n                catch (Exception e)\n                {\n                    exceptionMessage = getExceptionMessage(e);\n                    success = false;\n                }\n            }\n\n            if (!success)\n            {\n                error(String.format(\"Operation [%d] retried %d times - error executing indexed range query with offset %s %s%n\",\n                                    index,\n                                    session.getRetryTimes(),\n                                    startOffset,\n                                    (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n            }\n\n            received += results.rows.size();\n\n            // convert max key found back to an integer, and increment it\n            startOffset = String.format(format, (1 + getMaxKey(results.rows)));\n\n            session.operations.getAndIncrement();\n            session.keys.getAndAdd(results.rows.size());\n            context.stop();\n        }\n    }","commit_id":"b475602be82230ad3d20da8d0b56b99f47b9d192","url":"https://github.com/apache/cassandra"},{"original_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n            throw new RuntimeException(\"Super columns are not implemented for CQL\");\n\n        if (values == null)\n            values = generateValues();\n\n        // Construct a query string once.\n        if (cqlQuery == null)\n        {\n            StringBuilder query = new StringBuilder(\"UPDATE \").append(wrapInQuotesIfRequired(\"Standard1\"));\n\n            if (session.cqlVersion.startsWith(\"2\"))\n                query.append(\" USING CONSISTENCY \").append(session.getConsistencyLevel().toString());\n\n            query.append(\" SET \");\n\n            for (int i = 0; i < session.getColumnsPerKey(); i++)\n            {\n                if (i > 0)\n                    query.append(',');\n\n                if (session.timeUUIDComparator)\n                {\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        throw new UnsupportedOperationException(\"Cannot use UUIDs in column names with CQL3\");\n\n                    query.append(wrapInQuotesIfRequired(UUIDGen.makeType1UUIDFromHost(Session.getLocalAddress()).toString()))\n                         .append(\" = ?\");\n                }\n                else\n                {\n                    query.append(wrapInQuotesIfRequired(\"C\" + i)).append(\" = ?\");\n                }\n            }\n\n            query.append(\" WHERE KEY=?\");\n            cqlQuery = query.toString();\n        }\n\n        List<String> queryParms = new ArrayList<String>();\n        for (int i = 0; i < session.getColumnsPerKey(); i++)\n        {\n            // Column value\n            queryParms.add(getUnQuotedCqlBlob(values.get(i % values.size()).array()));\n        }\n\n        String key = String.format(\"%0\" + session.getTotalKeysLength() + \"d\", index);\n        queryParms.add(getUnQuotedCqlBlob(key));\n\n        String formattedQuery = null;\n\n        long start = System.currentTimeMillis();\n\n        boolean success = false;\n        String exceptionMessage = null;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                if (session.usePreparedStatements())\n                {\n                    Integer stmntId = getPreparedStatement(client, cqlQuery);\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        client.execute_prepared_cql3_query(stmntId, queryParamsAsByteBuffer(queryParms), session.getConsistencyLevel());\n                    else\n                        client.execute_prepared_cql_query(stmntId, queryParamsAsByteBuffer(queryParms));\n                }\n                else\n                {\n                    if (formattedQuery == null)\n                        formattedQuery = formatCqlQuery(cqlQuery, queryParms);\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        client.execute_cql3_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE, session.getConsistencyLevel());\n                    else\n                        client.execute_cql_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE);\n                }\n\n                success = true;\n            }\n            catch (Exception e)\n            {\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error inserting key %s %s%n with query %s\",\n                                index,\n                                session.getRetryTimes(),\n                                key,\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\",\n                                cqlQuery));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        session.latency.getAndAdd(System.currentTimeMillis() - start);\n    }","id":15164,"modified_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n            throw new RuntimeException(\"Super columns are not implemented for CQL\");\n\n        if (values == null)\n            values = generateValues();\n\n        // Construct a query string once.\n        if (cqlQuery == null)\n        {\n            StringBuilder query = new StringBuilder(\"UPDATE \").append(wrapInQuotesIfRequired(\"Standard1\"));\n\n            if (session.cqlVersion.startsWith(\"2\"))\n                query.append(\" USING CONSISTENCY \").append(session.getConsistencyLevel().toString());\n\n            query.append(\" SET \");\n\n            for (int i = 0; i < session.getColumnsPerKey(); i++)\n            {\n                if (i > 0)\n                    query.append(',');\n\n                if (session.timeUUIDComparator)\n                {\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        throw new UnsupportedOperationException(\"Cannot use UUIDs in column names with CQL3\");\n\n                    query.append(wrapInQuotesIfRequired(UUIDGen.makeType1UUIDFromHost(Session.getLocalAddress()).toString()))\n                         .append(\" = ?\");\n                }\n                else\n                {\n                    query.append(wrapInQuotesIfRequired(\"C\" + i)).append(\" = ?\");\n                }\n            }\n\n            query.append(\" WHERE KEY=?\");\n            cqlQuery = query.toString();\n        }\n\n        List<String> queryParms = new ArrayList<String>();\n        for (int i = 0; i < session.getColumnsPerKey(); i++)\n        {\n            // Column value\n            queryParms.add(getUnQuotedCqlBlob(values.get(i % values.size()).array()));\n        }\n\n        String key = String.format(\"%0\" + session.getTotalKeysLength() + \"d\", index);\n        queryParms.add(getUnQuotedCqlBlob(key));\n\n        String formattedQuery = null;\n\n        TimerContext context = session.latency.time();\n\n        boolean success = false;\n        String exceptionMessage = null;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                if (session.usePreparedStatements())\n                {\n                    Integer stmntId = getPreparedStatement(client, cqlQuery);\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        client.execute_prepared_cql3_query(stmntId, queryParamsAsByteBuffer(queryParms), session.getConsistencyLevel());\n                    else\n                        client.execute_prepared_cql_query(stmntId, queryParamsAsByteBuffer(queryParms));\n                }\n                else\n                {\n                    if (formattedQuery == null)\n                        formattedQuery = formatCqlQuery(cqlQuery, queryParms);\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        client.execute_cql3_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE, session.getConsistencyLevel());\n                    else\n                        client.execute_cql_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE);\n                }\n\n                success = true;\n            }\n            catch (Exception e)\n            {\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error inserting key %s %s%n with query %s\",\n                                index,\n                                session.getRetryTimes(),\n                                key,\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\",\n                                cqlQuery));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        context.stop();\n    }","commit_id":"b475602be82230ad3d20da8d0b56b99f47b9d192","url":"https://github.com/apache/cassandra"},{"original_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n            throw new RuntimeException(\"Super columns are not implemented for CQL\");\n\n        if (cqlQuery == null)\n        {\n            StringBuilder query = new StringBuilder(\"SELECT FIRST \").append(session.getColumnsPerKey())\n                    .append(\" ''..'' FROM Standard1\");\n\n            if (session.cqlVersion.startsWith(\"2\"))\n                query.append(\" USING CONSISTENCY \").append(session.getConsistencyLevel().toString());\n\n            cqlQuery = query.append(\" WHERE KEY > ?\").toString();\n        }\n\n        String key = String.format(\"%0\" +  session.getTotalKeysLength() + \"d\", index);\n        String formattedQuery = null;\n\n        long startTime = System.currentTimeMillis();\n\n        boolean success = false;\n        String exceptionMessage = null;\n        int rowCount = 0;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                CqlResult result = null;\n\n                if (session.usePreparedStatements())\n                {\n                    Integer stmntId = getPreparedStatement(client, cqlQuery);\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        result = client.execute_prepared_cql3_query(stmntId, Collections.singletonList(ByteBufferUtil.bytes(getUnQuotedCqlBlob(key))), session.getConsistencyLevel());\n                    else\n                        result = client.execute_prepared_cql_query(stmntId, Collections.singletonList(ByteBufferUtil.bytes(getUnQuotedCqlBlob(key))));\n                }\n                else\n                {\n                    if (formattedQuery == null)\n                        formattedQuery = formatCqlQuery(cqlQuery, Collections.singletonList(getUnQuotedCqlBlob(key)));\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        result = client.execute_cql3_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE, session.getConsistencyLevel());\n                    else\n                        result = client.execute_cql_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE);\n                }\n\n                rowCount = result.rows.size();\n                success = (rowCount != 0);\n            }\n            catch (Exception e)\n            {\n                System.err.println(e);\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error executing range slice with offset %s %s%n\",\n                                index,\n                                session.getRetryTimes(),\n                                key,\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndAdd(rowCount);\n        session.latency.getAndAdd(System.currentTimeMillis() - startTime);\n    }","id":15165,"modified_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n            throw new RuntimeException(\"Super columns are not implemented for CQL\");\n\n        if (cqlQuery == null)\n        {\n            StringBuilder query = new StringBuilder(\"SELECT FIRST \").append(session.getColumnsPerKey())\n                    .append(\" ''..'' FROM Standard1\");\n\n            if (session.cqlVersion.startsWith(\"2\"))\n                query.append(\" USING CONSISTENCY \").append(session.getConsistencyLevel().toString());\n\n            cqlQuery = query.append(\" WHERE KEY > ?\").toString();\n        }\n\n        String key = String.format(\"%0\" +  session.getTotalKeysLength() + \"d\", index);\n        String formattedQuery = null;\n\n        TimerContext context = session.latency.time();\n\n        boolean success = false;\n        String exceptionMessage = null;\n        int rowCount = 0;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                CqlResult result = null;\n\n                if (session.usePreparedStatements())\n                {\n                    Integer stmntId = getPreparedStatement(client, cqlQuery);\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        result = client.execute_prepared_cql3_query(stmntId, Collections.singletonList(ByteBufferUtil.bytes(getUnQuotedCqlBlob(key))), session.getConsistencyLevel());\n                    else\n                        result = client.execute_prepared_cql_query(stmntId, Collections.singletonList(ByteBufferUtil.bytes(getUnQuotedCqlBlob(key))));\n                }\n                else\n                {\n                    if (formattedQuery == null)\n                        formattedQuery = formatCqlQuery(cqlQuery, Collections.singletonList(getUnQuotedCqlBlob(key)));\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        result = client.execute_cql3_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE, session.getConsistencyLevel());\n                    else\n                        result = client.execute_cql_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE);\n                }\n\n                rowCount = result.rows.size();\n                success = (rowCount != 0);\n            }\n            catch (Exception e)\n            {\n                System.err.println(e);\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error executing range slice with offset %s %s%n\",\n                                index,\n                                session.getRetryTimes(),\n                                key,\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndAdd(rowCount);\n        context.stop();\n    }","commit_id":"b475602be82230ad3d20da8d0b56b99f47b9d192","url":"https://github.com/apache/cassandra"},{"original_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n            throw new RuntimeException(\"Super columns are not implemented for CQL\");\n\n        if (cqlQuery == null)\n        {\n            StringBuilder query = new StringBuilder(\"SELECT \");\n\n            if (session.columnNames == null)\n            {\n                if (session.cqlVersion.startsWith(\"2\"))\n                    query.append(\"FIRST \").append(session.getColumnsPerKey()).append(\" ''..''\");\n                else\n                    query.append(\"*\");\n            }\n            else\n            {\n                for (int i = 0; i < session.columnNames.size(); i++)\n                {\n                    if (i > 0) query.append(\",\");\n                    query.append('?');\n                }\n            }\n\n            query.append(\" FROM \").append(wrapInQuotesIfRequired(\"Standard1\"));\n\n            if (session.cqlVersion.startsWith(\"2\"))\n                query.append(\" USING CONSISTENCY \").append(session.getConsistencyLevel().toString());\n            query.append(\" WHERE KEY=?\");\n\n            cqlQuery = query.toString();\n        }\n\n        List<String> queryParams = new ArrayList<String>();\n        if (session.columnNames != null)\n            for (int i = 0; i < session.columnNames.size(); i++)\n                queryParams.add(getUnQuotedCqlBlob(session.columnNames.get(i).array()));\n\n        byte[] key = generateKey();\n        queryParams.add(getUnQuotedCqlBlob(key));\n\n        String formattedQuery = null;\n\n        long start = System.currentTimeMillis();\n\n        boolean success = false;\n        String exceptionMessage = null;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                CqlResult result = null;\n\n                if (session.usePreparedStatements())\n                {\n                    Integer stmntId = getPreparedStatement(client, cqlQuery);\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        result = client.execute_prepared_cql3_query(stmntId, queryParamsAsByteBuffer(queryParams), session.getConsistencyLevel());\n                    else\n                        result = client.execute_prepared_cql_query(stmntId, queryParamsAsByteBuffer(queryParams));\n                }\n                else\n                {\n                    if (formattedQuery == null)\n                        formattedQuery = formatCqlQuery(cqlQuery, queryParams);\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        result = client.execute_cql3_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE, session.getConsistencyLevel());\n                    else\n                        result = client.execute_cql_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE);\n                }\n\n                success = (result.rows.get(0).columns.size() != 0);\n            }\n            catch (Exception e)\n            {\n\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error reading key %s %s%n with query %s\",\n                                index,\n                                session.getRetryTimes(),\n                                new String(key),\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\",\n                                cqlQuery));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        session.latency.getAndAdd(System.currentTimeMillis() - start);\n    }","id":15166,"modified_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n            throw new RuntimeException(\"Super columns are not implemented for CQL\");\n\n        if (cqlQuery == null)\n        {\n            StringBuilder query = new StringBuilder(\"SELECT \");\n\n            if (session.columnNames == null)\n            {\n                if (session.cqlVersion.startsWith(\"2\"))\n                    query.append(\"FIRST \").append(session.getColumnsPerKey()).append(\" ''..''\");\n                else\n                    query.append(\"*\");\n            }\n            else\n            {\n                for (int i = 0; i < session.columnNames.size(); i++)\n                {\n                    if (i > 0) query.append(\",\");\n                    query.append('?');\n                }\n            }\n\n            query.append(\" FROM \").append(wrapInQuotesIfRequired(\"Standard1\"));\n\n            if (session.cqlVersion.startsWith(\"2\"))\n                query.append(\" USING CONSISTENCY \").append(session.getConsistencyLevel().toString());\n            query.append(\" WHERE KEY=?\");\n\n            cqlQuery = query.toString();\n        }\n\n        List<String> queryParams = new ArrayList<String>();\n        if (session.columnNames != null)\n            for (int i = 0; i < session.columnNames.size(); i++)\n                queryParams.add(getUnQuotedCqlBlob(session.columnNames.get(i).array()));\n\n        byte[] key = generateKey();\n        queryParams.add(getUnQuotedCqlBlob(key));\n\n        String formattedQuery = null;\n\n        TimerContext context = session.latency.time();\n\n        boolean success = false;\n        String exceptionMessage = null;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                CqlResult result = null;\n\n                if (session.usePreparedStatements())\n                {\n                    Integer stmntId = getPreparedStatement(client, cqlQuery);\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        result = client.execute_prepared_cql3_query(stmntId, queryParamsAsByteBuffer(queryParams), session.getConsistencyLevel());\n                    else\n                        result = client.execute_prepared_cql_query(stmntId, queryParamsAsByteBuffer(queryParams));\n                }\n                else\n                {\n                    if (formattedQuery == null)\n                        formattedQuery = formatCqlQuery(cqlQuery, queryParams);\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        result = client.execute_cql3_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE, session.getConsistencyLevel());\n                    else\n                        result = client.execute_cql_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE);\n                }\n\n                success = (result.rows.get(0).columns.size() != 0);\n            }\n            catch (Exception e)\n            {\n\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error reading key %s %s%n with query %s\",\n                                index,\n                                session.getRetryTimes(),\n                                new String(key),\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\",\n                                cqlQuery));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        context.stop();\n    }","commit_id":"b475602be82230ad3d20da8d0b56b99f47b9d192","url":"https://github.com/apache/cassandra"},{"original_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (values == null)\n            values = generateValues();\n\n        String format = \"%0\" + session.getTotalKeysLength() + \"d\";\n        SlicePredicate predicate = new SlicePredicate().setSlice_range(new SliceRange(ByteBufferUtil.EMPTY_BYTE_BUFFER,\n                                                                                      ByteBufferUtil.EMPTY_BYTE_BUFFER,\n                                                                                      false, session.getColumnsPerKey()));\n\n        ColumnParent parent = new ColumnParent(\"Standard1\");\n        int expectedPerValue = session.getNumKeys() / values.size();\n\n        ByteBuffer columnName = ByteBufferUtil.bytes(\"C1\");\n\n        int received = 0;\n\n        String startOffset = String.format(format, 0);\n        ByteBuffer value = values.get(1); // only C1 column is indexed\n\n        IndexExpression expression = new IndexExpression(columnName, IndexOperator.EQ, value);\n\n        while (received < expectedPerValue)\n        {\n            IndexClause clause = new IndexClause(Arrays.asList(expression),\n                                                 ByteBufferUtil.bytes(startOffset),\n                                                 session.getKeysPerCall());\n\n            List<KeySlice> results = null;\n            long start = System.currentTimeMillis();\n\n            boolean success = false;\n            String exceptionMessage = null;\n\n            for (int t = 0; t < session.getRetryTimes(); t++)\n            {\n                if (success)\n                    break;\n\n                try\n                {\n                    results = client.get_indexed_slices(parent, clause, predicate, session.getConsistencyLevel());\n                    success = (results.size() != 0);\n                }\n                catch (Exception e)\n                {\n                    exceptionMessage = getExceptionMessage(e);\n                    success = false;\n                }\n            }\n\n            if (!success)\n            {\n                error(String.format(\"Operation [%d] retried %d times - error on calling get_indexed_slices for offset %s %s%n\",\n                                    index,\n                                    session.getRetryTimes(),\n                                    startOffset,\n                                    (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n            }\n\n            received += results.size();\n\n            // convert max key found back to an integer, and increment it\n            startOffset = String.format(format, (1 + getMaxKey(results)));\n\n            session.operations.getAndIncrement();\n            session.keys.getAndAdd(results.size());\n            session.latency.getAndAdd(System.currentTimeMillis() - start);\n        }\n    }","id":15167,"modified_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (values == null)\n            values = generateValues();\n\n        String format = \"%0\" + session.getTotalKeysLength() + \"d\";\n        SlicePredicate predicate = new SlicePredicate().setSlice_range(new SliceRange(ByteBufferUtil.EMPTY_BYTE_BUFFER,\n                                                                                      ByteBufferUtil.EMPTY_BYTE_BUFFER,\n                                                                                      false, session.getColumnsPerKey()));\n\n        ColumnParent parent = new ColumnParent(\"Standard1\");\n        int expectedPerValue = session.getNumKeys() / values.size();\n\n        ByteBuffer columnName = ByteBufferUtil.bytes(\"C1\");\n\n        int received = 0;\n\n        String startOffset = String.format(format, 0);\n        ByteBuffer value = values.get(1); // only C1 column is indexed\n\n        IndexExpression expression = new IndexExpression(columnName, IndexOperator.EQ, value);\n\n        while (received < expectedPerValue)\n        {\n            IndexClause clause = new IndexClause(Arrays.asList(expression),\n                                                 ByteBufferUtil.bytes(startOffset),\n                                                 session.getKeysPerCall());\n\n            List<KeySlice> results = null;\n            TimerContext context = session.latency.time();\n\n            boolean success = false;\n            String exceptionMessage = null;\n\n            for (int t = 0; t < session.getRetryTimes(); t++)\n            {\n                if (success)\n                    break;\n\n                try\n                {\n                    results = client.get_indexed_slices(parent, clause, predicate, session.getConsistencyLevel());\n                    success = (results.size() != 0);\n                }\n                catch (Exception e)\n                {\n                    exceptionMessage = getExceptionMessage(e);\n                    success = false;\n                }\n            }\n\n            if (!success)\n            {\n                error(String.format(\"Operation [%d] retried %d times - error on calling get_indexed_slices for offset %s %s%n\",\n                                    index,\n                                    session.getRetryTimes(),\n                                    startOffset,\n                                    (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n            }\n\n            received += results.size();\n\n            // convert max key found back to an integer, and increment it\n            startOffset = String.format(format, (1 + getMaxKey(results)));\n\n            session.operations.getAndIncrement();\n            session.keys.getAndAdd(results.size());\n            context.stop();\n        }\n    }","commit_id":"b475602be82230ad3d20da8d0b56b99f47b9d192","url":"https://github.com/apache/cassandra"},{"original_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (values == null)\n            values = generateValues();\n\n        List<Column> columns = new ArrayList<Column>(session.getColumnsPerKey());\n        List<SuperColumn> superColumns = null;\n\n        // format used for keys\n        String format = \"%0\" + session.getTotalKeysLength() + \"d\";\n\n        for (int i = 0; i < session.getColumnsPerKey(); i++)\n        {\n            columns.add(new Column(columnName(i, session.timeUUIDComparator))\n                            .setValue(values.get(i % values.size()))\n                            .setTimestamp(FBUtilities.timestampMicros()));\n        }\n\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n        {\n            superColumns = new ArrayList<SuperColumn>();\n            // supers = [SuperColumn('S' + str(j), columns) for j in xrange(supers_per_key)]\n            for (int i = 0; i < session.getSuperColumns(); i++)\n            {\n                String superColumnName = \"S\" + Integer.toString(i);\n                superColumns.add(new SuperColumn(ByteBufferUtil.bytes(superColumnName), columns));\n            }\n        }\n\n        String rawKey = String.format(format, index);\n        Map<String, List<Mutation>> row = session.getColumnFamilyType() == ColumnFamilyType.Super\n                                        ? getSuperColumnsMutationMap(superColumns)\n                                        : getColumnsMutationMap(columns);\n        Map<ByteBuffer, Map<String, List<Mutation>>> record = Collections.singletonMap(ByteBufferUtil.bytes(rawKey), row);\n\n        long start = System.currentTimeMillis();\n\n        boolean success = false;\n        String exceptionMessage = null;\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                client.batch_mutate(record, session.getConsistencyLevel());\n                success = true;\n            }\n            catch (Exception e)\n            {\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error inserting key %s %s%n\",\n                                index,\n                                session.getRetryTimes(),\n                                rawKey,\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        session.latency.getAndAdd(System.currentTimeMillis() - start);\n    }","id":15168,"modified_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (values == null)\n            values = generateValues();\n\n        List<Column> columns = new ArrayList<Column>(session.getColumnsPerKey());\n        List<SuperColumn> superColumns = null;\n\n        // format used for keys\n        String format = \"%0\" + session.getTotalKeysLength() + \"d\";\n\n        for (int i = 0; i < session.getColumnsPerKey(); i++)\n        {\n            columns.add(new Column(columnName(i, session.timeUUIDComparator))\n                            .setValue(values.get(i % values.size()))\n                            .setTimestamp(FBUtilities.timestampMicros()));\n        }\n\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n        {\n            superColumns = new ArrayList<SuperColumn>();\n            // supers = [SuperColumn('S' + str(j), columns) for j in xrange(supers_per_key)]\n            for (int i = 0; i < session.getSuperColumns(); i++)\n            {\n                String superColumnName = \"S\" + Integer.toString(i);\n                superColumns.add(new SuperColumn(ByteBufferUtil.bytes(superColumnName), columns));\n            }\n        }\n\n        String rawKey = String.format(format, index);\n        Map<String, List<Mutation>> row = session.getColumnFamilyType() == ColumnFamilyType.Super\n                                        ? getSuperColumnsMutationMap(superColumns)\n                                        : getColumnsMutationMap(columns);\n        Map<ByteBuffer, Map<String, List<Mutation>>> record = Collections.singletonMap(ByteBufferUtil.bytes(rawKey), row);\n\n        TimerContext context = session.latency.time();\n\n        boolean success = false;\n        String exceptionMessage = null;\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                client.batch_mutate(record, session.getConsistencyLevel());\n                success = true;\n            }\n            catch (Exception e)\n            {\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error inserting key %s %s%n\",\n                                index,\n                                session.getRetryTimes(),\n                                rawKey,\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        context.stop();\n    }","commit_id":"b475602be82230ad3d20da8d0b56b99f47b9d192","url":"https://github.com/apache/cassandra"},{"original_method":"public void run(CassandraClient client) throws IOException\n    {\n        SlicePredicate predicate = new SlicePredicate().setSlice_range(new SliceRange(ByteBufferUtil.EMPTY_BYTE_BUFFER,\n                                                                                      ByteBufferUtil.EMPTY_BYTE_BUFFER,\n                                                                                      false, session.getColumnsPerKey()));\n\n        int offset = index * session.getKeysPerThread();\n        Map<ByteBuffer,List<ColumnOrSuperColumn>> results;\n\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n        {\n            List<ByteBuffer> keys = generateKeys(offset, offset + session.getKeysPerCall());\n\n            for (int j = 0; j < session.getSuperColumns(); j++)\n            {\n                ColumnParent parent = new ColumnParent(\"Super1\").setSuper_column(ByteBufferUtil.bytes(\"S\" + j));\n\n                long start = System.currentTimeMillis();\n\n                boolean success = false;\n                String exceptionMessage = null;\n\n                for (int t = 0; t < session.getRetryTimes(); t++)\n                {\n                    if (success)\n                        break;\n\n                    try\n                    {\n                        results = client.multiget_slice(keys, parent, predicate, session.getConsistencyLevel());\n                        success = (results.size() != 0);\n                    }\n                    catch (Exception e)\n                    {\n                        exceptionMessage = getExceptionMessage(e);\n                    }\n                }\n\n                if (!success)\n                {\n                    error(String.format(\"Operation [%d] retried %d times - error on calling multiget_slice for keys %s %s%n\",\n                                        index,\n                                        session.getRetryTimes(),\n                                        keys,\n                                        (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n                }\n\n                session.operations.getAndIncrement();\n                session.keys.getAndAdd(keys.size());\n                session.latency.getAndAdd(System.currentTimeMillis() - start);\n\n                offset += session.getKeysPerCall();\n            }\n        }\n        else\n        {\n            ColumnParent parent = new ColumnParent(\"Standard1\");\n\n            List<ByteBuffer> keys = generateKeys(offset, offset + session.getKeysPerCall());\n\n            long start = System.currentTimeMillis();\n\n            boolean success = false;\n            String exceptionMessage = null;\n\n            for (int t = 0; t < session.getRetryTimes(); t++)\n            {\n                if (success)\n                    break;\n\n                try\n                {\n                    results = client.multiget_slice(keys, parent, predicate, session.getConsistencyLevel());\n                    success = (results.size() != 0);\n                }\n                catch (Exception e)\n                {\n                    exceptionMessage = getExceptionMessage(e);\n                    success = false;\n                }\n            }\n\n            if (!success)\n            {\n                error(String.format(\"Operation [%d] retried %d times - error on calling multiget_slice for keys %s %s%n\",\n                                    index,\n                                    session.getRetryTimes(),\n                                    keys,\n                                    (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n            }\n\n            session.operations.getAndIncrement();\n            session.keys.getAndAdd(keys.size());\n            session.latency.getAndAdd(System.currentTimeMillis() - start);\n\n            offset += session.getKeysPerCall();\n        }\n    }","id":15169,"modified_method":"public void run(CassandraClient client) throws IOException\n    {\n        SlicePredicate predicate = new SlicePredicate().setSlice_range(new SliceRange(ByteBufferUtil.EMPTY_BYTE_BUFFER,\n                                                                                      ByteBufferUtil.EMPTY_BYTE_BUFFER,\n                                                                                      false, session.getColumnsPerKey()));\n\n        int offset = index * session.getKeysPerThread();\n        Map<ByteBuffer,List<ColumnOrSuperColumn>> results;\n\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n        {\n            List<ByteBuffer> keys = generateKeys(offset, offset + session.getKeysPerCall());\n\n            for (int j = 0; j < session.getSuperColumns(); j++)\n            {\n                ColumnParent parent = new ColumnParent(\"Super1\").setSuper_column(ByteBufferUtil.bytes(\"S\" + j));\n\n                TimerContext context = session.latency.time();\n\n                boolean success = false;\n                String exceptionMessage = null;\n\n                for (int t = 0; t < session.getRetryTimes(); t++)\n                {\n                    if (success)\n                        break;\n\n                    try\n                    {\n                        results = client.multiget_slice(keys, parent, predicate, session.getConsistencyLevel());\n                        success = (results.size() != 0);\n                    }\n                    catch (Exception e)\n                    {\n                        exceptionMessage = getExceptionMessage(e);\n                    }\n                }\n\n                if (!success)\n                {\n                    error(String.format(\"Operation [%d] retried %d times - error on calling multiget_slice for keys %s %s%n\",\n                                        index,\n                                        session.getRetryTimes(),\n                                        keys,\n                                        (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n                }\n\n                session.operations.getAndIncrement();\n                session.keys.getAndAdd(keys.size());\n                context.stop();\n\n                offset += session.getKeysPerCall();\n            }\n        }\n        else\n        {\n            ColumnParent parent = new ColumnParent(\"Standard1\");\n\n            List<ByteBuffer> keys = generateKeys(offset, offset + session.getKeysPerCall());\n\n            TimerContext context = session.latency.time();\n\n            boolean success = false;\n            String exceptionMessage = null;\n\n            for (int t = 0; t < session.getRetryTimes(); t++)\n            {\n                if (success)\n                    break;\n\n                try\n                {\n                    results = client.multiget_slice(keys, parent, predicate, session.getConsistencyLevel());\n                    success = (results.size() != 0);\n                }\n                catch (Exception e)\n                {\n                    exceptionMessage = getExceptionMessage(e);\n                    success = false;\n                }\n            }\n\n            if (!success)\n            {\n                error(String.format(\"Operation [%d] retried %d times - error on calling multiget_slice for keys %s %s%n\",\n                                    index,\n                                    session.getRetryTimes(),\n                                    keys,\n                                    (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n            }\n\n            session.operations.getAndIncrement();\n            session.keys.getAndAdd(keys.size());\n            context.stop();\n\n            offset += session.getKeysPerCall();\n        }\n    }","commit_id":"b475602be82230ad3d20da8d0b56b99f47b9d192","url":"https://github.com/apache/cassandra"},{"original_method":"public void run(CassandraClient client) throws IOException\n    {\n        String format = \"%0\" + session.getTotalKeysLength() + \"d\";\n\n        // initial values\n        int count = session.getColumnsPerKey();\n\n        SlicePredicate predicate = new SlicePredicate().setSlice_range(new SliceRange(ByteBufferUtil.EMPTY_BYTE_BUFFER,\n                                                                                      ByteBufferUtil.EMPTY_BYTE_BUFFER,\n                                                                                      false,\n                                                                                      count));\n\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n        {\n            ByteBuffer start = ByteBufferUtil.bytes(String.format(format, index));\n\n            List<KeySlice> slices = new ArrayList<KeySlice>();\n            KeyRange range = new KeyRange(count).setStart_key(start).setEnd_key(ByteBufferUtil.EMPTY_BYTE_BUFFER);\n\n            for (int i = 0; i < session.getSuperColumns(); i++)\n            {\n                String superColumnName = \"S\" + Integer.toString(i);\n                ColumnParent parent = new ColumnParent(\"Super1\").setSuper_column(ByteBufferUtil.bytes(superColumnName));\n\n                long startTime = System.currentTimeMillis();\n\n                boolean success = false;\n                String exceptionMessage = null;\n\n                for (int t = 0; t < session.getRetryTimes(); t++)\n                {\n                    try\n                    {\n                        slices = client.get_range_slices(parent, predicate, range, session.getConsistencyLevel());\n                        success = (slices.size() != 0);\n                    }\n                    catch (Exception e)\n                    {\n                        exceptionMessage = getExceptionMessage(e);\n                        success = false;\n                    }\n                }\n\n                if (!success)\n                {\n                    error(String.format(\"Operation [%d] retried %d times - error on calling get_range_slices for range offset %s %s%n\",\n                                        index,\n                                        session.getRetryTimes(),\n                                        ByteBufferUtil.string(start),\n                                        (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n                }\n\n                session.operations.getAndIncrement();\n                session.latency.getAndAdd(System.currentTimeMillis() - startTime);\n            }\n\n            session.keys.getAndAdd(slices.size());\n        }\n        else\n        {\n            ColumnParent parent = new ColumnParent(\"Standard1\");\n\n            ByteBuffer start = ByteBufferUtil.bytes(String.format(format, index));\n\n            List<KeySlice> slices = new ArrayList<KeySlice>();\n            KeyRange range = new KeyRange(count).setStart_key(start).setEnd_key(ByteBufferUtil.EMPTY_BYTE_BUFFER);\n\n            long startTime = System.currentTimeMillis();\n\n            boolean success = false;\n            String exceptionMessage = null;\n\n            for (int t = 0; t < session.getRetryTimes(); t++)\n            {\n                if (success)\n                    break;\n\n                try\n                {\n                    slices = client.get_range_slices(parent, predicate, range, session.getConsistencyLevel());\n                    success = (slices.size() != 0);\n                }\n                catch (Exception e)\n                {\n                    exceptionMessage = getExceptionMessage(e);\n                    success = false;\n                }\n            }\n\n            if (!success)\n            {\n                error(String.format(\"Operation [%d] retried %d times - error on calling get_indexed_slices for range offset %s %s%n\",\n                                    index,\n                                    session.getRetryTimes(),\n                                    ByteBufferUtil.string(start),\n                                    (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n            }\n\n            session.operations.getAndIncrement();\n            session.keys.getAndAdd(slices.size());\n            session.latency.getAndAdd(System.currentTimeMillis() - startTime);\n        }\n    }","id":15170,"modified_method":"public void run(CassandraClient client) throws IOException\n    {\n        String format = \"%0\" + session.getTotalKeysLength() + \"d\";\n\n        // initial values\n        int count = session.getColumnsPerKey();\n\n        SlicePredicate predicate = new SlicePredicate().setSlice_range(new SliceRange(ByteBufferUtil.EMPTY_BYTE_BUFFER,\n                                                                                      ByteBufferUtil.EMPTY_BYTE_BUFFER,\n                                                                                      false,\n                                                                                      count));\n\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n        {\n            ByteBuffer start = ByteBufferUtil.bytes(String.format(format, index));\n\n            List<KeySlice> slices = new ArrayList<KeySlice>();\n            KeyRange range = new KeyRange(count).setStart_key(start).setEnd_key(ByteBufferUtil.EMPTY_BYTE_BUFFER);\n\n            for (int i = 0; i < session.getSuperColumns(); i++)\n            {\n                String superColumnName = \"S\" + Integer.toString(i);\n                ColumnParent parent = new ColumnParent(\"Super1\").setSuper_column(ByteBufferUtil.bytes(superColumnName));\n\n                TimerContext context = session.latency.time();\n\n                boolean success = false;\n                String exceptionMessage = null;\n\n                for (int t = 0; t < session.getRetryTimes(); t++)\n                {\n                    try\n                    {\n                        slices = client.get_range_slices(parent, predicate, range, session.getConsistencyLevel());\n                        success = (slices.size() != 0);\n                    }\n                    catch (Exception e)\n                    {\n                        exceptionMessage = getExceptionMessage(e);\n                        success = false;\n                    }\n                }\n\n                if (!success)\n                {\n                    error(String.format(\"Operation [%d] retried %d times - error on calling get_range_slices for range offset %s %s%n\",\n                                        index,\n                                        session.getRetryTimes(),\n                                        ByteBufferUtil.string(start),\n                                        (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n                }\n\n                session.operations.getAndIncrement();\n                context.stop();\n            }\n\n            session.keys.getAndAdd(slices.size());\n        }\n        else\n        {\n            ColumnParent parent = new ColumnParent(\"Standard1\");\n\n            ByteBuffer start = ByteBufferUtil.bytes(String.format(format, index));\n\n            List<KeySlice> slices = new ArrayList<KeySlice>();\n            KeyRange range = new KeyRange(count).setStart_key(start).setEnd_key(ByteBufferUtil.EMPTY_BYTE_BUFFER);\n\n            TimerContext context = session.latency.time();\n\n            boolean success = false;\n            String exceptionMessage = null;\n\n            for (int t = 0; t < session.getRetryTimes(); t++)\n            {\n                if (success)\n                    break;\n\n                try\n                {\n                    slices = client.get_range_slices(parent, predicate, range, session.getConsistencyLevel());\n                    success = (slices.size() != 0);\n                }\n                catch (Exception e)\n                {\n                    exceptionMessage = getExceptionMessage(e);\n                    success = false;\n                }\n            }\n\n            if (!success)\n            {\n                error(String.format(\"Operation [%d] retried %d times - error on calling get_indexed_slices for range offset %s %s%n\",\n                                    index,\n                                    session.getRetryTimes(),\n                                    ByteBufferUtil.string(start),\n                                    (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n            }\n\n            session.operations.getAndIncrement();\n            session.keys.getAndAdd(slices.size());\n            context.stop();\n        }\n    }","commit_id":"b475602be82230ad3d20da8d0b56b99f47b9d192","url":"https://github.com/apache/cassandra"},{"original_method":"private void runSuperColumnReader(SlicePredicate predicate, Cassandra.Client client) throws IOException\n    {\n        byte[] rawKey = generateKey();\n        ByteBuffer key = ByteBuffer.wrap(rawKey);\n\n        for (int j = 0; j < session.getSuperColumns(); j++)\n        {\n            String superColumn = 'S' + Integer.toString(j);\n            ColumnParent parent = new ColumnParent(\"Super1\").setSuper_column(superColumn.getBytes(UTF_8));\n\n            long start = System.currentTimeMillis();\n\n            boolean success = false;\n            String exceptionMessage = null;\n\n            for (int t = 0; t < session.getRetryTimes(); t++)\n            {\n                if (success)\n                    break;\n\n                try\n                {\n                    List<ColumnOrSuperColumn> columns;\n                    columns = client.get_slice(key, parent, predicate, session.getConsistencyLevel());\n                    success = (columns.size() != 0);\n                }\n                catch (Exception e)\n                {\n                    exceptionMessage = getExceptionMessage(e);\n                    success = false;\n                }\n            }\n\n            if (!success)\n            {\n                error(String.format(\"Operation [%d] retried %d times - error reading key %s %s%n\",\n                                    index,\n                                    session.getRetryTimes(),\n                                    new String(rawKey),\n                                    (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n            }\n\n            session.operations.getAndIncrement();\n            session.keys.getAndIncrement();\n            session.latency.getAndAdd(System.currentTimeMillis() - start);\n        }\n    }","id":15171,"modified_method":"private void runSuperColumnReader(SlicePredicate predicate, Cassandra.Client client) throws IOException\n    {\n        byte[] rawKey = generateKey();\n        ByteBuffer key = ByteBuffer.wrap(rawKey);\n\n        for (int j = 0; j < session.getSuperColumns(); j++)\n        {\n            String superColumn = 'S' + Integer.toString(j);\n            ColumnParent parent = new ColumnParent(\"Super1\").setSuper_column(superColumn.getBytes(UTF_8));\n\n            TimerContext context = session.latency.time();\n\n            boolean success = false;\n            String exceptionMessage = null;\n\n            for (int t = 0; t < session.getRetryTimes(); t++)\n            {\n                if (success)\n                    break;\n\n                try\n                {\n                    List<ColumnOrSuperColumn> columns;\n                    columns = client.get_slice(key, parent, predicate, session.getConsistencyLevel());\n                    success = (columns.size() != 0);\n                }\n                catch (Exception e)\n                {\n                    exceptionMessage = getExceptionMessage(e);\n                    success = false;\n                }\n            }\n\n            if (!success)\n            {\n                error(String.format(\"Operation [%d] retried %d times - error reading key %s %s%n\",\n                                    index,\n                                    session.getRetryTimes(),\n                                    new String(rawKey),\n                                    (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n            }\n\n            session.operations.getAndIncrement();\n            session.keys.getAndIncrement();\n            context.stop();\n        }\n    }","commit_id":"b475602be82230ad3d20da8d0b56b99f47b9d192","url":"https://github.com/apache/cassandra"},{"original_method":"private void runColumnReader(SlicePredicate predicate, Cassandra.Client client) throws IOException\n    {\n        ColumnParent parent = new ColumnParent(\"Standard1\");\n\n        byte[] key = generateKey();\n        ByteBuffer keyBuffer = ByteBuffer.wrap(key);\n\n        long start = System.currentTimeMillis();\n\n        boolean success = false;\n        String exceptionMessage = null;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                List<ColumnOrSuperColumn> columns;\n                columns = client.get_slice(keyBuffer, parent, predicate, session.getConsistencyLevel());\n                success = (columns.size() != 0);\n            }\n            catch (Exception e)\n            {\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error reading key %s %s%n\",\n                                index,\n                                session.getRetryTimes(),\n                                new String(key),\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        session.latency.getAndAdd(System.currentTimeMillis() - start);\n    }","id":15172,"modified_method":"private void runColumnReader(SlicePredicate predicate, Cassandra.Client client) throws IOException\n    {\n        ColumnParent parent = new ColumnParent(\"Standard1\");\n\n        byte[] key = generateKey();\n        ByteBuffer keyBuffer = ByteBuffer.wrap(key);\n\n        TimerContext context = session.latency.time();\n\n        boolean success = false;\n        String exceptionMessage = null;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                List<ColumnOrSuperColumn> columns;\n                columns = client.get_slice(keyBuffer, parent, predicate, session.getConsistencyLevel());\n                success = (columns.size() != 0);\n            }\n            catch (Exception e)\n            {\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error reading key %s %s%n\",\n                                index,\n                                session.getRetryTimes(),\n                                new String(key),\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        context.stop();\n    }","commit_id":"b475602be82230ad3d20da8d0b56b99f47b9d192","url":"https://github.com/apache/cassandra"},{"original_method":"public Session(String[] arguments) throws IllegalArgumentException, SyntaxException\n    {\n        float STDev = 0.1f;\n        CommandLineParser parser = new PosixParser();\n\n        try\n        {\n            CommandLine cmd = parser.parse(availableOptions, arguments);\n\n            if (cmd.getArgs().length > 0)\n            {\n                System.err.println(\"Application does not allow arbitrary arguments: \" + StringUtils.join(cmd.getArgList(), \", \"));\n                System.exit(1);\n            }\n\n            if (cmd.hasOption(\"h\"))\n                throw new IllegalArgumentException(\"help\");\n\n            if (cmd.hasOption(\"n\"))\n                numKeys = Integer.parseInt(cmd.getOptionValue(\"n\"));\n\n            if (cmd.hasOption(\"F\"))\n                numDifferentKeys = Integer.parseInt(cmd.getOptionValue(\"F\"));\n            else\n                numDifferentKeys = numKeys;\n\n            if (cmd.hasOption(\"N\"))\n                skipKeys = Float.parseFloat(cmd.getOptionValue(\"N\"));\n\n            if (cmd.hasOption(\"t\"))\n                threads = Integer.parseInt(cmd.getOptionValue(\"t\"));\n\n            if (cmd.hasOption(\"c\"))\n                columns = Integer.parseInt(cmd.getOptionValue(\"c\"));\n\n            if (cmd.hasOption(\"S\"))\n                columnSize = Integer.parseInt(cmd.getOptionValue(\"S\"));\n\n            if (cmd.hasOption(\"C\"))\n                cardinality = Integer.parseInt(cmd.getOptionValue(\"C\"));\n\n            if (cmd.hasOption(\"d\"))\n                nodes = cmd.getOptionValue(\"d\").split(\",\");\n\n            if (cmd.hasOption(\"D\"))\n            {\n                try\n                {\n                    String node = null;\n                    List<String> tmpNodes = new ArrayList<String>();\n                    BufferedReader in = new BufferedReader(new InputStreamReader(new FileInputStream(cmd.getOptionValue(\"D\"))));\n                    while ((node = in.readLine()) != null)\n                    {\n                        if (node.length() > 0)\n                            tmpNodes.add(node);\n                    }\n                    nodes = tmpNodes.toArray(new String[tmpNodes.size()]);\n                    in.close();\n                }\n                catch(IOException ioe)\n                {\n                    throw new RuntimeException(ioe);\n                }\n            }\n\n            if (cmd.hasOption(\"s\"))\n                STDev = Float.parseFloat(cmd.getOptionValue(\"s\"));\n\n            if (cmd.hasOption(\"r\"))\n                random = true;\n\n            outFileName = (cmd.hasOption(\"f\")) ? cmd.getOptionValue(\"f\") : null;\n\n            if (cmd.hasOption(\"p\"))\n                port = Integer.parseInt(cmd.getOptionValue(\"p\"));\n\n            if (cmd.hasOption(\"o\"))\n                operation = Stress.Operations.valueOf(cmd.getOptionValue(\"o\").toUpperCase());\n\n            if (cmd.hasOption(\"u\"))\n                superColumns = Integer.parseInt(cmd.getOptionValue(\"u\"));\n\n            if (cmd.hasOption(\"y\"))\n                columnFamilyType = ColumnFamilyType.valueOf(cmd.getOptionValue(\"y\"));\n\n            if (cmd.hasOption(\"K\"))\n            {\n                retryTimes = Integer.valueOf(cmd.getOptionValue(\"K\"));\n\n                if (retryTimes <= 0)\n                {\n                    throw new RuntimeException(\"--keep-trying option value should be > 0\");\n                }\n            }\n\n            if (cmd.hasOption(\"k\"))\n            {\n                retryTimes = 1;\n                ignoreErrors = true;\n            }\n\n\n            if (cmd.hasOption(\"i\"))\n                progressInterval = Integer.parseInt(cmd.getOptionValue(\"i\"));\n\n            if (cmd.hasOption(\"g\"))\n                keysPerCall = Integer.parseInt(cmd.getOptionValue(\"g\"));\n\n            if (cmd.hasOption(\"e\"))\n                consistencyLevel = ConsistencyLevel.valueOf(cmd.getOptionValue(\"e\").toUpperCase());\n\n            if (cmd.hasOption(\"x\"))\n                indexType = IndexType.valueOf(cmd.getOptionValue(\"x\").toUpperCase());\n\n            if (cmd.hasOption(\"R\"))\n                replicationStrategy = cmd.getOptionValue(\"R\");\n\n            if (cmd.hasOption(\"l\"))\n                replicationStrategyOptions.put(\"replication_factor\", String.valueOf(Integer.parseInt(cmd.getOptionValue(\"l\"))));\n            else if (replicationStrategy.endsWith(\"SimpleStrategy\"))\n                replicationStrategyOptions.put(\"replication_factor\", \"1\");\n\n            if (cmd.hasOption(\"L\"))\n            {\n                enable_cql = true;\n                cqlVersion = \"2.0.0\";\n            }\n\n            if (cmd.hasOption(\"L3\"))\n            {\n                enable_cql = true;\n                cqlVersion = \"3.0.0\";\n            }\n\n\n            if (cmd.hasOption(\"P\"))\n            {\n                if (!enable_cql)\n                {\n                    System.err.println(\"-P/--use-prepared-statements is only applicable with CQL (-L/--enable-cql)\");\n                    System.exit(-1);\n                }\n                use_prepared = true;\n            }\n\n            if (cmd.hasOption(\"O\"))\n            {\n                String[] pairs = StringUtils.split(cmd.getOptionValue(\"O\"), ',');\n\n                for (String pair : pairs)\n                {\n                    String[] keyAndValue = StringUtils.split(pair, ':');\n\n                    if (keyAndValue.length != 2)\n                        throw new RuntimeException(\"Invalid --strategy-properties value.\");\n\n                    replicationStrategyOptions.put(keyAndValue[0], keyAndValue[1]);\n                }\n            }\n\n            if (cmd.hasOption(\"W\"))\n                replicateOnWrite = false;\n\n            if (cmd.hasOption(\"I\"))\n                compression = cmd.getOptionValue(\"I\");\n\n            averageSizeValues = cmd.hasOption(\"V\");\n\n            try\n            {\n                sendToDaemon = cmd.hasOption(\"send-to\")\n                                ? InetAddress.getByName(cmd.getOptionValue(\"send-to\"))\n                                : null;\n            }\n            catch (UnknownHostException e)\n            {\n                throw new RuntimeException(e);\n            }\n\n            if (cmd.hasOption(\"Q\"))\n            {\n                AbstractType comparator = TypeParser.parse(DEFAULT_COMPARATOR);\n\n                String[] names = StringUtils.split(cmd.getOptionValue(\"Q\"), \",\");\n                columnNames = new ArrayList<ByteBuffer>(names.length);\n\n                for (String columnName : names)\n                    columnNames.add(comparator.fromString(columnName));\n            }\n            else\n            {\n                columnNames = null;\n            }\n\n            if (cmd.hasOption(\"Z\"))\n            {\n                compactionStrategy = cmd.getOptionValue(\"Z\");\n\n                try\n                {\n                    // validate compaction strategy class\n                    CFMetaData.createCompactionStrategy(compactionStrategy);\n                }\n                catch (ConfigurationException e)\n                {\n                    System.err.println(e.getMessage());\n                    System.exit(1);\n                }\n            }\n\n            if (cmd.hasOption(\"U\"))\n            {\n                AbstractType parsed = null;\n\n                try\n                {\n                    parsed = TypeParser.parse(cmd.getOptionValue(\"U\"));\n                }\n                catch (ConfigurationException e)\n                {\n                    System.err.println(e.getMessage());\n                    System.exit(1);\n                }\n\n                comparator = cmd.getOptionValue(\"U\");\n                timeUUIDComparator = parsed instanceof TimeUUIDType;\n\n                if (!(parsed instanceof TimeUUIDType || parsed instanceof AsciiType || parsed instanceof UTF8Type))\n                {\n                    System.err.println(\"Currently supported types are: TimeUUIDType, AsciiType, UTF8Type.\");\n                    System.exit(1);\n                }\n            }\n            else\n            {\n                comparator = null;\n                timeUUIDComparator = false;\n            }\n\n            if(cmd.hasOption(SSL_TRUSTSTORE))\n                encOptions.truststore = cmd.getOptionValue(SSL_TRUSTSTORE);\n\n            if(cmd.hasOption(SSL_TRUSTSTORE_PW))\n                encOptions.truststore_password = cmd.getOptionValue(SSL_TRUSTSTORE_PW);\n\n            if(cmd.hasOption(SSL_PROTOCOL))\n                encOptions.protocol = cmd.getOptionValue(SSL_PROTOCOL);\n\n            if(cmd.hasOption(SSL_ALGORITHM))\n                encOptions.algorithm = cmd.getOptionValue(SSL_ALGORITHM);\n\n            if(cmd.hasOption(SSL_STORE_TYPE))\n                encOptions.store_type = cmd.getOptionValue(SSL_STORE_TYPE);\n\n            if(cmd.hasOption(SSL_CIPHER_SUITES))\n                encOptions.cipher_suites = cmd.getOptionValue(SSL_CIPHER_SUITES).split(\",\");\n\n            if (cmd.hasOption(\"tf\"))\n                transportFactory = validateAndSetTransportFactory(cmd.getOptionValue(\"tf\"));\n\n        }\n        catch (ParseException e)\n        {\n            throw new IllegalArgumentException(e.getMessage(), e);\n        }\n        catch (ConfigurationException e)\n        {\n            throw new IllegalStateException(e.getMessage(), e);\n        }\n\n        mean  = numDifferentKeys / 2;\n        sigma = numDifferentKeys * STDev;\n\n        operations = new AtomicInteger();\n        keys = new AtomicInteger();\n        latency = new AtomicLong();\n    }","id":15173,"modified_method":"public Session(String[] arguments) throws IllegalArgumentException, SyntaxException\n    {\n        float STDev = 0.1f;\n        CommandLineParser parser = new PosixParser();\n\n        try\n        {\n            CommandLine cmd = parser.parse(availableOptions, arguments);\n\n            if (cmd.getArgs().length > 0)\n            {\n                System.err.println(\"Application does not allow arbitrary arguments: \" + StringUtils.join(cmd.getArgList(), \", \"));\n                System.exit(1);\n            }\n\n            if (cmd.hasOption(\"h\"))\n                throw new IllegalArgumentException(\"help\");\n\n            if (cmd.hasOption(\"n\"))\n                numKeys = Integer.parseInt(cmd.getOptionValue(\"n\"));\n\n            if (cmd.hasOption(\"F\"))\n                numDifferentKeys = Integer.parseInt(cmd.getOptionValue(\"F\"));\n            else\n                numDifferentKeys = numKeys;\n\n            if (cmd.hasOption(\"N\"))\n                skipKeys = Float.parseFloat(cmd.getOptionValue(\"N\"));\n\n            if (cmd.hasOption(\"t\"))\n                threads = Integer.parseInt(cmd.getOptionValue(\"t\"));\n\n            if (cmd.hasOption(\"c\"))\n                columns = Integer.parseInt(cmd.getOptionValue(\"c\"));\n\n            if (cmd.hasOption(\"S\"))\n                columnSize = Integer.parseInt(cmd.getOptionValue(\"S\"));\n\n            if (cmd.hasOption(\"C\"))\n                cardinality = Integer.parseInt(cmd.getOptionValue(\"C\"));\n\n            if (cmd.hasOption(\"d\"))\n                nodes = cmd.getOptionValue(\"d\").split(\",\");\n\n            if (cmd.hasOption(\"D\"))\n            {\n                try\n                {\n                    String node = null;\n                    List<String> tmpNodes = new ArrayList<String>();\n                    BufferedReader in = new BufferedReader(new InputStreamReader(new FileInputStream(cmd.getOptionValue(\"D\"))));\n                    while ((node = in.readLine()) != null)\n                    {\n                        if (node.length() > 0)\n                            tmpNodes.add(node);\n                    }\n                    nodes = tmpNodes.toArray(new String[tmpNodes.size()]);\n                    in.close();\n                }\n                catch(IOException ioe)\n                {\n                    throw new RuntimeException(ioe);\n                }\n            }\n\n            if (cmd.hasOption(\"s\"))\n                STDev = Float.parseFloat(cmd.getOptionValue(\"s\"));\n\n            if (cmd.hasOption(\"r\"))\n                random = true;\n\n            outFileName = (cmd.hasOption(\"f\")) ? cmd.getOptionValue(\"f\") : null;\n\n            if (cmd.hasOption(\"p\"))\n                port = Integer.parseInt(cmd.getOptionValue(\"p\"));\n\n            if (cmd.hasOption(\"o\"))\n                operation = Stress.Operations.valueOf(cmd.getOptionValue(\"o\").toUpperCase());\n\n            if (cmd.hasOption(\"u\"))\n                superColumns = Integer.parseInt(cmd.getOptionValue(\"u\"));\n\n            if (cmd.hasOption(\"y\"))\n                columnFamilyType = ColumnFamilyType.valueOf(cmd.getOptionValue(\"y\"));\n\n            if (cmd.hasOption(\"K\"))\n            {\n                retryTimes = Integer.valueOf(cmd.getOptionValue(\"K\"));\n\n                if (retryTimes <= 0)\n                {\n                    throw new RuntimeException(\"--keep-trying option value should be > 0\");\n                }\n            }\n\n            if (cmd.hasOption(\"k\"))\n            {\n                retryTimes = 1;\n                ignoreErrors = true;\n            }\n\n\n            if (cmd.hasOption(\"i\"))\n                progressInterval = Integer.parseInt(cmd.getOptionValue(\"i\"));\n\n            if (cmd.hasOption(\"g\"))\n                keysPerCall = Integer.parseInt(cmd.getOptionValue(\"g\"));\n\n            if (cmd.hasOption(\"e\"))\n                consistencyLevel = ConsistencyLevel.valueOf(cmd.getOptionValue(\"e\").toUpperCase());\n\n            if (cmd.hasOption(\"x\"))\n                indexType = IndexType.valueOf(cmd.getOptionValue(\"x\").toUpperCase());\n\n            if (cmd.hasOption(\"R\"))\n                replicationStrategy = cmd.getOptionValue(\"R\");\n\n            if (cmd.hasOption(\"l\"))\n                replicationStrategyOptions.put(\"replication_factor\", String.valueOf(Integer.parseInt(cmd.getOptionValue(\"l\"))));\n            else if (replicationStrategy.endsWith(\"SimpleStrategy\"))\n                replicationStrategyOptions.put(\"replication_factor\", \"1\");\n\n            if (cmd.hasOption(\"L\"))\n            {\n                enable_cql = true;\n                cqlVersion = \"2.0.0\";\n            }\n\n            if (cmd.hasOption(\"L3\"))\n            {\n                enable_cql = true;\n                cqlVersion = \"3.0.0\";\n            }\n\n\n            if (cmd.hasOption(\"P\"))\n            {\n                if (!enable_cql)\n                {\n                    System.err.println(\"-P/--use-prepared-statements is only applicable with CQL (-L/--enable-cql)\");\n                    System.exit(-1);\n                }\n                use_prepared = true;\n            }\n\n            if (cmd.hasOption(\"O\"))\n            {\n                String[] pairs = StringUtils.split(cmd.getOptionValue(\"O\"), ',');\n\n                for (String pair : pairs)\n                {\n                    String[] keyAndValue = StringUtils.split(pair, ':');\n\n                    if (keyAndValue.length != 2)\n                        throw new RuntimeException(\"Invalid --strategy-properties value.\");\n\n                    replicationStrategyOptions.put(keyAndValue[0], keyAndValue[1]);\n                }\n            }\n\n            if (cmd.hasOption(\"W\"))\n                replicateOnWrite = false;\n\n            if (cmd.hasOption(\"I\"))\n                compression = cmd.getOptionValue(\"I\");\n\n            averageSizeValues = cmd.hasOption(\"V\");\n\n            try\n            {\n                sendToDaemon = cmd.hasOption(\"send-to\")\n                                ? InetAddress.getByName(cmd.getOptionValue(\"send-to\"))\n                                : null;\n            }\n            catch (UnknownHostException e)\n            {\n                throw new RuntimeException(e);\n            }\n\n            if (cmd.hasOption(\"Q\"))\n            {\n                AbstractType comparator = TypeParser.parse(DEFAULT_COMPARATOR);\n\n                String[] names = StringUtils.split(cmd.getOptionValue(\"Q\"), \",\");\n                columnNames = new ArrayList<ByteBuffer>(names.length);\n\n                for (String columnName : names)\n                    columnNames.add(comparator.fromString(columnName));\n            }\n            else\n            {\n                columnNames = null;\n            }\n\n            if (cmd.hasOption(\"Z\"))\n            {\n                compactionStrategy = cmd.getOptionValue(\"Z\");\n\n                try\n                {\n                    // validate compaction strategy class\n                    CFMetaData.createCompactionStrategy(compactionStrategy);\n                }\n                catch (ConfigurationException e)\n                {\n                    System.err.println(e.getMessage());\n                    System.exit(1);\n                }\n            }\n\n            if (cmd.hasOption(\"U\"))\n            {\n                AbstractType parsed = null;\n\n                try\n                {\n                    parsed = TypeParser.parse(cmd.getOptionValue(\"U\"));\n                }\n                catch (ConfigurationException e)\n                {\n                    System.err.println(e.getMessage());\n                    System.exit(1);\n                }\n\n                comparator = cmd.getOptionValue(\"U\");\n                timeUUIDComparator = parsed instanceof TimeUUIDType;\n\n                if (!(parsed instanceof TimeUUIDType || parsed instanceof AsciiType || parsed instanceof UTF8Type))\n                {\n                    System.err.println(\"Currently supported types are: TimeUUIDType, AsciiType, UTF8Type.\");\n                    System.exit(1);\n                }\n            }\n            else\n            {\n                comparator = null;\n                timeUUIDComparator = false;\n            }\n\n            if(cmd.hasOption(SSL_TRUSTSTORE))\n                encOptions.truststore = cmd.getOptionValue(SSL_TRUSTSTORE);\n\n            if(cmd.hasOption(SSL_TRUSTSTORE_PW))\n                encOptions.truststore_password = cmd.getOptionValue(SSL_TRUSTSTORE_PW);\n\n            if(cmd.hasOption(SSL_PROTOCOL))\n                encOptions.protocol = cmd.getOptionValue(SSL_PROTOCOL);\n\n            if(cmd.hasOption(SSL_ALGORITHM))\n                encOptions.algorithm = cmd.getOptionValue(SSL_ALGORITHM);\n\n            if(cmd.hasOption(SSL_STORE_TYPE))\n                encOptions.store_type = cmd.getOptionValue(SSL_STORE_TYPE);\n\n            if(cmd.hasOption(SSL_CIPHER_SUITES))\n                encOptions.cipher_suites = cmd.getOptionValue(SSL_CIPHER_SUITES).split(\",\");\n\n            if (cmd.hasOption(\"tf\"))\n                transportFactory = validateAndSetTransportFactory(cmd.getOptionValue(\"tf\"));\n\n        }\n        catch (ParseException e)\n        {\n            throw new IllegalArgumentException(e.getMessage(), e);\n        }\n        catch (ConfigurationException e)\n        {\n            throw new IllegalStateException(e.getMessage(), e);\n        }\n\n        mean  = numDifferentKeys / 2;\n        sigma = numDifferentKeys * STDev;\n    }","commit_id":"b475602be82230ad3d20da8d0b56b99f47b9d192","url":"https://github.com/apache/cassandra"},{"original_method":"public void run()\n    {\n        long latency, oldLatency;\n        int epoch, total, oldTotal, keyCount, oldKeyCount;\n\n        // creating keyspace and column families\n        if (client.getOperation() == Stress.Operations.INSERT || client.getOperation() == Stress.Operations.COUNTER_ADD)\n            client.createKeySpaces();\n\n        int threadCount = client.getThreads();\n        Consumer[] consumers = new Consumer[threadCount];\n\n        output.println(\"total,interval_op_rate,interval_key_rate,avg_latency,elapsed_time\");\n\n        int itemsPerThread = client.getKeysPerThread();\n        int modulo = client.getNumKeys() % threadCount;\n\n        // creating required type of the threads for the test\n        for (int i = 0; i < threadCount; i++) {\n            if (i == threadCount - 1)\n                itemsPerThread += modulo; // last one is going to handle N + modulo items\n\n            consumers[i] = new Consumer(itemsPerThread);\n        }\n\n        Producer producer = new Producer();\n        producer.start();\n\n        // starting worker threads\n        for (int i = 0; i < threadCount; i++)\n            consumers[i].start();\n\n        // initialization of the values\n        boolean terminate = false;\n        latency = 0;\n        epoch = total = keyCount = 0;\n\n        int interval = client.getProgressInterval();\n        int epochIntervals = client.getProgressInterval() * 10;\n        long testStartTime = System.currentTimeMillis();\n\n        while (!terminate)\n        {\n            if (stop)\n            {\n                producer.stopProducer();\n\n                for (Consumer consumer : consumers)\n                    consumer.stopConsume();\n\n                break;\n            }\n\n            try\n            {\n                Thread.sleep(100);\n            }\n            catch (InterruptedException e)\n            {\n                throw new RuntimeException(e.getMessage(), e);\n            }\n\n            int alive = 0;\n            for (Thread thread : consumers)\n                if (thread.isAlive()) alive++;\n\n            if (alive == 0)\n                terminate = true;\n\n            epoch++;\n\n            if (terminate || epoch > epochIntervals)\n            {\n                epoch = 0;\n\n                oldTotal = total;\n                oldLatency = latency;\n                oldKeyCount = keyCount;\n\n                total = client.operations.get();\n                keyCount = client.keys.get();\n                latency = client.latency.get();\n\n                int opDelta = total - oldTotal;\n                int keyDelta = keyCount - oldKeyCount;\n                double latencyDelta = latency - oldLatency;\n\n                long currentTimeInSeconds = (System.currentTimeMillis() - testStartTime) / 1000;\n                String formattedDelta = (opDelta > 0) ? Double.toString(latencyDelta / (opDelta * 1000)) : \"NaN\";\n\n                output.println(String.format(\"%d,%d,%d,%s,%d\", total, opDelta / interval, keyDelta / interval, formattedDelta, currentTimeInSeconds));\n            }\n        }\n\n        // if any consumer failed, set the return code to failure.\n        returnCode = SUCCESS;\n        if (producer.isAlive())\n        {\n            producer.interrupt(); // if producer is still alive it means that we had errors in the consumers\n            returnCode = FAILURE;\n        }\n        for (Consumer consumer : consumers)\n            if (consumer.getReturnCode() == FAILURE)\n                returnCode = FAILURE;\n\n        if (returnCode == SUCCESS)\n            // marking an end of the output to the client\n            output.println(\"END\");\n        else\n            output.println(\"FAILURE\");\n\n    }","id":15174,"modified_method":"public void run()\n    {\n        Snapshot latency;\n        long oldLatency;\n        int epoch, total, oldTotal, keyCount, oldKeyCount;\n\n        // creating keyspace and column families\n        if (client.getOperation() == Stress.Operations.INSERT || client.getOperation() == Stress.Operations.COUNTER_ADD)\n            client.createKeySpaces();\n\n        int threadCount = client.getThreads();\n        Consumer[] consumers = new Consumer[threadCount];\n\n        output.println(\"total,interval_op_rate,interval_key_rate,latency/95th/99th,elapsed_time\");\n\n        int itemsPerThread = client.getKeysPerThread();\n        int modulo = client.getNumKeys() % threadCount;\n\n        // creating required type of the threads for the test\n        for (int i = 0; i < threadCount; i++) {\n            if (i == threadCount - 1)\n                itemsPerThread += modulo; // last one is going to handle N + modulo items\n\n            consumers[i] = new Consumer(itemsPerThread);\n        }\n\n        Producer producer = new Producer();\n        producer.start();\n\n        // starting worker threads\n        for (int i = 0; i < threadCount; i++)\n            consumers[i].start();\n\n        // initialization of the values\n        boolean terminate = false;\n        epoch = total = keyCount = 0;\n\n        int interval = client.getProgressInterval();\n        int epochIntervals = client.getProgressInterval() * 10;\n        long testStartTime = System.currentTimeMillis();\n\n        while (!terminate)\n        {\n            if (stop)\n            {\n                producer.stopProducer();\n\n                for (Consumer consumer : consumers)\n                    consumer.stopConsume();\n\n                break;\n            }\n\n            try\n            {\n                Thread.sleep(100);\n            }\n            catch (InterruptedException e)\n            {\n                throw new RuntimeException(e.getMessage(), e);\n            }\n\n            int alive = 0;\n            for (Thread thread : consumers)\n                if (thread.isAlive()) alive++;\n\n            if (alive == 0)\n                terminate = true;\n\n            epoch++;\n\n            if (terminate || epoch > epochIntervals)\n            {\n                epoch = 0;\n\n                oldTotal = total;\n                oldKeyCount = keyCount;\n\n                total = client.operations.get();\n                keyCount = client.keys.get();\n                latency = client.latency.getSnapshot();\n\n                int opDelta = total - oldTotal;\n                int keyDelta = keyCount - oldKeyCount;\n\n                long currentTimeInSeconds = (System.currentTimeMillis() - testStartTime) / 1000;\n\n                output.println(String.format(\"%d,%d,%d,%.1f,%.1f,%.1f,%d\",\n                                             total,\n                                             opDelta / interval,\n                                             keyDelta / interval,\n                                             latency.getMedian(), latency.get95thPercentile(), latency.get999thPercentile(),\n                                             currentTimeInSeconds));\n            }\n        }\n\n        // if any consumer failed, set the return code to failure.\n        returnCode = SUCCESS;\n        if (producer.isAlive())\n        {\n            producer.interrupt(); // if producer is still alive it means that we had errors in the consumers\n            returnCode = FAILURE;\n        }\n        for (Consumer consumer : consumers)\n            if (consumer.getReturnCode() == FAILURE)\n                returnCode = FAILURE;\n\n        if (returnCode == SUCCESS)\n            // marking an end of the output to the client\n            output.println(\"END\");\n        else\n            output.println(\"FAILURE\");\n\n    }","commit_id":"b475602be82230ad3d20da8d0b56b99f47b9d192","url":"https://github.com/apache/cassandra"},{"original_method":"public void run(CassandraClient client) throws IOException\n    {\n        List<CounterColumn> columns = new ArrayList<CounterColumn>();\n        List<CounterSuperColumn> superColumns = new ArrayList<CounterSuperColumn>();\n\n        // format used for keys\n        String format = \"%0\" + session.getTotalKeysLength() + \"d\";\n\n        for (int i = 0; i < session.getColumnsPerKey(); i++)\n        {\n            String columnName = (\"C\" + Integer.toString(i));\n\n            columns.add(new CounterColumn(ByteBufferUtil.bytes(columnName), 1L));\n        }\n\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n        {\n            // supers = [SuperColumn('S' + str(j), columns) for j in xrange(supers_per_key)]\n            for (int i = 0; i < session.getSuperColumns(); i++)\n            {\n                String superColumnName = \"S\" + Integer.toString(i);\n                superColumns.add(new CounterSuperColumn(ByteBuffer.wrap(superColumnName.getBytes()), columns));\n            }\n        }\n\n        String rawKey = String.format(format, index);\n        Map<ByteBuffer, Map<String, List<Mutation>>> record = new HashMap<ByteBuffer, Map<String, List<Mutation>>>();\n\n        record.put(ByteBufferUtil.bytes(rawKey), session.getColumnFamilyType() == ColumnFamilyType.Super\n                                                                                ? getSuperColumnsMutationMap(superColumns)\n                                                                                : getColumnsMutationMap(columns));\n\n        long start = System.currentTimeMillis();\n\n        boolean success = false;\n        String exceptionMessage = null;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                client.batch_mutate(record, session.getConsistencyLevel());\n                success = true;\n            }\n            catch (Exception e)\n            {\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error incrementing key %s %s%n\",\n                                index,\n                                session.getRetryTimes(),\n                                rawKey,\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        session.latency.getAndAdd(System.currentTimeMillis() - start);\n    }","id":15175,"modified_method":"public void run(CassandraClient client) throws IOException\n    {\n        List<CounterColumn> columns = new ArrayList<CounterColumn>();\n        List<CounterSuperColumn> superColumns = new ArrayList<CounterSuperColumn>();\n\n        // format used for keys\n        String format = \"%0\" + session.getTotalKeysLength() + \"d\";\n\n        for (int i = 0; i < session.getColumnsPerKey(); i++)\n        {\n            String columnName = (\"C\" + Integer.toString(i));\n\n            columns.add(new CounterColumn(ByteBufferUtil.bytes(columnName), 1L));\n        }\n\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n        {\n            // supers = [SuperColumn('S' + str(j), columns) for j in xrange(supers_per_key)]\n            for (int i = 0; i < session.getSuperColumns(); i++)\n            {\n                String superColumnName = \"S\" + Integer.toString(i);\n                superColumns.add(new CounterSuperColumn(ByteBuffer.wrap(superColumnName.getBytes()), columns));\n            }\n        }\n\n        String rawKey = String.format(format, index);\n        Map<ByteBuffer, Map<String, List<Mutation>>> record = new HashMap<ByteBuffer, Map<String, List<Mutation>>>();\n\n        record.put(ByteBufferUtil.bytes(rawKey), session.getColumnFamilyType() == ColumnFamilyType.Super\n                                                                                ? getSuperColumnsMutationMap(superColumns)\n                                                                                : getColumnsMutationMap(columns));\n\n        TimerContext context = session.latency.time();\n\n        boolean success = false;\n        String exceptionMessage = null;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                client.batch_mutate(record, session.getConsistencyLevel());\n                success = true;\n            }\n            catch (Exception e)\n            {\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error incrementing key %s %s%n\",\n                                index,\n                                session.getRetryTimes(),\n                                rawKey,\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        context.stop();\n    }","commit_id":"85d9ce1ba079f12c1a42a9d402ea3e8f038e262e","url":"https://github.com/apache/cassandra"},{"original_method":"private void runSuperCounterGetter(SlicePredicate predicate, Cassandra.Client client) throws IOException\n    {\n        byte[] rawKey = generateKey();\n        ByteBuffer key = ByteBuffer.wrap(rawKey);\n\n        for (int j = 0; j < session.getSuperColumns(); j++)\n        {\n            String superColumn = 'S' + Integer.toString(j);\n            ColumnParent parent = new ColumnParent(\"SuperCounter1\").setSuper_column(superColumn.getBytes());\n\n            long start = System.currentTimeMillis();\n\n            boolean success = false;\n            String exceptionMessage = null;\n\n            for (int t = 0; t < session.getRetryTimes(); t++)\n            {\n                if (success)\n                    break;\n\n                try\n                {\n                    List<ColumnOrSuperColumn> counters;\n                    counters = client.get_slice(key, parent, predicate, session.getConsistencyLevel());\n                    success = (counters.size() != 0);\n                }\n                catch (Exception e)\n                {\n                    exceptionMessage = getExceptionMessage(e);\n                    success = false;\n                }\n            }\n\n            if (!success)\n            {\n                error(String.format(\"Operation [%d] retried %d times - error reading counter key %s %s%n\",\n                                    index,\n                                    session.getRetryTimes(),\n                                    new String(rawKey),\n                                    (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n            }\n\n            session.operations.getAndIncrement();\n            session.keys.getAndIncrement();\n            session.latency.getAndAdd(System.currentTimeMillis() - start);\n        }\n    }","id":15176,"modified_method":"private void runSuperCounterGetter(SlicePredicate predicate, Cassandra.Client client) throws IOException\n    {\n        byte[] rawKey = generateKey();\n        ByteBuffer key = ByteBuffer.wrap(rawKey);\n\n        for (int j = 0; j < session.getSuperColumns(); j++)\n        {\n            String superColumn = 'S' + Integer.toString(j);\n            ColumnParent parent = new ColumnParent(\"SuperCounter1\").setSuper_column(superColumn.getBytes());\n\n            TimerContext context = session.latency.time();\n\n            boolean success = false;\n            String exceptionMessage = null;\n\n            for (int t = 0; t < session.getRetryTimes(); t++)\n            {\n                if (success)\n                    break;\n\n                try\n                {\n                    List<ColumnOrSuperColumn> counters;\n                    counters = client.get_slice(key, parent, predicate, session.getConsistencyLevel());\n                    success = (counters.size() != 0);\n                }\n                catch (Exception e)\n                {\n                    exceptionMessage = getExceptionMessage(e);\n                    success = false;\n                }\n            }\n\n            if (!success)\n            {\n                error(String.format(\"Operation [%d] retried %d times - error reading counter key %s %s%n\",\n                                    index,\n                                    session.getRetryTimes(),\n                                    new String(rawKey),\n                                    (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n            }\n\n            session.operations.getAndIncrement();\n            session.keys.getAndIncrement();\n            context.stop();\n        }\n    }","commit_id":"85d9ce1ba079f12c1a42a9d402ea3e8f038e262e","url":"https://github.com/apache/cassandra"},{"original_method":"private void runCounterGetter(SlicePredicate predicate, Cassandra.Client client) throws IOException\n    {\n        ColumnParent parent = new ColumnParent(\"Counter1\");\n\n        byte[] key = generateKey();\n        ByteBuffer keyBuffer = ByteBuffer.wrap(key);\n\n        long start = System.currentTimeMillis();\n\n        boolean success = false;\n        String exceptionMessage = null;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                List<ColumnOrSuperColumn> counters;\n                counters = client.get_slice(keyBuffer, parent, predicate, session.getConsistencyLevel());\n                success = (counters.size() != 0);\n            }\n            catch (Exception e)\n            {\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error reading counter key %s %s%n\",\n                                index,\n                                session.getRetryTimes(),\n                                new String(key),\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        session.latency.getAndAdd(System.currentTimeMillis() - start);\n    }","id":15177,"modified_method":"private void runCounterGetter(SlicePredicate predicate, Cassandra.Client client) throws IOException\n    {\n        ColumnParent parent = new ColumnParent(\"Counter1\");\n\n        byte[] key = generateKey();\n        ByteBuffer keyBuffer = ByteBuffer.wrap(key);\n\n        TimerContext context = session.latency.time();\n\n        boolean success = false;\n        String exceptionMessage = null;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                List<ColumnOrSuperColumn> counters;\n                counters = client.get_slice(keyBuffer, parent, predicate, session.getConsistencyLevel());\n                success = (counters.size() != 0);\n            }\n            catch (Exception e)\n            {\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error reading counter key %s %s%n\",\n                                index,\n                                session.getRetryTimes(),\n                                new String(key),\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        context.stop();\n    }","commit_id":"85d9ce1ba079f12c1a42a9d402ea3e8f038e262e","url":"https://github.com/apache/cassandra"},{"original_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n            throw new RuntimeException(\"Super columns are not implemented for CQL\");\n\n        if (cqlQuery == null)\n        {\n            String counterCF = session.cqlVersion.startsWith(\"2\") ? \"Counter1\" : \"Counter3\";\n\n            StringBuilder query = new StringBuilder(\"UPDATE \").append(wrapInQuotesIfRequired(counterCF));\n\n            if (session.cqlVersion.startsWith(\"2\"))\n                query.append(\" USING CONSISTENCY \").append(session.getConsistencyLevel());\n\n            query.append(\" SET \");\n\n            for (int i = 0; i < session.getColumnsPerKey(); i++)\n            {\n                if (i > 0)\n                    query.append(\",\");\n\n                query.append('C').append(i).append(\"=C\").append(i).append(\"+1\");\n            }\n            query.append(\" WHERE KEY=?\");\n            cqlQuery = query.toString();\n        }\n\n        String key = String.format(\"%0\" + session.getTotalKeysLength() + \"d\", index);\n        String formattedQuery = null;\n\n        long start = System.currentTimeMillis();\n\n        boolean success = false;\n        String exceptionMessage = null;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                if (session.usePreparedStatements())\n                {\n                    Integer stmntId = getPreparedStatement(client, cqlQuery);\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        client.execute_prepared_cql3_query(stmntId, Collections.singletonList(ByteBufferUtil.bytes(getUnQuotedCqlBlob(key))), session.getConsistencyLevel());\n                    else\n                        client.execute_prepared_cql_query(stmntId, Collections.singletonList(ByteBufferUtil.bytes(getUnQuotedCqlBlob(key))));\n                }\n                else\n                {\n                    if (formattedQuery == null)\n                        formattedQuery = formatCqlQuery(cqlQuery, Collections.singletonList(getUnQuotedCqlBlob(key)));\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        client.execute_cql3_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE, session.getConsistencyLevel());\n                    else\n                        client.execute_cql_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE);\n                }\n\n                success = true;\n            }\n            catch (Exception e)\n            {\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error incrementing key %s %s%n\",\n                                index,\n                                session.getRetryTimes(),\n                                key,\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        session.latency.getAndAdd(System.currentTimeMillis() - start);\n    }","id":15178,"modified_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n            throw new RuntimeException(\"Super columns are not implemented for CQL\");\n\n        if (cqlQuery == null)\n        {\n            String counterCF = session.cqlVersion.startsWith(\"2\") ? \"Counter1\" : \"Counter3\";\n\n            StringBuilder query = new StringBuilder(\"UPDATE \").append(wrapInQuotesIfRequired(counterCF));\n\n            if (session.cqlVersion.startsWith(\"2\"))\n                query.append(\" USING CONSISTENCY \").append(session.getConsistencyLevel());\n\n            query.append(\" SET \");\n\n            for (int i = 0; i < session.getColumnsPerKey(); i++)\n            {\n                if (i > 0)\n                    query.append(\",\");\n\n                query.append('C').append(i).append(\"=C\").append(i).append(\"+1\");\n            }\n            query.append(\" WHERE KEY=?\");\n            cqlQuery = query.toString();\n        }\n\n        String key = String.format(\"%0\" + session.getTotalKeysLength() + \"d\", index);\n        String formattedQuery = null;\n\n        TimerContext context = session.latency.time();\n\n        boolean success = false;\n        String exceptionMessage = null;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                if (session.usePreparedStatements())\n                {\n                    Integer stmntId = getPreparedStatement(client, cqlQuery);\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        client.execute_prepared_cql3_query(stmntId, Collections.singletonList(ByteBufferUtil.bytes(getUnQuotedCqlBlob(key))), session.getConsistencyLevel());\n                    else\n                        client.execute_prepared_cql_query(stmntId, Collections.singletonList(ByteBufferUtil.bytes(getUnQuotedCqlBlob(key))));\n                }\n                else\n                {\n                    if (formattedQuery == null)\n                        formattedQuery = formatCqlQuery(cqlQuery, Collections.singletonList(getUnQuotedCqlBlob(key)));\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        client.execute_cql3_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE, session.getConsistencyLevel());\n                    else\n                        client.execute_cql_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE);\n                }\n\n                success = true;\n            }\n            catch (Exception e)\n            {\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error incrementing key %s %s%n\",\n                                index,\n                                session.getRetryTimes(),\n                                key,\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        context.stop();\n    }","commit_id":"85d9ce1ba079f12c1a42a9d402ea3e8f038e262e","url":"https://github.com/apache/cassandra"},{"original_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n            throw new RuntimeException(\"Super columns are not implemented for CQL\");\n\n        if (cqlQuery == null)\n        {\n            StringBuilder query = new StringBuilder(\"SELECT \");\n\n            if (session.cqlVersion.startsWith(\"2\"))\n                query.append(\"FIRST \").append(session.getColumnsPerKey()).append(\" ''..''\");\n            else\n                query.append(\"*\");\n\n            String counterCF = session.cqlVersion.startsWith(\"2\") ? \"Counter1\" : \"Counter3\";\n\n            query.append(\" FROM \").append(wrapInQuotesIfRequired(counterCF));\n\n            if (session.cqlVersion.startsWith(\"2\"))\n                query.append(\" USING CONSISTENCY \").append(session.getConsistencyLevel().toString());\n\n            cqlQuery = query.append(\" WHERE KEY=?\").toString();\n        }\n\n        byte[] key = generateKey();\n        String formattedQuery = null;\n\n        long start = System.currentTimeMillis();\n\n        boolean success = false;\n        String exceptionMessage = null;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                CqlResult result = null;\n\n                if (session.usePreparedStatements())\n                {\n                    Integer stmntId = getPreparedStatement(client, cqlQuery);\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        result = client.execute_prepared_cql3_query(stmntId, Collections.singletonList(ByteBufferUtil.bytes(getUnQuotedCqlBlob(key))), session.getConsistencyLevel());\n                    else\n                        result = client.execute_prepared_cql_query(stmntId, Collections.singletonList(ByteBufferUtil.bytes(getUnQuotedCqlBlob(key))));\n                }\n                else\n                {\n                    if (formattedQuery == null)\n                        formattedQuery = formatCqlQuery(cqlQuery, Collections.singletonList(getUnQuotedCqlBlob(key)));\n\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        result = client.execute_cql3_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE, session.getConsistencyLevel());\n                    else\n                        result = client.execute_cql_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE);\n                }\n\n                assert result.type.equals(CqlResultType.ROWS) : \"expected ROWS result type\";\n                assert result.rows.size() == 0 : \"expected exactly one row\";\n                success = (result.rows.get(0).columns.size() != 0);\n            }\n            catch (Exception e)\n            {\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error reading counter key %s %s%n\",\n                                index,\n                                session.getRetryTimes(),\n                                new String(key),\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        session.latency.getAndAdd(System.currentTimeMillis() - start);\n    }","id":15179,"modified_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n            throw new RuntimeException(\"Super columns are not implemented for CQL\");\n\n        if (cqlQuery == null)\n        {\n            StringBuilder query = new StringBuilder(\"SELECT \");\n\n            if (session.cqlVersion.startsWith(\"2\"))\n                query.append(\"FIRST \").append(session.getColumnsPerKey()).append(\" ''..''\");\n            else\n                query.append(\"*\");\n\n            String counterCF = session.cqlVersion.startsWith(\"2\") ? \"Counter1\" : \"Counter3\";\n\n            query.append(\" FROM \").append(wrapInQuotesIfRequired(counterCF));\n\n            if (session.cqlVersion.startsWith(\"2\"))\n                query.append(\" USING CONSISTENCY \").append(session.getConsistencyLevel().toString());\n\n            cqlQuery = query.append(\" WHERE KEY=?\").toString();\n        }\n\n        byte[] key = generateKey();\n        String formattedQuery = null;\n\n        TimerContext context = session.latency.time();\n\n        boolean success = false;\n        String exceptionMessage = null;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                CqlResult result = null;\n\n                if (session.usePreparedStatements())\n                {\n                    Integer stmntId = getPreparedStatement(client, cqlQuery);\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        result = client.execute_prepared_cql3_query(stmntId, Collections.singletonList(ByteBufferUtil.bytes(getUnQuotedCqlBlob(key))), session.getConsistencyLevel());\n                    else\n                        result = client.execute_prepared_cql_query(stmntId, Collections.singletonList(ByteBufferUtil.bytes(getUnQuotedCqlBlob(key))));\n                }\n                else\n                {\n                    if (formattedQuery == null)\n                        formattedQuery = formatCqlQuery(cqlQuery, Collections.singletonList(getUnQuotedCqlBlob(key)));\n\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        result = client.execute_cql3_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE, session.getConsistencyLevel());\n                    else\n                        result = client.execute_cql_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE);\n                }\n\n                assert result.type.equals(CqlResultType.ROWS) : \"expected ROWS result type\";\n                assert result.rows.size() == 0 : \"expected exactly one row\";\n                success = (result.rows.get(0).columns.size() != 0);\n            }\n            catch (Exception e)\n            {\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error reading counter key %s %s%n\",\n                                index,\n                                session.getRetryTimes(),\n                                new String(key),\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        context.stop();\n    }","commit_id":"85d9ce1ba079f12c1a42a9d402ea3e8f038e262e","url":"https://github.com/apache/cassandra"},{"original_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n            throw new RuntimeException(\"Super columns are not implemented for CQL\");\n\n        if (values == null)\n            values = generateValues();\n\n        if (cqlQuery == null)\n        {\n            StringBuilder query = new StringBuilder(\"SELECT FIRST \").append(session.getColumnsPerKey())\n                 .append(\" ''..'' FROM Standard1\");\n\n            if (session.cqlVersion.startsWith(\"2\"))\n                query.append(\" USING CONSISTENCY \").append(session.getConsistencyLevel());\n\n            query.append(\" WHERE C1=\").append(getUnQuotedCqlBlob(values.get(1).array()))\n                 .append(\" AND KEY > ? LIMIT \").append(session.getKeysPerCall());\n\n            cqlQuery = query.toString();\n        }\n\n        String format = \"%0\" + session.getTotalKeysLength() + \"d\";\n        String startOffset = String.format(format, 0);\n\n        int expectedPerValue = session.getNumKeys() / values.size(), received = 0;\n\n        while (received < expectedPerValue)\n        {\n            long start = System.currentTimeMillis();\n\n            boolean success = false;\n            String exceptionMessage = null;\n            CqlResult results = null;\n            String formattedQuery = null;\n            List<String> queryParms = Collections.singletonList(getUnQuotedCqlBlob(startOffset));\n\n            for (int t = 0; t < session.getRetryTimes(); t++)\n            {\n                if (success)\n                    break;\n\n                try\n                {\n                    if (session.usePreparedStatements())\n                    {\n                        Integer stmntId = getPreparedStatement(client, cqlQuery);\n                        if (session.cqlVersion.startsWith(\"3\"))\n                            results = client.execute_prepared_cql3_query(stmntId, queryParamsAsByteBuffer(queryParms), session.getConsistencyLevel());\n                        else\n                            results = client.execute_prepared_cql_query(stmntId, queryParamsAsByteBuffer(queryParms));\n                    }\n                    else\n                    {\n                        if (formattedQuery ==  null)\n                            formattedQuery = formatCqlQuery(cqlQuery, queryParms);\n                        if (session.cqlVersion.startsWith(\"3\"))\n                            results = client.execute_cql3_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE, session.getConsistencyLevel());\n                        else\n                            results = client.execute_cql_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE);\n                    }\n\n                    success = (results.rows.size() != 0);\n                }\n                catch (Exception e)\n                {\n                    exceptionMessage = getExceptionMessage(e);\n                    success = false;\n                }\n            }\n\n            if (!success)\n            {\n                error(String.format(\"Operation [%d] retried %d times - error executing indexed range query with offset %s %s%n\",\n                                    index,\n                                    session.getRetryTimes(),\n                                    startOffset,\n                                    (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n            }\n\n            received += results.rows.size();\n\n            // convert max key found back to an integer, and increment it\n            startOffset = String.format(format, (1 + getMaxKey(results.rows)));\n\n            session.operations.getAndIncrement();\n            session.keys.getAndAdd(results.rows.size());\n            session.latency.getAndAdd(System.currentTimeMillis() - start);\n        }\n    }","id":15180,"modified_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n            throw new RuntimeException(\"Super columns are not implemented for CQL\");\n\n        if (values == null)\n            values = generateValues();\n\n        if (cqlQuery == null)\n        {\n            StringBuilder query = new StringBuilder(\"SELECT FIRST \").append(session.getColumnsPerKey())\n                 .append(\" ''..'' FROM Standard1\");\n\n            if (session.cqlVersion.startsWith(\"2\"))\n                query.append(\" USING CONSISTENCY \").append(session.getConsistencyLevel());\n\n            query.append(\" WHERE C1=\").append(getUnQuotedCqlBlob(values.get(1).array()))\n                 .append(\" AND KEY > ? LIMIT \").append(session.getKeysPerCall());\n\n            cqlQuery = query.toString();\n        }\n\n        String format = \"%0\" + session.getTotalKeysLength() + \"d\";\n        String startOffset = String.format(format, 0);\n\n        int expectedPerValue = session.getNumKeys() / values.size(), received = 0;\n\n        while (received < expectedPerValue)\n        {\n            TimerContext context = session.latency.time();\n\n            boolean success = false;\n            String exceptionMessage = null;\n            CqlResult results = null;\n            String formattedQuery = null;\n            List<String> queryParms = Collections.singletonList(getUnQuotedCqlBlob(startOffset));\n\n            for (int t = 0; t < session.getRetryTimes(); t++)\n            {\n                if (success)\n                    break;\n\n                try\n                {\n                    if (session.usePreparedStatements())\n                    {\n                        Integer stmntId = getPreparedStatement(client, cqlQuery);\n                        if (session.cqlVersion.startsWith(\"3\"))\n                            results = client.execute_prepared_cql3_query(stmntId, queryParamsAsByteBuffer(queryParms), session.getConsistencyLevel());\n                        else\n                            results = client.execute_prepared_cql_query(stmntId, queryParamsAsByteBuffer(queryParms));\n                    }\n                    else\n                    {\n                        if (formattedQuery ==  null)\n                            formattedQuery = formatCqlQuery(cqlQuery, queryParms);\n                        if (session.cqlVersion.startsWith(\"3\"))\n                            results = client.execute_cql3_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE, session.getConsistencyLevel());\n                        else\n                            results = client.execute_cql_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE);\n                    }\n\n                    success = (results.rows.size() != 0);\n                }\n                catch (Exception e)\n                {\n                    exceptionMessage = getExceptionMessage(e);\n                    success = false;\n                }\n            }\n\n            if (!success)\n            {\n                error(String.format(\"Operation [%d] retried %d times - error executing indexed range query with offset %s %s%n\",\n                                    index,\n                                    session.getRetryTimes(),\n                                    startOffset,\n                                    (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n            }\n\n            received += results.rows.size();\n\n            // convert max key found back to an integer, and increment it\n            startOffset = String.format(format, (1 + getMaxKey(results.rows)));\n\n            session.operations.getAndIncrement();\n            session.keys.getAndAdd(results.rows.size());\n            context.stop();\n        }\n    }","commit_id":"85d9ce1ba079f12c1a42a9d402ea3e8f038e262e","url":"https://github.com/apache/cassandra"},{"original_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n            throw new RuntimeException(\"Super columns are not implemented for CQL\");\n\n        if (values == null)\n            values = generateValues();\n\n        // Construct a query string once.\n        if (cqlQuery == null)\n        {\n            StringBuilder query = new StringBuilder(\"UPDATE \").append(wrapInQuotesIfRequired(\"Standard1\"));\n\n            if (session.cqlVersion.startsWith(\"2\"))\n                query.append(\" USING CONSISTENCY \").append(session.getConsistencyLevel().toString());\n\n            query.append(\" SET \");\n\n            for (int i = 0; i < session.getColumnsPerKey(); i++)\n            {\n                if (i > 0)\n                    query.append(',');\n\n                if (session.timeUUIDComparator)\n                {\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        throw new UnsupportedOperationException(\"Cannot use UUIDs in column names with CQL3\");\n\n                    query.append(wrapInQuotesIfRequired(UUIDGen.makeType1UUIDFromHost(Session.getLocalAddress()).toString()))\n                         .append(\" = ?\");\n                }\n                else\n                {\n                    query.append(wrapInQuotesIfRequired(\"C\" + i)).append(\" = ?\");\n                }\n            }\n\n            query.append(\" WHERE KEY=?\");\n            cqlQuery = query.toString();\n        }\n\n        List<String> queryParms = new ArrayList<String>();\n        for (int i = 0; i < session.getColumnsPerKey(); i++)\n        {\n            // Column value\n            queryParms.add(getUnQuotedCqlBlob(values.get(i % values.size()).array()));\n        }\n\n        String key = String.format(\"%0\" + session.getTotalKeysLength() + \"d\", index);\n        queryParms.add(getUnQuotedCqlBlob(key));\n\n        String formattedQuery = null;\n\n        long start = System.currentTimeMillis();\n\n        boolean success = false;\n        String exceptionMessage = null;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                if (session.usePreparedStatements())\n                {\n                    Integer stmntId = getPreparedStatement(client, cqlQuery);\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        client.execute_prepared_cql3_query(stmntId, queryParamsAsByteBuffer(queryParms), session.getConsistencyLevel());\n                    else\n                        client.execute_prepared_cql_query(stmntId, queryParamsAsByteBuffer(queryParms));\n                }\n                else\n                {\n                    if (formattedQuery == null)\n                        formattedQuery = formatCqlQuery(cqlQuery, queryParms);\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        client.execute_cql3_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE, session.getConsistencyLevel());\n                    else\n                        client.execute_cql_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE);\n                }\n\n                success = true;\n            }\n            catch (Exception e)\n            {\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error inserting key %s %s%n with query %s\",\n                                index,\n                                session.getRetryTimes(),\n                                key,\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\",\n                                cqlQuery));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        session.latency.getAndAdd(System.currentTimeMillis() - start);\n    }","id":15181,"modified_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n            throw new RuntimeException(\"Super columns are not implemented for CQL\");\n\n        if (values == null)\n            values = generateValues();\n\n        // Construct a query string once.\n        if (cqlQuery == null)\n        {\n            StringBuilder query = new StringBuilder(\"UPDATE \").append(wrapInQuotesIfRequired(\"Standard1\"));\n\n            if (session.cqlVersion.startsWith(\"2\"))\n                query.append(\" USING CONSISTENCY \").append(session.getConsistencyLevel().toString());\n\n            query.append(\" SET \");\n\n            for (int i = 0; i < session.getColumnsPerKey(); i++)\n            {\n                if (i > 0)\n                    query.append(',');\n\n                if (session.timeUUIDComparator)\n                {\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        throw new UnsupportedOperationException(\"Cannot use UUIDs in column names with CQL3\");\n\n                    query.append(wrapInQuotesIfRequired(UUIDGen.makeType1UUIDFromHost(Session.getLocalAddress()).toString()))\n                         .append(\" = ?\");\n                }\n                else\n                {\n                    query.append(wrapInQuotesIfRequired(\"C\" + i)).append(\" = ?\");\n                }\n            }\n\n            query.append(\" WHERE KEY=?\");\n            cqlQuery = query.toString();\n        }\n\n        List<String> queryParms = new ArrayList<String>();\n        for (int i = 0; i < session.getColumnsPerKey(); i++)\n        {\n            // Column value\n            queryParms.add(getUnQuotedCqlBlob(values.get(i % values.size()).array()));\n        }\n\n        String key = String.format(\"%0\" + session.getTotalKeysLength() + \"d\", index);\n        queryParms.add(getUnQuotedCqlBlob(key));\n\n        String formattedQuery = null;\n\n        TimerContext context = session.latency.time();\n\n        boolean success = false;\n        String exceptionMessage = null;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                if (session.usePreparedStatements())\n                {\n                    Integer stmntId = getPreparedStatement(client, cqlQuery);\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        client.execute_prepared_cql3_query(stmntId, queryParamsAsByteBuffer(queryParms), session.getConsistencyLevel());\n                    else\n                        client.execute_prepared_cql_query(stmntId, queryParamsAsByteBuffer(queryParms));\n                }\n                else\n                {\n                    if (formattedQuery == null)\n                        formattedQuery = formatCqlQuery(cqlQuery, queryParms);\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        client.execute_cql3_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE, session.getConsistencyLevel());\n                    else\n                        client.execute_cql_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE);\n                }\n\n                success = true;\n            }\n            catch (Exception e)\n            {\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error inserting key %s %s%n with query %s\",\n                                index,\n                                session.getRetryTimes(),\n                                key,\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\",\n                                cqlQuery));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        context.stop();\n    }","commit_id":"85d9ce1ba079f12c1a42a9d402ea3e8f038e262e","url":"https://github.com/apache/cassandra"},{"original_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n            throw new RuntimeException(\"Super columns are not implemented for CQL\");\n\n        if (cqlQuery == null)\n        {\n            StringBuilder query = new StringBuilder(\"SELECT FIRST \").append(session.getColumnsPerKey())\n                    .append(\" ''..'' FROM Standard1\");\n\n            if (session.cqlVersion.startsWith(\"2\"))\n                query.append(\" USING CONSISTENCY \").append(session.getConsistencyLevel().toString());\n\n            cqlQuery = query.append(\" WHERE KEY > ?\").toString();\n        }\n\n        String key = String.format(\"%0\" +  session.getTotalKeysLength() + \"d\", index);\n        String formattedQuery = null;\n\n        long startTime = System.currentTimeMillis();\n\n        boolean success = false;\n        String exceptionMessage = null;\n        int rowCount = 0;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                CqlResult result = null;\n\n                if (session.usePreparedStatements())\n                {\n                    Integer stmntId = getPreparedStatement(client, cqlQuery);\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        result = client.execute_prepared_cql3_query(stmntId, Collections.singletonList(ByteBufferUtil.bytes(getUnQuotedCqlBlob(key))), session.getConsistencyLevel());\n                    else\n                        result = client.execute_prepared_cql_query(stmntId, Collections.singletonList(ByteBufferUtil.bytes(getUnQuotedCqlBlob(key))));\n                }\n                else\n                {\n                    if (formattedQuery == null)\n                        formattedQuery = formatCqlQuery(cqlQuery, Collections.singletonList(getUnQuotedCqlBlob(key)));\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        result = client.execute_cql3_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE, session.getConsistencyLevel());\n                    else\n                        result = client.execute_cql_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE);\n                }\n\n                rowCount = result.rows.size();\n                success = (rowCount != 0);\n            }\n            catch (Exception e)\n            {\n                System.err.println(e);\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error executing range slice with offset %s %s%n\",\n                                index,\n                                session.getRetryTimes(),\n                                key,\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndAdd(rowCount);\n        session.latency.getAndAdd(System.currentTimeMillis() - startTime);\n    }","id":15182,"modified_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n            throw new RuntimeException(\"Super columns are not implemented for CQL\");\n\n        if (cqlQuery == null)\n        {\n            StringBuilder query = new StringBuilder(\"SELECT FIRST \").append(session.getColumnsPerKey())\n                    .append(\" ''..'' FROM Standard1\");\n\n            if (session.cqlVersion.startsWith(\"2\"))\n                query.append(\" USING CONSISTENCY \").append(session.getConsistencyLevel().toString());\n\n            cqlQuery = query.append(\" WHERE KEY > ?\").toString();\n        }\n\n        String key = String.format(\"%0\" +  session.getTotalKeysLength() + \"d\", index);\n        String formattedQuery = null;\n\n        TimerContext context = session.latency.time();\n\n        boolean success = false;\n        String exceptionMessage = null;\n        int rowCount = 0;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                CqlResult result = null;\n\n                if (session.usePreparedStatements())\n                {\n                    Integer stmntId = getPreparedStatement(client, cqlQuery);\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        result = client.execute_prepared_cql3_query(stmntId, Collections.singletonList(ByteBufferUtil.bytes(getUnQuotedCqlBlob(key))), session.getConsistencyLevel());\n                    else\n                        result = client.execute_prepared_cql_query(stmntId, Collections.singletonList(ByteBufferUtil.bytes(getUnQuotedCqlBlob(key))));\n                }\n                else\n                {\n                    if (formattedQuery == null)\n                        formattedQuery = formatCqlQuery(cqlQuery, Collections.singletonList(getUnQuotedCqlBlob(key)));\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        result = client.execute_cql3_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE, session.getConsistencyLevel());\n                    else\n                        result = client.execute_cql_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE);\n                }\n\n                rowCount = result.rows.size();\n                success = (rowCount != 0);\n            }\n            catch (Exception e)\n            {\n                System.err.println(e);\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error executing range slice with offset %s %s%n\",\n                                index,\n                                session.getRetryTimes(),\n                                key,\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndAdd(rowCount);\n        context.stop();\n    }","commit_id":"85d9ce1ba079f12c1a42a9d402ea3e8f038e262e","url":"https://github.com/apache/cassandra"},{"original_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n            throw new RuntimeException(\"Super columns are not implemented for CQL\");\n\n        if (cqlQuery == null)\n        {\n            StringBuilder query = new StringBuilder(\"SELECT \");\n\n            if (session.columnNames == null)\n            {\n                if (session.cqlVersion.startsWith(\"2\"))\n                    query.append(\"FIRST \").append(session.getColumnsPerKey()).append(\" ''..''\");\n                else\n                    query.append(\"*\");\n            }\n            else\n            {\n                for (int i = 0; i < session.columnNames.size(); i++)\n                {\n                    if (i > 0) query.append(\",\");\n                    query.append('?');\n                }\n            }\n\n            query.append(\" FROM \").append(wrapInQuotesIfRequired(\"Standard1\"));\n\n            if (session.cqlVersion.startsWith(\"2\"))\n                query.append(\" USING CONSISTENCY \").append(session.getConsistencyLevel().toString());\n            query.append(\" WHERE KEY=?\");\n\n            cqlQuery = query.toString();\n        }\n\n        List<String> queryParams = new ArrayList<String>();\n        if (session.columnNames != null)\n            for (int i = 0; i < session.columnNames.size(); i++)\n                queryParams.add(getUnQuotedCqlBlob(session.columnNames.get(i).array()));\n\n        byte[] key = generateKey();\n        queryParams.add(getUnQuotedCqlBlob(key));\n\n        String formattedQuery = null;\n\n        long start = System.currentTimeMillis();\n\n        boolean success = false;\n        String exceptionMessage = null;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                CqlResult result = null;\n\n                if (session.usePreparedStatements())\n                {\n                    Integer stmntId = getPreparedStatement(client, cqlQuery);\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        result = client.execute_prepared_cql3_query(stmntId, queryParamsAsByteBuffer(queryParams), session.getConsistencyLevel());\n                    else\n                        result = client.execute_prepared_cql_query(stmntId, queryParamsAsByteBuffer(queryParams));\n                }\n                else\n                {\n                    if (formattedQuery == null)\n                        formattedQuery = formatCqlQuery(cqlQuery, queryParams);\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        result = client.execute_cql3_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE, session.getConsistencyLevel());\n                    else\n                        result = client.execute_cql_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE);\n                }\n\n                success = (result.rows.get(0).columns.size() != 0);\n            }\n            catch (Exception e)\n            {\n\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error reading key %s %s%n with query %s\",\n                                index,\n                                session.getRetryTimes(),\n                                new String(key),\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\",\n                                cqlQuery));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        session.latency.getAndAdd(System.currentTimeMillis() - start);\n    }","id":15183,"modified_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n            throw new RuntimeException(\"Super columns are not implemented for CQL\");\n\n        if (cqlQuery == null)\n        {\n            StringBuilder query = new StringBuilder(\"SELECT \");\n\n            if (session.columnNames == null)\n            {\n                if (session.cqlVersion.startsWith(\"2\"))\n                    query.append(\"FIRST \").append(session.getColumnsPerKey()).append(\" ''..''\");\n                else\n                    query.append(\"*\");\n            }\n            else\n            {\n                for (int i = 0; i < session.columnNames.size(); i++)\n                {\n                    if (i > 0) query.append(\",\");\n                    query.append('?');\n                }\n            }\n\n            query.append(\" FROM \").append(wrapInQuotesIfRequired(\"Standard1\"));\n\n            if (session.cqlVersion.startsWith(\"2\"))\n                query.append(\" USING CONSISTENCY \").append(session.getConsistencyLevel().toString());\n            query.append(\" WHERE KEY=?\");\n\n            cqlQuery = query.toString();\n        }\n\n        List<String> queryParams = new ArrayList<String>();\n        if (session.columnNames != null)\n            for (int i = 0; i < session.columnNames.size(); i++)\n                queryParams.add(getUnQuotedCqlBlob(session.columnNames.get(i).array()));\n\n        byte[] key = generateKey();\n        queryParams.add(getUnQuotedCqlBlob(key));\n\n        String formattedQuery = null;\n\n        TimerContext context = session.latency.time();\n\n        boolean success = false;\n        String exceptionMessage = null;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                CqlResult result = null;\n\n                if (session.usePreparedStatements())\n                {\n                    Integer stmntId = getPreparedStatement(client, cqlQuery);\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        result = client.execute_prepared_cql3_query(stmntId, queryParamsAsByteBuffer(queryParams), session.getConsistencyLevel());\n                    else\n                        result = client.execute_prepared_cql_query(stmntId, queryParamsAsByteBuffer(queryParams));\n                }\n                else\n                {\n                    if (formattedQuery == null)\n                        formattedQuery = formatCqlQuery(cqlQuery, queryParams);\n                    if (session.cqlVersion.startsWith(\"3\"))\n                        result = client.execute_cql3_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE, session.getConsistencyLevel());\n                    else\n                        result = client.execute_cql_query(ByteBuffer.wrap(formattedQuery.getBytes()), Compression.NONE);\n                }\n\n                success = (result.rows.get(0).columns.size() != 0);\n            }\n            catch (Exception e)\n            {\n\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error reading key %s %s%n with query %s\",\n                                index,\n                                session.getRetryTimes(),\n                                new String(key),\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\",\n                                cqlQuery));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        context.stop();\n    }","commit_id":"85d9ce1ba079f12c1a42a9d402ea3e8f038e262e","url":"https://github.com/apache/cassandra"},{"original_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (values == null)\n            values = generateValues();\n\n        String format = \"%0\" + session.getTotalKeysLength() + \"d\";\n        SlicePredicate predicate = new SlicePredicate().setSlice_range(new SliceRange(ByteBufferUtil.EMPTY_BYTE_BUFFER,\n                                                                                      ByteBufferUtil.EMPTY_BYTE_BUFFER,\n                                                                                      false, session.getColumnsPerKey()));\n\n        ColumnParent parent = new ColumnParent(\"Standard1\");\n        int expectedPerValue = session.getNumKeys() / values.size();\n\n        ByteBuffer columnName = ByteBufferUtil.bytes(\"C1\");\n\n        int received = 0;\n\n        String startOffset = String.format(format, 0);\n        ByteBuffer value = values.get(1); // only C1 column is indexed\n\n        IndexExpression expression = new IndexExpression(columnName, IndexOperator.EQ, value);\n\n        while (received < expectedPerValue)\n        {\n            IndexClause clause = new IndexClause(Arrays.asList(expression),\n                                                 ByteBufferUtil.bytes(startOffset),\n                                                 session.getKeysPerCall());\n\n            List<KeySlice> results = null;\n            long start = System.currentTimeMillis();\n\n            boolean success = false;\n            String exceptionMessage = null;\n\n            for (int t = 0; t < session.getRetryTimes(); t++)\n            {\n                if (success)\n                    break;\n\n                try\n                {\n                    results = client.get_indexed_slices(parent, clause, predicate, session.getConsistencyLevel());\n                    success = (results.size() != 0);\n                }\n                catch (Exception e)\n                {\n                    exceptionMessage = getExceptionMessage(e);\n                    success = false;\n                }\n            }\n\n            if (!success)\n            {\n                error(String.format(\"Operation [%d] retried %d times - error on calling get_indexed_slices for offset %s %s%n\",\n                                    index,\n                                    session.getRetryTimes(),\n                                    startOffset,\n                                    (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n            }\n\n            received += results.size();\n\n            // convert max key found back to an integer, and increment it\n            startOffset = String.format(format, (1 + getMaxKey(results)));\n\n            session.operations.getAndIncrement();\n            session.keys.getAndAdd(results.size());\n            session.latency.getAndAdd(System.currentTimeMillis() - start);\n        }\n    }","id":15184,"modified_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (values == null)\n            values = generateValues();\n\n        String format = \"%0\" + session.getTotalKeysLength() + \"d\";\n        SlicePredicate predicate = new SlicePredicate().setSlice_range(new SliceRange(ByteBufferUtil.EMPTY_BYTE_BUFFER,\n                                                                                      ByteBufferUtil.EMPTY_BYTE_BUFFER,\n                                                                                      false, session.getColumnsPerKey()));\n\n        ColumnParent parent = new ColumnParent(\"Standard1\");\n        int expectedPerValue = session.getNumKeys() / values.size();\n\n        ByteBuffer columnName = ByteBufferUtil.bytes(\"C1\");\n\n        int received = 0;\n\n        String startOffset = String.format(format, 0);\n        ByteBuffer value = values.get(1); // only C1 column is indexed\n\n        IndexExpression expression = new IndexExpression(columnName, IndexOperator.EQ, value);\n\n        while (received < expectedPerValue)\n        {\n            IndexClause clause = new IndexClause(Arrays.asList(expression),\n                                                 ByteBufferUtil.bytes(startOffset),\n                                                 session.getKeysPerCall());\n\n            List<KeySlice> results = null;\n            TimerContext context = session.latency.time();\n\n            boolean success = false;\n            String exceptionMessage = null;\n\n            for (int t = 0; t < session.getRetryTimes(); t++)\n            {\n                if (success)\n                    break;\n\n                try\n                {\n                    results = client.get_indexed_slices(parent, clause, predicate, session.getConsistencyLevel());\n                    success = (results.size() != 0);\n                }\n                catch (Exception e)\n                {\n                    exceptionMessage = getExceptionMessage(e);\n                    success = false;\n                }\n            }\n\n            if (!success)\n            {\n                error(String.format(\"Operation [%d] retried %d times - error on calling get_indexed_slices for offset %s %s%n\",\n                                    index,\n                                    session.getRetryTimes(),\n                                    startOffset,\n                                    (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n            }\n\n            received += results.size();\n\n            // convert max key found back to an integer, and increment it\n            startOffset = String.format(format, (1 + getMaxKey(results)));\n\n            session.operations.getAndIncrement();\n            session.keys.getAndAdd(results.size());\n            context.stop();\n        }\n    }","commit_id":"85d9ce1ba079f12c1a42a9d402ea3e8f038e262e","url":"https://github.com/apache/cassandra"},{"original_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (values == null)\n            values = generateValues();\n\n        List<Column> columns = new ArrayList<Column>(session.getColumnsPerKey());\n        List<SuperColumn> superColumns = null;\n\n        // format used for keys\n        String format = \"%0\" + session.getTotalKeysLength() + \"d\";\n\n        for (int i = 0; i < session.getColumnsPerKey(); i++)\n        {\n            columns.add(new Column(columnName(i, session.timeUUIDComparator))\n                            .setValue(values.get(i % values.size()))\n                            .setTimestamp(FBUtilities.timestampMicros()));\n        }\n\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n        {\n            superColumns = new ArrayList<SuperColumn>();\n            // supers = [SuperColumn('S' + str(j), columns) for j in xrange(supers_per_key)]\n            for (int i = 0; i < session.getSuperColumns(); i++)\n            {\n                String superColumnName = \"S\" + Integer.toString(i);\n                superColumns.add(new SuperColumn(ByteBufferUtil.bytes(superColumnName), columns));\n            }\n        }\n\n        String rawKey = String.format(format, index);\n        Map<String, List<Mutation>> row = session.getColumnFamilyType() == ColumnFamilyType.Super\n                                        ? getSuperColumnsMutationMap(superColumns)\n                                        : getColumnsMutationMap(columns);\n        Map<ByteBuffer, Map<String, List<Mutation>>> record = Collections.singletonMap(ByteBufferUtil.bytes(rawKey), row);\n\n        long start = System.currentTimeMillis();\n\n        boolean success = false;\n        String exceptionMessage = null;\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                client.batch_mutate(record, session.getConsistencyLevel());\n                success = true;\n            }\n            catch (Exception e)\n            {\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error inserting key %s %s%n\",\n                                index,\n                                session.getRetryTimes(),\n                                rawKey,\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        session.latency.getAndAdd(System.currentTimeMillis() - start);\n    }","id":15185,"modified_method":"public void run(CassandraClient client) throws IOException\n    {\n        if (values == null)\n            values = generateValues();\n\n        List<Column> columns = new ArrayList<Column>(session.getColumnsPerKey());\n        List<SuperColumn> superColumns = null;\n\n        // format used for keys\n        String format = \"%0\" + session.getTotalKeysLength() + \"d\";\n\n        for (int i = 0; i < session.getColumnsPerKey(); i++)\n        {\n            columns.add(new Column(columnName(i, session.timeUUIDComparator))\n                            .setValue(values.get(i % values.size()))\n                            .setTimestamp(FBUtilities.timestampMicros()));\n        }\n\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n        {\n            superColumns = new ArrayList<SuperColumn>();\n            // supers = [SuperColumn('S' + str(j), columns) for j in xrange(supers_per_key)]\n            for (int i = 0; i < session.getSuperColumns(); i++)\n            {\n                String superColumnName = \"S\" + Integer.toString(i);\n                superColumns.add(new SuperColumn(ByteBufferUtil.bytes(superColumnName), columns));\n            }\n        }\n\n        String rawKey = String.format(format, index);\n        Map<String, List<Mutation>> row = session.getColumnFamilyType() == ColumnFamilyType.Super\n                                        ? getSuperColumnsMutationMap(superColumns)\n                                        : getColumnsMutationMap(columns);\n        Map<ByteBuffer, Map<String, List<Mutation>>> record = Collections.singletonMap(ByteBufferUtil.bytes(rawKey), row);\n\n        TimerContext context = session.latency.time();\n\n        boolean success = false;\n        String exceptionMessage = null;\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                client.batch_mutate(record, session.getConsistencyLevel());\n                success = true;\n            }\n            catch (Exception e)\n            {\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error inserting key %s %s%n\",\n                                index,\n                                session.getRetryTimes(),\n                                rawKey,\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        context.stop();\n    }","commit_id":"85d9ce1ba079f12c1a42a9d402ea3e8f038e262e","url":"https://github.com/apache/cassandra"},{"original_method":"public void run(CassandraClient client) throws IOException\n    {\n        SlicePredicate predicate = new SlicePredicate().setSlice_range(new SliceRange(ByteBufferUtil.EMPTY_BYTE_BUFFER,\n                                                                                      ByteBufferUtil.EMPTY_BYTE_BUFFER,\n                                                                                      false, session.getColumnsPerKey()));\n\n        int offset = index * session.getKeysPerThread();\n        Map<ByteBuffer,List<ColumnOrSuperColumn>> results;\n\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n        {\n            List<ByteBuffer> keys = generateKeys(offset, offset + session.getKeysPerCall());\n\n            for (int j = 0; j < session.getSuperColumns(); j++)\n            {\n                ColumnParent parent = new ColumnParent(\"Super1\").setSuper_column(ByteBufferUtil.bytes(\"S\" + j));\n\n                long start = System.currentTimeMillis();\n\n                boolean success = false;\n                String exceptionMessage = null;\n\n                for (int t = 0; t < session.getRetryTimes(); t++)\n                {\n                    if (success)\n                        break;\n\n                    try\n                    {\n                        results = client.multiget_slice(keys, parent, predicate, session.getConsistencyLevel());\n                        success = (results.size() != 0);\n                    }\n                    catch (Exception e)\n                    {\n                        exceptionMessage = getExceptionMessage(e);\n                    }\n                }\n\n                if (!success)\n                {\n                    error(String.format(\"Operation [%d] retried %d times - error on calling multiget_slice for keys %s %s%n\",\n                                        index,\n                                        session.getRetryTimes(),\n                                        keys,\n                                        (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n                }\n\n                session.operations.getAndIncrement();\n                session.keys.getAndAdd(keys.size());\n                session.latency.getAndAdd(System.currentTimeMillis() - start);\n\n                offset += session.getKeysPerCall();\n            }\n        }\n        else\n        {\n            ColumnParent parent = new ColumnParent(\"Standard1\");\n\n            List<ByteBuffer> keys = generateKeys(offset, offset + session.getKeysPerCall());\n\n            long start = System.currentTimeMillis();\n\n            boolean success = false;\n            String exceptionMessage = null;\n\n            for (int t = 0; t < session.getRetryTimes(); t++)\n            {\n                if (success)\n                    break;\n\n                try\n                {\n                    results = client.multiget_slice(keys, parent, predicate, session.getConsistencyLevel());\n                    success = (results.size() != 0);\n                }\n                catch (Exception e)\n                {\n                    exceptionMessage = getExceptionMessage(e);\n                    success = false;\n                }\n            }\n\n            if (!success)\n            {\n                error(String.format(\"Operation [%d] retried %d times - error on calling multiget_slice for keys %s %s%n\",\n                                    index,\n                                    session.getRetryTimes(),\n                                    keys,\n                                    (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n            }\n\n            session.operations.getAndIncrement();\n            session.keys.getAndAdd(keys.size());\n            session.latency.getAndAdd(System.currentTimeMillis() - start);\n\n            offset += session.getKeysPerCall();\n        }\n    }","id":15186,"modified_method":"public void run(CassandraClient client) throws IOException\n    {\n        SlicePredicate predicate = new SlicePredicate().setSlice_range(new SliceRange(ByteBufferUtil.EMPTY_BYTE_BUFFER,\n                                                                                      ByteBufferUtil.EMPTY_BYTE_BUFFER,\n                                                                                      false, session.getColumnsPerKey()));\n\n        int offset = index * session.getKeysPerThread();\n        Map<ByteBuffer,List<ColumnOrSuperColumn>> results;\n\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n        {\n            List<ByteBuffer> keys = generateKeys(offset, offset + session.getKeysPerCall());\n\n            for (int j = 0; j < session.getSuperColumns(); j++)\n            {\n                ColumnParent parent = new ColumnParent(\"Super1\").setSuper_column(ByteBufferUtil.bytes(\"S\" + j));\n\n                TimerContext context = session.latency.time();\n\n                boolean success = false;\n                String exceptionMessage = null;\n\n                for (int t = 0; t < session.getRetryTimes(); t++)\n                {\n                    if (success)\n                        break;\n\n                    try\n                    {\n                        results = client.multiget_slice(keys, parent, predicate, session.getConsistencyLevel());\n                        success = (results.size() != 0);\n                    }\n                    catch (Exception e)\n                    {\n                        exceptionMessage = getExceptionMessage(e);\n                    }\n                }\n\n                if (!success)\n                {\n                    error(String.format(\"Operation [%d] retried %d times - error on calling multiget_slice for keys %s %s%n\",\n                                        index,\n                                        session.getRetryTimes(),\n                                        keys,\n                                        (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n                }\n\n                session.operations.getAndIncrement();\n                session.keys.getAndAdd(keys.size());\n                context.stop();\n\n                offset += session.getKeysPerCall();\n            }\n        }\n        else\n        {\n            ColumnParent parent = new ColumnParent(\"Standard1\");\n\n            List<ByteBuffer> keys = generateKeys(offset, offset + session.getKeysPerCall());\n\n            TimerContext context = session.latency.time();\n\n            boolean success = false;\n            String exceptionMessage = null;\n\n            for (int t = 0; t < session.getRetryTimes(); t++)\n            {\n                if (success)\n                    break;\n\n                try\n                {\n                    results = client.multiget_slice(keys, parent, predicate, session.getConsistencyLevel());\n                    success = (results.size() != 0);\n                }\n                catch (Exception e)\n                {\n                    exceptionMessage = getExceptionMessage(e);\n                    success = false;\n                }\n            }\n\n            if (!success)\n            {\n                error(String.format(\"Operation [%d] retried %d times - error on calling multiget_slice for keys %s %s%n\",\n                                    index,\n                                    session.getRetryTimes(),\n                                    keys,\n                                    (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n            }\n\n            session.operations.getAndIncrement();\n            session.keys.getAndAdd(keys.size());\n            context.stop();\n\n            offset += session.getKeysPerCall();\n        }\n    }","commit_id":"85d9ce1ba079f12c1a42a9d402ea3e8f038e262e","url":"https://github.com/apache/cassandra"},{"original_method":"public void run(CassandraClient client) throws IOException\n    {\n        String format = \"%0\" + session.getTotalKeysLength() + \"d\";\n\n        // initial values\n        int count = session.getColumnsPerKey();\n\n        SlicePredicate predicate = new SlicePredicate().setSlice_range(new SliceRange(ByteBufferUtil.EMPTY_BYTE_BUFFER,\n                                                                                      ByteBufferUtil.EMPTY_BYTE_BUFFER,\n                                                                                      false,\n                                                                                      count));\n\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n        {\n            ByteBuffer start = ByteBufferUtil.bytes(String.format(format, index));\n\n            List<KeySlice> slices = new ArrayList<KeySlice>();\n            KeyRange range = new KeyRange(count).setStart_key(start).setEnd_key(ByteBufferUtil.EMPTY_BYTE_BUFFER);\n\n            for (int i = 0; i < session.getSuperColumns(); i++)\n            {\n                String superColumnName = \"S\" + Integer.toString(i);\n                ColumnParent parent = new ColumnParent(\"Super1\").setSuper_column(ByteBufferUtil.bytes(superColumnName));\n\n                long startTime = System.currentTimeMillis();\n\n                boolean success = false;\n                String exceptionMessage = null;\n\n                for (int t = 0; t < session.getRetryTimes(); t++)\n                {\n                    try\n                    {\n                        slices = client.get_range_slices(parent, predicate, range, session.getConsistencyLevel());\n                        success = (slices.size() != 0);\n                    }\n                    catch (Exception e)\n                    {\n                        exceptionMessage = getExceptionMessage(e);\n                        success = false;\n                    }\n                }\n\n                if (!success)\n                {\n                    error(String.format(\"Operation [%d] retried %d times - error on calling get_range_slices for range offset %s %s%n\",\n                                        index,\n                                        session.getRetryTimes(),\n                                        ByteBufferUtil.string(start),\n                                        (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n                }\n\n                session.operations.getAndIncrement();\n                session.latency.getAndAdd(System.currentTimeMillis() - startTime);\n            }\n\n            session.keys.getAndAdd(slices.size());\n        }\n        else\n        {\n            ColumnParent parent = new ColumnParent(\"Standard1\");\n\n            ByteBuffer start = ByteBufferUtil.bytes(String.format(format, index));\n\n            List<KeySlice> slices = new ArrayList<KeySlice>();\n            KeyRange range = new KeyRange(count).setStart_key(start).setEnd_key(ByteBufferUtil.EMPTY_BYTE_BUFFER);\n\n            long startTime = System.currentTimeMillis();\n\n            boolean success = false;\n            String exceptionMessage = null;\n\n            for (int t = 0; t < session.getRetryTimes(); t++)\n            {\n                if (success)\n                    break;\n\n                try\n                {\n                    slices = client.get_range_slices(parent, predicate, range, session.getConsistencyLevel());\n                    success = (slices.size() != 0);\n                }\n                catch (Exception e)\n                {\n                    exceptionMessage = getExceptionMessage(e);\n                    success = false;\n                }\n            }\n\n            if (!success)\n            {\n                error(String.format(\"Operation [%d] retried %d times - error on calling get_indexed_slices for range offset %s %s%n\",\n                                    index,\n                                    session.getRetryTimes(),\n                                    ByteBufferUtil.string(start),\n                                    (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n            }\n\n            session.operations.getAndIncrement();\n            session.keys.getAndAdd(slices.size());\n            session.latency.getAndAdd(System.currentTimeMillis() - startTime);\n        }\n    }","id":15187,"modified_method":"public void run(CassandraClient client) throws IOException\n    {\n        String format = \"%0\" + session.getTotalKeysLength() + \"d\";\n\n        // initial values\n        int count = session.getColumnsPerKey();\n\n        SlicePredicate predicate = new SlicePredicate().setSlice_range(new SliceRange(ByteBufferUtil.EMPTY_BYTE_BUFFER,\n                                                                                      ByteBufferUtil.EMPTY_BYTE_BUFFER,\n                                                                                      false,\n                                                                                      count));\n\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n        {\n            ByteBuffer start = ByteBufferUtil.bytes(String.format(format, index));\n\n            List<KeySlice> slices = new ArrayList<KeySlice>();\n            KeyRange range = new KeyRange(count).setStart_key(start).setEnd_key(ByteBufferUtil.EMPTY_BYTE_BUFFER);\n\n            for (int i = 0; i < session.getSuperColumns(); i++)\n            {\n                String superColumnName = \"S\" + Integer.toString(i);\n                ColumnParent parent = new ColumnParent(\"Super1\").setSuper_column(ByteBufferUtil.bytes(superColumnName));\n\n                TimerContext context = session.latency.time();\n\n                boolean success = false;\n                String exceptionMessage = null;\n\n                for (int t = 0; t < session.getRetryTimes(); t++)\n                {\n                    try\n                    {\n                        slices = client.get_range_slices(parent, predicate, range, session.getConsistencyLevel());\n                        success = (slices.size() != 0);\n                    }\n                    catch (Exception e)\n                    {\n                        exceptionMessage = getExceptionMessage(e);\n                        success = false;\n                    }\n                }\n\n                if (!success)\n                {\n                    error(String.format(\"Operation [%d] retried %d times - error on calling get_range_slices for range offset %s %s%n\",\n                                        index,\n                                        session.getRetryTimes(),\n                                        ByteBufferUtil.string(start),\n                                        (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n                }\n\n                session.operations.getAndIncrement();\n                context.stop();\n            }\n\n            session.keys.getAndAdd(slices.size());\n        }\n        else\n        {\n            ColumnParent parent = new ColumnParent(\"Standard1\");\n\n            ByteBuffer start = ByteBufferUtil.bytes(String.format(format, index));\n\n            List<KeySlice> slices = new ArrayList<KeySlice>();\n            KeyRange range = new KeyRange(count).setStart_key(start).setEnd_key(ByteBufferUtil.EMPTY_BYTE_BUFFER);\n\n            TimerContext context = session.latency.time();\n\n            boolean success = false;\n            String exceptionMessage = null;\n\n            for (int t = 0; t < session.getRetryTimes(); t++)\n            {\n                if (success)\n                    break;\n\n                try\n                {\n                    slices = client.get_range_slices(parent, predicate, range, session.getConsistencyLevel());\n                    success = (slices.size() != 0);\n                }\n                catch (Exception e)\n                {\n                    exceptionMessage = getExceptionMessage(e);\n                    success = false;\n                }\n            }\n\n            if (!success)\n            {\n                error(String.format(\"Operation [%d] retried %d times - error on calling get_indexed_slices for range offset %s %s%n\",\n                                    index,\n                                    session.getRetryTimes(),\n                                    ByteBufferUtil.string(start),\n                                    (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n            }\n\n            session.operations.getAndIncrement();\n            session.keys.getAndAdd(slices.size());\n            context.stop();\n        }\n    }","commit_id":"85d9ce1ba079f12c1a42a9d402ea3e8f038e262e","url":"https://github.com/apache/cassandra"},{"original_method":"private void runColumnReader(SlicePredicate predicate, Cassandra.Client client) throws IOException\n    {\n        ColumnParent parent = new ColumnParent(\"Standard1\");\n\n        byte[] key = generateKey();\n        ByteBuffer keyBuffer = ByteBuffer.wrap(key);\n\n        long start = System.currentTimeMillis();\n\n        boolean success = false;\n        String exceptionMessage = null;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                List<ColumnOrSuperColumn> columns;\n                columns = client.get_slice(keyBuffer, parent, predicate, session.getConsistencyLevel());\n                success = (columns.size() != 0);\n            }\n            catch (Exception e)\n            {\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error reading key %s %s%n\",\n                                index,\n                                session.getRetryTimes(),\n                                new String(key),\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        session.latency.getAndAdd(System.currentTimeMillis() - start);\n    }","id":15188,"modified_method":"private void runColumnReader(SlicePredicate predicate, Cassandra.Client client) throws IOException\n    {\n        ColumnParent parent = new ColumnParent(\"Standard1\");\n\n        byte[] key = generateKey();\n        ByteBuffer keyBuffer = ByteBuffer.wrap(key);\n\n        TimerContext context = session.latency.time();\n\n        boolean success = false;\n        String exceptionMessage = null;\n\n        for (int t = 0; t < session.getRetryTimes(); t++)\n        {\n            if (success)\n                break;\n\n            try\n            {\n                List<ColumnOrSuperColumn> columns;\n                columns = client.get_slice(keyBuffer, parent, predicate, session.getConsistencyLevel());\n                success = (columns.size() != 0);\n            }\n            catch (Exception e)\n            {\n                exceptionMessage = getExceptionMessage(e);\n                success = false;\n            }\n        }\n\n        if (!success)\n        {\n            error(String.format(\"Operation [%d] retried %d times - error reading key %s %s%n\",\n                                index,\n                                session.getRetryTimes(),\n                                new String(key),\n                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n        }\n\n        session.operations.getAndIncrement();\n        session.keys.getAndIncrement();\n        context.stop();\n    }","commit_id":"85d9ce1ba079f12c1a42a9d402ea3e8f038e262e","url":"https://github.com/apache/cassandra"},{"original_method":"private void runSuperColumnReader(SlicePredicate predicate, Cassandra.Client client) throws IOException\n    {\n        byte[] rawKey = generateKey();\n        ByteBuffer key = ByteBuffer.wrap(rawKey);\n\n        for (int j = 0; j < session.getSuperColumns(); j++)\n        {\n            String superColumn = 'S' + Integer.toString(j);\n            ColumnParent parent = new ColumnParent(\"Super1\").setSuper_column(superColumn.getBytes(UTF_8));\n\n            long start = System.currentTimeMillis();\n\n            boolean success = false;\n            String exceptionMessage = null;\n\n            for (int t = 0; t < session.getRetryTimes(); t++)\n            {\n                if (success)\n                    break;\n\n                try\n                {\n                    List<ColumnOrSuperColumn> columns;\n                    columns = client.get_slice(key, parent, predicate, session.getConsistencyLevel());\n                    success = (columns.size() != 0);\n                }\n                catch (Exception e)\n                {\n                    exceptionMessage = getExceptionMessage(e);\n                    success = false;\n                }\n            }\n\n            if (!success)\n            {\n                error(String.format(\"Operation [%d] retried %d times - error reading key %s %s%n\",\n                                    index,\n                                    session.getRetryTimes(),\n                                    new String(rawKey),\n                                    (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n            }\n\n            session.operations.getAndIncrement();\n            session.keys.getAndIncrement();\n            session.latency.getAndAdd(System.currentTimeMillis() - start);\n        }\n    }","id":15189,"modified_method":"private void runSuperColumnReader(SlicePredicate predicate, Cassandra.Client client) throws IOException\n    {\n        byte[] rawKey = generateKey();\n        ByteBuffer key = ByteBuffer.wrap(rawKey);\n\n        for (int j = 0; j < session.getSuperColumns(); j++)\n        {\n            String superColumn = 'S' + Integer.toString(j);\n            ColumnParent parent = new ColumnParent(\"Super1\").setSuper_column(superColumn.getBytes(UTF_8));\n\n            TimerContext context = session.latency.time();\n\n            boolean success = false;\n            String exceptionMessage = null;\n\n            for (int t = 0; t < session.getRetryTimes(); t++)\n            {\n                if (success)\n                    break;\n\n                try\n                {\n                    List<ColumnOrSuperColumn> columns;\n                    columns = client.get_slice(key, parent, predicate, session.getConsistencyLevel());\n                    success = (columns.size() != 0);\n                }\n                catch (Exception e)\n                {\n                    exceptionMessage = getExceptionMessage(e);\n                    success = false;\n                }\n            }\n\n            if (!success)\n            {\n                error(String.format(\"Operation [%d] retried %d times - error reading key %s %s%n\",\n                                    index,\n                                    session.getRetryTimes(),\n                                    new String(rawKey),\n                                    (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\"));\n            }\n\n            session.operations.getAndIncrement();\n            session.keys.getAndIncrement();\n            context.stop();\n        }\n    }","commit_id":"85d9ce1ba079f12c1a42a9d402ea3e8f038e262e","url":"https://github.com/apache/cassandra"},{"original_method":"public Session(String[] arguments) throws IllegalArgumentException, SyntaxException\n    {\n        float STDev = 0.1f;\n        CommandLineParser parser = new PosixParser();\n\n        try\n        {\n            CommandLine cmd = parser.parse(availableOptions, arguments);\n\n            if (cmd.getArgs().length > 0)\n            {\n                System.err.println(\"Application does not allow arbitrary arguments: \" + StringUtils.join(cmd.getArgList(), \", \"));\n                System.exit(1);\n            }\n\n            if (cmd.hasOption(\"h\"))\n                throw new IllegalArgumentException(\"help\");\n\n            if (cmd.hasOption(\"n\"))\n                numKeys = Integer.parseInt(cmd.getOptionValue(\"n\"));\n\n            if (cmd.hasOption(\"F\"))\n                numDifferentKeys = Integer.parseInt(cmd.getOptionValue(\"F\"));\n            else\n                numDifferentKeys = numKeys;\n\n            if (cmd.hasOption(\"N\"))\n                skipKeys = Float.parseFloat(cmd.getOptionValue(\"N\"));\n\n            if (cmd.hasOption(\"t\"))\n                threads = Integer.parseInt(cmd.getOptionValue(\"t\"));\n\n            if (cmd.hasOption(\"c\"))\n                columns = Integer.parseInt(cmd.getOptionValue(\"c\"));\n\n            if (cmd.hasOption(\"S\"))\n                columnSize = Integer.parseInt(cmd.getOptionValue(\"S\"));\n\n            if (cmd.hasOption(\"C\"))\n                cardinality = Integer.parseInt(cmd.getOptionValue(\"C\"));\n\n            if (cmd.hasOption(\"d\"))\n                nodes = cmd.getOptionValue(\"d\").split(\",\");\n\n            if (cmd.hasOption(\"D\"))\n            {\n                try\n                {\n                    String node = null;\n                    List<String> tmpNodes = new ArrayList<String>();\n                    BufferedReader in = new BufferedReader(new InputStreamReader(new FileInputStream(cmd.getOptionValue(\"D\"))));\n                    while ((node = in.readLine()) != null)\n                    {\n                        if (node.length() > 0)\n                            tmpNodes.add(node);\n                    }\n                    nodes = tmpNodes.toArray(new String[tmpNodes.size()]);\n                    in.close();\n                }\n                catch(IOException ioe)\n                {\n                    throw new RuntimeException(ioe);\n                }\n            }\n\n            if (cmd.hasOption(\"s\"))\n                STDev = Float.parseFloat(cmd.getOptionValue(\"s\"));\n\n            if (cmd.hasOption(\"r\"))\n                random = true;\n\n            outFileName = (cmd.hasOption(\"f\")) ? cmd.getOptionValue(\"f\") : null;\n\n            if (cmd.hasOption(\"p\"))\n                port = Integer.parseInt(cmd.getOptionValue(\"p\"));\n\n            if (cmd.hasOption(\"o\"))\n                operation = Stress.Operations.valueOf(cmd.getOptionValue(\"o\").toUpperCase());\n\n            if (cmd.hasOption(\"u\"))\n                superColumns = Integer.parseInt(cmd.getOptionValue(\"u\"));\n\n            if (cmd.hasOption(\"y\"))\n                columnFamilyType = ColumnFamilyType.valueOf(cmd.getOptionValue(\"y\"));\n\n            if (cmd.hasOption(\"K\"))\n            {\n                retryTimes = Integer.valueOf(cmd.getOptionValue(\"K\"));\n\n                if (retryTimes <= 0)\n                {\n                    throw new RuntimeException(\"--keep-trying option value should be > 0\");\n                }\n            }\n\n            if (cmd.hasOption(\"k\"))\n            {\n                retryTimes = 1;\n                ignoreErrors = true;\n            }\n\n\n            if (cmd.hasOption(\"i\"))\n                progressInterval = Integer.parseInt(cmd.getOptionValue(\"i\"));\n\n            if (cmd.hasOption(\"g\"))\n                keysPerCall = Integer.parseInt(cmd.getOptionValue(\"g\"));\n\n            if (cmd.hasOption(\"e\"))\n                consistencyLevel = ConsistencyLevel.valueOf(cmd.getOptionValue(\"e\").toUpperCase());\n\n            if (cmd.hasOption(\"x\"))\n                indexType = IndexType.valueOf(cmd.getOptionValue(\"x\").toUpperCase());\n\n            if (cmd.hasOption(\"R\"))\n                replicationStrategy = cmd.getOptionValue(\"R\");\n\n            if (cmd.hasOption(\"l\"))\n                replicationStrategyOptions.put(\"replication_factor\", String.valueOf(Integer.parseInt(cmd.getOptionValue(\"l\"))));\n            else if (replicationStrategy.endsWith(\"SimpleStrategy\"))\n                replicationStrategyOptions.put(\"replication_factor\", \"1\");\n\n            if (cmd.hasOption(\"L\"))\n            {\n                enable_cql = true;\n                cqlVersion = \"2.0.0\";\n            }\n\n            if (cmd.hasOption(\"L3\"))\n            {\n                enable_cql = true;\n                cqlVersion = \"3.0.0\";\n            }\n\n\n            if (cmd.hasOption(\"P\"))\n            {\n                if (!enable_cql)\n                {\n                    System.err.println(\"-P/--use-prepared-statements is only applicable with CQL (-L/--enable-cql)\");\n                    System.exit(-1);\n                }\n                use_prepared = true;\n            }\n\n            if (cmd.hasOption(\"O\"))\n            {\n                String[] pairs = StringUtils.split(cmd.getOptionValue(\"O\"), ',');\n\n                for (String pair : pairs)\n                {\n                    String[] keyAndValue = StringUtils.split(pair, ':');\n\n                    if (keyAndValue.length != 2)\n                        throw new RuntimeException(\"Invalid --strategy-properties value.\");\n\n                    replicationStrategyOptions.put(keyAndValue[0], keyAndValue[1]);\n                }\n            }\n\n            if (cmd.hasOption(\"W\"))\n                replicateOnWrite = false;\n\n            if (cmd.hasOption(\"I\"))\n                compression = cmd.getOptionValue(\"I\");\n\n            averageSizeValues = cmd.hasOption(\"V\");\n\n            try\n            {\n                sendToDaemon = cmd.hasOption(\"send-to\")\n                                ? InetAddress.getByName(cmd.getOptionValue(\"send-to\"))\n                                : null;\n            }\n            catch (UnknownHostException e)\n            {\n                throw new RuntimeException(e);\n            }\n\n            if (cmd.hasOption(\"Q\"))\n            {\n                AbstractType comparator = TypeParser.parse(DEFAULT_COMPARATOR);\n\n                String[] names = StringUtils.split(cmd.getOptionValue(\"Q\"), \",\");\n                columnNames = new ArrayList<ByteBuffer>(names.length);\n\n                for (String columnName : names)\n                    columnNames.add(comparator.fromString(columnName));\n            }\n            else\n            {\n                columnNames = null;\n            }\n\n            if (cmd.hasOption(\"Z\"))\n            {\n                compactionStrategy = cmd.getOptionValue(\"Z\");\n\n                try\n                {\n                    // validate compaction strategy class\n                    CFMetaData.createCompactionStrategy(compactionStrategy);\n                }\n                catch (ConfigurationException e)\n                {\n                    System.err.println(e.getMessage());\n                    System.exit(1);\n                }\n            }\n\n            if (cmd.hasOption(\"U\"))\n            {\n                AbstractType parsed = null;\n\n                try\n                {\n                    parsed = TypeParser.parse(cmd.getOptionValue(\"U\"));\n                }\n                catch (ConfigurationException e)\n                {\n                    System.err.println(e.getMessage());\n                    System.exit(1);\n                }\n\n                comparator = cmd.getOptionValue(\"U\");\n                timeUUIDComparator = parsed instanceof TimeUUIDType;\n\n                if (!(parsed instanceof TimeUUIDType || parsed instanceof AsciiType || parsed instanceof UTF8Type))\n                {\n                    System.err.println(\"Currently supported types are: TimeUUIDType, AsciiType, UTF8Type.\");\n                    System.exit(1);\n                }\n            }\n            else\n            {\n                comparator = null;\n                timeUUIDComparator = false;\n            }\n\n            if(cmd.hasOption(SSL_TRUSTSTORE))\n                encOptions.truststore = cmd.getOptionValue(SSL_TRUSTSTORE);\n\n            if(cmd.hasOption(SSL_TRUSTSTORE_PW))\n                encOptions.truststore_password = cmd.getOptionValue(SSL_TRUSTSTORE_PW);\n\n            if(cmd.hasOption(SSL_PROTOCOL))\n                encOptions.protocol = cmd.getOptionValue(SSL_PROTOCOL);\n\n            if(cmd.hasOption(SSL_ALGORITHM))\n                encOptions.algorithm = cmd.getOptionValue(SSL_ALGORITHM);\n\n            if(cmd.hasOption(SSL_STORE_TYPE))\n                encOptions.store_type = cmd.getOptionValue(SSL_STORE_TYPE);\n\n            if(cmd.hasOption(SSL_CIPHER_SUITES))\n                encOptions.cipher_suites = cmd.getOptionValue(SSL_CIPHER_SUITES).split(\",\");\n\n            if (cmd.hasOption(\"tf\"))\n                transportFactory = validateAndSetTransportFactory(cmd.getOptionValue(\"tf\"));\n\n        }\n        catch (ParseException e)\n        {\n            throw new IllegalArgumentException(e.getMessage(), e);\n        }\n        catch (ConfigurationException e)\n        {\n            throw new IllegalStateException(e.getMessage(), e);\n        }\n\n        mean  = numDifferentKeys / 2;\n        sigma = numDifferentKeys * STDev;\n\n        operations = new AtomicInteger();\n        keys = new AtomicInteger();\n        latency = new AtomicLong();\n    }","id":15190,"modified_method":"public Session(String[] arguments) throws IllegalArgumentException, SyntaxException\n    {\n        float STDev = 0.1f;\n        CommandLineParser parser = new PosixParser();\n\n        try\n        {\n            CommandLine cmd = parser.parse(availableOptions, arguments);\n\n            if (cmd.getArgs().length > 0)\n            {\n                System.err.println(\"Application does not allow arbitrary arguments: \" + StringUtils.join(cmd.getArgList(), \", \"));\n                System.exit(1);\n            }\n\n            if (cmd.hasOption(\"h\"))\n                throw new IllegalArgumentException(\"help\");\n\n            if (cmd.hasOption(\"n\"))\n                numKeys = Integer.parseInt(cmd.getOptionValue(\"n\"));\n\n            if (cmd.hasOption(\"F\"))\n                numDifferentKeys = Integer.parseInt(cmd.getOptionValue(\"F\"));\n            else\n                numDifferentKeys = numKeys;\n\n            if (cmd.hasOption(\"N\"))\n                skipKeys = Float.parseFloat(cmd.getOptionValue(\"N\"));\n\n            if (cmd.hasOption(\"t\"))\n                threads = Integer.parseInt(cmd.getOptionValue(\"t\"));\n\n            if (cmd.hasOption(\"c\"))\n                columns = Integer.parseInt(cmd.getOptionValue(\"c\"));\n\n            if (cmd.hasOption(\"S\"))\n                columnSize = Integer.parseInt(cmd.getOptionValue(\"S\"));\n\n            if (cmd.hasOption(\"C\"))\n                cardinality = Integer.parseInt(cmd.getOptionValue(\"C\"));\n\n            if (cmd.hasOption(\"d\"))\n                nodes = cmd.getOptionValue(\"d\").split(\",\");\n\n            if (cmd.hasOption(\"D\"))\n            {\n                try\n                {\n                    String node = null;\n                    List<String> tmpNodes = new ArrayList<String>();\n                    BufferedReader in = new BufferedReader(new InputStreamReader(new FileInputStream(cmd.getOptionValue(\"D\"))));\n                    while ((node = in.readLine()) != null)\n                    {\n                        if (node.length() > 0)\n                            tmpNodes.add(node);\n                    }\n                    nodes = tmpNodes.toArray(new String[tmpNodes.size()]);\n                    in.close();\n                }\n                catch(IOException ioe)\n                {\n                    throw new RuntimeException(ioe);\n                }\n            }\n\n            if (cmd.hasOption(\"s\"))\n                STDev = Float.parseFloat(cmd.getOptionValue(\"s\"));\n\n            if (cmd.hasOption(\"r\"))\n                random = true;\n\n            outFileName = (cmd.hasOption(\"f\")) ? cmd.getOptionValue(\"f\") : null;\n\n            if (cmd.hasOption(\"p\"))\n                port = Integer.parseInt(cmd.getOptionValue(\"p\"));\n\n            if (cmd.hasOption(\"o\"))\n                operation = Stress.Operations.valueOf(cmd.getOptionValue(\"o\").toUpperCase());\n\n            if (cmd.hasOption(\"u\"))\n                superColumns = Integer.parseInt(cmd.getOptionValue(\"u\"));\n\n            if (cmd.hasOption(\"y\"))\n                columnFamilyType = ColumnFamilyType.valueOf(cmd.getOptionValue(\"y\"));\n\n            if (cmd.hasOption(\"K\"))\n            {\n                retryTimes = Integer.valueOf(cmd.getOptionValue(\"K\"));\n\n                if (retryTimes <= 0)\n                {\n                    throw new RuntimeException(\"--keep-trying option value should be > 0\");\n                }\n            }\n\n            if (cmd.hasOption(\"k\"))\n            {\n                retryTimes = 1;\n                ignoreErrors = true;\n            }\n\n\n            if (cmd.hasOption(\"i\"))\n                progressInterval = Integer.parseInt(cmd.getOptionValue(\"i\"));\n\n            if (cmd.hasOption(\"g\"))\n                keysPerCall = Integer.parseInt(cmd.getOptionValue(\"g\"));\n\n            if (cmd.hasOption(\"e\"))\n                consistencyLevel = ConsistencyLevel.valueOf(cmd.getOptionValue(\"e\").toUpperCase());\n\n            if (cmd.hasOption(\"x\"))\n                indexType = IndexType.valueOf(cmd.getOptionValue(\"x\").toUpperCase());\n\n            if (cmd.hasOption(\"R\"))\n                replicationStrategy = cmd.getOptionValue(\"R\");\n\n            if (cmd.hasOption(\"l\"))\n                replicationStrategyOptions.put(\"replication_factor\", String.valueOf(Integer.parseInt(cmd.getOptionValue(\"l\"))));\n            else if (replicationStrategy.endsWith(\"SimpleStrategy\"))\n                replicationStrategyOptions.put(\"replication_factor\", \"1\");\n\n            if (cmd.hasOption(\"L\"))\n            {\n                enable_cql = true;\n                cqlVersion = \"2.0.0\";\n            }\n\n            if (cmd.hasOption(\"L3\"))\n            {\n                enable_cql = true;\n                cqlVersion = \"3.0.0\";\n            }\n\n\n            if (cmd.hasOption(\"P\"))\n            {\n                if (!enable_cql)\n                {\n                    System.err.println(\"-P/--use-prepared-statements is only applicable with CQL (-L/--enable-cql)\");\n                    System.exit(-1);\n                }\n                use_prepared = true;\n            }\n\n            if (cmd.hasOption(\"O\"))\n            {\n                String[] pairs = StringUtils.split(cmd.getOptionValue(\"O\"), ',');\n\n                for (String pair : pairs)\n                {\n                    String[] keyAndValue = StringUtils.split(pair, ':');\n\n                    if (keyAndValue.length != 2)\n                        throw new RuntimeException(\"Invalid --strategy-properties value.\");\n\n                    replicationStrategyOptions.put(keyAndValue[0], keyAndValue[1]);\n                }\n            }\n\n            if (cmd.hasOption(\"W\"))\n                replicateOnWrite = false;\n\n            if (cmd.hasOption(\"I\"))\n                compression = cmd.getOptionValue(\"I\");\n\n            averageSizeValues = cmd.hasOption(\"V\");\n\n            try\n            {\n                sendToDaemon = cmd.hasOption(\"send-to\")\n                                ? InetAddress.getByName(cmd.getOptionValue(\"send-to\"))\n                                : null;\n            }\n            catch (UnknownHostException e)\n            {\n                throw new RuntimeException(e);\n            }\n\n            if (cmd.hasOption(\"Q\"))\n            {\n                AbstractType comparator = TypeParser.parse(DEFAULT_COMPARATOR);\n\n                String[] names = StringUtils.split(cmd.getOptionValue(\"Q\"), \",\");\n                columnNames = new ArrayList<ByteBuffer>(names.length);\n\n                for (String columnName : names)\n                    columnNames.add(comparator.fromString(columnName));\n            }\n            else\n            {\n                columnNames = null;\n            }\n\n            if (cmd.hasOption(\"Z\"))\n            {\n                compactionStrategy = cmd.getOptionValue(\"Z\");\n\n                try\n                {\n                    // validate compaction strategy class\n                    CFMetaData.createCompactionStrategy(compactionStrategy);\n                }\n                catch (ConfigurationException e)\n                {\n                    System.err.println(e.getMessage());\n                    System.exit(1);\n                }\n            }\n\n            if (cmd.hasOption(\"U\"))\n            {\n                AbstractType parsed = null;\n\n                try\n                {\n                    parsed = TypeParser.parse(cmd.getOptionValue(\"U\"));\n                }\n                catch (ConfigurationException e)\n                {\n                    System.err.println(e.getMessage());\n                    System.exit(1);\n                }\n\n                comparator = cmd.getOptionValue(\"U\");\n                timeUUIDComparator = parsed instanceof TimeUUIDType;\n\n                if (!(parsed instanceof TimeUUIDType || parsed instanceof AsciiType || parsed instanceof UTF8Type))\n                {\n                    System.err.println(\"Currently supported types are: TimeUUIDType, AsciiType, UTF8Type.\");\n                    System.exit(1);\n                }\n            }\n            else\n            {\n                comparator = null;\n                timeUUIDComparator = false;\n            }\n\n            if(cmd.hasOption(SSL_TRUSTSTORE))\n                encOptions.truststore = cmd.getOptionValue(SSL_TRUSTSTORE);\n\n            if(cmd.hasOption(SSL_TRUSTSTORE_PW))\n                encOptions.truststore_password = cmd.getOptionValue(SSL_TRUSTSTORE_PW);\n\n            if(cmd.hasOption(SSL_PROTOCOL))\n                encOptions.protocol = cmd.getOptionValue(SSL_PROTOCOL);\n\n            if(cmd.hasOption(SSL_ALGORITHM))\n                encOptions.algorithm = cmd.getOptionValue(SSL_ALGORITHM);\n\n            if(cmd.hasOption(SSL_STORE_TYPE))\n                encOptions.store_type = cmd.getOptionValue(SSL_STORE_TYPE);\n\n            if(cmd.hasOption(SSL_CIPHER_SUITES))\n                encOptions.cipher_suites = cmd.getOptionValue(SSL_CIPHER_SUITES).split(\",\");\n\n            if (cmd.hasOption(\"tf\"))\n                transportFactory = validateAndSetTransportFactory(cmd.getOptionValue(\"tf\"));\n\n        }\n        catch (ParseException e)\n        {\n            throw new IllegalArgumentException(e.getMessage(), e);\n        }\n        catch (ConfigurationException e)\n        {\n            throw new IllegalStateException(e.getMessage(), e);\n        }\n\n        mean  = numDifferentKeys / 2;\n        sigma = numDifferentKeys * STDev;\n    }","commit_id":"85d9ce1ba079f12c1a42a9d402ea3e8f038e262e","url":"https://github.com/apache/cassandra"},{"original_method":"public void run()\n    {\n        long latency, oldLatency;\n        int epoch, total, oldTotal, keyCount, oldKeyCount;\n\n        // creating keyspace and column families\n        if (client.getOperation() == Stress.Operations.INSERT || client.getOperation() == Stress.Operations.COUNTER_ADD)\n            client.createKeySpaces();\n\n        int threadCount = client.getThreads();\n        Consumer[] consumers = new Consumer[threadCount];\n\n        output.println(\"total,interval_op_rate,interval_key_rate,avg_latency,elapsed_time\");\n\n        int itemsPerThread = client.getKeysPerThread();\n        int modulo = client.getNumKeys() % threadCount;\n\n        // creating required type of the threads for the test\n        for (int i = 0; i < threadCount; i++) {\n            if (i == threadCount - 1)\n                itemsPerThread += modulo; // last one is going to handle N + modulo items\n\n            consumers[i] = new Consumer(itemsPerThread);\n        }\n\n        Producer producer = new Producer();\n        producer.start();\n\n        // starting worker threads\n        for (int i = 0; i < threadCount; i++)\n            consumers[i].start();\n\n        // initialization of the values\n        boolean terminate = false;\n        latency = 0;\n        epoch = total = keyCount = 0;\n\n        int interval = client.getProgressInterval();\n        int epochIntervals = client.getProgressInterval() * 10;\n        long testStartTime = System.currentTimeMillis();\n\n        while (!terminate)\n        {\n            if (stop)\n            {\n                producer.stopProducer();\n\n                for (Consumer consumer : consumers)\n                    consumer.stopConsume();\n\n                break;\n            }\n\n            try\n            {\n                Thread.sleep(100);\n            }\n            catch (InterruptedException e)\n            {\n                throw new RuntimeException(e.getMessage(), e);\n            }\n\n            int alive = 0;\n            for (Thread thread : consumers)\n                if (thread.isAlive()) alive++;\n\n            if (alive == 0)\n                terminate = true;\n\n            epoch++;\n\n            if (terminate || epoch > epochIntervals)\n            {\n                epoch = 0;\n\n                oldTotal = total;\n                oldLatency = latency;\n                oldKeyCount = keyCount;\n\n                total = client.operations.get();\n                keyCount = client.keys.get();\n                latency = client.latency.get();\n\n                int opDelta = total - oldTotal;\n                int keyDelta = keyCount - oldKeyCount;\n                double latencyDelta = latency - oldLatency;\n\n                long currentTimeInSeconds = (System.currentTimeMillis() - testStartTime) / 1000;\n                String formattedDelta = (opDelta > 0) ? Double.toString(latencyDelta / (opDelta * 1000)) : \"NaN\";\n\n                output.println(String.format(\"%d,%d,%d,%s,%d\", total, opDelta / interval, keyDelta / interval, formattedDelta, currentTimeInSeconds));\n            }\n        }\n\n        // if any consumer failed, set the return code to failure.\n        returnCode = SUCCESS;\n        if (producer.isAlive())\n        {\n            producer.interrupt(); // if producer is still alive it means that we had errors in the consumers\n            returnCode = FAILURE;\n        }\n        for (Consumer consumer : consumers)\n            if (consumer.getReturnCode() == FAILURE)\n                returnCode = FAILURE;\n\n        if (returnCode == SUCCESS)\n            // marking an end of the output to the client\n            output.println(\"END\");\n        else\n            output.println(\"FAILURE\");\n\n    }","id":15191,"modified_method":"public void run()\n    {\n        Snapshot latency;\n        long oldLatency;\n        int epoch, total, oldTotal, keyCount, oldKeyCount;\n\n        // creating keyspace and column families\n        if (client.getOperation() == Stress.Operations.INSERT || client.getOperation() == Stress.Operations.COUNTER_ADD)\n            client.createKeySpaces();\n\n        int threadCount = client.getThreads();\n        Consumer[] consumers = new Consumer[threadCount];\n\n        output.println(\"total,interval_op_rate,interval_key_rate,latency/95th/99th,elapsed_time\");\n\n        int itemsPerThread = client.getKeysPerThread();\n        int modulo = client.getNumKeys() % threadCount;\n\n        // creating required type of the threads for the test\n        for (int i = 0; i < threadCount; i++) {\n            if (i == threadCount - 1)\n                itemsPerThread += modulo; // last one is going to handle N + modulo items\n\n            consumers[i] = new Consumer(itemsPerThread);\n        }\n\n        Producer producer = new Producer();\n        producer.start();\n\n        // starting worker threads\n        for (int i = 0; i < threadCount; i++)\n            consumers[i].start();\n\n        // initialization of the values\n        boolean terminate = false;\n        epoch = total = keyCount = 0;\n\n        int interval = client.getProgressInterval();\n        int epochIntervals = client.getProgressInterval() * 10;\n        long testStartTime = System.currentTimeMillis();\n\n        while (!terminate)\n        {\n            if (stop)\n            {\n                producer.stopProducer();\n\n                for (Consumer consumer : consumers)\n                    consumer.stopConsume();\n\n                break;\n            }\n\n            try\n            {\n                Thread.sleep(100);\n            }\n            catch (InterruptedException e)\n            {\n                throw new RuntimeException(e.getMessage(), e);\n            }\n\n            int alive = 0;\n            for (Thread thread : consumers)\n                if (thread.isAlive()) alive++;\n\n            if (alive == 0)\n                terminate = true;\n\n            epoch++;\n\n            if (terminate || epoch > epochIntervals)\n            {\n                epoch = 0;\n\n                oldTotal = total;\n                oldKeyCount = keyCount;\n\n                total = client.operations.get();\n                keyCount = client.keys.get();\n                latency = client.latency.getSnapshot();\n\n                int opDelta = total - oldTotal;\n                int keyDelta = keyCount - oldKeyCount;\n\n                long currentTimeInSeconds = (System.currentTimeMillis() - testStartTime) / 1000;\n\n                output.println(String.format(\"%d,%d,%d,%.1f,%.1f,%.1f,%d\",\n                                             total,\n                                             opDelta / interval,\n                                             keyDelta / interval,\n                                             latency.getMedian(), latency.get95thPercentile(), latency.get999thPercentile(),\n                                             currentTimeInSeconds));\n            }\n        }\n\n        // if any consumer failed, set the return code to failure.\n        returnCode = SUCCESS;\n        if (producer.isAlive())\n        {\n            producer.interrupt(); // if producer is still alive it means that we had errors in the consumers\n            returnCode = FAILURE;\n        }\n        for (Consumer consumer : consumers)\n            if (consumer.getReturnCode() == FAILURE)\n                returnCode = FAILURE;\n\n        if (returnCode == SUCCESS)\n            // marking an end of the output to the client\n            output.println(\"END\");\n        else\n            output.println(\"FAILURE\");\n\n    }","commit_id":"85d9ce1ba079f12c1a42a9d402ea3e8f038e262e","url":"https://github.com/apache/cassandra"},{"original_method":"@Override\n    public void visitBinaryExpression(PsiBinaryExpression expression) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"visitBinaryExpression \" + expression);\n      }\n      final PsiExpression lOperand = expression.getLOperand();\n      lOperand.accept(this);\n      Evaluator lResult = myResult;\n      final PsiExpression rOperand = expression.getROperand();\n      if(rOperand == null) {\n        throw new EvaluateRuntimeException(\n          EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", expression.getText()))\n        );\n      }\n      rOperand.accept(this);\n      Evaluator rResult = myResult;\n      IElementType opType = expression.getOperationSign().getTokenType();\n      PsiType expressionExpectedType = expression.getType();\n      if (expressionExpectedType == null) {\n        throw new EvaluateRuntimeException(\n          EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message(\"evaluation.error.unknown.expression.type\", expression.getText()))\n        );\n      }\n      myResult = createBinaryEvaluator(lResult, lOperand.getType(), rResult, rOperand.getType(), opType, expressionExpectedType);\n    }","id":15192,"modified_method":"@Override\n    public void visitBinaryExpression(PsiBinaryExpression expression) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"visitBinaryExpression \" + expression);\n      }\n      final PsiExpression lOperand = expression.getLOperand();\n      lOperand.accept(this);\n      Evaluator lResult = myResult;\n      final PsiExpression rOperand = expression.getROperand();\n      if(rOperand == null) {\n        throwEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", expression.getText())); return;\n      }\n      rOperand.accept(this);\n      Evaluator rResult = myResult;\n      IElementType opType = expression.getOperationSign().getTokenType();\n      PsiType expressionExpectedType = expression.getType();\n      if (expressionExpectedType == null) {\n        throwEvaluateException(DebuggerBundle.message(\"evaluation.error.unknown.expression.type\", expression.getText()));\n      }\n      myResult = createBinaryEvaluator(lResult, lOperand.getType(), rResult, rOperand.getType(), opType, expressionExpectedType);\n    }","commit_id":"2d0f554264376c87e40df58f3797e169b2de14ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitDeclarationStatement(PsiDeclarationStatement statement) {\n      List<Evaluator> evaluators = new ArrayList<Evaluator>();\n\n      PsiElement[] declaredElements = statement.getDeclaredElements();\n      for (PsiElement declaredElement : declaredElements) {\n        if (declaredElement instanceof PsiLocalVariable) {\n          if (myCurrentFragmentEvaluator != null) {\n            final PsiLocalVariable localVariable = ((PsiLocalVariable)declaredElement);\n\n            final PsiType lType = localVariable.getType();\n\n            PsiElementFactory elementFactory = JavaPsiFacade.getInstance(localVariable.getProject()).getElementFactory();\n            try {\n              PsiExpression initialValue = elementFactory.createExpressionFromText(PsiTypesUtil.getDefaultValueOfType(lType), null);\n              Object value = JavaConstantExpressionEvaluator.computeConstantExpression(initialValue, true);\n              myCurrentFragmentEvaluator.setInitialValue(localVariable.getName(), value);\n            }\n            catch (IncorrectOperationException e) {\n              LOG.error(e);\n            }\n            catch (EvaluateException e) {\n              throw new EvaluateRuntimeException(e);\n            }\n\n            PsiExpression initializer = localVariable.getInitializer();\n            if (initializer != null) {\n              try {\n                if (!TypeConversionUtil.areTypesAssignmentCompatible(localVariable.getType(), initializer)) {\n                  throw new EvaluateRuntimeException(EvaluateExceptionUtil.createEvaluateException(\n                    DebuggerBundle.message(\"evaluation.error.incompatible.variable.initializer.type\", localVariable.getName())));\n                }\n                final PsiType rType = initializer.getType();\n                initializer.accept(this);\n                Evaluator rEvaluator = myResult;\n\n                PsiExpression localVarReference = elementFactory.createExpressionFromText(localVariable.getName(), initializer);\n\n                localVarReference.accept(this);\n                Evaluator lEvaluator = myResult;\n                rEvaluator = handleAssignmentBoxingAndPrimitiveTypeConversions(localVarReference.getType(), rType, rEvaluator);\n\n                Evaluator assignment = new AssignmentEvaluator(lEvaluator, rEvaluator);\n                evaluators.add(assignment);\n              }\n              catch (IncorrectOperationException e) {\n                LOG.error(e);\n              }\n            }\n          }\n          else {\n            throw new EvaluateRuntimeException(new EvaluateException(\n              DebuggerBundle.message(\"evaluation.error.local.variable.declarations.not.supported\"), null));\n          }\n        }\n        else {\n          throw new EvaluateRuntimeException(new EvaluateException(\n            DebuggerBundle.message(\"evaluation.error.unsupported.declaration\", declaredElement.getText()), null));\n        }\n      }\n\n      if(evaluators.size() > 0) {\n        CodeFragmentEvaluator codeFragmentEvaluator = new CodeFragmentEvaluator(myCurrentFragmentEvaluator);\n        codeFragmentEvaluator.setStatements(evaluators.toArray(new Evaluator[0]));\n        myResult = codeFragmentEvaluator;\n      } else {\n        myResult = null;\n      }\n    }","id":15193,"modified_method":"@Override\n    public void visitDeclarationStatement(PsiDeclarationStatement statement) {\n      List<Evaluator> evaluators = new ArrayList<Evaluator>();\n\n      PsiElement[] declaredElements = statement.getDeclaredElements();\n      for (PsiElement declaredElement : declaredElements) {\n        if (declaredElement instanceof PsiLocalVariable) {\n          if (myCurrentFragmentEvaluator != null) {\n            final PsiLocalVariable localVariable = (PsiLocalVariable)declaredElement;\n\n            final PsiType lType = localVariable.getType();\n\n            PsiElementFactory elementFactory = JavaPsiFacade.getInstance(localVariable.getProject()).getElementFactory();\n            try {\n              PsiExpression initialValue = elementFactory.createExpressionFromText(PsiTypesUtil.getDefaultValueOfType(lType), null);\n              Object value = JavaConstantExpressionEvaluator.computeConstantExpression(initialValue, true);\n              myCurrentFragmentEvaluator.setInitialValue(localVariable.getName(), value);\n            }\n            catch (IncorrectOperationException e) {\n              LOG.error(e);\n            }\n            catch (EvaluateException e) {\n              throw new EvaluateRuntimeException(e);\n            }\n\n            PsiExpression initializer = localVariable.getInitializer();\n            if (initializer != null) {\n              try {\n                if (!TypeConversionUtil.areTypesAssignmentCompatible(lType, initializer)) {\n                  throwEvaluateException(\n                    DebuggerBundle.message(\"evaluation.error.incompatible.variable.initializer.type\", localVariable.getName()));\n                }\n                final PsiType rType = initializer.getType();\n                initializer.accept(this);\n                Evaluator rEvaluator = myResult;\n\n                PsiExpression localVarReference = elementFactory.createExpressionFromText(localVariable.getName(), initializer);\n\n                localVarReference.accept(this);\n                Evaluator lEvaluator = myResult;\n                rEvaluator = handleAssignmentBoxingAndPrimitiveTypeConversions(localVarReference.getType(), rType, rEvaluator);\n\n                Evaluator assignment = new AssignmentEvaluator(lEvaluator, rEvaluator);\n                evaluators.add(assignment);\n              }\n              catch (IncorrectOperationException e) {\n                LOG.error(e);\n              }\n            }\n          }\n          else {\n            throw new EvaluateRuntimeException(new EvaluateException(\n              DebuggerBundle.message(\"evaluation.error.local.variable.declarations.not.supported\"), null));\n          }\n        }\n        else {\n          throw new EvaluateRuntimeException(new EvaluateException(\n            DebuggerBundle.message(\"evaluation.error.unsupported.declaration\", declaredElement.getText()), null));\n        }\n      }\n\n      if(!evaluators.isEmpty()) {\n        CodeFragmentEvaluator codeFragmentEvaluator = new CodeFragmentEvaluator(myCurrentFragmentEvaluator);\n        codeFragmentEvaluator.setStatements(evaluators.toArray(new Evaluator[evaluators.size()]));\n        myResult = codeFragmentEvaluator;\n      } else {\n        myResult = null;\n      }\n    }","commit_id":"2d0f554264376c87e40df58f3797e169b2de14ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitPrefixExpression(final PsiPrefixExpression expression) {\n      final PsiType expressionType = expression.getType();\n      if(expressionType == null) {\n        throw new EvaluateRuntimeException(\n          EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message(\"evaluation.error.unknown.expression.type\", expression.getText()))\n        );\n      }\n\n      final PsiExpression operandExpression = expression.getOperand();\n      if (operandExpression == null) {\n        throw new EvaluateRuntimeException(\n          EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message(\"evaluation.error.unknown.expression.operand\", expression.getText()))\n        );\n      }\n      \n      operandExpression.accept(this);\n      Evaluator operandEvaluator = myResult;\n\n      // handle unboxing issues\n      final PsiType operandType = operandExpression.getType();\n      @Nullable\n      final PsiType unboxedOperandType = PsiPrimitiveType.getUnboxedType(operandType);\n\n      final IElementType operation = expression.getOperationSign().getTokenType();\n\n      if(operation == JavaTokenType.PLUSPLUS || operation == JavaTokenType.MINUSMINUS) {\n        try {\n          final BinaryExpressionEvaluator rightEval = createBinaryEvaluator(\n            operandEvaluator, operandType,\n            new LiteralEvaluator(Integer.valueOf(1), \"int\"), PsiType.INT,\n            operation == JavaTokenType.PLUSPLUS ? JavaTokenType.PLUS : JavaTokenType.MINUS,\n            unboxedOperandType!= null? unboxedOperandType : operandType\n          );\n          myResult = new AssignmentEvaluator(operandEvaluator, unboxedOperandType != null? new BoxingEvaluator(rightEval) : rightEval);\n        }\n        catch (IncorrectOperationException e) {\n          LOG.error(e);\n        }\n      }\n      else {\n        if (JavaTokenType.PLUS.equals(operation) || JavaTokenType.MINUS.equals(operation)|| JavaTokenType.TILDE.equals(operation)) {\n          operandEvaluator = handleUnaryNumericPromotion(operandType, operandEvaluator);\n        }\n        else {\n          if (unboxedOperandType != null) {\n            operandEvaluator = new UnBoxingEvaluator(operandEvaluator);\n          }\n        }\n        myResult = new UnaryExpressionEvaluator(operation, expressionType.getCanonicalText(), operandEvaluator, expression.getOperationSign().getText());\n      }\n    }","id":15194,"modified_method":"@Override\n    public void visitPrefixExpression(final PsiPrefixExpression expression) {\n      final PsiType expressionType = expression.getType();\n      if(expressionType == null) {\n        throwEvaluateException(DebuggerBundle.message(\"evaluation.error.unknown.expression.type\", expression.getText()));\n      }\n\n      final PsiExpression operandExpression = expression.getOperand();\n      if (operandExpression == null) {\n        throwEvaluateException(DebuggerBundle.message(\"evaluation.error.unknown.expression.operand\", expression.getText()));\n      }\n      \n      operandExpression.accept(this);\n      Evaluator operandEvaluator = myResult;\n\n      // handle unboxing issues\n      final PsiType operandType = operandExpression.getType();\n      @Nullable\n      final PsiType unboxedOperandType = PsiPrimitiveType.getUnboxedType(operandType);\n\n      final IElementType operation = expression.getOperationSign().getTokenType();\n\n      if(operation == JavaTokenType.PLUSPLUS || operation == JavaTokenType.MINUSMINUS) {\n        try {\n          final BinaryExpressionEvaluator rightEval = createBinaryEvaluator(\n            operandEvaluator, operandType,\n            new LiteralEvaluator(Integer.valueOf(1), \"int\"), PsiType.INT,\n            operation == JavaTokenType.PLUSPLUS ? JavaTokenType.PLUS : JavaTokenType.MINUS,\n            unboxedOperandType!= null? unboxedOperandType : operandType\n          );\n          myResult = new AssignmentEvaluator(operandEvaluator, unboxedOperandType != null? new BoxingEvaluator(rightEval) : rightEval);\n        }\n        catch (IncorrectOperationException e) {\n          LOG.error(e);\n        }\n      }\n      else {\n        if (JavaTokenType.PLUS.equals(operation) || JavaTokenType.MINUS.equals(operation)|| JavaTokenType.TILDE.equals(operation)) {\n          operandEvaluator = handleUnaryNumericPromotion(operandType, operandEvaluator);\n        }\n        else {\n          if (unboxedOperandType != null) {\n            operandEvaluator = new UnBoxingEvaluator(operandEvaluator);\n          }\n        }\n        myResult = new UnaryExpressionEvaluator(operation, expressionType.getCanonicalText(), operandEvaluator, expression.getOperationSign().getText());\n      }\n    }","commit_id":"2d0f554264376c87e40df58f3797e169b2de14ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitConditionalExpression(PsiConditionalExpression expression) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"visitConditionalExpression \" + expression);\n      }\n      final PsiExpression thenExpression = expression.getThenExpression();\n      final PsiExpression elseExpression = expression.getElseExpression();\n      if (thenExpression == null || elseExpression == null){\n        throw new EvaluateRuntimeException(EvaluateExceptionUtil\n          .createEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", expression.getText())));\n      }\n      PsiExpression condition = expression.getCondition();\n      condition.accept(this);\n      if (myResult == null) {\n        throw new EvaluateRuntimeException(EvaluateExceptionUtil\n          .createEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", condition.getText())));\n      }\n      Evaluator conditionEvaluator = myResult;\n      thenExpression.accept(this);\n      if (myResult == null) {\n        throw new EvaluateRuntimeException(EvaluateExceptionUtil\n          .createEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", thenExpression.getText())));\n      }\n      Evaluator thenEvaluator = myResult;\n      elseExpression.accept(this);\n      if (myResult == null) {\n        throw new EvaluateRuntimeException(EvaluateExceptionUtil\n          .createEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", elseExpression.getText())));\n      }\n      Evaluator elseEvaluator = myResult;\n      myResult = new ConditionalExpressionEvaluator(conditionEvaluator, thenEvaluator, elseEvaluator);\n    }","id":15195,"modified_method":"@Override\n    public void visitConditionalExpression(PsiConditionalExpression expression) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"visitConditionalExpression \" + expression);\n      }\n      final PsiExpression thenExpression = expression.getThenExpression();\n      final PsiExpression elseExpression = expression.getElseExpression();\n      if (thenExpression == null || elseExpression == null){\n        throwEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", expression.getText())); return;\n      }\n      PsiExpression condition = expression.getCondition();\n      condition.accept(this);\n      if (myResult == null) {\n        throwEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", condition.getText())); return;\n      }\n      Evaluator conditionEvaluator = myResult;\n      thenExpression.accept(this);\n      if (myResult == null) {\n        throwEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", thenExpression.getText())); return;\n      }\n      Evaluator thenEvaluator = myResult;\n      elseExpression.accept(this);\n      if (myResult == null) {\n        throwEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", elseExpression.getText())); return;\n      }\n      Evaluator elseEvaluator = myResult;\n      myResult = new ConditionalExpressionEvaluator(conditionEvaluator, thenEvaluator, elseEvaluator);\n    }","commit_id":"2d0f554264376c87e40df58f3797e169b2de14ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitInstanceOfExpression(PsiInstanceOfExpression expression) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"visitInstanceOfExpression \" + expression);\n      }\n      PsiTypeElement checkType = expression.getCheckType();\n      if(checkType == null) {\n        throw new EvaluateRuntimeException(EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", expression.getText())));\n      }\n      PsiType type = checkType.getType();\n      expression.getOperand().accept(this);\n//    ClassObjectEvaluator typeEvaluator = new ClassObjectEvaluator(type.getCanonicalText());\n      Evaluator operandEvaluator = myResult;\n      myResult = new InstanceofEvaluator(operandEvaluator, new TypeEvaluator(JVMNameUtil.getJVMQualifiedName(type)));\n    }","id":15196,"modified_method":"@Override\n    public void visitInstanceOfExpression(PsiInstanceOfExpression expression) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"visitInstanceOfExpression \" + expression);\n      }\n      PsiTypeElement checkType = expression.getCheckType();\n      if(checkType == null) {\n        throwEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", expression.getText()));\n        return;\n      }\n      PsiType type = checkType.getType();\n      expression.getOperand().accept(this);\n//    ClassObjectEvaluator typeEvaluator = new ClassObjectEvaluator(type.getCanonicalText());\n      Evaluator operandEvaluator = myResult;\n      myResult = new InstanceofEvaluator(operandEvaluator, new TypeEvaluator(JVMNameUtil.getJVMQualifiedName(type)));\n    }","commit_id":"2d0f554264376c87e40df58f3797e169b2de14ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitNewExpression(PsiNewExpression expression) {\n      PsiType expressionPsiType = expression.getType();\n      if (expressionPsiType instanceof PsiArrayType) {\n        Evaluator dimensionEvaluator = null;\n        PsiExpression[] dimensions = expression.getArrayDimensions();\n        if (dimensions.length == 1){\n          PsiExpression dimensionExpression = dimensions[0];\n          dimensionExpression.accept(this);\n          if (myResult != null) {\n            dimensionEvaluator = handleUnaryNumericPromotion(dimensionExpression.getType(), myResult);\n          }\n          else {\n            throw new EvaluateRuntimeException(EvaluateExceptionUtil.createEvaluateException(\n              DebuggerBundle.message(\"evaluation.error.invalid.array.dimension.expression\", dimensionExpression.getText())));\n          }\n        }\n        else if (dimensions.length > 1){\n          throw new EvaluateRuntimeException(EvaluateExceptionUtil.createEvaluateException(\n            DebuggerBundle.message(\"evaluation.error.multi.dimensional.arrays.creation.not.supported\"))\n          );\n        }\n\n        Evaluator initializerEvaluator = null;\n        PsiArrayInitializerExpression arrayInitializer = expression.getArrayInitializer();\n        if (arrayInitializer != null) {\n          if (dimensionEvaluator != null) { // initializer already exists\n            throw new EvaluateRuntimeException(EvaluateExceptionUtil\n              .createEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", expression.getText())));\n          }\n          arrayInitializer.accept(this);\n          if (myResult != null) {\n            initializerEvaluator = handleUnaryNumericPromotion(arrayInitializer.getType(), myResult);\n          }\n          else {\n            throw new EvaluateRuntimeException(EvaluateExceptionUtil\n              .createEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", arrayInitializer.getText())));\n          }\n          /*\n          PsiExpression[] initializers = arrayInitializer.getInitializers();\n          initializerEvaluators = new Evaluator[initializers.length];\n          for (int idx = 0; idx < initializers.length; idx++) {\n            PsiExpression initializer = initializers[idx];\n            initializer.accept(this);\n            if (myResult instanceof Evaluator) {\n              initializerEvaluators[idx] = myResult;\n            }\n            else {\n              throw new EvaluateException(\"Invalid expression for array initializer: \" + initializer.getText(), true);\n            }\n          }\n          */\n        }\n        if (dimensionEvaluator == null && initializerEvaluator == null) {\n          throw new EvaluateRuntimeException(EvaluateExceptionUtil\n            .createEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", expression.getText())));\n        }\n        myResult = new NewArrayInstanceEvaluator(\n          new TypeEvaluator(JVMNameUtil.getJVMQualifiedName(expressionPsiType)),\n          dimensionEvaluator,\n          initializerEvaluator\n        );\n      }\n      else { // must be a class ref\n        LOG.assertTrue(expressionPsiType instanceof PsiClassType);\n        PsiClass aClass = ((PsiClassType)expressionPsiType).resolve();\n        if(aClass instanceof PsiAnonymousClass) {\n          throw new EvaluateRuntimeException(EvaluateExceptionUtil.createEvaluateException(\n            DebuggerBundle.message(\"evaluation.error.anonymous.class.evaluation.not.supported\"))\n          );\n        }\n        PsiExpressionList argumentList = expression.getArgumentList();\n        if (argumentList == null) {\n          throw new EvaluateRuntimeException(EvaluateExceptionUtil\n            .createEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", expression.getText())));\n        }\n        PsiExpression[] argExpressions = argumentList.getExpressions();\n        PsiMethod constructor = expression.resolveConstructor();\n        if (constructor == null && argExpressions.length > 0) {\n          throw new EvaluateRuntimeException(new EvaluateException(\n            DebuggerBundle.message(\"evaluation.error.cannot.resolve.constructor\", expression.getText()), null));\n        }\n        Evaluator[] argumentEvaluators = new Evaluator[argExpressions.length];\n        // evaluate arguments\n        for (int idx = 0; idx < argExpressions.length; idx++) {\n          PsiExpression argExpression = argExpressions[idx];\n          argExpression.accept(this);\n          if (myResult != null) {\n            argumentEvaluators[idx] = myResult;\n          }\n          else {\n            throw new EvaluateRuntimeException(EvaluateExceptionUtil\n              .createEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", argExpression.getText())));\n          }\n        }\n        //noinspection HardCodedStringLiteral\n        JVMName signature = (constructor != null)? JVMNameUtil.getJVMSignature(constructor) : JVMNameUtil.getJVMRawText(\"()V\");\n        myResult = new NewClassInstanceEvaluator(\n          new TypeEvaluator(JVMNameUtil.getJVMQualifiedName(expressionPsiType)),\n          signature,\n          argumentEvaluators\n        );\n      }\n    }","id":15197,"modified_method":"@Override\n    public void visitNewExpression(PsiNewExpression expression) {\n      PsiType expressionPsiType = expression.getType();\n      if (expressionPsiType instanceof PsiArrayType) {\n        Evaluator dimensionEvaluator = null;\n        PsiExpression[] dimensions = expression.getArrayDimensions();\n        if (dimensions.length == 1){\n          PsiExpression dimensionExpression = dimensions[0];\n          dimensionExpression.accept(this);\n          if (myResult != null) {\n            dimensionEvaluator = handleUnaryNumericPromotion(dimensionExpression.getType(), myResult);\n          }\n          else {\n            throwEvaluateException(\n              DebuggerBundle.message(\"evaluation.error.invalid.array.dimension.expression\", dimensionExpression.getText()));\n          }\n        }\n        else if (dimensions.length > 1){\n          throwEvaluateException(DebuggerBundle.message(\"evaluation.error.multi.dimensional.arrays.creation.not.supported\"));\n        }\n\n        Evaluator initializerEvaluator = null;\n        PsiArrayInitializerExpression arrayInitializer = expression.getArrayInitializer();\n        if (arrayInitializer != null) {\n          if (dimensionEvaluator != null) { // initializer already exists\n            throwEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", expression.getText()));\n          }\n          arrayInitializer.accept(this);\n          if (myResult != null) {\n            initializerEvaluator = handleUnaryNumericPromotion(arrayInitializer.getType(), myResult);\n          }\n          else {\n            throwEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", arrayInitializer.getText()));\n          }\n          /*\n          PsiExpression[] initializers = arrayInitializer.getInitializers();\n          initializerEvaluators = new Evaluator[initializers.length];\n          for (int idx = 0; idx < initializers.length; idx++) {\n            PsiExpression initializer = initializers[idx];\n            initializer.accept(this);\n            if (myResult instanceof Evaluator) {\n              initializerEvaluators[idx] = myResult;\n            }\n            else {\n              throw new EvaluateException(\"Invalid expression for array initializer: \" + initializer.getText(), true);\n            }\n          }\n          */\n        }\n        if (dimensionEvaluator == null && initializerEvaluator == null) {\n          throwEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", expression.getText()));\n        }\n        myResult = new NewArrayInstanceEvaluator(\n          new TypeEvaluator(JVMNameUtil.getJVMQualifiedName(expressionPsiType)),\n          dimensionEvaluator,\n          initializerEvaluator\n        );\n      }\n      else { // must be a class ref\n        LOG.assertTrue(expressionPsiType instanceof PsiClassType);\n        PsiClass aClass = ((PsiClassType)expressionPsiType).resolve();\n        if(aClass instanceof PsiAnonymousClass) {\n          throwEvaluateException(DebuggerBundle.message(\"evaluation.error.anonymous.class.evaluation.not.supported\"));\n        }\n        PsiExpressionList argumentList = expression.getArgumentList();\n        if (argumentList == null) {\n          throwEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", expression.getText())); return;\n        }\n        PsiExpression[] argExpressions = argumentList.getExpressions();\n        PsiMethod constructor = expression.resolveConstructor();\n        if (constructor == null && argExpressions.length > 0) {\n          throw new EvaluateRuntimeException(new EvaluateException(\n            DebuggerBundle.message(\"evaluation.error.cannot.resolve.constructor\", expression.getText()), null));\n        }\n        Evaluator[] argumentEvaluators = new Evaluator[argExpressions.length];\n        // evaluate arguments\n        for (int idx = 0; idx < argExpressions.length; idx++) {\n          PsiExpression argExpression = argExpressions[idx];\n          argExpression.accept(this);\n          if (myResult != null) {\n            argumentEvaluators[idx] = myResult;\n          }\n          else {\n            throwEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", argExpression.getText()));\n          }\n        }\n        //noinspection HardCodedStringLiteral\n        JVMName signature = constructor != null ? JVMNameUtil.getJVMSignature(constructor) : JVMNameUtil.getJVMRawText(\"()V\");\n        myResult = new NewClassInstanceEvaluator(\n          new TypeEvaluator(JVMNameUtil.getJVMQualifiedName(expressionPsiType)),\n          signature,\n          argumentEvaluators\n        );\n      }\n    }","commit_id":"2d0f554264376c87e40df58f3797e169b2de14ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitPostfixExpression(PsiPostfixExpression expression) {\n      if(expression.getType() == null) {\n        throw new EvaluateRuntimeException(EvaluateExceptionUtil.createEvaluateException(\n          DebuggerBundle.message(\"evaluation.error.unknown.expression.type\", expression.getText()))\n        );\n      }\n\n      final PsiExpression operandExpression = expression.getOperand();\n      operandExpression.accept(this);\n\n      final Evaluator operandEvaluator = myResult;\n\n      final IElementType operation = expression.getOperationSign().getTokenType();\n      final PsiType operandType = operandExpression.getType();\n      final @Nullable PsiType unboxedOperandType = PsiPrimitiveType.getUnboxedType(operandType);\n\n      Evaluator incrementImpl = createBinaryEvaluator(\n        operandEvaluator, operandType,\n        new LiteralEvaluator(Integer.valueOf(1), \"int\"), PsiType.INT,\n        operation == JavaTokenType.PLUSPLUS ? JavaTokenType.PLUS : JavaTokenType.MINUS,\n        unboxedOperandType!= null? unboxedOperandType : operandType\n      );\n      if (unboxedOperandType != null) {\n        incrementImpl = new BoxingEvaluator(incrementImpl);\n      }\n      myResult = new PostfixOperationEvaluator(operandEvaluator, incrementImpl);\n    }","id":15198,"modified_method":"@Override\n    public void visitPostfixExpression(PsiPostfixExpression expression) {\n      if(expression.getType() == null) {\n        throwEvaluateException(DebuggerBundle.message(\"evaluation.error.unknown.expression.type\", expression.getText()));\n      }\n\n      final PsiExpression operandExpression = expression.getOperand();\n      operandExpression.accept(this);\n\n      final Evaluator operandEvaluator = myResult;\n\n      final IElementType operation = expression.getOperationSign().getTokenType();\n      final PsiType operandType = operandExpression.getType();\n      @Nullable final PsiType unboxedOperandType = PsiPrimitiveType.getUnboxedType(operandType);\n\n      Evaluator incrementImpl = createBinaryEvaluator(\n        operandEvaluator, operandType,\n        new LiteralEvaluator(Integer.valueOf(1), \"int\"), PsiType.INT,\n        operation == JavaTokenType.PLUSPLUS ? JavaTokenType.PLUS : JavaTokenType.MINUS,\n        unboxedOperandType!= null? unboxedOperandType : operandType\n      );\n      if (unboxedOperandType != null) {\n        incrementImpl = new BoxingEvaluator(incrementImpl);\n      }\n      myResult = new PostfixOperationEvaluator(operandEvaluator, incrementImpl);\n    }","commit_id":"2d0f554264376c87e40df58f3797e169b2de14ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitMethodCallExpression(PsiMethodCallExpression expression) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"visitMethodCallExpression \" + expression);\n      }\n      final PsiExpressionList argumentList = expression.getArgumentList();\n      final PsiExpression[] argExpressions = argumentList.getExpressions();\n      List<Evaluator> argumentEvaluators = new ArrayList<Evaluator>(argExpressions.length);\n      // evaluate arguments\n      for (PsiExpression psiExpression : argExpressions) {\n        psiExpression.accept(this);\n        if (myResult == null) {\n          // cannot build evaluator\n          throw new EvaluateRuntimeException(\n            EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", psiExpression.getText()))\n          );\n        }\n        argumentEvaluators.add(myResult);\n      }\n      PsiReferenceExpression methodExpr = expression.getMethodExpression();\n\n      final JavaResolveResult resolveResult = methodExpr.advancedResolve(false);\n      final PsiMethod psiMethod = (PsiMethod)resolveResult.getElement();\n\n      PsiExpression qualifier = methodExpr.getQualifierExpression();\n      Evaluator objectEvaluator;\n      JVMName contextClass = null;\n\n      if(psiMethod != null) {\n        PsiClass methodPsiClass = psiMethod.getContainingClass();\n        contextClass =  JVMNameUtil.getJVMQualifiedName(methodPsiClass);\n        if (psiMethod.hasModifierProperty(PsiModifier.STATIC)) {\n          objectEvaluator = new TypeEvaluator(contextClass);\n        }\n        else if (qualifier != null ) {\n          qualifier.accept(this);\n          objectEvaluator = myResult;\n        }\n        else {\n          int iterationCount = 0;\n          final PsiElement currentFileResolveScope = resolveResult.getCurrentFileResolveScope();\n          if (currentFileResolveScope instanceof PsiClass) {\n            PsiClass aClass = getContextPsiClass();\n            while(aClass != null && !aClass.equals(currentFileResolveScope)) {\n              aClass = getOuterClass(aClass);\n              iterationCount++;\n            }\n          }\n          objectEvaluator = new ThisEvaluator(iterationCount);\n        }\n      }\n      else {\n        //trying to guess\n        if (qualifier != null) {\n          PsiType type = qualifier.getType();\n\n          if (type != null) {\n            contextClass = JVMNameUtil.getJVMQualifiedName(type);\n          }\n\n          if (qualifier instanceof PsiReferenceExpression && ((PsiReferenceExpression)qualifier).resolve() instanceof PsiClass) {\n            // this is a call to a 'static' method\n            if (contextClass == null && type == null) {\n              throw new EvaluateRuntimeException(\n                EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message(\"evaluation.error.qualifier.type.unknown\", qualifier.getText()))\n              );\n            }\n            assert contextClass != null;\n            objectEvaluator = new TypeEvaluator(contextClass);\n          }\n          else {\n            qualifier.accept(this);\n            objectEvaluator = myResult;\n          }\n        }\n        else {\n          objectEvaluator = new ThisEvaluator();\n          contextClass = JVMNameUtil.getContextClassJVMQualifiedName(myPosition);\n          if(contextClass == null && myContextPsiClass != null) {\n            contextClass = JVMNameUtil.getJVMQualifiedName(myContextPsiClass);\n          }\n          //else {\n          //  throw new EvaluateRuntimeException(EvaluateExceptionUtil.createEvaluateException(\n          //    DebuggerBundle.message(\"evaluation.error.method.not.found\", methodExpr.getReferenceName()))\n          //  );\n          //}\n        }\n      }\n\n      if (objectEvaluator == null) {\n        throw new EvaluateRuntimeException(EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", expression.getText())));\n      }\n\n      if (psiMethod != null && !psiMethod.isConstructor()) {\n        if (psiMethod.getReturnType() == null) {\n          throw new EvaluateRuntimeException(EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message(\"evaluation.error.unknown.method.return.type\", psiMethod.getText())));\n        }\n      }\n\n      if (psiMethod != null) {\n        // handle autoboxing\n        final PsiParameter[] declaredParams = psiMethod.getParameterList().getParameters();\n        for (int i = 0, parametersLength = declaredParams.length; i < parametersLength; i++) {\n          if (i >= argExpressions.length) {\n            break; // actual arguments count is less than number of declared params \n          }\n          final PsiType declaredParamType = declaredParams[i].getType();\n          final PsiType actualArgType = argExpressions[i].getType();\n          if (TypeConversionUtil.boxingConversionApplicable(declaredParamType, actualArgType)) {\n            final Evaluator argEval = argumentEvaluators.get(i);\n            argumentEvaluators.set(i, (declaredParamType instanceof PsiPrimitiveType)? new UnBoxingEvaluator(argEval) : new BoxingEvaluator(argEval));\n          }\n        }\n      }\n\n      myResult = new MethodEvaluator(objectEvaluator, contextClass, methodExpr.getReferenceName(), psiMethod != null ? JVMNameUtil.getJVMSignature(psiMethod) : null, argumentEvaluators);\n    }","id":15199,"modified_method":"@Override\n    public void visitMethodCallExpression(PsiMethodCallExpression expression) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"visitMethodCallExpression \" + expression);\n      }\n      final PsiExpressionList argumentList = expression.getArgumentList();\n      final PsiExpression[] argExpressions = argumentList.getExpressions();\n      List<Evaluator> argumentEvaluators = new ArrayList<Evaluator>(argExpressions.length);\n      // evaluate arguments\n      for (PsiExpression psiExpression : argExpressions) {\n        psiExpression.accept(this);\n        if (myResult == null) {\n          // cannot build evaluator\n          throwEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", psiExpression.getText()));\n        }\n        argumentEvaluators.add(myResult);\n      }\n      PsiReferenceExpression methodExpr = expression.getMethodExpression();\n\n      final JavaResolveResult resolveResult = methodExpr.advancedResolve(false);\n      final PsiMethod psiMethod = (PsiMethod)resolveResult.getElement();\n\n      PsiExpression qualifier = methodExpr.getQualifierExpression();\n      Evaluator objectEvaluator;\n      JVMName contextClass = null;\n\n      if(psiMethod != null) {\n        PsiClass methodPsiClass = psiMethod.getContainingClass();\n        contextClass =  JVMNameUtil.getJVMQualifiedName(methodPsiClass);\n        if (psiMethod.hasModifierProperty(PsiModifier.STATIC)) {\n          objectEvaluator = new TypeEvaluator(contextClass);\n        }\n        else if (qualifier != null ) {\n          qualifier.accept(this);\n          objectEvaluator = myResult;\n        }\n        else {\n          int iterationCount = 0;\n          final PsiElement currentFileResolveScope = resolveResult.getCurrentFileResolveScope();\n          if (currentFileResolveScope instanceof PsiClass) {\n            PsiClass aClass = getContextPsiClass();\n            while(aClass != null && !aClass.equals(currentFileResolveScope)) {\n              aClass = getOuterClass(aClass);\n              iterationCount++;\n            }\n          }\n          objectEvaluator = new ThisEvaluator(iterationCount);\n        }\n      }\n      else {\n        //trying to guess\n        if (qualifier != null) {\n          PsiType type = qualifier.getType();\n\n          if (type != null) {\n            contextClass = JVMNameUtil.getJVMQualifiedName(type);\n          }\n\n          if (qualifier instanceof PsiReferenceExpression && ((PsiReferenceExpression)qualifier).resolve() instanceof PsiClass) {\n            // this is a call to a 'static' method\n            if (contextClass == null && type == null) {\n              throwEvaluateException(DebuggerBundle.message(\"evaluation.error.qualifier.type.unknown\", qualifier.getText()));\n            }\n            assert contextClass != null;\n            objectEvaluator = new TypeEvaluator(contextClass);\n          }\n          else {\n            qualifier.accept(this);\n            objectEvaluator = myResult;\n          }\n        }\n        else {\n          objectEvaluator = new ThisEvaluator();\n          contextClass = JVMNameUtil.getContextClassJVMQualifiedName(myPosition);\n          if(contextClass == null && myContextPsiClass != null) {\n            contextClass = JVMNameUtil.getJVMQualifiedName(myContextPsiClass);\n          }\n          //else {\n          //  throw new EvaluateRuntimeException(EvaluateExceptionUtil.createEvaluateException(\n          //    DebuggerBundle.message(\"evaluation.error.method.not.found\", methodExpr.getReferenceName()))\n          //  );\n          //}\n        }\n      }\n\n      if (objectEvaluator == null) {\n        throwEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", expression.getText()));\n      }\n\n      if (psiMethod != null && !psiMethod.isConstructor()) {\n        if (psiMethod.getReturnType() == null) {\n          throwEvaluateException(DebuggerBundle.message(\"evaluation.error.unknown.method.return.type\", psiMethod.getText()));\n        }\n      }\n\n      if (psiMethod != null) {\n        // handle autoboxing\n        final PsiParameter[] declaredParams = psiMethod.getParameterList().getParameters();\n        for (int i = 0, parametersLength = declaredParams.length; i < parametersLength; i++) {\n          if (i >= argExpressions.length) {\n            break; // actual arguments count is less than number of declared params \n          }\n          final PsiType declaredParamType = declaredParams[i].getType();\n          PsiType substituted = resolveResult.getSubstitutor().substitute(declaredParamType);\n          final PsiType actualArgType = argExpressions[i].getType();\n          if (TypeConversionUtil.boxingConversionApplicable(substituted, actualArgType)) {\n            final Evaluator argEval = argumentEvaluators.get(i);\n            argumentEvaluators.set(i, substituted instanceof PsiPrimitiveType\n                                      ? new UnBoxingEvaluator(argEval) : new BoxingEvaluator(argEval));\n          }\n        }\n      }\n\n      myResult = new MethodEvaluator(objectEvaluator, contextClass, methodExpr.getReferenceName(), psiMethod != null ? JVMNameUtil.getJVMSignature(psiMethod) : null, argumentEvaluators);\n    }","commit_id":"2d0f554264376c87e40df58f3797e169b2de14ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitReferenceExpression(PsiReferenceExpression expression) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"visitReferenceExpression \" + expression);\n      }\n      PsiExpression qualifier = expression.getQualifierExpression();\n      PsiElement element = expression.resolve();\n\n      if (element instanceof PsiLocalVariable || element instanceof PsiParameter) {\n        final Value labeledValue = element.getUserData(CodeFragmentFactoryContextWrapper.LABEL_VARIABLE_VALUE_KEY);\n        if (labeledValue != null) {\n          myResult = new IdentityEvaluator(labeledValue);\n          return;\n        }\n        //synthetic variable\n        final PsiFile containingFile = element.getContainingFile();\n        if(containingFile instanceof PsiCodeFragment && myCurrentFragmentEvaluator != null && myVisitedFragments.contains(((PsiCodeFragment)containingFile))) {\n          // psiVariable may live in PsiCodeFragment not only in debugger editors, for example Fabrique has such variables.\n          // So treat it as synthetic var only when this code fragment is located in DebuggerEditor,\n          // that's why we need to check that containing code fragment is the one we visited\n          myResult = new SyntheticVariableEvaluator(myCurrentFragmentEvaluator, ((PsiVariable)element).getName());\n          return;\n        }\n        // local variable\n        final PsiVariable psiVar = (PsiVariable)element;\n        final String localName = psiVar.getName();\n        PsiClass variableClass = getContainingClass(psiVar);\n        if (getContextPsiClass() == null || getContextPsiClass().equals(variableClass)) {\n          final LocalVariableEvaluator localVarEvaluator = new LocalVariableEvaluator(localName, ContextUtil.isJspImplicit(element));\n          if (psiVar instanceof PsiParameter) {\n            final PsiParameter param = (PsiParameter)psiVar;\n            final PsiParameterList paramList = PsiTreeUtil.getParentOfType(param, PsiParameterList.class, true);\n            if (paramList != null) {\n              localVarEvaluator.setParameterIndex(paramList.getParameterIndex(param));\n            }\n          }\n          myResult = localVarEvaluator;\n          return;\n        }\n        // the expression references final var outside the context's class (in some of the outer classes)\n        int iterationCount = 0;\n        PsiClass aClass = getOuterClass(getContextPsiClass());\n        while (aClass != null && !aClass.equals(variableClass)) {\n          iterationCount++;\n          aClass = getOuterClass(aClass);\n        }\n        if (aClass != null) {\n          if(psiVar.getInitializer() != null) {\n            Object value = JavaPsiFacade.getInstance(psiVar.getProject()).getConstantEvaluationHelper().computeConstantExpression(psiVar.getInitializer());\n            if(value != null) {\n              myResult = new LiteralEvaluator(value, psiVar.getType().getCanonicalText());\n              return;\n            }\n          }\n          Evaluator objectEvaluator = new ThisEvaluator(iterationCount);\n          //noinspection HardCodedStringLiteral\n          final PsiClass classAt = myPosition != null? JVMNameUtil.getClassAt(myPosition) : null;\n          FieldEvaluator.TargetClassFilter filter = FieldEvaluator.createClassFilter(classAt != null? classAt : getContextPsiClass());\n          myResult = new FieldEvaluator(objectEvaluator, filter, \"val$\" + localName);\n          return;\n        }\n        throw new EvaluateRuntimeException(EvaluateExceptionUtil.createEvaluateException(\n          DebuggerBundle.message(\"evaluation.error.local.variable.missing.from.class.closure\", localName))\n        );\n      }\n      else if (element instanceof PsiField) {\n        final PsiField psiField = (PsiField)element;\n        final PsiClass fieldClass = psiField.getContainingClass();\n        if(fieldClass == null) {\n          throw new EvaluateRuntimeException(EvaluateExceptionUtil.createEvaluateException(\n            DebuggerBundle.message(\"evaluation.error.cannot.resolve.field.class\", psiField.getName())));\n        }\n        Evaluator objectEvaluator;\n        if (psiField.hasModifierProperty(PsiModifier.STATIC)) {\n          objectEvaluator = new TypeEvaluator(JVMNameUtil.getContextClassJVMQualifiedName(SourcePosition.createFromElement(psiField)));\n        }\n        else if(qualifier != null) {\n          qualifier.accept(this);\n          objectEvaluator = myResult;\n        }\n        else if (fieldClass.equals(getContextPsiClass()) || getContextPsiClass().isInheritor(fieldClass, true)) {\n            objectEvaluator = new ThisEvaluator();\n        }\n        else {  // myContextPsiClass != fieldClass && myContextPsiClass is not a subclass of fieldClass\n          int iterationCount = 0;\n          PsiClass aClass = getContextPsiClass();\n          while (aClass != null && !(aClass.equals(fieldClass) || aClass.isInheritor(fieldClass, true))) {\n            iterationCount++;\n            aClass = getOuterClass(aClass);\n          }\n          if (aClass == null) {\n            throw new EvaluateRuntimeException(EvaluateExceptionUtil.createEvaluateException(\n              DebuggerBundle.message(\"evaluation.error.cannot.sources.for.field.class\", psiField.getName())));\n          }\n          objectEvaluator = new ThisEvaluator(iterationCount);\n        }\n        myResult = new FieldEvaluator(objectEvaluator, FieldEvaluator.createClassFilter(fieldClass), psiField.getName());\n      }\n      else {\n        //let's guess what this could be\n        PsiElement nameElement = expression.getReferenceNameElement(); // get \"b\" part\n        String name;\n        if (nameElement instanceof PsiIdentifier) {\n          name = nameElement.getText();\n        }\n        else {\n          //noinspection HardCodedStringLiteral\n          final String elementDisplayString = (nameElement != null ? nameElement.getText() : \"(null)\");\n          throw new EvaluateRuntimeException(EvaluateExceptionUtil.createEvaluateException(\n            DebuggerBundle.message(\"evaluation.error.identifier.expected\", elementDisplayString)));\n        }\n\n        if(qualifier != null) {\n          final PsiElement qualifierTarget = (qualifier instanceof PsiReferenceExpression) ? ((PsiReferenceExpression)qualifier).resolve() : null;\n          if (qualifierTarget instanceof PsiClass) {\n            // this is a call to a 'static' field\n            PsiClass psiClass = (PsiClass)qualifierTarget;\n            final JVMName typeName = JVMNameUtil.getJVMQualifiedName(psiClass);\n            myResult = new FieldEvaluator(new TypeEvaluator(typeName), FieldEvaluator.createClassFilter(psiClass), name);\n          }\n          else {\n            PsiType type = qualifier.getType();\n            if(type == null) {\n              throw new EvaluateRuntimeException(EvaluateExceptionUtil.createEvaluateException(\n                DebuggerBundle.message(\"evaluation.error.qualifier.type.unknown\", qualifier.getText()))\n              );\n            }\n\n            qualifier.accept(this);\n            if (myResult == null) {\n              throw new EvaluateRuntimeException(EvaluateExceptionUtil.createEvaluateException(\n                DebuggerBundle.message(\"evaluation.error.cannot.evaluate.qualifier\", qualifier.getText()))\n              );\n            }\n\n            myResult = new FieldEvaluator(myResult, FieldEvaluator.createClassFilter(type), name);\n          }\n        }\n        else {\n          myResult = new LocalVariableEvaluator(name, false);\n        }\n      }\n    }","id":15200,"modified_method":"@Override\n    public void visitReferenceExpression(PsiReferenceExpression expression) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"visitReferenceExpression \" + expression);\n      }\n      PsiExpression qualifier = expression.getQualifierExpression();\n      JavaResolveResult resolveResult = expression.advancedResolve(true);\n      PsiElement element = resolveResult.getElement();\n\n      if (element instanceof PsiLocalVariable || element instanceof PsiParameter) {\n        final Value labeledValue = element.getUserData(CodeFragmentFactoryContextWrapper.LABEL_VARIABLE_VALUE_KEY);\n        if (labeledValue != null) {\n          myResult = new IdentityEvaluator(labeledValue);\n          return;\n        }\n        //synthetic variable\n        final PsiFile containingFile = element.getContainingFile();\n        if(containingFile instanceof PsiCodeFragment && myCurrentFragmentEvaluator != null && myVisitedFragments.contains(containingFile)) {\n          // psiVariable may live in PsiCodeFragment not only in debugger editors, for example Fabrique has such variables.\n          // So treat it as synthetic var only when this code fragment is located in DebuggerEditor,\n          // that's why we need to check that containing code fragment is the one we visited\n          myResult = new SyntheticVariableEvaluator(myCurrentFragmentEvaluator, ((PsiVariable)element).getName());\n          return;\n        }\n        // local variable\n        final PsiVariable psiVar = (PsiVariable)element;\n        final String localName = psiVar.getName();\n        PsiClass variableClass = getContainingClass(psiVar);\n        if (getContextPsiClass() == null || getContextPsiClass().equals(variableClass)) {\n          final LocalVariableEvaluator localVarEvaluator = new LocalVariableEvaluator(localName, ContextUtil.isJspImplicit(element));\n          if (psiVar instanceof PsiParameter) {\n            final PsiParameter param = (PsiParameter)psiVar;\n            final PsiParameterList paramList = PsiTreeUtil.getParentOfType(param, PsiParameterList.class, true);\n            if (paramList != null) {\n              localVarEvaluator.setParameterIndex(paramList.getParameterIndex(param));\n            }\n          }\n          myResult = localVarEvaluator;\n          return;\n        }\n        // the expression references final var outside the context's class (in some of the outer classes)\n        int iterationCount = 0;\n        PsiClass aClass = getOuterClass(getContextPsiClass());\n        while (aClass != null && !aClass.equals(variableClass)) {\n          iterationCount++;\n          aClass = getOuterClass(aClass);\n        }\n        if (aClass != null) {\n          PsiExpression initializer = psiVar.getInitializer();\n          if(initializer != null) {\n            Object value = JavaPsiFacade.getInstance(psiVar.getProject()).getConstantEvaluationHelper().computeConstantExpression(initializer);\n            if(value != null) {\n              PsiType type = resolveResult.getSubstitutor().substitute(psiVar.getType());\n              myResult = new LiteralEvaluator(value, type.getCanonicalText());\n              return;\n            }\n          }\n          Evaluator objectEvaluator = new ThisEvaluator(iterationCount);\n          //noinspection HardCodedStringLiteral\n          final PsiClass classAt = myPosition != null? JVMNameUtil.getClassAt(myPosition) : null;\n          FieldEvaluator.TargetClassFilter filter = FieldEvaluator.createClassFilter(classAt != null? classAt : getContextPsiClass());\n          myResult = new FieldEvaluator(objectEvaluator, filter, \"val$\" + localName);\n          return;\n        }\n        throwEvaluateException(DebuggerBundle.message(\"evaluation.error.local.variable.missing.from.class.closure\", localName));\n      }\n      else if (element instanceof PsiField) {\n        final PsiField psiField = (PsiField)element;\n        final PsiClass fieldClass = psiField.getContainingClass();\n        if(fieldClass == null) {\n          throwEvaluateException(DebuggerBundle.message(\"evaluation.error.cannot.resolve.field.class\", psiField.getName())); return;\n        }\n        Evaluator objectEvaluator;\n        if (psiField.hasModifierProperty(PsiModifier.STATIC)) {\n          objectEvaluator = new TypeEvaluator(JVMNameUtil.getContextClassJVMQualifiedName(SourcePosition.createFromElement(psiField)));\n        }\n        else if(qualifier != null) {\n          qualifier.accept(this);\n          objectEvaluator = myResult;\n        }\n        else if (fieldClass.equals(getContextPsiClass()) || getContextPsiClass().isInheritor(fieldClass, true)) {\n            objectEvaluator = new ThisEvaluator();\n        }\n        else {  // myContextPsiClass != fieldClass && myContextPsiClass is not a subclass of fieldClass\n          int iterationCount = 0;\n          PsiClass aClass = getContextPsiClass();\n          while (aClass != null && !(aClass.equals(fieldClass) || aClass.isInheritor(fieldClass, true))) {\n            iterationCount++;\n            aClass = getOuterClass(aClass);\n          }\n          if (aClass == null) {\n            throwEvaluateException(DebuggerBundle.message(\"evaluation.error.cannot.sources.for.field.class\", psiField.getName()));\n          }\n          objectEvaluator = new ThisEvaluator(iterationCount);\n        }\n        myResult = new FieldEvaluator(objectEvaluator, FieldEvaluator.createClassFilter(fieldClass), psiField.getName());\n      }\n      else {\n        //let's guess what this could be\n        PsiElement nameElement = expression.getReferenceNameElement(); // get \"b\" part\n        String name;\n        if (nameElement instanceof PsiIdentifier) {\n          name = nameElement.getText();\n        }\n        else {\n          //noinspection HardCodedStringLiteral\n          final String elementDisplayString = nameElement != null ? nameElement.getText() : \"(null)\";\n          throwEvaluateException(DebuggerBundle.message(\"evaluation.error.identifier.expected\", elementDisplayString));\n          return;\n        }\n\n        if(qualifier != null) {\n          final PsiElement qualifierTarget = qualifier instanceof PsiReferenceExpression\n                                             ? ((PsiReferenceExpression)qualifier).resolve() : null;\n          if (qualifierTarget instanceof PsiClass) {\n            // this is a call to a 'static' field\n            PsiClass psiClass = (PsiClass)qualifierTarget;\n            final JVMName typeName = JVMNameUtil.getJVMQualifiedName(psiClass);\n            myResult = new FieldEvaluator(new TypeEvaluator(typeName), FieldEvaluator.createClassFilter(psiClass), name);\n          }\n          else {\n            PsiType type = qualifier.getType();\n            if(type == null) {\n              throwEvaluateException(DebuggerBundle.message(\"evaluation.error.qualifier.type.unknown\", qualifier.getText()));\n            }\n\n            qualifier.accept(this);\n            if (myResult == null) {\n              throwEvaluateException(DebuggerBundle.message(\"evaluation.error.cannot.evaluate.qualifier\", qualifier.getText()));\n            }\n\n            myResult = new FieldEvaluator(myResult, FieldEvaluator.createClassFilter(type), name);\n          }\n        }\n        else {\n          myResult = new LocalVariableEvaluator(name, false);\n        }\n      }\n    }","commit_id":"2d0f554264376c87e40df58f3797e169b2de14ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitStatement(PsiStatement statement) {\n      throw new EvaluateRuntimeException(EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message(\"evaluation.error.statement.not.supported\", statement.getText())));\n    }","id":15201,"modified_method":"@Override\n    public void visitStatement(PsiStatement statement) {\n      throwEvaluateException(DebuggerBundle.message(\"evaluation.error.statement.not.supported\", statement.getText()));\n    }","commit_id":"2d0f554264376c87e40df58f3797e169b2de14ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private int calcIterationCount(final PsiJavaCodeReferenceElement qualifier) {\n      int iterationCount = 0;\n      if (qualifier != null) {\n        PsiElement targetClass = qualifier.resolve();\n        if (targetClass == null || getContextPsiClass() == null) {\n          throw new EvaluateRuntimeException(EvaluateExceptionUtil\n            .createEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", qualifier.getText())));\n        }\n        try {\n          PsiClass aClass = getContextPsiClass();\n          while (aClass != null && !aClass.equals(targetClass)) {\n            iterationCount++;\n            aClass = getOuterClass(aClass);\n          }\n        }\n        catch (Exception e) {\n          throw new EvaluateRuntimeException(EvaluateExceptionUtil.createEvaluateException(e));\n        }\n      }\n      return iterationCount;\n    }","id":15202,"modified_method":"private int calcIterationCount(final PsiJavaCodeReferenceElement qualifier) {\n      int iterationCount = 0;\n      if (qualifier != null) {\n        PsiElement targetClass = qualifier.resolve();\n        if (targetClass == null || getContextPsiClass() == null) {\n          throwEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", qualifier.getText()));\n        }\n        try {\n          PsiClass aClass = getContextPsiClass();\n          while (aClass != null && !aClass.equals(targetClass)) {\n            iterationCount++;\n            aClass = getOuterClass(aClass);\n          }\n        }\n        catch (Exception e) {\n          //noinspection ThrowableResultOfMethodCallIgnored\n          throw new EvaluateRuntimeException(EvaluateExceptionUtil.createEvaluateException(e));\n        }\n      }\n      return iterationCount;\n    }","commit_id":"2d0f554264376c87e40df58f3797e169b2de14ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitAssignmentExpression(PsiAssignmentExpression expression) {\n      final PsiExpression rExpression = expression.getRExpression();\n      if(rExpression == null) {\n        throw new EvaluateRuntimeException(\n          EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", expression.getText()))\n        );\n      }\n\n      rExpression.accept(this);\n      Evaluator rEvaluator = myResult;\n\n      if(expression.getOperationSign().getTokenType() != JavaTokenType.EQ) {\n        throw new EvaluateRuntimeException(\n          EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message(\"evaluation.error.operation.not.supported\", expression.getOperationSign().getText()))\n        );\n      }\n\n      final PsiExpression lExpression = expression.getLExpression();\n\n      final PsiType lType = lExpression.getType();\n      if(lType == null) {\n        throw new EvaluateRuntimeException(\n          EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message(\"evaluation.error.unknown.expression.type\", lExpression.getText()))\n        );\n      }\n\n      if(!TypeConversionUtil.areTypesAssignmentCompatible(lType, rExpression)) {\n        throw new EvaluateRuntimeException(EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message(\"evaluation.error.incompatible.types\", expression.getOperationSign().getText())));\n      }\n      lExpression.accept(this);\n      Evaluator lEvaluator = myResult;\n\n      rEvaluator = handleAssignmentBoxingAndPrimitiveTypeConversions(lType, rExpression.getType(), rEvaluator);\n      \n      myResult = new AssignmentEvaluator(lEvaluator, rEvaluator);\n    }","id":15203,"modified_method":"@Override\n    public void visitAssignmentExpression(PsiAssignmentExpression expression) {\n      final PsiExpression rExpression = expression.getRExpression();\n      if(rExpression == null) {\n        throwEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", expression.getText())); return;\n      }\n\n      rExpression.accept(this);\n      Evaluator rEvaluator = myResult;\n\n      if(expression.getOperationSign().getTokenType() != JavaTokenType.EQ) {\n        throwEvaluateException(DebuggerBundle.message(\"evaluation.error.operation.not.supported\", expression.getOperationSign().getText()));\n      }\n\n      final PsiExpression lExpression = expression.getLExpression();\n\n      final PsiType lType = lExpression.getType();\n      if(lType == null) {\n        throwEvaluateException(DebuggerBundle.message(\"evaluation.error.unknown.expression.type\", lExpression.getText()));\n      }\n\n      if(!TypeConversionUtil.areTypesAssignmentCompatible(lType, rExpression)) {\n        throwEvaluateException(DebuggerBundle.message(\"evaluation.error.incompatible.types\", expression.getOperationSign().getText()));\n      }\n      lExpression.accept(this);\n      Evaluator lEvaluator = myResult;\n\n      rEvaluator = handleAssignmentBoxingAndPrimitiveTypeConversions(lType, rExpression.getType(), rEvaluator);\n      \n      myResult = new AssignmentEvaluator(lEvaluator, rEvaluator);\n    }","commit_id":"2d0f554264376c87e40df58f3797e169b2de14ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitLiteralExpression(PsiLiteralExpression expression) {\n      Object value = expression.getValue();\n      if(expression.getParsingError() != null) {\n        throw new EvaluateRuntimeException(EvaluateExceptionUtil.createEvaluateException(expression.getParsingError()));\n      }\n      myResult = new LiteralEvaluator(value, expression.getType().getCanonicalText());\n    }","id":15204,"modified_method":"@Override\n    public void visitLiteralExpression(PsiLiteralExpression expression) {\n      Object value = expression.getValue();\n      if(expression.getParsingError() != null) {\n        throwEvaluateException(expression.getParsingError());\n      }\n      myResult = new LiteralEvaluator(value, expression.getType().getCanonicalText());\n    }","commit_id":"2d0f554264376c87e40df58f3797e169b2de14ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitArrayInitializerExpression(PsiArrayInitializerExpression expression) {\n      PsiExpression[] initializers = expression.getInitializers();\n      Evaluator[] evaluators = new Evaluator[initializers.length];\n      for (int idx = 0; idx < initializers.length; idx++) {\n        PsiExpression initializer = initializers[idx];\n        initializer.accept(this);\n        if (myResult != null) {\n          evaluators[idx] = handleUnaryNumericPromotion(initializer.getType(), myResult);\n        }\n        else {\n          throw new EvaluateRuntimeException(EvaluateExceptionUtil\n            .createEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", initializer.getText())));\n        }\n      }\n      myResult = new ArrayInitializerEvaluator(evaluators);\n    }","id":15205,"modified_method":"@Override\n    public void visitArrayInitializerExpression(PsiArrayInitializerExpression expression) {\n      PsiExpression[] initializers = expression.getInitializers();\n      Evaluator[] evaluators = new Evaluator[initializers.length];\n      for (int idx = 0; idx < initializers.length; idx++) {\n        PsiExpression initializer = initializers[idx];\n        initializer.accept(this);\n        if (myResult != null) {\n          evaluators[idx] = handleUnaryNumericPromotion(initializer.getType(), myResult);\n        }\n        else {\n          throwEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", initializer.getText()));\n        }\n      }\n      myResult = new ArrayInitializerEvaluator(evaluators);\n    }","commit_id":"2d0f554264376c87e40df58f3797e169b2de14ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitArrayAccessExpression(PsiArrayAccessExpression expression) {\n      final PsiExpression indexExpression = expression.getIndexExpression();\n      if(indexExpression == null) {\n        throw new EvaluateRuntimeException(EvaluateExceptionUtil\n          .createEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", expression.getText())));\n      }\n      indexExpression.accept(this);\n      final Evaluator indexEvaluator = handleUnaryNumericPromotion(indexExpression.getType(), myResult); \n\n      expression.getArrayExpression().accept(this);\n      Evaluator arrayEvaluator = myResult;\n      myResult = new ArrayAccessEvaluator(arrayEvaluator, indexEvaluator);\n    }","id":15206,"modified_method":"@Override\n    public void visitArrayAccessExpression(PsiArrayAccessExpression expression) {\n      final PsiExpression indexExpression = expression.getIndexExpression();\n      if(indexExpression == null) {\n        throwEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", expression.getText())); return;\n      }\n      indexExpression.accept(this);\n      final Evaluator indexEvaluator = handleUnaryNumericPromotion(indexExpression.getType(), myResult); \n\n      expression.getArrayExpression().accept(this);\n      Evaluator arrayEvaluator = myResult;\n      myResult = new ArrayAccessEvaluator(arrayEvaluator, indexEvaluator);\n    }","commit_id":"2d0f554264376c87e40df58f3797e169b2de14ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitErrorElement(PsiErrorElement element) {\n      throw new EvaluateRuntimeException(EvaluateExceptionUtil\n        .createEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", element.getText())));\n    }","id":15207,"modified_method":"@Override\n    public void visitErrorElement(PsiErrorElement element) {\n      throwEvaluateException(DebuggerBundle.message(\"evaluation.error.invalid.expression\", element.getText()));\n    }","commit_id":"2d0f554264376c87e40df58f3797e169b2de14ef","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static boolean contains(char[] array, char value) {\n\t\tif (array == null) {\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\t\tif (value == array[i]) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}","id":15208,"modified_method":"public static boolean contains(char[] array, char value) {\n\t\tif ((array == null) || (array.length == 0)) {\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\t\tif (value == array[i]) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}","commit_id":"71e331059e4a70285f20a8f9d39978b52555671b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static boolean contains(short[] array, short value) {\n\t\tif (array == null) {\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\t\tif (value == array[i]) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}","id":15209,"modified_method":"public static boolean contains(short[] array, short value) {\n\t\tif ((array == null) || (array.length == 0)) {\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\t\tif (value == array[i]) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}","commit_id":"71e331059e4a70285f20a8f9d39978b52555671b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static boolean contains(int[] array, int value) {\n\t\tif (array == null) {\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\t\tif (value == array[i]) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}","id":15210,"modified_method":"public static boolean contains(int[] array, int value) {\n\t\tif ((array == null) || (array.length == 0)) {\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\t\tif (value == array[i]) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}","commit_id":"71e331059e4a70285f20a8f9d39978b52555671b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static boolean contains(boolean[] array, boolean value) {\n\t\tif (array == null) {\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\t\tif (value == array[i]) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}","id":15211,"modified_method":"public static boolean contains(boolean[] array, boolean value) {\n\t\tif ((array == null) || (array.length == 0)) {\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\t\tif (value == array[i]) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}","commit_id":"71e331059e4a70285f20a8f9d39978b52555671b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static boolean contains(Object[] array, Object value) {\n\t\tif ((array == null) || (value == null)) {\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\t\tif (value.equals(array[i])) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}","id":15212,"modified_method":"public static boolean contains(Object[] array, Object value) {\n\t\tif ((array == null) || (array.length == 0) || (value == null)) {\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\t\tif (value.equals(array[i])) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}","commit_id":"71e331059e4a70285f20a8f9d39978b52555671b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static boolean contains(long[] array, long value) {\n\t\tif (array == null) {\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\t\tif (value == array[i]) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}","id":15213,"modified_method":"public static boolean contains(long[] array, long value) {\n\t\tif ((array == null) || (array.length == 0)) {\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\t\tif (value == array[i]) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}","commit_id":"71e331059e4a70285f20a8f9d39978b52555671b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static boolean contains(double[] array, double value) {\n\t\tif (array == null) {\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\t\tif (value == array[i]) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}","id":15214,"modified_method":"public static boolean contains(double[] array, double value) {\n\t\tif ((array == null) || (array.length == 0)) {\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\t\tif (value == array[i]) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}","commit_id":"71e331059e4a70285f20a8f9d39978b52555671b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static String transform(\n\t\t\tMap tokens, String languageId, String xml, String script)\n\t\tthrows TransformException {\n\n\t\tStringWriter output = new StringWriter();\n\n\t\tboolean load = false;\n\n\t\ttry {\n\t\t\tVelocityContext context = new VelocityContext();\n\n\t\t\tSAXReader reader = new SAXReader();\n\n\t\t\tDocument doc = reader.read(new StringReader(xml));\n\n\t\t\tElement root = doc.getRootElement();\n\n\t\t\tList nodes = _extractDynamicContents(root);\n\n\t\t\tIterator itr = nodes.iterator();\n\n\t\t\twhile (itr.hasNext()) {\n\t\t\t\tTemplateNode node = (TemplateNode)itr.next();\n\n\t\t\t\tcontext.put(node.getName(), node);\n\t\t\t}\n\n\t\t\tcontext.put(\n\t\t\t\t\"request\", _insertRequestVariables(root.element(\"request\")));\n\n\t\t\tlong companyId = GetterUtil.getLong(\n\t\t\t\t(String)tokens.get(\"company_id\"));\n\t\t\tlong groupId = GetterUtil.getLong((String)tokens.get(\"group_id\"));\n\t\t\tString journalTemplatesPath =\n\t\t\t\tVelocityResourceListener.JOURNAL_SEPARATOR + StringPool.SLASH +\n\t\t\t\t\tcompanyId + StringPool.SLASH + groupId;\n\t\t\tString randomNamespace =\n\t\t\t\tPwdGenerator.getPassword(PwdGenerator.KEY3, 4) +\n\t\t\t\t\tStringPool.UNDERLINE;\n\n\t\t\tcontext.put(\"companyId\", String.valueOf(companyId));\n\t\t\tcontext.put(\"groupId\", String.valueOf(groupId));\n\t\t\tcontext.put(\"journalTemplatesPath\", journalTemplatesPath);\n\t\t\tcontext.put(\"randomNamespace\", randomNamespace);\n\n\t\t\tString[] restrictedVariables =\n\t\t\t\tPropsUtil.getArray(\n\t\t\t\t\tPropsUtil.JOURNAL_TEMPLATE_VELOCITY_RESTRICTED_VARIABLES);\n\n\t\t\tVelocityVariables.insertHelperUtilities(\n\t\t\t\tcontext, restrictedVariables);\n\n\t\t\tscript = _injectEditInPlace(xml, script);\n\n\t\t\tload = Velocity.evaluate(\n\t\t\t\tcontext, output, JournalVmUtil.class.getName(), script);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof DocumentException) {\n\t\t\t\tthrow new TransformException(\"Unable to read XML document\", e);\n\t\t\t}\n\t\t\telse if (e instanceof VelocityException) {\n\t\t\t\tVelocityException pex = (VelocityException)e;\n\n\t\t\t\tthrow new TransformException(\n\t\t\t\t\t\"Unable to parse velocity template: \" +\n\t\t\t\t\t\tHtml.escape(pex.getMessage()),\n\t\t\t\t\te);\n\t\t\t}\n\t\t\telse if (e instanceof IOException) {\n\t\t\t\tthrow new TransformException(\n\t\t\t\t\t\"Error reading velocity template\", e);\n\t\t\t}\n\t\t\telse if (e instanceof TransformException) {\n\t\t\t\tthrow (TransformException)e;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new TransformException(\"Unhandled exception\", e);\n\t\t\t}\n\t\t}\n\n\t\tif (!load) {\n\t\t\tthrow new TransformException(\n\t\t\t\t\"Unable to dynamically load velocity transform script\");\n\t\t}\n\n\t\treturn output.toString();\n\t}","id":15215,"modified_method":"public static String transform(\n\t\t\tMap tokens, String languageId, String xml, String script)\n\t\tthrows TransformException {\n\n\t\tStringWriter output = new StringWriter();\n\n\t\tboolean load = false;\n\n\t\ttry {\n\t\t\tVelocityContext context = new VelocityContext();\n\n\t\t\tSAXReader reader = new SAXReader();\n\n\t\t\tDocument doc = reader.read(new StringReader(xml));\n\n\t\t\tElement root = doc.getRootElement();\n\n\t\t\tList nodes = _extractDynamicContents(root);\n\n\t\t\tIterator itr = nodes.iterator();\n\n\t\t\twhile (itr.hasNext()) {\n\t\t\t\tTemplateNode node = (TemplateNode)itr.next();\n\n\t\t\t\tcontext.put(node.getName(), node);\n\t\t\t}\n\n\t\t\tcontext.put(\n\t\t\t\t\"request\", _insertRequestVariables(root.element(\"request\")));\n\n\t\t\tlong companyId = GetterUtil.getLong(\n\t\t\t\t(String)tokens.get(\"company_id\"));\n\t\t\tlong groupId = GetterUtil.getLong((String)tokens.get(\"group_id\"));\n\t\t\tString journalTemplatesPath =\n\t\t\t\tVelocityResourceListener.JOURNAL_SEPARATOR + StringPool.SLASH +\n\t\t\t\t\tcompanyId + StringPool.SLASH + groupId;\n\t\t\tString randomNamespace =\n\t\t\t\tPwdGenerator.getPassword(PwdGenerator.KEY3, 4) +\n\t\t\t\t\tStringPool.UNDERLINE;\n\n\t\t\tcontext.put(\"companyId\", String.valueOf(companyId));\n\t\t\tcontext.put(\"groupId\", String.valueOf(groupId));\n\t\t\tcontext.put(\"journalTemplatesPath\", journalTemplatesPath);\n\t\t\tcontext.put(\"randomNamespace\", randomNamespace);\n\n\t\t\tVelocityVariables.insertHelperUtilities(\n\t\t\t\tcontext, _TEMPLATE_VELOCITY_RESTRICTED_VARIABLES);\n\n\t\t\tscript = _injectEditInPlace(xml, script);\n\n\t\t\tload = Velocity.evaluate(\n\t\t\t\tcontext, output, JournalVmUtil.class.getName(), script);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof DocumentException) {\n\t\t\t\tthrow new TransformException(\"Unable to read XML document\", e);\n\t\t\t}\n\t\t\telse if (e instanceof VelocityException) {\n\t\t\t\tVelocityException pex = (VelocityException)e;\n\n\t\t\t\tthrow new TransformException(\n\t\t\t\t\t\"Unable to parse velocity template: \" +\n\t\t\t\t\t\tHtml.escape(pex.getMessage()),\n\t\t\t\t\te);\n\t\t\t}\n\t\t\telse if (e instanceof IOException) {\n\t\t\t\tthrow new TransformException(\n\t\t\t\t\t\"Error reading velocity template\", e);\n\t\t\t}\n\t\t\telse if (e instanceof TransformException) {\n\t\t\t\tthrow (TransformException)e;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new TransformException(\"Unhandled exception\", e);\n\t\t\t}\n\t\t}\n\n\t\tif (!load) {\n\t\t\tthrow new TransformException(\n\t\t\t\t\"Unable to dynamically load velocity transform script\");\n\t\t}\n\n\t\treturn output.toString();\n\t}","commit_id":"71e331059e4a70285f20a8f9d39978b52555671b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void insertHelperUtilities(VelocityContext vc,\n\t\tString[] restrictedVariables) {\n\n\t\t// Array util\n\n\t\tvc.put(\"arrayUtil\", ArrayUtil_IW.getInstance());\n\n\t\t// Browser sniffer\n\n\t\tvc.put(\"browserSniffer\", BrowserSniffer_IW.getInstance());\n\n\t\t// Date formats\n\n\t\tvc.put(\"dateFormats\", DateFormats_IW.getInstance());\n\n\t\t// Date util\n\n\t\tvc.put(\"dateUtil\", DateUtil_IW.getInstance());\n\n\t\t// Getter util\n\n\t\tvc.put(\"getterUtil\", GetterUtil_IW.getInstance());\n\n\t\t// Html util\n\n\t\tvc.put(\"htmlUtil\", Html_IW.getInstance());\n\n\t\t// Http util\n\n\t\tvc.put(\"httpUtil\", HttpUtil_IW.getInstance());\n\n\t\t// ImageServletToken\n\n\t\tvc.put(\"imageToken\", ImageServletTokenUtil.getImageServletToken());\n\n\t\t// Language util\n\n\t\tvc.put(\"languageUtil\", LanguageUtil.getLanguage());\n\t\tvc.put(\"unicodeLanguageUtil\", UnicodeLanguageUtil.getUnicodeLanguage());\n\n\t\t// Param util\n\n\t\tvc.put(\"paramUtil\", ParamUtil_IW.getInstance());\n\n\t\t// Portal util\n\n\t\tif (!ArrayUtil.contains(restrictedVariables, \"portalUtil\") &&\n\t\t\t\tArrayUtil.contains(restrictedVariables, \"portal\")) {\n\t\t\tvc.put(\"portalUtil\", PortalUtil_IW.getInstance());\n\t\t\tvc.put(\"portal\", PortalUtil_IW.getInstance());\n\t\t}\n\n\t\t// Prefs props util\n\n\t\tif (!ArrayUtil.contains(restrictedVariables, \"prefsPropsUtil\")) {\n\t\t\tvc.put(\"prefsPropsUtil\", PrefsPropsUtil_IW.getInstance());\n\t\t}\n\n\t\t// Props util\n\n\t\tif (!ArrayUtil.contains(restrictedVariables, \"propsUtil\")) {\n\t\t\tvc.put(\"propsUtil\", PropsUtil_IW.getInstance());\n\t\t}\n\n\t\t// Portlet URL factory\n\n\t\tvc.put(\"portletURLFactory\", PortletURLFactory.getInstance());\n\n\t\t// Portlet preferences\n\n\t\tif (!ArrayUtil.contains(\n\t\t\t\trestrictedVariables, \"velocityPortletPreferences\")) {\n\t\t\tvc.put(\n\t\t\t\t\"velocityPortletPreferences\", new VelocityPortletPreferences());\n\t\t}\n\n\t\t// Randomizer\n\n\t\tvc.put(\"randomizer\", Randomizer_IW.getInstance().getWrappedInstance());\n\n\t\t// Service locator\n\n\t\tif (!ArrayUtil.contains(restrictedVariables, \"serviceLocator\")) {\n\t\t\tvc.put(\"serviceLocator\", ServiceLocator.getInstance());\n\t\t}\n\n\t\t// Session clicks\n\n\t\tif (!ArrayUtil.contains(restrictedVariables, \"sessionClicks\")) {\n\t\t\tvc.put(\"sessionClicks\", SessionClicks_IW.getInstance());\n\t\t}\n\n\t\t// Static field getter\n\n\t\tvc.put(\"staticFieldGetter\", StaticFieldGetter.getInstance());\n\n\t\t// String util\n\n\t\tvc.put(\"stringUtil\", StringUtil_IW.getInstance());\n\n\t\t// Unicode formatter\n\n\t\tvc.put(\"unicodeFormatter\", UnicodeFormatter_IW.getInstance());\n\n\t\t// Permissions\n\n\t\tvc.put(\n\t\t\t\"accountPermission\", AccountPermissionUtil.getAccountPermission());\n\t\tvc.put(\"commonPermission\", CommonPermissionUtil.getCommonPermission());\n\t\tvc.put(\"groupPermission\", GroupPermissionUtil.getGroupPermission());\n\t\tvc.put(\"layoutPermission\", LayoutPermissionUtil.getLayoutPermission());\n\t\tvc.put(\n\t\t\t\"organizationPermission\",\n\t\t\tOrganizationPermissionUtil.getOrganizationPermission());\n\t\tvc.put(\n\t\t\t\"passwordPolicyPermission\",\n\t\t\tPasswordPolicyPermissionUtil.getPasswordPolicyPermission());\n\t\tvc.put(\"portalPermission\", PortalPermissionUtil.getPortalPermission());\n\t\tvc.put(\n\t\t\t\"portletPermission\", PortletPermissionUtil.getPortletPermission());\n\t\tvc.put(\"rolePermission\", RolePermissionUtil.getRolePermission());\n\t\tvc.put(\n\t\t\t\"userGroupPermission\",\n\t\t\tUserGroupPermissionUtil.getUserGroupPermission());\n\t\tvc.put(\"userPermission\", UserPermissionUtil.getUserPermission());\n\n\t\t// Deprecated permissions\n\n\t\tvc.put(\n\t\t\t\"locationPermission\",\n\t\t\tOrganizationPermissionUtil.getOrganizationPermission());\n\t}","id":15216,"modified_method":"public static void insertHelperUtilities(\n\t\tVelocityContext vc, String[] restrictedVariables) {\n\n\t\t// Array util\n\n\t\tvc.put(\"arrayUtil\", ArrayUtil_IW.getInstance());\n\n\t\t// Browser sniffer\n\n\t\tvc.put(\"browserSniffer\", BrowserSniffer_IW.getInstance());\n\n\t\t// Date formats\n\n\t\tvc.put(\"dateFormats\", DateFormats_IW.getInstance());\n\n\t\t// Date util\n\n\t\tvc.put(\"dateUtil\", DateUtil_IW.getInstance());\n\n\t\t// Getter util\n\n\t\tvc.put(\"getterUtil\", GetterUtil_IW.getInstance());\n\n\t\t// Html util\n\n\t\tvc.put(\"htmlUtil\", Html_IW.getInstance());\n\n\t\t// Http util\n\n\t\tvc.put(\"httpUtil\", HttpUtil_IW.getInstance());\n\n\t\t// ImageServletToken\n\n\t\tvc.put(\"imageToken\", ImageServletTokenUtil.getImageServletToken());\n\n\t\t// Language util\n\n\t\tvc.put(\"languageUtil\", LanguageUtil.getLanguage());\n\t\tvc.put(\"unicodeLanguageUtil\", UnicodeLanguageUtil.getUnicodeLanguage());\n\n\t\t// Param util\n\n\t\tvc.put(\"paramUtil\", ParamUtil_IW.getInstance());\n\n\t\t// Portal util\n\n\t\t_insertHelperUtility(\n\t\t\tvc, restrictedVariables, \"portalUtil\", PortalUtil_IW.getInstance());\n\t\t_insertHelperUtility(\n\t\t\tvc, restrictedVariables, \"portal\", PortalUtil_IW.getInstance());\n\n\t\t// Prefs props util\n\n\t\t_insertHelperUtility(\n\t\t\tvc, restrictedVariables, \"prefsPropsUtil\",\n\t\t\tPrefsPropsUtil_IW.getInstance());\n\n\t\t// Props util\n\n\t\t_insertHelperUtility(\n\t\t\tvc, restrictedVariables, \"propsUtil\", PropsUtil_IW.getInstance());\n\n\t\t// Portlet URL factory\n\n\t\tvc.put(\"portletURLFactory\", PortletURLFactory.getInstance());\n\n\t\t// Portlet preferences\n\n\t\t_insertHelperUtility(\n\t\t\tvc, restrictedVariables, \"velocityPortletPreferences\",\n\t\t\tnew VelocityPortletPreferences());\n\n\t\t// Randomizer\n\n\t\tvc.put(\"randomizer\", Randomizer_IW.getInstance().getWrappedInstance());\n\n\t\t// Service locator\n\n\t\t_insertHelperUtility(\n\t\t\tvc, restrictedVariables, \"serviceLocator\",\n\t\t\tServiceLocator.getInstance());\n\n\t\t// Session clicks\n\n\t\t_insertHelperUtility(\n\t\t\tvc, restrictedVariables, \"sessionClicks\",\n\t\t\tSessionClicks_IW.getInstance());\n\n\t\t// Static field getter\n\n\t\tvc.put(\"staticFieldGetter\", StaticFieldGetter.getInstance());\n\n\t\t// String util\n\n\t\tvc.put(\"stringUtil\", StringUtil_IW.getInstance());\n\n\t\t// Unicode formatter\n\n\t\tvc.put(\"unicodeFormatter\", UnicodeFormatter_IW.getInstance());\n\n\t\t// Permissions\n\n\t\tvc.put(\n\t\t\t\"accountPermission\", AccountPermissionUtil.getAccountPermission());\n\t\tvc.put(\"commonPermission\", CommonPermissionUtil.getCommonPermission());\n\t\tvc.put(\"groupPermission\", GroupPermissionUtil.getGroupPermission());\n\t\tvc.put(\"layoutPermission\", LayoutPermissionUtil.getLayoutPermission());\n\t\tvc.put(\n\t\t\t\"organizationPermission\",\n\t\t\tOrganizationPermissionUtil.getOrganizationPermission());\n\t\tvc.put(\n\t\t\t\"passwordPolicyPermission\",\n\t\t\tPasswordPolicyPermissionUtil.getPasswordPolicyPermission());\n\t\tvc.put(\"portalPermission\", PortalPermissionUtil.getPortalPermission());\n\t\tvc.put(\n\t\t\t\"portletPermission\", PortletPermissionUtil.getPortletPermission());\n\t\tvc.put(\"rolePermission\", RolePermissionUtil.getRolePermission());\n\t\tvc.put(\n\t\t\t\"userGroupPermission\",\n\t\t\tUserGroupPermissionUtil.getUserGroupPermission());\n\t\tvc.put(\"userPermission\", UserPermissionUtil.getUserPermission());\n\n\t\t// Deprecated permissions\n\n\t\tvc.put(\n\t\t\t\"locationPermission\",\n\t\t\tOrganizationPermissionUtil.getOrganizationPermission());\n\t}","commit_id":"71e331059e4a70285f20a8f9d39978b52555671b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void insertVariables(\n\t\tVelocityContext vc, HttpServletRequest req) {\n\n\t\t// Request\n\n\t\tvc.put(\"request\", req);\n\n\t\t// Portlet config\n\n\t\tPortletConfigImpl portletConfig = (PortletConfigImpl)req.getAttribute(\n\t\t\tJavaConstants.JAVAX_PORTLET_CONFIG);\n\n\t\tif (portletConfig != null) {\n\t\t\tvc.put(\"portletConfig\", portletConfig);\n\t\t}\n\n\t\t// Render request\n\n\t\tPortletRequest portletRequest = (PortletRequest)req.getAttribute(\n\t\t\tJavaConstants.JAVAX_PORTLET_REQUEST);\n\n\t\tif (portletRequest != null) {\n\t\t\tif (portletRequest instanceof RenderRequest) {\n\t\t\t\tvc.put(\"renderRequest\", portletRequest);\n\t\t\t}\n\t\t}\n\n\t\t// Render response\n\n\t\tPortletResponse portletResponse = (PortletResponse)req.getAttribute(\n\t\t\tJavaConstants.JAVAX_PORTLET_RESPONSE);\n\n\t\tif (portletResponse != null) {\n\t\t\tif (portletResponse instanceof RenderResponse) {\n\t\t\t\tvc.put(\"renderResponse\", portletResponse);\n\t\t\t}\n\t\t}\n\n\t\t// Theme display\n\n\t\tThemeDisplay themeDisplay =\n\t\t\t(ThemeDisplay)req.getAttribute(WebKeys.THEME_DISPLAY);\n\n\t\tif (themeDisplay != null) {\n\t\t\tTheme theme = themeDisplay.getTheme();\n\n\t\t\tLayout layout = themeDisplay.getLayout();\n\t\t\tList layouts = themeDisplay.getLayouts();\n\n\t\t\tvc.put(\"themeDisplay\", themeDisplay);\n\t\t\tvc.put(\"company\", themeDisplay.getCompany());\n\t\t\tvc.put(\"user\", themeDisplay.getUser());\n\t\t\tvc.put(\"realUser\", themeDisplay.getRealUser());\n\t\t\tvc.put(\"layout\", layout);\n\t\t\tvc.put(\"layouts\", layouts);\n\t\t\tvc.put(\"plid\", String.valueOf(themeDisplay.getPlid()));\n\t\t\tvc.put(\"layoutTypePortlet\", themeDisplay.getLayoutTypePortlet());\n\t\t\tvc.put(\n\t\t\t\t\"portletGroupId\", new Long(themeDisplay.getPortletGroupId()));\n\t\t\tvc.put(\"permissionChecker\", themeDisplay.getPermissionChecker());\n\t\t\tvc.put(\"locale\", themeDisplay.getLocale());\n\t\t\tvc.put(\"timeZone\", themeDisplay.getTimeZone());\n\t\t\tvc.put(\"theme\", theme);\n\t\t\tvc.put(\"colorScheme\", themeDisplay.getColorScheme());\n\t\t\tvc.put(\"portletDisplay\", themeDisplay.getPortletDisplay());\n\n\t\t\t// Navigation items\n\n\t\t\tif (layout != null) {\n\t\t\t\tRequestVars requestVars = new RequestVars(\n\t\t\t\t\treq, themeDisplay, layout.getAncestorPlid(),\n\t\t\t\t\tlayout.getAncestorLayoutId());\n\n\t\t\t\tList navItems = NavItem.fromLayouts(requestVars, layouts);\n\n\t\t\t\tvc.put(\"navItems\", navItems);\n\t\t\t}\n\n\t\t\t// Full css and templates path\n\n\t\t\tString ctxName = GetterUtil.getString(\n\t\t\t\ttheme.getServletContextName());\n\n\t\t\tvc.put(\n\t\t\t\t\"fullCssPath\",\n\t\t\t\tctxName + theme.getVelocityResourceListener() +\n\t\t\t\t\ttheme.getCssPath());\n\n\t\t\tvc.put(\n\t\t\t\t\"fullTemplatesPath\",\n\t\t\t\tctxName + theme.getVelocityResourceListener() +\n\t\t\t\t\ttheme.getTemplatesPath());\n\n\t\t\t// Init\n\n\t\t\tvc.put(\n\t\t\t\t\"init\",\n\t\t\t\tthemeDisplay.getPathContext() +\n\t\t\t\t\tVelocityResourceListener.SERVLET_SEPARATOR +\n\t\t\t\t\t\t\"/html/themes/_unstyled/templates/init.vm\");\n\t\t}\n\n\t\t// Tiles attributes\n\n\t\tString tilesTitle = _insertTilesVariables(\n\t\t\tvc, req, \"tilesTitle\", \"title\");\n\t\tString tilesContent = _insertTilesVariables(\n\t\t\tvc, req, \"tilesContent\", \"content\");\n\t\tboolean tilesSelectable = GetterUtil.getBoolean(_insertTilesVariables(\n\t\t\tvc, req, \"tilesSelectable\", \"selectable\"));\n\n\t\tif (themeDisplay != null) {\n\t\t\tthemeDisplay.setTilesTitle(tilesTitle);\n\t\t\tthemeDisplay.setTilesContent(tilesContent);\n\t\t\tthemeDisplay.setTilesSelectable(tilesSelectable);\n\t\t}\n\n\t\t// Page title and subtitle\n\n\t\tvc.put(\"pageTitle\", req.getAttribute(WebKeys.PAGE_TITLE));\n\t\tvc.put(\"pageSubtitle\", req.getAttribute(WebKeys.PAGE_SUBTITLE));\n\n\t\t// Helper utilities\n\n\t\tinsertHelperUtilities(vc, new String[0]);\n\n\t\t// Insert custom vm variables\n\n\t\tMap vmVariables = (Map)req.getAttribute(WebKeys.VM_VARIABLES);\n\n\t\tif (vmVariables != null) {\n\t\t\tIterator itr = vmVariables.entrySet().iterator();\n\n\t\t\twhile (itr.hasNext()) {\n\t\t\t\tMap.Entry entry = (Map.Entry)itr.next();\n\n\t\t\t\tString key = (String)entry.getKey();\n\t\t\t\tObject value = entry.getValue();\n\n\t\t\t\tif (Validator.isNotNull(key)) {\n\t\t\t\t\tvc.put(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":15217,"modified_method":"public static void insertVariables(\n\t\tVelocityContext vc, HttpServletRequest req) {\n\n\t\t// Request\n\n\t\tvc.put(\"request\", req);\n\n\t\t// Portlet config\n\n\t\tPortletConfigImpl portletConfig = (PortletConfigImpl)req.getAttribute(\n\t\t\tJavaConstants.JAVAX_PORTLET_CONFIG);\n\n\t\tif (portletConfig != null) {\n\t\t\tvc.put(\"portletConfig\", portletConfig);\n\t\t}\n\n\t\t// Render request\n\n\t\tPortletRequest portletRequest = (PortletRequest)req.getAttribute(\n\t\t\tJavaConstants.JAVAX_PORTLET_REQUEST);\n\n\t\tif (portletRequest != null) {\n\t\t\tif (portletRequest instanceof RenderRequest) {\n\t\t\t\tvc.put(\"renderRequest\", portletRequest);\n\t\t\t}\n\t\t}\n\n\t\t// Render response\n\n\t\tPortletResponse portletResponse = (PortletResponse)req.getAttribute(\n\t\t\tJavaConstants.JAVAX_PORTLET_RESPONSE);\n\n\t\tif (portletResponse != null) {\n\t\t\tif (portletResponse instanceof RenderResponse) {\n\t\t\t\tvc.put(\"renderResponse\", portletResponse);\n\t\t\t}\n\t\t}\n\n\t\t// Theme display\n\n\t\tThemeDisplay themeDisplay =\n\t\t\t(ThemeDisplay)req.getAttribute(WebKeys.THEME_DISPLAY);\n\n\t\tif (themeDisplay != null) {\n\t\t\tTheme theme = themeDisplay.getTheme();\n\n\t\t\tLayout layout = themeDisplay.getLayout();\n\t\t\tList layouts = themeDisplay.getLayouts();\n\n\t\t\tvc.put(\"themeDisplay\", themeDisplay);\n\t\t\tvc.put(\"company\", themeDisplay.getCompany());\n\t\t\tvc.put(\"user\", themeDisplay.getUser());\n\t\t\tvc.put(\"realUser\", themeDisplay.getRealUser());\n\t\t\tvc.put(\"layout\", layout);\n\t\t\tvc.put(\"layouts\", layouts);\n\t\t\tvc.put(\"plid\", String.valueOf(themeDisplay.getPlid()));\n\t\t\tvc.put(\"layoutTypePortlet\", themeDisplay.getLayoutTypePortlet());\n\t\t\tvc.put(\n\t\t\t\t\"portletGroupId\", new Long(themeDisplay.getPortletGroupId()));\n\t\t\tvc.put(\"permissionChecker\", themeDisplay.getPermissionChecker());\n\t\t\tvc.put(\"locale\", themeDisplay.getLocale());\n\t\t\tvc.put(\"timeZone\", themeDisplay.getTimeZone());\n\t\t\tvc.put(\"theme\", theme);\n\t\t\tvc.put(\"colorScheme\", themeDisplay.getColorScheme());\n\t\t\tvc.put(\"portletDisplay\", themeDisplay.getPortletDisplay());\n\n\t\t\t// Navigation items\n\n\t\t\tif (layout != null) {\n\t\t\t\tRequestVars requestVars = new RequestVars(\n\t\t\t\t\treq, themeDisplay, layout.getAncestorPlid(),\n\t\t\t\t\tlayout.getAncestorLayoutId());\n\n\t\t\t\tList navItems = NavItem.fromLayouts(requestVars, layouts);\n\n\t\t\t\tvc.put(\"navItems\", navItems);\n\t\t\t}\n\n\t\t\t// Full css and templates path\n\n\t\t\tString ctxName = GetterUtil.getString(\n\t\t\t\ttheme.getServletContextName());\n\n\t\t\tvc.put(\n\t\t\t\t\"fullCssPath\",\n\t\t\t\tctxName + theme.getVelocityResourceListener() +\n\t\t\t\t\ttheme.getCssPath());\n\n\t\t\tvc.put(\n\t\t\t\t\"fullTemplatesPath\",\n\t\t\t\tctxName + theme.getVelocityResourceListener() +\n\t\t\t\t\ttheme.getTemplatesPath());\n\n\t\t\t// Init\n\n\t\t\tvc.put(\n\t\t\t\t\"init\",\n\t\t\t\tthemeDisplay.getPathContext() +\n\t\t\t\t\tVelocityResourceListener.SERVLET_SEPARATOR +\n\t\t\t\t\t\t\"/html/themes/_unstyled/templates/init.vm\");\n\t\t}\n\n\t\t// Tiles attributes\n\n\t\tString tilesTitle = _insertTilesVariables(\n\t\t\tvc, req, \"tilesTitle\", \"title\");\n\t\tString tilesContent = _insertTilesVariables(\n\t\t\tvc, req, \"tilesContent\", \"content\");\n\t\tboolean tilesSelectable = GetterUtil.getBoolean(_insertTilesVariables(\n\t\t\tvc, req, \"tilesSelectable\", \"selectable\"));\n\n\t\tif (themeDisplay != null) {\n\t\t\tthemeDisplay.setTilesTitle(tilesTitle);\n\t\t\tthemeDisplay.setTilesContent(tilesContent);\n\t\t\tthemeDisplay.setTilesSelectable(tilesSelectable);\n\t\t}\n\n\t\t// Page title and subtitle\n\n\t\tvc.put(\"pageTitle\", req.getAttribute(WebKeys.PAGE_TITLE));\n\t\tvc.put(\"pageSubtitle\", req.getAttribute(WebKeys.PAGE_SUBTITLE));\n\n\t\t// Helper utilities\n\n\t\tinsertHelperUtilities(vc, null);\n\n\t\t// Insert custom vm variables\n\n\t\tMap vmVariables = (Map)req.getAttribute(WebKeys.VM_VARIABLES);\n\n\t\tif (vmVariables != null) {\n\t\t\tIterator itr = vmVariables.entrySet().iterator();\n\n\t\t\twhile (itr.hasNext()) {\n\t\t\t\tMap.Entry entry = (Map.Entry)itr.next();\n\n\t\t\t\tString key = (String)entry.getKey();\n\t\t\t\tObject value = entry.getValue();\n\n\t\t\t\tif (Validator.isNotNull(key)) {\n\t\t\t\t\tvc.put(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"71e331059e4a70285f20a8f9d39978b52555671b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void processInboundRouters(Class componentFactoryClass, org.mule.api.service.Service service) throws MuleException\n    {\n        Collection routerParsers = context.getRegistry().lookupObjects(RouterAnnotationParser.class);\n        for (int i = 0; i < componentFactoryClass.getAnnotations().length; i++)\n        {\n            Annotation annotation = componentFactoryClass.getAnnotations()[i];\n            Router routerAnnotation = annotation.annotationType().getAnnotation(Router.class);\n            if (routerAnnotation != null && routerAnnotation.type() == RouterType.Inbound)\n            {\n                for (Iterator iterator = routerParsers.iterator(); iterator.hasNext();)\n                {\n                    RouterAnnotationParser parser = (RouterAnnotationParser) iterator.next();\n                    if (parser.supports(annotation, componentFactoryClass, null))\n                    {\n                        service.getInboundRouter().addRouter(parser.parseRouter(annotation));\n                        break;\n                    }\n                }\n            }\n        }\n    }","id":15218,"modified_method":"protected void processInboundRouters(Class componentFactoryClass, org.mule.api.service.Service service) throws MuleException\n    {\n        for (int i = 0; i < componentFactoryClass.getAnnotations().length; i++)\n        {\n            Annotation annotation = componentFactoryClass.getAnnotations()[i];\n            Router routerAnnotation = annotation.annotationType().getAnnotation(Router.class);\n            if (routerAnnotation != null && routerAnnotation.type() == RouterType.Inbound)\n            {\n                RouterAnnotationParser parser = parserFactory.getRouterParser(annotation, componentFactoryClass, null);\n                if (parser != null)\n                {\n                    service.getInboundRouter().addRouter(parser.parseRouter(annotation));\n                }\n                else\n                {\n                    //TODO i18n\n                    throw new IllegalStateException(\"Cannot find parser for router annotation: \" + annotation.toString());\n                }\n            }\n        }\n    }","commit_id":"c296a58919e8fb2b2cfa964de8b05b719dfbe331","url":"https://github.com/mulesoft/mule"},{"original_method":"protected void processReplyRouters(Class componentFactoryClass, org.mule.api.service.Service service) throws MuleException\n    {\n        Collection routerParsers = context.getRegistry().lookupObjects(RouterAnnotationParser.class);\n        List<AnnotationMetaData> annotations = AnnotationUtils.getClassAndMethodAnnotations(componentFactoryClass);\n        for (AnnotationMetaData metaData : annotations)\n        {\n            Router routerAnnotation = metaData.getAnnotation().annotationType().getAnnotation(Router.class);\n            if (routerAnnotation != null && routerAnnotation.type() == RouterType.ReplyTo)\n            {\n                for (Iterator iterator = routerParsers.iterator(); iterator.hasNext();)\n                {\n                    RouterAnnotationParser parser = (RouterAnnotationParser) iterator.next();\n                    if (parser.supports(metaData.getAnnotation(), metaData.getClazz(), metaData.getMember()))\n                    {\n                        org.mule.api.routing.Router router = parser.parseRouter(metaData.getAnnotation());\n                        //Todo, wrap lifecycle\n                        if (router instanceof MuleContextAware)\n                        {\n                            ((MuleContextAware) router).setMuleContext(context);\n                        }\n                        router.initialise();\n                        service.getResponseRouter().addRouter(router);\n                        break;\n                    }\n                }\n            }\n        }\n    }","id":15219,"modified_method":"protected void processReplyRouters(Class componentFactoryClass, org.mule.api.service.Service service) throws MuleException\n    {\n        List<AnnotationMetaData> annotations = AnnotationUtils.getClassAndMethodAnnotations(componentFactoryClass);\n        for (AnnotationMetaData metaData : annotations)\n        {\n            Router routerAnnotation = metaData.getAnnotation().annotationType().getAnnotation(Router.class);\n            if (routerAnnotation != null && routerAnnotation.type() == RouterType.ReplyTo)\n            {\n\n\n                RouterAnnotationParser parser = parserFactory.getRouterParser(metaData.getAnnotation(), metaData.getClazz(), metaData.getMember());\n                if (parser != null)\n                {\n                    org.mule.api.routing.Router router = parser.parseRouter(metaData.getAnnotation());\n                    //Todo, wrap lifecycle\n                    if (router instanceof MuleContextAware)\n                    {\n                        ((MuleContextAware) router).setMuleContext(context);\n                    }\n                    router.initialise();\n                    service.getResponseRouter().addRouter(router);\n                    break;\n                }\n                else\n                {\n                    //TODO i18n\n                    throw new IllegalStateException(\"Cannot find parser for router annotation: \" + metaData.getAnnotation().toString());\n                }\n            }\n        }\n    }","commit_id":"c296a58919e8fb2b2cfa964de8b05b719dfbe331","url":"https://github.com/mulesoft/mule"},{"original_method":"protected OutboundRouter processOutboundRouter(Class componentFactoryClass) throws MuleException\n    {\n        Collection routerParsers = context.getRegistry().lookupObjects(RouterAnnotationParser.class);\n        OutboundRouter router = null;\n\n        List<AnnotationMetaData> annotations = AnnotationUtils.getClassAndMethodAnnotations(componentFactoryClass);\n        for (AnnotationMetaData metaData : annotations)\n        {\n            Router routerAnnotation = metaData.getAnnotation().annotationType().getAnnotation(Router.class);\n            if (routerAnnotation != null && routerAnnotation.type() == RouterType.Outbound)\n            {\n                if (router != null)\n                {\n                    //This is only here to add some validation\n                    throw new IllegalStateException(\"You can onnly configure one outbound router on a service\");\n                }\n                for (Iterator iterator = routerParsers.iterator(); iterator.hasNext();)\n                {\n                    RouterAnnotationParser parser = (RouterAnnotationParser) iterator.next();\n                    if (parser.supports(metaData.getAnnotation(), metaData.getClazz(), metaData.getMember()))\n                    {\n                        router = (OutboundRouter) parser.parseRouter(metaData.getAnnotation());\n                        break;\n                    }\n                }\n            }\n        }\n        if (router == null)\n        {\n            router = new OutboundPassThroughRouter();\n        }\n        //Todo, wrap lifecycle\n        if (router instanceof MuleContextAware)\n        {\n            ((MuleContextAware) router).setMuleContext(context);\n        }\n        router.initialise();\n        return router;\n    }","id":15220,"modified_method":"protected OutboundRouter processOutboundRouter(Class componentFactoryClass) throws MuleException\n    {\n        Collection routerParsers = context.getRegistry().lookupObjects(RouterAnnotationParser.class);\n        OutboundRouter router = null;\n\n        List<AnnotationMetaData> annotations = AnnotationUtils.getClassAndMethodAnnotations(componentFactoryClass);\n        for (AnnotationMetaData metaData : annotations)\n        {\n            Router routerAnnotation = metaData.getAnnotation().annotationType().getAnnotation(Router.class);\n            if (routerAnnotation != null && routerAnnotation.type() == RouterType.Outbound)\n            {\n                if (router != null)\n                {\n                    //TODO i18n\n                    throw new IllegalStateException(\"You can only configure one outbound router on a service\");\n                }\n                RouterAnnotationParser parser = parserFactory.getRouterParser(metaData.getAnnotation(), metaData.getClazz(), metaData.getMember());\n                if (parser != null)\n                {\n                    router = (OutboundRouter) parser.parseRouter(metaData.getAnnotation());\n                }\n                else\n                {\n                    //TODO i18n\n                    throw new IllegalStateException(\"Cannot find parser for router annotation: \" + metaData.getAnnotation().toString());\n                }\n            }\n        }\n        if (router == null)\n        {\n            router = new OutboundPassThroughRouter();\n        }\n        //Todo, wrap lifecycle\n        if (router instanceof MuleContextAware)\n        {\n            ((MuleContextAware) router).setMuleContext(context);\n        }\n        router.initialise();\n        return router;\n    }","commit_id":"c296a58919e8fb2b2cfa964de8b05b719dfbe331","url":"https://github.com/mulesoft/mule"},{"original_method":"static synchronized ExpressionArgument parseAnnotation(Annotation annotation, Class paramType, MuleContext muleContext)\n    {\n        Collection c = muleContext.getRegistry().lookupObjects(ExpressionParser.class);\n        for (Iterator iterator = c.iterator(); iterator.hasNext();)\n        {\n            ExpressionParser parser = (ExpressionParser) iterator.next();\n            if (parser.supports(annotation))\n            {\n                return parser.parse(annotation, paramType);\n            }\n        }\n\n        throw new IllegalArgumentException(AnnotationsMessages.noParserFoundForAnnotation(annotation).getMessage());\n    }","id":15221,"modified_method":"static synchronized ExpressionArgument parseAnnotation(Annotation annotation, Class paramType, MuleContext muleContext)\n    {\n        AnnotationsParserFactory factory;\n        try\n        {\n            factory = muleContext.getRegistry().lookupObject(AnnotationsParserFactory.class);\n        }\n        catch (RegistrationException e)\n        {\n            //TODO better exception message\n            throw new IllegalArgumentException(AnnotationsMessages.noParserFoundForAnnotation(annotation).getMessage());\n        }\n        ExpressionParser parser = factory.getExpressionParser(annotation);\n        if (parser == null)\n        {\n            throw new IllegalArgumentException(AnnotationsMessages.noParserFoundForAnnotation(annotation).getMessage());\n        }\n        return parser.parse(annotation, paramType);\n    }","commit_id":"c296a58919e8fb2b2cfa964de8b05b719dfbe331","url":"https://github.com/mulesoft/mule"},{"original_method":"protected void addDefaultParsers()\n    {\n        //Endpoint parsers\n        //Note that currently iBeans provides all the other endpoint annotations\n        registerEndpointParser(new ReplyAnnotationParser());\n\n        registerExpressionParser(new MuleAnnotationParser());\n        registerExpressionParser(new CustomEvaluatorAnnotationParser());\n        registerExpressionParser(new FunctionAnnotationParser());\n        registerExpressionParser(new XPathAnnotationParser());\n        registerExpressionParser(new BeanAnnotationParser());\n        registerExpressionParser(new OgnlAnnotationParser());\n        registerExpressionParser(new GroovyAnnotationParser());\n\n\n        processors.add(new AnnotatedServiceObjectProcessor());\n        processors.add(new DirectBindAnnotationProcessor());\n    }","id":15222,"modified_method":"protected void addDefaultParsers()\n    {\n        //Endpoint parsers\n        //Note that currently iBeans provides all the other endpoint annotations\n        registerEndpointParser(new ReplyAnnotationParser());\n\n        //Router parsers\n        registerRouterParser(new WireTapRouterParser());\n        registerRouterParser(new IdempotentRouterParser());\n        registerRouterParser(new ExpressionFilterAnnotationParser());\n        //Splitter is Experimental, has limited use\n        registerRouterParser(new SplitterRouterParser());\n\n        //Expression parsers\n        registerExpressionParser(new MuleAnnotationParser());\n        registerExpressionParser(new CustomEvaluatorAnnotationParser());\n        registerExpressionParser(new FunctionAnnotationParser());\n        registerExpressionParser(new XPathAnnotationParser());\n        registerExpressionParser(new BeanAnnotationParser());\n        registerExpressionParser(new OgnlAnnotationParser());\n        registerExpressionParser(new GroovyAnnotationParser());\n\n        //Processors\n        processors.add(new AnnotatedServiceObjectProcessor());\n        processors.add(new DirectBindAnnotationProcessor());\n    }","commit_id":"c296a58919e8fb2b2cfa964de8b05b719dfbe331","url":"https://github.com/mulesoft/mule"},{"original_method":"public ExpressionParser getExpressionParser(Annotation annotation, Class aClass, Member member)\n    {\n        for (ExpressionParser parser : expressionParsers)\n        {\n            if (parser.supports(annotation))\n            {\n                return parser;\n            }\n        }\n        return null;\n    }","id":15223,"modified_method":"public RouterAnnotationParser getRouterParser(Annotation annotation, Class aClass, Member member)\n    {\n        for (RouterAnnotationParser parser : routerParsers)\n        {\n            if (parser.supports(annotation, aClass, member))\n            {\n                return parser;\n            }\n        }\n        return null;\n    }","commit_id":"c296a58919e8fb2b2cfa964de8b05b719dfbe331","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override\n    protected void setUp() throws Exception {\n        super.setUp();\n\n        Object lookedUpBean = context.getRegistry().lookup(\"myBean\");\n        assertSame(\"Lookup of 'myBean' should return same object!\", myBean, lookedUpBean);\n    }","id":15224,"modified_method":"@Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        checkBean();\n    }","commit_id":"de1452e50613ed94421c8a41052751126284a650","url":"https://github.com/apache/camel"},{"original_method":"@SuppressWarnings(\"deprecation\")\n    public MethodInfo(CamelContext camelContext, Class<?> type, Method method, List<ParameterInfo> parameters, List<ParameterInfo> bodyParameters,\n                      boolean hasCustomAnnotation, boolean hasHandlerAnnotation) {\n        this.camelContext = camelContext;\n        this.type = type;\n        this.method = method;\n        this.parameters = parameters;\n        this.bodyParameters = bodyParameters;\n        this.hasCustomAnnotation = hasCustomAnnotation;\n        this.hasHandlerAnnotation = hasHandlerAnnotation;\n        this.parametersExpression = createParametersExpression();\n\n        Pattern oneway = findOneWayAnnotation(method);\n        if (oneway != null) {\n            pattern = oneway.value();\n        }\n        \n        if (method.getAnnotation(org.apache.camel.RoutingSlip.class) != null\n                && matchContext(method.getAnnotation(org.apache.camel.RoutingSlip.class).context())) {\n            org.apache.camel.RoutingSlip annotation = method.getAnnotation(org.apache.camel.RoutingSlip.class);\n            routingSlip = new RoutingSlip(camelContext);\n            routingSlip.setDelimiter(annotation.delimiter());\n            routingSlip.setIgnoreInvalidEndpoints(annotation.ignoreInvalidEndpoints());\n            // add created routingSlip as a service so we have its lifecycle managed\n            try {\n                camelContext.addService(routingSlip);\n            } catch (Exception e) {\n                throw ObjectHelper.wrapRuntimeCamelException(e);\n            }\n        }\n\n        if (method.getAnnotation(org.apache.camel.DynamicRouter.class) != null\n                && matchContext(method.getAnnotation(org.apache.camel.DynamicRouter.class).context())) {\n            org.apache.camel.DynamicRouter annotation = method.getAnnotation(org.apache.camel.DynamicRouter.class);\n            dynamicRouter = new DynamicRouter(camelContext);\n            dynamicRouter.setDelimiter(annotation.delimiter());\n            dynamicRouter.setIgnoreInvalidEndpoints(annotation.ignoreInvalidEndpoints());\n            // add created dynamicRouter as a service so we have its lifecycle managed\n            try {\n                camelContext.addService(dynamicRouter);\n            } catch (Exception e) {\n                throw ObjectHelper.wrapRuntimeCamelException(e);\n            }\n        }\n\n        if (method.getAnnotation(org.apache.camel.RecipientList.class) != null\n                && matchContext(method.getAnnotation(org.apache.camel.RecipientList.class).context())) {\n\n            org.apache.camel.RecipientList annotation = method.getAnnotation(org.apache.camel.RecipientList.class);\n\n            recipientList = new RecipientList(camelContext, annotation.delimiter());\n            recipientList.setStopOnException(annotation.stopOnException());\n            recipientList.setIgnoreInvalidEndpoints(annotation.ignoreInvalidEndpoints());\n            recipientList.setParallelProcessing(annotation.parallelProcessing());\n            recipientList.setStreaming(annotation.streaming());\n            recipientList.setTimeout(annotation.timeout());\n            recipientList.setShareUnitOfWork(annotation.shareUnitOfWork());\n\n            if (ObjectHelper.isNotEmpty(annotation.executorServiceRef())) {\n                ExecutorService executor = camelContext.getExecutorServiceManager().newDefaultThreadPool(this, annotation.executorServiceRef());\n                recipientList.setExecutorService(executor);\n            }\n\n            if (annotation.parallelProcessing() && recipientList.getExecutorService() == null) {\n                // we are running in parallel so we need a thread pool\n                ExecutorService executor = camelContext.getExecutorServiceManager().newDefaultThreadPool(this, \"@RecipientList\");\n                recipientList.setExecutorService(executor);\n            }\n\n            if (ObjectHelper.isNotEmpty(annotation.strategyRef())) {\n                AggregationStrategy strategy = CamelContextHelper.mandatoryLookup(camelContext, annotation.strategyRef(), AggregationStrategy.class);\n                recipientList.setAggregationStrategy(strategy);\n            }\n\n            if (ObjectHelper.isNotEmpty(annotation.onPrepareRef())) {\n                Processor onPrepare = CamelContextHelper.mandatoryLookup(camelContext, annotation.onPrepareRef(), Processor.class);\n                recipientList.setOnPrepare(onPrepare);\n            }\n\n            // add created recipientList as a service so we have its lifecycle managed\n            try {\n                camelContext.addService(recipientList);\n            } catch (Exception e) {\n                throw ObjectHelper.wrapRuntimeCamelException(e);\n            }\n        }\n    }","id":15225,"modified_method":"@SuppressWarnings(\"deprecation\")\n    public MethodInfo(CamelContext camelContext, Class<?> type, Method method, List<ParameterInfo> parameters, List<ParameterInfo> bodyParameters,\n                      boolean hasCustomAnnotation, boolean hasHandlerAnnotation) {\n        this.camelContext = camelContext;\n        this.type = type;\n        this.method = method;\n        this.parameters = parameters;\n        this.bodyParameters = bodyParameters;\n        this.hasCustomAnnotation = hasCustomAnnotation;\n        this.hasHandlerAnnotation = hasHandlerAnnotation;\n        this.parametersExpression = createParametersExpression();\n        \n        Map<Class<?>, Annotation> collectedMethodAnnotation = collectMethodAnnotations(type, method);\n\n        Pattern oneway = findOneWayAnnotation(method);\n        if (oneway != null) {\n            pattern = oneway.value();\n        }\n        \n        org.apache.camel.RoutingSlip routingSlipAnnotation = \n            (org.apache.camel.RoutingSlip)collectedMethodAnnotation.get(org.apache.camel.RoutingSlip.class);\n        if (routingSlipAnnotation != null && matchContext(routingSlipAnnotation.context())) {\n            routingSlip = new RoutingSlip(camelContext);\n            routingSlip.setDelimiter(routingSlipAnnotation.delimiter());\n            routingSlip.setIgnoreInvalidEndpoints(routingSlipAnnotation.ignoreInvalidEndpoints());\n            // add created routingSlip as a service so we have its lifecycle managed\n            try {\n                camelContext.addService(routingSlip);\n            } catch (Exception e) {\n                throw ObjectHelper.wrapRuntimeCamelException(e);\n            }\n        }\n\n        org.apache.camel.DynamicRouter dynamicRouterAnnotation = \n            (org.apache.camel.DynamicRouter)collectedMethodAnnotation.get(org.apache.camel.DynamicRouter.class);\n        if (dynamicRouterAnnotation != null\n                && matchContext(dynamicRouterAnnotation.context())) {\n            dynamicRouter = new DynamicRouter(camelContext);\n            dynamicRouter.setDelimiter(dynamicRouterAnnotation.delimiter());\n            dynamicRouter.setIgnoreInvalidEndpoints(dynamicRouterAnnotation.ignoreInvalidEndpoints());\n            // add created dynamicRouter as a service so we have its lifecycle managed\n            try {\n                camelContext.addService(dynamicRouter);\n            } catch (Exception e) {\n                throw ObjectHelper.wrapRuntimeCamelException(e);\n            }\n        }\n\n        org.apache.camel.RecipientList recipientListAnnotation = \n            (org.apache.camel.RecipientList)collectedMethodAnnotation.get(org.apache.camel.RecipientList.class);\n        if (recipientListAnnotation != null\n                && matchContext(recipientListAnnotation.context())) {\n            recipientList = new RecipientList(camelContext, recipientListAnnotation.delimiter());\n            recipientList.setStopOnException(recipientListAnnotation.stopOnException());\n            recipientList.setIgnoreInvalidEndpoints(recipientListAnnotation.ignoreInvalidEndpoints());\n            recipientList.setParallelProcessing(recipientListAnnotation.parallelProcessing());\n            recipientList.setStreaming(recipientListAnnotation.streaming());\n            recipientList.setTimeout(recipientListAnnotation.timeout());\n            recipientList.setShareUnitOfWork(recipientListAnnotation.shareUnitOfWork());\n\n            if (ObjectHelper.isNotEmpty(recipientListAnnotation.executorServiceRef())) {\n                ExecutorService executor = camelContext.getExecutorServiceManager().newDefaultThreadPool(this, recipientListAnnotation.executorServiceRef());\n                recipientList.setExecutorService(executor);\n            }\n\n            if (recipientListAnnotation.parallelProcessing() && recipientList.getExecutorService() == null) {\n                // we are running in parallel so we need a thread pool\n                ExecutorService executor = camelContext.getExecutorServiceManager().newDefaultThreadPool(this, \"@RecipientList\");\n                recipientList.setExecutorService(executor);\n            }\n\n            if (ObjectHelper.isNotEmpty(recipientListAnnotation.strategyRef())) {\n                AggregationStrategy strategy = CamelContextHelper.mandatoryLookup(camelContext, recipientListAnnotation.strategyRef(), AggregationStrategy.class);\n                recipientList.setAggregationStrategy(strategy);\n            }\n\n            if (ObjectHelper.isNotEmpty(recipientListAnnotation.onPrepareRef())) {\n                Processor onPrepare = CamelContextHelper.mandatoryLookup(camelContext, recipientListAnnotation.onPrepareRef(), Processor.class);\n                recipientList.setOnPrepare(onPrepare);\n            }\n\n            // add created recipientList as a service so we have its lifecycle managed\n            try {\n                camelContext.addService(recipientList);\n            } catch (Exception e) {\n                throw ObjectHelper.wrapRuntimeCamelException(e);\n            }\n        }\n    }","commit_id":"de1452e50613ed94421c8a41052751126284a650","url":"https://github.com/apache/camel"},{"original_method":"protected String getQuestionPath(\n\t\t\tPortletDataContext context, PollsQuestion question) {\n\t\treturn context.getPortletPath(PortletKeys.POLLS) + \"/questions/\" +\n\t\t\tquestion.getQuestionId() + \".xml\";\n\t}","id":15226,"modified_method":"protected String getQuestionPath(\n\t\tPortletDataContext context, PollsQuestion question) {\n\n\t\tStringMaker sm = new StringMaker();\n\n\t\tsm.append(context.getPortletPath(PortletKeys.POLLS));\n\t\tsm.append(\"/questions/\");\n\t\tsm.append(question.getQuestionId());\n\t\tsm.append(\".xml\");\n\n\t\treturn sm.toString();\n\t}","commit_id":"991ee4d148f227d37458ee26fccf2dfa94449d4b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void exportVote(\n\t\t\tPortletDataContext context, Element questionsEl, PollsVote vote)\n\t\tthrows PortalException, SystemException {\n\n\t\tString path = getVotePath(context, vote);\n\n\t\tquestionsEl.addElement(\"vote\").addAttribute(\"path\", path);\n\n\t\tif (context.isPathNotProcessed(path)) {\n\t\t\tcontext.addZipEntry(path, vote);\n\t\t}\n\t}","id":15227,"modified_method":"protected void exportVote(\n\t\t\tPortletDataContext context, Element questionsEl, PollsVote vote)\n\t\tthrows PortalException, SystemException {\n\n\t\tString path = getVotePath(context, vote);\n\n\t\tElement voteEl = questionsEl.addElement(\"vote\");\n\n\t\tvoteEl.addAttribute(\"path\", path);\n\n\t\tif (context.isPathNotProcessed(path)) {\n\t\t\tcontext.addZipEntry(path, vote);\n\t\t}\n\t}","commit_id":"991ee4d148f227d37458ee26fccf2dfa94449d4b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public PortletPreferences importData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences prefs, String data)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tXStream xStream = new XStream();\n\n\t\t\tDocument doc = DocumentUtil.readDocumentFromXML(data);\n\n\t\t\tElement root = doc.getRootElement();\n\n\t\t\t// Questions\n\n\t\t\tList<Element> questionEls =\n\t\t\t\troot.element(\"questions\").elements(\"question\");\n\n\t\t\tMap<Long, Long> questionPKs = context.getNewPrimaryKeysMap(\n\t\t\t\tPollsQuestion.class);\n\n\t\t\tfor (Element el : questionEls) {\n\t\t\t\tString path = el.attributeValue(\"path\");\n\n\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\tPollsQuestion question =\n\t\t\t\t\t\t(PollsQuestion)context.getZipEntryAsObject(path);\n\n\t\t\t\t\timportQuestion(context, questionPKs, question);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Choices\n\n\t\t\tList<Element> choiceEls =\n\t\t\t\troot.element(\"choices\").elements(\"choice\");\n\n\t\t\tMap<Long, Long> choicePKs = context.getNewPrimaryKeysMap(\n\t\t\t\tPollsChoice.class);\n\n\t\t\tfor (Element el : choiceEls) {\n\t\t\t\tString path = el.attributeValue(\"path\");\n\n\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\tPollsChoice choice =\n\t\t\t\t\t\t(PollsChoice)context.getZipEntryAsObject(path);\n\n\t\t\t\t\timportChoice(context, questionPKs, choicePKs, choice);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Votes\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"votes\")) {\n\t\t\t\tList<Element> voteEls =\n\t\t\t\t\troot.element(\"votes\").elements(\"vote\");\n\n\t\t\t\tfor (Element el : voteEls) {\n\t\t\t\t\tString path = el.attributeValue(\"path\");\n\n\t\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\t\tPollsVote vote =\n\t\t\t\t\t\t\t(PollsVote)context.getZipEntryAsObject(path);\n\n\t\t\t\t\t\timportVote(context, questionPKs, choicePKs, vote);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","id":15228,"modified_method":"public PortletPreferences importData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences prefs, String data)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tDocument doc = DocumentUtil.readDocumentFromXML(data);\n\n\t\t\tElement root = doc.getRootElement();\n\n\t\t\tList<Element> questionEls = root.element(\"questions\").elements(\n\t\t\t\t\"question\");\n\n\t\t\tMap<Long, Long> questionPKs = context.getNewPrimaryKeysMap(\n\t\t\t\tPollsQuestion.class);\n\n\t\t\tfor (Element questionEl : questionEls) {\n\t\t\t\tString path = questionEl.attributeValue(\"path\");\n\n\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\tPollsQuestion question =\n\t\t\t\t\t\t(PollsQuestion)context.getZipEntryAsObject(path);\n\n\t\t\t\t\timportQuestion(context, questionPKs, question);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tList<Element> choiceEls = root.element(\"choices\").elements(\n\t\t\t\t\"choice\");\n\n\t\t\tMap<Long, Long> choicePKs = context.getNewPrimaryKeysMap(\n\t\t\t\tPollsChoice.class);\n\n\t\t\tfor (Element choiceEl : choiceEls) {\n\t\t\t\tString path = choiceEl.attributeValue(\"path\");\n\n\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\tPollsChoice choice =\n\t\t\t\t\t\t(PollsChoice)context.getZipEntryAsObject(path);\n\n\t\t\t\t\timportChoice(context, questionPKs, choicePKs, choice);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"votes\")) {\n\t\t\t\tList<Element> voteEls = root.element(\"votes\").elements(\"vote\");\n\n\t\t\t\tfor (Element voteEl : voteEls) {\n\t\t\t\t\tString path = voteEl.attributeValue(\"path\");\n\n\t\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\t\tPollsVote vote = (PollsVote)context.getZipEntryAsObject(\n\t\t\t\t\t\t\tpath);\n\n\t\t\t\t\t\timportVote(context, questionPKs, choicePKs, vote);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","commit_id":"991ee4d148f227d37458ee26fccf2dfa94449d4b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getVotePath(\n\t\t\tPortletDataContext context, PollsVote vote) {\n\t\treturn context.getPortletPath(PortletKeys.POLLS) + \"/questions/\" +\n\t\t\tvote.getQuestionId() + \"/votes/\" + vote.getVoteId() +\n\t\t\t\t\".xml\";\n\t}","id":15229,"modified_method":"protected String getVotePath(PortletDataContext context, PollsVote vote) {\n\t\tStringMaker sm = new StringMaker();\n\n\t\tsm.append(context.getPortletPath(PortletKeys.POLLS));\n\t\tsm.append(\"/questions/\");\n\t\tsm.append(vote.getQuestionId());\n\t\tsm.append(\"/votes/\");\n\t\tsm.append(vote.getVoteId());\n\t\tsm.append(\".xml\");\n\n\t\treturn sm.toString();\n\t}","commit_id":"991ee4d148f227d37458ee26fccf2dfa94449d4b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void exportQuestion(\n\t\t\tPortletDataContext context, Element questionsEl, Element choicesEl,\n\t\t\tElement votesEl, PollsQuestion question)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (context.isWithinDateRange(question.getModifiedDate())) {\n\t\t\tString path = getQuestionPath(context, question);\n\n\t\t\tquestionsEl.addElement(\"question\").addAttribute(\"path\", path);\n\n\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\tquestion.setUserUuid(question.getUserUuid());\n\n\t\t\t\tList<PollsChoice> choices = PollsChoiceUtil.findByQuestionId(\n\t\t\t\t\tquestion.getQuestionId());\n\n\t\t\t\tfor (PollsChoice choice : choices) {\n\t\t\t\t\texportChoice(context, choicesEl, choice);\n\t\t\t\t}\n\n\t\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"votes\")) {\n\t\t\t\t\tList<PollsVote> votes = PollsVoteUtil.findByQuestionId(\n\t\t\t\t\t\tquestion.getQuestionId());\n\n\t\t\t\t\tfor (PollsVote vote : votes) {\n\t\t\t\t\t\texportVote(context, votesEl, vote);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcontext.addZipEntry(path, question);\n\t\t\t}\n\t\t}\n\t}","id":15230,"modified_method":"protected void exportQuestion(\n\t\t\tPortletDataContext context, Element questionsEl, Element choicesEl,\n\t\t\tElement votesEl, PollsQuestion question)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (!context.isWithinDateRange(question.getModifiedDate())) {\n\t\t\treturn;\n\t\t}\n\n\t\tString path = getQuestionPath(context, question);\n\n\t\tElement questionEl = questionsEl.addElement(\"question\");\n\n\t\tquestionEl.addAttribute(\"path\", path);\n\n\t\tif (context.isPathNotProcessed(path)) {\n\t\t\tquestion.setUserUuid(question.getUserUuid());\n\n\t\t\tList<PollsChoice> choices = PollsChoiceUtil.findByQuestionId(\n\t\t\t\tquestion.getQuestionId());\n\n\t\t\tfor (PollsChoice choice : choices) {\n\t\t\t\texportChoice(context, choicesEl, choice);\n\t\t\t}\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"votes\")) {\n\t\t\t\tList<PollsVote> votes = PollsVoteUtil.findByQuestionId(\n\t\t\t\t\tquestion.getQuestionId());\n\n\t\t\t\tfor (PollsVote vote : votes) {\n\t\t\t\t\texportVote(context, votesEl, vote);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcontext.addZipEntry(path, question);\n\t\t}\n\t}","commit_id":"991ee4d148f227d37458ee26fccf2dfa94449d4b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void exportChoice(\n\t\t\tPortletDataContext context, Element questionsEl, PollsChoice choice)\n\t\tthrows PortalException, SystemException {\n\n\t\tString path = getChoicePath(context, choice);\n\n\t\tquestionsEl.addElement(\"choice\").addAttribute(\"path\", path);\n\n\t\tif (context.isPathNotProcessed(path)) {\n\t\t\tcontext.addZipEntry(path, choice);\n\t\t}\n\t}","id":15231,"modified_method":"protected void exportChoice(\n\t\t\tPortletDataContext context, Element questionsEl, PollsChoice choice)\n\t\tthrows PortalException, SystemException {\n\n\t\tString path = getChoicePath(context, choice);\n\n\t\tElement choiceEl = questionsEl.addElement(\"choice\");\n\n\t\tchoiceEl.addAttribute(\"path\", path);\n\n\t\tif (context.isPathNotProcessed(path)) {\n\t\t\tcontext.addZipEntry(path, choice);\n\t\t}\n\t}","commit_id":"991ee4d148f227d37458ee26fccf2dfa94449d4b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getChoicePath(\n\t\t\tPortletDataContext context, PollsChoice choice) {\n\t\treturn context.getPortletPath(PortletKeys.POLLS) + \"/questions/\" +\n\t\t\tchoice.getQuestionId() + \"/choices/\" + choice.getChoiceId() +\n\t\t\t\t\".xml\";\n\t}","id":15232,"modified_method":"protected String getChoicePath(\n\t\tPortletDataContext context, PollsChoice choice) {\n\n\t\tStringMaker sm = new StringMaker();\n\n\t\tsm.append(context.getPortletPath(PortletKeys.POLLS));\n\t\tsm.append(\"/questions/\");\n\t\tsm.append(choice.getQuestionId());\n\t\tsm.append(\"/choices/\");\n\t\tsm.append(choice.getChoiceId());\n\t\tsm.append(\".xml\");\n\n\t\treturn sm.toString();\n\t}","commit_id":"991ee4d148f227d37458ee26fccf2dfa94449d4b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n     * @return Connection.\n     * @throws SQLException In case of error.\n     */\n    protected Connection connection() throws SQLException {\n        CacheStoreSession ses = session();\n\n        if (ses.transaction() != null) {\n            Map<String, Connection> prop = ses.properties();\n\n            Connection conn = prop.get(ATTR_CONN);\n\n            if (conn == null) {\n                conn = openConnection(false);\n\n                // Store connection in session, so it can be accessed\n                // for other operations on the same session.\n                prop.put(ATTR_CONN, conn);\n            }\n\n            return conn;\n        }\n        // Transaction can be null in case of simple load operation.\n        else\n            return openConnection(true);\n    }","id":15233,"modified_method":"/**\n     * @return Connection.\n     * @throws SQLException In case of error.\n     */\n    protected Connection connection() throws SQLException {\n        CacheStoreSession ses = session();\n\n        if (ses.transaction() != null) {\n            Map<String, Connection> prop = ses.properties();\n\n            Connection conn = prop.get(ATTR_CONN_PROP);\n\n            if (conn == null) {\n                conn = openConnection(false);\n\n                // Store connection in session to used it for other operations in the same session.\n                prop.put(ATTR_CONN_PROP, conn);\n            }\n\n            return conn;\n        }\n        // Transaction can be null in case of simple load operation.\n        else\n            return openConnection(true);\n    }","commit_id":"76c2f747f47b217a733f6749677799de8a395e56","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Construct load cache from range.\n     *\n     * @param m Type mapping description.\n     * @param clo Closure for loaded values.\n     * @param lowerBound Lower bound for range.\n     * @param upperBound Upper bound for range.\n     * @return Callable for pool submit.\n     */\n    private Callable<Void> loadCacheRange(final EntryMapping m, final IgniteBiInClosure<K, V> clo,\n        @Nullable final Object[] lowerBound, @Nullable final Object[] upperBound) {\n        return new Callable<Void>() {\n            @Override public Void call() throws Exception {\n                Connection conn = null;\n\n                PreparedStatement stmt = null;\n\n                try {\n                    conn = openConnection(true);\n\n                    stmt = conn.prepareStatement(m.loadCacheRangeQuery(lowerBound != null, upperBound != null));\n\n                    int ix = 1;\n\n                    if (lowerBound != null)\n                        for (int i = lowerBound.length; i > 0; i--)\n                            for (int j = 0; j < i; j++)\n                                stmt.setObject(ix++, lowerBound[j]);\n\n                    if (upperBound != null)\n                        for (int i = upperBound.length; i > 0; i--)\n                            for (int j = 0; j < i; j++)\n                                stmt.setObject(ix++, upperBound[j]);\n\n                    ResultSet rs = stmt.executeQuery();\n\n                    while (rs.next()) {\n                        K key = buildObject(m.keyType(), m.keyDescriptors(), rs);\n                        V val = buildObject(m.valueType(), m.valueDescriptors(), rs);\n\n                        clo.apply(key, val);\n                    }\n                }\n                catch (SQLException e) {\n                    throw new IgniteCheckedException(\"Failed to load cache\", e);\n                }\n                finally {\n                    U.closeQuiet(stmt);\n\n                    U.closeQuiet(conn);\n                }\n\n                return null;\n            }\n        };\n    }","id":15234,"modified_method":"/**\n     * Construct load cache from range.\n     *\n     * @param m Type mapping description.\n     * @param clo Closure that will be applied to loaded values.\n     * @param lowerBound Lower bound for range.\n     * @param upperBound Upper bound for range.\n     * @return Callable for pool submit.\n     */\n    private Callable<Void> loadCacheRange(final EntryMapping m, final IgniteBiInClosure<K, V> clo,\n        @Nullable final Object[] lowerBound, @Nullable final Object[] upperBound) {\n        return new Callable<Void>() {\n            @Override public Void call() throws Exception {\n                Connection conn = null;\n\n                PreparedStatement stmt = null;\n\n                try {\n                    conn = openConnection(true);\n\n                    stmt = conn.prepareStatement(lowerBound == null && upperBound == null\n                        ? m.loadCacheQry\n                        : m.loadCacheRangeQuery(lowerBound != null, upperBound != null));\n\n                    int ix = 1;\n\n                    if (lowerBound != null)\n                        for (int i = lowerBound.length; i > 0; i--)\n                            for (int j = 0; j < i; j++)\n                                stmt.setObject(ix++, lowerBound[j]);\n\n                    if (upperBound != null)\n                        for (int i = upperBound.length; i > 0; i--)\n                            for (int j = 0; j < i; j++)\n                                stmt.setObject(ix++, upperBound[j]);\n\n                    ResultSet rs = stmt.executeQuery();\n\n                    while (rs.next()) {\n                        K key = buildObject(m.keyType(), m.keyDescriptors(), rs);\n                        V val = buildObject(m.valueType(), m.valueDescriptors(), rs);\n\n                        clo.apply(key, val);\n                    }\n                }\n                catch (SQLException e) {\n                    throw new IgniteCheckedException(\"Failed to load cache\", e);\n                }\n                finally {\n                    U.closeQuiet(stmt);\n\n                    U.closeQuiet(conn);\n                }\n\n                return null;\n            }\n        };\n    }","commit_id":"76c2f747f47b217a733f6749677799de8a395e56","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override public void deleteAll(Collection<?> keys) throws CacheWriterException {\n        assert keys != null;\n\n        Connection conn = null;\n\n        try {\n            conn = connection();\n\n            Map<Object, PreparedStatement> stmts = U.newHashMap(typeMapping.size());\n\n            Object prevTypeId = null;\n\n            PreparedStatement delStmt = null;\n\n            int cnt = 0;\n\n            for (Object key : keys) {\n                Object typeId = keyId(key);\n\n                EntryMapping m = typeMapping.get(new IgniteBiTuple<>(session().cacheName(), typeId));\n\n                if (m == null)\n                    throw new CacheWriterException(\"Failed to find mapping description for key: \" + key);\n\n                if (prevTypeId != null && !prevTypeId.equals(typeId)) {\n                    delStmt = stmts.get(prevTypeId);\n\n                    delStmt.executeBatch();\n\n                    cnt = 0;\n                }\n\n                prevTypeId = typeId;\n\n                delStmt = stmts.get(typeId);\n\n                if (delStmt == null)\n                    stmts.put(typeId, delStmt = conn.prepareStatement(m.remQry));\n\n                fillKeyParameters(delStmt, m, key);\n\n                delStmt.addBatch();\n\n                if (cnt++ % batchSz == 0)\n                    delStmt.executeBatch();\n            }\n\n            if (delStmt != null && cnt % batchSz != 0)\n                delStmt.executeBatch();\n\n            for (PreparedStatement st : stmts.values())\n                U.closeQuiet(st);\n        }\n        catch (SQLException e) {\n            throw new CacheWriterException(\"Failed to open connection\", e);\n        }\n        catch (Exception e) {\n            throw new CacheWriterException(\"Failed to remove values from database\", e);\n        }\n        finally {\n            closeConnection(conn);\n        }\n    }","id":15235,"modified_method":"/** {@inheritDoc} */\n    @Override public void deleteAll(Collection<?> keys) throws CacheWriterException {\n        assert keys != null;\n\n        Connection conn = null;\n\n        try {\n            conn = connection();\n\n            Map<Object, PreparedStatement> stmts = U.newHashMap(entryMappings.size());\n\n            Object prevKeyId = null;\n\n            PreparedStatement delStmt = null;\n\n            int cnt = 0;\n\n            for (Object key : keys) {\n                Object keyId = keyId(key);\n\n                EntryMapping em = entryMapping(keyId, key);\n\n                if (prevKeyId != null && !prevKeyId.equals(keyId)) {\n                    delStmt = stmts.get(prevKeyId);\n\n                    delStmt.executeBatch();\n\n                    cnt = 0;\n                }\n\n                prevKeyId = keyId;\n\n                delStmt = stmts.get(keyId);\n\n                if (delStmt == null)\n                    stmts.put(keyId, delStmt = conn.prepareStatement(em.remQry));\n\n                fillKeyParameters(delStmt, em, key);\n\n                delStmt.addBatch();\n\n                if (cnt++ % batchSz == 0)\n                    delStmt.executeBatch();\n            }\n\n            if (delStmt != null && cnt % batchSz != 0)\n                delStmt.executeBatch();\n\n            for (PreparedStatement st : stmts.values())\n                U.closeQuiet(st);\n        }\n        catch (SQLException e) {\n            throw new CacheWriterException(\"Failed to open connection\", e);\n        }\n        catch (Exception e) {\n            throw new CacheWriterException(\"Failed to remove values from database\", e);\n        }\n        finally {\n            closeConnection(conn);\n        }\n    }","commit_id":"76c2f747f47b217a733f6749677799de8a395e56","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override public void write(Cache.Entry<? extends K, ? extends V> entry) throws CacheWriterException {\n        assert entry != null;\n\n        init();\n\n        K key = entry.getKey();\n\n        EntryMapping type = typeMapping.get(new IgniteBiTuple<>(session().cacheName(), keyId(key)));\n\n        if (type == null)\n            throw new CacheWriterException(\"Failed to find mapping description for entry: \" + entry);\n\n        if (log.isDebugEnabled())\n            log.debug(\"Start write entry to database: \" + entry);\n\n        Connection conn = null;\n\n        PreparedStatement stmt = null;\n\n        try {\n            conn = connection();\n\n            if (dialect.hasMerge()) {\n                stmt = conn.prepareStatement(type.mergeQry);\n\n                int i = fillKeyParameters(stmt, type, key);\n\n                fillValueParameters(stmt, i, type, entry.getValue());\n\n                stmt.executeUpdate();\n            }\n            else {\n                V val = entry.getValue();\n\n                stmt = conn.prepareStatement(type.updQry);\n\n                int i = fillValueParameters(stmt, 1, type, val);\n\n                fillKeyParameters(stmt, i, type, key);\n\n                if (stmt.executeUpdate() == 0) {\n                    stmt.close();\n\n                    stmt = conn.prepareStatement(type.insQry);\n\n                    i = fillKeyParameters(stmt, type, key);\n\n                    fillValueParameters(stmt, i, type, val);\n\n                    stmt.executeUpdate();\n                }\n            }\n        }\n        catch (SQLException e) {\n            throw new CacheWriterException(\"Failed to write entry to database: \" + entry, e);\n        }\n        finally {\n            end(conn, stmt);\n        }\n    }","id":15236,"modified_method":"/** {@inheritDoc} */\n    @Override public void write(Cache.Entry<? extends K, ? extends V> entry) throws CacheWriterException {\n        assert entry != null;\n\n        init();\n\n        K key = entry.getKey();\n\n        EntryMapping em = entryMapping(keyId(key), key);\n\n        if (log.isDebugEnabled())\n            log.debug(\"Start write entry to database: \" + entry);\n\n        Connection conn = null;\n\n        PreparedStatement stmt = null;\n\n        try {\n            conn = connection();\n\n            if (dialect.hasMerge()) {\n                stmt = conn.prepareStatement(em.mergeQry);\n\n                int i = fillKeyParameters(stmt, em, key);\n\n                fillValueParameters(stmt, i, em, entry.getValue());\n\n                stmt.executeUpdate();\n            }\n            else {\n                V val = entry.getValue();\n\n                stmt = conn.prepareStatement(em.updQry);\n\n                int i = fillValueParameters(stmt, 1, em, val);\n\n                fillKeyParameters(stmt, i, em, key);\n\n                if (stmt.executeUpdate() == 0) {\n                    stmt.close();\n\n                    stmt = conn.prepareStatement(em.insQry);\n\n                    i = fillKeyParameters(stmt, em, key);\n\n                    fillValueParameters(stmt, i, em, val);\n\n                    stmt.executeUpdate();\n                }\n            }\n        }\n        catch (SQLException e) {\n            throw new CacheWriterException(\"Failed to write entry to database: \" + entry, e);\n        }\n        finally {\n            end(conn, stmt);\n        }\n    }","commit_id":"76c2f747f47b217a733f6749677799de8a395e56","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override public void delete(Object key) throws CacheWriterException {\n        assert key != null;\n\n        init();\n\n        EntryMapping type = typeMapping.get(new IgniteBiTuple<>(session().cacheName(), keyId(key)));\n\n        if (type == null)\n            throw new CacheWriterException(\"Failed to find mapping description for key: \" + key);\n\n        if (log.isDebugEnabled())\n            log.debug(\"Start remove value from database by key: \" + key);\n\n        Connection conn = null;\n\n        PreparedStatement stmt = null;\n\n        try {\n            conn = connection();\n\n            stmt = conn.prepareStatement(type.remQry);\n\n            fillKeyParameters(stmt, type, key);\n\n            stmt.executeUpdate();\n        }\n        catch (SQLException e) {\n            throw new CacheWriterException(\"Failed to remove value from database by key: \" + key, e);\n        }\n        finally {\n            end(conn, stmt);\n        }\n    }","id":15237,"modified_method":"/** {@inheritDoc} */\n    @Override public void delete(Object key) throws CacheWriterException {\n        assert key != null;\n\n        init();\n\n        EntryMapping em = entryMapping(keyId(key), key);\n\n        if (log.isDebugEnabled())\n            log.debug(\"Start remove value from database by key: \" + key);\n\n        Connection conn = null;\n\n        PreparedStatement stmt = null;\n\n        try {\n            conn = connection();\n\n            stmt = conn.prepareStatement(em.remQry);\n\n            fillKeyParameters(stmt, em, key);\n\n            stmt.executeUpdate();\n        }\n        catch (SQLException e) {\n            throw new CacheWriterException(\"Failed to remove value from database by key: \" + key, e);\n        }\n        finally {\n            end(conn, stmt);\n        }\n    }","commit_id":"76c2f747f47b217a733f6749677799de8a395e56","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override public void loadCache(final IgniteBiInClosure<K, V> clo, @Nullable Object... args)\n        throws CacheLoaderException {\n        try {\n            init();\n\n            ExecutorService pool = Executors.newFixedThreadPool(maxPoolSz);\n\n            Collection<Future<?>> futs = new ArrayList<>();\n\n            if (args != null && args.length > 0) {\n                if (args.length % 2 != 0)\n                    throw new CacheLoaderException(\"Wrong argument count\");\n\n                if (log.isDebugEnabled())\n                    log.debug(\"Start loading entries from db using queries from arguments\");\n\n                for (int i = 0; i < args.length; i += 2) {\n                    String keyType = args[i].toString();\n\n                    final String selQry = args[i + 1].toString();\n\n                    CacheStoreSession ses = session();\n\n                    Object typeId = keyId(keyType);\n\n                    final EntryMapping m = typeMapping.get(new IgniteBiTuple<>(ses.cacheName(), typeId));\n\n                    if (m == null)\n                        throw new CacheWriterException(\"Failed to find mapping description for key: \" + keyType);\n\n                    futs.add(pool.submit(new LoadCacheCustomQueryWorker<>(m, selQry, clo)));\n                }\n            }\n            else {\n                if (log.isDebugEnabled())\n                    log.debug(\"Start loading all types entries from db\");\n\n                for (EntryMapping m : typeMapping.values()) {\n                    if (parallelLoadCacheMinThreshold > 0) {\n                        Connection conn = null;\n\n                        try {\n                            conn = connection();\n\n                            PreparedStatement stmt = conn.prepareStatement(m.loadCacheSelRangeQry);\n\n                            stmt.setInt(1, parallelLoadCacheMinThreshold);\n\n                            ResultSet rs = stmt.executeQuery();\n\n                            if (rs.next()) {\n                                int keyCnt = m.keyCols.size();\n\n                                Object[] upperBound = new Object[keyCnt];\n\n                                for (int i = 0; i < keyCnt; i++)\n                                    upperBound[i] = rs.getObject(i + 1);\n\n                                futs.add(pool.submit(loadCacheRange(m, clo, null, upperBound)));\n\n                                while (rs.next()) {\n                                    Object[] lowerBound = upperBound;\n\n                                    upperBound = new Object[keyCnt];\n\n                                    for (int i = 0; i < keyCnt; i++)\n                                        upperBound[i] = rs.getObject(i + 1);\n\n                                    futs.add(pool.submit(loadCacheRange(m, clo, lowerBound, upperBound)));\n                                }\n\n                                futs.add(pool.submit(loadCacheRange(m, clo, upperBound, null)));\n                            }\n                            else\n                                futs.add(pool.submit(loadCacheFull(m, clo)));\n                        }\n                        catch (SQLException ignored) {\n                            futs.add(pool.submit(loadCacheFull(m, clo)));\n                        }\n                        finally {\n                            U.closeQuiet(conn);\n                        }\n                    }\n                    else\n                        futs.add(pool.submit(loadCacheFull(m, clo)));\n                }\n            }\n\n            for (Future<?> fut : futs)\n                U.get(fut);\n        }\n        catch (IgniteCheckedException e) {\n            throw new CacheLoaderException(\"Failed to load cache\", e.getCause());\n        }\n    }","id":15238,"modified_method":"/** {@inheritDoc} */\n    @Override public void loadCache(final IgniteBiInClosure<K, V> clo, @Nullable Object... args)\n        throws CacheLoaderException {\n        try {\n            init();\n\n            ExecutorService pool = Executors.newFixedThreadPool(maxPoolSz);\n\n            Collection<Future<?>> futs = new ArrayList<>();\n\n            if (args != null && args.length > 0) {\n                if (args.length % 2 != 0)\n                    throw new CacheLoaderException(\"Expected even number of arguments, but found: \" + args.length);\n\n                if (log.isDebugEnabled())\n                    log.debug(\"Start loading entries from db using user queries from arguments\");\n\n                for (int i = 0; i < args.length; i += 2) {\n                    String keyType = args[i].toString();\n\n                    String selQry = args[i + 1].toString();\n\n                    EntryMapping em = entryMapping(keyId(keyType), keyType);\n\n                    futs.add(pool.submit(new LoadCacheCustomQueryWorker<>(em, selQry, clo)));\n                }\n            }\n            else {\n                if (log.isDebugEnabled())\n                    log.debug(\"Start loading all cache types entries from db\");\n\n                for (EntryMapping em : entryMappings.values()) {\n                    if (parallelLoadCacheMinThreshold > 0) {\n                        Connection conn = null;\n\n                        try {\n                            conn = connection();\n\n                            PreparedStatement stmt = conn.prepareStatement(em.loadCacheSelRangeQry);\n\n                            stmt.setInt(1, parallelLoadCacheMinThreshold);\n\n                            ResultSet rs = stmt.executeQuery();\n\n                            if (rs.next()) {\n                                int keyCnt = em.keyCols.size();\n\n                                Object[] upperBound = new Object[keyCnt];\n\n                                for (int i = 0; i < keyCnt; i++)\n                                    upperBound[i] = rs.getObject(i + 1);\n\n                                futs.add(pool.submit(loadCacheRange(em, clo, null, upperBound)));\n\n                                while (rs.next()) {\n                                    Object[] lowerBound = upperBound;\n\n                                    upperBound = new Object[keyCnt];\n\n                                    for (int i = 0; i < keyCnt; i++)\n                                        upperBound[i] = rs.getObject(i + 1);\n\n                                    futs.add(pool.submit(loadCacheRange(em, clo, lowerBound, upperBound)));\n                                }\n\n                                futs.add(pool.submit(loadCacheRange(em, clo, upperBound, null)));\n                            }\n                            else\n                                futs.add(pool.submit(loadCacheFull(em, clo)));\n                        }\n                        catch (SQLException ignored) {\n                            futs.add(pool.submit(loadCacheFull(em, clo)));\n                        }\n                        finally {\n                            U.closeQuiet(conn);\n                        }\n                    }\n                    else\n                        futs.add(pool.submit(loadCacheFull(em, clo)));\n                }\n            }\n\n            for (Future<?> fut : futs)\n                U.get(fut);\n        }\n        catch (IgniteCheckedException e) {\n            throw new CacheLoaderException(\"Failed to load cache\", e.getCause());\n        }\n    }","commit_id":"76c2f747f47b217a733f6749677799de8a395e56","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Initializes store.\n     *\n     * @throws CacheException If failed to initialize.\n     */\n    protected void init() throws CacheException {\n        if (initLatch.getCount() > 0) {\n            if (initGuard.compareAndSet(false, true)) {\n                if (log.isDebugEnabled())\n                    log.debug(\"Initializing cache store.\");\n\n                if (dataSrc == null && F.isEmpty(connUrl))\n                    throw new CacheException(\"Failed to initialize cache store (connection is not provided).\");\n\n                if (dialect == null)\n                    dialect = resolveDialect();\n\n                try {\n                    if (typeMetadata == null)\n                        throw new CacheException(\"Failed to initialize cache store (mappping description is not provided).\");\n\n                    buildTypeCache();\n\n                    initOk = true;\n                }\n                finally {\n                    initLatch.countDown();\n                }\n            }\n            else\n                try {\n                    if (initLatch.getCount() > 0)\n                        initLatch.await();\n                }\n                catch (InterruptedException e) {\n                    Thread.currentThread().interrupt();\n\n                    throw new CacheException(e);\n                }\n        }\n\n        if (!initOk)\n            throw new CacheException(\"Cache store was not properly initialized.\");\n    }","id":15239,"modified_method":"/**\n     * Initializes store.\n     *\n     * @throws CacheException If failed to initialize.\n     */\n    protected void init() throws CacheException {\n        if (initLatch.getCount() > 0) {\n            if (initGuard.compareAndSet(false, true)) {\n                if (log.isDebugEnabled())\n                    log.debug(\"Initializing cache store.\");\n\n                if (dataSrc == null && F.isEmpty(connUrl))\n                    throw new CacheException(\"Failed to initialize cache store (connection is not provided).\");\n\n                if (dialect == null)\n                    dialect = resolveDialect();\n\n                try {\n                    if (typeMetadata == null)\n                        throw new CacheException(\"Failed to initialize cache store (mapping description is not provided).\");\n\n                    buildTypeCache();\n\n                    initOk = true;\n                }\n                finally {\n                    initLatch.countDown();\n                }\n            }\n            else\n                try {\n                    if (initLatch.getCount() > 0)\n                        initLatch.await();\n                }\n                catch (InterruptedException e) {\n                    Thread.currentThread().interrupt();\n\n                    throw new CacheException(e);\n                }\n        }\n\n        if (!initOk)\n            throw new CacheException(\"Cache store was not properly initialized.\");\n    }","commit_id":"76c2f747f47b217a733f6749677799de8a395e56","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public V load(K key) throws CacheLoaderException {\n        assert key != null;\n\n        init();\n\n        EntryMapping type = typeMapping.get(new IgniteBiTuple<>(session().cacheName(), keyId(key)));\n\n        if (type == null)\n            throw new CacheLoaderException(\"Failed to find mapping description for key: \" + key);\n\n        if (log.isDebugEnabled())\n            log.debug(\"Start load value from database by key: \" + key);\n\n        Connection conn = null;\n\n        PreparedStatement stmt = null;\n\n        try {\n            conn = connection();\n\n            stmt = conn.prepareStatement(type.loadQrySingle);\n\n            fillKeyParameters(stmt, type, key);\n\n            ResultSet rs = stmt.executeQuery();\n\n            if (rs.next())\n                return buildObject(type.valueType(), type.valueDescriptors(), rs);\n        }\n        catch (SQLException e) {\n            throw new CacheLoaderException(\"Failed to load object by key: \" + key, e);\n        }\n        finally {\n            end(conn, stmt);\n        }\n\n        return null;\n    }","id":15240,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public V load(K key) throws CacheLoaderException {\n        assert key != null;\n\n        init();\n\n        EntryMapping em = entryMapping(keyId(key), key);\n\n        if (log.isDebugEnabled())\n            log.debug(\"Start load value from database by key: \" + key);\n\n        Connection conn = null;\n\n        PreparedStatement stmt = null;\n\n        try {\n            conn = connection();\n\n            stmt = conn.prepareStatement(em.loadQrySingle);\n\n            fillKeyParameters(stmt, em, key);\n\n            ResultSet rs = stmt.executeQuery();\n\n            if (rs.next())\n                return buildObject(em.valueType(), em.valueDescriptors(), rs);\n        }\n        catch (SQLException e) {\n            throw new CacheLoaderException(\"Failed to load object by key: \" + key, e);\n        }\n        finally {\n            end(conn, stmt);\n        }\n\n        return null;\n    }","commit_id":"76c2f747f47b217a733f6749677799de8a395e56","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override public Map<K, V> loadAll(Iterable<? extends K> keys) throws CacheLoaderException {\n        assert keys != null;\n\n        init();\n\n        Connection conn = null;\n\n        try {\n            conn = connection();\n\n            Map<Object, LoadWorker<K, V>> workers = U.newHashMap(typeMapping.size());\n\n            Map<K, V> res = new HashMap<>();\n\n            for (K key : keys) {\n                Object typeId = keyId(key);\n\n                EntryMapping m = typeMapping.get(new IgniteBiTuple<>(session().cacheName(), typeId));\n\n                if (m == null)\n                    throw new CacheWriterException(\"Failed to find mapping description for key: \" + key);\n\n                LoadWorker<K, V> worker = workers.get(typeId);\n\n                if (worker == null)\n                    workers.put(typeId, worker = new LoadWorker<>(conn, m));\n\n                worker.keys.add(key);\n\n                if (worker.keys.size() == m.maxKeysPerStmt)\n                    res.putAll(workers.remove(typeId).call());\n            }\n\n            for (LoadWorker<K, V> worker : workers.values())\n                res.putAll(worker.call());\n\n            return res;\n        }\n        catch (SQLException e) {\n            throw new CacheWriterException(\"Failed to open connection\", e);\n        }\n        catch (Exception e) {\n            throw new CacheWriterException(\"Failed to load entries from database\", e);\n        }\n        finally {\n            closeConnection(conn);\n        }\n    }","id":15241,"modified_method":"/** {@inheritDoc} */\n    @Override public Map<K, V> loadAll(Iterable<? extends K> keys) throws CacheLoaderException {\n        assert keys != null;\n\n        init();\n\n        Connection conn = null;\n\n        try {\n            conn = connection();\n\n            Map<Object, LoadWorker<K, V>> workers = U.newHashMap(entryMappings.size());\n\n            Map<K, V> res = new HashMap<>();\n\n            for (K key : keys) {\n                Object keyId = keyId(key);\n\n                EntryMapping em = entryMapping(keyId, key);\n\n                LoadWorker<K, V> worker = workers.get(keyId);\n\n                if (worker == null)\n                    workers.put(keyId, worker = new LoadWorker<>(conn, em));\n\n                worker.keys.add(key);\n\n                if (worker.keys.size() == em.maxKeysPerStmt)\n                    res.putAll(workers.remove(keyId).call());\n            }\n\n            for (LoadWorker<K, V> worker : workers.values())\n                res.putAll(worker.call());\n\n            return res;\n        }\n        catch (SQLException e) {\n            throw new CacheWriterException(\"Failed to open connection\", e);\n        }\n        catch (Exception e) {\n            throw new CacheWriterException(\"Failed to load entries from database\", e);\n        }\n        finally {\n            closeConnection(conn);\n        }\n    }","commit_id":"76c2f747f47b217a733f6749677799de8a395e56","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Perform dialect resolution.\n     *\n     * @return The resolved dialect.\n     * @throws CacheException Indicates problems accessing the metadata.\n     */\n    protected JdbcDialect resolveDialect() throws CacheException {\n        Connection conn = null;\n\n        String dbProductName = null;\n\n        try {\n            conn = openConnection(false);\n\n            dbProductName = conn.getMetaData().getDatabaseProductName();\n        }\n        catch (SQLException e) {\n            throw new CacheException(\"Failed access to metadata for detect database dialect.\", e);\n        }\n        finally {\n            U.closeQuiet(conn);\n        }\n\n        if (\"H2\".equals(dbProductName))\n            return new H2Dialect();\n\n        if (\"MySQL\".equals(dbProductName))\n            return new MySQLDialect();\n\n        if (dbProductName.startsWith(\"Microsoft SQL Server\"))\n            return new SQLServerDialect();\n\n        if (\"Oracle\".equals(dbProductName))\n            return new OracleDialect();\n\n        if (dbProductName.startsWith(\"DB2/\"))\n            return new DB2Dialect();\n\n        return new BasicJdbcDialect();\n    }","id":15242,"modified_method":"/**\n     * Perform dialect resolution.\n     *\n     * @return The resolved dialect.\n     * @throws CacheException Indicates problems accessing the metadata.\n     */\n    protected JdbcDialect resolveDialect() throws CacheException {\n        Connection conn = null;\n\n        String dbProductName = null;\n\n        try {\n            conn = openConnection(false);\n\n            dbProductName = conn.getMetaData().getDatabaseProductName();\n        }\n        catch (SQLException e) {\n            throw new CacheException(\"Failed access to metadata for detect database dialect.\", e);\n        }\n        finally {\n            U.closeQuiet(conn);\n        }\n\n        if (\"H2\".equals(dbProductName))\n            return new H2Dialect();\n\n        if (\"MySQL\".equals(dbProductName))\n            return new MySQLDialect();\n\n        if (dbProductName.startsWith(\"Microsoft SQL Server\"))\n            return new SQLServerDialect();\n\n        if (\"Oracle\".equals(dbProductName))\n            return new OracleDialect();\n\n        if (dbProductName.startsWith(\"DB2/\"))\n            return new DB2Dialect();\n\n        log.warning(\"Unknown database: \" + dbProductName + \". BasicJdbcDialect will be used.\");\n\n        return new BasicJdbcDialect();\n    }","commit_id":"76c2f747f47b217a733f6749677799de8a395e56","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override public void txEnd(boolean commit) throws CacheWriterException {\n        CacheStoreSession ses = session();\n\n        IgniteTx tx = ses.transaction();\n\n        Connection conn = ses.<String, Connection>properties().remove(ATTR_CONN);\n\n\n        if (conn != null) {\n            assert tx != null;\n\n            try {\n                if (commit)\n                    conn.commit();\n                else\n                    conn.rollback();\n            }\n            catch (SQLException e) {\n                throw new CacheWriterException(\n                    \"Failed to end transaction [xid=\" + tx.xid() + \", commit=\" + commit + ']', e);\n            }\n            finally {\n                U.closeQuiet(conn);\n            }\n        }\n\n        if (tx != null && log.isDebugEnabled())\n            log.debug(\"Transaction ended [xid=\" + tx.xid() + \", commit=\" + commit + ']');\n    }","id":15243,"modified_method":"/** {@inheritDoc} */\n    @Override public void txEnd(boolean commit) throws CacheWriterException {\n        CacheStoreSession ses = session();\n\n        IgniteTx tx = ses.transaction();\n\n        Connection conn = ses.<String, Connection>properties().remove(ATTR_CONN_PROP);\n\n        if (conn != null) {\n            assert tx != null;\n\n            try {\n                if (commit)\n                    conn.commit();\n                else\n                    conn.rollback();\n            }\n            catch (SQLException e) {\n                throw new CacheWriterException(\n                    \"Failed to end transaction [xid=\" + tx.xid() + \", commit=\" + commit + ']', e);\n            }\n            finally {\n                U.closeQuiet(conn);\n            }\n        }\n\n        if (tx != null && log.isDebugEnabled())\n            log.debug(\"Transaction ended [xid=\" + tx.xid() + \", commit=\" + commit + ']');\n    }","commit_id":"76c2f747f47b217a733f6749677799de8a395e56","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override public void writeAll(Collection<Cache.Entry<? extends K, ? extends V>> entries)\n        throws CacheWriterException {\n        assert entries != null;\n\n        init();\n\n        Connection conn = null;\n\n        try {\n            conn = connection();\n\n            String cacheName = session().cacheName();\n\n            if (dialect.hasMerge()) {\n                Map<Object, PreparedStatement> stmts = U.newHashMap(typeMapping.size());\n\n                Object prevTypeId = null;\n\n                PreparedStatement mergeStmt = null;\n\n                int cnt = 0;\n\n                for (Cache.Entry<? extends K, ? extends V> entry : entries) {\n                    Object typeId = keyId(entry.getKey());\n\n                    final EntryMapping m = typeMapping.get(new IgniteBiTuple<>(cacheName, typeId));\n\n                    if (m == null)\n                        throw new CacheWriterException(\"Failed to find mapping description for key: \" + entry.getKey());\n\n                    if (prevTypeId != null && !prevTypeId.equals(typeId)) {\n                        mergeStmt = stmts.get(prevTypeId);\n\n                        mergeStmt.executeBatch();\n\n                        cnt = 0;\n                    }\n\n                    prevTypeId = typeId;\n\n                    mergeStmt = stmts.get(typeId);\n\n                    if (mergeStmt == null)\n                        stmts.put(typeId, mergeStmt = conn.prepareStatement(m.mergeQry));\n\n                    int i = fillKeyParameters(mergeStmt, m, entry.getKey());\n\n                    fillValueParameters(mergeStmt, i, m, entry.getValue());\n\n                    mergeStmt.addBatch();\n\n                    if (cnt++ % batchSz == 0)\n                        mergeStmt.executeBatch();\n                }\n\n                if (mergeStmt != null && cnt % batchSz != 0)\n                    mergeStmt.executeBatch();\n\n                for (PreparedStatement st : stmts.values())\n                    U.closeQuiet(st);\n            }\n            else {\n                Map<Object, T2<PreparedStatement, PreparedStatement>> stmts = U.newHashMap(typeMapping.size());\n\n                for (Cache.Entry<? extends K, ? extends V> entry : entries) {\n                    Object typeId = keyId(entry.getKey());\n\n                    final EntryMapping m = typeMapping.get(new IgniteBiTuple<>(cacheName, typeId));\n\n                    if (m == null)\n                        throw new CacheWriterException(\"Failed to find mapping description for key: \" +\n                            entry.getKey());\n\n                    T2<PreparedStatement, PreparedStatement> pair = stmts.get(typeId);\n\n                    if (pair == null)\n                        stmts.put(typeId,\n                            pair = new T2<>(conn.prepareStatement(m.updQry), conn.prepareStatement(m.insQry)));\n\n                    PreparedStatement updStmt = pair.get1();\n\n                    assert updStmt != null;\n\n                    int i = fillValueParameters(updStmt, 1, m, entry.getValue());\n\n                    fillKeyParameters(updStmt, i, m, entry.getKey());\n\n                    if (updStmt.executeUpdate() == 0) {\n                        PreparedStatement insStmt = pair.get2();\n\n                        assert insStmt != null;\n\n                        i = fillKeyParameters(insStmt, m, entry.getKey());\n\n                        fillValueParameters(insStmt, i, m, entry.getValue());\n\n                        insStmt.executeUpdate();\n                    }\n                }\n\n                for (T2<PreparedStatement, PreparedStatement> pair :  stmts.values()) {\n                    U.closeQuiet(pair.get1());\n\n                    U.closeQuiet(pair.get2());\n                }\n            }\n        }\n        catch (SQLException e) {\n            throw new CacheWriterException(\"Failed to open connection\", e);\n        }\n        finally {\n            closeConnection(conn);\n        }\n    }","id":15244,"modified_method":"/** {@inheritDoc} */\n    @Override public void writeAll(Collection<Cache.Entry<? extends K, ? extends V>> entries)\n        throws CacheWriterException {\n        assert entries != null;\n\n        init();\n\n        Connection conn = null;\n\n        try {\n            conn = connection();\n\n            if (dialect.hasMerge()) {\n                Map<Object, PreparedStatement> stmts = U.newHashMap(entryMappings.size());\n\n                Object prevKeyId = null;\n\n                PreparedStatement mergeStmt = null;\n\n                int cnt = 0;\n\n                for (Cache.Entry<? extends K, ? extends V> entry : entries) {\n                    K key = entry.getKey();\n\n                    Object keyId = keyId(key);\n\n                    EntryMapping em = entryMapping(keyId, key);\n\n                    if (prevKeyId != null && !prevKeyId.equals(keyId)) {\n                        mergeStmt = stmts.get(prevKeyId);\n\n                        mergeStmt.executeBatch();\n\n                        cnt = 0;\n                    }\n\n                    prevKeyId = keyId;\n\n                    mergeStmt = stmts.get(keyId);\n\n                    if (mergeStmt == null)\n                        stmts.put(keyId, mergeStmt = conn.prepareStatement(em.mergeQry));\n\n                    int i = fillKeyParameters(mergeStmt, em, key);\n\n                    fillValueParameters(mergeStmt, i, em, entry.getValue());\n\n                    mergeStmt.addBatch();\n\n                    if (cnt++ % batchSz == 0)\n                        mergeStmt.executeBatch();\n                }\n\n                if (mergeStmt != null && cnt % batchSz != 0)\n                    mergeStmt.executeBatch();\n\n                for (PreparedStatement st : stmts.values())\n                    U.closeQuiet(st);\n            }\n            else {\n                Map<Object, T2<PreparedStatement, PreparedStatement>> stmts = U.newHashMap(entryMappings.size());\n\n                for (Cache.Entry<? extends K, ? extends V> entry : entries) {\n                    K key = entry.getKey();\n\n                    Object keyId = keyId(key);\n\n                    EntryMapping em = entryMapping(keyId, key);\n\n                    T2<PreparedStatement, PreparedStatement> pair = stmts.get(keyId);\n\n                    if (pair == null)\n                        stmts.put(keyId,\n                            pair = new T2<>(conn.prepareStatement(em.updQry), conn.prepareStatement(em.insQry)));\n\n                    PreparedStatement updStmt = pair.get1();\n\n                    assert updStmt != null;\n\n                    int i = fillValueParameters(updStmt, 1, em, entry.getValue());\n\n                    fillKeyParameters(updStmt, i, em, key);\n\n                    if (updStmt.executeUpdate() == 0) {\n                        PreparedStatement insStmt = pair.get2();\n\n                        assert insStmt != null;\n\n                        i = fillKeyParameters(insStmt, em, key);\n\n                        fillValueParameters(insStmt, i, em, entry.getValue());\n\n                        insStmt.executeUpdate();\n                    }\n                }\n\n                for (T2<PreparedStatement, PreparedStatement> pair :  stmts.values()) {\n                    U.closeQuiet(pair.get1());\n\n                    U.closeQuiet(pair.get2());\n                }\n            }\n        }\n        catch (SQLException e) {\n            throw new CacheWriterException(\"Failed to open connection\", e);\n        }\n        finally {\n            closeConnection(conn);\n        }\n    }","commit_id":"76c2f747f47b217a733f6749677799de8a395e56","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Construct load cache in one select.\n     *\n     * @param m Type mapping description.\n     * @param clo Closure for loaded values.\n     * @return Callable for pool submit.\n     */\n    private Callable<Void> loadCacheFull(final EntryMapping m, final IgniteBiInClosure<K, V> clo) {\n        return new Callable<Void>() {\n            @Override public Void call() throws Exception {\n                Connection conn = null;\n\n                PreparedStatement stmt = null;\n\n                try {\n                    conn = openConnection(true);\n\n                    stmt = conn.prepareStatement(m.loadCacheQry);\n\n                    ResultSet rs = stmt.executeQuery();\n\n                    while (rs.next()) {\n                        K key = buildObject(m.keyType(), m.keyDescriptors(), rs);\n                        V val = buildObject(m.valueType(), m.valueDescriptors(), rs);\n\n                        clo.apply(key, val);\n                    }\n                }\n                catch (SQLException e) {\n                    throw new IgniteCheckedException(\"Failed to load cache\", e);\n                }\n                finally {\n                    U.closeQuiet(stmt);\n\n                    U.closeQuiet(conn);\n                }\n\n                return null;\n            }\n        };\n    }","id":15245,"modified_method":"/**\n     * Construct load cache in one select.\n     *\n     * @param m Type mapping description.\n     * @param clo Closure for loaded values.\n     * @return Callable for pool submit.\n     */\n    private Callable<Void> loadCacheFull(final EntryMapping m, final IgniteBiInClosure<K, V> clo) {\n        return loadCacheRange(m, clo, null, null);\n    }","commit_id":"76c2f747f47b217a733f6749677799de8a395e56","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override protected void buildTypeCache() throws CacheException {\n        typeMapping = U.newHashMap(typeMetadata.size());\n\n        mtdsCache = U.newHashMap(typeMetadata.size() * 2);\n\n        for (CacheQueryTypeMetadata type : typeMetadata) {\n            PojoMethodsCache keyCache = new PojoMethodsCache(type.getKeyType(), type.getKeyDescriptors());\n\n            mtdsCache.put(type.getKeyType(), keyCache);\n\n            typeMapping.put(new IgniteBiTuple<String, Object>(null, keyId(type.getKeyType())),\n                new EntryMapping(dialect, type));\n\n            mtdsCache.put(type.getType(), new PojoMethodsCache(type.getType(), type.getValueDescriptors()));\n        }\n\n        typeMapping = Collections.unmodifiableMap(typeMapping);\n\n        mtdsCache = Collections.unmodifiableMap(mtdsCache);\n    }","id":15246,"modified_method":"/** {@inheritDoc} */\n    @Override protected void buildTypeCache() throws CacheException {\n        entryMappings = U.newHashMap(typeMetadata.size());\n\n        mtdsCache = U.newHashMap(typeMetadata.size() * 2);\n\n        for (CacheQueryTypeMetadata type : typeMetadata) {\n            PojoMethodsCache keyCache = new PojoMethodsCache(type.getKeyType(), type.getKeyDescriptors());\n\n            mtdsCache.put(type.getKeyType(), keyCache);\n\n            entryMappings.put(new IgniteBiTuple<String, Object>(null, keyId(type.getKeyType())),\n                new EntryMapping(dialect, type));\n\n            mtdsCache.put(type.getType(), new PojoMethodsCache(type.getType(), type.getValueDescriptors()));\n        }\n\n        entryMappings = Collections.unmodifiableMap(entryMappings);\n\n        mtdsCache = Collections.unmodifiableMap(mtdsCache);\n    }","commit_id":"76c2f747f47b217a733f6749677799de8a395e56","url":"https://github.com/apache/ignite"},{"original_method":"@Override\n\tprotected String getBody(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tStringBundler sb = new StringBundler(5);\n\n\t\tsb.append(\"<div class=\\\"activity-body\\\"><div class=\\\"title\\\">\");\n\n\t\tString pageTitle = StringPool.BLANK;\n\n\t\tString linkURL = getLinkURL(\n\t\t\tactivity.getClassName(), activity.getClassPK(), serviceContext);\n\n\t\tAssetRenderer assetRenderer = getAssetRenderer(\n\t\t\tactivity.getClassName(), activity.getClassPK());\n\n\t\tLiferayPortletRequest liferayPortletRequest =\n\t\t\tserviceContext.getLiferayPortletRequest();\n\n\t\tif (Validator.isNotNull(\n\t\t\t\tassetRenderer.getIconPath(liferayPortletRequest))) {\n\n\t\t\tpageTitle = wrapLink(\n\t\t\t\tlinkURL, assetRenderer.getIconPath(liferayPortletRequest),\n\t\t\t\tHtmlUtil.escape(\n\t\t\t\t\tassetRenderer.getTitle(serviceContext.getLocale())));\n\t\t}\n\t\telse {\n\t\t\tpageTitle = wrapLink(\n\t\t\t\tlinkURL,\n\t\t\t\tHtmlUtil.escape(\n\t\t\t\t\tassetRenderer.getTitle(serviceContext.getLocale())));\n\t\t}\n\n\t\tsb.append(pageTitle);\n\n\t\tsb.append(\"<\/div><div class=\\\"wiki-page-content\\\">\");\n\t\tsb.append(\n\t\t\tStringUtil.shorten(\n\t\t\t\tassetRenderer.getSummary(serviceContext.getLocale()), 200));\n\t\tsb.append(\"<\/div><\/div>\");\n\n\t\treturn sb.toString();\n\t}","id":15247,"modified_method":"@Override\n\tprotected String getBody(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tStringBundler sb = new StringBundler(5);\n\n\t\tsb.append(\"<div class=\\\"activity-body\\\"><div class=\\\"title\\\">\");\n\n\t\tAssetRenderer assetRenderer = getAssetRenderer(\n\t\t\tactivity.getClassName(), activity.getClassPK());\n\n\t\tsb.append(\n\t\t\tgetPageTitle(\n\t\t\t\tactivity.getClassName(), activity.getClassPK(),\n\t\t\t\tserviceContext));\n\t\tsb.append(\"<\/div><div class=\\\"wiki-page-content\\\">\");\n\t\tsb.append(\n\t\t\tStringUtil.shorten(\n\t\t\t\tassetRenderer.getSummary(serviceContext.getLocale()), 200));\n\t\tsb.append(\"<\/div><\/div>\");\n\n\t\treturn sb.toString();\n\t}","commit_id":"b54dbfba346591a1e3d5f1e0a7dcce364c559f4e","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"@Override\n\tprotected String getBody(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tStringBundler sb = new StringBundler(5);\n\n\t\tsb.append(\"<div class=\\\"activity-body\\\"><div class=\\\"title\\\">\");\n\n\t\tString pageTitle = StringPool.BLANK;\n\n\t\tAssetRenderer assetRenderer = getAssetRenderer(\n\t\t\tactivity.getClassName(), activity.getClassPK());\n\n\t\tLiferayPortletRequest liferayPortletRequest =\n\t\t\tserviceContext.getLiferayPortletRequest();\n\n\t\tif (Validator.isNotNull(\n\t\t\t\tassetRenderer.getIconPath(liferayPortletRequest))) {\n\n\t\t\tpageTitle = wrapLink(\n\t\t\t\tgetLinkURL(\n\t\t\t\t\tactivity.getClassName(), activity.getClassPK(),\n\t\t\t\t\tserviceContext),\n\t\t\t\tassetRenderer.getIconPath(liferayPortletRequest),\n\t\t\t\tHtmlUtil.escape(\n\t\t\t\t\tassetRenderer.getTitle(serviceContext.getLocale())));\n\t\t}\n\t\telse {\n\t\t\tpageTitle = wrapLink(\n\t\t\t\tgetLinkURL(\n\t\t\t\t\tactivity.getClassName(), activity.getClassPK(),\n\t\t\t\t\tserviceContext),\n\t\t\t\tHtmlUtil.escape(\n\t\t\t\t\tassetRenderer.getTitle(serviceContext.getLocale())));\n\t\t}\n\n\t\tsb.append(pageTitle);\n\n\t\tsb.append(\"<\/div><div class=\\\"blogs-page-content\\\">\");\n\n\t\tBlogsEntry entry = BlogsEntryLocalServiceUtil.getEntry(\n\t\t\tactivity.getClassPK());\n\n\t\tString content = HtmlUtil.extractText(entry.getContent());\n\n\t\tsb.append(StringUtil.shorten(content, 200));\n\n\t\tsb.append(\"<\/div><\/div>\");\n\n\t\treturn sb.toString();\n\t}","id":15248,"modified_method":"@Override\n\tprotected String getBody(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tStringBundler sb = new StringBundler(5);\n\n\t\tsb.append(\"<div class=\\\"activity-body\\\"><div class=\\\"title\\\">\");\n\t\tsb.append(\n\t\t\tgetPageTitle(\n\t\t\t\tactivity.getClassName(), activity.getClassPK(),\n\t\t\t\tserviceContext));\n\t\tsb.append(\"<\/div><div class=\\\"blogs-page-content\\\">\");\n\n\t\tBlogsEntry entry = BlogsEntryLocalServiceUtil.getEntry(\n\t\t\tactivity.getClassPK());\n\n\t\tString content = HtmlUtil.extractText(entry.getContent());\n\n\t\tsb.append(StringUtil.shorten(content, 200));\n\n\t\tsb.append(\"<\/div><\/div>\");\n\n\t\treturn sb.toString();\n\t}","commit_id":"eb5803d806aa3c443de761ca3dcb45942d6825bf","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"@Override\n\tprotected String getBody(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tStringBundler sb = new StringBundler(15);\n\n\t\tsb.append(\"<div class=\\\"activity-body\\\"><div class=\\\"title\\\">\");\n\n\t\tString pageTitle = StringPool.BLANK;\n\n\t\tAssetRenderer assetRenderer = getAssetRenderer(\n\t\t\tactivity.getClassName(), activity.getClassPK());\n\n\t\tLiferayPortletRequest liferayPortletRequest =\n\t\t\tserviceContext.getLiferayPortletRequest();\n\n\t\tif (Validator.isNotNull(\n\t\t\t\tassetRenderer.getIconPath(liferayPortletRequest))) {\n\n\t\t\tpageTitle = wrapLink(\n\t\t\t\tgetLinkURL(\n\t\t\t\t\tactivity.getClassName(), activity.getClassPK(),\n\t\t\t\t\tserviceContext),\n\t\t\t\tassetRenderer.getIconPath(liferayPortletRequest),\n\t\t\t\tHtmlUtil.escape(\n\t\t\t\t\tassetRenderer.getTitle(serviceContext.getLocale())));\n\t\t}\n\t\telse {\n\t\t\tpageTitle = wrapLink(\n\t\t\t\tgetLinkURL(\n\t\t\t\t\tactivity.getClassName(), activity.getClassPK(),\n\t\t\t\t\tserviceContext),\n\t\t\t\tHtmlUtil.escape(\n\t\t\t\t\tassetRenderer.getTitle(serviceContext.getLocale())));\n\t\t}\n\n\t\tsb.append(pageTitle);\n\n\t\tsb.append(\"<\/div><div class=\\\"date\\\"><strong>\");\n\t\tsb.append(serviceContext.translate(\"date\"));\n\t\tsb.append(\": <\/strong>\");\n\n\t\tFormat dateFormatDate = getFormatDateTime(\n\t\t\tserviceContext.getLocale(), serviceContext.getTimeZone());\n\n\t\tCalEvent event = CalEventLocalServiceUtil.getEvent(\n\t\t\tactivity.getClassPK());\n\n\t\tsb.append(dateFormatDate.format((event.getStartDate())));\n\n\t\tsb.append(\"<\/div><div class=\\\"location\\\"><strong>\");\n\t\tsb.append(serviceContext.translate(\"location\"));\n\t\tsb.append(\": <\/strong>\");\n\t\tsb.append(event.getLocation());\n\t\tsb.append(\"<\/div><div class=\\\"description\\\"><strong>\");\n\t\tsb.append(serviceContext.translate(\"description\"));\n\t\tsb.append(\": <\/strong>\");\n\t\tsb.append(\n\t\t\tStringUtil.shorten(\n\t\t\t\tassetRenderer.getSummary(serviceContext.getLocale()), 200));\n\t\tsb.append(\"<\/div><\/div>\");\n\n\t\treturn sb.toString();\n\t}","id":15249,"modified_method":"@Override\n\tprotected String getBody(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tStringBundler sb = new StringBundler(15);\n\n\t\tsb.append(\"<div class=\\\"activity-body\\\"><div class=\\\"title\\\">\");\n\t\tsb.append(\n\t\t\tgetPageTitle(\n\t\t\t\tactivity.getClassName(), activity.getClassPK(),\n\t\t\t\tserviceContext));\n\t\tsb.append(\"<\/div><div class=\\\"date\\\"><strong>\");\n\t\tsb.append(serviceContext.translate(\"date\"));\n\t\tsb.append(\": <\/strong>\");\n\n\t\tFormat dateFormatDate = getFormatDateTime(\n\t\t\tserviceContext.getLocale(), serviceContext.getTimeZone());\n\n\t\tCalEvent event = CalEventLocalServiceUtil.getEvent(\n\t\t\tactivity.getClassPK());\n\n\t\tsb.append(dateFormatDate.format((event.getStartDate())));\n\n\t\tsb.append(\"<\/div><div class=\\\"location\\\"><strong>\");\n\t\tsb.append(serviceContext.translate(\"location\"));\n\t\tsb.append(\": <\/strong>\");\n\t\tsb.append(event.getLocation());\n\t\tsb.append(\"<\/div><div class=\\\"description\\\"><strong>\");\n\t\tsb.append(serviceContext.translate(\"description\"));\n\t\tsb.append(\": <\/strong>\");\n\n\t\tAssetRenderer assetRenderer = getAssetRenderer(\n\t\t\tactivity.getClassName(), activity.getClassPK());\n\n\t\tsb.append(\n\t\t\tStringUtil.shorten(\n\t\t\t\tassetRenderer.getSummary(serviceContext.getLocale()), 200));\n\n\t\tsb.append(\"<\/div><\/div>\");\n\n\t\treturn sb.toString();\n\t}","commit_id":"eb5803d806aa3c443de761ca3dcb45942d6825bf","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"@Override\n\tprotected String getBody(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tStringBundler sb = new StringBundler(11);\n\n\t\tsb.append(\"<div class=\\\"activity-body document\\\">\");\n\t\tsb.append(\"<span class=\\\"document-thumbnail\\\"><img src=\\\"\");\n\n\t\tFileEntry fileEntry = DLAppLocalServiceUtil.getFileEntry(\n\t\t\tactivity.getClassPK());\n\n\t\tFileVersion fileVersion = fileEntry.getFileVersion();\n\n\t\tString thumbnailSrc = DLUtil.getThumbnailSrc(\n\t\t\tfileEntry, fileVersion, null, serviceContext.getThemeDisplay());\n\n\t\tsb.append(thumbnailSrc);\n\t\tsb.append(\"\\\"><\/span>\");\n\t\tsb.append(\"<div class=\\\"document-container\\\"><div class=\\\"title\\\">\");\n\n\t\tAssetRenderer assetRenderer = getAssetRenderer(\n\t\t\tactivity.getClassName(), activity.getClassPK());\n\n\t\tString pageTitle = wrapLink(\n\t\t\tgetLinkURL(\n\t\t\t\tactivity.getClassName(), activity.getClassPK(), serviceContext),\n\t\t\tHtmlUtil.escape(\n\t\t\t\tassetRenderer.getTitle(serviceContext.getLocale())));\n\n\t\tsb.append(pageTitle);\n\t\tsb.append(\"<\/div><div class=\\\"version\\\">\");\n\t\tsb.append(\n\t\t\tserviceContext.translate(\"version-x\", fileVersion.getVersion()));\n\t\tsb.append(\"<\/div><div class=\\\"document-content\\\">\");\n\t\tsb.append(\n\t\t\tStringUtil.shorten(\n\t\t\t\tassetRenderer.getSummary(serviceContext.getLocale()), 200));\n\t\tsb.append(\"<\/div><\/div><\/div>\");\n\n\t\treturn sb.toString();\n\t}","id":15250,"modified_method":"@Override\n\tprotected String getBody(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tStringBundler sb = new StringBundler(11);\n\n\t\tsb.append(\"<div class=\\\"activity-body document\\\">\");\n\t\tsb.append(\"<span class=\\\"document-thumbnail\\\"><img src=\\\"\");\n\n\t\tFileEntry fileEntry = DLAppLocalServiceUtil.getFileEntry(\n\t\t\tactivity.getClassPK());\n\n\t\tFileVersion fileVersion = fileEntry.getFileVersion();\n\n\t\tString thumbnailSrc = DLUtil.getThumbnailSrc(\n\t\t\tfileEntry, fileVersion, null, serviceContext.getThemeDisplay());\n\n\t\tsb.append(thumbnailSrc);\n\t\tsb.append(\"\\\"><\/span>\");\n\t\tsb.append(\"<div class=\\\"document-container\\\"><div class=\\\"title\\\">\");\n\t\tsb.append(\n\t\t\tgetPageTitle(\n\t\t\t\tactivity.getClassName(), activity.getClassPK(),\n\t\t\t\tserviceContext));\n\t\tsb.append(\"<\/div><div class=\\\"version\\\">\");\n\t\tsb.append(\n\t\t\tserviceContext.translate(\"version-x\", fileVersion.getVersion()));\n\t\tsb.append(\"<\/div><div class=\\\"document-content\\\">\");\n\n\t\tAssetRenderer assetRenderer = getAssetRenderer(\n\t\t\tactivity.getClassName(), activity.getClassPK());\n\n\t\tsb.append(\n\t\t\tStringUtil.shorten(\n\t\t\t\tassetRenderer.getSummary(serviceContext.getLocale()), 200));\n\n\t\tsb.append(\"<\/div><\/div><\/div>\");\n\n\t\treturn sb.toString();\n\t}","commit_id":"eb5803d806aa3c443de761ca3dcb45942d6825bf","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"@Override\n\tprotected String getBody(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tStringBundler sb = new StringBundler(5);\n\n\t\tsb.append(\"<div class=\\\"activity-body\\\"><div class=\\\"title\\\">\");\n\n\t\tString pageTitle = StringPool.BLANK;\n\n\t\tString linkURL = getLinkURL(\n\t\t\tactivity.getClassName(), activity.getClassPK(), serviceContext);\n\n\t\tAssetRenderer assetRenderer = getAssetRenderer(\n\t\t\tactivity.getClassName(), activity.getClassPK());\n\n\t\tLiferayPortletRequest liferayPortletRequest =\n\t\t\tserviceContext.getLiferayPortletRequest();\n\n\t\tif (Validator.isNotNull(\n\t\t\t\tassetRenderer.getIconPath(liferayPortletRequest))) {\n\n\t\t\tpageTitle = wrapLink(\n\t\t\t\tlinkURL, assetRenderer.getIconPath(liferayPortletRequest),\n\t\t\t\tHtmlUtil.escape(\n\t\t\t\t\tassetRenderer.getTitle(serviceContext.getLocale())));\n\t\t}\n\t\telse {\n\t\t\tpageTitle = wrapLink(\n\t\t\t\tlinkURL,\n\t\t\t\tHtmlUtil.escape(\n\t\t\t\t\tassetRenderer.getTitle(serviceContext.getLocale())));\n\t\t}\n\n\t\tsb.append(pageTitle);\n\n\t\tsb.append(\"<\/div><div class=\\\"forum-page-content\\\">\");\n\t\tsb.append(\n\t\t\tStringUtil.shorten(\n\t\t\t\tHtmlUtil.extractText(\n\t\t\t\t\tassetRenderer.getSummary(\n\t\t\t\t\t\tserviceContext.getLocale())), 200));\n\t\tsb.append(\"<\/div><\/div>\");\n\n\t\treturn sb.toString();\n\t}","id":15251,"modified_method":"@Override\n\tprotected String getBody(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tStringBundler sb = new StringBundler(5);\n\n\t\tsb.append(\"<div class=\\\"activity-body\\\"><div class=\\\"title\\\">\");\n\t\tsb.append(\n\t\t\tgetPageTitle(\n\t\t\t\tactivity.getClassName(), activity.getClassPK(),\n\t\t\t\tserviceContext));\n\t\tsb.append(\"<\/div><div class=\\\"forum-page-content\\\">\");\n\n\t\tAssetRenderer assetRenderer = getAssetRenderer(\n\t\t\tactivity.getClassName(), activity.getClassPK());\n\n\t\tsb.append(\n\t\t\tStringUtil.shorten(\n\t\t\t\tHtmlUtil.extractText(\n\t\t\t\t\tassetRenderer.getSummary(\n\t\t\t\t\t\tserviceContext.getLocale())), 200));\n\n\t\tsb.append(\"<\/div><\/div>\");\n\n\t\treturn sb.toString();\n\t}","commit_id":"eb5803d806aa3c443de761ca3dcb45942d6825bf","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"/**\n     * Returns the alarms defined by this dashlet.\n     *\n     * @return the list of alarms\n     */\n    private List<OnmsAlarm> getAlarms() {\n        final CriteriaBuilder alarmCb = new CriteriaBuilder(OnmsAlarm.class);\n\n        alarmCb.alias(\"node\", \"node\");\n        alarmCb.alias(\"node.categories\", \"category\");\n        alarmCb.alias(\"lastEvent\", \"event\");\n\n        String criteria = getDashletSpec().getParameters().get(\"criteria\");\n\n        m_criteriaBuilderHelper.parseConfiguration(alarmCb, criteria);\n\n        alarmCb.fetch(\"firstEvent\", Fetch.FetchType.EAGER);\n        alarmCb.fetch(\"lastEvent\", Fetch.FetchType.EAGER);\n\n        alarmCb.distinct();\n\n        return m_alarmDao.findMatching(alarmCb.toCriteria());\n    }","id":15252,"modified_method":"/**\n     * Returns the alarms defined by this dashlet.\n     *\n     * @return the list of alarms\n     */\n    private List<OnmsAlarm> getAlarms() {\n        final CriteriaBuilder alarmCb = new CriteriaBuilder(OnmsAlarm.class);\n\n        alarmCb.alias(\"node\", \"node\");\n        alarmCb.alias(\"node.categories\", \"category\");\n        alarmCb.alias(\"lastEvent\", \"event\");\n\n        String criteria = getDashletSpec().getParameters().get(\"criteria\");\n\n        m_criteriaBuilderHelper.parseConfiguration(alarmCb, criteria);\n\n        alarmCb.fetch(\"firstEvent\", Fetch.FetchType.EAGER);\n        alarmCb.fetch(\"lastEvent\", Fetch.FetchType.EAGER);\n\n        /**\n         * due to restrictions in the criteria api it's quite hard\n         * to use distinct and orderBy together, so I apply a workaround\n         * to avoid alarmCb.distinct();\n         */\n\n        List<OnmsAlarm> onmsAlarmList = m_alarmDao.findMatching(alarmCb.toCriteria());\n\n        List<OnmsAlarm> distinctOnmsAlarmList = new LinkedList<>();\n        Set<Integer> onmsAlarmIdSet = new TreeSet<>();\n\n        for (OnmsAlarm onmsAlarm : onmsAlarmList) {\n            if (!onmsAlarmIdSet.contains(onmsAlarm.getId())) {\n                distinctOnmsAlarmList.add(onmsAlarm);\n                onmsAlarmIdSet.add(onmsAlarm.getId());\n            }\n        }\n\n        return distinctOnmsAlarmList;\n    }","commit_id":"361c5faef1e529cbe946f9f8fc5a56d12c526163","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Returns the alarms defined by this dashlet.\n     *\n     * @return the list of alarms\n     */\n    private List<OnmsAlarm> getAlarms() {\n        final CriteriaBuilder alarmCb = new CriteriaBuilder(OnmsAlarm.class);\n\n        alarmCb.alias(\"node\", \"node\");\n        alarmCb.alias(\"node.categories\", \"category\");\n        alarmCb.alias(\"lastEvent\", \"event\");\n\n        String criteria = getDashletSpec().getParameters().get(\"criteria\");\n\n        m_criteriaBuilderHelper.parseConfiguration(alarmCb, criteria);\n\n        alarmCb.fetch(\"firstEvent\", Fetch.FetchType.EAGER);\n        alarmCb.fetch(\"lastEvent\", Fetch.FetchType.EAGER);\n\n        alarmCb.distinct();\n\n        return m_alarmDao.findMatching(alarmCb.toCriteria());\n    }","id":15253,"modified_method":"/**\n     * Returns the alarms defined by this dashlet.\n     *\n     * @return the list of alarms\n     */\n    private List<OnmsAlarm> getAlarms() {\n        final CriteriaBuilder alarmCb = new CriteriaBuilder(OnmsAlarm.class);\n\n        alarmCb.alias(\"node\", \"node\");\n        alarmCb.alias(\"node.categories\", \"category\");\n        alarmCb.alias(\"lastEvent\", \"event\");\n\n        String criteria = getDashletSpec().getParameters().get(\"criteria\");\n\n        m_criteriaBuilderHelper.parseConfiguration(alarmCb, criteria);\n\n        alarmCb.fetch(\"firstEvent\", Fetch.FetchType.EAGER);\n        alarmCb.fetch(\"lastEvent\", Fetch.FetchType.EAGER);\n\n        /**\n         * due to restrictions in the criteria api it's quite hard\n         * to use distinct and orderBy together, so I apply a workaround\n         * to avoid alarmCb.distinct();\n         */\n\n        List<OnmsAlarm> onmsAlarmList = m_alarmDao.findMatching(alarmCb.toCriteria());\n\n        List<OnmsAlarm> distinctOnmsAlarmList = new LinkedList<>();\n        Set<Integer> onmsAlarmIdSet = new TreeSet<>();\n\n        for (OnmsAlarm onmsAlarm : onmsAlarmList) {\n            if (!onmsAlarmIdSet.contains(onmsAlarm.getId())) {\n                distinctOnmsAlarmList.add(onmsAlarm);\n                onmsAlarmIdSet.add(onmsAlarm.getId());\n            }\n        }\n\n        return distinctOnmsAlarmList;\n    }","commit_id":"361c5faef1e529cbe946f9f8fc5a56d12c526163","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Returns the alarms defined by this dashlet.\n     *\n     * @return the list of alarms\n     */\n    private List<OnmsAlarm> getAlarms() {\n        final CriteriaBuilder alarmCb = new CriteriaBuilder(OnmsAlarm.class);\n\n        alarmCb.alias(\"node\", \"node\");\n        alarmCb.alias(\"node.categories\", \"category\");\n        alarmCb.alias(\"lastEvent\", \"event\");\n\n        String criteria = getDashletSpec().getParameters().get(\"criteria\");\n\n        m_criteriaBuilderHelper.parseConfiguration(alarmCb, criteria);\n\n        alarmCb.fetch(\"firstEvent\", Fetch.FetchType.EAGER);\n        alarmCb.fetch(\"lastEvent\", Fetch.FetchType.EAGER);\n\n        alarmCb.distinct();\n\n        return m_alarmDao.findMatching(alarmCb.toCriteria());\n    }","id":15254,"modified_method":"/**\n     * Returns the alarms defined by this dashlet.\n     *\n     * @return the list of alarms\n     */\n    private List<OnmsAlarm> getAlarms() {\n        final CriteriaBuilder alarmCb = new CriteriaBuilder(OnmsAlarm.class);\n\n        alarmCb.alias(\"node\", \"node\");\n        alarmCb.alias(\"node.categories\", \"category\");\n        alarmCb.alias(\"lastEvent\", \"event\");\n\n        String criteria = getDashletSpec().getParameters().get(\"criteria\");\n\n        m_criteriaBuilderHelper.parseConfiguration(alarmCb, criteria);\n\n        alarmCb.fetch(\"firstEvent\", Fetch.FetchType.EAGER);\n        alarmCb.fetch(\"lastEvent\", Fetch.FetchType.EAGER);\n\n        /**\n         * due to restrictions in the criteria api it's quite hard\n         * to use distinct and orderBy together, so I apply a workaround\n         * to avoid alarmCb.distinct();\n         */\n\n        List<OnmsAlarm> onmsAlarmList = m_alarmDao.findMatching(alarmCb.toCriteria());\n\n        List<OnmsAlarm> distinctOnmsAlarmList = new LinkedList<>();\n        Set<Integer> onmsAlarmIdSet = new TreeSet<>();\n\n        for (OnmsAlarm onmsAlarm : onmsAlarmList) {\n            if (!onmsAlarmIdSet.contains(onmsAlarm.getId())) {\n                distinctOnmsAlarmList.add(onmsAlarm);\n                onmsAlarmIdSet.add(onmsAlarm.getId());\n            }\n        }\n\n        return distinctOnmsAlarmList;\n    }","commit_id":"f7951f144f12a182878e51ca3ba610ec41c93407","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Returns the alarms defined by this dashlet.\n     *\n     * @return the list of alarms\n     */\n    private List<OnmsAlarm> getAlarms() {\n        final CriteriaBuilder alarmCb = new CriteriaBuilder(OnmsAlarm.class);\n\n        alarmCb.alias(\"node\", \"node\");\n        alarmCb.alias(\"node.categories\", \"category\");\n        alarmCb.alias(\"lastEvent\", \"event\");\n\n        String criteria = getDashletSpec().getParameters().get(\"criteria\");\n\n        m_criteriaBuilderHelper.parseConfiguration(alarmCb, criteria);\n\n        alarmCb.fetch(\"firstEvent\", Fetch.FetchType.EAGER);\n        alarmCb.fetch(\"lastEvent\", Fetch.FetchType.EAGER);\n\n        alarmCb.distinct();\n\n        return m_alarmDao.findMatching(alarmCb.toCriteria());\n    }","id":15255,"modified_method":"/**\n     * Returns the alarms defined by this dashlet.\n     *\n     * @return the list of alarms\n     */\n    private List<OnmsAlarm> getAlarms() {\n        final CriteriaBuilder alarmCb = new CriteriaBuilder(OnmsAlarm.class);\n\n        alarmCb.alias(\"node\", \"node\");\n        alarmCb.alias(\"node.categories\", \"category\");\n        alarmCb.alias(\"lastEvent\", \"event\");\n\n        String criteria = getDashletSpec().getParameters().get(\"criteria\");\n\n        m_criteriaBuilderHelper.parseConfiguration(alarmCb, criteria);\n\n        alarmCb.fetch(\"firstEvent\", Fetch.FetchType.EAGER);\n        alarmCb.fetch(\"lastEvent\", Fetch.FetchType.EAGER);\n\n        /**\n         * due to restrictions in the criteria api it's quite hard\n         * to use distinct and orderBy together, so I apply a workaround\n         * to avoid alarmCb.distinct();\n         */\n\n        List<OnmsAlarm> onmsAlarmList = m_alarmDao.findMatching(alarmCb.toCriteria());\n\n        List<OnmsAlarm> distinctOnmsAlarmList = new LinkedList<>();\n        Set<Integer> onmsAlarmIdSet = new TreeSet<>();\n\n        for (OnmsAlarm onmsAlarm : onmsAlarmList) {\n            if (!onmsAlarmIdSet.contains(onmsAlarm.getId())) {\n                distinctOnmsAlarmList.add(onmsAlarm);\n                onmsAlarmIdSet.add(onmsAlarm.getId());\n            }\n        }\n\n        return distinctOnmsAlarmList;\n    }","commit_id":"f7951f144f12a182878e51ca3ba610ec41c93407","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public static void main(String[] args) throws Exception {\n        Random random = new Random();\n\n        Settings settings = settingsBuilder()\n                .put(\"cluster.routing.schedule\", 200, TimeUnit.MILLISECONDS)\n                .put(\"index.refresh_interval\", \"-1\")\n                .put(\"index.merge.async\", true)\n                .put(\"gateway.type\", \"local\")\n                .put(SETTING_NUMBER_OF_SHARDS, 2)\n                .put(SETTING_NUMBER_OF_REPLICAS, 1)\n                .build();\n\n        Node node1 = nodeBuilder().settings(settingsBuilder().put(settings).put(\"name\", \"server1\")).node();\n        Node node2 = nodeBuilder().settings(settingsBuilder().put(settings).put(\"name\", \"server2\")).node();\n\n        Node client = nodeBuilder().settings(settingsBuilder().put(settings).put(\"name\", \"client\")).client(true).node();\n\n        Client client1 = client.client();\n\n        Thread.sleep(1000);\n        client1.admin().indices().create(createIndexRequest(\"test\")).actionGet();\n        Thread.sleep(5000);\n\n        StopWatch stopWatch = new StopWatch().start();\n        long COUNT = SizeValue.parseSizeValue(\"5m\").singles();\n        int BATCH = 100;\n        System.out.println(\"Indexing [\" + COUNT + \"] ...\");\n        long ITERS = COUNT / BATCH;\n        long i = 1;\n        int counter = 0;\n        for (; i <= ITERS; i++) {\n            BulkRequestBuilder request = client1.prepareBulk();\n            for (int j = 0; j < BATCH; j++) {\n                counter++;\n                request.add(Requests.indexRequest(\"test\").type(\"type1\").id(Integer.toString(counter)).source(source(Integer.toString(counter), \"test\" + counter)));\n            }\n            BulkResponse response = request.execute().actionGet();\n            if (response.hasFailures()) {\n                System.err.println(\"failures...\");\n            }\n            if (((i * BATCH) % 10000) == 0) {\n                System.out.println(\"Indexed \" + (i * BATCH) + \" took \" + stopWatch.stop().lastTaskTime());\n                stopWatch.start();\n            }\n        }\n        System.out.println(\"Indexing took \" + stopWatch.totalTime() + \", TPS \" + (((double) COUNT) / stopWatch.totalTime().secondsFrac()));\n\n        client.client().admin().indices().prepareRefresh().execute().actionGet();\n        System.out.println(\"Count: \" + client.client().prepareCount().setQuery(matchAllQuery()).execute().actionGet().count());\n\n        client.close();\n\n        node1.close();\n        node2.close();\n    }","id":15256,"modified_method":"public static void main(String[] args) throws Exception {\n        Random random = new Random();\n\n        Settings settings = settingsBuilder()\n                .put(\"cluster.routing.schedule\", 200, TimeUnit.MILLISECONDS)\n                .put(\"index.refresh_interval\", \"-1\")\n                .put(\"index.merge.async\", true)\n                .put(\"index.translog.flush_threshold_ops\", 5000)\n                .put(\"gateway.type\", \"local\")\n                .put(SETTING_NUMBER_OF_SHARDS, 1)\n                .put(SETTING_NUMBER_OF_REPLICAS, 1)\n                .build();\n\n        Node[] nodes = new Node[1];\n        for (int i = 0; i < nodes.length; i++) {\n            nodes[i] = nodeBuilder().settings(settingsBuilder().put(settings).put(\"name\", \"node\" + i)).node();\n        }\n\n        Node client = nodeBuilder().settings(settingsBuilder().put(settings).put(\"name\", \"client\")).client(true).node();\n\n        Client client1 = client.client();\n\n        Thread.sleep(1000);\n        client1.admin().indices().prepareCreate(\"test\").setSettings(settings).addMapping(\"type1\", XContentFactory.jsonBuilder().startObject().startObject(\"type1\")\n                .startObject(\"_source\").field(\"enabled\", false).endObject()\n                .startObject(\"_all\").field(\"enabled\", false).endObject()\n                .startObject(\"properties\")\n                .startObject(\"field\").field(\"type\", \"string\").field(\"index\", \"not_analyzed\").field(\"omit_norms\", true).endObject()\n//                .startObject(\"field\").field(\"index\", \"analyzed\").field(\"omit_norms\", false).endObject()\n                .endObject()\n                .endObject().endObject()).execute().actionGet();\n        Thread.sleep(5000);\n\n        StopWatch stopWatch = new StopWatch().start();\n        long COUNT = SizeValue.parseSizeValue(\"2m\").singles();\n        int BATCH = 500;\n        System.out.println(\"Indexing [\" + COUNT + \"] ...\");\n        long ITERS = COUNT / BATCH;\n        long i = 1;\n        int counter = 0;\n        for (; i <= ITERS; i++) {\n            BulkRequestBuilder request = client1.prepareBulk();\n            for (int j = 0; j < BATCH; j++) {\n                counter++;\n                request.add(Requests.indexRequest(\"test\").type(\"type1\").id(Integer.toString(counter)).source(source(Integer.toString(counter), \"test\" + counter)));\n            }\n            BulkResponse response = request.execute().actionGet();\n            if (response.hasFailures()) {\n                System.err.println(\"failures...\");\n            }\n            if (((i * BATCH) % 10000) == 0) {\n                System.out.println(\"Indexed \" + (i * BATCH) + \" took \" + stopWatch.stop().lastTaskTime());\n                stopWatch.start();\n            }\n        }\n        System.out.println(\"Indexing took \" + stopWatch.totalTime() + \", TPS \" + (((double) COUNT) / stopWatch.totalTime().secondsFrac()));\n\n        client.client().admin().indices().prepareRefresh().execute().actionGet();\n        System.out.println(\"Count: \" + client.client().prepareCount().setQuery(matchAllQuery()).execute().actionGet().count());\n\n        client.close();\n\n        for (Node node : nodes) {\n            node.close();\n        }\n    }","commit_id":"287dc862e0eaa16d97481cda31692d5f5b8006a6","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private static XContentBuilder source(String id, String nameValue) throws IOException {\n        return jsonBuilder().startObject().field(\"id\", id).field(\"name\", nameValue).endObject();\n    }","id":15257,"modified_method":"private static XContentBuilder source(String id, String nameValue) throws IOException {\n        return jsonBuilder().startObject().field(\"field\", nameValue).endObject();\n    }","commit_id":"287dc862e0eaa16d97481cda31692d5f5b8006a6","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void addText(String name, String text, float boost) {\n        Entry entry = new Entry(name, new FastStringReader(text), boost);\n        entries.add(entry);\n    }","id":15258,"modified_method":"public void addText(String name, String text, float boost) {\n        if (boost != 1.0f) {\n            customBoost = true;\n        }\n        Entry entry = new Entry(name, new FastStringReader(text), boost);\n        entries.add(entry);\n    }","commit_id":"3c3d01347e70f469b866249e7a5bff66685c739d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override public void close() {\n        if (current != null) {\n            try {\n                current.reader().close();\n            } catch (IOException e) {\n                // can't happen...\n            } finally {\n                current = null;\n            }\n        }\n    }","id":15259,"modified_method":"@Override public void close() {\n        if (current != null) {\n            current.reader().close();\n            current = null;\n        }\n    }","commit_id":"3c3d01347e70f469b866249e7a5bff66685c739d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override public int read(char[] cbuf, int off, int len) throws IOException {\n        if (current == null) {\n            return -1;\n        }\n        int result = current.reader().read(cbuf, off, len);\n        if (result == -1) {\n            if (itsSeparatorTime) {\n                itsSeparatorTime = false;\n                cbuf[off] = ' ';\n                return 1;\n            }\n            itsSeparatorTime = true;\n            advance();\n            return read(cbuf, off, len);\n        }\n        return result;\n    }","id":15260,"modified_method":"@Override public int read(char[] cbuf, int off, int len) throws IOException {\n        if (current == null) {\n            return -1;\n        }\n        if (customBoost) {\n            int result = current.reader().read(cbuf, off, len);\n            if (result == -1) {\n                if (itsSeparatorTime) {\n                    itsSeparatorTime = false;\n                    cbuf[off] = ' ';\n                    return 1;\n                }\n                itsSeparatorTime = true;\n                // close(); No need to close, we work on in mem readers\n                if (it.hasNext()) {\n                    current = it.next();\n                } else {\n                    current = null;\n                }\n                return read(cbuf, off, len);\n            }\n            return result;\n        } else {\n            int read = 0;\n            while (len > 0) {\n                int result = current.reader().read(cbuf, off, len);\n                if (result == -1) {\n                    if (it.hasNext()) {\n                        current = it.next();\n                    } else {\n                        current = null;\n                        return read;\n                    }\n                    cbuf[off++] = ' ';\n                    read++;\n                    len--;\n                } else {\n                    read += result;\n                    off += result;\n                    len -= result;\n                }\n            }\n            return read;\n        }\n    }","commit_id":"3c3d01347e70f469b866249e7a5bff66685c739d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public CharSequenceReader reader() {\n            return this.reader;\n        }","id":15261,"modified_method":"public FastStringReader reader() {\n            return this.reader;\n        }","commit_id":"3c3d01347e70f469b866249e7a5bff66685c739d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public Entry(String name, CharSequenceReader reader, float boost) {\n            this.name = name;\n            this.reader = reader;\n            this.boost = boost;\n        }","id":15262,"modified_method":"public Entry(String name, FastStringReader reader, float boost) {\n            this.name = name;\n            this.reader = reader;\n            this.boost = boost;\n        }","commit_id":"3c3d01347e70f469b866249e7a5bff66685c739d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"/**\n     * Reads characters into a portion of an array.\n     *\n     * @param cbuf Destination buffer\n     * @param off  Offset at which to start writing characters\n     * @param len  Maximum number of characters to read\n     * @return The number of characters read, or -1 if the end of the\n     *         stream has been reached\n     * @throws IOException If an I/O error occurs\n     */\n    @Override public int read(char cbuf[], int off, int len) throws IOException {\n        ensureOpen();\n        if ((off < 0) || (off > cbuf.length) || (len < 0) ||\n                ((off + len) > cbuf.length) || ((off + len) < 0)) {\n            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n        if (next >= length)\n            return -1;\n        int n = Math.min(length - next, len);\n        str.getChars(next, next + n, cbuf, off);\n        next += n;\n        return n;\n    }","id":15263,"modified_method":"/**\n     * Reads characters into a portion of an array.\n     *\n     * @param cbuf Destination buffer\n     * @param off  Offset at which to start writing characters\n     * @param len  Maximum number of characters to read\n     * @return The number of characters read, or -1 if the end of the\n     *         stream has been reached\n     * @throws IOException If an I/O error occurs\n     */\n    @Override public int read(char cbuf[], int off, int len) throws IOException {\n        ensureOpen();\n        if (len == 0) {\n            return 0;\n        }\n        if (next >= length)\n            return -1;\n        int n = Math.min(length - next, len);\n        str.getChars(next, next + n, cbuf, off);\n        next += n;\n        return n;\n    }","commit_id":"3c3d01347e70f469b866249e7a5bff66685c739d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public static void main(String[] args) throws Exception {\n        Random random = new Random();\n\n        Settings settings = settingsBuilder()\n                .put(\"cluster.routing.schedule\", 200, TimeUnit.MILLISECONDS)\n                .put(\"index.engine.robin.refreshInterval\", \"-1\")\n                .put(\"gateway.type\", \"none\")\n                .put(SETTING_NUMBER_OF_SHARDS, 2)\n                .put(SETTING_NUMBER_OF_REPLICAS, 1)\n                .build();\n\n        Node node1 = nodeBuilder().settings(settingsBuilder().put(settings).put(\"name\", \"server1\")).node();\n        Node node2 = nodeBuilder().settings(settingsBuilder().put(settings).put(\"name\", \"server2\")).node();\n\n        Node client = nodeBuilder().settings(settingsBuilder().put(settings).put(\"name\", \"client\")).client(true).node();\n\n        Client client1 = client.client();\n\n        Thread.sleep(1000);\n        client1.admin().indices().create(createIndexRequest(\"test\")).actionGet();\n        Thread.sleep(5000);\n\n        StopWatch stopWatch = new StopWatch().start();\n        int COUNT = 200000;\n        System.out.println(\"Indexing [\" + COUNT + \"] ...\");\n        int i = 1;\n        for (; i <= COUNT; i++) {\n            client1.prepareIndex(\"test\", \"type1\").setId(Integer.toString(i)).setSource(source(Integer.toString(i), \"test\" + i))\n                    .setCreate(false).execute().actionGet();\n            if ((i % 10000) == 0) {\n                System.out.println(\"Indexed \" + i + \" took \" + stopWatch.stop().lastTaskTime());\n                stopWatch.start();\n            }\n        }\n        System.out.println(\"Indexing took \" + stopWatch.totalTime() + \", TPS \" + (((double) COUNT) / stopWatch.totalTime().secondsFrac()));\n\n        client.client().admin().indices().prepareRefresh().execute().actionGet();\n        System.out.println(\"Count: \" + client.client().prepareCount().setQuery(matchAllQuery()).execute().actionGet().count());\n\n        client.close();\n\n        node1.close();\n        node2.close();\n    }","id":15264,"modified_method":"public static void main(String[] args) throws Exception {\n        Settings settings = settingsBuilder()\n                .put(\"cluster.routing.schedule\", 200, TimeUnit.MILLISECONDS)\n                .put(\"index.engine.robin.refreshInterval\", \"-1\")\n                .put(\"gateway.type\", \"none\")\n                .put(SETTING_NUMBER_OF_SHARDS, 2)\n                .put(SETTING_NUMBER_OF_REPLICAS, 1)\n                .build();\n\n        Node[] nodes = new Node[1];\n        for (int i = 0; i < nodes.length; i++) {\n            nodes[i] = nodeBuilder().settings(settingsBuilder().put(settings).put(\"name\", \"node\" + i)).node();\n        }\n\n        Node client = nodeBuilder().settings(settingsBuilder().put(settings).put(\"name\", \"client\")).client(true).node();\n\n        Client client1 = client.client();\n\n        Thread.sleep(1000);\n        client1.admin().indices().create(createIndexRequest(\"test\")).actionGet();\n        Thread.sleep(5000);\n\n        StopWatch stopWatch = new StopWatch().start();\n        int COUNT = 200000;\n        System.out.println(\"Indexing [\" + COUNT + \"] ...\");\n        int i = 1;\n        for (; i <= COUNT; i++) {\n            client1.prepareIndex(\"test\", \"type1\").setId(Integer.toString(i)).setSource(source(Integer.toString(i), \"test\" + i))\n                    .setCreate(false).execute().actionGet();\n            if ((i % 10000) == 0) {\n                System.out.println(\"Indexed \" + i + \" took \" + stopWatch.stop().lastTaskTime());\n                stopWatch.start();\n            }\n        }\n        System.out.println(\"Indexing took \" + stopWatch.totalTime() + \", TPS \" + (((double) COUNT) / stopWatch.totalTime().secondsFrac()));\n\n        client.client().admin().indices().prepareRefresh().execute().actionGet();\n        System.out.println(\"Count: \" + client.client().prepareCount().setQuery(matchAllQuery()).execute().actionGet().count());\n\n        client.close();\n\n        for (Node node : nodes) {\n            node.close();\n        }\n    }","commit_id":"3c3d01347e70f469b866249e7a5bff66685c739d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private static XContentBuilder source(String id, String nameValue) throws IOException {\n        return jsonBuilder().startObject().field(\"id\", id).field(\"name\", nameValue).endObject();\n    }","id":15265,"modified_method":"private static XContentBuilder source(String id, String nameValue) throws IOException {\n        long time = System.currentTimeMillis();\n        return jsonBuilder().startObject()\n                .field(\"id\", id)\n                .field(\"numeric1\", time)\n                .field(\"numeric2\", time)\n                .field(\"numeric3\", time)\n                .field(\"numeric4\", time)\n                .field(\"numeric5\", time)\n                .field(\"numeric6\", time)\n                .field(\"numeric7\", time)\n                .field(\"numeric8\", time)\n                .field(\"numeric9\", time)\n                .field(\"numeric10\", time)\n                .field(\"name\", nameValue)\n                .endObject();\n    }","commit_id":"3c3d01347e70f469b866249e7a5bff66685c739d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public static void main(String[] args) throws Exception {\n        Settings settings = settingsBuilder()\n                .put(\"index.refresh_interval\", \"-1\")\n                .put(\"gateway.type\", \"local\")\n                .put(SETTING_NUMBER_OF_SHARDS, 2)\n                .put(SETTING_NUMBER_OF_REPLICAS, 0)\n                .build();\n\n        Node node1 = nodeBuilder().settings(settingsBuilder().put(settings).put(\"name\", \"node1\")).node();\n        Node node2 = nodeBuilder().settings(settingsBuilder().put(settings).put(\"name\", \"node2\")).node();\n\n        Node clientNode = nodeBuilder().settings(settingsBuilder().put(settings).put(\"name\", \"client\")).client(true).node();\n\n        client = clientNode.client();\n\n        long[] lValues = new long[NUMBER_OF_TERMS];\n        for (int i = 0; i < NUMBER_OF_TERMS; i++) {\n            lValues[i] = ThreadLocalRandom.current().nextLong();\n        }\n        String[] sValues = new String[NUMBER_OF_TERMS];\n        for (int i = 0; i < NUMBER_OF_TERMS; i++) {\n            sValues[i] = RandomStringGenerator.randomAlphabetic(STRING_TERM_SIZE);\n        }\n\n        Thread.sleep(10000);\n        try {\n            client.admin().indices().create(createIndexRequest(\"test\")).actionGet();\n\n            StopWatch stopWatch = new StopWatch().start();\n\n            System.out.println(\"--> Indexing [\" + COUNT + \"] ...\");\n            long ITERS = COUNT / BATCH;\n            long i = 1;\n            int counter = 0;\n            for (; i <= ITERS; i++) {\n                BulkRequestBuilder request = client.prepareBulk();\n                for (int j = 0; j < BATCH; j++) {\n                    counter++;\n\n                    XContentBuilder builder = jsonBuilder().startObject();\n                    builder.field(\"id\", Integer.toString(counter));\n                    builder.field(\"s_value\", sValues[counter % sValues.length]);\n                    builder.field(\"l_value\", lValues[counter % lValues.length]);\n\n                    builder.startArray(\"sm_value\");\n                    for (int k = 0; k < NUMBER_OF_MULTI_VALUE_TERMS; k++) {\n                        builder.value(sValues[ThreadLocalRandom.current().nextInt(sValues.length)]);\n                    }\n                    builder.endArray();\n\n                    builder.startArray(\"lm_value\");\n                    for (int k = 0; k < NUMBER_OF_MULTI_VALUE_TERMS; k++) {\n                        builder.value(lValues[ThreadLocalRandom.current().nextInt(sValues.length)]);\n                    }\n                    builder.endArray();\n\n                    builder.endObject();\n\n                    request.add(Requests.indexRequest(\"test\").type(\"type1\").id(Integer.toString(counter))\n                            .source(builder));\n                }\n                BulkResponse response = request.execute().actionGet();\n                if (response.hasFailures()) {\n                    System.err.println(\"--> failures...\");\n                }\n                if (((i * BATCH) % 10000) == 0) {\n                    System.out.println(\"--> Indexed \" + (i * BATCH) + \" took \" + stopWatch.stop().lastTaskTime());\n                    stopWatch.start();\n                }\n            }\n            System.out.println(\"--> Indexing took \" + stopWatch.totalTime() + \", TPS \" + (((double) (COUNT)) / stopWatch.totalTime().secondsFrac()));\n        } catch (Exception e) {\n            System.out.println(\"--> Index already exists, ignoring indexing phase, waiting for green\");\n            ClusterHealthResponse clusterHealthResponse = client.admin().cluster().prepareHealth().setWaitForGreenStatus().setTimeout(\"10m\").execute().actionGet();\n            if (clusterHealthResponse.timedOut()) {\n                System.err.println(\"--> Timed out waiting for cluster health\");\n            }\n        }\n        client.admin().indices().prepareRefresh().execute().actionGet();\n        COUNT = client.prepareCount().setQuery(matchAllQuery()).execute().actionGet().count();\n        System.out.println(\"--> Number of docs in index: \" + COUNT);\n\n\n        List<StatsResult> stats = Lists.newArrayList();\n        stats.add(terms(\"terms_s\", \"s_value\", null));\n        stats.add(terms(\"terms_map_s\", \"s_value\", \"map\"));\n        stats.add(terms(\"terms_l\", \"l_value\", null));\n        stats.add(terms(\"terms_map_l\", \"l_value\", \"map\"));\n        stats.add(terms(\"terms_sm\", \"sm_value\", null));\n        stats.add(terms(\"terms_map_sm\", \"sm_value\", \"map\"));\n        stats.add(terms(\"terms_lm\", \"lm_value\", null));\n        stats.add(terms(\"terms_map_lm\", \"lm_value\", \"map\"));\n\n        stats.add(termsStats(\"terms_stats_s_l\", \"s_value\", \"l_value\", null));\n        stats.add(termsStats(\"terms_stats_s_lm\", \"s_value\", \"lm_value\", null));\n        stats.add(termsStats(\"terms_stats_sm_l\", \"sm_value\", \"l_value\", null));\n\n        System.out.println(\"------------------ SUMMARY -------------------------------\");\n        System.out.format(\"%25s%10s%10s\\n\", \"name\", \"took\", \"millis\");\n        for (StatsResult stat : stats) {\n            System.out.format(\"%25s%10s%10d\\n\", stat.name, TimeValue.timeValueMillis(stat.took), (stat.took / QUERY_COUNT));\n        }\n        System.out.println(\"------------------ SUMMARY -------------------------------\");\n\n        clientNode.close();\n\n        node1.close();\n        node2.close();\n    }","id":15266,"modified_method":"public static void main(String[] args) throws Exception {\n        Settings settings = settingsBuilder()\n                .put(\"index.refresh_interval\", \"-1\")\n                .put(\"gateway.type\", \"local\")\n                .put(SETTING_NUMBER_OF_SHARDS, 1)\n                .put(SETTING_NUMBER_OF_REPLICAS, 0)\n                .build();\n\n        Node[] nodes = new Node[1];\n        for (int i = 0; i < nodes.length; i++) {\n            nodes[i] = nodeBuilder().settings(settingsBuilder().put(settings).put(\"name\", \"node\" + i)).node();\n        }\n\n        Node clientNode = nodeBuilder().settings(settingsBuilder().put(settings).put(\"name\", \"client\")).client(true).node();\n\n        client = clientNode.client();\n\n        long[] lValues = new long[NUMBER_OF_TERMS];\n        for (int i = 0; i < NUMBER_OF_TERMS; i++) {\n            lValues[i] = ThreadLocalRandom.current().nextLong();\n        }\n        String[] sValues = new String[NUMBER_OF_TERMS];\n        for (int i = 0; i < NUMBER_OF_TERMS; i++) {\n            sValues[i] = RandomStringGenerator.randomAlphabetic(STRING_TERM_SIZE);\n        }\n\n        Thread.sleep(10000);\n        try {\n            client.admin().indices().create(createIndexRequest(\"test\")).actionGet();\n\n            StopWatch stopWatch = new StopWatch().start();\n\n            System.out.println(\"--> Indexing [\" + COUNT + \"] ...\");\n            long ITERS = COUNT / BATCH;\n            long i = 1;\n            int counter = 0;\n            for (; i <= ITERS; i++) {\n                BulkRequestBuilder request = client.prepareBulk();\n                for (int j = 0; j < BATCH; j++) {\n                    counter++;\n\n                    XContentBuilder builder = jsonBuilder().startObject();\n                    builder.field(\"id\", Integer.toString(counter));\n                    builder.field(\"s_value\", sValues[counter % sValues.length]);\n                    builder.field(\"l_value\", lValues[counter % lValues.length]);\n\n                    builder.startArray(\"sm_value\");\n                    for (int k = 0; k < NUMBER_OF_MULTI_VALUE_TERMS; k++) {\n                        builder.value(sValues[ThreadLocalRandom.current().nextInt(sValues.length)]);\n                    }\n                    builder.endArray();\n\n                    builder.startArray(\"lm_value\");\n                    for (int k = 0; k < NUMBER_OF_MULTI_VALUE_TERMS; k++) {\n                        builder.value(lValues[ThreadLocalRandom.current().nextInt(sValues.length)]);\n                    }\n                    builder.endArray();\n\n                    builder.endObject();\n\n                    request.add(Requests.indexRequest(\"test\").type(\"type1\").id(Integer.toString(counter))\n                            .source(builder));\n                }\n                BulkResponse response = request.execute().actionGet();\n                if (response.hasFailures()) {\n                    System.err.println(\"--> failures...\");\n                }\n                if (((i * BATCH) % 10000) == 0) {\n                    System.out.println(\"--> Indexed \" + (i * BATCH) + \" took \" + stopWatch.stop().lastTaskTime());\n                    stopWatch.start();\n                }\n            }\n            System.out.println(\"--> Indexing took \" + stopWatch.totalTime() + \", TPS \" + (((double) (COUNT)) / stopWatch.totalTime().secondsFrac()));\n        } catch (Exception e) {\n            System.out.println(\"--> Index already exists, ignoring indexing phase, waiting for green\");\n            ClusterHealthResponse clusterHealthResponse = client.admin().cluster().prepareHealth().setWaitForGreenStatus().setTimeout(\"10m\").execute().actionGet();\n            if (clusterHealthResponse.timedOut()) {\n                System.err.println(\"--> Timed out waiting for cluster health\");\n            }\n        }\n        client.admin().indices().prepareRefresh().execute().actionGet();\n        COUNT = client.prepareCount().setQuery(matchAllQuery()).execute().actionGet().count();\n        System.out.println(\"--> Number of docs in index: \" + COUNT);\n\n\n        List<StatsResult> stats = Lists.newArrayList();\n        stats.add(terms(\"terms_s\", \"s_value\", null));\n        stats.add(terms(\"terms_map_s\", \"s_value\", \"map\"));\n        stats.add(terms(\"terms_l\", \"l_value\", null));\n        stats.add(terms(\"terms_map_l\", \"l_value\", \"map\"));\n        stats.add(terms(\"terms_sm\", \"sm_value\", null));\n        stats.add(terms(\"terms_map_sm\", \"sm_value\", \"map\"));\n        stats.add(terms(\"terms_lm\", \"lm_value\", null));\n        stats.add(terms(\"terms_map_lm\", \"lm_value\", \"map\"));\n\n        stats.add(termsStats(\"terms_stats_s_l\", \"s_value\", \"l_value\", null));\n        stats.add(termsStats(\"terms_stats_s_lm\", \"s_value\", \"lm_value\", null));\n        stats.add(termsStats(\"terms_stats_sm_l\", \"sm_value\", \"l_value\", null));\n\n        System.out.println(\"------------------ SUMMARY -------------------------------\");\n        System.out.format(\"%25s%10s%10s\\n\", \"name\", \"took\", \"millis\");\n        for (StatsResult stat : stats) {\n            System.out.format(\"%25s%10s%10d\\n\", stat.name, TimeValue.timeValueMillis(stat.took), (stat.took / QUERY_COUNT));\n        }\n        System.out.println(\"------------------ SUMMARY -------------------------------\");\n\n        clientNode.close();\n\n        for (Node node : nodes) {\n            node.close();\n        }\n    }","commit_id":"bcd4ef2823ac9a573fb2456e4ac0e6f252f4e06c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void shouldBeAbleToStartInSingleMode() throws Exception\n    {\n        // When\n        int resultCode = start( bootstrapper, commandLineConfig(\n                \"-c\", configOption( EnterpriseServerSettings.mode.name(), \"SINGLE\" )\n        ));\n\n        // Then\n        assertEquals( Bootstrapper.OK, resultCode );\n        assertNotNull( bootstrapper.getServer() );\n    }","id":15267,"modified_method":"@Test\n    public void shouldBeAbleToStartInSingleMode() throws Exception\n    {\n        // When\n        int resultCode = start( bootstrapper, commandLineConfig(\n                \"-c\", configOption( EnterpriseServerSettings.mode.name(), \"SINGLE\" ),\n                \"-c\", configOption( data_directory.name(), getRelativePath( folder.getRoot(), data_directory ) ),\n                \"-c\", configOption( auth_store.name(), getRelativePath( folder.getRoot(), auth_store ) ),\n                \"-c\", configOption( tls_key_file.name(), getRelativePath( folder.getRoot(), tls_key_file ) ),\n                \"-c\", configOption( tls_certificate_file.name(), getRelativePath( folder.getRoot(), tls_certificate_file ) )\n        ));\n\n        // Then\n        assertEquals( Bootstrapper.OK, resultCode );\n        assertNotNull( bootstrapper.getServer() );\n    }","commit_id":"b9dbbc6365f9ac860f97c54161b0d1d243c18010","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldBeAbleToStartInHAMode() throws Exception\n    {\n        // When\n        int resultCode = start( bootstrapper, commandLineConfig(\n                \"-c\", configOption( EnterpriseServerSettings.mode.name(), \"HA\" ),\n                \"-c\", configOption( ClusterSettings.server_id.name(), \"1\" ),\n                \"-c\", configOption( ClusterSettings.initial_hosts.name(), \"127.0.0.1:5001\" )\n        ));\n\n        // Then\n        assertEquals( Bootstrapper.OK, resultCode );\n        assertNotNull( bootstrapper.getServer() );\n    }","id":15268,"modified_method":"@Test\n    public void shouldBeAbleToStartInHAMode() throws Exception\n    {\n        // When\n        int resultCode = start( bootstrapper, commandLineConfig(\n                \"-c\", configOption( EnterpriseServerSettings.mode.name(), \"HA\" ),\n                \"-c\", configOption( ClusterSettings.server_id.name(), \"1\" ),\n                \"-c\", configOption( ClusterSettings.initial_hosts.name(), \"127.0.0.1:5001\" ),\n                \"-c\", configOption( data_directory.name(), getRelativePath( folder.getRoot(), data_directory ) ),\n                \"-c\", configOption( auth_store.name(), getRelativePath( folder.getRoot(), auth_store ) ),\n                \"-c\", configOption( tls_key_file.name(), getRelativePath( folder.getRoot(), tls_key_file ) ),\n                \"-c\", configOption( tls_certificate_file.name(), getRelativePath( folder.getRoot(), tls_certificate_file ) )\n        ));\n\n        // Then\n        assertEquals( Bootstrapper.OK, resultCode );\n        assertNotNull( bootstrapper.getServer() );\n    }","commit_id":"b9dbbc6365f9ac860f97c54161b0d1d243c18010","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldMigrateFixedPushStrategyInHA() throws Exception\n    {\n        // When\n        start( bootstrapper, commandLineConfig(\n                \"-c\", configOption( EnterpriseServerSettings.mode.name(), \"HA\" ),\n                \"-c\", configOption( ClusterSettings.server_id.name(), \"1\" ),\n                \"-c\", configOption( ClusterSettings.initial_hosts.name(), \"127.0.0.1:5001\" ),\n                \"-c\", configOption( HaSettings.tx_push_strategy.name(), \"fixed\" )\n        ));\n\n        // Then\n        assertEquals( HaSettings.TxPushStrategy.fixed_descending, bootstrapper.getServer().getConfig().get( HaSettings.tx_push_strategy ) );\n    }","id":15269,"modified_method":"@Test\n    public void shouldMigrateFixedPushStrategyInHA() throws Exception\n    {\n        // When\n        start( bootstrapper, commandLineConfig(\n                \"-c\", configOption( EnterpriseServerSettings.mode.name(), \"HA\" ),\n                \"-c\", configOption( ClusterSettings.server_id.name(), \"1\" ),\n                \"-c\", configOption( ClusterSettings.initial_hosts.name(), \"127.0.0.1:5001\" ),\n                \"-c\", configOption( HaSettings.tx_push_strategy.name(), \"fixed\" ),\n                \"-c\", configOption( data_directory.name(), getRelativePath( folder.getRoot(), data_directory ) ),\n                \"-c\", configOption( auth_store.name(), getRelativePath( folder.getRoot(), auth_store ) ),\n                \"-c\", configOption( tls_key_file.name(), getRelativePath( folder.getRoot(), tls_key_file ) ),\n                \"-c\", configOption( tls_certificate_file.name(), getRelativePath( folder.getRoot(), tls_certificate_file ) )\n        ));\n\n        // Then\n        assertEquals( HaSettings.TxPushStrategy.fixed_descending, bootstrapper.getServer().getConfig().get( HaSettings.tx_push_strategy ) );\n    }","commit_id":"b9dbbc6365f9ac860f97c54161b0d1d243c18010","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void startAndAssertJoined( Integer expectedAssignedPort, Map<String, String> configInConfigFile,\n                                       Map<String, String> config ) throws Exception\n    {\n        File configFile = configFile( configInConfigFile );\n        CountDownLatch latch = new CountDownLatch( 1 );\n        AtomicInteger port = new AtomicInteger();\n        clients[0].addClusterListener( joinAwaitingListener( latch, port ) );\n\n        boolean clientStarted = startStandaloneClusterClient( configFile, config, latch );\n        if ( expectedAssignedPort == null )\n        {\n            assertFalse( format( \"Should not be able to start cluster client given config file:%s \" +\n                    \"and arguments:%s\", configInConfigFile, config ), clientStarted );\n        }\n        else\n        {\n            assertTrue( format( \"Should be able to start client client given config file:%s \" +\n                    \"and arguments:%s\", configInConfigFile, config ), clientStarted );\n            assertEquals( expectedAssignedPort.intValue(), port.get() );\n        }\n    }","id":15270,"modified_method":"private void startAndAssertJoined( Integer expectedAssignedPort, Map<String, String> configInConfigFile,\n                                       Map<String, String> config ) throws Exception\n    {\n        Map<String,String> localCopy = new HashMap<>( configInConfigFile );\n        localCopy.put( GraphDatabaseSettings.auth_store.name(), Files.createTempFile(\"auth\", \"\").toString() );\n        File configFile = configFile( localCopy );\n        CountDownLatch latch = new CountDownLatch( 1 );\n        AtomicInteger port = new AtomicInteger();\n        clients[0].addClusterListener( joinAwaitingListener( latch, port ) );\n\n        boolean clientStarted = startStandaloneClusterClient( configFile, config, latch );\n        if ( expectedAssignedPort == null )\n        {\n            assertFalse( format( \"Should not be able to start cluster client given config file:%s \" +\n                    \"and arguments:%s\", configInConfigFile, config ), clientStarted );\n        }\n        else\n        {\n            assertTrue( format( \"Should be able to start client client given config file:%s \" +\n                    \"and arguments:%s\", configInConfigFile, config ), clientStarted );\n            assertEquals( expectedAssignedPort.intValue(), port.get() );\n        }\n    }","commit_id":"b9dbbc6365f9ac860f97c54161b0d1d243c18010","url":"https://github.com/neo4j/neo4j"},{"original_method":"public static void setup() throws IOException\n    {\n        File path = new File( \"/tmp/asd\" );\n        if( path.exists())\n        {\n            FileUtils.deleteRecursively( path );\n        }\n        db = new GraphDatabaseFactory().newEmbeddedDatabase( path.getAbsolutePath() );\n        try( Transaction tx = db.beginTx() )\n        {\n            db.execute( \"CREATE INDEX ON :User(name)\" );\n            tx.success();\n        }\n\n        try( Transaction tx = db.beginTx() )\n        {\n            db.schema().awaitIndexesOnline( 10, TimeUnit.SECONDS );\n            tx.success();\n        }\n    }","id":15271,"modified_method":"public static void setup() throws IOException\n    {\n        File path = new File( \"/tmp/asd\" );\n        if( path.exists())\n        {\n            FileUtils.deleteRecursively( path );\n        }\n        db = new GraphDatabaseFactory()\n                .newEmbeddedDatabaseBuilder( path )\n                .setConfig( GraphDatabaseSettings.auth_store, new File(path, \"auth\").getAbsolutePath() )\n                .setConfig( ServerSettings.tls_certificate_file, new File(path, \"cert.pem\").getAbsolutePath() )\n                .setConfig( ServerSettings.tls_key_file, new File(path, \"key.pem\").getAbsolutePath() )\n                .newGraphDatabase();\n        try( Transaction tx = db.beginTx() )\n        {\n            db.execute( \"CREATE INDEX ON :User(name)\" );\n            tx.success();\n        }\n\n        try( Transaction tx = db.beginTx() )\n        {\n            db.schema().awaitIndexesOnline( 10, TimeUnit.SECONDS );\n            tx.success();\n        }\n    }","commit_id":"b9dbbc6365f9ac860f97c54161b0d1d243c18010","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static List<Callable<Object>> workers( final long iterations, final int numWorkers )\n    {\n        List<Callable<Object>> workers = new ArrayList<>();\n        for ( int i = 0; i < numWorkers; i++ )\n        {\n            final Worker worker = new Worker();\n            workers.add( new Callable<Object>()\n            {\n                @Override\n                public Object call() throws Exception\n                {\n                    for ( int i = 0; i < iterations; i++ )\n                    {\n                        worker.operation();\n                    }\n                    return null;\n                }\n            });\n        }\n        return workers;\n    }","id":15272,"modified_method":"private static List<Callable<Object>> workers( final long iterations, final int numWorkers )\n    {\n        List<Callable<Object>> workers = new ArrayList<>();\n        for ( int i = 0; i < numWorkers; i++ )\n        {\n            final Worker worker = new Worker();\n            workers.add( () -> {\n                for ( int i1 = 0; i1 < iterations; i1++ )\n                {\n                    worker.operation();\n                }\n                return null;\n            } );\n        }\n        return workers;\n    }","commit_id":"b9dbbc6365f9ac860f97c54161b0d1d243c18010","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void startServer( boolean authEnabled ) throws IOException\n    {\n        File authStore = ServerTestUtils.getRelativeFile( GraphDatabaseSettings.auth_store );\n        FileUtils.deleteFile( authStore);\n        server = CommunityServerBuilder.server()\n                .withProperty( GraphDatabaseSettings.auth_enabled.name(), Boolean.toString( authEnabled ) )\n                .build();\n        server.start();\n    }","id":15273,"modified_method":"public void startServer( boolean authEnabled ) throws IOException\n    {\n        File authStore = ServerTestUtils.getRelativeFile( GraphDatabaseSettings.auth_store );\n        FileUtils.deleteFile( authStore);\n        server = CommunityServerBuilder.server()\n                .withProperty( GraphDatabaseSettings.auth_enabled.name(), Boolean.toString( authEnabled ) )\n                .withProperty( GraphDatabaseSettings.auth_store.name(), authStore.getAbsolutePath() )\n                .build();\n        server.start();\n    }","commit_id":"98d2987fd627a65222078b44c1a5ddfaee612511","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldStartStopNeoServerWithoutAnyConfigFiles() throws IOException\n    {\n        // When\n        int resultCode = start( bootstrapper, commandLineConfig( \"-c\",\n                configOption( ServerSettings.legacy_db_location.name(), tempDir.getRoot().getAbsolutePath() ) ) );\n\n        // Then\n        assertEquals( Bootstrapper.OK, resultCode );\n        assertNotNull( bootstrapper.getServer() );\n    }","id":15274,"modified_method":"@Test\n    public void shouldStartStopNeoServerWithoutAnyConfigFiles() throws IOException\n    {\n        // When\n        int resultCode = start( bootstrapper, commandLineConfig(\n                \"-c\", configOption( ServerSettings.legacy_db_location.name(), tempDir.getRoot().getAbsolutePath()),\n                \"-c\", configOption( GraphDatabaseSettings.auth_store.name(), tempDir.newFile().getAbsolutePath()),\n                \"-c\", configOption( ServerSettings.tls_certificate_file.name(), new File(tempDir.getRoot(), \"cert.cert\").getAbsolutePath()),\n                \"-c\", configOption( ServerSettings.tls_key_file.name(), new File(tempDir.getRoot(), \"key.key\").getAbsolutePath())\n        ) );\n\n        // Then\n        assertEquals( Bootstrapper.OK, resultCode );\n        assertNotNull( bootstrapper.getServer() );\n    }","commit_id":"98d2987fd627a65222078b44c1a5ddfaee612511","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Map<String, String> createConfiguration( File temporaryFolder )\n    {\n        Map<String, String> properties = stringMap(\n                ServerSettings.management_api_path.name(), webAdminUri,\n                ServerSettings.rest_api_path.name(), webAdminDataUri );\n\n        ServerTestUtils.addDefaultRelativeProperties( properties, temporaryFolder );\n\n        if ( dbDir != null )\n        {\n            properties.put( ServerSettings.legacy_db_location.name(), dbDir );\n        }\n\n        if ( portNo != null )\n        {\n            properties.put( ServerSettings.webserver_port.name(), portNo );\n        }\n        if ( host != null )\n        {\n            properties.put( ServerSettings.webserver_address.name(), host );\n        }\n        if ( maxThreads != null )\n        {\n            properties.put( ServerSettings.webserver_max_threads.name(), maxThreads );\n        }\n\n        if ( thirdPartyPackages.keySet().size() > 0 )\n        {\n            properties.put( ServerSettings.third_party_packages.name(), asOneLine( thirdPartyPackages ) );\n        }\n\n        if ( autoIndexedNodeKeys != null && autoIndexedNodeKeys.length > 0 )\n        {\n            properties.put( \"node_auto_indexing\", \"true\" );\n            String propertyKeys = org.apache.commons.lang.StringUtils.join( autoIndexedNodeKeys, \",\" );\n            properties.put( \"node_keys_indexable\", propertyKeys );\n        }\n\n        if ( autoIndexedRelationshipKeys != null && autoIndexedRelationshipKeys.length > 0 )\n        {\n            properties.put( \"relationship_auto_indexing\", \"true\" );\n            String propertyKeys = org.apache.commons.lang.StringUtils.join( autoIndexedRelationshipKeys, \",\" );\n            properties.put( \"relationship_keys_indexable\", propertyKeys );\n        }\n\n        if ( securityRuleClassNames != null && securityRuleClassNames.length > 0 )\n        {\n            String propertyKeys = org.apache.commons.lang.StringUtils.join( securityRuleClassNames, \",\" );\n            properties.put( ServerSettings.security_rules.name(), propertyKeys );\n        }\n\n        if ( httpsEnabled != null )\n        {\n            if ( httpsEnabled )\n            {\n                properties.put( ServerSettings.webserver_https_enabled.name(), \"true\" );\n            }\n            else\n            {\n                properties.put( ServerSettings.webserver_https_enabled.name(), \"false\" );\n            }\n        }\n\n        properties.put( GraphDatabaseSettings.auth_enabled.name(), \"false\" );\n        properties.put( GraphDatabaseSettings.pagecache_memory.name(), \"8m\" );\n\n        for ( Object key : arbitraryProperties.keySet() )\n        {\n            properties.put( String.valueOf( key ), String.valueOf( arbitraryProperties.get( key ) ) );\n        }\n        return properties;\n    }","id":15275,"modified_method":"private Map<String, String> createConfiguration( File temporaryFolder )\n    {\n        Map<String, String> properties = stringMap(\n                ServerSettings.management_api_path.name(), webAdminUri,\n                ServerSettings.rest_api_path.name(), webAdminDataUri );\n\n        ServerTestUtils.addDefaultRelativeProperties( properties, temporaryFolder );\n\n        if ( dbDir != null )\n        {\n            properties.put( ServerSettings.legacy_db_location.name(), dbDir );\n        }\n\n        if ( portNo != null )\n        {\n            properties.put( ServerSettings.webserver_port.name(), portNo );\n        }\n        if ( host != null )\n        {\n            properties.put( ServerSettings.webserver_address.name(), host );\n        }\n        if ( maxThreads != null )\n        {\n            properties.put( ServerSettings.webserver_max_threads.name(), maxThreads );\n        }\n\n        if ( thirdPartyPackages.keySet().size() > 0 )\n        {\n            properties.put( ServerSettings.third_party_packages.name(), asOneLine( thirdPartyPackages ) );\n        }\n\n        if ( autoIndexedNodeKeys != null && autoIndexedNodeKeys.length > 0 )\n        {\n            properties.put( \"node_auto_indexing\", \"true\" );\n            String propertyKeys = org.apache.commons.lang.StringUtils.join( autoIndexedNodeKeys, \",\" );\n            properties.put( \"node_keys_indexable\", propertyKeys );\n        }\n\n        if ( autoIndexedRelationshipKeys != null && autoIndexedRelationshipKeys.length > 0 )\n        {\n            properties.put( \"relationship_auto_indexing\", \"true\" );\n            String propertyKeys = org.apache.commons.lang.StringUtils.join( autoIndexedRelationshipKeys, \",\" );\n            properties.put( \"relationship_keys_indexable\", propertyKeys );\n        }\n\n        if ( securityRuleClassNames != null && securityRuleClassNames.length > 0 )\n        {\n            String propertyKeys = org.apache.commons.lang.StringUtils.join( securityRuleClassNames, \",\" );\n            properties.put( ServerSettings.security_rules.name(), propertyKeys );\n        }\n\n        if ( httpsEnabled != null )\n        {\n            if ( httpsEnabled )\n            {\n                properties.put( ServerSettings.webserver_https_enabled.name(), \"true\" );\n            }\n            else\n            {\n                properties.put( ServerSettings.webserver_https_enabled.name(), \"false\" );\n            }\n        }\n\n        properties.put( GraphDatabaseSettings.auth_enabled.name(), \"false\" );\n        properties.put( GraphDatabaseSettings.auth_store.name(), new File(temporaryFolder, \"auth\").getAbsolutePath() );\n        properties.put( ServerSettings.tls_certificate_file.name(), new File(temporaryFolder, \"cert.cert\").getAbsolutePath() );\n        properties.put( ServerSettings.tls_key_file.name(), new File(temporaryFolder, \"key.key\").getAbsolutePath() );\n        properties.put( GraphDatabaseSettings.auth_store.name(), new File(temporaryFolder, \"auth\").getAbsolutePath() );\n        properties.put( GraphDatabaseSettings.pagecache_memory.name(), \"8m\" );\n\n        for ( Object key : arbitraryProperties.keySet() )\n        {\n            properties.put( String.valueOf( key ), String.valueOf( arbitraryProperties.get( key ) ) );\n        }\n        return properties;\n    }","commit_id":"98d2987fd627a65222078b44c1a5ddfaee612511","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public Statement apply( final Statement statement, Description description )\n    {\n        return new Statement()\n        {\n            @Override\n            public void evaluate() throws Throwable\n            {\n                Map<Setting<?>, String> settings = new HashMap<>();\n                settings.put( connector( 0, BoltKernelExtension.Settings.enabled ), \"true\" );\n                settings.put( connector( 0, BoltKernelExtension.Settings.tls_level ), OPTIONAL.name() );\n                configure.accept( settings );\n                final GraphDatabaseService gdb = new TestGraphDatabaseFactory().newImpermanentDatabase(settings);\n                try\n                {\n                    statement.evaluate();\n                }\n                finally\n                {\n                    gdb.shutdown();\n                }\n            }\n        };\n    }","id":15276,"modified_method":"@Override\n    public Statement apply( final Statement statement, Description description )\n    {\n        return new Statement()\n        {\n            @Override\n            public void evaluate() throws Throwable\n            {\n                Map<Setting<?>, String> settings = new HashMap<>();\n                settings.put( connector( 0, BoltKernelExtension.Settings.enabled ), \"true\" );\n                settings.put( connector( 0, BoltKernelExtension.Settings.tls_level ), OPTIONAL.name() );\n                settings.put( BoltKernelExtension.Settings.tls_key_file, tempPath( \"key\", \".key\" ) );\n                settings.put( BoltKernelExtension.Settings.tls_certificate_file, tempPath( \"cert\", \".cert\" ) );\n                configure.accept( settings );\n                final GraphDatabaseService gdb = new TestGraphDatabaseFactory().newImpermanentDatabase(settings);\n                try\n                {\n                    statement.evaluate();\n                }\n                finally\n                {\n                    gdb.shutdown();\n                }\n            }\n        };\n    }","commit_id":"98d2987fd627a65222078b44c1a5ddfaee612511","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void startServer(boolean authEnabled) throws IOException\n    {\n        File file = ServerTestUtils.getRelativeFile( GraphDatabaseSettings.auth_store );\n        FileUtils.deleteFile( file );\n        server = CommunityServerBuilder.server().withProperty( GraphDatabaseSettings.auth_enabled.name(),\n                Boolean.toString( authEnabled ) ).build();\n        server.start();\n    }","id":15277,"modified_method":"public void startServer(boolean authEnabled) throws IOException\n    {\n        File file = ServerTestUtils.getRelativeFile( GraphDatabaseSettings.auth_store );\n        FileUtils.deleteFile( file );\n        server = CommunityServerBuilder.server()\n                .withProperty( GraphDatabaseSettings.auth_enabled.name(), Boolean.toString( authEnabled ) )\n                .withProperty( GraphDatabaseSettings.auth_store.name(), file.getAbsolutePath() )\n                .build();\n        server.start();\n    }","commit_id":"98d2987fd627a65222078b44c1a5ddfaee612511","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n     * Parse until next Event.\n     * @return an indication of progress \n     */\n    public boolean parseNext(ByteBuffer buffer) throws IOException\n    {\n        try\n        {\n            int progress=0;\n\n            if (_state == STATE_END)\n                return false;\n\n            if (_state == STATE_CONTENT && _contentPosition == _contentLength)\n            {\n                _state=STATE_END;\n                _handler.messageComplete(_contentPosition);\n                return true;\n            }\n\n\n            // Handle header states\n            byte ch;\n            int last=_state;\n            int start=-1;\n            int length=-1;\n            \n            while (_state<STATE_END && buffer.hasRemaining())\n            {\n                if (last!=_state)\n                {\n                    progress++;\n                    last=_state;\n                }\n\n                ch=buffer.get();\n\n                if (_eol == HttpTokens.CARRIAGE_RETURN && ch == HttpTokens.LINE_FEED)\n                {\n                    _eol=HttpTokens.LINE_FEED;\n                    continue;\n                }\n                _eol=0;\n\n                switch (_state)\n                {\n                    case STATE_START:\n                        _contentLength=HttpTokens.UNKNOWN_CONTENT;\n                        _header=null;\n                        if (ch > HttpTokens.SPACE || ch<0)\n                        {\n                            start=buffer.position()-1;\n                            _state=_requestHandler!=null?STATE_METHOD:STATE_RESPONSE_VERSION;\n                        }\n                        break;\n\n                    case STATE_METHOD:\n                        if (ch == HttpTokens.SPACE)\n                        {\n                            HttpMethods method=HttpMethods.CACHE.get(buffer,start,buffer.position()-start-1);\n                            _field0=method==null?BufferUtil.toString(buffer,start,buffer.position()-start-1,StringUtil.__ISO_8859_1_CHARSET):method.toString();\n                            _state=STATE_SPACE1;\n                        }\n                        else if (ch < HttpTokens.SPACE && ch>=0)\n                        {\n                            throw new HttpException(HttpStatus.BAD_REQUEST_400);\n                        }\n                        break;\n\n                    case STATE_RESPONSE_VERSION:\n                        if (ch == HttpTokens.SPACE)\n                        {\n                            int l=buffer.position()-start;\n                            HttpVersions v=HttpVersions.CACHE.get(buffer,start,l);\n                            _field0=v==null?BufferUtil.toString(buffer,start,l,StringUtil.__ISO_8859_1_CHARSET):v.toString();\n                            start=-1;\n                            _persistent=HttpVersions.HTTP_1_1==v;\n                            _state=STATE_SPACE1;\n                        }\n                        else if (ch < HttpTokens.SPACE && ch>=0)\n                        {\n                            throw new HttpException(HttpStatus.BAD_REQUEST_400);\n                        }\n                        break;\n\n                    case STATE_SPACE1:\n                        if (ch > HttpTokens.SPACE || ch<0)\n                        {\n                            if (_responseHandler!=null)\n                            {\n                                _state=STATE_STATUS;\n                                _responseStatus=ch-'0';\n                            }\n                            else\n                            {\n                                _state=STATE_URI;\n                                start=buffer.position()-1;\n                            }\n                        }\n                        else if (ch < HttpTokens.SPACE)\n                        {\n                            throw new HttpException(HttpStatus.BAD_REQUEST_400);\n                        }\n                        break;\n\n                    case STATE_STATUS:\n                        if (ch == HttpTokens.SPACE)\n                        {\n                            _state=STATE_SPACE2;\n                        }\n                        else if (ch>='0' && ch<='9')\n                        {\n                            _responseStatus=_responseStatus*10+(ch-'0');\n                        }\n                        else if (ch < HttpTokens.SPACE && ch>=0)\n                        {\n                            _responseHandler.startResponse(_field0, _responseStatus, null);\n                            \n                            _eol=ch;\n                            _state=STATE_HEADER;\n                            _field0=_field1=null;\n                        }\n                        else\n                        {\n                            throw new IllegalStateException();\n                        }\n                        break;\n\n                    case STATE_URI:\n                        if (ch == HttpTokens.SPACE)\n                        {\n                            _field1=BufferUtil.toString(buffer,start,buffer.position()-start-1,StringUtil.__ISO_8859_1_CHARSET);\n                            start=-1;\n                            _state=STATE_SPACE2;\n                        }\n                        else if (ch < HttpTokens.SPACE && ch>=0)\n                        {\n                            // HTTP/0.9\n                            _field1=BufferUtil.toString(buffer,start,buffer.position()-start-1,StringUtil.__ISO_8859_1_CHARSET);\n                            start=-1;\n                            _requestHandler.startRequest(_field0,_field1,null);\n                            _persistent=false;\n                            _state=STATE_SEEKING_EOF;\n                            _handler.headerComplete();\n                            _handler.messageComplete(_contentPosition);\n                        }\n                        break;\n\n                    case STATE_SPACE2:\n                        if (ch > HttpTokens.SPACE || ch<0)\n                        {\n                            _state=_requestHandler!=null?STATE_REQUEST_VERSION:STATE_REASON;\n                            start=buffer.position()-1;\n                        }\n                        else if (ch < HttpTokens.SPACE)\n                        {\n                            if (_responseHandler!=null)\n                            {\n                                _responseHandler.startResponse(_field0, _responseStatus, null);\n                                _eol=ch;\n                                _state=STATE_HEADER;\n                                _field0=_field1=null;\n                            }\n                            else\n                            {\n                                // HTTP/0.9\n                                _requestHandler.startRequest(_field0, _field1, null);\n                                _persistent=false;\n                                _state=STATE_SEEKING_EOF;\n                                _handler.headerComplete();\n                                _handler.messageComplete(_contentPosition);\n                            }\n                        }\n                        break;\n\n                    case STATE_REQUEST_VERSION:\n                        if (ch == HttpTokens.CARRIAGE_RETURN || ch == HttpTokens.LINE_FEED)\n                        {\n                            HttpVersions v=HttpVersions.CACHE.get(buffer,start,buffer.position()-start-1);\n                            String version=v==null?BufferUtil.toString(buffer,start,buffer.position()-start-1,StringUtil.__ISO_8859_1_CHARSET):v.toString();\n                            start=-1;\n                            \n                            _requestHandler.startRequest(_field0, _field1, version);\n                            _eol=ch;\n                            _persistent=HttpVersions.HTTP_1_1==v;\n                            _state=STATE_HEADER;\n                            _field0=_field1=null;\n                            continue;\n                        }\n                        break;\n\n                    case STATE_REASON:\n                        if (ch == HttpTokens.CARRIAGE_RETURN || ch == HttpTokens.LINE_FEED)\n                        {\n                            String reason=BufferUtil.toString(buffer,start,buffer.position()-start,StringUtil.__ISO_8859_1_CHARSET);\n                            start=-1;\n                           \n                            _responseHandler.startResponse(_field0, _responseStatus, reason);\n                            _eol=ch;\n                            _state=STATE_HEADER;\n                            _field0=_field1=null;\n                            continue;\n                        }\n                        break;\n\n                    case STATE_HEADER:\n                        switch(ch)\n                        {\n                            case HttpTokens.COLON:\n                            case HttpTokens.SPACE:\n                            case HttpTokens.TAB:\n                            {\n                                // header value without name - continuation?\n                                length=-1;\n                                _state=STATE_HEADER_VALUE;\n                                break;\n                            }\n\n                            default:\n                            {\n                                // handler last header if any\n                                if (_field0!=null || _field1!=null)\n                                {\n                                    // Handle known headers\n                                    if (_header!=null)\n                                    {\n                                        switch (_header)\n                                        {\n                                            case CONTENT_LENGTH:\n                                                if (_contentLength != HttpTokens.CHUNKED_CONTENT && _responseStatus!=304 && _responseStatus!=204 && (_responseStatus<100 || _responseStatus>=200))\n                                                {\n                                                    try\n                                                    {\n                                                        _contentLength=Long.parseLong(_field1);\n                                                    }\n                                                    catch(NumberFormatException e)\n                                                    {\n                                                        LOG.ignore(e);\n                                                        throw new HttpException(HttpStatus.BAD_REQUEST_400);\n                                                    }\n                                                    if (_contentLength <= 0)\n                                                        _contentLength=HttpTokens.NO_CONTENT;\n                                                }\n                                                break;\n\n                                            case TRANSFER_ENCODING:\n                                                if (_value==HttpHeaderValues.CHUNKED)\n                                                    _contentLength=HttpTokens.CHUNKED_CONTENT;\n                                                else\n                                                {\n                                                    if (_field1.endsWith(HttpHeaderValues.CHUNKED.toString()))\n                                                        _contentLength=HttpTokens.CHUNKED_CONTENT;\n                                                    else if (_field1.indexOf(HttpHeaderValues.CHUNKED.toString()) >= 0)\n                                                        throw new HttpException(400,null);\n                                                }\n                                                break;\n\n                                            case CONNECTION:\n                                                switch(_value)\n                                                {\n                                                    case CLOSE:\n                                                        _persistent=false;\n                                                        break;\n\n                                                    case KEEP_ALIVE:\n                                                        _persistent=true;\n                                                        break;\n\n                                                    default: // No match, may be multi valued\n                                                    {\n                                                        for (String v : _field1.toString().split(\",\"))\n                                                        {\n                                                            switch(HttpHeaderValues.CACHE.get(v.trim()))\n                                                            {\n                                                                case CLOSE:\n                                                                    _persistent=false;\n                                                                    break;\n\n                                                                case KEEP_ALIVE:\n                                                                    _persistent=true;\n                                                                    break;\n                                                            }\n                                                        }\n                                                        break;\n                                                    }\n                                                }\n                                        }\n                                    }\n\n                                    _handler.parsedHeader(_field0, _field0);\n                                }\n                                _field0=_field1=null;\n                                _header=null;\n                                _value=null;\n\n\n                                // now handle ch\n                                if (ch == HttpTokens.CARRIAGE_RETURN || ch == HttpTokens.LINE_FEED)\n                                {\n                                    _eol=ch;\n                                    _contentPosition=0;\n                                    \n                                    // End of headers!\n                                    // work out the _content demarcation\n                                    if (_contentLength == HttpTokens.UNKNOWN_CONTENT)\n                                    {\n                                        if (_responseStatus == 0  // request\n                                                || _responseStatus == 304 // not-modified response\n                                                || _responseStatus == 204 // no-content response\n                                                || _responseStatus < 200) // 1xx response\n                                            _contentLength=HttpTokens.NO_CONTENT;\n                                        else\n                                            _contentLength=HttpTokens.EOF_CONTENT;\n                                    }\n\n                                    // We convert _contentLength to an int for this switch statement because\n                                    // we don't care about the amount of data available just whether there is some.\n                                    switch (_contentLength > Integer.MAX_VALUE ? Integer.MAX_VALUE : (int) _contentLength)\n                                    {\n                                        case HttpTokens.EOF_CONTENT:\n                                            _state=STATE_EOF_CONTENT;\n                                            _handler.headerComplete(); // May recurse here !\n                                            break;\n\n                                        case HttpTokens.CHUNKED_CONTENT:\n                                            _state=STATE_CHUNKED_CONTENT;\n                                            _handler.headerComplete(); // May recurse here !\n                                            break;\n\n                                        case HttpTokens.NO_CONTENT:\n                                            _handler.headerComplete();\n                                            _state=_persistent||(_responseStatus>=100&&_responseStatus<200)?STATE_END:STATE_SEEKING_EOF;\n                                            _handler.messageComplete(_contentPosition);\n                                            break;\n\n                                        default:\n                                            _state=STATE_CONTENT;\n                                            _handler.headerComplete(); // May recurse here !\n                                            break;\n                                    }\n                                }\n                                else\n                                {\n                                    // New header\n                                    start=buffer.position()-1;\n                                    length=1;\n                                    _state=STATE_HEADER_NAME;\n                                }\n                            }\n                        }\n\n                        break;\n\n                    case STATE_HEADER_NAME:\n                        switch(ch)\n                        {\n                            case HttpTokens.CARRIAGE_RETURN:\n                            case HttpTokens.LINE_FEED:\n                                _eol=ch;\n                                _header=HttpHeaders.CACHE.get(buffer,start,length);\n                                _field0=_header==null?BufferUtil.toString(buffer,start,length,StringUtil.__ISO_8859_1_CHARSET):_header.toString();\n                                start=length=-1;\n                                _state=STATE_HEADER;\n                                break;\n                                \n                            case HttpTokens.COLON:\n                                _header=HttpHeaders.CACHE.get(buffer,start,length);\n                                _field0=_header==null?BufferUtil.toString(buffer,start,length,StringUtil.__ISO_8859_1_CHARSET):_header.toString();\n                                start=length=-1;\n                                _state=STATE_HEADER_VALUE;\n                                break;\n                            case HttpTokens.SPACE:\n                            case HttpTokens.TAB:\n                                break;\n                            default:\n                            {\n                                length=buffer.position()-start;\n                                _state=STATE_HEADER_IN_NAME;\n                            }\n                        }\n\n                        break;\n\n                    case STATE_HEADER_IN_NAME:\n                        switch(ch)\n                        {\n                            case HttpTokens.CARRIAGE_RETURN:\n                            case HttpTokens.LINE_FEED:\n                                _eol=ch;\n                                _header=HttpHeaders.CACHE.get(buffer,start,length);\n                                _field0=_header==null?BufferUtil.toString(buffer,start,length,StringUtil.__ISO_8859_1_CHARSET):_header.toString();\n                                start=length=-1;\n                                _state=STATE_HEADER;\n                                break;\n                                \n                            case HttpTokens.COLON:\n                                _header=HttpHeaders.CACHE.get(buffer,start,length);\n                                _field0=_header==null?BufferUtil.toString(buffer,start,length,StringUtil.__ISO_8859_1_CHARSET):_header.toString();\n                                start=length=-1;\n                                _state=STATE_HEADER_VALUE;\n                                break;\n                            case HttpTokens.SPACE:\n                            case HttpTokens.TAB:\n                                _state=STATE_HEADER_NAME;\n                                break;\n                            default:\n                                length++;\n                        }\n                        break;\n\n                    case STATE_HEADER_VALUE:\n                        switch(ch)\n                        {\n                            case HttpTokens.CARRIAGE_RETURN:\n                            case HttpTokens.LINE_FEED:\n                                _eol=ch;\n                                if (length > 0)\n                                {\n                                    if (_field1!=null)\n                                    {\n                                        // multi line value!\n                                        _value=null;\n                                        _field1+=\" \"+BufferUtil.toString(buffer,start,length,StringUtil.__ISO_8859_1_CHARSET);\n                                    }\n                                    else if (HttpHeaderValues.hasKnownValues(_header))\n                                    {\n                                        _value=HttpHeaderValues.CACHE.get(buffer,start,length);\n                                        _field1=_value.toString();\n                                    }\n                                    else\n                                    {\n                                        _field1=BufferUtil.toString(buffer,start,length,StringUtil.__ISO_8859_1_CHARSET);\n                                    }\n                                    start=length=-1;\n                                }\n                                _state=STATE_HEADER;\n                                break;\n                            case HttpTokens.SPACE:\n                            case HttpTokens.TAB:\n                                break;\n                            default:\n                            {\n                                if (start==-1)\n                                    start=buffer.position()-1;\n                                length=buffer.position()-start;\n                                _state=STATE_HEADER_IN_VALUE;\n                            }\n                        }\n                        break;\n\n                    case STATE_HEADER_IN_VALUE:\n                        switch(ch)\n                        {\n                            case HttpTokens.CARRIAGE_RETURN:\n                            case HttpTokens.LINE_FEED:\n                                _eol=ch;\n                                if (length > 0)\n                                {\n                                    if (_field1!=null)\n                                    {\n                                        // multi line value!\n                                        _value=null;\n                                        _field1+=\" \"+BufferUtil.toString(buffer,start,length,StringUtil.__ISO_8859_1_CHARSET);\n                                    }\n                                    else if (HttpHeaderValues.hasKnownValues(_header))\n                                    {\n                                        _value=HttpHeaderValues.CACHE.get(buffer,start,length);\n                                        _field1=_value.toString();\n                                    }\n                                    else\n                                    {\n                                        _field1=BufferUtil.toString(buffer,start,length,StringUtil.__ISO_8859_1_CHARSET);\n                                    }\n                                    start=length=-1;\n                                }\n                                _state=STATE_HEADER;\n                                break;\n                            case HttpTokens.SPACE:\n                            case HttpTokens.TAB:\n                                _state=STATE_HEADER_VALUE;\n                                break;\n                            default:\n                                length++;\n                        }\n                        break;\n                }\n            } // end of HEADER states loop\n\n            // ==========================\n\n            // Handle HEAD response\n            if (_responseStatus>0 && _headResponse)\n            {\n                _state=_persistent||(_responseStatus>=100&&_responseStatus<200)?STATE_END:STATE_SEEKING_EOF;\n                _handler.messageComplete(_contentLength);\n            }\n\n\n            // ==========================\n\n            // Handle _content\n            last=_state;\n            ByteBuffer chunk;\n            while (_state > STATE_END && buffer.hasRemaining())\n            {\n                if (last!=_state)\n                {\n                    progress++;\n                    last=_state;\n                }\n\n                if (_eol == HttpTokens.CARRIAGE_RETURN && buffer.get(buffer.position()) == HttpTokens.LINE_FEED)\n                {\n                    _eol=buffer.get();\n                    continue;\n                }\n                _eol=0;\n                \n                switch (_state)\n                {\n                    case STATE_EOF_CONTENT:\n                        chunk=buffer.asReadOnlyBuffer();\n                        _contentPosition += chunk.remaining();\n                        buffer.position(buffer.position()+chunk.remaining());\n                        _handler.content(chunk); // May recurse here\n                        break;\n\n                    case STATE_CONTENT:\n                    {\n                        long remaining=_contentLength - _contentPosition;\n                        if (remaining == 0)\n                        {\n                            _state=_persistent?STATE_END:STATE_SEEKING_EOF;\n                            _handler.messageComplete(_contentPosition);\n                        }\n                        else\n                        {\n                            chunk=buffer.asReadOnlyBuffer();\n\n                            // limit content by expected size\n                            if (chunk.remaining() > remaining)\n                            {\n                                // We can cast remaining to an int as we know that it is smaller than\n                                // or equal to length which is already an int.\n                                chunk.limit(chunk.position()+(int)remaining);\n                            }\n\n                            _contentPosition += chunk.remaining();\n                            buffer.position(buffer.position()+chunk.remaining());\n                            _handler.content(chunk); // May recurse here\n\n                            if(_contentPosition == _contentLength)\n                            {\n                                _state=_persistent?STATE_END:STATE_SEEKING_EOF;\n                                _handler.messageComplete(_contentPosition);\n                            }\n                        }\n                        break;\n                    }\n\n                    case STATE_CHUNKED_CONTENT:\n                    {\n                        ch=buffer.get(buffer.position());\n                        if (ch == HttpTokens.CARRIAGE_RETURN || ch == HttpTokens.LINE_FEED)\n                            _eol=buffer.get();\n                        else if (ch <= HttpTokens.SPACE)\n                            buffer.get();\n                        else\n                        {\n                            _chunkLength=0;\n                            _chunkPosition=0;\n                            _state=STATE_CHUNK_SIZE;\n                        }\n                        break;\n                    }\n\n                    case STATE_CHUNK_SIZE:\n                    {\n                        ch=buffer.get();\n                        if (ch == HttpTokens.CARRIAGE_RETURN || ch == HttpTokens.LINE_FEED)\n                        {\n                            _eol=ch;\n\n                            if (_chunkLength == 0)\n                            {\n                                if (_eol==HttpTokens.CARRIAGE_RETURN && buffer.hasRemaining() && buffer.get(buffer.position())==HttpTokens.LINE_FEED)\n                                    _eol=buffer.get();\n                                _state=_persistent?STATE_END:STATE_SEEKING_EOF;\n                                _handler.messageComplete(_contentPosition);\n                            }\n                            else\n                                _state=STATE_CHUNK;\n                        }\n                        else if (ch <= HttpTokens.SPACE || ch == HttpTokens.SEMI_COLON)\n                            _state=STATE_CHUNK_PARAMS;\n                        else if (ch >= '0' && ch <= '9')\n                            _chunkLength=_chunkLength * 16 + (ch - '0');\n                        else if (ch >= 'a' && ch <= 'f')\n                            _chunkLength=_chunkLength * 16 + (10 + ch - 'a');\n                        else if (ch >= 'A' && ch <= 'F')\n                            _chunkLength=_chunkLength * 16 + (10 + ch - 'A');\n                        else\n                            throw new IOException(\"bad chunk char: \" + ch);\n                        break;\n                    }\n\n                    case STATE_CHUNK_PARAMS:\n                    {\n                        ch=buffer.get();\n                        if (ch == HttpTokens.CARRIAGE_RETURN || ch == HttpTokens.LINE_FEED)\n                        {\n                            _eol=ch;\n                            if (_chunkLength == 0)\n                            {\n                                if (_eol==HttpTokens.CARRIAGE_RETURN && buffer.hasRemaining() && buffer.get(buffer.position())==HttpTokens.LINE_FEED)\n                                    _eol=buffer.get();\n                                _state=_persistent?STATE_END:STATE_SEEKING_EOF;\n                                _handler.messageComplete(_contentPosition);\n                            }\n                            else\n                                _state=STATE_CHUNK;\n                        }\n                        break;\n                    }\n\n                    case STATE_CHUNK:\n                    {\n                        int remaining=_chunkLength - _chunkPosition;\n                        if (remaining == 0)\n                        {\n                            _state=STATE_CHUNKED_CONTENT;\n                        }\n                        else \n                        {\n                            chunk=buffer.asReadOnlyBuffer();\n\n                            if (chunk.remaining() > remaining)\n                                chunk.limit(chunk.position()+remaining);\n                            remaining=chunk.remaining();\n                            \n                            _contentPosition += remaining;\n                            _chunkPosition += remaining;\n                            buffer.position(buffer.position()+remaining);\n                            _handler.content(chunk); // May recurse here\n                            \n                            _handler.content(chunk); \n                        }\n                    }\n\n                    case STATE_SEEKING_EOF:\n                    {         \n                        buffer.clear().limit(0);\n                        break;\n                    }\n                }\n\n            }\n\n            return progress>0;\n        }\n        catch(HttpException e)\n        {\n            _persistent=false;\n            _state=STATE_SEEKING_EOF;\n            throw e;\n        }\n    }","id":15278,"modified_method":"/**\n     * Parse until next Event.\n     * @return an indication of progress \n     */\n    public boolean parseNext(ByteBuffer buffer) throws IOException\n    {\n        try\n        {\n            int progress=0;\n\n            if (_state == STATE_END)\n                return false;\n\n            if (_state == STATE_CONTENT && _contentPosition == _contentLength)\n            {\n                _state=STATE_END;\n                _handler.messageComplete(_contentPosition);\n                return true;\n            }\n\n\n            // Handle header states\n            byte ch;\n            int last=_state;\n            int start=-1;\n            int length=-1;\n            \n            while (_state<STATE_END && buffer.hasRemaining())\n            {\n                if (last!=_state)\n                {\n                    progress++;\n                    last=_state;\n                }\n\n                ch=buffer.get();\n\n                if (_eol == HttpTokens.CARRIAGE_RETURN && ch == HttpTokens.LINE_FEED)\n                {\n                    _eol=HttpTokens.LINE_FEED;\n                    continue;\n                }\n                _eol=0;\n\n                switch (_state)\n                {\n                    case STATE_START:\n                        _contentLength=HttpTokens.UNKNOWN_CONTENT;\n                        _header=null;\n                        if (ch > HttpTokens.SPACE || ch<0)\n                        {\n                            start=buffer.position()-1;\n                            _state=_requestHandler!=null?STATE_METHOD:STATE_RESPONSE_VERSION;\n                        }\n                        break;\n\n                    case STATE_METHOD:\n                        if (ch == HttpTokens.SPACE)\n                        {\n                            HttpMethods method=HttpMethods.CACHE.get(buffer,start,buffer.position()-start-1);\n                            _field0=method==null?BufferUtil.toString(buffer,start,buffer.position()-start-1,StringUtil.__ISO_8859_1_CHARSET):method.toString();\n                            _state=STATE_SPACE1;\n                        }\n                        else if (ch < HttpTokens.SPACE && ch>=0)\n                        {\n                            throw new HttpException(HttpStatus.BAD_REQUEST_400);\n                        }\n                        break;\n\n                    case STATE_RESPONSE_VERSION:\n                        if (ch == HttpTokens.SPACE)\n                        {\n                            int l=buffer.position()-start;\n                            HttpVersions v=HttpVersions.CACHE.get(buffer,start,l);\n                            _field0=v==null?BufferUtil.toString(buffer,start,l,StringUtil.__ISO_8859_1_CHARSET):v.toString();\n                            start=-1;\n                            _persistent=HttpVersions.HTTP_1_1==v;\n                            _state=STATE_SPACE1;\n                        }\n                        else if (ch < HttpTokens.SPACE && ch>=0)\n                        {\n                            throw new HttpException(HttpStatus.BAD_REQUEST_400);\n                        }\n                        break;\n\n                    case STATE_SPACE1:\n                        if (ch > HttpTokens.SPACE || ch<0)\n                        {\n                            if (_responseHandler!=null)\n                            {\n                                _state=STATE_STATUS;\n                                _responseStatus=ch-'0';\n                            }\n                            else\n                            {\n                                _state=STATE_URI;\n                                start=buffer.position()-1;\n                            }\n                        }\n                        else if (ch < HttpTokens.SPACE)\n                        {\n                            throw new HttpException(HttpStatus.BAD_REQUEST_400);\n                        }\n                        break;\n\n                    case STATE_STATUS:\n                        if (ch == HttpTokens.SPACE)\n                        {\n                            _state=STATE_SPACE2;\n                        }\n                        else if (ch>='0' && ch<='9')\n                        {\n                            _responseStatus=_responseStatus*10+(ch-'0');\n                        }\n                        else if (ch < HttpTokens.SPACE && ch>=0)\n                        {\n                            _responseHandler.startResponse(_field0, _responseStatus, null);\n                            \n                            _eol=ch;\n                            _state=STATE_HEADER;\n                            _field0=_field1=null;\n                        }\n                        else\n                        {\n                            throw new IllegalStateException();\n                        }\n                        break;\n\n                    case STATE_URI:\n                        if (ch == HttpTokens.SPACE)\n                        {\n                            _field1=BufferUtil.toString(buffer,start,buffer.position()-start-1,StringUtil.__UTF8_CHARSET);\n                            start=-1;\n                            _state=STATE_SPACE2;\n                        }\n                        else if (ch < HttpTokens.SPACE && ch>=0)\n                        {\n                            // HTTP/0.9\n                            _field1=BufferUtil.toString(buffer,start,buffer.position()-start-1,StringUtil.__UTF8_CHARSET);\n                            start=-1;\n                            _requestHandler.startRequest(_field0,_field1,null);\n                            _persistent=false;\n                            _state=STATE_SEEKING_EOF;\n                            _handler.headerComplete();\n                            _handler.messageComplete(_contentPosition);\n                        }\n                        break;\n\n                    case STATE_SPACE2:\n                        if (ch > HttpTokens.SPACE || ch<0)\n                        {\n                            _state=_requestHandler!=null?STATE_REQUEST_VERSION:STATE_REASON;\n                            start=buffer.position()-1;\n                        }\n                        else if (ch < HttpTokens.SPACE)\n                        {\n                            if (_responseHandler!=null)\n                            {\n                                _responseHandler.startResponse(_field0, _responseStatus, null);\n                                _eol=ch;\n                                _state=STATE_HEADER;\n                                _field0=_field1=null;\n                            }\n                            else\n                            {\n                                // HTTP/0.9\n                                _requestHandler.startRequest(_field0, _field1, null);\n                                _persistent=false;\n                                _state=STATE_SEEKING_EOF;\n                                _handler.headerComplete();\n                                _handler.messageComplete(_contentPosition);\n                            }\n                        }\n                        break;\n\n                    case STATE_REQUEST_VERSION:\n                        if (ch == HttpTokens.CARRIAGE_RETURN || ch == HttpTokens.LINE_FEED)\n                        {\n                            HttpVersions v=HttpVersions.CACHE.get(buffer,start,buffer.position()-start-1);\n                            String version=v==null?BufferUtil.toString(buffer,start,buffer.position()-start-1,StringUtil.__ISO_8859_1_CHARSET):v.toString();\n                            start=-1;\n                            \n                            _requestHandler.startRequest(_field0, _field1, version);\n                            _eol=ch;\n                            _persistent=HttpVersions.HTTP_1_1==v;\n                            _state=STATE_HEADER;\n                            _field0=_field1=null;\n                            continue;\n                        }\n                        break;\n\n                    case STATE_REASON:\n                        if (ch == HttpTokens.CARRIAGE_RETURN || ch == HttpTokens.LINE_FEED)\n                        {\n                            String reason=BufferUtil.toString(buffer,start,buffer.position()-start,StringUtil.__ISO_8859_1_CHARSET);\n                            start=-1;\n                           \n                            _responseHandler.startResponse(_field0, _responseStatus, reason);\n                            _eol=ch;\n                            _state=STATE_HEADER;\n                            _field0=_field1=null;\n                            continue;\n                        }\n                        break;\n\n                    case STATE_HEADER:\n                        switch(ch)\n                        {\n                            case HttpTokens.COLON:\n                            case HttpTokens.SPACE:\n                            case HttpTokens.TAB:\n                            {\n                                // header value without name - continuation?\n                                length=-1;\n                                _state=STATE_HEADER_VALUE;\n                                break;\n                            }\n\n                            default:\n                            {\n                                // handler last header if any\n                                if (_field0!=null || _field1!=null)\n                                {\n                                    // Handle known headers\n                                    if (_header!=null)\n                                    {\n                                        switch (_header)\n                                        {\n                                            case CONTENT_LENGTH:\n                                                if (_contentLength != HttpTokens.CHUNKED_CONTENT && _responseStatus!=304 && _responseStatus!=204 && (_responseStatus<100 || _responseStatus>=200))\n                                                {\n                                                    try\n                                                    {\n                                                        _contentLength=Long.parseLong(_field1);\n                                                    }\n                                                    catch(NumberFormatException e)\n                                                    {\n                                                        LOG.ignore(e);\n                                                        throw new HttpException(HttpStatus.BAD_REQUEST_400);\n                                                    }\n                                                    if (_contentLength <= 0)\n                                                        _contentLength=HttpTokens.NO_CONTENT;\n                                                }\n                                                break;\n\n                                            case TRANSFER_ENCODING:\n                                                if (_value==HttpHeaderValues.CHUNKED)\n                                                    _contentLength=HttpTokens.CHUNKED_CONTENT;\n                                                else\n                                                {\n                                                    if (_field1.endsWith(HttpHeaderValues.CHUNKED.toString()))\n                                                        _contentLength=HttpTokens.CHUNKED_CONTENT;\n                                                    else if (_field1.indexOf(HttpHeaderValues.CHUNKED.toString()) >= 0)\n                                                        throw new HttpException(400,null);\n                                                }\n                                                break;\n\n                                            case CONNECTION:\n                                                switch(_value)\n                                                {\n                                                    case CLOSE:\n                                                        _persistent=false;\n                                                        break;\n\n                                                    case KEEP_ALIVE:\n                                                        _persistent=true;\n                                                        break;\n\n                                                    default: // No match, may be multi valued\n                                                    {\n                                                        for (String v : _field1.toString().split(\",\"))\n                                                        {\n                                                            switch(HttpHeaderValues.CACHE.get(v.trim()))\n                                                            {\n                                                                case CLOSE:\n                                                                    _persistent=false;\n                                                                    break;\n\n                                                                case KEEP_ALIVE:\n                                                                    _persistent=true;\n                                                                    break;\n                                                            }\n                                                        }\n                                                        break;\n                                                    }\n                                                }\n                                        }\n                                    }\n\n                                    _handler.parsedHeader(_field0, _field1);\n                                }\n                                _field0=_field1=null;\n                                _header=null;\n                                _value=null;\n\n\n                                // now handle ch\n                                if (ch == HttpTokens.CARRIAGE_RETURN || ch == HttpTokens.LINE_FEED)\n                                {\n                                    _eol=ch;\n                                    _contentPosition=0;\n                                    \n                                    // End of headers!\n                                    // work out the _content demarcation\n                                    if (_contentLength == HttpTokens.UNKNOWN_CONTENT)\n                                    {\n                                        if (_responseStatus == 0  // request\n                                                || _responseStatus == 304 // not-modified response\n                                                || _responseStatus == 204 // no-content response\n                                                || _responseStatus < 200) // 1xx response\n                                            _contentLength=HttpTokens.NO_CONTENT;\n                                        else\n                                            _contentLength=HttpTokens.EOF_CONTENT;\n                                    }\n\n                                    // We convert _contentLength to an int for this switch statement because\n                                    // we don't care about the amount of data available just whether there is some.\n                                    switch (_contentLength > Integer.MAX_VALUE ? Integer.MAX_VALUE : (int) _contentLength)\n                                    {\n                                        case HttpTokens.EOF_CONTENT:\n                                            _state=STATE_EOF_CONTENT;\n                                            _handler.headerComplete(); // May recurse here !\n                                            break;\n\n                                        case HttpTokens.CHUNKED_CONTENT:\n                                            _state=STATE_CHUNKED_CONTENT;\n                                            _handler.headerComplete(); // May recurse here !\n                                            break;\n\n                                        case HttpTokens.NO_CONTENT:\n                                            _handler.headerComplete();\n                                            _state=_persistent||(_responseStatus>=100&&_responseStatus<200)?STATE_END:STATE_SEEKING_EOF;\n                                            _handler.messageComplete(_contentPosition);\n                                            break;\n\n                                        default:\n                                            _state=STATE_CONTENT;\n                                            _handler.headerComplete(); // May recurse here !\n                                            break;\n                                    }\n                                }\n                                else\n                                {\n                                    // New header\n                                    start=buffer.position()-1;\n                                    length=1;\n                                    _state=STATE_HEADER_NAME;\n                                }\n                            }\n                        }\n\n                        break;\n\n                    case STATE_HEADER_NAME:\n                        switch(ch)\n                        {\n                            case HttpTokens.CARRIAGE_RETURN:\n                            case HttpTokens.LINE_FEED:\n                                _eol=ch;\n                                _header=HttpHeaders.CACHE.get(buffer,start,length);\n                                _field0=_header==null?BufferUtil.toString(buffer,start,length,StringUtil.__ISO_8859_1_CHARSET):_header.toString();\n                                start=length=-1;\n                                _state=STATE_HEADER;\n                                break;\n                                \n                            case HttpTokens.COLON:\n                                _header=HttpHeaders.CACHE.get(buffer,start,length);\n                                _field0=_header==null?BufferUtil.toString(buffer,start,length,StringUtil.__ISO_8859_1_CHARSET):_header.toString();\n                                start=length=-1;\n                                _state=STATE_HEADER_VALUE;\n                                break;\n                            case HttpTokens.SPACE:\n                            case HttpTokens.TAB:\n                                break;\n                            default:\n                            {\n                                length=buffer.position()-start;\n                                _state=STATE_HEADER_IN_NAME;\n                            }\n                        }\n\n                        break;\n\n                    case STATE_HEADER_IN_NAME:\n                        switch(ch)\n                        {\n                            case HttpTokens.CARRIAGE_RETURN:\n                            case HttpTokens.LINE_FEED:\n                                _eol=ch;\n                                _header=HttpHeaders.CACHE.get(buffer,start,length);\n                                _field0=_header==null?BufferUtil.toString(buffer,start,length,StringUtil.__ISO_8859_1_CHARSET):_header.toString();\n                                start=length=-1;\n                                _state=STATE_HEADER;\n                                break;\n                                \n                            case HttpTokens.COLON:\n                                _header=HttpHeaders.CACHE.get(buffer,start,length);\n                                _field0=_header==null?BufferUtil.toString(buffer,start,length,StringUtil.__ISO_8859_1_CHARSET):_header.toString();\n                                start=length=-1;\n                                _state=STATE_HEADER_VALUE;\n                                break;\n                            case HttpTokens.SPACE:\n                            case HttpTokens.TAB:\n                                _state=STATE_HEADER_NAME;\n                                break;\n                            default:\n                                length++;\n                        }\n                        break;\n\n                    case STATE_HEADER_VALUE:\n                        switch(ch)\n                        {\n                            case HttpTokens.CARRIAGE_RETURN:\n                            case HttpTokens.LINE_FEED:\n                                _eol=ch;\n                                if (length > 0)\n                                {\n                                    if (_field1!=null)\n                                    {\n                                        // multi line value!\n                                        _value=null;\n                                        _field1+=\" \"+BufferUtil.toString(buffer,start,length,StringUtil.__ISO_8859_1_CHARSET);\n                                    }\n                                    else if (HttpHeaderValues.hasKnownValues(_header))\n                                    {\n                                        _value=HttpHeaderValues.CACHE.get(buffer,start,length);\n                                        _field1=_value.toString();\n                                    }\n                                    else\n                                    {\n                                        _field1=BufferUtil.toString(buffer,start,length,StringUtil.__ISO_8859_1_CHARSET);\n                                    }\n                                    start=length=-1;\n                                }\n                                _state=STATE_HEADER;\n                                break;\n                            case HttpTokens.SPACE:\n                            case HttpTokens.TAB:\n                                break;\n                            default:\n                            {\n                                if (start==-1)\n                                    start=buffer.position()-1;\n                                length=buffer.position()-start;\n                                _state=STATE_HEADER_IN_VALUE;\n                            }\n                        }\n                        break;\n\n                    case STATE_HEADER_IN_VALUE:\n                        switch(ch)\n                        {\n                            case HttpTokens.CARRIAGE_RETURN:\n                            case HttpTokens.LINE_FEED:\n                                _eol=ch;\n                                if (length > 0)\n                                {\n                                    if (_field1!=null)\n                                    {\n                                        // multi line value!\n                                        _value=null;\n                                        _field1+=\" \"+BufferUtil.toString(buffer,start,length,StringUtil.__ISO_8859_1_CHARSET);\n                                    }\n                                    else if (HttpHeaderValues.hasKnownValues(_header))\n                                    {\n                                        _value=HttpHeaderValues.CACHE.get(buffer,start,length);\n                                        _field1=_value.toString();\n                                    }\n                                    else\n                                    {\n                                        _field1=BufferUtil.toString(buffer,start,length,StringUtil.__ISO_8859_1_CHARSET);\n                                    }\n                                    start=length=-1;\n                                }\n                                _state=STATE_HEADER;\n                                break;\n                            case HttpTokens.SPACE:\n                            case HttpTokens.TAB:\n                                _state=STATE_HEADER_VALUE;\n                                break;\n                            default:\n                                length++;\n                        }\n                        break;\n                }\n            } // end of HEADER states loop\n\n            // ==========================\n\n            // Handle HEAD response\n            if (_responseStatus>0 && _headResponse)\n            {\n                _state=_persistent||(_responseStatus>=100&&_responseStatus<200)?STATE_END:STATE_SEEKING_EOF;\n                _handler.messageComplete(_contentLength);\n            }\n\n\n            // ==========================\n\n            // Handle _content\n            last=_state;\n            ByteBuffer chunk;\n            while (_state > STATE_END && buffer.hasRemaining())\n            {\n                if (last!=_state)\n                {\n                    progress++;\n                    last=_state;\n                }\n\n                if (_eol == HttpTokens.CARRIAGE_RETURN && buffer.get(buffer.position()) == HttpTokens.LINE_FEED)\n                {\n                    _eol=buffer.get();\n                    continue;\n                }\n                _eol=0;\n                \n                switch (_state)\n                {\n                    case STATE_EOF_CONTENT:\n                        chunk=buffer.asReadOnlyBuffer();\n                        _contentPosition += chunk.remaining();\n                        buffer.position(buffer.position()+chunk.remaining());\n                        _handler.content(chunk); // May recurse here\n                        break;\n\n                    case STATE_CONTENT:\n                    {\n                        long remaining=_contentLength - _contentPosition;\n                        if (remaining == 0)\n                        {\n                            _state=_persistent?STATE_END:STATE_SEEKING_EOF;\n                            _handler.messageComplete(_contentPosition);\n                        }\n                        else\n                        {\n                            chunk=buffer.asReadOnlyBuffer();\n\n                            // limit content by expected size\n                            if (chunk.remaining() > remaining)\n                            {\n                                // We can cast remaining to an int as we know that it is smaller than\n                                // or equal to length which is already an int.\n                                chunk.limit(chunk.position()+(int)remaining);\n                            }\n\n                            _contentPosition += chunk.remaining();\n                            buffer.position(buffer.position()+chunk.remaining());\n                            _handler.content(chunk); // May recurse here\n\n                            if(_contentPosition == _contentLength)\n                            {\n                                _state=_persistent?STATE_END:STATE_SEEKING_EOF;\n                                _handler.messageComplete(_contentPosition);\n                            }\n                        }\n                        break;\n                    }\n\n                    case STATE_CHUNKED_CONTENT:\n                    {\n                        ch=buffer.get(buffer.position());\n                        if (ch == HttpTokens.CARRIAGE_RETURN || ch == HttpTokens.LINE_FEED)\n                            _eol=buffer.get();\n                        else if (ch <= HttpTokens.SPACE)\n                            buffer.get();\n                        else\n                        {\n                            _chunkLength=0;\n                            _chunkPosition=0;\n                            _state=STATE_CHUNK_SIZE;\n                        }\n                        break;\n                    }\n\n                    case STATE_CHUNK_SIZE:\n                    {\n                        ch=buffer.get();\n                        if (ch == HttpTokens.CARRIAGE_RETURN || ch == HttpTokens.LINE_FEED)\n                        {\n                            _eol=ch;\n\n                            if (_chunkLength == 0)\n                            {\n                                if (_eol==HttpTokens.CARRIAGE_RETURN && buffer.hasRemaining() && buffer.get(buffer.position())==HttpTokens.LINE_FEED)\n                                    _eol=buffer.get();\n                                _state=_persistent?STATE_END:STATE_SEEKING_EOF;\n                                _handler.messageComplete(_contentPosition);\n                            }\n                            else\n                                _state=STATE_CHUNK;\n                        }\n                        else if (ch <= HttpTokens.SPACE || ch == HttpTokens.SEMI_COLON)\n                            _state=STATE_CHUNK_PARAMS;\n                        else if (ch >= '0' && ch <= '9')\n                            _chunkLength=_chunkLength * 16 + (ch - '0');\n                        else if (ch >= 'a' && ch <= 'f')\n                            _chunkLength=_chunkLength * 16 + (10 + ch - 'a');\n                        else if (ch >= 'A' && ch <= 'F')\n                            _chunkLength=_chunkLength * 16 + (10 + ch - 'A');\n                        else\n                            throw new IOException(\"bad chunk char: \" + ch);\n                        break;\n                    }\n\n                    case STATE_CHUNK_PARAMS:\n                    {\n                        ch=buffer.get();\n                        if (ch == HttpTokens.CARRIAGE_RETURN || ch == HttpTokens.LINE_FEED)\n                        {\n                            _eol=ch;\n                            if (_chunkLength == 0)\n                            {\n                                if (_eol==HttpTokens.CARRIAGE_RETURN && buffer.hasRemaining() && buffer.get(buffer.position())==HttpTokens.LINE_FEED)\n                                    _eol=buffer.get();\n                                _state=_persistent?STATE_END:STATE_SEEKING_EOF;\n                                _handler.messageComplete(_contentPosition);\n                            }\n                            else\n                                _state=STATE_CHUNK;\n                        }\n                        break;\n                    }\n\n                    case STATE_CHUNK:\n                    {\n                        int remaining=_chunkLength - _chunkPosition;\n                        if (remaining == 0)\n                        {\n                            _state=STATE_CHUNKED_CONTENT;\n                        }\n                        else \n                        {\n                            chunk=buffer.asReadOnlyBuffer();\n\n                            if (chunk.remaining() > remaining)\n                                chunk.limit(chunk.position()+remaining);\n                            remaining=chunk.remaining();\n                            \n                            _contentPosition += remaining;\n                            _chunkPosition += remaining;\n                            buffer.position(buffer.position()+remaining);\n                            _handler.content(chunk); // May recurse here\n                            \n                            _handler.content(chunk); \n                        }\n                    }\n\n                    case STATE_SEEKING_EOF:\n                    {         \n                        buffer.clear().limit(0);\n                        break;\n                    }\n                }\n\n            }\n\n            return progress>0;\n        }\n        catch(HttpException e)\n        {\n            _persistent=false;\n            _state=STATE_SEEKING_EOF;\n            throw e;\n        }\n    }","commit_id":"1137eea51d3b32650d977870b75095a3a5388ec9","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testLineParse1() throws Exception\n    {\n        StringEndPoint io=new StringEndPoint();\n        io.setInput(\"GET /999\\015\\012\");\n        ByteBuffer buffer= BufferUtil.allocate(4096);\n        SimpleBuffers buffers=new SimpleBuffers(buffer,null);\n\n        f2= null;\n        Handler handler = new Handler();\n        HttpParser parser= new HttpParser(buffers,io, handler);\n        parser.parse();\n        assertEquals(\"GET\", f0);\n        assertEquals(\"/999\", f1);\n        assertEquals(null, f2);\n        assertEquals(-1, h);\n    }","id":15279,"modified_method":"@Test\n    public void testLineParse1() throws Exception\n    {\n        ByteBuffer buffer= BufferUtil.toBuffer(\"GET /999\\015\\012\");\n\n        f2= null;\n        Handler handler = new Handler();\n        HttpParser parser= new HttpParser((HttpParser.RequestHandler)handler);\n        parser.parse(buffer);\n        assertEquals(\"GET\", f0);\n        assertEquals(\"/999\", f1);\n        assertEquals(null, f2);\n        assertEquals(-1, h);\n    }","commit_id":"1137eea51d3b32650d977870b75095a3a5388ec9","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testHeaderParse() throws Exception\n    {\n        StringEndPoint io=new StringEndPoint();\n        io.setInput(\n            \"GET / HTTP/1.0\\015\\012\"\n                + \"Host: localhost\\015\\012\"\n                + \"Header1: value1\\015\\012\"\n                + \"Header2  :   value 2a  \\015\\012\"\n                + \"                    value 2b  \\015\\012\"\n                + \"Header3: \\015\\012\"\n                + \"Header4 \\015\\012\"\n                + \"  value4\\015\\012\"\n                + \"Server5: notServer\\015\\012\"\n                + \"\\015\\012\");\n        ByteBuffer buffer= BufferUtil.allocate(4096);\n        SimpleBuffers buffers=new SimpleBuffers(buffer,null);\n\n        Handler handler = new Handler();\n        HttpParser parser= new HttpParser(buffers,io, handler);\n        parser.parse();\n        assertEquals(\"GET\", f0);\n        assertEquals(\"/\", f1);\n        assertEquals(\"HTTP/1.0\", f2);\n        assertEquals(\"Host\", hdr[0]);\n        assertEquals(\"localhost\", val[0]);\n        assertEquals(\"Header1\", hdr[1]);\n        assertEquals(\"value1\", val[1]);\n        assertEquals(\"Header2\", hdr[2]);\n        assertEquals(\"value 2a value 2b\", val[2]);\n        assertEquals(\"Header3\", hdr[3]);\n        assertEquals(\"\", val[3]);\n        assertEquals(\"Header4\", hdr[4]);\n        assertEquals(\"value4\", val[4]);\n        assertEquals(\"Server5\", hdr[5]);\n        assertEquals(\"notServer\", val[5]);\n        assertEquals(5, h);\n    }","id":15280,"modified_method":"@Test\n    public void testHeaderParse() throws Exception\n    {\n        ByteBuffer buffer= BufferUtil.toBuffer(\n            \"GET / HTTP/1.0\\015\\012\"\n                + \"Host: localhost\\015\\012\"\n                + \"Header1: value1\\015\\012\"\n                + \"Header2  :   value 2a  \\015\\012\"\n                + \"                    value 2b  \\015\\012\"\n                + \"Header3: \\015\\012\"\n                + \"Header4 \\015\\012\"\n                + \"  value4\\015\\012\"\n                + \"Server5: notServer\\015\\012\"\n                + \"\\015\\012\");\n        Handler handler = new Handler();\n        HttpParser parser= new HttpParser((HttpParser.RequestHandler)handler);\n        parser.parse(buffer);\n        \n        assertEquals(\"GET\", f0);\n        assertEquals(\"/\", f1);\n        assertEquals(\"HTTP/1.0\", f2);\n        assertEquals(\"Host\", hdr[0]);\n        assertEquals(\"localhost\", val[0]);\n        assertEquals(\"Header1\", hdr[1]);\n        assertEquals(\"value1\", val[1]);\n        assertEquals(\"Header2\", hdr[2]);\n        assertEquals(\"value 2a value 2b\", val[2]);\n        assertEquals(\"Header3\", hdr[3]);\n        assertEquals(null, val[3]);\n        assertEquals(\"Header4\", hdr[4]);\n        assertEquals(\"value4\", val[4]);\n        assertEquals(\"Server5\", hdr[5]);\n        assertEquals(\"notServer\", val[5]);\n        assertEquals(5, h);\n    }","commit_id":"1137eea51d3b32650d977870b75095a3a5388ec9","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testConnect() throws Exception\n    {\n        StringEndPoint io=new StringEndPoint();\n        io.setInput(\"CONNECT 192.168.1.2:80 HTTP/1.1\\015\\012\" + \"\\015\\012\");\n        ByteBuffer buffer= BufferUtil.allocate(4096);\n        SimpleBuffers buffers=new SimpleBuffers(buffer,null);\n\n        Handler handler = new Handler();\n        HttpParser parser= new HttpParser(buffers,io, handler);\n        parser.parse();\n        assertTrue(handler.request);\n        assertEquals(\"CONNECT\", f0);\n        assertEquals(\"192.168.1.2:80\", f1);\n        assertEquals(\"HTTP/1.1\", f2);\n        assertEquals(-1, h);\n    }","id":15281,"modified_method":"@Test\n    public void testConnect() throws Exception\n    {\n        ByteBuffer buffer= BufferUtil.toBuffer(\"CONNECT 192.168.1.2:80 HTTP/1.1\\015\\012\" + \"\\015\\012\");\n        Handler handler = new Handler();\n        HttpParser parser= new HttpParser((HttpParser.RequestHandler)handler);\n        parser.parse(buffer);\n        assertTrue(handler.request);\n        assertEquals(\"CONNECT\", f0);\n        assertEquals(\"192.168.1.2:80\", f1);\n        assertEquals(\"HTTP/1.1\", f2);\n        assertEquals(-1, h);\n    }","commit_id":"1137eea51d3b32650d977870b75095a3a5388ec9","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public void content(ByteBuffer ref)\n        {\n            if (_content==null)\n                _content=\"\";\n            _content= _content + ref;\n        }","id":15282,"modified_method":"public void content(ByteBuffer ref)\n        {\n            if (_content==null)\n                _content=\"\";\n            _content= _content + BufferUtil.toString(ref,StringUtil.__UTF8_CHARSET);\n        }","commit_id":"1137eea51d3b32650d977870b75095a3a5388ec9","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testChunkParse() throws Exception\n    {\n        StringEndPoint io=new StringEndPoint();\n        io.setInput(\n            \"GET /chunk HTTP/1.0\\015\\012\"\n                + \"Header1: value1\\015\\012\"\n                + \"Transfer-Encoding: chunked\\015\\012\"\n                + \"\\015\\012\"\n                + \"a;\\015\\012\"\n                + \"0123456789\\015\\012\"\n                + \"1a\\015\\012\"\n                + \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\\015\\012\"\n                + \"0\\015\\012\");\n        ByteBuffer buffer= BufferUtil.allocate(4096);\n        ByteBuffer content=BufferUtil.allocate(8192);\n        SimpleBuffers buffers=new SimpleBuffers(buffer,content);\n\n        Handler handler = new Handler();\n        HttpParser parser= new HttpParser(buffers,io, handler);\n        parser.parse();\n        assertEquals(\"GET\", f0);\n        assertEquals(\"/chunk\", f1);\n        assertEquals(\"HTTP/1.0\", f2);\n        assertEquals(1, h);\n        assertEquals(\"Header1\", hdr[0]);\n        assertEquals(\"value1\", val[0]);\n        assertEquals(\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\", _content);\n    }","id":15283,"modified_method":"@Test\n    public void testChunkParse() throws Exception\n    {\n        ByteBuffer buffer= BufferUtil.toBuffer(\n            \"GET /chunk HTTP/1.0\\015\\012\"\n                + \"Header1: value1\\015\\012\"\n                + \"Transfer-Encoding: chunked\\015\\012\"\n                + \"\\015\\012\"\n                + \"a;\\015\\012\"\n                + \"0123456789\\015\\012\"\n                + \"1a\\015\\012\"\n                + \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\\015\\012\"\n                + \"0\\015\\012\");\n        Handler handler = new Handler();\n        HttpParser parser= new HttpParser((HttpParser.RequestHandler)handler);\n        parser.parse(buffer);\n        \n        assertEquals(\"GET\", f0);\n        assertEquals(\"/chunk\", f1);\n        assertEquals(\"HTTP/1.0\", f2);\n        assertEquals(1, h);\n        assertEquals(\"Header1\", hdr[0]);\n        assertEquals(\"value1\", val[0]);\n        assertEquals(\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\", _content);\n    }","commit_id":"1137eea51d3b32650d977870b75095a3a5388ec9","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testLineParse3() throws Exception\n    {\n        StringEndPoint io=new StringEndPoint();\n        io.setInput(\"POST /fo\\u0690 HTTP/1.0\\015\\012\" + \"\\015\\012\");\n        ByteBuffer buffer= BufferUtil.allocate(4096);\n        SimpleBuffers buffers=new SimpleBuffers(buffer,null);\n\n        Handler handler = new Handler();\n        HttpParser parser= new HttpParser(buffers,io, handler);\n        parser.parse();\n        assertEquals(\"POST\", f0);\n        assertEquals(\"/fo\\u0690\", f1);\n        assertEquals(\"HTTP/1.0\", f2);\n        assertEquals(-1, h);\n    }","id":15284,"modified_method":"@Test\n    public void testLineParse3() throws Exception\n    {\n        ByteBuffer buffer= BufferUtil.toBuffer(\"POST /fo\\u0690 HTTP/1.0\\015\\012\" + \"\\015\\012\",StringUtil.__UTF8_CHARSET);\n\n        Handler handler = new Handler();\n        HttpParser parser= new HttpParser((HttpParser.RequestHandler)handler);\n        parser.parse(buffer);\n        assertEquals(\"POST\", f0);\n        assertEquals(\"/fo\\u0690\", f1);\n        assertEquals(\"HTTP/1.0\", f2);\n        assertEquals(-1, h);\n    }","commit_id":"1137eea51d3b32650d977870b75095a3a5388ec9","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testLineParse2() throws Exception\n    {\n        StringEndPoint io=new StringEndPoint();\n        io.setInput(\"POST /222  \\015\\012\");\n        ByteBuffer buffer= BufferUtil.allocate(4096);\n        SimpleBuffers buffers=new SimpleBuffers(buffer,null);\n\n        f2= null;\n        Handler handler = new Handler();\n        HttpParser parser= new HttpParser(buffers,io, handler);\n        parser.parse();\n        assertEquals(\"POST\", f0);\n        assertEquals(\"/222\", f1);\n        assertEquals(null, f2);\n        assertEquals(-1, h);\n    }","id":15285,"modified_method":"@Test\n    public void testLineParse2() throws Exception\n    {\n        ByteBuffer buffer= BufferUtil.toBuffer(\"POST /222  \\015\\012\");\n\n        f2= null;\n        Handler handler = new Handler();\n        HttpParser parser= new HttpParser((HttpParser.RequestHandler)handler);\n        parser.parse(buffer);\n        assertEquals(\"POST\", f0);\n        assertEquals(\"/222\", f1);\n        assertEquals(null, f2);\n        assertEquals(-1, h);\n    }","commit_id":"1137eea51d3b32650d977870b75095a3a5388ec9","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testLineParse4() throws Exception\n    {\n        StringEndPoint io=new StringEndPoint();\n        io.setInput(\"POST /foo?param=\\u0690 HTTP/1.0\\015\\012\" + \"\\015\\012\");\n        ByteBuffer buffer= BufferUtil.allocate(4096);\n        SimpleBuffers buffers=new SimpleBuffers(buffer,null);\n\n        Handler handler = new Handler();\n        HttpParser parser= new HttpParser(buffers,io, handler);\n        parser.parse();\n        assertEquals(\"POST\", f0);\n        assertEquals(\"/foo?param=\\u0690\", f1);\n        assertEquals(\"HTTP/1.0\", f2);\n        assertEquals(-1, h);\n    }","id":15286,"modified_method":"@Test\n    public void testLineParse4() throws Exception\n    {\n        ByteBuffer buffer= BufferUtil.toBuffer(\"POST /foo?param=\\u0690 HTTP/1.0\\015\\012\" + \"\\015\\012\",StringUtil.__UTF8_CHARSET);\n\n        Handler handler = new Handler();\n        HttpParser parser= new HttpParser((HttpParser.RequestHandler)handler);\n        parser.parse(buffer);\n        assertEquals(\"POST\", f0);\n        assertEquals(\"/foo?param=\\u0690\", f1);\n        assertEquals(\"HTTP/1.0\", f2);\n        assertEquals(-1, h);\n    }","commit_id":"1137eea51d3b32650d977870b75095a3a5388ec9","url":"https://github.com/eclipse/jetty.project"},{"original_method":"private static void resolveDummyTags(File treeFile,\n                                       TwoDimensionalCounter<String, String> pretermLabel,\n                                       TwoDimensionalCounter<String, String> unigramTagger,\n                                       boolean retainNER, TreeNormalizer tn) {\n    TreeFactory tf = new LabeledScoredTreeFactory();\n\n    try {\n      BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(treeFile), \"UTF-8\"));\n      TreeReaderFactory trf = new SpanishTreeReaderFactory();\n      TreeReader tr = trf.newTreeReader(br);\n\n      PrintWriter pw = new PrintWriter(new PrintStream(new FileOutputStream(new File(treeFile + \".fixed\")),false,\"UTF-8\"));\n\n      int nTrees = 0;\n      for(Tree t; (t = tr.readTree()) != null;nTrees++) {\n        traverseAndFix(t, null, pretermLabel, unigramTagger, retainNER);\n\n        if (tn != null)\n          t = tn.normalizeWholeTree(t, tf);\n\n        pw.println(t.toString());\n      }\n\n      pw.close();\n      tr.close();\n\n      System.out.println(\"Processed \" +nTrees+ \" trees\");\n\n    } catch (UnsupportedEncodingException e) {\n      e.printStackTrace();\n    } catch (FileNotFoundException e) {\n      e.printStackTrace();\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }","id":15287,"modified_method":"private static void resolveDummyTags(File treeFile,\n                                       TwoDimensionalCounter<String, String> pretermLabel,\n                                       TwoDimensionalCounter<String, String> unigramTagger,\n                                       boolean retainNER, TreeNormalizer tn) {\n    TreeFactory tf = new LabeledScoredTreeFactory();\n\n    try {\n      BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(treeFile), \"UTF-8\"));\n      TreeReaderFactory trf = new SpanishTreeReaderFactory();\n      TreeReader tr = trf.newTreeReader(br);\n\n      PrintWriter pw = new PrintWriter(new PrintStream(new FileOutputStream(new File(treeFile + \".fixed\")),false,\"UTF-8\"));\n\n      int nTrees = 0;\n      for(Tree t; (t = tr.readTree()) != null;nTrees++) {\n        traverseAndFix(t, null, pretermLabel, unigramTagger, retainNER);\n\n        // Now \"decompress\" further the expanded trees formed by\n        // multiword token splitting\n        t = MultiWordTreeExpander.expandPhrases(t);\n\n        if (tn != null)\n          t = tn.normalizeWholeTree(t, tf);\n\n        pw.println(t.toString());\n      }\n\n      pw.close();\n      tr.close();\n\n      System.out.println(\"Processed \" +nTrees+ \" trees\");\n\n    } catch (UnsupportedEncodingException e) {\n      e.printStackTrace();\n    } catch (FileNotFoundException e) {\n      e.printStackTrace();\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }","commit_id":"2205dabcd8709c10572e9a9e8816078da0c0c73c","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void updateTagger(TwoDimensionalCounter<String,String> tagger,\n                                  Tree t) {\n    List<CoreLabel> yield = t.taggedLabeledYield();\n    for (CoreLabel cl : yield) {\n      if (cl.tag().equals(SpanishTreeNormalizer.MW_TAG))\n        continue;\n\n      tagger.incrementCount(cl.word(), cl.tag());\n    }\n  }","id":15288,"modified_method":"/**\n   * Source training data for a unigram tagger from the given tree.\n   */\n  public static void updateTagger(TwoDimensionalCounter<String,String> tagger,\n                                  Tree t) {\n    List<CoreLabel> yield = t.taggedLabeledYield();\n    for (CoreLabel cl : yield) {\n      if (cl.tag().equals(SpanishTreeNormalizer.MW_TAG))\n        continue;\n\n      tagger.incrementCount(cl.word(), cl.tag());\n    }\n  }","commit_id":"2205dabcd8709c10572e9a9e8816078da0c0c73c","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Expand grandchild tokens which are elided forms of multi-word\n   * expressions ('al,' 'del').\n   *\n   * We perform this expansion separately from multi-word expansion\n   * because we follow special rules about where the expanded tokens\n   * should be placed in the case of elision.\n   *\n   * @param t Tree representing an entire sentence\n   * @param tf\n   */\n  private void expandElisions(Tree t, TreeFactory tf) {\n    Tsurgeon.processPatternsOnTree(elisionExpansions, t);\n  }","id":15289,"modified_method":"/**\n   * Expand grandchild tokens which are elided forms of multi-word\n   * expressions ('al,' 'del').\n   *\n   * We perform this expansion separately from multi-word expansion\n   * because we follow special rules about where the expanded tokens\n   * should be placed in the case of elision.\n   *\n   * @param t Tree representing an entire sentence\n   */\n  private Tree expandElisions(Tree t) {\n    return Tsurgeon.processPatternsOnTree(elisionExpansions, t);\n  }","commit_id":"2205dabcd8709c10572e9a9e8816078da0c0c73c","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    // First filter out nodes we don't like\n    tree = tree.prune(emptyFilter);\n\n    // Counter for part-of-speech statistics\n    TwoDimensionalCounter<String, String> unigramTagger =\n      new TwoDimensionalCounter<String, String>();\n\n    for (Tree t : tree) {\n      if (simplifiedTagset && t.isPreTerminal()) {\n        // This is a part of speech tag. Remove extra morphological\n        // information.\n        CoreLabel label = (CoreLabel) t.label();\n        String pos = label.value();\n\n        pos = simplifyPOSTag(pos).intern();\n        label.setValue(pos);\n        label.setTag(pos);\n      } else if (aggressiveNormalization && isMultiWordCandidate(t)) {\n        // Expand multi-word token if necessary\n        normalizeForMultiWord(t, tf);\n      }\n    }\n\n    // Now attack elisions: 'al' and 'del'\n    expandElisions(tree, tf);\n\n    return tree;\n  }","id":15290,"modified_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    // First filter out nodes we don't like\n    tree = tree.prune(emptyFilter);\n\n    // Find all named entities which are not multi-word tokens and nest\n    // them within named entity NP groups\n    if (retainNER)\n      markSimpleNamedEntities(tree);\n\n    // Counter for part-of-speech statistics\n    TwoDimensionalCounter<String, String> unigramTagger =\n      new TwoDimensionalCounter<String, String>();\n\n    for (Tree t : tree) {\n      if (simplifiedTagset && t.isPreTerminal()) {\n        // This is a part of speech tag. Remove extra morphological\n        // information.\n        CoreLabel label = (CoreLabel) t.label();\n        String pos = label.value();\n\n        pos = simplifyPOSTag(pos).intern();\n        label.setValue(pos);\n        label.setTag(pos);\n      } else if (aggressiveNormalization && isMultiWordCandidate(t)) {\n        // Expand multi-word token if necessary\n        normalizeForMultiWord(t, tf);\n      }\n    }\n\n    // More tregex-powered fixes\n    tree = expandElisions(tree);\n    tree = expandCliticPronouns(tree);\n\n    return tree;\n  }","commit_id":"2205dabcd8709c10572e9a9e8816078da0c0c73c","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Normalize a pre-pre-terminal tree node by accounting for multi-word\n   * tokens.\n   *\n   * Detects multi-word tokens in leaves below this pre-pre-terminal and\n   * expands their constituent words into separate leaves.\n   */\n  void normalizeForMultiWord(Tree t, TreeFactory tf) {\n    Tree[] preterminals = t.children();\n\n    for (int i = 0; i < preterminals.length; i++) {\n      // This particular child is not actually a preterminal --- skip\n      if (!preterminals[i].isPreTerminal())\n        continue;\n\n      Tree leaf = preterminals[i].firstChild();\n      String leafValue = ((CoreLabel) leaf.label()).value();\n\n      String[] words = getMultiWords(leafValue);\n      if (words.length == 1)\n        continue;\n\n      // Leaf is a multi-word token; build new nodes for each of its\n      // constituent words\n      List<Tree> newNodes = new ArrayList<Tree>(words.length);\n      for (int j = 0; j < words.length; j++) {\n        String word = words[j];\n\n        Tree newLeaf = tf.newLeaf(word);\n        if (newLeaf.label() instanceof HasWord)\n          ((HasWord) newLeaf.label()).setWord(word);\n\n        Tree newNode = tf.newTreeNode(MW_TAG, Arrays.asList(newLeaf));\n        if (newNode.label() instanceof HasTag)\n          ((HasTag) newNode.label()).setTag(MW_TAG);\n\n        newNodes.add(newNode);\n      }\n\n      // Value of the phrase which should head these preterminals. Mark\n      // that this was created from a multiword token, and also retain\n      // the original parts of speech.\n      String phraseValue = MW_PHRASE_TAG + \"_\"\n        + simplifyPOSTag(preterminals[i].value());\n\n      // Should we insert these new nodes as children of the parent `t`\n      // (i.e., \"merge\" the multi-word token phrase into its parent), or\n      // head them with a new node and set that as a child of the\n      // parent?\n      boolean shouldMerge = preterminals.length == 1\n        && mergeWithConstituentWhenPossible.contains(t.value());\n\n      if (shouldMerge) {\n        t.setChildren(newNodes);\n        t.setValue(phraseValue);\n      } else {\n        Tree newHead = tf.newTreeNode(phraseValue, newNodes);\n        t.setChild(i, newHead);\n      }\n    }\n  }","id":15291,"modified_method":"/**\n   * Normalize a pre-pre-terminal tree node by accounting for multi-word\n   * tokens.\n   *\n   * Detects multi-word tokens in leaves below this pre-pre-terminal and\n   * expands their constituent words into separate leaves.\n   */\n  void normalizeForMultiWord(Tree t, TreeFactory tf) {\n    Tree[] preterminals = t.children();\n\n    for (int i = 0; i < preterminals.length; i++) {\n      // This particular child is not actually a preterminal --- skip\n      if (!preterminals[i].isPreTerminal())\n        continue;\n\n      Tree leaf = preterminals[i].firstChild();\n      String leafValue = ((CoreLabel) leaf.label()).value();\n\n      String[] words = getMultiWords(leafValue);\n      if (words.length == 1)\n        continue;\n\n      // Leaf is a multi-word token; build new nodes for each of its\n      // constituent words\n      List<Tree> newNodes = new ArrayList<Tree>(words.length);\n      for (int j = 0; j < words.length; j++) {\n        String word = normalizeTerminal(words[j]);\n\n        Tree newLeaf = tf.newLeaf(word);\n        if (newLeaf.label() instanceof HasWord)\n          ((HasWord) newLeaf.label()).setWord(word);\n\n        Tree newNode = tf.newTreeNode(MW_TAG, Arrays.asList(newLeaf));\n        if (newNode.label() instanceof HasTag)\n          ((HasTag) newNode.label()).setTag(MW_TAG);\n\n        newNodes.add(newNode);\n      }\n\n      // Value of the phrase which should head these preterminals. Mark\n      // that this was created from a multiword token, and also retain\n      // the original parts of speech.\n      String phraseValue = MW_PHRASE_TAG + \"_\"\n        + simplifyPOSTag(preterminals[i].value());\n\n      // Should we insert these new nodes as children of the parent `t`\n      // (i.e., \"merge\" the multi-word token phrase into its parent), or\n      // head them with a new node and set that as a child of the\n      // parent?\n      boolean shouldMerge = preterminals.length == 1\n        && mergeWithConstituentWhenPossible.contains(t.value());\n\n      if (shouldMerge) {\n        t.setChildren(newNodes);\n        t.setValue(phraseValue);\n      } else {\n        Tree newHead = tf.newTreeNode(phraseValue, newNodes);\n        t.setChild(i, newHead);\n      }\n    }\n  }","commit_id":"2205dabcd8709c10572e9a9e8816078da0c0c73c","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Strips the suffix matched by @pSuffix off of @word and returns\n   * the stripped word, null if unable to strip.\n   */\n  private static String stripSuffix(String word, Pattern pSuffix) {\n    Matcher m = pSuffix.matcher(word);\n    if(m.find()) {\n      String stripped = word.substring(0, m.start());\n      System.out.println(m.start());\n      return removeAccents(stripped);\n    }\n    return null;\n  }","id":15292,"modified_method":"/**\n   * Separate attached pronouns from the given verb.\n   *\n   * @param word A valid Spanish verb with clitic pronouns attached.\n   * @param pSuffix A pattern to match these attached pronouns.\n   * @return A pair containing the verb (pronouns removed by the given\n   *           pattern) and a list of the pronouns which were attached\n   *           to the verb.\n   */\n  private static Pair<String, List<String>> stripSuffix(String word,\n                                                        Pattern pSuffix) {\n    Matcher m = pSuffix.matcher(word);\n    if(m.find()) {\n      String stripped = word.substring(0, m.start());\n      System.out.println(m.start());\n      stripped = removeAccents(stripped);\n\n      List<String> attached = new ArrayList<String>();\n      for (int i = 0; i < m.groupCount(); i++)\n        attached.add(m.group(i + 1));\n\n      return new Pair<String, List<String>>(stripped, attached);\n    }\n\n    return null;\n  }","commit_id":"2205dabcd8709c10572e9a9e8816078da0c0c73c","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Remove attached pronouns from a strippable Spanish verb form. (Use\n   * {@link #isStrippable(String)} to determine if a word is a\n   * strippable verb.)\n   *\n   * Converts e.g.\n   *\n   *   - decírmelo -> decir\n   *   - mudarse -> mudar\n   *   - contándolos -> contando\n   *   - hazlo -> haz\n   */\n  public static String stripVerb(String verb) {\n    String stripped = stripSuffix(verb, pOneAttachedPronoun);\n    if(stripped == null || (!isVerb(stripped) && !isVerb(stripped + \"d\"))) {\n      System.out.println(stripped);\n      stripped = stripSuffix(verb, pTwoAttachedPronouns);\n      if(stripped == null || (!isVerb(stripped) && !isVerb(stripped + \"d\"))) {\n        System.out.println(stripped);\n        return null;\n      }\n    }\n    return stripped;\n  }","id":15293,"modified_method":"/**\n   * Remove attached pronouns from a strippable Spanish verb form. (Use\n   * {@link #isStrippable(String)} to determine if a word is a\n   * strippable verb.)\n   *\n   * Converts e.g.\n   *\n   *   - decírmelo -> decir\n   *   - mudarse -> mudar\n   *   - contándolos -> contando\n   *   - hazlo -> haz\n   *\n   * @return A verb form stripped of attached pronouns, or <tt>null<\/tt>\n   *           if no pronouns were located / stripped.\n   */\n  public static String stripVerb(String verb) {\n    Pair<String, List<String>> separated = separatePronouns(verb);\n    if (separated != null)\n      return separated.first();\n\n    return null;\n  }","commit_id":"2205dabcd8709c10572e9a9e8816078da0c0c73c","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Read parse trees from a Reader.\n   *\n   * @param in The <code>Reader<\/code>\n   * @param simplifiedTagset If `true`, convert part-of-speech labels to a\n   *          simplified version of the EAGLES tagset, where the tags do not\n   *          include extensive morphological analysis\n   * @param aggressiveNormalization Perform aggressive \"normalization\"\n   *          on the trees read from the provided corpus documents:\n   *          split multi-word tokens into their constituent words (and\n   *          infer parts of speech of the constituent words).\n   */\n  public SpanishXMLTreeReader(Reader in, boolean simplifiedTagset,\n                              boolean aggressiveNormalization) {\n    TreebankLanguagePack tlp = new SpanishTreebankLanguagePack();\n\n    this.simplifiedTagset = simplifiedTagset;\n\n    stream = new ReaderInputStream(in, tlp.getEncoding());\n    treeFactory = new LabeledScoredTreeFactory();\n    treeNormalizer =\n      new SpanishTreeNormalizer(simplifiedTagset,\n                                aggressiveNormalization,\n                                true // retain NER information in\n                                     // preterminals\n                                );\n\n    DocumentBuilder parser = XMLUtils.getXmlParser();\n    try {\n      final Document xml = parser.parse(stream);\n      final Element root = xml.getDocumentElement();\n      sentences = root.getElementsByTagName(NODE_SENT);\n      sentIdx = 0;\n\n    } catch (SAXException e) {\n      e.printStackTrace();\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }","id":15294,"modified_method":"/**\n   * Read parse trees from a Reader.\n   *\n   * @param in The <code>Reader<\/code>\n   * @param simplifiedTagset If `true`, convert part-of-speech labels to a\n   *          simplified version of the EAGLES tagset, where the tags do not\n   *          include extensive morphological analysis\n   * @param aggressiveNormalization Perform aggressive \"normalization\"\n   *          on the trees read from the provided corpus documents:\n   *          split multi-word tokens into their constituent words (and\n   *          infer parts of speech of the constituent words).\n   * @param retainNER Retain NER information in preterminals (for later\n   *          use in `MultiWordPreprocessor) and add NER-specific\n   *          parents to single-word NE tokens\n   */\n  public SpanishXMLTreeReader(Reader in, boolean simplifiedTagset,\n                              boolean aggressiveNormalization,\n                              boolean retainNER) {\n    TreebankLanguagePack tlp = new SpanishTreebankLanguagePack();\n\n    this.simplifiedTagset = simplifiedTagset;\n\n    stream = new ReaderInputStream(in, tlp.getEncoding());\n    treeFactory = new LabeledScoredTreeFactory();\n    treeNormalizer =\n      new SpanishTreeNormalizer(simplifiedTagset,\n                                aggressiveNormalization,\n                                retainNER);\n\n    DocumentBuilder parser = XMLUtils.getXmlParser();\n    try {\n      final Document xml = parser.parse(stream);\n      final Element root = xml.getDocumentElement();\n      sentences = root.getElementsByTagName(NODE_SENT);\n      sentIdx = 0;\n\n    } catch (SAXException e) {\n      e.printStackTrace();\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }","commit_id":"2205dabcd8709c10572e9a9e8816078da0c0c73c","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void main(String[] args) {\n    final Properties options = StringUtils.argsToProperties(args, argOptionDefs());\n    if(args.length < 1 || options.containsKey(\"help\")) {\n      System.err.println(usage());\n      return;\n    }\n\n    final Pattern posPattern = options.containsKey(\"searchPos\")\n      ? Pattern.compile(options.getProperty(\"searchPos\")) : null;\n    final Pattern wordPattern = options.containsKey(\"searchWord\")\n      ? Pattern.compile(options.getProperty(\"searchWord\")) : null;\n    final boolean plainPrint = PropertiesUtils.getBool(options, \"plain\", false);\n\n    String[] remainingArgs = options.getProperty(\"\").split(\" \");\n    List<File> fileList = new ArrayList<File>();\n    for(int i = 0; i < remainingArgs.length; i++)\n      fileList.add(new File(remainingArgs[i]));\n\n    final TreeReaderFactory trf = new SpanishXMLTreeReaderFactory(true, true);\n    ExecutorService pool =\n      Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors());\n\n    for (final File file : fileList) {\n      pool.execute(new Runnable() {\n          public void run() {\n            try {\n              TreeReader tr = trf.newTreeReader(new BufferedReader(new InputStreamReader(new FileInputStream(file), \"ISO-8859-1\")));\n              process(file, tr, posPattern, wordPattern, plainPrint);\n              tr.close();\n            } catch (FileNotFoundException e) {\n              e.printStackTrace();\n            } catch (IOException e) {\n              e.printStackTrace();\n            }\n          }\n        });\n    }\n\n    pool.shutdown();\n    try {\n      pool.awaitTermination(Long.MAX_VALUE, TimeUnit.NANOSECONDS);\n    } catch (InterruptedException e) {\n      e.printStackTrace();\n    }\n  }","id":15295,"modified_method":"public static void main(String[] args) {\n    final Properties options = StringUtils.argsToProperties(args, argOptionDefs());\n    if(args.length < 1 || options.containsKey(\"help\")) {\n      System.err.println(usage());\n      return;\n    }\n\n    final Pattern posPattern = options.containsKey(\"searchPos\")\n      ? Pattern.compile(options.getProperty(\"searchPos\")) : null;\n    final Pattern wordPattern = options.containsKey(\"searchWord\")\n      ? Pattern.compile(options.getProperty(\"searchWord\")) : null;\n    final boolean plainPrint = PropertiesUtils.getBool(options, \"plain\", false);\n    final boolean ner = PropertiesUtils.getBool(options, \"ner\", false);\n\n    String[] remainingArgs = options.getProperty(\"\").split(\" \");\n    List<File> fileList = new ArrayList<File>();\n    for(int i = 0; i < remainingArgs.length; i++)\n      fileList.add(new File(remainingArgs[i]));\n\n    final TreeReaderFactory trf = new SpanishXMLTreeReaderFactory(true, true, ner);\n    ExecutorService pool =\n      Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors());\n\n    for (final File file : fileList) {\n      pool.execute(new Runnable() {\n          public void run() {\n            try {\n              TreeReader tr = trf.newTreeReader(new BufferedReader(new InputStreamReader(new FileInputStream(file), \"ISO-8859-1\")));\n              process(file, tr, posPattern, wordPattern, plainPrint);\n              tr.close();\n            } catch (FileNotFoundException e) {\n              e.printStackTrace();\n            } catch (IOException e) {\n              e.printStackTrace();\n            }\n          }\n        });\n    }\n\n    pool.shutdown();\n    try {\n      pool.awaitTermination(Long.MAX_VALUE, TimeUnit.NANOSECONDS);\n    } catch (InterruptedException e) {\n      e.printStackTrace();\n    }\n  }","commit_id":"2205dabcd8709c10572e9a9e8816078da0c0c73c","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static Map<String, Integer> argOptionDefs() {\n    Map<String, Integer> argOptionDefs = Generics.newHashMap();\n    argOptionDefs.put(\"help\", 0);\n    argOptionDefs.put(\"plain\", 0);\n    argOptionDefs.put(\"searchPos\", 1);\n    argOptionDefs.put(\"searchWord\", 1);\n    return argOptionDefs;\n  }","id":15296,"modified_method":"private static Map<String, Integer> argOptionDefs() {\n    Map<String, Integer> argOptionDefs = Generics.newHashMap();\n    argOptionDefs.put(\"help\", 0);\n    argOptionDefs.put(\"ner\", 0);\n    argOptionDefs.put(\"plain\", 0);\n    argOptionDefs.put(\"searchPos\", 1);\n    argOptionDefs.put(\"searchWord\", 1);\n    return argOptionDefs;\n  }","commit_id":"2205dabcd8709c10572e9a9e8816078da0c0c73c","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Determine the part of speech of the given leaf node.\n   *\n   * Use some heuristics to make up for missing part-of-speech labels.\n   */\n  private String getPOS(Element node) {\n    String pos = node.getAttribute(ATTR_POS);\n\n    // Make up for some missing part-of-speech tags\n    if (pos.equals(\"\")) {\n      String namedAttribute = node.getAttribute(ATTR_NAMED_ENTITY);\n      if (namedAttribute.equals(\"date\")) {\n        return \"w\";\n      } else if (namedAttribute.equals(\"number\")) {\n        return \"z0\";\n      }\n\n      String tagName = node.getTagName();\n      if (tagName.equals(\"i\")) {\n        return \"i\";\n      } else if (tagName.equals(\"r\")) {\n        return \"rg\";\n      } else if (tagName.equals(\"z\")) {\n        return \"z0\";\n      }\n\n      // Handle icky issues related to \"que\"\n      String posType = node.getAttribute(ATTR_POSTYPE);\n      String word = getWord(node);\n      if (tagName.equals(\"c\") && posType.equals(\"subordinating\")) {\n        return \"cs\";\n      } else if (tagName.equals(\"p\") && posType.equals(\"relative\")\n                 && word.equalsIgnoreCase(\"que\")) {\n        return \"pr0cn000\";\n      }\n\n      if (simplifiedTagset) {\n        // If we are using the simplfied tagset, we can make some more\n        // broad inferences\n        if (tagName.equals(\"a\")) {\n          return \"aq0000\";\n        }\n      }\n\n      if (node.hasAttribute(ATTR_PUNCT)) {\n        return \"f\";\n      }\n    }\n\n    return pos;\n  }","id":15297,"modified_method":"/**\n   * Determine the part of speech of the given leaf node.\n   *\n   * Use some heuristics to make up for missing part-of-speech labels.\n   */\n  private String getPOS(Element node) {\n    String pos = node.getAttribute(ATTR_POS);\n\n    String namedAttribute = node.getAttribute(ATTR_NAMED_ENTITY);\n    if (pos.startsWith(\"np\") && pos.length() == 7\n        && pos.charAt(pos.length() - 1) == '0') {\n      // Some nouns are missing a named entity annotation in the final\n      // character of their POS tags, but still have a proper named\n      // entity annotation in the `ne` attribute. Fix this:\n      char annotation = '0';\n      if (namedAttribute.equals(\"location\")) {\n        annotation = 'l';\n      } else if (namedAttribute.equals(\"person\")) {\n        annotation = 'p';\n      } else if (namedAttribute.equals(\"organization\")) {\n        annotation = 'o';\n      }\n\n      pos = pos.substring(0, 6) + annotation;\n    } else if (pos.equals(\"\")) {\n      // Make up for some missing part-of-speech tags\n      if (namedAttribute.equals(\"date\")) {\n        return \"w\";\n      } else if (namedAttribute.equals(\"number\")) {\n        return \"z0\";\n      }\n\n      String tagName = node.getTagName();\n      if (tagName.equals(\"i\")) {\n        return \"i\";\n      } else if (tagName.equals(\"r\")) {\n        return \"rg\";\n      } else if (tagName.equals(\"z\")) {\n        return \"z0\";\n      }\n\n      // Handle icky issues related to \"que\"\n      String posType = node.getAttribute(ATTR_POSTYPE);\n      String word = getWord(node);\n      if (tagName.equals(\"c\") && posType.equals(\"subordinating\")) {\n        return \"cs\";\n      } else if (tagName.equals(\"p\") && posType.equals(\"relative\")\n                 && word.equalsIgnoreCase(\"que\")) {\n        return \"pr0cn000\";\n      }\n\n      if (simplifiedTagset) {\n        // If we are using the simplfied tagset, we can make some more\n        // broad inferences\n        if (tagName.equals(\"a\")) {\n          return \"aq0000\";\n        } else if (posType.equals(\"proper\")) {\n          return \"np00000\";\n        } else if (posType.equals(\"common\")) {\n          return \"nc0s000\";\n        }\n      }\n\n      if (node.hasAttribute(ATTR_PUNCT)) {\n        return \"f\";\n      }\n    }\n\n    return pos;\n  }","commit_id":"2205dabcd8709c10572e9a9e8816078da0c0c73c","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static String usage() {\n    StringBuilder sb = new StringBuilder();\n    String nl = System.getProperty(\"line.separator\");\n    sb.append(String.format(\"Usage: java %s [OPTIONS] file(s)%n%n\", SpanishXMLTreeReader.class.getName()));\n    sb.append(\"Options:\").append(nl);\n    sb.append(\"   -help: Print this message\").append(nl);\n    sb.append(\"   -plain: Output corpus in plaintext rather than as trees\").append(nl);\n    sb.append(\"   -searchPos posRegex: Only print sentences which contain a token whose part of speech matches the given regular expression\").append(nl);\n    sb.append(\"   -searchWord wordRegex: Only print sentences which contain a token which matches the given regular expression\").append(nl);\n    return sb.toString();\n  }","id":15298,"modified_method":"private static String usage() {\n    StringBuilder sb = new StringBuilder();\n    String nl = System.getProperty(\"line.separator\");\n\n    sb.append(String.format(\"Usage: java %s [OPTIONS] file(s)%n%n\", SpanishXMLTreeReader.class.getName()));\n    sb.append(\"Options:\").append(nl);\n    sb.append(\"   -help: Print this message\").append(nl);\n    sb.append(\"   -ner: Add NER-specific information to trees\").append(nl);\n    sb.append(\"   -plain: Output corpus in plaintext rather than as trees\").append(nl);\n    sb.append(\"   -searchPos posRegex: Only print sentences which contain a token whose part of speech matches the given regular expression\").append(nl);\n    sb.append(\"   -searchWord wordRegex: Only print sentences which contain a token which matches the given regular expression\").append(nl);\n\n    return sb.toString();\n  }","commit_id":"2205dabcd8709c10572e9a9e8816078da0c0c73c","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public TreeReader newTreeReader(Reader in) {\n    return new SpanishXMLTreeReader(in, simplifiedTagset, aggressiveNormalization);\n  }","id":15299,"modified_method":"public TreeReader newTreeReader(Reader in) {\n    return new SpanishXMLTreeReader(in, simplifiedTagset, aggressiveNormalization,\n                                    retainNER);\n  }","commit_id":"2205dabcd8709c10572e9a9e8816078da0c0c73c","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public SpanishXMLTreeReaderFactory(boolean simplifiedTagset,\n                                     boolean aggressiveNormalization) {\n    this.simplifiedTagset = simplifiedTagset;\n    this.aggressiveNormalization = aggressiveNormalization;\n  }","id":15300,"modified_method":"public SpanishXMLTreeReaderFactory(boolean simplifiedTagset,\n                                     boolean aggressiveNormalization,\n                                     boolean retainNER) {\n    this.simplifiedTagset = simplifiedTagset;\n    this.aggressiveNormalization = aggressiveNormalization;\n    this.retainNER = retainNER;\n  }","commit_id":"2205dabcd8709c10572e9a9e8816078da0c0c73c","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static void resolveDummyTags(File treeFile,\n                                       TwoDimensionalCounter<String, String> pretermLabel,\n                                       TwoDimensionalCounter<String, String> unigramTagger,\n                                       boolean retainNER, TreeNormalizer tn) {\n    TreeFactory tf = new LabeledScoredTreeFactory();\n\n    try {\n      BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(treeFile), \"UTF-8\"));\n      TreeReaderFactory trf = new SpanishTreeReaderFactory();\n      TreeReader tr = trf.newTreeReader(br);\n\n      PrintWriter pw = new PrintWriter(new PrintStream(new FileOutputStream(new File(treeFile + \".fixed\")),false,\"UTF-8\"));\n\n      int nTrees = 0;\n      for(Tree t; (t = tr.readTree()) != null;nTrees++) {\n        traverseAndFix(t, null, pretermLabel, unigramTagger, retainNER);\n\n        if (tn != null)\n          t = tn.normalizeWholeTree(t, tf);\n\n        pw.println(t.toString());\n      }\n\n      pw.close();\n      tr.close();\n\n      System.out.println(\"Processed \" +nTrees+ \" trees\");\n\n    } catch (UnsupportedEncodingException e) {\n      e.printStackTrace();\n    } catch (FileNotFoundException e) {\n      e.printStackTrace();\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }","id":15301,"modified_method":"private static void resolveDummyTags(File treeFile,\n                                       TwoDimensionalCounter<String, String> pretermLabel,\n                                       TwoDimensionalCounter<String, String> unigramTagger,\n                                       boolean retainNER, TreeNormalizer tn) {\n    TreeFactory tf = new LabeledScoredTreeFactory();\n\n    try {\n      BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(treeFile), \"UTF-8\"));\n      TreeReaderFactory trf = new SpanishTreeReaderFactory();\n      TreeReader tr = trf.newTreeReader(br);\n\n      PrintWriter pw = new PrintWriter(new PrintStream(new FileOutputStream(new File(treeFile + \".fixed\")),false,\"UTF-8\"));\n\n      int nTrees = 0;\n      for(Tree t; (t = tr.readTree()) != null;nTrees++) {\n        traverseAndFix(t, null, pretermLabel, unigramTagger, retainNER);\n\n        // Now \"decompress\" further the expanded trees formed by\n        // multiword token splitting\n        t = MultiWordTreeExpander.expandPhrases(t);\n\n        if (tn != null)\n          t = tn.normalizeWholeTree(t, tf);\n\n        pw.println(t.toString());\n      }\n\n      pw.close();\n      tr.close();\n\n      System.out.println(\"Processed \" +nTrees+ \" trees\");\n\n    } catch (UnsupportedEncodingException e) {\n      e.printStackTrace();\n    } catch (FileNotFoundException e) {\n      e.printStackTrace();\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }","commit_id":"bcb27178618ae55a49fa634b6b3fba3370d363ca","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void updateTagger(TwoDimensionalCounter<String,String> tagger,\n                                  Tree t) {\n    List<CoreLabel> yield = t.taggedLabeledYield();\n    for (CoreLabel cl : yield) {\n      if (cl.tag().equals(SpanishTreeNormalizer.MW_TAG))\n        continue;\n\n      tagger.incrementCount(cl.word(), cl.tag());\n    }\n  }","id":15302,"modified_method":"/**\n   * Source training data for a unigram tagger from the given tree.\n   */\n  public static void updateTagger(TwoDimensionalCounter<String,String> tagger,\n                                  Tree t) {\n    List<CoreLabel> yield = t.taggedLabeledYield();\n    for (CoreLabel cl : yield) {\n      if (cl.tag().equals(SpanishTreeNormalizer.MW_TAG))\n        continue;\n\n      tagger.incrementCount(cl.word(), cl.tag());\n    }\n  }","commit_id":"bcb27178618ae55a49fa634b6b3fba3370d363ca","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Attempt to infer the part of speech of the given preterminal node, which\n   * was created during the expansion of a multi-word token.\n   */\n  private static String inferPOS(Tree t, Tree parent,\n                                 TwoDimensionalCounter<String, String> unigramTagger) {\n    String word = t.firstChild().value();\n    if (unigramTagger.firstKeySet().contains(word))\n      return Counters.argmax(unigramTagger.getCounter(word));\n\n    if (parent == null)\n      return null;\n\n    List<Label> phraseYield = parent.yield();\n    StringBuilder containingPhrase = new StringBuilder();\n    for (Label l : phraseYield)\n      containingPhrase.append(l).append(\" \");\n\n    String containingPhraseStr =\n      containingPhrase.toString().substring(0, containingPhrase.length() - 1);\n    return ManualUWModel.getTag(word, containingPhraseStr);\n  }","id":15303,"modified_method":"/**\n   * Attempt to infer the part of speech of the given preterminal node, which\n   * was created during the expansion of a multi-word token.\n   */\n  private static String inferPOS(Tree t, Tree parent,\n                                 TwoDimensionalCounter<String, String> unigramTagger) {\n    String word = t.firstChild().value();\n    String containingPhraseStr = getContainingPhrase(t, parent);\n\n    // Overrides: let the manual POS model handle a few special cases first\n    String overrideTag = ManualUWModel.getOverrideTag(word, containingPhraseStr);\n    if (overrideTag != null)\n      return overrideTag;\n\n    if (unigramTagger.firstKeySet().contains(word))\n      return Counters.argmax(unigramTagger.getCounter(word));\n\n    return ManualUWModel.getTag(word, containingPhraseStr);\n  }","commit_id":"bcb27178618ae55a49fa634b6b3fba3370d363ca","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Normalize a pre-pre-terminal tree node by accounting for multi-word\n   * tokens.\n   *\n   * Detects multi-word tokens in leaves below this pre-pre-terminal and\n   * expands their constituent words into separate leaves.\n   */\n  void normalizeForMultiWord(Tree t, TreeFactory tf) {\n    Tree[] preterminals = t.children();\n\n    for (int i = 0; i < preterminals.length; i++) {\n      // This particular child is not actually a preterminal --- skip\n      if (!preterminals[i].isPreTerminal())\n        continue;\n\n      Tree leaf = preterminals[i].firstChild();\n      String leafValue = ((CoreLabel) leaf.label()).value();\n\n      String[] words = getMultiWords(leafValue);\n      if (words.length == 1)\n        continue;\n\n      // Leaf is a multi-word token; build new nodes for each of its\n      // constituent words\n      List<Tree> newNodes = new ArrayList<Tree>(words.length);\n      for (int j = 0; j < words.length; j++) {\n        String word = words[j];\n\n        Tree newLeaf = tf.newLeaf(word);\n        if (newLeaf.label() instanceof HasWord)\n          ((HasWord) newLeaf.label()).setWord(word);\n\n        Tree newNode = tf.newTreeNode(MW_TAG, Arrays.asList(newLeaf));\n        if (newNode.label() instanceof HasTag)\n          ((HasTag) newNode.label()).setTag(MW_TAG);\n\n        newNodes.add(newNode);\n      }\n\n      // Value of the phrase which should head these preterminals. Mark\n      // that this was created from a multiword token, and also retain\n      // the original parts of speech.\n      String phraseValue = MW_PHRASE_TAG + \"_\"\n        + simplifyPOSTag(preterminals[i].value());\n\n      // Should we insert these new nodes as children of the parent `t`\n      // (i.e., \"merge\" the multi-word token phrase into its parent), or\n      // head them with a new node and set that as a child of the\n      // parent?\n      boolean shouldMerge = preterminals.length == 1\n        && mergeWithConstituentWhenPossible.contains(t.value());\n\n      if (shouldMerge) {\n        t.setChildren(newNodes);\n        t.setValue(phraseValue);\n      } else {\n        Tree newHead = tf.newTreeNode(phraseValue, newNodes);\n        t.setChild(i, newHead);\n      }\n    }\n  }","id":15304,"modified_method":"/**\n   * Normalize a pre-pre-terminal tree node by accounting for multi-word\n   * tokens.\n   *\n   * Detects multi-word tokens in leaves below this pre-pre-terminal and\n   * expands their constituent words into separate leaves.\n   */\n  void normalizeForMultiWord(Tree t, TreeFactory tf) {\n    Tree[] preterminals = t.children();\n\n    for (int i = 0; i < preterminals.length; i++) {\n      // This particular child is not actually a preterminal --- skip\n      if (!preterminals[i].isPreTerminal())\n        continue;\n\n      Tree leaf = preterminals[i].firstChild();\n      String leafValue = ((CoreLabel) leaf.label()).value();\n\n      String[] words = getMultiWords(leafValue);\n      if (words.length == 1)\n        continue;\n\n      // Leaf is a multi-word token; build new nodes for each of its\n      // constituent words\n      List<Tree> newNodes = new ArrayList<Tree>(words.length);\n      for (int j = 0; j < words.length; j++) {\n        String word = normalizeTerminal(words[j]);\n\n        Tree newLeaf = tf.newLeaf(word);\n        if (newLeaf.label() instanceof HasWord)\n          ((HasWord) newLeaf.label()).setWord(word);\n\n        Tree newNode = tf.newTreeNode(MW_TAG, Arrays.asList(newLeaf));\n        if (newNode.label() instanceof HasTag)\n          ((HasTag) newNode.label()).setTag(MW_TAG);\n\n        newNodes.add(newNode);\n      }\n\n      // Value of the phrase which should head these preterminals. Mark\n      // that this was created from a multiword token, and also retain\n      // the original parts of speech.\n      String phraseValue = MW_PHRASE_TAG + \"_\"\n        + simplifyPOSTag(preterminals[i].value());\n\n      // Should we insert these new nodes as children of the parent `t`\n      // (i.e., \"merge\" the multi-word token phrase into its parent), or\n      // head them with a new node and set that as a child of the\n      // parent?\n      boolean shouldMerge = preterminals.length == 1\n        && mergeWithConstituentWhenPossible.contains(t.value());\n\n      if (shouldMerge) {\n        t.setChildren(newNodes);\n        t.setValue(phraseValue);\n      } else {\n        Tree newHead = tf.newTreeNode(phraseValue, newNodes);\n        t.setChild(i, newHead);\n      }\n    }\n  }","commit_id":"bcb27178618ae55a49fa634b6b3fba3370d363ca","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    // First filter out nodes we don't like\n    tree = tree.prune(emptyFilter);\n\n    // Counter for part-of-speech statistics\n    TwoDimensionalCounter<String, String> unigramTagger =\n      new TwoDimensionalCounter<String, String>();\n\n    for (Tree t : tree) {\n      if (simplifiedTagset && t.isPreTerminal()) {\n        // This is a part of speech tag. Remove extra morphological\n        // information.\n        CoreLabel label = (CoreLabel) t.label();\n        String pos = label.value();\n\n        pos = simplifyPOSTag(pos).intern();\n        label.setValue(pos);\n        label.setTag(pos);\n      } else if (aggressiveNormalization && isMultiWordCandidate(t)) {\n        // Expand multi-word token if necessary\n        normalizeForMultiWord(t, tf);\n      }\n    }\n\n    // Now attack elisions: 'al' and 'del'\n    expandElisions(tree, tf);\n\n    return tree;\n  }","id":15305,"modified_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    // First filter out nodes we don't like\n    tree = tree.prune(emptyFilter);\n\n    // Find all named entities which are not multi-word tokens and nest\n    // them within named entity NP groups\n    if (retainNER)\n      markSimpleNamedEntities(tree);\n\n    // Counter for part-of-speech statistics\n    TwoDimensionalCounter<String, String> unigramTagger =\n      new TwoDimensionalCounter<String, String>();\n\n    for (Tree t : tree) {\n      if (simplifiedTagset && t.isPreTerminal()) {\n        // This is a part of speech tag. Remove extra morphological\n        // information.\n        CoreLabel label = (CoreLabel) t.label();\n        String pos = label.value();\n\n        pos = simplifyPOSTag(pos).intern();\n        label.setValue(pos);\n        label.setTag(pos);\n      } else if (aggressiveNormalization && isMultiWordCandidate(t)) {\n        // Expand multi-word token if necessary\n        normalizeForMultiWord(t, tf);\n      }\n    }\n\n    // More tregex-powered fixes\n    tree = expandElisions(tree);\n    tree = expandCliticPronouns(tree);\n\n    return tree;\n  }","commit_id":"bcb27178618ae55a49fa634b6b3fba3370d363ca","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Return the (single or multiple) words which make up the given\n   * token.\n   */\n  private String[] getMultiWords(String token) {\n    Matcher quoteMatcher = pQuoted.matcher(token);\n    if (quoteMatcher.matches()) {\n      String[] ret = new String[3];\n      ret[0] = \"\\\"\";\n      ret[1] = quoteMatcher.group(1);\n      ret[2] = \"\\\"\";\n\n      return ret;\n    }\n\n    // Confusing: we are using a tokenizer to split a token into its\n    // constituent words\n    StringTokenizer splitter = new StringTokenizer(token, WORD_SEPARATORS,\n                                                   true);\n    int remainingTokens = splitter.countTokens();\n\n    List<String> words = new ArrayList<String>();\n\n    while (splitter.hasMoreTokens()) {\n      String word = splitter.nextToken();\n      remainingTokens--;\n\n      if (word.length() == 1\n          && WORD_SEPARATORS_DROP.indexOf(word.charAt(0)) != -1)\n        // This is a delimiter that we should drop\n        continue;\n\n      if (remainingTokens >= 2 && hyphenBoundMorphemes.contains(word)) {\n        String hyphen = splitter.nextToken();\n        remainingTokens--;\n\n        if (!hyphen.equals(\"-\")) {\n          // Ouch. We expected a hyphen here. Clean things up and keep\n          // moving.\n          words.add(word);\n          words.add(hyphen);\n          continue;\n        }\n\n        String freeMorpheme = splitter.nextToken();\n        remainingTokens--;\n\n        words.add(word + hyphen + freeMorpheme);\n        continue;\n      }\n\n      // Otherwise..\n      words.add(word);\n    }\n\n    return words.toArray(new String[words.size()]);\n  }","id":15306,"modified_method":"/**\n   * Return the (single or multiple) words which make up the given\n   * token.\n   */\n  private String[] getMultiWords(String token) {\n    token = prepareForMultiWordExtraction(token);\n\n    Matcher quoteMatcher = pQuoted.matcher(token);\n    if (quoteMatcher.matches()) {\n      String[] ret = new String[3];\n      ret[0] = \"\\\"\";\n      ret[1] = quoteMatcher.group(1);\n      ret[2] = \"\\\"\";\n\n      return ret;\n    }\n\n    // Confusing: we are using a tokenizer to split a token into its\n    // constituent words\n    StringTokenizer splitter = new StringTokenizer(token, WORD_SEPARATORS,\n                                                   true);\n    int remainingTokens = splitter.countTokens();\n\n    List<String> words = new ArrayList<String>();\n\n    while (splitter.hasMoreTokens()) {\n      String word = splitter.nextToken();\n      remainingTokens--;\n\n      if (word.length() == 1\n          && WORD_SEPARATORS_DROP.indexOf(word.charAt(0)) != -1)\n        // This is a delimiter that we should drop\n        continue;\n\n      if (remainingTokens >= 2 && hyphenBoundMorphemes.contains(word)) {\n        String hyphen = splitter.nextToken();\n        remainingTokens--;\n\n        if (!hyphen.equals(\"-\")) {\n          // Ouch. We expected a hyphen here. Clean things up and keep\n          // moving.\n          words.add(word);\n          words.add(hyphen);\n          continue;\n        }\n\n        String freeMorpheme = splitter.nextToken();\n        remainingTokens--;\n\n        words.add(word + hyphen + freeMorpheme);\n        continue;\n      }\n\n      // Otherwise..\n      words.add(word);\n    }\n\n    return words.toArray(new String[words.size()]);\n  }","commit_id":"bcb27178618ae55a49fa634b6b3fba3370d363ca","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Expand grandchild tokens which are elided forms of multi-word\n   * expressions ('al,' 'del').\n   *\n   * We perform this expansion separately from multi-word expansion\n   * because we follow special rules about where the expanded tokens\n   * should be placed in the case of elision.\n   *\n   * @param t Tree representing an entire sentence\n   * @param tf\n   */\n  private void expandElisions(Tree t, TreeFactory tf) {\n    Tsurgeon.processPatternsOnTree(elisionExpansions, t);\n  }","id":15307,"modified_method":"/**\n   * Expand grandchild tokens which are elided forms of multi-word\n   * expressions ('al,' 'del').\n   *\n   * We perform this expansion separately from multi-word expansion\n   * because we follow special rules about where the expanded tokens\n   * should be placed in the case of elision.\n   *\n   * @param t Tree representing an entire sentence\n   */\n  private Tree expandElisions(Tree t) {\n    return Tsurgeon.processPatternsOnTree(elisionExpansions, t);\n  }","commit_id":"bcb27178618ae55a49fa634b6b3fba3370d363ca","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Remove attached pronouns from a strippable Spanish verb form. (Use\n   * {@link #isStrippable(String)} to determine if a word is a\n   * strippable verb.)\n   *\n   * Converts e.g.\n   *\n   *   - decírmelo -> decir\n   *   - mudarse -> mudar\n   *   - contándolos -> contando\n   *   - hazlo -> haz\n   */\n  public static String stripVerb(String verb) {\n    String stripped = stripSuffix(verb, pOneAttachedPronoun);\n    if(stripped == null || (!isVerb(stripped) && !isVerb(stripped + \"d\"))) {\n      System.out.println(stripped);\n      stripped = stripSuffix(verb, pTwoAttachedPronouns);\n      if(stripped == null || (!isVerb(stripped) && !isVerb(stripped + \"d\"))) {\n        System.out.println(stripped);\n        return null;\n      }\n    }\n    return stripped;\n  }","id":15308,"modified_method":"/**\n   * Remove attached pronouns from a strippable Spanish verb form. (Use\n   * {@link #isStrippable(String)} to determine if a word is a\n   * strippable verb.)\n   *\n   * Converts e.g.\n   *\n   *   - decírmelo -> decir\n   *   - mudarse -> mudar\n   *   - contándolos -> contando\n   *   - hazlo -> haz\n   *\n   * @return A verb form stripped of attached pronouns, or <tt>null<\/tt>\n   *           if no pronouns were located / stripped.\n   */\n  public static String stripVerb(String verb) {\n    Pair<String, List<String>> separated = separatePronouns(verb);\n    if (separated != null)\n      return separated.first();\n\n    return null;\n  }","commit_id":"bcb27178618ae55a49fa634b6b3fba3370d363ca","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Strips the suffix matched by @pSuffix off of @word and returns\n   * the stripped word, null if unable to strip.\n   */\n  private static String stripSuffix(String word, Pattern pSuffix) {\n    Matcher m = pSuffix.matcher(word);\n    if(m.find()) {\n      String stripped = word.substring(0, m.start());\n      System.out.println(m.start());\n      return removeAccents(stripped);\n    }\n    return null;\n  }","id":15309,"modified_method":"/**\n   * Separate attached pronouns from the given verb.\n   *\n   * @param word A valid Spanish verb with clitic pronouns attached.\n   * @param pSuffix A pattern to match these attached pronouns.\n   * @return A pair containing the verb (pronouns removed by the given\n   *           pattern) and a list of the pronouns which were attached\n   *           to the verb.\n   */\n  private static Pair<String, List<String>> stripSuffix(String word,\n                                                        Pattern pSuffix) {\n    Matcher m = pSuffix.matcher(word);\n    if(m.find()) {\n      String stripped = word.substring(0, m.start());\n      System.out.println(m.start());\n      stripped = removeAccents(stripped);\n\n      List<String> attached = new ArrayList<String>();\n      for (int i = 0; i < m.groupCount(); i++)\n        attached.add(m.group(i + 1));\n\n      return new Pair<String, List<String>>(stripped, attached);\n    }\n\n    return null;\n  }","commit_id":"bcb27178618ae55a49fa634b6b3fba3370d363ca","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Read parse trees from a Reader.\n   *\n   * @param in The <code>Reader<\/code>\n   * @param simplifiedTagset If `true`, convert part-of-speech labels to a\n   *          simplified version of the EAGLES tagset, where the tags do not\n   *          include extensive morphological analysis\n   * @param aggressiveNormalization Perform aggressive \"normalization\"\n   *          on the trees read from the provided corpus documents:\n   *          split multi-word tokens into their constituent words (and\n   *          infer parts of speech of the constituent words).\n   */\n  public SpanishXMLTreeReader(Reader in, boolean simplifiedTagset,\n                              boolean aggressiveNormalization) {\n    TreebankLanguagePack tlp = new SpanishTreebankLanguagePack();\n\n    this.simplifiedTagset = simplifiedTagset;\n\n    stream = new ReaderInputStream(in, tlp.getEncoding());\n    treeFactory = new LabeledScoredTreeFactory();\n    treeNormalizer =\n      new SpanishTreeNormalizer(simplifiedTagset,\n                                aggressiveNormalization,\n                                true // retain NER information in\n                                     // preterminals\n                                );\n\n    DocumentBuilder parser = XMLUtils.getXmlParser();\n    try {\n      final Document xml = parser.parse(stream);\n      final Element root = xml.getDocumentElement();\n      sentences = root.getElementsByTagName(NODE_SENT);\n      sentIdx = 0;\n\n    } catch (SAXException e) {\n      e.printStackTrace();\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }","id":15310,"modified_method":"/**\n   * Read parse trees from a Reader.\n   *\n   * @param in The <code>Reader<\/code>\n   * @param simplifiedTagset If `true`, convert part-of-speech labels to a\n   *          simplified version of the EAGLES tagset, where the tags do not\n   *          include extensive morphological analysis\n   * @param aggressiveNormalization Perform aggressive \"normalization\"\n   *          on the trees read from the provided corpus documents:\n   *          split multi-word tokens into their constituent words (and\n   *          infer parts of speech of the constituent words).\n   * @param retainNER Retain NER information in preterminals (for later\n   *          use in `MultiWordPreprocessor) and add NER-specific\n   *          parents to single-word NE tokens\n   */\n  public SpanishXMLTreeReader(Reader in, boolean simplifiedTagset,\n                              boolean aggressiveNormalization,\n                              boolean retainNER) {\n    TreebankLanguagePack tlp = new SpanishTreebankLanguagePack();\n\n    this.simplifiedTagset = simplifiedTagset;\n\n    stream = new ReaderInputStream(in, tlp.getEncoding());\n    treeFactory = new LabeledScoredTreeFactory();\n    treeNormalizer =\n      new SpanishTreeNormalizer(simplifiedTagset,\n                                aggressiveNormalization,\n                                retainNER);\n\n    DocumentBuilder parser = XMLUtils.getXmlParser();\n    try {\n      final Document xml = parser.parse(stream);\n      final Element root = xml.getDocumentElement();\n      sentences = root.getElementsByTagName(NODE_SENT);\n      sentIdx = 0;\n\n    } catch (SAXException e) {\n      e.printStackTrace();\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }","commit_id":"bcb27178618ae55a49fa634b6b3fba3370d363ca","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static Map<String, Integer> argOptionDefs() {\n    Map<String, Integer> argOptionDefs = Generics.newHashMap();\n    argOptionDefs.put(\"help\", 0);\n    argOptionDefs.put(\"plain\", 0);\n    argOptionDefs.put(\"searchPos\", 1);\n    argOptionDefs.put(\"searchWord\", 1);\n    return argOptionDefs;\n  }","id":15311,"modified_method":"private static Map<String, Integer> argOptionDefs() {\n    Map<String, Integer> argOptionDefs = Generics.newHashMap();\n    argOptionDefs.put(\"help\", 0);\n    argOptionDefs.put(\"ner\", 0);\n    argOptionDefs.put(\"plain\", 0);\n    argOptionDefs.put(\"searchPos\", 1);\n    argOptionDefs.put(\"searchWord\", 1);\n    return argOptionDefs;\n  }","commit_id":"bcb27178618ae55a49fa634b6b3fba3370d363ca","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static String usage() {\n    StringBuilder sb = new StringBuilder();\n    String nl = System.getProperty(\"line.separator\");\n    sb.append(String.format(\"Usage: java %s [OPTIONS] file(s)%n%n\", SpanishXMLTreeReader.class.getName()));\n    sb.append(\"Options:\").append(nl);\n    sb.append(\"   -help: Print this message\").append(nl);\n    sb.append(\"   -plain: Output corpus in plaintext rather than as trees\").append(nl);\n    sb.append(\"   -searchPos posRegex: Only print sentences which contain a token whose part of speech matches the given regular expression\").append(nl);\n    sb.append(\"   -searchWord wordRegex: Only print sentences which contain a token which matches the given regular expression\").append(nl);\n    return sb.toString();\n  }","id":15312,"modified_method":"private static String usage() {\n    StringBuilder sb = new StringBuilder();\n    String nl = System.getProperty(\"line.separator\");\n\n    sb.append(String.format(\"Usage: java %s [OPTIONS] file(s)%n%n\", SpanishXMLTreeReader.class.getName()));\n    sb.append(\"Options:\").append(nl);\n    sb.append(\"   -help: Print this message\").append(nl);\n    sb.append(\"   -ner: Add NER-specific information to trees\").append(nl);\n    sb.append(\"   -plain: Output corpus in plaintext rather than as trees\").append(nl);\n    sb.append(\"   -searchPos posRegex: Only print sentences which contain a token whose part of speech matches the given regular expression\").append(nl);\n    sb.append(\"   -searchWord wordRegex: Only print sentences which contain a token which matches the given regular expression\").append(nl);\n\n    return sb.toString();\n  }","commit_id":"bcb27178618ae55a49fa634b6b3fba3370d363ca","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void main(String[] args) {\n    final Properties options = StringUtils.argsToProperties(args, argOptionDefs());\n    if(args.length < 1 || options.containsKey(\"help\")) {\n      System.err.println(usage());\n      return;\n    }\n\n    final Pattern posPattern = options.containsKey(\"searchPos\")\n      ? Pattern.compile(options.getProperty(\"searchPos\")) : null;\n    final Pattern wordPattern = options.containsKey(\"searchWord\")\n      ? Pattern.compile(options.getProperty(\"searchWord\")) : null;\n    final boolean plainPrint = PropertiesUtils.getBool(options, \"plain\", false);\n\n    String[] remainingArgs = options.getProperty(\"\").split(\" \");\n    List<File> fileList = new ArrayList<File>();\n    for(int i = 0; i < remainingArgs.length; i++)\n      fileList.add(new File(remainingArgs[i]));\n\n    final TreeReaderFactory trf = new SpanishXMLTreeReaderFactory(true, true);\n    ExecutorService pool =\n      Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors());\n\n    for (final File file : fileList) {\n      pool.execute(new Runnable() {\n          public void run() {\n            try {\n              TreeReader tr = trf.newTreeReader(new BufferedReader(new InputStreamReader(new FileInputStream(file), \"ISO-8859-1\")));\n              process(file, tr, posPattern, wordPattern, plainPrint);\n              tr.close();\n            } catch (FileNotFoundException e) {\n              e.printStackTrace();\n            } catch (IOException e) {\n              e.printStackTrace();\n            }\n          }\n        });\n    }\n\n    pool.shutdown();\n    try {\n      pool.awaitTermination(Long.MAX_VALUE, TimeUnit.NANOSECONDS);\n    } catch (InterruptedException e) {\n      e.printStackTrace();\n    }\n  }","id":15313,"modified_method":"public static void main(String[] args) {\n    final Properties options = StringUtils.argsToProperties(args, argOptionDefs());\n    if(args.length < 1 || options.containsKey(\"help\")) {\n      System.err.println(usage());\n      return;\n    }\n\n    final Pattern posPattern = options.containsKey(\"searchPos\")\n      ? Pattern.compile(options.getProperty(\"searchPos\")) : null;\n    final Pattern wordPattern = options.containsKey(\"searchWord\")\n      ? Pattern.compile(options.getProperty(\"searchWord\")) : null;\n    final boolean plainPrint = PropertiesUtils.getBool(options, \"plain\", false);\n    final boolean ner = PropertiesUtils.getBool(options, \"ner\", false);\n\n    String[] remainingArgs = options.getProperty(\"\").split(\" \");\n    List<File> fileList = new ArrayList<File>();\n    for(int i = 0; i < remainingArgs.length; i++)\n      fileList.add(new File(remainingArgs[i]));\n\n    final TreeReaderFactory trf = new SpanishXMLTreeReaderFactory(true, true, ner);\n    ExecutorService pool =\n      Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors());\n\n    for (final File file : fileList) {\n      pool.execute(new Runnable() {\n          public void run() {\n            try {\n              TreeReader tr = trf.newTreeReader(new BufferedReader(new InputStreamReader(new FileInputStream(file), \"ISO-8859-1\")));\n              process(file, tr, posPattern, wordPattern, plainPrint);\n              tr.close();\n            } catch (FileNotFoundException e) {\n              e.printStackTrace();\n            } catch (IOException e) {\n              e.printStackTrace();\n            }\n          }\n        });\n    }\n\n    pool.shutdown();\n    try {\n      pool.awaitTermination(Long.MAX_VALUE, TimeUnit.NANOSECONDS);\n    } catch (InterruptedException e) {\n      e.printStackTrace();\n    }\n  }","commit_id":"bcb27178618ae55a49fa634b6b3fba3370d363ca","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Determine the part of speech of the given leaf node.\n   *\n   * Use some heuristics to make up for missing part-of-speech labels.\n   */\n  private String getPOS(Element node) {\n    String pos = node.getAttribute(ATTR_POS);\n\n    // Make up for some missing part-of-speech tags\n    if (pos.equals(\"\")) {\n      String namedAttribute = node.getAttribute(ATTR_NAMED_ENTITY);\n      if (namedAttribute.equals(\"date\")) {\n        return \"w\";\n      } else if (namedAttribute.equals(\"number\")) {\n        return \"z0\";\n      }\n\n      String tagName = node.getTagName();\n      if (tagName.equals(\"i\")) {\n        return \"i\";\n      } else if (tagName.equals(\"r\")) {\n        return \"rg\";\n      } else if (tagName.equals(\"z\")) {\n        return \"z0\";\n      }\n\n      // Handle icky issues related to \"que\"\n      String posType = node.getAttribute(ATTR_POSTYPE);\n      String word = getWord(node);\n      if (tagName.equals(\"c\") && posType.equals(\"subordinating\")) {\n        return \"cs\";\n      } else if (tagName.equals(\"p\") && posType.equals(\"relative\")\n                 && word.equalsIgnoreCase(\"que\")) {\n        return \"pr0cn000\";\n      }\n\n      if (simplifiedTagset) {\n        // If we are using the simplfied tagset, we can make some more\n        // broad inferences\n        if (tagName.equals(\"a\")) {\n          return \"aq0000\";\n        }\n      }\n\n      if (node.hasAttribute(ATTR_PUNCT)) {\n        return \"f\";\n      }\n    }\n\n    return pos;\n  }","id":15314,"modified_method":"/**\n   * Determine the part of speech of the given leaf node.\n   *\n   * Use some heuristics to make up for missing part-of-speech labels.\n   */\n  private String getPOS(Element node) {\n    String pos = node.getAttribute(ATTR_POS);\n\n    String namedAttribute = node.getAttribute(ATTR_NAMED_ENTITY);\n    if (pos.startsWith(\"np\") && pos.length() == 7\n        && pos.charAt(pos.length() - 1) == '0') {\n      // Some nouns are missing a named entity annotation in the final\n      // character of their POS tags, but still have a proper named\n      // entity annotation in the `ne` attribute. Fix this:\n      char annotation = '0';\n      if (namedAttribute.equals(\"location\")) {\n        annotation = 'l';\n      } else if (namedAttribute.equals(\"person\")) {\n        annotation = 'p';\n      } else if (namedAttribute.equals(\"organization\")) {\n        annotation = 'o';\n      }\n\n      pos = pos.substring(0, 6) + annotation;\n    } else if (pos.equals(\"\")) {\n      // Make up for some missing part-of-speech tags\n      if (namedAttribute.equals(\"date\")) {\n        return \"w\";\n      } else if (namedAttribute.equals(\"number\")) {\n        return \"z0\";\n      }\n\n      String tagName = node.getTagName();\n      if (tagName.equals(\"i\")) {\n        return \"i\";\n      } else if (tagName.equals(\"r\")) {\n        return \"rg\";\n      } else if (tagName.equals(\"z\")) {\n        return \"z0\";\n      }\n\n      // Handle icky issues related to \"que\"\n      String posType = node.getAttribute(ATTR_POSTYPE);\n      String word = getWord(node);\n      if (tagName.equals(\"c\") && posType.equals(\"subordinating\")) {\n        return \"cs\";\n      } else if (tagName.equals(\"p\") && posType.equals(\"relative\")\n                 && word.equalsIgnoreCase(\"que\")) {\n        return \"pr0cn000\";\n      }\n\n      if (simplifiedTagset) {\n        // If we are using the simplfied tagset, we can make some more\n        // broad inferences\n        if (tagName.equals(\"a\")) {\n          return \"aq0000\";\n        } else if (posType.equals(\"proper\")) {\n          return \"np00000\";\n        } else if (posType.equals(\"common\")) {\n          return \"nc0s000\";\n        }\n      }\n\n      if (node.hasAttribute(ATTR_PUNCT)) {\n        return \"f\";\n      }\n    }\n\n    return pos;\n  }","commit_id":"bcb27178618ae55a49fa634b6b3fba3370d363ca","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public TreeReader newTreeReader(Reader in) {\n    return new SpanishXMLTreeReader(in, simplifiedTagset, aggressiveNormalization);\n  }","id":15315,"modified_method":"public TreeReader newTreeReader(Reader in) {\n    return new SpanishXMLTreeReader(in, simplifiedTagset, aggressiveNormalization,\n                                    retainNER);\n  }","commit_id":"bcb27178618ae55a49fa634b6b3fba3370d363ca","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public SpanishXMLTreeReaderFactory(boolean simplifiedTagset,\n                                     boolean aggressiveNormalization) {\n    this.simplifiedTagset = simplifiedTagset;\n    this.aggressiveNormalization = aggressiveNormalization;\n  }","id":15316,"modified_method":"public SpanishXMLTreeReaderFactory(boolean simplifiedTagset,\n                                     boolean aggressiveNormalization,\n                                     boolean retainNER) {\n    this.simplifiedTagset = simplifiedTagset;\n    this.aggressiveNormalization = aggressiveNormalization;\n    this.retainNER = retainNER;\n  }","commit_id":"bcb27178618ae55a49fa634b6b3fba3370d363ca","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Expand grandchild tokens which are elided forms of multi-word\n   * expressions ('al,' 'del').\n   *\n   * We perform this expansion separately from multi-word expansion\n   * because we follow special rules about where the expanded tokens\n   * should be placed in the case of elision.\n   *\n   * @param t Tree representing an entire sentence\n   * @param tf\n   */\n  private void expandElisions(Tree t, TreeFactory tf) {\n    Tsurgeon.processPatternsOnTree(elisionExpansions, t);\n  }","id":15317,"modified_method":"/**\n   * Expand grandchild tokens which are elided forms of multi-word\n   * expressions ('al,' 'del').\n   *\n   * We perform this expansion separately from multi-word expansion\n   * because we follow special rules about where the expanded tokens\n   * should be placed in the case of elision.\n   *\n   * @param t Tree representing an entire sentence\n   */\n  private Tree expandElisions(Tree t) {\n    return Tsurgeon.processPatternsOnTree(elisionExpansions, t);\n  }","commit_id":"dd796104158dab8123a2aa6b9d91441b33b46f11","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    // First filter out nodes we don't like\n    tree = tree.prune(emptyFilter);\n\n    // Counter for part-of-speech statistics\n    TwoDimensionalCounter<String, String> unigramTagger =\n      new TwoDimensionalCounter<String, String>();\n\n    for (Tree t : tree) {\n      if (simplifiedTagset && t.isPreTerminal()) {\n        // This is a part of speech tag. Remove extra morphological\n        // information.\n        CoreLabel label = (CoreLabel) t.label();\n        String pos = label.value();\n\n        pos = simplifyPOSTag(pos).intern();\n        label.setValue(pos);\n        label.setTag(pos);\n      } else if (aggressiveNormalization && isMultiWordCandidate(t)) {\n        // Expand multi-word token if necessary\n        normalizeForMultiWord(t, tf);\n      }\n    }\n\n    // Now attack elisions: 'al' and 'del'\n    expandElisions(tree, tf);\n\n    return tree;\n  }","id":15318,"modified_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    // First filter out nodes we don't like\n    tree = tree.prune(emptyFilter);\n\n    // Find all named entities which are not multi-word tokens and nest\n    // them within named entity NP groups\n    if (retainNER)\n      markSimpleNamedEntities(tree);\n\n    // Counter for part-of-speech statistics\n    TwoDimensionalCounter<String, String> unigramTagger =\n      new TwoDimensionalCounter<String, String>();\n\n    for (Tree t : tree) {\n      if (simplifiedTagset && t.isPreTerminal()) {\n        // This is a part of speech tag. Remove extra morphological\n        // information.\n        CoreLabel label = (CoreLabel) t.label();\n        String pos = label.value();\n\n        pos = simplifyPOSTag(pos).intern();\n        label.setValue(pos);\n        label.setTag(pos);\n      } else if (aggressiveNormalization && isMultiWordCandidate(t)) {\n        // Expand multi-word token if necessary\n        normalizeForMultiWord(t, tf);\n      }\n    }\n\n    // More tregex-powered fixes\n    tree = expandElisions(tree);\n    tree = expandCliticPronouns(tree);\n\n    return tree;\n  }","commit_id":"dd796104158dab8123a2aa6b9d91441b33b46f11","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Normalize a pre-pre-terminal tree node by accounting for multi-word\n   * tokens.\n   *\n   * Detects multi-word tokens in leaves below this pre-pre-terminal and\n   * expands their constituent words into separate leaves.\n   */\n  void normalizeForMultiWord(Tree t, TreeFactory tf) {\n    Tree[] preterminals = t.children();\n\n    for (int i = 0; i < preterminals.length; i++) {\n      // This particular child is not actually a preterminal --- skip\n      if (!preterminals[i].isPreTerminal())\n        continue;\n\n      Tree leaf = preterminals[i].firstChild();\n      String leafValue = ((CoreLabel) leaf.label()).value();\n\n      String[] words = getMultiWords(leafValue);\n      if (words.length == 1)\n        continue;\n\n      // Leaf is a multi-word token; build new nodes for each of its\n      // constituent words\n      List<Tree> newNodes = new ArrayList<Tree>(words.length);\n      for (int j = 0; j < words.length; j++) {\n        String word = words[j];\n\n        Tree newLeaf = tf.newLeaf(word);\n        if (newLeaf.label() instanceof HasWord)\n          ((HasWord) newLeaf.label()).setWord(word);\n\n        Tree newNode = tf.newTreeNode(MW_TAG, Arrays.asList(newLeaf));\n        if (newNode.label() instanceof HasTag)\n          ((HasTag) newNode.label()).setTag(MW_TAG);\n\n        newNodes.add(newNode);\n      }\n\n      // Value of the phrase which should head these preterminals. Mark\n      // that this was created from a multiword token, and also retain\n      // the original parts of speech.\n      String phraseValue = MW_PHRASE_TAG + \"_\"\n        + simplifyPOSTag(preterminals[i].value());\n\n      // Should we insert these new nodes as children of the parent `t`\n      // (i.e., \"merge\" the multi-word token phrase into its parent), or\n      // head them with a new node and set that as a child of the\n      // parent?\n      boolean shouldMerge = preterminals.length == 1\n        && mergeWithConstituentWhenPossible.contains(t.value());\n\n      if (shouldMerge) {\n        t.setChildren(newNodes);\n        t.setValue(phraseValue);\n      } else {\n        Tree newHead = tf.newTreeNode(phraseValue, newNodes);\n        t.setChild(i, newHead);\n      }\n    }\n  }","id":15319,"modified_method":"/**\n   * Normalize a pre-pre-terminal tree node by accounting for multi-word\n   * tokens.\n   *\n   * Detects multi-word tokens in leaves below this pre-pre-terminal and\n   * expands their constituent words into separate leaves.\n   */\n  void normalizeForMultiWord(Tree t, TreeFactory tf) {\n    Tree[] preterminals = t.children();\n\n    for (int i = 0; i < preterminals.length; i++) {\n      // This particular child is not actually a preterminal --- skip\n      if (!preterminals[i].isPreTerminal())\n        continue;\n\n      Tree leaf = preterminals[i].firstChild();\n      String leafValue = ((CoreLabel) leaf.label()).value();\n\n      String[] words = getMultiWords(leafValue);\n      if (words.length == 1)\n        continue;\n\n      // Leaf is a multi-word token; build new nodes for each of its\n      // constituent words\n      List<Tree> newNodes = new ArrayList<Tree>(words.length);\n      for (int j = 0; j < words.length; j++) {\n        String word = normalizeTerminal(words[j]);\n\n        Tree newLeaf = tf.newLeaf(word);\n        if (newLeaf.label() instanceof HasWord)\n          ((HasWord) newLeaf.label()).setWord(word);\n\n        Tree newNode = tf.newTreeNode(MW_TAG, Arrays.asList(newLeaf));\n        if (newNode.label() instanceof HasTag)\n          ((HasTag) newNode.label()).setTag(MW_TAG);\n\n        newNodes.add(newNode);\n      }\n\n      // Value of the phrase which should head these preterminals. Mark\n      // that this was created from a multiword token, and also retain\n      // the original parts of speech.\n      String phraseValue = MW_PHRASE_TAG + \"_\"\n        + simplifyPOSTag(preterminals[i].value());\n\n      // Should we insert these new nodes as children of the parent `t`\n      // (i.e., \"merge\" the multi-word token phrase into its parent), or\n      // head them with a new node and set that as a child of the\n      // parent?\n      boolean shouldMerge = preterminals.length == 1\n        && mergeWithConstituentWhenPossible.contains(t.value());\n\n      if (shouldMerge) {\n        t.setChildren(newNodes);\n        t.setValue(phraseValue);\n      } else {\n        Tree newHead = tf.newTreeNode(phraseValue, newNodes);\n        t.setChild(i, newHead);\n      }\n    }\n  }","commit_id":"dd796104158dab8123a2aa6b9d91441b33b46f11","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Remove attached pronouns from a strippable Spanish verb form. (Use\n   * {@link #isStrippable(String)} to determine if a word is a\n   * strippable verb.)\n   *\n   * Converts e.g.\n   *\n   *   - decírmelo -> decir\n   *   - mudarse -> mudar\n   *   - contándolos -> contando\n   *   - hazlo -> haz\n   */\n  public static String stripVerb(String verb) {\n    String stripped = stripSuffix(verb, pOneAttachedPronoun);\n    if(stripped == null || (!isVerb(stripped) && !isVerb(stripped + \"d\"))) {\n      System.out.println(stripped);\n      stripped = stripSuffix(verb, pTwoAttachedPronouns);\n      if(stripped == null || (!isVerb(stripped) && !isVerb(stripped + \"d\"))) {\n        System.out.println(stripped);\n        return null;\n      }\n    }\n    return stripped;\n  }","id":15320,"modified_method":"/**\n   * Remove attached pronouns from a strippable Spanish verb form. (Use\n   * {@link #isStrippable(String)} to determine if a word is a\n   * strippable verb.)\n   *\n   * Converts e.g.\n   *\n   *   - decírmelo -> decir\n   *   - mudarse -> mudar\n   *   - contándolos -> contando\n   *   - hazlo -> haz\n   *\n   * @return A verb form stripped of attached pronouns, or <tt>null<\/tt>\n   *           if no pronouns were located / stripped.\n   */\n  public static String stripVerb(String verb) {\n    Pair<String, List<String>> separated = separatePronouns(verb);\n    if (separated != null)\n      return separated.first();\n\n    return null;\n  }","commit_id":"dd796104158dab8123a2aa6b9d91441b33b46f11","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Strips the suffix matched by @pSuffix off of @word and returns\n   * the stripped word, null if unable to strip.\n   */\n  private static String stripSuffix(String word, Pattern pSuffix) {\n    Matcher m = pSuffix.matcher(word);\n    if(m.find()) {\n      String stripped = word.substring(0, m.start());\n      System.out.println(m.start());\n      return removeAccents(stripped);\n    }\n    return null;\n  }","id":15321,"modified_method":"/**\n   * Separate attached pronouns from the given verb.\n   *\n   * @param word A valid Spanish verb with clitic pronouns attached.\n   * @param pSuffix A pattern to match these attached pronouns.\n   * @return A pair containing the verb (pronouns removed by the given\n   *           pattern) and a list of the pronouns which were attached\n   *           to the verb.\n   */\n  private static Pair<String, List<String>> stripSuffix(String word,\n                                                        Pattern pSuffix) {\n    Matcher m = pSuffix.matcher(word);\n    if(m.find()) {\n      String stripped = word.substring(0, m.start());\n      System.out.println(m.start());\n      stripped = removeAccents(stripped);\n\n      List<String> attached = new ArrayList<String>();\n      for (int i = 0; i < m.groupCount(); i++)\n        attached.add(m.group(i + 1));\n\n      return new Pair<String, List<String>>(stripped, attached);\n    }\n\n    return null;\n  }","commit_id":"dd796104158dab8123a2aa6b9d91441b33b46f11","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static String usage() {\n    StringBuilder sb = new StringBuilder();\n    String nl = System.getProperty(\"line.separator\");\n    sb.append(String.format(\"Usage: java %s [OPTIONS] file(s)%n%n\", SpanishXMLTreeReader.class.getName()));\n    sb.append(\"Options:\").append(nl);\n    sb.append(\"   -help: Print this message\").append(nl);\n    sb.append(\"   -plain: Output corpus in plaintext rather than as trees\").append(nl);\n    sb.append(\"   -searchPos posRegex: Only print sentences which contain a token whose part of speech matches the given regular expression\").append(nl);\n    sb.append(\"   -searchWord wordRegex: Only print sentences which contain a token which matches the given regular expression\").append(nl);\n    return sb.toString();\n  }","id":15322,"modified_method":"private static String usage() {\n    StringBuilder sb = new StringBuilder();\n    String nl = System.getProperty(\"line.separator\");\n\n    sb.append(String.format(\"Usage: java %s [OPTIONS] file(s)%n%n\", SpanishXMLTreeReader.class.getName()));\n    sb.append(\"Options:\").append(nl);\n    sb.append(\"   -help: Print this message\").append(nl);\n    sb.append(\"   -ner: Add NER-specific information to trees\").append(nl);\n    sb.append(\"   -plain: Output corpus in plaintext rather than as trees\").append(nl);\n    sb.append(\"   -searchPos posRegex: Only print sentences which contain a token whose part of speech matches the given regular expression\").append(nl);\n    sb.append(\"   -searchWord wordRegex: Only print sentences which contain a token which matches the given regular expression\").append(nl);\n\n    return sb.toString();\n  }","commit_id":"dd796104158dab8123a2aa6b9d91441b33b46f11","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Determine the part of speech of the given leaf node.\n   *\n   * Use some heuristics to make up for missing part-of-speech labels.\n   */\n  private String getPOS(Element node) {\n    String pos = node.getAttribute(ATTR_POS);\n\n    // Make up for some missing part-of-speech tags\n    if (pos.equals(\"\")) {\n      String namedAttribute = node.getAttribute(ATTR_NAMED_ENTITY);\n      if (namedAttribute.equals(\"date\")) {\n        return \"w\";\n      } else if (namedAttribute.equals(\"number\")) {\n        return \"z0\";\n      }\n\n      String tagName = node.getTagName();\n      if (tagName.equals(\"i\")) {\n        return \"i\";\n      } else if (tagName.equals(\"r\")) {\n        return \"rg\";\n      } else if (tagName.equals(\"z\")) {\n        return \"z0\";\n      }\n\n      // Handle icky issues related to \"que\"\n      String posType = node.getAttribute(ATTR_POSTYPE);\n      String word = getWord(node);\n      if (tagName.equals(\"c\") && posType.equals(\"subordinating\")) {\n        return \"cs\";\n      } else if (tagName.equals(\"p\") && posType.equals(\"relative\")\n                 && word.equalsIgnoreCase(\"que\")) {\n        return \"pr0cn000\";\n      }\n\n      if (simplifiedTagset) {\n        // If we are using the simplfied tagset, we can make some more\n        // broad inferences\n        if (tagName.equals(\"a\")) {\n          return \"aq0000\";\n        }\n      }\n\n      if (node.hasAttribute(ATTR_PUNCT)) {\n        return \"f\";\n      }\n    }\n\n    return pos;\n  }","id":15323,"modified_method":"/**\n   * Determine the part of speech of the given leaf node.\n   *\n   * Use some heuristics to make up for missing part-of-speech labels.\n   */\n  private String getPOS(Element node) {\n    String pos = node.getAttribute(ATTR_POS);\n\n    String namedAttribute = node.getAttribute(ATTR_NAMED_ENTITY);\n    if (pos.startsWith(\"np\") && pos.length() == 7\n        && pos.charAt(pos.length() - 1) == '0') {\n      // Some nouns are missing a named entity annotation in the final\n      // character of their POS tags, but still have a proper named\n      // entity annotation in the `ne` attribute. Fix this:\n      char annotation = '0';\n      if (namedAttribute.equals(\"location\")) {\n        annotation = 'l';\n      } else if (namedAttribute.equals(\"person\")) {\n        annotation = 'p';\n      } else if (namedAttribute.equals(\"organization\")) {\n        annotation = 'o';\n      }\n\n      pos = pos.substring(0, 6) + annotation;\n    } else if (pos.equals(\"\")) {\n      // Make up for some missing part-of-speech tags\n      if (namedAttribute.equals(\"date\")) {\n        return \"w\";\n      } else if (namedAttribute.equals(\"number\")) {\n        return \"z0\";\n      }\n\n      String tagName = node.getTagName();\n      if (tagName.equals(\"i\")) {\n        return \"i\";\n      } else if (tagName.equals(\"r\")) {\n        return \"rg\";\n      } else if (tagName.equals(\"z\")) {\n        return \"z0\";\n      }\n\n      // Handle icky issues related to \"que\"\n      String posType = node.getAttribute(ATTR_POSTYPE);\n      String word = getWord(node);\n      if (tagName.equals(\"c\") && posType.equals(\"subordinating\")) {\n        return \"cs\";\n      } else if (tagName.equals(\"p\") && posType.equals(\"relative\")\n                 && word.equalsIgnoreCase(\"que\")) {\n        return \"pr0cn000\";\n      }\n\n      if (simplifiedTagset) {\n        // If we are using the simplfied tagset, we can make some more\n        // broad inferences\n        if (tagName.equals(\"a\")) {\n          return \"aq0000\";\n        } else if (posType.equals(\"proper\")) {\n          return \"np00000\";\n        } else if (posType.equals(\"common\")) {\n          return \"nc0s000\";\n        }\n      }\n\n      if (node.hasAttribute(ATTR_PUNCT)) {\n        return \"f\";\n      }\n    }\n\n    return pos;\n  }","commit_id":"dd796104158dab8123a2aa6b9d91441b33b46f11","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static Map<String, Integer> argOptionDefs() {\n    Map<String, Integer> argOptionDefs = Generics.newHashMap();\n    argOptionDefs.put(\"help\", 0);\n    argOptionDefs.put(\"plain\", 0);\n    argOptionDefs.put(\"searchPos\", 1);\n    argOptionDefs.put(\"searchWord\", 1);\n    return argOptionDefs;\n  }","id":15324,"modified_method":"private static Map<String, Integer> argOptionDefs() {\n    Map<String, Integer> argOptionDefs = Generics.newHashMap();\n    argOptionDefs.put(\"help\", 0);\n    argOptionDefs.put(\"ner\", 0);\n    argOptionDefs.put(\"plain\", 0);\n    argOptionDefs.put(\"searchPos\", 1);\n    argOptionDefs.put(\"searchWord\", 1);\n    return argOptionDefs;\n  }","commit_id":"dd796104158dab8123a2aa6b9d91441b33b46f11","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Read parse trees from a Reader.\n   *\n   * @param in The <code>Reader<\/code>\n   * @param simplifiedTagset If `true`, convert part-of-speech labels to a\n   *          simplified version of the EAGLES tagset, where the tags do not\n   *          include extensive morphological analysis\n   * @param aggressiveNormalization Perform aggressive \"normalization\"\n   *          on the trees read from the provided corpus documents:\n   *          split multi-word tokens into their constituent words (and\n   *          infer parts of speech of the constituent words).\n   */\n  public SpanishXMLTreeReader(Reader in, boolean simplifiedTagset,\n                              boolean aggressiveNormalization) {\n    TreebankLanguagePack tlp = new SpanishTreebankLanguagePack();\n\n    this.simplifiedTagset = simplifiedTagset;\n\n    stream = new ReaderInputStream(in, tlp.getEncoding());\n    treeFactory = new LabeledScoredTreeFactory();\n    treeNormalizer =\n      new SpanishTreeNormalizer(simplifiedTagset,\n                                aggressiveNormalization,\n                                true // retain NER information in\n                                     // preterminals\n                                );\n\n    DocumentBuilder parser = XMLUtils.getXmlParser();\n    try {\n      final Document xml = parser.parse(stream);\n      final Element root = xml.getDocumentElement();\n      sentences = root.getElementsByTagName(NODE_SENT);\n      sentIdx = 0;\n\n    } catch (SAXException e) {\n      e.printStackTrace();\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }","id":15325,"modified_method":"/**\n   * Read parse trees from a Reader.\n   *\n   * @param in The <code>Reader<\/code>\n   * @param simplifiedTagset If `true`, convert part-of-speech labels to a\n   *          simplified version of the EAGLES tagset, where the tags do not\n   *          include extensive morphological analysis\n   * @param aggressiveNormalization Perform aggressive \"normalization\"\n   *          on the trees read from the provided corpus documents:\n   *          split multi-word tokens into their constituent words (and\n   *          infer parts of speech of the constituent words).\n   * @param retainNER Retain NER information in preterminals (for later\n   *          use in `MultiWordPreprocessor) and add NER-specific\n   *          parents to single-word NE tokens\n   */\n  public SpanishXMLTreeReader(Reader in, boolean simplifiedTagset,\n                              boolean aggressiveNormalization,\n                              boolean retainNER) {\n    TreebankLanguagePack tlp = new SpanishTreebankLanguagePack();\n\n    this.simplifiedTagset = simplifiedTagset;\n\n    stream = new ReaderInputStream(in, tlp.getEncoding());\n    treeFactory = new LabeledScoredTreeFactory();\n    treeNormalizer =\n      new SpanishTreeNormalizer(simplifiedTagset,\n                                aggressiveNormalization,\n                                retainNER);\n\n    DocumentBuilder parser = XMLUtils.getXmlParser();\n    try {\n      final Document xml = parser.parse(stream);\n      final Element root = xml.getDocumentElement();\n      sentences = root.getElementsByTagName(NODE_SENT);\n      sentIdx = 0;\n\n    } catch (SAXException e) {\n      e.printStackTrace();\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }","commit_id":"dd796104158dab8123a2aa6b9d91441b33b46f11","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void main(String[] args) {\n    final Properties options = StringUtils.argsToProperties(args, argOptionDefs());\n    if(args.length < 1 || options.containsKey(\"help\")) {\n      System.err.println(usage());\n      return;\n    }\n\n    final Pattern posPattern = options.containsKey(\"searchPos\")\n      ? Pattern.compile(options.getProperty(\"searchPos\")) : null;\n    final Pattern wordPattern = options.containsKey(\"searchWord\")\n      ? Pattern.compile(options.getProperty(\"searchWord\")) : null;\n    final boolean plainPrint = PropertiesUtils.getBool(options, \"plain\", false);\n\n    String[] remainingArgs = options.getProperty(\"\").split(\" \");\n    List<File> fileList = new ArrayList<File>();\n    for(int i = 0; i < remainingArgs.length; i++)\n      fileList.add(new File(remainingArgs[i]));\n\n    final TreeReaderFactory trf = new SpanishXMLTreeReaderFactory(true, true);\n    ExecutorService pool =\n      Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors());\n\n    for (final File file : fileList) {\n      pool.execute(new Runnable() {\n          public void run() {\n            try {\n              TreeReader tr = trf.newTreeReader(new BufferedReader(new InputStreamReader(new FileInputStream(file), \"ISO-8859-1\")));\n              process(file, tr, posPattern, wordPattern, plainPrint);\n              tr.close();\n            } catch (FileNotFoundException e) {\n              e.printStackTrace();\n            } catch (IOException e) {\n              e.printStackTrace();\n            }\n          }\n        });\n    }\n\n    pool.shutdown();\n    try {\n      pool.awaitTermination(Long.MAX_VALUE, TimeUnit.NANOSECONDS);\n    } catch (InterruptedException e) {\n      e.printStackTrace();\n    }\n  }","id":15326,"modified_method":"public static void main(String[] args) {\n    final Properties options = StringUtils.argsToProperties(args, argOptionDefs());\n    if(args.length < 1 || options.containsKey(\"help\")) {\n      System.err.println(usage());\n      return;\n    }\n\n    final Pattern posPattern = options.containsKey(\"searchPos\")\n      ? Pattern.compile(options.getProperty(\"searchPos\")) : null;\n    final Pattern wordPattern = options.containsKey(\"searchWord\")\n      ? Pattern.compile(options.getProperty(\"searchWord\")) : null;\n    final boolean plainPrint = PropertiesUtils.getBool(options, \"plain\", false);\n    final boolean ner = PropertiesUtils.getBool(options, \"ner\", false);\n\n    String[] remainingArgs = options.getProperty(\"\").split(\" \");\n    List<File> fileList = new ArrayList<File>();\n    for(int i = 0; i < remainingArgs.length; i++)\n      fileList.add(new File(remainingArgs[i]));\n\n    final TreeReaderFactory trf = new SpanishXMLTreeReaderFactory(true, true, ner);\n    ExecutorService pool =\n      Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors());\n\n    for (final File file : fileList) {\n      pool.execute(new Runnable() {\n          public void run() {\n            try {\n              TreeReader tr = trf.newTreeReader(new BufferedReader(new InputStreamReader(new FileInputStream(file), \"ISO-8859-1\")));\n              process(file, tr, posPattern, wordPattern, plainPrint);\n              tr.close();\n            } catch (FileNotFoundException e) {\n              e.printStackTrace();\n            } catch (IOException e) {\n              e.printStackTrace();\n            }\n          }\n        });\n    }\n\n    pool.shutdown();\n    try {\n      pool.awaitTermination(Long.MAX_VALUE, TimeUnit.NANOSECONDS);\n    } catch (InterruptedException e) {\n      e.printStackTrace();\n    }\n  }","commit_id":"dd796104158dab8123a2aa6b9d91441b33b46f11","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public TreeReader newTreeReader(Reader in) {\n    return new SpanishXMLTreeReader(in, simplifiedTagset, aggressiveNormalization);\n  }","id":15327,"modified_method":"public TreeReader newTreeReader(Reader in) {\n    return new SpanishXMLTreeReader(in, simplifiedTagset, aggressiveNormalization,\n                                    retainNER);\n  }","commit_id":"dd796104158dab8123a2aa6b9d91441b33b46f11","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public SpanishXMLTreeReaderFactory(boolean simplifiedTagset,\n                                     boolean aggressiveNormalization) {\n    this.simplifiedTagset = simplifiedTagset;\n    this.aggressiveNormalization = aggressiveNormalization;\n  }","id":15328,"modified_method":"public SpanishXMLTreeReaderFactory(boolean simplifiedTagset,\n                                     boolean aggressiveNormalization,\n                                     boolean retainNER) {\n    this.simplifiedTagset = simplifiedTagset;\n    this.aggressiveNormalization = aggressiveNormalization;\n    this.retainNER = retainNER;\n  }","commit_id":"dd796104158dab8123a2aa6b9d91441b33b46f11","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Strips the suffix matched by @pSuffix off of @word and returns\n   * the stripped word, null if unable to strip.\n   */\n  private static String stripSuffix(String word, Pattern pSuffix) {\n    Matcher m = pSuffix.matcher(word);\n    if(m.find()) {\n      String stripped = word.substring(0, m.start());\n      System.out.println(m.start());\n      return removeAccents(stripped);\n    }\n    return null;\n  }","id":15329,"modified_method":"/**\n   * Separate attached pronouns from the given verb.\n   *\n   * @param word A valid Spanish verb with clitic pronouns attached.\n   * @param pSuffix A pattern to match these attached pronouns.\n   * @return A pair containing the verb (pronouns removed by the given\n   *           pattern) and a list of the pronouns which were attached\n   *           to the verb.\n   */\n  private static Pair<String, List<String>> stripSuffix(String word,\n                                                        Pattern pSuffix) {\n    Matcher m = pSuffix.matcher(word);\n    if(m.find()) {\n      String stripped = word.substring(0, m.start());\n      System.out.println(m.start());\n      stripped = removeAccents(stripped);\n\n      List<String> attached = new ArrayList<String>();\n      for (int i = 0; i < m.groupCount(); i++)\n        attached.add(m.group(i + 1));\n\n      return new Pair<String, List<String>>(stripped, attached);\n    }\n\n    return null;\n  }","commit_id":"bc056c6ba14583e8f3514a56f3a5fce2181d3ec4","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Remove attached pronouns from a strippable Spanish verb form. (Use\n   * {@link #isStrippable(String)} to determine if a word is a\n   * strippable verb.)\n   *\n   * Converts e.g.\n   *\n   *   - decírmelo -> decir\n   *   - mudarse -> mudar\n   *   - contándolos -> contando\n   *   - hazlo -> haz\n   */\n  public static String stripVerb(String verb) {\n    String stripped = stripSuffix(verb, pOneAttachedPronoun);\n    if(stripped == null || (!isVerb(stripped) && !isVerb(stripped + \"d\"))) {\n      System.out.println(stripped);\n      stripped = stripSuffix(verb, pTwoAttachedPronouns);\n      if(stripped == null || (!isVerb(stripped) && !isVerb(stripped + \"d\"))) {\n        System.out.println(stripped);\n        return null;\n      }\n    }\n    return stripped;\n  }","id":15330,"modified_method":"/**\n   * Remove attached pronouns from a strippable Spanish verb form. (Use\n   * {@link #isStrippable(String)} to determine if a word is a\n   * strippable verb.)\n   *\n   * Converts e.g.\n   *\n   *   - decírmelo -> decir\n   *   - mudarse -> mudar\n   *   - contándolos -> contando\n   *   - hazlo -> haz\n   *\n   * @return A verb form stripped of attached pronouns, or <tt>null<\/tt>\n   *           if no pronouns were located / stripped.\n   */\n  public static String stripVerb(String verb) {\n    Pair<String, List<String>> separated = separatePronouns(verb);\n    if (separated != null)\n      return separated.first();\n\n    return null;\n  }","commit_id":"bc056c6ba14583e8f3514a56f3a5fce2181d3ec4","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static void resolveDummyTags(File treeFile,\n                                       TwoDimensionalCounter<String, String> pretermLabel,\n                                       TwoDimensionalCounter<String, String> unigramTagger,\n                                       boolean retainNER, TreeNormalizer tn) {\n    TreeFactory tf = new LabeledScoredTreeFactory();\n\n    try {\n      BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(treeFile), \"UTF-8\"));\n      TreeReaderFactory trf = new SpanishTreeReaderFactory();\n      TreeReader tr = trf.newTreeReader(br);\n\n      PrintWriter pw = new PrintWriter(new PrintStream(new FileOutputStream(new File(treeFile + \".fixed\")),false,\"UTF-8\"));\n\n      int nTrees = 0;\n      for(Tree t; (t = tr.readTree()) != null;nTrees++) {\n        traverseAndFix(t, null, pretermLabel, unigramTagger, retainNER);\n\n        if (tn != null)\n          t = tn.normalizeWholeTree(t, tf);\n\n        pw.println(t.toString());\n      }\n\n      pw.close();\n      tr.close();\n\n      System.out.println(\"Processed \" +nTrees+ \" trees\");\n\n    } catch (UnsupportedEncodingException e) {\n      e.printStackTrace();\n    } catch (FileNotFoundException e) {\n      e.printStackTrace();\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }","id":15331,"modified_method":"private static void resolveDummyTags(File treeFile,\n                                       TwoDimensionalCounter<String, String> pretermLabel,\n                                       TwoDimensionalCounter<String, String> unigramTagger,\n                                       boolean retainNER, TreeNormalizer tn) {\n    TreeFactory tf = new LabeledScoredTreeFactory();\n\n    try {\n      BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(treeFile), \"UTF-8\"));\n      TreeReaderFactory trf = new SpanishTreeReaderFactory();\n      TreeReader tr = trf.newTreeReader(br);\n\n      PrintWriter pw = new PrintWriter(new PrintStream(new FileOutputStream(new File(treeFile + \".fixed\")),false,\"UTF-8\"));\n\n      int nTrees = 0;\n      for(Tree t; (t = tr.readTree()) != null;nTrees++) {\n        traverseAndFix(t, null, pretermLabel, unigramTagger, retainNER);\n\n        // Now \"decompress\" further the expanded trees formed by\n        // multiword token splitting\n        t = MultiWordTreeExpander.expandPhrases(t);\n\n        if (tn != null)\n          t = tn.normalizeWholeTree(t, tf);\n\n        pw.println(t.toString());\n      }\n\n      pw.close();\n      tr.close();\n\n      System.out.println(\"Processed \" +nTrees+ \" trees\");\n\n    } catch (UnsupportedEncodingException e) {\n      e.printStackTrace();\n    } catch (FileNotFoundException e) {\n      e.printStackTrace();\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }","commit_id":"6efedf005c8fc2c6b112fa86bd0299c3bf76286e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void updateTagger(TwoDimensionalCounter<String,String> tagger,\n                                  Tree t) {\n    List<CoreLabel> yield = t.taggedLabeledYield();\n    for (CoreLabel cl : yield) {\n      if (cl.tag().equals(SpanishTreeNormalizer.MW_TAG))\n        continue;\n\n      tagger.incrementCount(cl.word(), cl.tag());\n    }\n  }","id":15332,"modified_method":"/**\n   * Source training data for a unigram tagger from the given tree.\n   */\n  public static void updateTagger(TwoDimensionalCounter<String,String> tagger,\n                                  Tree t) {\n    List<CoreLabel> yield = t.taggedLabeledYield();\n    for (CoreLabel cl : yield) {\n      if (cl.tag().equals(SpanishTreeNormalizer.MW_TAG))\n        continue;\n\n      tagger.incrementCount(cl.word(), cl.tag());\n    }\n  }","commit_id":"6efedf005c8fc2c6b112fa86bd0299c3bf76286e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    // First filter out nodes we don't like\n    tree = tree.prune(emptyFilter);\n\n    // Counter for part-of-speech statistics\n    TwoDimensionalCounter<String, String> unigramTagger =\n      new TwoDimensionalCounter<String, String>();\n\n    for (Tree t : tree) {\n      if (simplifiedTagset && t.isPreTerminal()) {\n        // This is a part of speech tag. Remove extra morphological\n        // information.\n        CoreLabel label = (CoreLabel) t.label();\n        String pos = label.value();\n\n        pos = simplifyPOSTag(pos).intern();\n        label.setValue(pos);\n        label.setTag(pos);\n      } else if (aggressiveNormalization && isMultiWordCandidate(t)) {\n        // Expand multi-word token if necessary\n        normalizeForMultiWord(t, tf);\n      }\n    }\n\n    // Now attack elisions: 'al' and 'del'\n    expandElisions(tree, tf);\n\n    return tree;\n  }","id":15333,"modified_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    // First filter out nodes we don't like\n    tree = tree.prune(emptyFilter);\n\n    // Find all named entities which are not multi-word tokens and nest\n    // them within named entity NP groups\n    if (retainNER)\n      markSimpleNamedEntities(tree);\n\n    // Counter for part-of-speech statistics\n    TwoDimensionalCounter<String, String> unigramTagger =\n      new TwoDimensionalCounter<String, String>();\n\n    for (Tree t : tree) {\n      if (simplifiedTagset && t.isPreTerminal()) {\n        // This is a part of speech tag. Remove extra morphological\n        // information.\n        CoreLabel label = (CoreLabel) t.label();\n        String pos = label.value();\n\n        pos = simplifyPOSTag(pos).intern();\n        label.setValue(pos);\n        label.setTag(pos);\n      } else if (aggressiveNormalization && isMultiWordCandidate(t)) {\n        // Expand multi-word token if necessary\n        normalizeForMultiWord(t, tf);\n      }\n    }\n\n    // More tregex-powered fixes\n    tree = expandElisions(tree);\n    tree = expandCliticPronouns(tree);\n\n    return tree;\n  }","commit_id":"6efedf005c8fc2c6b112fa86bd0299c3bf76286e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Normalize a pre-pre-terminal tree node by accounting for multi-word\n   * tokens.\n   *\n   * Detects multi-word tokens in leaves below this pre-pre-terminal and\n   * expands their constituent words into separate leaves.\n   */\n  void normalizeForMultiWord(Tree t, TreeFactory tf) {\n    Tree[] preterminals = t.children();\n\n    for (int i = 0; i < preterminals.length; i++) {\n      // This particular child is not actually a preterminal --- skip\n      if (!preterminals[i].isPreTerminal())\n        continue;\n\n      Tree leaf = preterminals[i].firstChild();\n      String leafValue = ((CoreLabel) leaf.label()).value();\n\n      String[] words = getMultiWords(leafValue);\n      if (words.length == 1)\n        continue;\n\n      // Leaf is a multi-word token; build new nodes for each of its\n      // constituent words\n      List<Tree> newNodes = new ArrayList<Tree>(words.length);\n      for (int j = 0; j < words.length; j++) {\n        String word = words[j];\n\n        Tree newLeaf = tf.newLeaf(word);\n        if (newLeaf.label() instanceof HasWord)\n          ((HasWord) newLeaf.label()).setWord(word);\n\n        Tree newNode = tf.newTreeNode(MW_TAG, Arrays.asList(newLeaf));\n        if (newNode.label() instanceof HasTag)\n          ((HasTag) newNode.label()).setTag(MW_TAG);\n\n        newNodes.add(newNode);\n      }\n\n      // Value of the phrase which should head these preterminals. Mark\n      // that this was created from a multiword token, and also retain\n      // the original parts of speech.\n      String phraseValue = MW_PHRASE_TAG + \"_\"\n        + simplifyPOSTag(preterminals[i].value());\n\n      // Should we insert these new nodes as children of the parent `t`\n      // (i.e., \"merge\" the multi-word token phrase into its parent), or\n      // head them with a new node and set that as a child of the\n      // parent?\n      boolean shouldMerge = preterminals.length == 1\n        && mergeWithConstituentWhenPossible.contains(t.value());\n\n      if (shouldMerge) {\n        t.setChildren(newNodes);\n        t.setValue(phraseValue);\n      } else {\n        Tree newHead = tf.newTreeNode(phraseValue, newNodes);\n        t.setChild(i, newHead);\n      }\n    }\n  }","id":15334,"modified_method":"/**\n   * Normalize a pre-pre-terminal tree node by accounting for multi-word\n   * tokens.\n   *\n   * Detects multi-word tokens in leaves below this pre-pre-terminal and\n   * expands their constituent words into separate leaves.\n   */\n  void normalizeForMultiWord(Tree t, TreeFactory tf) {\n    Tree[] preterminals = t.children();\n\n    for (int i = 0; i < preterminals.length; i++) {\n      // This particular child is not actually a preterminal --- skip\n      if (!preterminals[i].isPreTerminal())\n        continue;\n\n      Tree leaf = preterminals[i].firstChild();\n      String leafValue = ((CoreLabel) leaf.label()).value();\n\n      String[] words = getMultiWords(leafValue);\n      if (words.length == 1)\n        continue;\n\n      // Leaf is a multi-word token; build new nodes for each of its\n      // constituent words\n      List<Tree> newNodes = new ArrayList<Tree>(words.length);\n      for (int j = 0; j < words.length; j++) {\n        String word = normalizeTerminal(words[j]);\n\n        Tree newLeaf = tf.newLeaf(word);\n        if (newLeaf.label() instanceof HasWord)\n          ((HasWord) newLeaf.label()).setWord(word);\n\n        Tree newNode = tf.newTreeNode(MW_TAG, Arrays.asList(newLeaf));\n        if (newNode.label() instanceof HasTag)\n          ((HasTag) newNode.label()).setTag(MW_TAG);\n\n        newNodes.add(newNode);\n      }\n\n      // Value of the phrase which should head these preterminals. Mark\n      // that this was created from a multiword token, and also retain\n      // the original parts of speech.\n      String phraseValue = MW_PHRASE_TAG + \"_\"\n        + simplifyPOSTag(preterminals[i].value());\n\n      // Should we insert these new nodes as children of the parent `t`\n      // (i.e., \"merge\" the multi-word token phrase into its parent), or\n      // head them with a new node and set that as a child of the\n      // parent?\n      boolean shouldMerge = preterminals.length == 1\n        && mergeWithConstituentWhenPossible.contains(t.value());\n\n      if (shouldMerge) {\n        t.setChildren(newNodes);\n        t.setValue(phraseValue);\n      } else {\n        Tree newHead = tf.newTreeNode(phraseValue, newNodes);\n        t.setChild(i, newHead);\n      }\n    }\n  }","commit_id":"6efedf005c8fc2c6b112fa86bd0299c3bf76286e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Expand grandchild tokens which are elided forms of multi-word\n   * expressions ('al,' 'del').\n   *\n   * We perform this expansion separately from multi-word expansion\n   * because we follow special rules about where the expanded tokens\n   * should be placed in the case of elision.\n   *\n   * @param t Tree representing an entire sentence\n   * @param tf\n   */\n  private void expandElisions(Tree t, TreeFactory tf) {\n    Tsurgeon.processPatternsOnTree(elisionExpansions, t);\n  }","id":15335,"modified_method":"/**\n   * Expand grandchild tokens which are elided forms of multi-word\n   * expressions ('al,' 'del').\n   *\n   * We perform this expansion separately from multi-word expansion\n   * because we follow special rules about where the expanded tokens\n   * should be placed in the case of elision.\n   *\n   * @param t Tree representing an entire sentence\n   */\n  private Tree expandElisions(Tree t) {\n    return Tsurgeon.processPatternsOnTree(elisionExpansions, t);\n  }","commit_id":"6efedf005c8fc2c6b112fa86bd0299c3bf76286e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Remove attached pronouns from a strippable Spanish verb form. (Use\n   * {@link #isStrippable(String)} to determine if a word is a\n   * strippable verb.)\n   *\n   * Converts e.g.\n   *\n   *   - decírmelo -> decir\n   *   - mudarse -> mudar\n   *   - contándolos -> contando\n   *   - hazlo -> haz\n   */\n  public static String stripVerb(String verb) {\n    String stripped = stripSuffix(verb, pOneAttachedPronoun);\n    if(stripped == null || (!isVerb(stripped) && !isVerb(stripped + \"d\"))) {\n      System.out.println(stripped);\n      stripped = stripSuffix(verb, pTwoAttachedPronouns);\n      if(stripped == null || (!isVerb(stripped) && !isVerb(stripped + \"d\"))) {\n        System.out.println(stripped);\n        return null;\n      }\n    }\n    return stripped;\n  }","id":15336,"modified_method":"/**\n   * Remove attached pronouns from a strippable Spanish verb form. (Use\n   * {@link #isStrippable(String)} to determine if a word is a\n   * strippable verb.)\n   *\n   * Converts e.g.\n   *\n   *   - decírmelo -> decir\n   *   - mudarse -> mudar\n   *   - contándolos -> contando\n   *   - hazlo -> haz\n   *\n   * @return A verb form stripped of attached pronouns, or <tt>null<\/tt>\n   *           if no pronouns were located / stripped.\n   */\n  public static String stripVerb(String verb) {\n    Pair<String, List<String>> separated = separatePronouns(verb);\n    if (separated != null)\n      return separated.first();\n\n    return null;\n  }","commit_id":"6efedf005c8fc2c6b112fa86bd0299c3bf76286e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Strips the suffix matched by @pSuffix off of @word and returns\n   * the stripped word, null if unable to strip.\n   */\n  private static String stripSuffix(String word, Pattern pSuffix) {\n    Matcher m = pSuffix.matcher(word);\n    if(m.find()) {\n      String stripped = word.substring(0, m.start());\n      System.out.println(m.start());\n      return removeAccents(stripped);\n    }\n    return null;\n  }","id":15337,"modified_method":"/**\n   * Separate attached pronouns from the given verb.\n   *\n   * @param word A valid Spanish verb with clitic pronouns attached.\n   * @param pSuffix A pattern to match these attached pronouns.\n   * @return A pair containing the verb (pronouns removed by the given\n   *           pattern) and a list of the pronouns which were attached\n   *           to the verb.\n   */\n  private static Pair<String, List<String>> stripSuffix(String word,\n                                                        Pattern pSuffix) {\n    Matcher m = pSuffix.matcher(word);\n    if(m.find()) {\n      String stripped = word.substring(0, m.start());\n      System.out.println(m.start());\n      stripped = removeAccents(stripped);\n\n      List<String> attached = new ArrayList<String>();\n      for (int i = 0; i < m.groupCount(); i++)\n        attached.add(m.group(i + 1));\n\n      return new Pair<String, List<String>>(stripped, attached);\n    }\n\n    return null;\n  }","commit_id":"6efedf005c8fc2c6b112fa86bd0299c3bf76286e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static String usage() {\n    StringBuilder sb = new StringBuilder();\n    String nl = System.getProperty(\"line.separator\");\n    sb.append(String.format(\"Usage: java %s [OPTIONS] file(s)%n%n\", SpanishXMLTreeReader.class.getName()));\n    sb.append(\"Options:\").append(nl);\n    sb.append(\"   -help: Print this message\").append(nl);\n    sb.append(\"   -plain: Output corpus in plaintext rather than as trees\").append(nl);\n    sb.append(\"   -searchPos posRegex: Only print sentences which contain a token whose part of speech matches the given regular expression\").append(nl);\n    sb.append(\"   -searchWord wordRegex: Only print sentences which contain a token which matches the given regular expression\").append(nl);\n    return sb.toString();\n  }","id":15338,"modified_method":"private static String usage() {\n    StringBuilder sb = new StringBuilder();\n    String nl = System.getProperty(\"line.separator\");\n\n    sb.append(String.format(\"Usage: java %s [OPTIONS] file(s)%n%n\", SpanishXMLTreeReader.class.getName()));\n    sb.append(\"Options:\").append(nl);\n    sb.append(\"   -help: Print this message\").append(nl);\n    sb.append(\"   -ner: Add NER-specific information to trees\").append(nl);\n    sb.append(\"   -plain: Output corpus in plaintext rather than as trees\").append(nl);\n    sb.append(\"   -searchPos posRegex: Only print sentences which contain a token whose part of speech matches the given regular expression\").append(nl);\n    sb.append(\"   -searchWord wordRegex: Only print sentences which contain a token which matches the given regular expression\").append(nl);\n\n    return sb.toString();\n  }","commit_id":"6efedf005c8fc2c6b112fa86bd0299c3bf76286e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Determine the part of speech of the given leaf node.\n   *\n   * Use some heuristics to make up for missing part-of-speech labels.\n   */\n  private String getPOS(Element node) {\n    String pos = node.getAttribute(ATTR_POS);\n\n    // Make up for some missing part-of-speech tags\n    if (pos.equals(\"\")) {\n      String namedAttribute = node.getAttribute(ATTR_NAMED_ENTITY);\n      if (namedAttribute.equals(\"date\")) {\n        return \"w\";\n      } else if (namedAttribute.equals(\"number\")) {\n        return \"z0\";\n      }\n\n      String tagName = node.getTagName();\n      if (tagName.equals(\"i\")) {\n        return \"i\";\n      } else if (tagName.equals(\"r\")) {\n        return \"rg\";\n      } else if (tagName.equals(\"z\")) {\n        return \"z0\";\n      }\n\n      // Handle icky issues related to \"que\"\n      String posType = node.getAttribute(ATTR_POSTYPE);\n      String word = getWord(node);\n      if (tagName.equals(\"c\") && posType.equals(\"subordinating\")) {\n        return \"cs\";\n      } else if (tagName.equals(\"p\") && posType.equals(\"relative\")\n                 && word.equalsIgnoreCase(\"que\")) {\n        return \"pr0cn000\";\n      }\n\n      if (simplifiedTagset) {\n        // If we are using the simplfied tagset, we can make some more\n        // broad inferences\n        if (tagName.equals(\"a\")) {\n          return \"aq0000\";\n        }\n      }\n\n      if (node.hasAttribute(ATTR_PUNCT)) {\n        return \"f\";\n      }\n    }\n\n    return pos;\n  }","id":15339,"modified_method":"/**\n   * Determine the part of speech of the given leaf node.\n   *\n   * Use some heuristics to make up for missing part-of-speech labels.\n   */\n  private String getPOS(Element node) {\n    String pos = node.getAttribute(ATTR_POS);\n\n    String namedAttribute = node.getAttribute(ATTR_NAMED_ENTITY);\n    if (pos.startsWith(\"np\") && pos.length() == 7\n        && pos.charAt(pos.length() - 1) == '0') {\n      // Some nouns are missing a named entity annotation in the final\n      // character of their POS tags, but still have a proper named\n      // entity annotation in the `ne` attribute. Fix this:\n      char annotation = '0';\n      if (namedAttribute.equals(\"location\")) {\n        annotation = 'l';\n      } else if (namedAttribute.equals(\"person\")) {\n        annotation = 'p';\n      } else if (namedAttribute.equals(\"organization\")) {\n        annotation = 'o';\n      }\n\n      pos = pos.substring(0, 6) + annotation;\n    } else if (pos.equals(\"\")) {\n      // Make up for some missing part-of-speech tags\n      if (namedAttribute.equals(\"date\")) {\n        return \"w\";\n      } else if (namedAttribute.equals(\"number\")) {\n        return \"z0\";\n      }\n\n      String tagName = node.getTagName();\n      if (tagName.equals(\"i\")) {\n        return \"i\";\n      } else if (tagName.equals(\"r\")) {\n        return \"rg\";\n      } else if (tagName.equals(\"z\")) {\n        return \"z0\";\n      }\n\n      // Handle icky issues related to \"que\"\n      String posType = node.getAttribute(ATTR_POSTYPE);\n      String word = getWord(node);\n      if (tagName.equals(\"c\") && posType.equals(\"subordinating\")) {\n        return \"cs\";\n      } else if (tagName.equals(\"p\") && posType.equals(\"relative\")\n                 && word.equalsIgnoreCase(\"que\")) {\n        return \"pr0cn000\";\n      }\n\n      if (simplifiedTagset) {\n        // If we are using the simplfied tagset, we can make some more\n        // broad inferences\n        if (tagName.equals(\"a\")) {\n          return \"aq0000\";\n        } else if (posType.equals(\"proper\")) {\n          return \"np00000\";\n        } else if (posType.equals(\"common\")) {\n          return \"nc0s000\";\n        }\n      }\n\n      if (node.hasAttribute(ATTR_PUNCT)) {\n        return \"f\";\n      }\n    }\n\n    return pos;\n  }","commit_id":"6efedf005c8fc2c6b112fa86bd0299c3bf76286e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static Map<String, Integer> argOptionDefs() {\n    Map<String, Integer> argOptionDefs = Generics.newHashMap();\n    argOptionDefs.put(\"help\", 0);\n    argOptionDefs.put(\"plain\", 0);\n    argOptionDefs.put(\"searchPos\", 1);\n    argOptionDefs.put(\"searchWord\", 1);\n    return argOptionDefs;\n  }","id":15340,"modified_method":"private static Map<String, Integer> argOptionDefs() {\n    Map<String, Integer> argOptionDefs = Generics.newHashMap();\n    argOptionDefs.put(\"help\", 0);\n    argOptionDefs.put(\"ner\", 0);\n    argOptionDefs.put(\"plain\", 0);\n    argOptionDefs.put(\"searchPos\", 1);\n    argOptionDefs.put(\"searchWord\", 1);\n    return argOptionDefs;\n  }","commit_id":"6efedf005c8fc2c6b112fa86bd0299c3bf76286e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void main(String[] args) {\n    final Properties options = StringUtils.argsToProperties(args, argOptionDefs());\n    if(args.length < 1 || options.containsKey(\"help\")) {\n      System.err.println(usage());\n      return;\n    }\n\n    final Pattern posPattern = options.containsKey(\"searchPos\")\n      ? Pattern.compile(options.getProperty(\"searchPos\")) : null;\n    final Pattern wordPattern = options.containsKey(\"searchWord\")\n      ? Pattern.compile(options.getProperty(\"searchWord\")) : null;\n    final boolean plainPrint = PropertiesUtils.getBool(options, \"plain\", false);\n\n    String[] remainingArgs = options.getProperty(\"\").split(\" \");\n    List<File> fileList = new ArrayList<File>();\n    for(int i = 0; i < remainingArgs.length; i++)\n      fileList.add(new File(remainingArgs[i]));\n\n    final TreeReaderFactory trf = new SpanishXMLTreeReaderFactory(true, true);\n    ExecutorService pool =\n      Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors());\n\n    for (final File file : fileList) {\n      pool.execute(new Runnable() {\n          public void run() {\n            try {\n              TreeReader tr = trf.newTreeReader(new BufferedReader(new InputStreamReader(new FileInputStream(file), \"ISO-8859-1\")));\n              process(file, tr, posPattern, wordPattern, plainPrint);\n              tr.close();\n            } catch (FileNotFoundException e) {\n              e.printStackTrace();\n            } catch (IOException e) {\n              e.printStackTrace();\n            }\n          }\n        });\n    }\n\n    pool.shutdown();\n    try {\n      pool.awaitTermination(Long.MAX_VALUE, TimeUnit.NANOSECONDS);\n    } catch (InterruptedException e) {\n      e.printStackTrace();\n    }\n  }","id":15341,"modified_method":"public static void main(String[] args) {\n    final Properties options = StringUtils.argsToProperties(args, argOptionDefs());\n    if(args.length < 1 || options.containsKey(\"help\")) {\n      System.err.println(usage());\n      return;\n    }\n\n    final Pattern posPattern = options.containsKey(\"searchPos\")\n      ? Pattern.compile(options.getProperty(\"searchPos\")) : null;\n    final Pattern wordPattern = options.containsKey(\"searchWord\")\n      ? Pattern.compile(options.getProperty(\"searchWord\")) : null;\n    final boolean plainPrint = PropertiesUtils.getBool(options, \"plain\", false);\n    final boolean ner = PropertiesUtils.getBool(options, \"ner\", false);\n\n    String[] remainingArgs = options.getProperty(\"\").split(\" \");\n    List<File> fileList = new ArrayList<File>();\n    for(int i = 0; i < remainingArgs.length; i++)\n      fileList.add(new File(remainingArgs[i]));\n\n    final TreeReaderFactory trf = new SpanishXMLTreeReaderFactory(true, true, ner);\n    ExecutorService pool =\n      Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors());\n\n    for (final File file : fileList) {\n      pool.execute(new Runnable() {\n          public void run() {\n            try {\n              TreeReader tr = trf.newTreeReader(new BufferedReader(new InputStreamReader(new FileInputStream(file), \"ISO-8859-1\")));\n              process(file, tr, posPattern, wordPattern, plainPrint);\n              tr.close();\n            } catch (FileNotFoundException e) {\n              e.printStackTrace();\n            } catch (IOException e) {\n              e.printStackTrace();\n            }\n          }\n        });\n    }\n\n    pool.shutdown();\n    try {\n      pool.awaitTermination(Long.MAX_VALUE, TimeUnit.NANOSECONDS);\n    } catch (InterruptedException e) {\n      e.printStackTrace();\n    }\n  }","commit_id":"6efedf005c8fc2c6b112fa86bd0299c3bf76286e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Read parse trees from a Reader.\n   *\n   * @param in The <code>Reader<\/code>\n   * @param simplifiedTagset If `true`, convert part-of-speech labels to a\n   *          simplified version of the EAGLES tagset, where the tags do not\n   *          include extensive morphological analysis\n   * @param aggressiveNormalization Perform aggressive \"normalization\"\n   *          on the trees read from the provided corpus documents:\n   *          split multi-word tokens into their constituent words (and\n   *          infer parts of speech of the constituent words).\n   */\n  public SpanishXMLTreeReader(Reader in, boolean simplifiedTagset,\n                              boolean aggressiveNormalization) {\n    TreebankLanguagePack tlp = new SpanishTreebankLanguagePack();\n\n    this.simplifiedTagset = simplifiedTagset;\n\n    stream = new ReaderInputStream(in, tlp.getEncoding());\n    treeFactory = new LabeledScoredTreeFactory();\n    treeNormalizer =\n      new SpanishTreeNormalizer(simplifiedTagset,\n                                aggressiveNormalization,\n                                true // retain NER information in\n                                     // preterminals\n                                );\n\n    DocumentBuilder parser = XMLUtils.getXmlParser();\n    try {\n      final Document xml = parser.parse(stream);\n      final Element root = xml.getDocumentElement();\n      sentences = root.getElementsByTagName(NODE_SENT);\n      sentIdx = 0;\n\n    } catch (SAXException e) {\n      e.printStackTrace();\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }","id":15342,"modified_method":"/**\n   * Read parse trees from a Reader.\n   *\n   * @param in The <code>Reader<\/code>\n   * @param simplifiedTagset If `true`, convert part-of-speech labels to a\n   *          simplified version of the EAGLES tagset, where the tags do not\n   *          include extensive morphological analysis\n   * @param aggressiveNormalization Perform aggressive \"normalization\"\n   *          on the trees read from the provided corpus documents:\n   *          split multi-word tokens into their constituent words (and\n   *          infer parts of speech of the constituent words).\n   * @param retainNER Retain NER information in preterminals (for later\n   *          use in `MultiWordPreprocessor) and add NER-specific\n   *          parents to single-word NE tokens\n   */\n  public SpanishXMLTreeReader(Reader in, boolean simplifiedTagset,\n                              boolean aggressiveNormalization,\n                              boolean retainNER) {\n    TreebankLanguagePack tlp = new SpanishTreebankLanguagePack();\n\n    this.simplifiedTagset = simplifiedTagset;\n\n    stream = new ReaderInputStream(in, tlp.getEncoding());\n    treeFactory = new LabeledScoredTreeFactory();\n    treeNormalizer =\n      new SpanishTreeNormalizer(simplifiedTagset,\n                                aggressiveNormalization,\n                                retainNER);\n\n    DocumentBuilder parser = XMLUtils.getXmlParser();\n    try {\n      final Document xml = parser.parse(stream);\n      final Element root = xml.getDocumentElement();\n      sentences = root.getElementsByTagName(NODE_SENT);\n      sentIdx = 0;\n\n    } catch (SAXException e) {\n      e.printStackTrace();\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }","commit_id":"6efedf005c8fc2c6b112fa86bd0299c3bf76286e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public SpanishXMLTreeReaderFactory(boolean simplifiedTagset,\n                                     boolean aggressiveNormalization) {\n    this.simplifiedTagset = simplifiedTagset;\n    this.aggressiveNormalization = aggressiveNormalization;\n  }","id":15343,"modified_method":"public SpanishXMLTreeReaderFactory(boolean simplifiedTagset,\n                                     boolean aggressiveNormalization,\n                                     boolean retainNER) {\n    this.simplifiedTagset = simplifiedTagset;\n    this.aggressiveNormalization = aggressiveNormalization;\n    this.retainNER = retainNER;\n  }","commit_id":"6efedf005c8fc2c6b112fa86bd0299c3bf76286e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public TreeReader newTreeReader(Reader in) {\n    return new SpanishXMLTreeReader(in, simplifiedTagset, aggressiveNormalization);\n  }","id":15344,"modified_method":"public TreeReader newTreeReader(Reader in) {\n    return new SpanishXMLTreeReader(in, simplifiedTagset, aggressiveNormalization,\n                                    retainNER);\n  }","commit_id":"6efedf005c8fc2c6b112fa86bd0299c3bf76286e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    // First filter out nodes we don't like\n    tree = tree.prune(emptyFilter);\n\n    // Counter for part-of-speech statistics\n    TwoDimensionalCounter<String, String> unigramTagger =\n      new TwoDimensionalCounter<String, String>();\n\n    for (Tree t : tree) {\n      if (simplifiedTagset && t.isPreTerminal()) {\n        // This is a part of speech tag. Remove extra morphological\n        // information.\n        CoreLabel label = (CoreLabel) t.label();\n        String pos = label.value();\n\n        pos = simplifyPOSTag(pos).intern();\n        label.setValue(pos);\n        label.setTag(pos);\n      } else if (aggressiveNormalization && isMultiWordCandidate(t)) {\n        // Expand multi-word token if necessary\n        normalizeForMultiWord(t, tf);\n      }\n    }\n\n    // Now attack elisions: 'al' and 'del'\n    expandElisions(tree, tf);\n\n    return tree;\n  }","id":15345,"modified_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    // First filter out nodes we don't like\n    tree = tree.prune(emptyFilter);\n\n    // Find all named entities which are not multi-word tokens and nest\n    // them within named entity NP groups\n    if (retainNER)\n      markSimpleNamedEntities(tree);\n\n    // Counter for part-of-speech statistics\n    TwoDimensionalCounter<String, String> unigramTagger =\n      new TwoDimensionalCounter<String, String>();\n\n    for (Tree t : tree) {\n      if (simplifiedTagset && t.isPreTerminal()) {\n        // This is a part of speech tag. Remove extra morphological\n        // information.\n        CoreLabel label = (CoreLabel) t.label();\n        String pos = label.value();\n\n        pos = simplifyPOSTag(pos).intern();\n        label.setValue(pos);\n        label.setTag(pos);\n      } else if (aggressiveNormalization && isMultiWordCandidate(t)) {\n        // Expand multi-word token if necessary\n        normalizeForMultiWord(t, tf);\n      }\n    }\n\n    // Now attack elisions: 'al' and 'del'\n    expandElisions(tree, tf);\n\n    return tree;\n  }","commit_id":"aab7d514350b3aa2c5923d993c570bd195c4f6d8","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Normalize a pre-pre-terminal tree node by accounting for multi-word\n   * tokens.\n   *\n   * Detects multi-word tokens in leaves below this pre-pre-terminal and\n   * expands their constituent words into separate leaves.\n   */\n  void normalizeForMultiWord(Tree t, TreeFactory tf) {\n    Tree[] preterminals = t.children();\n\n    for (int i = 0; i < preterminals.length; i++) {\n      // This particular child is not actually a preterminal --- skip\n      if (!preterminals[i].isPreTerminal())\n        continue;\n\n      Tree leaf = preterminals[i].firstChild();\n      String leafValue = ((CoreLabel) leaf.label()).value();\n\n      String[] words = getMultiWords(leafValue);\n      if (words.length == 1)\n        continue;\n\n      // Leaf is a multi-word token; build new nodes for each of its\n      // constituent words\n      List<Tree> newNodes = new ArrayList<Tree>(words.length);\n      for (int j = 0; j < words.length; j++) {\n        String word = words[j];\n\n        Tree newLeaf = tf.newLeaf(word);\n        if (newLeaf.label() instanceof HasWord)\n          ((HasWord) newLeaf.label()).setWord(word);\n\n        Tree newNode = tf.newTreeNode(MW_TAG, Arrays.asList(newLeaf));\n        if (newNode.label() instanceof HasTag)\n          ((HasTag) newNode.label()).setTag(MW_TAG);\n\n        newNodes.add(newNode);\n      }\n\n      // Value of the phrase which should head these preterminals. Mark\n      // that this was created from a multiword token, and also retain\n      // the original parts of speech.\n      String phraseValue = MW_PHRASE_TAG + \"_\"\n        + simplifyPOSTag(preterminals[i].value());\n\n      // Should we insert these new nodes as children of the parent `t`\n      // (i.e., \"merge\" the multi-word token phrase into its parent), or\n      // head them with a new node and set that as a child of the\n      // parent?\n      boolean shouldMerge = preterminals.length == 1\n        && mergeWithConstituentWhenPossible.contains(t.value());\n\n      if (shouldMerge) {\n        t.setChildren(newNodes);\n        t.setValue(phraseValue);\n      } else {\n        Tree newHead = tf.newTreeNode(phraseValue, newNodes);\n        t.setChild(i, newHead);\n      }\n    }\n  }","id":15346,"modified_method":"/**\n   * Normalize a pre-pre-terminal tree node by accounting for multi-word\n   * tokens.\n   *\n   * Detects multi-word tokens in leaves below this pre-pre-terminal and\n   * expands their constituent words into separate leaves.\n   */\n  void normalizeForMultiWord(Tree t, TreeFactory tf) {\n    Tree[] preterminals = t.children();\n\n    for (int i = 0; i < preterminals.length; i++) {\n      // This particular child is not actually a preterminal --- skip\n      if (!preterminals[i].isPreTerminal())\n        continue;\n\n      Tree leaf = preterminals[i].firstChild();\n      String leafValue = ((CoreLabel) leaf.label()).value();\n\n      String[] words = getMultiWords(leafValue);\n      if (words.length == 1)\n        continue;\n\n      // Leaf is a multi-word token; build new nodes for each of its\n      // constituent words\n      List<Tree> newNodes = new ArrayList<Tree>(words.length);\n      for (int j = 0; j < words.length; j++) {\n        String word = normalizeTerminal(words[j]);\n\n        Tree newLeaf = tf.newLeaf(word);\n        if (newLeaf.label() instanceof HasWord)\n          ((HasWord) newLeaf.label()).setWord(word);\n\n        Tree newNode = tf.newTreeNode(MW_TAG, Arrays.asList(newLeaf));\n        if (newNode.label() instanceof HasTag)\n          ((HasTag) newNode.label()).setTag(MW_TAG);\n\n        newNodes.add(newNode);\n      }\n\n      // Value of the phrase which should head these preterminals. Mark\n      // that this was created from a multiword token, and also retain\n      // the original parts of speech.\n      String phraseValue = MW_PHRASE_TAG + \"_\"\n        + simplifyPOSTag(preterminals[i].value());\n\n      // Should we insert these new nodes as children of the parent `t`\n      // (i.e., \"merge\" the multi-word token phrase into its parent), or\n      // head them with a new node and set that as a child of the\n      // parent?\n      boolean shouldMerge = preterminals.length == 1\n        && mergeWithConstituentWhenPossible.contains(t.value());\n\n      if (shouldMerge) {\n        t.setChildren(newNodes);\n        t.setValue(phraseValue);\n      } else {\n        Tree newHead = tf.newTreeNode(phraseValue, newNodes);\n        t.setChild(i, newHead);\n      }\n    }\n  }","commit_id":"aab7d514350b3aa2c5923d993c570bd195c4f6d8","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Strips the suffix matched by @pSuffix off of @word and returns\n   * the stripped word, null if unable to strip.\n   */\n  private static String stripSuffix(String word, Pattern pSuffix) {\n    Matcher m = pSuffix.matcher(word);\n    if(m.find()) {\n      String stripped = word.substring(0, m.start());\n      System.out.println(m.start());\n      return removeAccents(stripped);\n    }\n    return null;\n  }","id":15347,"modified_method":"/**\n   * Separate attached pronouns from the given verb.\n   *\n   * @param word A valid Spanish verb with clitic pronouns attached.\n   * @param pSuffix A pattern to match these attached pronouns.\n   * @return A pair containing the verb (pronouns removed by the given\n   *           pattern) and a list of the pronouns which were attached\n   *           to the verb.\n   */\n  private static Pair<String, List<String>> stripSuffix(String word,\n                                                        Pattern pSuffix) {\n    Matcher m = pSuffix.matcher(word);\n    if(m.find()) {\n      String stripped = word.substring(0, m.start());\n      System.out.println(m.start());\n      stripped = removeAccents(stripped);\n\n      List<String> attached = new ArrayList<String>();\n      for (int i = 0; i < m.groupCount(); i++)\n        attached.add(m.group(i + 1));\n\n      return new Pair<String, List<String>>(stripped, attached);\n    }\n\n    return null;\n  }","commit_id":"aab7d514350b3aa2c5923d993c570bd195c4f6d8","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Remove attached pronouns from a strippable Spanish verb form. (Use\n   * {@link #isStrippable(String)} to determine if a word is a\n   * strippable verb.)\n   *\n   * Converts e.g.\n   *\n   *   - decírmelo -> decir\n   *   - mudarse -> mudar\n   *   - contándolos -> contando\n   *   - hazlo -> haz\n   */\n  public static String stripVerb(String verb) {\n    String stripped = stripSuffix(verb, pOneAttachedPronoun);\n    if(stripped == null || (!isVerb(stripped) && !isVerb(stripped + \"d\"))) {\n      System.out.println(stripped);\n      stripped = stripSuffix(verb, pTwoAttachedPronouns);\n      if(stripped == null || (!isVerb(stripped) && !isVerb(stripped + \"d\"))) {\n        System.out.println(stripped);\n        return null;\n      }\n    }\n    return stripped;\n  }","id":15348,"modified_method":"/**\n   * Remove attached pronouns from a strippable Spanish verb form. (Use\n   * {@link #isStrippable(String)} to determine if a word is a\n   * strippable verb.)\n   *\n   * Converts e.g.\n   *\n   *   - decírmelo -> decir\n   *   - mudarse -> mudar\n   *   - contándolos -> contando\n   *   - hazlo -> haz\n   *\n   * @return A verb form stripped of attached pronouns, or <tt>null<\/tt>\n   *           if no pronouns were located / stripped.\n   */\n  public static String stripVerb(String verb) {\n    Pair<String, List<String>> separated = separatePronouns(verb);\n    if (separated != null)\n      return separated.first();\n\n    return null;\n  }","commit_id":"aab7d514350b3aa2c5923d993c570bd195c4f6d8","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static Map<String, Integer> argOptionDefs() {\n    Map<String, Integer> argOptionDefs = Generics.newHashMap();\n    argOptionDefs.put(\"help\", 0);\n    argOptionDefs.put(\"plain\", 0);\n    argOptionDefs.put(\"searchPos\", 1);\n    argOptionDefs.put(\"searchWord\", 1);\n    return argOptionDefs;\n  }","id":15349,"modified_method":"private static Map<String, Integer> argOptionDefs() {\n    Map<String, Integer> argOptionDefs = Generics.newHashMap();\n    argOptionDefs.put(\"help\", 0);\n    argOptionDefs.put(\"ner\", 0);\n    argOptionDefs.put(\"plain\", 0);\n    argOptionDefs.put(\"searchPos\", 1);\n    argOptionDefs.put(\"searchWord\", 1);\n    return argOptionDefs;\n  }","commit_id":"aab7d514350b3aa2c5923d993c570bd195c4f6d8","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static String usage() {\n    StringBuilder sb = new StringBuilder();\n    String nl = System.getProperty(\"line.separator\");\n    sb.append(String.format(\"Usage: java %s [OPTIONS] file(s)%n%n\", SpanishXMLTreeReader.class.getName()));\n    sb.append(\"Options:\").append(nl);\n    sb.append(\"   -help: Print this message\").append(nl);\n    sb.append(\"   -plain: Output corpus in plaintext rather than as trees\").append(nl);\n    sb.append(\"   -searchPos posRegex: Only print sentences which contain a token whose part of speech matches the given regular expression\").append(nl);\n    sb.append(\"   -searchWord wordRegex: Only print sentences which contain a token which matches the given regular expression\").append(nl);\n    return sb.toString();\n  }","id":15350,"modified_method":"private static String usage() {\n    StringBuilder sb = new StringBuilder();\n    String nl = System.getProperty(\"line.separator\");\n\n    sb.append(String.format(\"Usage: java %s [OPTIONS] file(s)%n%n\", SpanishXMLTreeReader.class.getName()));\n    sb.append(\"Options:\").append(nl);\n    sb.append(\"   -help: Print this message\").append(nl);\n    sb.append(\"   -ner: Add NER-specific information to trees\").append(nl);\n    sb.append(\"   -plain: Output corpus in plaintext rather than as trees\").append(nl);\n    sb.append(\"   -searchPos posRegex: Only print sentences which contain a token whose part of speech matches the given regular expression\").append(nl);\n    sb.append(\"   -searchWord wordRegex: Only print sentences which contain a token which matches the given regular expression\").append(nl);\n\n    return sb.toString();\n  }","commit_id":"aab7d514350b3aa2c5923d993c570bd195c4f6d8","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Read parse trees from a Reader.\n   *\n   * @param in The <code>Reader<\/code>\n   * @param simplifiedTagset If `true`, convert part-of-speech labels to a\n   *          simplified version of the EAGLES tagset, where the tags do not\n   *          include extensive morphological analysis\n   * @param aggressiveNormalization Perform aggressive \"normalization\"\n   *          on the trees read from the provided corpus documents:\n   *          split multi-word tokens into their constituent words (and\n   *          infer parts of speech of the constituent words).\n   */\n  public SpanishXMLTreeReader(Reader in, boolean simplifiedTagset,\n                              boolean aggressiveNormalization) {\n    TreebankLanguagePack tlp = new SpanishTreebankLanguagePack();\n\n    this.simplifiedTagset = simplifiedTagset;\n\n    stream = new ReaderInputStream(in, tlp.getEncoding());\n    treeFactory = new LabeledScoredTreeFactory();\n    treeNormalizer =\n      new SpanishTreeNormalizer(simplifiedTagset,\n                                aggressiveNormalization,\n                                true // retain NER information in\n                                     // preterminals\n                                );\n\n    DocumentBuilder parser = XMLUtils.getXmlParser();\n    try {\n      final Document xml = parser.parse(stream);\n      final Element root = xml.getDocumentElement();\n      sentences = root.getElementsByTagName(NODE_SENT);\n      sentIdx = 0;\n\n    } catch (SAXException e) {\n      e.printStackTrace();\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }","id":15351,"modified_method":"/**\n   * Read parse trees from a Reader.\n   *\n   * @param in The <code>Reader<\/code>\n   * @param simplifiedTagset If `true`, convert part-of-speech labels to a\n   *          simplified version of the EAGLES tagset, where the tags do not\n   *          include extensive morphological analysis\n   * @param aggressiveNormalization Perform aggressive \"normalization\"\n   *          on the trees read from the provided corpus documents:\n   *          split multi-word tokens into their constituent words (and\n   *          infer parts of speech of the constituent words).\n   * @param retainNER Retain NER information in preterminals (for later\n   *          use in `MultiWordPreprocessor) and add NER-specific\n   *          parents to single-word NE tokens\n   */\n  public SpanishXMLTreeReader(Reader in, boolean simplifiedTagset,\n                              boolean aggressiveNormalization,\n                              boolean retainNER) {\n    TreebankLanguagePack tlp = new SpanishTreebankLanguagePack();\n\n    this.simplifiedTagset = simplifiedTagset;\n\n    stream = new ReaderInputStream(in, tlp.getEncoding());\n    treeFactory = new LabeledScoredTreeFactory();\n    treeNormalizer =\n      new SpanishTreeNormalizer(simplifiedTagset,\n                                aggressiveNormalization,\n                                retainNER);\n\n    DocumentBuilder parser = XMLUtils.getXmlParser();\n    try {\n      final Document xml = parser.parse(stream);\n      final Element root = xml.getDocumentElement();\n      sentences = root.getElementsByTagName(NODE_SENT);\n      sentIdx = 0;\n\n    } catch (SAXException e) {\n      e.printStackTrace();\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }","commit_id":"aab7d514350b3aa2c5923d993c570bd195c4f6d8","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void main(String[] args) {\n    final Properties options = StringUtils.argsToProperties(args, argOptionDefs());\n    if(args.length < 1 || options.containsKey(\"help\")) {\n      System.err.println(usage());\n      return;\n    }\n\n    final Pattern posPattern = options.containsKey(\"searchPos\")\n      ? Pattern.compile(options.getProperty(\"searchPos\")) : null;\n    final Pattern wordPattern = options.containsKey(\"searchWord\")\n      ? Pattern.compile(options.getProperty(\"searchWord\")) : null;\n    final boolean plainPrint = PropertiesUtils.getBool(options, \"plain\", false);\n\n    String[] remainingArgs = options.getProperty(\"\").split(\" \");\n    List<File> fileList = new ArrayList<File>();\n    for(int i = 0; i < remainingArgs.length; i++)\n      fileList.add(new File(remainingArgs[i]));\n\n    final TreeReaderFactory trf = new SpanishXMLTreeReaderFactory(true, true);\n    ExecutorService pool =\n      Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors());\n\n    for (final File file : fileList) {\n      pool.execute(new Runnable() {\n          public void run() {\n            try {\n              TreeReader tr = trf.newTreeReader(new BufferedReader(new InputStreamReader(new FileInputStream(file), \"ISO-8859-1\")));\n              process(file, tr, posPattern, wordPattern, plainPrint);\n              tr.close();\n            } catch (FileNotFoundException e) {\n              e.printStackTrace();\n            } catch (IOException e) {\n              e.printStackTrace();\n            }\n          }\n        });\n    }\n\n    pool.shutdown();\n    try {\n      pool.awaitTermination(Long.MAX_VALUE, TimeUnit.NANOSECONDS);\n    } catch (InterruptedException e) {\n      e.printStackTrace();\n    }\n  }","id":15352,"modified_method":"public static void main(String[] args) {\n    final Properties options = StringUtils.argsToProperties(args, argOptionDefs());\n    if(args.length < 1 || options.containsKey(\"help\")) {\n      System.err.println(usage());\n      return;\n    }\n\n    final Pattern posPattern = options.containsKey(\"searchPos\")\n      ? Pattern.compile(options.getProperty(\"searchPos\")) : null;\n    final Pattern wordPattern = options.containsKey(\"searchWord\")\n      ? Pattern.compile(options.getProperty(\"searchWord\")) : null;\n    final boolean plainPrint = PropertiesUtils.getBool(options, \"plain\", false);\n    final boolean ner = PropertiesUtils.getBool(options, \"ner\", false);\n\n    String[] remainingArgs = options.getProperty(\"\").split(\" \");\n    List<File> fileList = new ArrayList<File>();\n    for(int i = 0; i < remainingArgs.length; i++)\n      fileList.add(new File(remainingArgs[i]));\n\n    final TreeReaderFactory trf = new SpanishXMLTreeReaderFactory(true, true, ner);\n    ExecutorService pool =\n      Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors());\n\n    for (final File file : fileList) {\n      pool.execute(new Runnable() {\n          public void run() {\n            try {\n              TreeReader tr = trf.newTreeReader(new BufferedReader(new InputStreamReader(new FileInputStream(file), \"ISO-8859-1\")));\n              process(file, tr, posPattern, wordPattern, plainPrint);\n              tr.close();\n            } catch (FileNotFoundException e) {\n              e.printStackTrace();\n            } catch (IOException e) {\n              e.printStackTrace();\n            }\n          }\n        });\n    }\n\n    pool.shutdown();\n    try {\n      pool.awaitTermination(Long.MAX_VALUE, TimeUnit.NANOSECONDS);\n    } catch (InterruptedException e) {\n      e.printStackTrace();\n    }\n  }","commit_id":"aab7d514350b3aa2c5923d993c570bd195c4f6d8","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Determine the part of speech of the given leaf node.\n   *\n   * Use some heuristics to make up for missing part-of-speech labels.\n   */\n  private String getPOS(Element node) {\n    String pos = node.getAttribute(ATTR_POS);\n\n    // Make up for some missing part-of-speech tags\n    if (pos.equals(\"\")) {\n      String namedAttribute = node.getAttribute(ATTR_NAMED_ENTITY);\n      if (namedAttribute.equals(\"date\")) {\n        return \"w\";\n      } else if (namedAttribute.equals(\"number\")) {\n        return \"z0\";\n      }\n\n      String tagName = node.getTagName();\n      if (tagName.equals(\"i\")) {\n        return \"i\";\n      } else if (tagName.equals(\"r\")) {\n        return \"rg\";\n      } else if (tagName.equals(\"z\")) {\n        return \"z0\";\n      }\n\n      // Handle icky issues related to \"que\"\n      String posType = node.getAttribute(ATTR_POSTYPE);\n      String word = getWord(node);\n      if (tagName.equals(\"c\") && posType.equals(\"subordinating\")) {\n        return \"cs\";\n      } else if (tagName.equals(\"p\") && posType.equals(\"relative\")\n                 && word.equalsIgnoreCase(\"que\")) {\n        return \"pr0cn000\";\n      }\n\n      if (simplifiedTagset) {\n        // If we are using the simplfied tagset, we can make some more\n        // broad inferences\n        if (tagName.equals(\"a\")) {\n          return \"aq0000\";\n        }\n      }\n\n      if (node.hasAttribute(ATTR_PUNCT)) {\n        return \"f\";\n      }\n    }\n\n    return pos;\n  }","id":15353,"modified_method":"/**\n   * Determine the part of speech of the given leaf node.\n   *\n   * Use some heuristics to make up for missing part-of-speech labels.\n   */\n  private String getPOS(Element node) {\n    String pos = node.getAttribute(ATTR_POS);\n\n    String namedAttribute = node.getAttribute(ATTR_NAMED_ENTITY);\n    if (pos.startsWith(\"np\") && pos.length() == 7\n        && pos.charAt(pos.length() - 1) == '0') {\n      // Some nouns are missing a named entity annotation in the final\n      // character of their POS tags, but still have a proper named\n      // entity annotation in the `ne` attribute. Fix this:\n      char annotation = '0';\n      if (namedAttribute.equals(\"location\")) {\n        annotation = 'l';\n      } else if (namedAttribute.equals(\"person\")) {\n        annotation = 'p';\n      } else if (namedAttribute.equals(\"organization\")) {\n        annotation = 'o';\n      }\n\n      pos = pos.substring(0, 6) + annotation;\n    } else if (pos.equals(\"\")) {\n      // Make up for some missing part-of-speech tags\n      if (namedAttribute.equals(\"date\")) {\n        return \"w\";\n      } else if (namedAttribute.equals(\"number\")) {\n        return \"z0\";\n      }\n\n      String tagName = node.getTagName();\n      if (tagName.equals(\"i\")) {\n        return \"i\";\n      } else if (tagName.equals(\"r\")) {\n        return \"rg\";\n      } else if (tagName.equals(\"z\")) {\n        return \"z0\";\n      }\n\n      // Handle icky issues related to \"que\"\n      String posType = node.getAttribute(ATTR_POSTYPE);\n      String word = getWord(node);\n      if (tagName.equals(\"c\") && posType.equals(\"subordinating\")) {\n        return \"cs\";\n      } else if (tagName.equals(\"p\") && posType.equals(\"relative\")\n                 && word.equalsIgnoreCase(\"que\")) {\n        return \"pr0cn000\";\n      }\n\n      if (simplifiedTagset) {\n        // If we are using the simplfied tagset, we can make some more\n        // broad inferences\n        if (tagName.equals(\"a\")) {\n          return \"aq0000\";\n        } else if (posType.equals(\"proper\")) {\n          return \"np00000\";\n        } else if (posType.equals(\"common\")) {\n          return \"nc0s000\";\n        }\n      }\n\n      if (node.hasAttribute(ATTR_PUNCT)) {\n        return \"f\";\n      }\n    }\n\n    return pos;\n  }","commit_id":"aab7d514350b3aa2c5923d993c570bd195c4f6d8","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public SpanishXMLTreeReaderFactory(boolean simplifiedTagset,\n                                     boolean aggressiveNormalization) {\n    this.simplifiedTagset = simplifiedTagset;\n    this.aggressiveNormalization = aggressiveNormalization;\n  }","id":15354,"modified_method":"public SpanishXMLTreeReaderFactory(boolean simplifiedTagset,\n                                     boolean aggressiveNormalization,\n                                     boolean retainNER) {\n    this.simplifiedTagset = simplifiedTagset;\n    this.aggressiveNormalization = aggressiveNormalization;\n    this.retainNER = retainNER;\n  }","commit_id":"aab7d514350b3aa2c5923d993c570bd195c4f6d8","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public TreeReader newTreeReader(Reader in) {\n    return new SpanishXMLTreeReader(in, simplifiedTagset, aggressiveNormalization);\n  }","id":15355,"modified_method":"public TreeReader newTreeReader(Reader in) {\n    return new SpanishXMLTreeReader(in, simplifiedTagset, aggressiveNormalization,\n                                    retainNER);\n  }","commit_id":"aab7d514350b3aa2c5923d993c570bd195c4f6d8","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private boolean vglHelper(boolean exceptOnError, String msg) {\n        if ( exceptOnError )\n            throw new UserException.MalformedGenomeLoc(\"Parameters to GenomeLocParser are incorrect:\" + msg);\n        else\n            return false;\n    }","id":15356,"modified_method":"private void vglHelper(final String msg) {\n        throw new UserException.MalformedGenomeLoc(\"Parameters to GenomeLocParser are incorrect:\" + msg);\n    }","commit_id":"fe8a50ea5a678a6a3020e83d3e9ffde6b21a8a57","url":"https://github.com/broadgsa/gatk"},{"original_method":"@ThrowEnsures({\"UserException.MalformedGenomeLoc\", \"!isValidGenomeLoc(contig, start, stop,mustBeOnReference)\"})\n    public GenomeLoc createGenomeLoc(String contig, int index, final int start, final int stop, boolean mustBeOnReference) {\n        validateGenomeLoc(contig, index, start, stop, mustBeOnReference, true);\n        return new GenomeLoc(contig, index, start, stop);\n    }","id":15357,"modified_method":"@ThrowEnsures({\"UserException.MalformedGenomeLoc\", \"!isValidGenomeLoc(contig, start, stop,mustBeOnReference)\"})\n    public GenomeLoc createGenomeLoc(String contig, int index, final int start, final int stop, boolean mustBeOnReference) {\n        // optimization: by interning the string we ensure that future comparisons use == not the full string comp\n        final String interned = validateGenomeLoc(contig, index, start, stop, mustBeOnReference);\n        return new GenomeLoc(interned, index, start, stop);\n    }","commit_id":"fe8a50ea5a678a6a3020e83d3e9ffde6b21a8a57","url":"https://github.com/broadgsa/gatk"},{"original_method":"@Requires(\"contig != null\")\n        @Ensures(\"result != null\")\n        public synchronized final SAMSequenceRecord getSequence(final String contig) {\n            if ( isCached(contig) )\n                return lastSSR;\n            else\n                return updateCache(contig, -1);\n        }","id":15358,"modified_method":"@Requires(\"contig != null\")\n        @Ensures(\"result != null\")\n        public final SAMSequenceRecord getSequence(final String contig) {\n            if ( isCached(contig) )\n                return lastSSR;\n            else\n                return updateCache(contig, -1);\n        }","commit_id":"fe8a50ea5a678a6a3020e83d3e9ffde6b21a8a57","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * @return a caching sequence dictionary appropriate for this thread\n     */\n    private CachingSequenceDictionary getContigInfo() {\n        if ( contigInfoPerThread.get() == null ) {\n            // initialize for this thread\n            contigInfoPerThread.set(new CachingSequenceDictionary(SINGLE_MASTER_SEQUENCE_DICTIONARY));\n        }\n\n        assert contigInfoPerThread.get() != null;\n\n        return contigInfoPerThread.get();\n    }","id":15359,"modified_method":"/**\n     * @return a caching sequence dictionary appropriate for this thread\n     */\n    private CachingSequenceDictionary getContigInfo() {\n        return contigInfoPerThread.get();\n    }","commit_id":"fe8a50ea5a678a6a3020e83d3e9ffde6b21a8a57","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n         * The key algorithm.  Given a new record, update the last used record, contig\n         * name, and index.\n         *\n         * @param contig\n         * @param index\n         * @return\n         */\n        @Requires(\"contig != null || index >= 0\")\n        @Ensures(\"result != null\")\n        private synchronized SAMSequenceRecord updateCache(final String contig, int index ) {\n            SAMSequenceRecord rec = contig == null ? dict.getSequence(index) : dict.getSequence(contig);\n            if ( rec == null ) {\n                throw new ReviewedStingException(\"BUG: requested unknown contig=\" + contig + \" index=\" + index);\n            } else {\n                lastSSR = rec;\n                lastContig = rec.getSequenceName();\n                lastIndex = rec.getSequenceIndex();\n                return rec;\n            }\n        }","id":15360,"modified_method":"/**\n         * The key algorithm.  Given a new record, update the last used record, contig\n         * name, and index.\n         *\n         * @param contig\n         * @param index\n         * @return\n         */\n        @Requires(\"contig != null || index >= 0\")\n        @Ensures(\"result != null\")\n        private SAMSequenceRecord updateCache(final String contig, int index ) {\n            SAMSequenceRecord rec = contig == null ? dict.getSequence(index) : dict.getSequence(contig);\n            if ( rec == null ) {\n                throw new ReviewedStingException(\"BUG: requested unknown contig=\" + contig + \" index=\" + index);\n            } else {\n                lastSSR = rec;\n                lastContig = rec.getSequenceName();\n                lastIndex = rec.getSequenceIndex();\n                return rec;\n            }\n        }","commit_id":"fe8a50ea5a678a6a3020e83d3e9ffde6b21a8a57","url":"https://github.com/broadgsa/gatk"},{"original_method":"@Requires(\"contig != null\")\n        public final synchronized boolean hasContig(final String contig) {\n            return contig.equals(lastContig) || dict.getSequence(contig) != null;\n        }","id":15361,"modified_method":"@Requires(\"contig != null\")\n        public final boolean hasContig(final String contig) {\n            return contig.equals(lastContig) || dict.getSequence(contig) != null;\n        }","commit_id":"fe8a50ea5a678a6a3020e83d3e9ffde6b21a8a57","url":"https://github.com/broadgsa/gatk"},{"original_method":"@Requires({\"lastIndex != -1\", \"index >= 0\"})\n        private synchronized boolean isCached(final int index) {\n            return lastIndex == index;\n        }","id":15362,"modified_method":"@Requires({\"lastIndex != -1\", \"index >= 0\"})\n        private boolean isCached(final int index) {\n            return lastIndex == index;\n        }","commit_id":"fe8a50ea5a678a6a3020e83d3e9ffde6b21a8a57","url":"https://github.com/broadgsa/gatk"},{"original_method":"@Requires(\"index >= 0\")\n        @Ensures(\"result != null\")\n        public synchronized final SAMSequenceRecord getSequence(final int index) {\n            if ( isCached(index) )\n                return lastSSR;\n            else\n                return updateCache(null, index);\n        }","id":15363,"modified_method":"@Requires(\"index >= 0\")\n        @Ensures(\"result != null\")\n        public final SAMSequenceRecord getSequence(final int index) {\n            if ( isCached(index) )\n                return lastSSR;\n            else\n                return updateCache(null, index);\n        }","commit_id":"fe8a50ea5a678a6a3020e83d3e9ffde6b21a8a57","url":"https://github.com/broadgsa/gatk"},{"original_method":"public boolean isValidGenomeLoc(String contig, int start, int stop ) {\n        return validateGenomeLoc(contig, getContigIndexWithoutException(contig), start, stop, true, false);\n    }","id":15364,"modified_method":"/**\n     * @see #isValidGenomeLoc(String, int, int) with mustBeOnReference == true\n     */\n    public boolean isValidGenomeLoc(String contig, int start, int stop ) {\n        return isValidGenomeLoc(contig, start, stop, true);\n    }","commit_id":"fe8a50ea5a678a6a3020e83d3e9ffde6b21a8a57","url":"https://github.com/broadgsa/gatk"},{"original_method":"public boolean isValidGenomeLoc(String contig, int start, int stop, boolean mustBeOnReference ) {\n        return validateGenomeLoc(contig, getContigIndexWithoutException(contig), start, stop, mustBeOnReference, false);\n    }","id":15365,"modified_method":"/**\n     * Would a genome loc created with the given parameters be valid w.r.t. the master sequence dictionary?\n     * @param contig the contig we'd use\n     * @param start the start position\n     * @param stop the stop\n     * @param mustBeOnReference should we require the resulting genome loc to be completely on the reference genome?\n     * @return true if this would produce a valid genome loc, false otherwise\n     */\n    public boolean isValidGenomeLoc(String contig, int start, int stop, boolean mustBeOnReference ) {\n        try {\n            validateGenomeLoc(contig, getContigIndexWithoutException(contig), start, stop, mustBeOnReference);\n            return true;\n        } catch ( ReviewedStingException e) {\n            return false;\n        }\n    }","commit_id":"fe8a50ea5a678a6a3020e83d3e9ffde6b21a8a57","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * validate a position or interval on the genome as valid\n     *\n     * Requires that contig exist in the master sequence dictionary, and that contig index be valid as well.  Requires\n     * that start <= stop.\n     *\n     * if mustBeOnReference is true,\n     * performs boundary validation for genome loc INTERVALS:\n     * start and stop are on contig and start <= stop\n     *\n     * @param contig the contig name\n     * @param start  the start position\n     * @param stop   the stop position\n     *\n     * @return true if it's valid, false otherwise.  If exceptOnError, then throws a UserException if invalid\n     */\n    private boolean validateGenomeLoc(String contig, int contigIndex, int start, int stop, boolean mustBeOnReference, boolean exceptOnError) {\n        if ( ! getContigInfo().hasContig(contig) )\n            return vglHelper(exceptOnError, String.format(\"Unknown contig %s\", contig));\n\n        if (stop < start)\n            return vglHelper(exceptOnError, String.format(\"The stop position %d is less than start %d in contig %s\", stop, start, contig));\n\n        if (contigIndex < 0)\n            return vglHelper(exceptOnError, String.format(\"The contig index %d is less than 0\", contigIndex));\n\n        if (contigIndex >= getContigInfo().getNSequences())\n            return vglHelper(exceptOnError, String.format(\"The contig index %d is greater than the stored sequence count (%d)\", contigIndex, getContigInfo().getNSequences()));\n\n        if ( mustBeOnReference ) {\n            if (start < 1)\n                return vglHelper(exceptOnError, String.format(\"The start position %d is less than 1\", start));\n\n            if (stop < 1)\n                return vglHelper(exceptOnError, String.format(\"The stop position %d is less than 1\", stop));\n\n            int contigSize = getContigInfo().getSequence(contigIndex).getSequenceLength();\n            if (start > contigSize || stop > contigSize)\n                return vglHelper(exceptOnError, String.format(\"The genome loc coordinates %d-%d exceed the contig size (%d)\", start, stop, contigSize));\n        }\n\n        // we passed\n        return true;\n    }","id":15366,"modified_method":"/**\n     * validate a position or interval on the genome as valid\n     *\n     * Requires that contig exist in the master sequence dictionary, and that contig index be valid as well.  Requires\n     * that start <= stop.\n     *\n     * if mustBeOnReference is true,\n     * performs boundary validation for genome loc INTERVALS:\n     * start and stop are on contig and start <= stop\n     *\n     * @param contig the contig name\n     * @param start  the start position\n     * @param stop   the stop position\n     *\n     * @return the interned contig name, an optimization that ensures that contig == the string in the sequence dictionary\n     */\n    protected String validateGenomeLoc(final String contig, final int contigIndex, final int start, final int stop, final boolean mustBeOnReference) {\n        if ( validationLevel == ValidationLevel.NONE )\n            return contig;\n        else {\n            if (stop < start)\n                vglHelper(String.format(\"The stop position %d is less than start %d in contig %s\", stop, start, contig));\n\n            final SAMSequenceRecord contigInfo = getContigInfo().getSequence(contig);\n            if ( contigInfo.getSequenceIndex() != contigIndex )\n                vglHelper(String.format(\"The contig index %d is bad, doesn't equal the contig index %d of the contig from a string %s\",\n                        contigIndex, contigInfo.getSequenceIndex(), contig));\n\n            if ( mustBeOnReference ) {\n                if (start < 1)\n                    vglHelper(String.format(\"The start position %d is less than 1\", start));\n\n                if (stop < 1)\n                    vglHelper(String.format(\"The stop position %d is less than 1\", stop));\n\n                final int contigSize = contigInfo.getSequenceLength();\n                if (start > contigSize || stop > contigSize)\n                    vglHelper(String.format(\"The genome loc coordinates %d-%d exceed the contig size (%d)\", start, stop, contigSize));\n            }\n\n            return contigInfo.getSequenceName();\n        }\n    }","commit_id":"fe8a50ea5a678a6a3020e83d3e9ffde6b21a8a57","url":"https://github.com/broadgsa/gatk"},{"original_method":"public GenomeLocParser(SAMSequenceDictionary seqDict) {\n        if (seqDict == null) { // we couldn't load the reference dictionary\n            //logger.info(\"Failed to load reference dictionary, falling back to lexicographic order for contigs\");\n            throw new UserException.CommandLineException(\"Failed to load reference dictionary\");\n        }\n\n        SINGLE_MASTER_SEQUENCE_DICTIONARY = seqDict;\n        logger.debug(String.format(\"Prepared reference sequence contig dictionary\"));\n        for (SAMSequenceRecord contig : seqDict.getSequences()) {\n            logger.debug(String.format(\" %s (%d bp)\", contig.getSequenceName(), contig.getSequenceLength()));\n        }\n    }","id":15367,"modified_method":"/**\n     * Create a new GenomeLocParser based on seqDictionary with the standard validation level\n     * @param seqDict a non-null sequence dictionary\n     */\n    public GenomeLocParser(SAMSequenceDictionary seqDict) {\n        this(seqDict, ValidationLevel.STANDARD);\n    }","commit_id":"fe8a50ea5a678a6a3020e83d3e9ffde6b21a8a57","url":"https://github.com/broadgsa/gatk"},{"original_method":"public GenomeLoc createGenomeLocOnContig(final String contig, final int start, final int stop) {\n        GenomeLoc contigLoc = createOverEntireContig(contig);\n        return new GenomeLoc(contig, getContigIndex(contig), start, stop).intersect(contigLoc);\n    }","id":15368,"modified_method":"/**\n     * Create a new genome loc, bounding start and stop by the start and end of contig\n     * @param contig our contig\n     * @param start our start as an arbitrary integer (may be negative, etc)\n     * @param stop our stop as an arbitrary integer (may be negative, etc)\n     * @throws ReviewedStingException if there's no way to create a meaningful genome loc given contig, start, and stop\n     * @return a valid genome loc over contig\n     */\n    public GenomeLoc createGenomeLocOnContig(final String contig, final int start, final int stop) {\n        final GenomeLoc myLoc = createGenomeLoc(contig, start, stop);\n        final GenomeLoc contigLoc = createOverEntireContig(contig);\n        return myLoc.intersect(contigLoc);\n    }","commit_id":"fe8a50ea5a678a6a3020e83d3e9ffde6b21a8a57","url":"https://github.com/broadgsa/gatk"},{"original_method":"@Requires(\"index >= 0\")\n        public final synchronized boolean hasContig(final int index) {\n            return lastIndex == index || dict.getSequence(index) != null;\n        }","id":15369,"modified_method":"@Requires(\"index >= 0\")\n        public final boolean hasContig(final int index) {\n            return lastIndex == index || dict.getSequence(index) != null;\n        }","commit_id":"fe8a50ea5a678a6a3020e83d3e9ffde6b21a8a57","url":"https://github.com/broadgsa/gatk"},{"original_method":"@Requires(\"contig != null\")\n        @Ensures(\"result >= 0\")\n        public synchronized final int getSequenceIndex(final String contig) {\n            if ( ! isCached(contig) ) {\n                updateCache(contig, -1);\n            }\n\n            return lastIndex;\n        }","id":15370,"modified_method":"@Requires(\"contig != null\")\n        @Ensures(\"result >= 0\")\n        public final int getSequenceIndex(final String contig) {\n            if ( ! isCached(contig) ) {\n                updateCache(contig, -1);\n            }\n\n            return lastIndex;\n        }","commit_id":"fe8a50ea5a678a6a3020e83d3e9ffde6b21a8a57","url":"https://github.com/broadgsa/gatk"},{"original_method":"@Requires({\"contig != null\", \"lastContig != null\"})\n        private synchronized boolean isCached(final String contig) {\n            return lastContig.equals(contig);\n        }","id":15371,"modified_method":"@Requires({\"contig != null\", \"lastContig != null\"})\n        private boolean isCached(final String contig) {\n            return lastContig.equals(contig);\n        }","commit_id":"fe8a50ea5a678a6a3020e83d3e9ffde6b21a8a57","url":"https://github.com/broadgsa/gatk"},{"original_method":"@Override\n    public F5LoadBalancerResponse createF5LoadBalancerResponse(ExternalLoadBalancerDeviceVO lbDeviceVO) {\n        F5LoadBalancerResponse response = new F5LoadBalancerResponse();\n        Host lbHost = _hostDao.findById(lbDeviceVO.getHostId());\n        Map<String, String> lbDetails = _detailsDao.findDetails(lbDeviceVO.getHostId());\n\n        response.setId(lbDeviceVO.getId());\n        response.setIpAddress(lbHost.getPrivateIpAddress());\n        response.setPhysicalNetworkId(lbDeviceVO.getPhysicalNetworkId());\n        response.setPublicInterface(lbDetails.get(\"publicInterface\"));\n        response.setPrivateInterface(lbDetails.get(\"privateInterface\"));\n        response.setDeviceName(lbDeviceVO.getDeviceName());\n        response.setDeviceCapacity(lbDeviceVO.getCapacity());\n        response.setInlineMode(lbDeviceVO.getIsInLineMode());\n        response.setDedicatedLoadBalancer(lbDeviceVO.getIsDedicatedDevice());\n        response.setProvider(lbDeviceVO.getProviderName());\n        response.setDeviceState(lbDeviceVO.getState().name());\n        response.setObjectName(\"f5loadbalancer\");\n        return response;\n    }","id":15372,"modified_method":"@Override\n    public F5LoadBalancerResponse createF5LoadBalancerResponse(ExternalLoadBalancerDeviceVO lbDeviceVO) {\n        F5LoadBalancerResponse response = new F5LoadBalancerResponse();\n        Host lbHost = _hostDao.findById(lbDeviceVO.getHostId());\n        Map<String, String> lbDetails = _detailsDao.findDetails(lbDeviceVO.getHostId());\n\n        response.setId(lbDeviceVO.getId());\n        response.setIpAddress(lbHost.getPrivateIpAddress());\n        response.setPhysicalNetworkId(lbDeviceVO.getPhysicalNetworkId());\n        response.setPublicInterface(lbDetails.get(\"publicInterface\"));\n        response.setPrivateInterface(lbDetails.get(\"privateInterface\"));\n        response.setDeviceName(lbDeviceVO.getDeviceName());\n        if (lbDeviceVO.getCapacity() == 0) {\n            long defaultLbCapacity = NumbersUtil.parseLong(_configDao.getValue(Config.DefaultExternalLoadBalancerCapacity.key()), 50);\n            response.setDeviceCapacity(defaultLbCapacity);\n        } else {\n            response.setDeviceCapacity(lbDeviceVO.getCapacity());\n        }\n        response.setInlineMode(lbDeviceVO.getIsInLineMode());\n        response.setDedicatedLoadBalancer(lbDeviceVO.getIsDedicatedDevice());\n        response.setProvider(lbDeviceVO.getProviderName());\n        response.setDeviceState(lbDeviceVO.getState().name());\n        response.setObjectName(\"f5loadbalancer\");\n        return response;\n    }","commit_id":"1f0ea28cc481452edf76342e2495ab3ced76c297","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public SrxFirewallResponse createSrxFirewallResponse(ExternalFirewallDeviceVO fwDeviceVO) {\n        SrxFirewallResponse response = new SrxFirewallResponse();\n        Map<String, String> fwDetails = _hostDetailDao.findDetails(fwDeviceVO.getHostId());\n        Host fwHost = _hostDao.findById(fwDeviceVO.getHostId());\n\n        response.setId(fwDeviceVO.getId());\n        response.setPhysicalNetworkId(fwDeviceVO.getPhysicalNetworkId());\n        response.setDeviceName(fwDeviceVO.getDeviceName());\n        response.setDeviceCapacity(fwDeviceVO.getCapacity());\n        response.setProvider(fwDeviceVO.getProviderName());\n        response.setDeviceState(fwDeviceVO.getDeviceState().name());\n        response.setIpAddress(fwHost.getPrivateIpAddress());\n        response.setPublicInterface(fwDetails.get(\"publicInterface\"));\n        response.setUsageInterface(fwDetails.get(\"usageInterface\"));\n        response.setPrivateInterface(fwDetails.get(\"privateInterface\"));\n        response.setPublicZone(fwDetails.get(\"publicZone\"));\n        response.setPrivateZone(fwDetails.get(\"privateZone\"));\n        response.setNumRetries(fwDetails.get(\"numRetries\"));\n        response.setTimeout(fwDetails.get(\"timeout\"));\n        response.setObjectName(\"srxfirewall\");\n        return response;\n    }","id":15373,"modified_method":"@Override\n    public SrxFirewallResponse createSrxFirewallResponse(ExternalFirewallDeviceVO fwDeviceVO) {\n        SrxFirewallResponse response = new SrxFirewallResponse();\n        Map<String, String> fwDetails = _hostDetailDao.findDetails(fwDeviceVO.getHostId());\n        Host fwHost = _hostDao.findById(fwDeviceVO.getHostId());\n\n        response.setId(fwDeviceVO.getId());\n        response.setPhysicalNetworkId(fwDeviceVO.getPhysicalNetworkId());\n        response.setDeviceName(fwDeviceVO.getDeviceName());\n        if (fwDeviceVO.getCapacity() == 0) {\n            long defaultFwCapacity = NumbersUtil.parseLong(_configDao.getValue(Config.DefaultExternalFirewallCapacity.key()), 50);\n            response.setDeviceCapacity(defaultFwCapacity);\n        } else {\n            response.setDeviceCapacity(fwDeviceVO.getCapacity());\n        }\n        response.setProvider(fwDeviceVO.getProviderName());\n        response.setDeviceState(fwDeviceVO.getDeviceState().name());\n        response.setIpAddress(fwHost.getPrivateIpAddress());\n        response.setPublicInterface(fwDetails.get(\"publicInterface\"));\n        response.setUsageInterface(fwDetails.get(\"usageInterface\"));\n        response.setPrivateInterface(fwDetails.get(\"privateInterface\"));\n        response.setPublicZone(fwDetails.get(\"publicZone\"));\n        response.setPrivateZone(fwDetails.get(\"privateZone\"));\n        response.setNumRetries(fwDetails.get(\"numRetries\"));\n        response.setTimeout(fwDetails.get(\"timeout\"));\n        response.setObjectName(\"srxfirewall\");\n        return response;\n    }","commit_id":"1f0ea28cc481452edf76342e2495ab3ced76c297","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public NetscalerLoadBalancerResponse createNetscalerLoadBalancerResponse(ExternalLoadBalancerDeviceVO lbDeviceVO) {\n        NetscalerLoadBalancerResponse response = new NetscalerLoadBalancerResponse();\n        Host lbHost = _hostDao.findById(lbDeviceVO.getHostId());\n        Map<String, String> lbDetails = _detailsDao.findDetails(lbDeviceVO.getHostId());\n\n        response.setId(lbDeviceVO.getId());\n        response.setIpAddress(lbHost.getPrivateIpAddress());\n        response.setPhysicalNetworkId(lbDeviceVO.getPhysicalNetworkId());\n        response.setPublicInterface(lbDetails.get(\"publicInterface\"));\n        response.setPrivateInterface(lbDetails.get(\"privateInterface\"));\n        response.setDeviceName(lbDeviceVO.getDeviceName());\n        response.setDeviceCapacity(lbDeviceVO.getCapacity());\n        response.setInlineMode(lbDeviceVO.getIsInLineMode());\n        response.setDedicatedLoadBalancer(lbDeviceVO.getIsDedicatedDevice());\n        response.setProvider(lbDeviceVO.getProviderName());\n        response.setDeviceState(lbDeviceVO.getState().name());\n        response.setObjectName(\"netscalerloadbalancer\");\n        return response;\n    }","id":15374,"modified_method":"@Override\n    public NetscalerLoadBalancerResponse createNetscalerLoadBalancerResponse(ExternalLoadBalancerDeviceVO lbDeviceVO) {\n        NetscalerLoadBalancerResponse response = new NetscalerLoadBalancerResponse();\n        Host lbHost = _hostDao.findById(lbDeviceVO.getHostId());\n        Map<String, String> lbDetails = _detailsDao.findDetails(lbDeviceVO.getHostId());\n\n        response.setId(lbDeviceVO.getId());\n        response.setIpAddress(lbHost.getPrivateIpAddress());\n        response.setPhysicalNetworkId(lbDeviceVO.getPhysicalNetworkId());\n        response.setPublicInterface(lbDetails.get(\"publicInterface\"));\n        response.setPrivateInterface(lbDetails.get(\"privateInterface\"));\n        response.setDeviceName(lbDeviceVO.getDeviceName());\n        if (lbDeviceVO.getCapacity() == 0) {\n            long defaultLbCapacity = NumbersUtil.parseLong(_configDao.getValue(Config.DefaultExternalLoadBalancerCapacity.key()), 50);\n            response.setDeviceCapacity(defaultLbCapacity);\n        } else {\n            response.setDeviceCapacity(lbDeviceVO.getCapacity());\n        }\n        response.setInlineMode(lbDeviceVO.getIsInLineMode());\n        response.setDedicatedLoadBalancer(lbDeviceVO.getIsDedicatedDevice());\n        response.setProvider(lbDeviceVO.getProviderName());\n        response.setDeviceState(lbDeviceVO.getState().name());\n        response.setObjectName(\"netscalerloadbalancer\");\n        return response;\n    }","commit_id":"1f0ea28cc481452edf76342e2495ab3ced76c297","url":"https://github.com/apache/cloudstack"},{"original_method":"public String getGroup() {\n        // TODO Auto-generated method stub\n        return \"cisco\";\n    }","id":15375,"modified_method":"public String getGroup() {\n        // TODO Create Configuration file to set group using packages\n        return \"laboratorio\";\n    }","commit_id":"1260aa370f41819ad9310532651d48274a42a0af","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private Category log() {\n        return Logger.getLogger(\"Rancid\");\n    }","id":15376,"modified_method":"private static Category log() {\n        return ThreadCategory.getInstance(RancidProvisioningAdapter.class);\n    }","commit_id":"1260aa370f41819ad9310532651d48274a42a0af","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Transactional\n    public void updateNode(int nodeId) throws ProvisioningAdapterException {\n        log().debug(\"RANCID PROVISIONING ADAPTER CALLED updateNode\");\n        try {\n            OnmsNode node = m_nodeDao.get(nodeId);\n        } catch (Exception e) {\n            sendAndThrow(nodeId, e);\n        }\n    }","id":15377,"modified_method":"@Transactional\n    public void updateNode(int nodeId) throws ProvisioningAdapterException {\n        log().debug(\"RANCID PROVISIONING ADAPTER CALLED updateNode\");\n        try {\n            String url = m_rwsConfig.getBaseUrl().getServer_url();\n            OnmsNode node = m_nodeDao.get(nodeId);\n            RancidNode r_node = RWSClientApi.getRWSRancidNode(url, m_rancidAdapterConfig.getGroup(), node.getLabel());\n            if (r_node.getDeviceName() != null ) {\n                RWSClientApi.updateRWSRancidNode(url, getSuitableRancidNode(node));\n            } else {\n                RWSClientApi.createRWSRancidNode(url,getSuitableRancidNode(node));                \n            }\n            RWSClientApi.createOrUpdateRWSAuthNode(url, getSuitableRancidNodeAuthentication(node));            \n        } catch (Exception e) {\n            sendAndThrow(nodeId, e);\n        }\n    }","commit_id":"1260aa370f41819ad9310532651d48274a42a0af","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void afterPropertiesSet() throws Exception {\n        // TODO Auto-generated method stub\n        // Put here your initialization if needed\n        \n    }","id":15378,"modified_method":"public void afterPropertiesSet() throws Exception {\n        // TODO Auto-generated method stub\n        // Put here your initialization if needed\n        RWSClientApi.init();\n    }","commit_id":"1260aa370f41819ad9310532651d48274a42a0af","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Transactional\n    public void addNode(int nodeId) throws ProvisioningAdapterException {\n        log().debug(\"RANCID PROVISIONING ADAPTER CALLED addNode\");\n        OnmsNode node = null;\n        try {\n            node = m_nodeDao.get(nodeId);\n//            RancidNode rn = new RancidNode(\"demo\", \"gugli_DIC2_1759\");\n//            rn.setDeviceType(RancidNode.DEVICE_TYPE_BAYNET);\n//            rn.setComment(\"Dic2 1759\");\n//            RWSClientApi.createRWSRancidNode(\"httUCIOLCD>LCLL\n            RancidNode r_node = new RancidNode(\"demo\", node.getLabel());\n            // Questa non potra' mai funzionare\n            r_node.setDeviceType(m_rancidAdapterConfig.getGroup());\n            RWSClientApi.createRWSRancidNode(m_rwsConfig.getBaseUrl().getServer_url(),r_node);\n        \n        } catch (Exception e) {\n            sendAndThrow(nodeId, e);\n        }\n    }","id":15379,"modified_method":"@Transactional\n    public void addNode(int nodeId) throws ProvisioningAdapterException {\n        log().debug(\"RANCID PROVISIONING ADAPTER CALLED addNode\");\n        try {\n            String url = m_rwsConfig.getBaseUrl().getServer_url();\n            OnmsNode node = m_nodeDao.get(nodeId);                                                                                                                                                                                            \n\n            RWSClientApi.createRWSRancidNode(url,getSuitableRancidNode(node));\n\n            RWSClientApi.createOrUpdateRWSAuthNode(url, getSuitableRancidNodeAuthentication(node));\n        } catch (Exception e) {\n            sendAndThrow(nodeId, e);\n        }\n    }","commit_id":"1260aa370f41819ad9310532651d48274a42a0af","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Transactional\n    public void deleteNode(int nodeId) throws ProvisioningAdapterException {\n        log().debug(\"RANCID PROVISIONING ADAPTER CALLED updateNode\");\n        try {\n            OnmsNode node = m_nodeDao.get(nodeId);\n//            DnsRecord record = new DnsRecord(node);\n//            DynamicDnsAdapter.delete(record);\n        } catch (Exception e) {\n            sendAndThrow(nodeId, e);\n        }\n    }","id":15380,"modified_method":"@Transactional\n    public void deleteNode(int nodeId) throws ProvisioningAdapterException {\n        log().debug(\"RANCID PROVISIONING ADAPTER CALLED deleteNode\");\n        try {\n            String url = m_rwsConfig.getBaseUrl().getServer_url();\n            OnmsNode node = m_nodeDao.get(nodeId);\n            \n            RWSClientApi.deleteRWSRancidNode(url, getSuitableRancidNode(node));\n            RWSClientApi.deleteRWSAuthNode(url, getSuitableRancidNodeAuthentication(node));\n        } catch (Exception e) {\n            sendAndThrow(nodeId, e);\n        }\n    }","commit_id":"1260aa370f41819ad9310532651d48274a42a0af","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getGroup() {\n        // TODO Auto-generated method stub\n        return \"cisco\";\n    }","id":15381,"modified_method":"public String getGroup() {\n        // TODO Create Configuration file to set group using packages\n        return \"laboratorio\";\n    }","commit_id":"0011f7ee9c8b926bc4aa29cc2e90e2595da74f9a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Transactional\n    public void addNode(int nodeId) throws ProvisioningAdapterException {\n        log().debug(\"RANCID PROVISIONING ADAPTER CALLED addNode\");\n        OnmsNode node = null;\n        try {\n            node = m_nodeDao.get(nodeId);\n//            RancidNode rn = new RancidNode(\"demo\", \"gugli_DIC2_1759\");\n//            rn.setDeviceType(RancidNode.DEVICE_TYPE_BAYNET);\n//            rn.setComment(\"Dic2 1759\");\n//            RWSClientApi.createRWSRancidNode(\"httUCIOLCD>LCLL\n            RancidNode r_node = new RancidNode(\"demo\", node.getLabel());\n            // Questa non potra' mai funzionare\n            r_node.setDeviceType(m_rancidAdapterConfig.getGroup());\n            RWSClientApi.createRWSRancidNode(m_rwsConfig.getBaseUrl().getServer_url(),r_node);\n        \n        } catch (Exception e) {\n            sendAndThrow(nodeId, e);\n        }\n    }","id":15382,"modified_method":"@Transactional\n    public void addNode(int nodeId) throws ProvisioningAdapterException {\n        log().debug(\"RANCID PROVISIONING ADAPTER CALLED addNode\");\n        try {\n            String url = m_rwsConfig.getBaseUrl().getServer_url();\n            OnmsNode node = m_nodeDao.get(nodeId);                                                                                                                                                                                            \n\n            RWSClientApi.createRWSRancidNode(url,getSuitableRancidNode(node));\n\n            RWSClientApi.createOrUpdateRWSAuthNode(url, getSuitableRancidNodeAuthentication(node));\n        } catch (Exception e) {\n            sendAndThrow(nodeId, e);\n        }\n    }","commit_id":"0011f7ee9c8b926bc4aa29cc2e90e2595da74f9a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void afterPropertiesSet() throws Exception {\n        // TODO Auto-generated method stub\n        // Put here your initialization if needed\n        \n    }","id":15383,"modified_method":"public void afterPropertiesSet() throws Exception {\n        // TODO Auto-generated method stub\n        // Put here your initialization if needed\n        RWSClientApi.init();\n    }","commit_id":"0011f7ee9c8b926bc4aa29cc2e90e2595da74f9a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Transactional\n    public void updateNode(int nodeId) throws ProvisioningAdapterException {\n        log().debug(\"RANCID PROVISIONING ADAPTER CALLED updateNode\");\n        try {\n            OnmsNode node = m_nodeDao.get(nodeId);\n        } catch (Exception e) {\n            sendAndThrow(nodeId, e);\n        }\n    }","id":15384,"modified_method":"@Transactional\n    public void updateNode(int nodeId) throws ProvisioningAdapterException {\n        log().debug(\"RANCID PROVISIONING ADAPTER CALLED updateNode\");\n        try {\n            String url = m_rwsConfig.getBaseUrl().getServer_url();\n            OnmsNode node = m_nodeDao.get(nodeId);\n            RancidNode r_node = RWSClientApi.getRWSRancidNode(url, m_rancidAdapterConfig.getGroup(), node.getLabel());\n            if (r_node.getDeviceName() != null ) {\n                RWSClientApi.updateRWSRancidNode(url, getSuitableRancidNode(node));\n            } else {\n                RWSClientApi.createRWSRancidNode(url,getSuitableRancidNode(node));                \n            }\n            RWSClientApi.createOrUpdateRWSAuthNode(url, getSuitableRancidNodeAuthentication(node));            \n        } catch (Exception e) {\n            sendAndThrow(nodeId, e);\n        }\n    }","commit_id":"0011f7ee9c8b926bc4aa29cc2e90e2595da74f9a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Transactional\n    public void deleteNode(int nodeId) throws ProvisioningAdapterException {\n        log().debug(\"RANCID PROVISIONING ADAPTER CALLED updateNode\");\n        try {\n            OnmsNode node = m_nodeDao.get(nodeId);\n//            DnsRecord record = new DnsRecord(node);\n//            DynamicDnsAdapter.delete(record);\n        } catch (Exception e) {\n            sendAndThrow(nodeId, e);\n        }\n    }","id":15385,"modified_method":"@Transactional\n    public void deleteNode(int nodeId) throws ProvisioningAdapterException {\n        log().debug(\"RANCID PROVISIONING ADAPTER CALLED deleteNode\");\n        try {\n            String url = m_rwsConfig.getBaseUrl().getServer_url();\n            OnmsNode node = m_nodeDao.get(nodeId);\n            \n            RWSClientApi.deleteRWSRancidNode(url, getSuitableRancidNode(node));\n            RWSClientApi.deleteRWSAuthNode(url, getSuitableRancidNodeAuthentication(node));\n        } catch (Exception e) {\n            sendAndThrow(nodeId, e);\n        }\n    }","commit_id":"0011f7ee9c8b926bc4aa29cc2e90e2595da74f9a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private Category log() {\n        return Logger.getLogger(\"Rancid\");\n    }","id":15386,"modified_method":"private static Category log() {\n        return ThreadCategory.getInstance(RancidProvisioningAdapter.class);\n    }","commit_id":"0011f7ee9c8b926bc4aa29cc2e90e2595da74f9a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getGroup() {\n        // TODO Auto-generated method stub\n        return \"cisco\";\n    }","id":15387,"modified_method":"public String getGroup() {\n        // TODO Create Configuration file to set group using packages\n        return \"laboratorio\";\n    }","commit_id":"2f0a50040354d764e48815d2f6c416f65b7ba4dd","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private Category log() {\n        return Logger.getLogger(\"Rancid\");\n    }","id":15388,"modified_method":"private static Category log() {\n        return ThreadCategory.getInstance(RancidProvisioningAdapter.class);\n    }","commit_id":"2f0a50040354d764e48815d2f6c416f65b7ba4dd","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Transactional\n    public void deleteNode(int nodeId) throws ProvisioningAdapterException {\n        log().debug(\"RANCID PROVISIONING ADAPTER CALLED updateNode\");\n        try {\n            OnmsNode node = m_nodeDao.get(nodeId);\n//            DnsRecord record = new DnsRecord(node);\n//            DynamicDnsAdapter.delete(record);\n        } catch (Exception e) {\n            sendAndThrow(nodeId, e);\n        }\n    }","id":15389,"modified_method":"@Transactional\n    public void deleteNode(int nodeId) throws ProvisioningAdapterException {\n        log().debug(\"RANCID PROVISIONING ADAPTER CALLED deleteNode\");\n        try {\n            String url = m_rwsConfig.getBaseUrl().getServer_url();\n            OnmsNode node = m_nodeDao.get(nodeId);\n            \n            RWSClientApi.deleteRWSRancidNode(url, getSuitableRancidNode(node));\n            RWSClientApi.deleteRWSAuthNode(url, getSuitableRancidNodeAuthentication(node));\n        } catch (Exception e) {\n            sendAndThrow(nodeId, e);\n        }\n    }","commit_id":"2f0a50040354d764e48815d2f6c416f65b7ba4dd","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void afterPropertiesSet() throws Exception {\n        // TODO Auto-generated method stub\n        // Put here your initialization if needed\n        \n    }","id":15390,"modified_method":"public void afterPropertiesSet() throws Exception {\n        // TODO Auto-generated method stub\n        // Put here your initialization if needed\n        RWSClientApi.init();\n    }","commit_id":"2f0a50040354d764e48815d2f6c416f65b7ba4dd","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Transactional\n    public void addNode(int nodeId) throws ProvisioningAdapterException {\n        log().debug(\"RANCID PROVISIONING ADAPTER CALLED addNode\");\n        OnmsNode node = null;\n        try {\n            node = m_nodeDao.get(nodeId);\n//            RancidNode rn = new RancidNode(\"demo\", \"gugli_DIC2_1759\");\n//            rn.setDeviceType(RancidNode.DEVICE_TYPE_BAYNET);\n//            rn.setComment(\"Dic2 1759\");\n//            RWSClientApi.createRWSRancidNode(\"httUCIOLCD>LCLL\n            RancidNode r_node = new RancidNode(\"demo\", node.getLabel());\n            // Questa non potra' mai funzionare\n            r_node.setDeviceType(m_rancidAdapterConfig.getGroup());\n            RWSClientApi.createRWSRancidNode(m_rwsConfig.getBaseUrl().getServer_url(),r_node);\n        \n        } catch (Exception e) {\n            sendAndThrow(nodeId, e);\n        }\n    }","id":15391,"modified_method":"@Transactional\n    public void addNode(int nodeId) throws ProvisioningAdapterException {\n        log().debug(\"RANCID PROVISIONING ADAPTER CALLED addNode\");\n        try {\n            String url = m_rwsConfig.getBaseUrl().getServer_url();\n            OnmsNode node = m_nodeDao.get(nodeId);                                                                                                                                                                                            \n\n            RWSClientApi.createRWSRancidNode(url,getSuitableRancidNode(node));\n\n            RWSClientApi.createOrUpdateRWSAuthNode(url, getSuitableRancidNodeAuthentication(node));\n        } catch (Exception e) {\n            sendAndThrow(nodeId, e);\n        }\n    }","commit_id":"2f0a50040354d764e48815d2f6c416f65b7ba4dd","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Transactional\n    public void updateNode(int nodeId) throws ProvisioningAdapterException {\n        log().debug(\"RANCID PROVISIONING ADAPTER CALLED updateNode\");\n        try {\n            OnmsNode node = m_nodeDao.get(nodeId);\n        } catch (Exception e) {\n            sendAndThrow(nodeId, e);\n        }\n    }","id":15392,"modified_method":"@Transactional\n    public void updateNode(int nodeId) throws ProvisioningAdapterException {\n        log().debug(\"RANCID PROVISIONING ADAPTER CALLED updateNode\");\n        try {\n            String url = m_rwsConfig.getBaseUrl().getServer_url();\n            OnmsNode node = m_nodeDao.get(nodeId);\n            RancidNode r_node = RWSClientApi.getRWSRancidNode(url, m_rancidAdapterConfig.getGroup(), node.getLabel());\n            if (r_node.getDeviceName() != null ) {\n                RWSClientApi.updateRWSRancidNode(url, getSuitableRancidNode(node));\n            } else {\n                RWSClientApi.createRWSRancidNode(url,getSuitableRancidNode(node));                \n            }\n            RWSClientApi.createOrUpdateRWSAuthNode(url, getSuitableRancidNodeAuthentication(node));            \n        } catch (Exception e) {\n            sendAndThrow(nodeId, e);\n        }\n    }","commit_id":"2f0a50040354d764e48815d2f6c416f65b7ba4dd","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public static void main(String[] a) throws KettleException\n\t{\n\t\tEnvUtil.environmentInit();\n\t\t\n\t    List<String> args = new ArrayList<String>();\n\t    for (int i=0;i<a.length;i++)\n\t    {\n\t        if (a[i].length()>0) args.add(a[i]);\n\t    }\n\n\t\tRepositoryMeta repinfo  = null;\n\t\tUserInfo       userinfo = null;\n\t\tJob            job      = null;\n\t\t\n\t\tStringBuffer optionRepname, optionUsername, optionPassword, optionJobname, optionDirname, optionFilename, optionLoglevel;\n        StringBuffer optionLogfile, optionLogfileOld, optionListdir, optionListjobs, optionListrep, optionNorep, optionVersion;\n\n\t\tCommandLineOption options[] = new CommandLineOption[] \n            {\n\t\t\t    new CommandLineOption(\"rep\", \"Repository name\", optionRepname=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"user\", \"Repository username\", optionUsername=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"pass\", \"Repository password\", optionPassword=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"job\", \"The name of the transformation to launch\", optionJobname=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"dir\", \"The directory (don't forget the leading /)\", optionDirname=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"file\", \"The filename (Job XML) to launch\", optionFilename=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"level\", \"The logging level (Basic, Detailed, Debug, Rowlevel, Error, Nothing)\", optionLoglevel=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"logfile\", \"The logging file to write to\", optionLogfile=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"log\", \"The logging file to write to (deprecated)\", optionLogfileOld=new StringBuffer(), false, true),\n\t\t\t    new CommandLineOption(\"listdir\", \"List the directories in the repository\", optionListdir=new StringBuffer(), true, false),\n\t\t\t    new CommandLineOption(\"listjobs\", \"List the jobs in the specified directory\", optionListjobs=new StringBuffer(), true, false),\n\t\t\t    new CommandLineOption(\"listrep\", \"List the available repositories\", optionListrep=new StringBuffer(), true, false),\n\t\t        new CommandLineOption(\"norep\", \"Do not log into the repository\", optionNorep=new StringBuffer(), true, false),\n                new CommandLineOption(\"version\", \"show the version, revision and build date\", optionVersion=new StringBuffer(), true, false),\n            };\n\n\t\tif (args.size()==0 ) \n\t\t{\n\t\t    CommandLineOption.printUsage(options);\n\t\t    System.exit(9);\n\t\t}\n        \n        LogWriter log = LogWriter.getInstance(LogWriter.LOG_LEVEL_BASIC);\n        \n        CommandLineOption.parseArguments(args, options, log);\n\n        String kettleRepname  = Const.getEnvironmentVariable(\"KETTLE_REPOSITORY\", null);\n        String kettleUsername = Const.getEnvironmentVariable(\"KETTLE_USER\", null);\n        String kettlePassword = Const.getEnvironmentVariable(\"KETTLE_PASSWORD\", null);\n        \n        if (!Const.isEmpty(kettleRepname )) optionRepname  = new StringBuffer(kettleRepname );\n        if (!Const.isEmpty(kettleUsername)) optionUsername = new StringBuffer(kettleUsername);\n        if (!Const.isEmpty(kettlePassword)) optionPassword = new StringBuffer(kettlePassword);\n        \n        LogWriter.setConsoleAppenderDebug();\n        \n        if (Const.isEmpty(optionLogfile) && !Const.isEmpty(optionLogfileOld))\n        {\n           // if the old style of logging name is filled in, and the new one is not\n           // overwrite the new by the old\n           optionLogfile = optionLogfileOld;\n        }\n        \n        if (Const.isEmpty(optionLogfile))\n        {\n            log=LogWriter.getInstance( LogWriter.LOG_LEVEL_BASIC );\n        }\n        else\n        {\n            log=LogWriter.getInstance( optionLogfile.toString(), true, LogWriter.LOG_LEVEL_BASIC );\n        }\n        \n        if (!Const.isEmpty(optionLoglevel)) \n        {\n            log.setLogLevel(optionLoglevel.toString());\n            log.logMinimal(STRING_KITCHEN, Messages.getString(\"Kitchen.Log.LogLevel\",log.getLogLevelLongDesc()));\n        } \n\t\t\n        if (!Const.isEmpty(optionVersion))\n        {\n            BuildVersion buildVersion = BuildVersion.getInstance();\n            log.logBasic(\"Kitchen\", Messages.getString(\"Kitchen.Log.KettleVersion\",Const.VERSION,\"\"+buildVersion.getVersion(),\"\"+buildVersion.getBuildDate()));\n            if (a.length==1) System.exit(6);\n        }\n        \n        // Start the action...\n        //\n        if (!Const.isEmpty(optionRepname) && !Const.isEmpty(optionUsername)) \t\r\n        {\r\n        \tif(log.isDetailed()) log.logDetailed(STRING_KITCHEN,  Messages.getString(\"Kitchen.Log.RepUsernameSupplied\"));\r\n        }\n\n\t\tlog.logMinimal(STRING_KITCHEN, Messages.getString(\"Kitchen.Log.Starting\"));\r\n\t\t\n\t\t\n\t\t/* Load the plugins etc.*/\n\t\ttry {\n\t\t\tStepLoader.init();\n\t\t}\n\t\tcatch(KettleException e)\n\t\t{\n\t\t\tlog.logError(STRING_KITCHEN, Messages.getString(\"Kitchen.Error.LoadingSteps\"), e);\r\n\t\t\t\n\t\t\tSystem.exit(8);\n\t\t}\n\t\tStepLoader stepLoader = StepLoader.getInstance();\n        \n        /* Load the plugins etc.*/\n\t\ttry \n\t\t{\n\t\t\tJobEntryLoader.init();\n\t\t}\n\t\tcatch(KettleException e)\n        {\n            log.logError(STRING_KITCHEN, Messages.getString(\"Kitchen.Error.LoadingJobEntries\"), e);\r\n            \n            return;\n        }\n\n\t\tDate start, stop;\n\t\tCalendar cal;\n\t\tSimpleDateFormat df = new SimpleDateFormat(\"yyyy/MM/dd HH:mm:ss.SSS\");\n\t\tcal=Calendar.getInstance();\n\t\tstart=cal.getTime();\n\t\t\t\t\n\t\tif(log.isDebug()) log.logDebug(STRING_KITCHEN, Messages.getString(\"Kitchen.Log.AllocateNewJob\"));\r\n\t\t\r\n\t\t\n\t\tJobMeta jobMeta = new JobMeta(log);\n        \n        // In case we use a repository...\n        Repository repository = null;\n\n\t\ttry\n\t\t{\n\t\t\t// Read kettle job specified on command-line?\n\t\t\tif (!Const.isEmpty(optionRepname) || !Const.isEmpty(optionFilename))\n\t\t\t{\n\t\t\t\tlog.logDebug(STRING_KITCHEN, \"Parsing command line options.\");\n\t\t\t\tif (!Const.isEmpty(optionRepname) && !\"Y\".equalsIgnoreCase(optionNorep.toString()))\n\t\t\t\t{\n\t\t\t\t\tif(log.isDebug()) log.logDebug(STRING_KITCHEN, Messages.getString(\"Kitchen.Log.LoadingRep\"));\r\n\t\t\t\t\t\n\t\t\t\t\tRepositoriesMeta repsinfo = new RepositoriesMeta(log);\n\t\t\t\t\tif (repsinfo.readData())\n\t\t\t\t\t{\n\t\t\t\t\t\tif(log.isDebug())log.logDebug(STRING_KITCHEN, Messages.getString(\"Kitchen.Log.FindingRep\",\"\"+optionRepname));\n\t\t\t\t\t\trepinfo = repsinfo.findRepository(optionRepname.toString());\n\t\t\t\t\t\tif (repinfo!=null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Define and connect to the repository...\n\t\t\t\t\t\t\tif(log.isDebug())log.logDebug(STRING_KITCHEN, \"Allocate & connect to repository.\");\n\t\t\t\t\t\t\trepository = new Repository(log, repinfo, userinfo);\n\t\t\t\t\t\t\tif (repository.connect(\"Kitchen commandline\"))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tRepositoryDirectory directory = repository.getDirectoryTree(); // Default = root\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Find the directory name if one is specified...\n\t\t\t\t\t\t\t\tif (!Const.isEmpty(optionDirname))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tdirectory = repository.getDirectoryTree().findDirectory(optionDirname.toString());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (directory!=null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t// Check username, password\n\t\t\t\t\t\t\t\t\tif(log.isDebug())log.logDebug(STRING_KITCHEN, \"Check supplied username and password.\");\n\t\t\t\t\t\t\t\t\tuserinfo = new UserInfo(repository, optionUsername.toString(), optionPassword.toString());\n\t\t\t\t\t\t\t\t\tif (userinfo.getID()>0)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t    // Load a job\n\t\t\t\t\t\t\t\t\t\tif (!Const.isEmpty(optionJobname))\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif(log.isDebug())log.logDebug(STRING_KITCHEN, \"Load the job info...\");\n\t\t\t\t\t\t\t\t\t\t\tjobMeta =  new JobMeta(log, repository, optionJobname.toString(), directory);\n\t\t\t\t\t\t\t\t\t\t\tif(log.isDebug())log.logDebug(STRING_KITCHEN, \"Allocate job...\");\n\t\t\t\t\t\t\t\t\t\t\tjob = new Job(log, stepLoader, repository, jobMeta);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t// List the jobs in the repository\n\t\t\t\t\t\t\t\t\t\tif (\"Y\".equalsIgnoreCase(optionListjobs.toString()))\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif(log.isDebug())log.logDebug(STRING_KITCHEN, \"Getting list of jobs in directory: \"+directory);\n\t\t\t\t\t\t\t\t\t\t\tString jobnames[] = repository.getJobNames(directory.getID());\n\t\t\t\t\t\t\t\t\t\t\tfor (int i=0;i<jobnames.length;i++)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tSystem.out.println(jobnames[i]);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t// List the directories in the repository\n\t\t\t\t\t\t\t\t\t\tif (\"Y\".equalsIgnoreCase(optionListdir.toString()))\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tString dirnames[] = repository.getDirectoryNames(directory.getID());\n\t\t\t\t\t\t\t\t\t\t\tfor (int i=0;i<dirnames.length;i++)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tSystem.out.println(dirnames[i]);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tSystem.out.println(\"ERROR: Can't verify username and password.\");\n\t\t\t\t\t\t\t\t\t\tuserinfo=null;\n\t\t\t\t\t\t\t\t\t\trepinfo=null;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tSystem.out.println(\"ERROR: Can't find the supplied directory [\"+optionDirname+\"]\");\n\t\t\t\t\t\t\t\t\tuserinfo=null;\n\t\t\t\t\t\t\t\t\trepinfo=null;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tSystem.out.println(\"ERROR: Can't connect to the repository.\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tSystem.out.println(\"ERROR: No repository provided, can't load job.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tSystem.out.println(\"ERROR: No repositories defined on this system.\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n                // Try to load if from file anyway.\n\t\t\t\tif (!Const.isEmpty(optionFilename) && job==null)\n\t\t\t\t{\n\t\t\t\t\tjobMeta = new JobMeta(log, optionFilename.toString(), null, null);\n\t\t\t\t\tjob = new Job(log, stepLoader, null, jobMeta);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\tif (\"Y\".equalsIgnoreCase(optionListrep.toString()))\n\t\t\t{\n\t\t\t\tRepositoriesMeta ri = new RepositoriesMeta(log);\n\t\t\t\tif (ri.readData())\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println(\"List of repositories:\");\n\t\t\t\t\tfor (int i=0;i<ri.nrRepositories();i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tRepositoryMeta rinfo = ri.getRepository(i);\n\t\t\t\t\t\tSystem.out.println(\"#\"+(i+1)+\" : \"+rinfo.getName()+\" [\"+rinfo.getDescription()+\"] \");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println(\"ERROR: Unable to read/parse the repositories XML file.\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch(KettleException e)\n\t\t{\n\t\t\tjob=null;\n\t\t\tjobMeta=null;\n\t\t\tSystem.out.println(\"Processing stopped because of an error: \"+e.getMessage());\n\t\t}\n\n\t\tif (job==null)\n\t\t{\n\t\t\tif (!\"Y\".equalsIgnoreCase(optionListjobs.toString()) &&  \n\t\t\t\t!\"Y\".equalsIgnoreCase(optionListdir.toString()) && \n\t\t\t\t!\"Y\".equalsIgnoreCase(optionListrep.toString()) \n\t\t\t    )\n\t\t\t{\n\t\t\t\tSystem.out.println(Messages.getString(\"Kitchen.Error.canNotLoadJob\"));\t\t\t    \n\t\t\t}\n\n            System.exit(7);\n\t\t}\n\t\t\n\t\tResult result = null;\n\n        int returnCode=0;\n        \n\t\ttry\n\t\t{\n            // Set the arguments on the job metadata as well...\n            if ( args.size() == 0 )\n            {\n                job.getJobMeta().setArguments(null);\n            }\n            else\n            {\n                job.getJobMeta().setArguments((String[]) args.toArray(new String[args.size()]));\n            }\n            job.initializeVariablesFrom(null);\n            job.getJobMeta().setInternalKettleVariables(job);\n            \n\t\t\tresult = job.execute(); // Execute the selected job.\t\t\n\t\t\tjob.endProcessing(\"end\", result);  // The bookkeeping...\n\t\t}\n\t\tcatch(KettleJobException je)\n\t\t{\n            if (result==null)\n            {\n                result = new Result();\n            }\n            result.setNrErrors(1L);\n            \n\t\t\ttry\n\t\t\t{\n\t\t\t\tjob.endProcessing(\"error\", result);\n\t\t\t}\n\t\t\tcatch(KettleJobException je2)\n\t\t\t{\n\t\t\t\tlog.logError(job.getName(), \"A serious error occured : \"+je2.getMessage());\n                returnCode = 2;\n\t\t\t}\n\t\t}\n        finally\n        {\n            if (repository!=null) repository.disconnect();\n        }\n        \n\t\tlog.logMinimal(STRING_KITCHEN, Messages.getString(\"Kitchen.Log.Finished\"));\r\n\t\t\n\t\t\n\t\tif (result!=null && result.getNrErrors()!=0)\n\t\t{\n\t\t\tlog.logError(STRING_KITCHEN, Messages.getString(\"Kitchen.Error.FinishedWithErrors\"));\n            returnCode = 1;\n\t\t}\n\t\tcal=Calendar.getInstance();\n\t\tstop=cal.getTime();\n\t\tString begin=df.format(start).toString();\n\t\tString end  =df.format(stop).toString();\n\n\t\tlog.logMinimal(STRING_KITCHEN, \"Start=\"+begin+\", Stop=\"+end);\n\t\tlong millis=stop.getTime()-start.getTime();\n\t\tlog.logMinimal(STRING_KITCHEN, \"Processing ended after \"+(millis/1000)+\" seconds.\");\n        \n        System.exit(returnCode);\n\n\t}","id":15393,"modified_method":"public static void main(String[] a) throws KettleException\n\t{\n\t\tEnvUtil.environmentInit();\n\t\t\n\t    List<String> args = new ArrayList<String>();\n\t    for (int i=0;i<a.length;i++)\n\t    {\n\t        if (a[i].length()>0) args.add(a[i]);\n\t    }\n\n\t\tRepositoryMeta repinfo  = null;\n\t\tUserInfo       userinfo = null;\n\t\tJob            job      = null;\n\t\t\n\t\tStringBuffer optionRepname, optionUsername, optionPassword, optionJobname, optionDirname, optionFilename, optionLoglevel;\n        StringBuffer optionLogfile, optionLogfileOld, optionListdir, optionListjobs, optionListrep, optionNorep, optionVersion;\n\n\t\tCommandLineOption options[] = new CommandLineOption[] \n            {\n\t\t\t    new CommandLineOption(\"rep\", \"Repository name\", optionRepname=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"user\", \"Repository username\", optionUsername=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"pass\", \"Repository password\", optionPassword=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"job\", \"The name of the transformation to launch\", optionJobname=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"dir\", \"The directory (don't forget the leading /)\", optionDirname=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"file\", \"The filename (Job XML) to launch\", optionFilename=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"level\", \"The logging level (Basic, Detailed, Debug, Rowlevel, Error, Nothing)\", optionLoglevel=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"logfile\", \"The logging file to write to\", optionLogfile=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"log\", \"The logging file to write to (deprecated)\", optionLogfileOld=new StringBuffer(), false, true),\n\t\t\t    new CommandLineOption(\"listdir\", \"List the directories in the repository\", optionListdir=new StringBuffer(), true, false),\n\t\t\t    new CommandLineOption(\"listjobs\", \"List the jobs in the specified directory\", optionListjobs=new StringBuffer(), true, false),\n\t\t\t    new CommandLineOption(\"listrep\", \"List the available repositories\", optionListrep=new StringBuffer(), true, false),\n\t\t        new CommandLineOption(\"norep\", \"Do not log into the repository\", optionNorep=new StringBuffer(), true, false),\n                new CommandLineOption(\"version\", \"show the version, revision and build date\", optionVersion=new StringBuffer(), true, false),\n            };\n\n\t\tif (args.size()==0 ) \n\t\t{\n\t\t    CommandLineOption.printUsage(options);\n\t\t    System.exit(9);\n\t\t}\n        \n        LogWriter log = LogWriter.getInstance(LogWriter.LOG_LEVEL_BASIC);\n        \n        CommandLineOption.parseArguments(args, options, log);\n\n        String kettleRepname  = Const.getEnvironmentVariable(\"KETTLE_REPOSITORY\", null);\n        String kettleUsername = Const.getEnvironmentVariable(\"KETTLE_USER\", null);\n        String kettlePassword = Const.getEnvironmentVariable(\"KETTLE_PASSWORD\", null);\n        \n        if (!Const.isEmpty(kettleRepname )) optionRepname  = new StringBuffer(kettleRepname );\n        if (!Const.isEmpty(kettleUsername)) optionUsername = new StringBuffer(kettleUsername);\n        if (!Const.isEmpty(kettlePassword)) optionPassword = new StringBuffer(kettlePassword);\n        \n        LogWriter.setConsoleAppenderDebug();\n        \n        if (Const.isEmpty(optionLogfile) && !Const.isEmpty(optionLogfileOld))\n        {\n           // if the old style of logging name is filled in, and the new one is not\n           // overwrite the new by the old\n           optionLogfile = optionLogfileOld;\n        }\n        \n        if (Const.isEmpty(optionLogfile))\n        {\n            log=LogWriter.getInstance( LogWriter.LOG_LEVEL_BASIC );\n        }\n        else\n        {\n            log=LogWriter.getInstance( optionLogfile.toString(), true, LogWriter.LOG_LEVEL_BASIC );\n        }\n        \n        if (!Const.isEmpty(optionLoglevel)) \n        {\n            log.setLogLevel(optionLoglevel.toString());\n            log.logMinimal(STRING_KITCHEN, Messages.getString(\"Kitchen.Log.LogLevel\",log.getLogLevelLongDesc()));\n        } \n\t\t\n        if (!Const.isEmpty(optionVersion))\n        {\n            BuildVersion buildVersion = BuildVersion.getInstance();\n            log.logBasic(\"Kitchen\", Messages.getString(\"Kitchen.Log.KettleVersion\",Const.VERSION,\"\"+buildVersion.getVersion(),\"\"+buildVersion.getBuildDate()));\n            if (a.length==1) System.exit(6);\n        }\n        \n        // Start the action...\n        //\n        if (!Const.isEmpty(optionRepname) && !Const.isEmpty(optionUsername)) \t\r\n        {\r\n        \tif(log.isDetailed()) log.logDetailed(STRING_KITCHEN,  Messages.getString(\"Kitchen.Log.RepUsernameSupplied\"));\r\n        }\n\n\t\tlog.logMinimal(STRING_KITCHEN, Messages.getString(\"Kitchen.Log.Starting\"));\r\n\t\t\n\t\t\n\t\t/* Load the plugins etc.*/\n\t\ttry {\n\t\t\tStepLoader.init();\n\t\t}\n\t\tcatch(KettleException e)\n\t\t{\n\t\t\tlog.logError(STRING_KITCHEN, Messages.getString(\"Kitchen.Error.LoadingSteps\"), e);\r\n\t\t\t\n\t\t\tSystem.exit(8);\n\t\t}\n\t\tStepLoader stepLoader = StepLoader.getInstance();\n        \n        /* Load the plugins etc.*/\n\t\ttry \n\t\t{\n\t\t\tJobEntryLoader.init();\n\t\t}\n\t\tcatch(KettleException e)\n        {\n            log.logError(STRING_KITCHEN, Messages.getString(\"Kitchen.Error.LoadingJobEntries\"), e);\r\n            \n            return;\n        }\n\n\t\tDate start, stop;\n\t\tCalendar cal;\n\t\tSimpleDateFormat df = new SimpleDateFormat(\"yyyy/MM/dd HH:mm:ss.SSS\");\n\t\tcal=Calendar.getInstance();\n\t\tstart=cal.getTime();\n\t\t\t\t\n\t\tif(log.isDebug()) log.logDebug(STRING_KITCHEN, Messages.getString(\"Kitchen.Log.AllocateNewJob\"));\r\n\t\t\r\n\t\t\n\t\tJobMeta jobMeta = new JobMeta(log);\n        \n        // In case we use a repository...\n        Repository repository = null;\n\n\t\ttry\n\t\t{\n\t\t\t// Read kettle job specified on command-line?\n\t\t\tif (!Const.isEmpty(optionRepname) || !Const.isEmpty(optionFilename))\n\t\t\t{\n\t\t\t\tif(log.isDebug()) log.logDebug(STRING_KITCHEN, Messages.getString(\"Kitchen.Log.ParsingCommandLine\"));\n\t\t\t\tif (!Const.isEmpty(optionRepname) && !\"Y\".equalsIgnoreCase(optionNorep.toString()))\n\t\t\t\t{\n\t\t\t\t\tif(log.isDebug()) log.logDebug(STRING_KITCHEN, Messages.getString(\"Kitchen.Log.LoadingRep\"));\r\n\t\t\t\t\t\n\t\t\t\t\tRepositoriesMeta repsinfo = new RepositoriesMeta(log);\n\t\t\t\t\tif (repsinfo.readData())\n\t\t\t\t\t{\n\t\t\t\t\t\tif(log.isDebug())log.logDebug(STRING_KITCHEN, Messages.getString(\"Kitchen.Log.FindingRep\",\"\"+optionRepname));\n\t\t\t\t\t\trepinfo = repsinfo.findRepository(optionRepname.toString());\n\t\t\t\t\t\tif (repinfo!=null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Define and connect to the repository...\n\t\t\t\t\t\t\tif(log.isDebug())log.logDebug(STRING_KITCHEN, Messages.getString(\"Kitchen.Log.Alocate&ConnectRep\"));\r\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\trepository = new Repository(log, repinfo, userinfo);\n\t\t\t\t\t\t\tif (repository.connect(\"Kitchen commandline\"))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tRepositoryDirectory directory = repository.getDirectoryTree(); // Default = root\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Find the directory name if one is specified...\n\t\t\t\t\t\t\t\tif (!Const.isEmpty(optionDirname))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tdirectory = repository.getDirectoryTree().findDirectory(optionDirname.toString());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (directory!=null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t// Check username, password\n\t\t\t\t\t\t\t\t\tif(log.isDebug())log.logDebug(STRING_KITCHEN, Messages.getString(\"Kitchen.Log.CheckUserPass\"));\r\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tuserinfo = new UserInfo(repository, optionUsername.toString(), optionPassword.toString());\n\t\t\t\t\t\t\t\t\tif (userinfo.getID()>0)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t    // Load a job\n\t\t\t\t\t\t\t\t\t\tif (!Const.isEmpty(optionJobname))\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif(log.isDebug())log.logDebug(STRING_KITCHEN,Messages.getString(\"Kitchen.Log.LoadingJobInfo\"));\r\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tjobMeta =  new JobMeta(log, repository, optionJobname.toString(), directory);\n\t\t\t\t\t\t\t\t\t\t\tif(log.isDebug())log.logDebug(STRING_KITCHEN, Messages.getString(\"Kitchen.Log.AllocateJob\"));\r\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tjob = new Job(log, stepLoader, repository, jobMeta);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t// List the jobs in the repository\n\t\t\t\t\t\t\t\t\t\tif (\"Y\".equalsIgnoreCase(optionListjobs.toString()))\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif(log.isDebug())log.logDebug(STRING_KITCHEN, Messages.getString(\"Kitchen.Log.GettingLostJobsInDirectory\",\"\"+directory));\r\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tString jobnames[] = repository.getJobNames(directory.getID());\n\t\t\t\t\t\t\t\t\t\t\tfor (int i=0;i<jobnames.length;i++)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tSystem.out.println(jobnames[i]);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t// List the directories in the repository\n\t\t\t\t\t\t\t\t\t\tif (\"Y\".equalsIgnoreCase(optionListdir.toString()))\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tString dirnames[] = repository.getDirectoryNames(directory.getID());\n\t\t\t\t\t\t\t\t\t\t\tfor (int i=0;i<dirnames.length;i++)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tSystem.out.println(dirnames[i]);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tSystem.out.println(Messages.getString(\"Kitchen.Error.CanNotVerifyUserPass\"));\r\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tuserinfo=null;\n\t\t\t\t\t\t\t\t\t\trepinfo=null;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tSystem.out.println(Messages.getString(\"Kitchen.Error.CanNotFindSuppliedDirectory\",optionDirname+\"\"));\r\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tuserinfo=null;\n\t\t\t\t\t\t\t\t\trepinfo=null;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tSystem.out.println(Messages.getString(\"Kitchen.Error.CanNotConnectRep\"));\r\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tSystem.out.println(Messages.getString(\"Kitchen.Error.NoRepProvided\"));\r\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tSystem.out.println(Messages.getString(\"Kitchen.Error.NoRepDefinied\"));\r\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n                // Try to load if from file anyway.\n\t\t\t\tif (!Const.isEmpty(optionFilename) && job==null)\n\t\t\t\t{\n\t\t\t\t\tjobMeta = new JobMeta(log, optionFilename.toString(), null, null);\n\t\t\t\t\tjob = new Job(log, stepLoader, null, jobMeta);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\tif (\"Y\".equalsIgnoreCase(optionListrep.toString()))\n\t\t\t{\n\t\t\t\tRepositoriesMeta ri = new RepositoriesMeta(log);\n\t\t\t\tif (ri.readData())\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println(Messages.getString(\"Kitchen.Log.ListRep\"));\r\n\t\t\t\t\t\n\t\t\t\t\tfor (int i=0;i<ri.nrRepositories();i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tRepositoryMeta rinfo = ri.getRepository(i);\n\t\t\t\t\t\tSystem.out.println(\"#\"+(i+1)+\" : \"+rinfo.getName()+\" [\"+rinfo.getDescription()+\"] \");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println(Messages.getString(\"Kitchen.Error.UnableToReadXMLFile\"));\r\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch(KettleException e)\n\t\t{\n\t\t\tjob=null;\n\t\t\tjobMeta=null;\n\t\t\tSystem.out.println(Messages.getString(\"Kitchen.Error.StopProcess\",e.getMessage()));\r\n\t\t\t\n\t\t}\n\n\t\tif (job==null)\n\t\t{\n\t\t\tif (!\"Y\".equalsIgnoreCase(optionListjobs.toString()) &&  \n\t\t\t\t!\"Y\".equalsIgnoreCase(optionListdir.toString()) && \n\t\t\t\t!\"Y\".equalsIgnoreCase(optionListrep.toString()) \n\t\t\t    )\n\t\t\t{\n\t\t\t\tSystem.out.println(Messages.getString(\"Kitchen.Error.canNotLoadJob\"));\t\t\t    \n\t\t\t}\n\n            System.exit(7);\n\t\t}\n\t\t\n\t\tResult result = null;\n\n        int returnCode=0;\n        \n\t\ttry\n\t\t{\n            // Set the arguments on the job metadata as well...\n            if ( args.size() == 0 )\n            {\n                job.getJobMeta().setArguments(null);\n            }\n            else\n            {\n                job.getJobMeta().setArguments((String[]) args.toArray(new String[args.size()]));\n            }\n            job.initializeVariablesFrom(null);\n            job.getJobMeta().setInternalKettleVariables(job);\n            \n\t\t\tresult = job.execute(); // Execute the selected job.\t\t\n\t\t\tjob.endProcessing(\"end\", result);  // The bookkeeping...\n\t\t}\n\t\tcatch(KettleJobException je)\n\t\t{\n            if (result==null)\n            {\n                result = new Result();\n            }\n            result.setNrErrors(1L);\n            \n\t\t\ttry\n\t\t\t{\n\t\t\t\tjob.endProcessing(\"error\", result);\n\t\t\t}\n\t\t\tcatch(KettleJobException je2)\n\t\t\t{\n\t\t\t\tlog.logError(job.getName(), Messages.getString(\"Kitchen.Error.SeriousError\",je2.getMessage()));\r\n\t\t\t\t\n                returnCode = 2;\n\t\t\t}\n\t\t}\n        finally\n        {\n            if (repository!=null) repository.disconnect();\n        }\n        \n\t\tlog.logMinimal(STRING_KITCHEN, Messages.getString(\"Kitchen.Log.Finished\"));\r\n\t\t\n\t\t\n\t\tif (result!=null && result.getNrErrors()!=0)\n\t\t{\n\t\t\tlog.logError(STRING_KITCHEN, Messages.getString(\"Kitchen.Error.FinishedWithErrors\"));\n            returnCode = 1;\n\t\t}\n\t\tcal=Calendar.getInstance();\n\t\tstop=cal.getTime();\n\t\tString begin=df.format(start).toString();\n\t\tString end  =df.format(stop).toString();\n\n\t\tlog.logMinimal(STRING_KITCHEN, Messages.getString(\"Kitchen.Log.StartStop\",begin,end));\r\n\t\t\n\t\tlong millis=stop.getTime()-start.getTime();\n\t\tlog.logMinimal(STRING_KITCHEN,  Messages.getString(\"Kitchen.Log.ProcessEndAfter\",\"\"+(millis/1000)));\r\n\t\t\n        \n        System.exit(returnCode);\n\n\t}","commit_id":"300ff794dfd6e5df1540abada309aaa6c8bc74e6","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public static void main(String[] a) throws KettleException\n\t{\n\t\tEnvUtil.environmentInit();\n\t\t\n\t    List<String> args = new ArrayList<String>();\n\t    for (int i=0;i<a.length;i++) \n\t    {\n\t        if (a[i].length()>0) \n            {\n                args.add(a[i]);\n            }\n\t    }\n\n\t\tRepositoryMeta repinfo  = null;\n\t\tUserInfo       userinfo = null;\n\t\tTrans          trans    = null;\n\n\t\t// The options: \n\t\tStringBuffer optionRepname, optionUsername, optionPassword, optionTransname, optionDirname, optionFilename, optionLoglevel;\n\t\tStringBuffer optionLogfile, optionLogfileOld, optionListdir, optionListtrans, optionListrep, optionExprep, optionNorep, optionSafemode, optionVersion, optionJarFilename;\n        \n\t\tCommandLineOption options[] = new CommandLineOption[] \n            {\n\t\t\t    new CommandLineOption(\"rep\", \"Repository name\", optionRepname=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"user\", \"Repository username\", optionUsername=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"pass\", \"Repository password\", optionPassword=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"trans\", \"The name of the transformation to launch\", optionTransname=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"dir\", \"The directory (don't forget the leading /)\", optionDirname=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"file\", \"The filename (Transformation in XML) to launch\", optionFilename=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"level\", \"The logging level (Basic, Detailed, Debug, Rowlevel, Error, Nothing)\", optionLoglevel=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"logfile\", \"The logging file to write to\", optionLogfile=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"log\", \"The logging file to write to (deprecated)\", optionLogfileOld=new StringBuffer(), false, true),\n\t\t\t    new CommandLineOption(\"listdir\", \"List the directories in the repository\", optionListdir=new StringBuffer(), true, false),\n\t\t\t    new CommandLineOption(\"listtrans\", \"List the transformations in the specified directory\", optionListtrans=new StringBuffer(), true, false),\n\t\t\t    new CommandLineOption(\"listrep\", \"List the available repositories\", optionListrep=new StringBuffer(), true, false),\n\t\t        new CommandLineOption(\"exprep\", \"Export all repository objects to one XML file\", optionExprep=new StringBuffer(), true, false),\n\t\t        new CommandLineOption(\"norep\", \"Do not log into the repository\", optionNorep=new StringBuffer(), true, false),\n\t\t        new CommandLineOption(\"safemode\", \"Run in safe mode: with extra checking enabled\", optionSafemode=new StringBuffer(), true, false),\n                new CommandLineOption(\"version\", \"show the version, revision and build date\", optionVersion=new StringBuffer(), true, false),\n                new CommandLineOption(\"jarfile\", \"specifies the jar filename\", optionJarFilename=new StringBuffer(), false, true),\n            };\n\n\t\tif (args.size()==0 ) \n\t\t{\n\t\t\tCommandLineOption.printUsage(options);\n            System.exit(9);\n\t\t}\n\n        LogWriter log;\n        LogWriter.setConsoleAppenderDebug();\n        // start with the default logger until we find out otherwise\n        log=LogWriter.getInstance( LogWriter.LOG_LEVEL_BASIC );\n\n\t\t// Parse the options...\n\t\tif( !CommandLineOption.parseArguments(args, options, log) ) {\n            log.logError(\"Pan\", \"Command line option not understood\");\n            System.exit(8);\n\t\t}\n\t\t\n\t\tString kettleRepname  = Const.getEnvironmentVariable(\"KETTLE_REPOSITORY\", null);\n        String kettleUsername = Const.getEnvironmentVariable(\"KETTLE_USER\", null);\n        String kettlePassword = Const.getEnvironmentVariable(\"KETTLE_PASSWORD\", null);\n        \n        if (kettleRepname !=null && kettleRepname .length()>0) optionRepname  = new StringBuffer(kettleRepname);\n        if (kettleUsername!=null && kettleUsername.length()>0) optionUsername = new StringBuffer(kettleUsername);\n        if (kettlePassword!=null && kettlePassword.length()>0) optionPassword = new StringBuffer(kettlePassword);\n        \n        \n        if (Const.isEmpty(optionLogfile) && !Const.isEmpty(optionLogfileOld))\n        {\n           // if the old style of logging name is filled in, and the new one is not\n           // overwrite the new by the old\n           optionLogfile = optionLogfileOld;\n        }\n        \n        if (!Const.isEmpty(optionLogfile))\n        {\n            log=LogWriter.getInstance( optionLogfile.toString(), true, LogWriter.LOG_LEVEL_BASIC );\n        }\n        \n        if (!Const.isEmpty(optionLoglevel)) \n        {\n            log.setLogLevel(optionLoglevel.toString());\n            log.logMinimal(\"Pan\", \"Logging is at level : \"+log.getLogLevelLongDesc());\n        }\n        \n        if (!Const.isEmpty(optionVersion))\n        {\n            BuildVersion buildVersion = BuildVersion.getInstance();\n            log.logBasic(\"Pan\", \"Kettle version \"+Const.VERSION+\", build \"+buildVersion.getVersion()+\", build date : \"+buildVersion.getBuildDate());\n            if (a.length==1) System.exit(6);\n        }\n        \n        /////////////////////////////////////////////////////////////////////////////////////////////////////\n        // This is where the action starts.\n        // Print the options before we start processing when running in Debug or Rowlevel\n        // \n        if (log.isDebug())\n        {\n\t\t    System.out.println(\"Arguments:\");\n\t\t    for (int i=0;i<options.length;i++) \n\t\t    {\n\t\t    \t/*if (!options[i].isHiddenOption())*/\n                System.out.println(Const.rightPad(options[i].getOption(),12)+\" : \"+options[i].getArgument());\n\t\t    }\n\t\t    System.out.println(\"\");\n        }\n        /////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n        log.logMinimal(\"Pan\", \"Start of run.\");\n\t\t\n\t\t/* Load the plugins etc.*/\n\t\ttry {\n\t\t\tStepLoader.init();\n\t\t}\n\t\tcatch(KettleException e)\n\t\t{\n\t\t\tlog.logError(\"Pan\", \"Error loading steps... halting Pan!\");\n            System.exit(8);\n\t\t}\n\t\t\n        /* Load the plugins etc.*/\n\t\ttry \n\t\t{\n\t\t\tJobEntryLoader.init();\n\t\t}\n\t\tcatch(KettleException e)\n        {\n            log.logError(\"Pan\", \"Error loading job entries & plugins... halting Pan!\", e);\n            System.exit(8);\n        }\n        \n\t\tDate start, stop;\n\t\tCalendar cal;\n\t\tSimpleDateFormat df = new SimpleDateFormat(\"yyyy/MM/dd HH:mm:ss.SSS\");\n\t\tcal=Calendar.getInstance();\n\t\tstart=cal.getTime();\n\n\t\tlog.logDebug(\"Pan\", \"Allocate new transformation.\");\n\t\tTransMeta transMeta = new TransMeta();\n\n\t\ttry\n\t\t{\n\t\t\tlog.logDebug(\"Pan\", \"Starting to look at options...\");\n\t\t\t// Read kettle transformation specified on command-line?\n\t\t\tif (!Const.isEmpty(optionRepname) || !Const.isEmpty(optionFilename) || !Const.isEmpty(optionJarFilename))\n\t\t\t{\t\t\t\n\t\t\t\tlog.logDebug(\"Pan\", \"Parsing command line options.\");\n\t\t\t\tif (!Const.isEmpty(optionRepname) && !\"Y\".equalsIgnoreCase(optionNorep.toString()))\n\t\t\t\t{\n\t\t\t\t\tlog.logDebug(\"Pan\", \"Loading available repositories.\");\n\t\t\t\t\tRepositoriesMeta repsinfo = new RepositoriesMeta(log);\n\t\t\t\t\tif (repsinfo.readData())\n\t\t\t\t\t{\n\t\t\t\t\t\tlog.logDebug(\"Pan\", \"Finding repository [\"+optionRepname+\"]\");\n\t\t\t\t\t\trepinfo = repsinfo.findRepository(optionRepname.toString());\n\t\t\t\t\t\tif (repinfo!=null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Define and connect to the repository...\n\t\t\t\t\t\t\tlog.logDebug(\"Pan\", \"Allocate & connect to repository.\");\n\t\t\t\t\t\t\tRepository rep = new Repository(log, repinfo, userinfo);\n\t\t\t\t\t\t\tif (rep.connect(\"Pan commandline\"))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tRepositoryDirectory directory = rep.getDirectoryTree(); // Default = root\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Find the directory name if one is specified...\n\t\t\t\t\t\t\t\tif (!Const.isEmpty(optionDirname))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tdirectory = rep.getDirectoryTree().findDirectory(optionDirname.toString());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (directory!=null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t// Check username, password\n\t\t\t\t\t\t\t\t\tlog.logDebug(\"Pan\", \"Check supplied username and password.\");\n\t\t\t\t\t\t\t\t\tuserinfo = new UserInfo(rep, optionUsername.toString(), optionPassword.toString());\n\t\t\t\t\t\t\t\t\tif (userinfo.getID()>0)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t// Load a transformation\n\t\t\t\t\t\t\t\t\t\tif (!Const.isEmpty(optionTransname))\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlog.logDebug(\"Pan\", \"Load the transformation info...\");\n\t\t\t\t\t\t\t\t\t\t\ttransMeta = new TransMeta(rep, optionTransname.toString(), directory);\n\t\t\t\t\t\t\t\t\t\t\tlog.logDebug(\"Pan\", \"Allocate transformation...\");\n\t\t\t\t\t\t\t\t\t\t\ttrans = new Trans(transMeta);\r\n\t\t\t\t\t\t\t\t\t\t\ttrans.setRepository(rep);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t// List the transformations in the repository\n\t\t\t\t\t\t\t\t\t\tif (\"Y\".equalsIgnoreCase(optionListtrans.toString()))\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t    log.logDebug(\"Pan\", \"Getting list of transformations in directory: \"+directory);\n\t\t\t\t\t\t\t\t\t\t\tString transnames[] = rep.getTransformationNames(directory.getID());\n\t\t\t\t\t\t\t\t\t\t\tfor (int i=0;i<transnames.length;i++)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tSystem.out.println(transnames[i]);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t// List the directories in the repository\n\t\t\t\t\t\t\t\t\t\tif (\"Y\".equalsIgnoreCase(optionListdir.toString()))\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tString dirnames[] = rep.getDirectoryNames(directory.getID());\n\t\t\t\t\t\t\t\t\t\t\tfor (int i=0;i<dirnames.length;i++)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tSystem.out.println(dirnames[i]);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n                                        else\n                                        // Export the repository\n                                        if (!Const.isEmpty(optionExprep))\n                                        {\n                                            System.out.println(\"Exporting all objects in the repository to file [\"+optionExprep+\"]\");\n                                            rep.exportAllObjects(null, optionExprep.toString(), directory);\n                                            System.out.println(\"Finished exporting all objects in the repository to file [\"+optionExprep+\"]\");\n                                        }\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tSystem.out.println(\"ERROR: No transformation name supplied: which one should be run?\");\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tSystem.out.println(\"ERROR: Can't verify username and password.\");\n\t\t\t\t\t\t\t\t\t\tuserinfo=null;\n\t\t\t\t\t\t\t\t\t\trepinfo=null;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tSystem.out.println(\"ERROR: Can't find the specified directory [\"+optionDirname+\"]\");\n\t\t\t\t\t\t\t\t\tuserinfo=null;\n\t\t\t\t\t\t\t\t\trepinfo=null;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\trep.disconnect();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tSystem.out.println(\"ERROR: Can't connect to the repository.\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tSystem.out.println(\"ERROR: No repository provided, can't load transformation.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tSystem.out.println(\"ERROR: No repositories defined on this system.\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Try to load the transformation from file, even if it failed to load from the repository\n                // You could implement some fail-over mechanism this way.\n                //\n\t\t\t\tif (trans==null && !Const.isEmpty(optionFilename))\n\t\t\t\t{\n                    log.logDetailed(\"Pan\", \"Loading transformation from XML file [\"+optionFilename+\"]\");\n\t\t\t\t\ttransMeta = new TransMeta(optionFilename.toString());\n\t\t\t\t\ttrans = new Trans(transMeta);\n\t\t\t\t}\n                \n                // Try to load the transformation from a jar file\n                // \n                if (trans==null && !Const.isEmpty(optionJarFilename))\n                {\n                    try\n                    {\n                        log.logDetailed(\"Pan\", \"Loading transformation from jar file [\"+optionJarFilename+\"]\");\n                        InputStream inputStream = Pan.class.getResourceAsStream(optionJarFilename.toString());\n                        StringBuffer xml = new StringBuffer();\n                        int c;\n                        while ((c=inputStream.read()) != -1) xml.append((char)c);\n                        inputStream.close();\n                        Document document = XMLHandler.loadXMLString(xml.toString());\n                        transMeta = new TransMeta(XMLHandler.getSubNode(document, \"transformation\"), null);\n                        trans = new Trans(transMeta);\n                    }\n                    catch(Exception e)\n                    {\n                        System.out.println(\"Error reading jarfile: \"+e.toString());\n                        System.out.println(Const.getStackTracker(e));\n                        throw e;\n                    }\n                }\n\t\t\t}\n\t\t\t\n\t\t\tif (\"Y\".equalsIgnoreCase(optionListrep.toString()))\n\t\t\t{\n\t\t\t\tlog.logDebug(\"Pan\", \"Getting the list of repositories...\");\n\t\t\t\tRepositoriesMeta ri = new RepositoriesMeta(log);\n\t\t\t\tif (ri.readData())\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println(\"List of repositories:\");\n\t\t\t\t\tfor (int i=0;i<ri.nrRepositories();i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tRepositoryMeta rinfo = ri.getRepository(i);\n\t\t\t\t\t\tSystem.out.println(\"#\"+(i+1)+\" : \"+rinfo.getName()+\" [\"+rinfo.getDescription()+\"] \");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println(\"ERROR: Unable to read/parse the repositories XML file.\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch(Exception e)\n\t\t{\n\t\t\ttrans=null;\n\t\t\ttransMeta=null;\n\t\t\tSystem.out.println(\"Processing has stopped because of an error: \"+e.getMessage());\n\t\t\te.printStackTrace();\n\t\t\tSystem.exit(1);\n\t\t}\n\n\t\tif (trans==null)\n\t\t{\n\t\t\tif (!\"Y\".equalsIgnoreCase(optionListtrans.toString()) && \n                !\"Y\".equalsIgnoreCase(optionListdir.toString()) && \n                !\"Y\".equalsIgnoreCase(optionListrep.toString()) &&\n                Const.isEmpty(optionExprep)\n               )\n            {\n                System.out.println(\"ERROR: Pan can't continue because the transformation couldn't be loaded.\");\n                System.exit(7);\n            }\n\t\t\telse\n\t\t\t{\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n            \n\t\t}\n\t\t\n\t\ttry\n\t\t{\n\t\t\ttrans.initializeVariablesFrom(null);\n\t\t\ttrans.getTransMeta().setInternalKettleVariables(trans);\n\t\t\t\n\t\t\t// See if we want to run in safe mode:\n\t\t\tif (\"Y\".equalsIgnoreCase(optionSafemode.toString()))\n\t\t\t{\n\t\t\t\ttrans.setSafeModeEnabled(true);\n\t\t\t}\n\t\t\t\n\t\t    // allocate & run the required sub-threads\n\t\t\ttry {\n\t\t\t\ttrans.execute((String[])args.toArray(new String[args.size()]));\n\t\t\t}\n\t\t\tcatch(KettleException e) {\n                System.out.println(\"Unable to prepare and initialize this transformation\");\n                System.exit(3);\n\t\t\t}\n\n\t\t\ttrans.waitUntilFinished();\n\t\t\ttrans.endProcessing(\"end\");\n\n\t\t\tlog.logMinimal(\"Pan\", \"Finished!\");\n\t\t\t\n\t\t\tcal=Calendar.getInstance();\n\t\t\tstop=cal.getTime();\n\t\t\tString begin=df.format(start).toString();\n\t\t\tString end  =df.format(stop).toString();\n\n\t\t\tlog.logMinimal(\"Pan\", \"Start=\"+begin+\", Stop=\"+end);\n\t\t\tlong millis=stop.getTime()-start.getTime();\n\t\t\tlog.logMinimal(\"Pan\", \"Processing ended after \"+(millis/1000)+\" seconds.\");\n\t\t\tif (trans.getResult().getNrErrors()==0) \n\t\t\t{\n\t\t\t\ttrans.printStats((int)millis/1000);\n                System.exit(0);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n                System.exit(1);\n\t\t\t}\n\t\t}\n\t\tcatch(KettleException ke)\n\t\t{\n\t\t\tSystem.out.println(\"ERROR occurred: \"+ke.getMessage());\n            log.logError(\"Pan\", \"Unexpected error occurred: \"+ke.getMessage());\n            System.exit(2);\n\t\t}\n\n\t}","id":15394,"modified_method":"public static void main(String[] a) throws KettleException\n\t{\n\t\tEnvUtil.environmentInit();\n\t\t\n\t    List<String> args = new ArrayList<String>();\n\t    for (int i=0;i<a.length;i++) \n\t    {\n\t        if (a[i].length()>0) \n            {\n                args.add(a[i]);\n            }\n\t    }\n\n\t\tRepositoryMeta repinfo  = null;\n\t\tUserInfo       userinfo = null;\n\t\tTrans          trans    = null;\n\n\t\t// The options: \n\t\tStringBuffer optionRepname, optionUsername, optionPassword, optionTransname, optionDirname, optionFilename, optionLoglevel;\n\t\tStringBuffer optionLogfile, optionLogfileOld, optionListdir, optionListtrans, optionListrep, optionExprep, optionNorep, optionSafemode, optionVersion, optionJarFilename;\n        \n\t\tCommandLineOption options[] = new CommandLineOption[] \n            {\n\t\t\t    new CommandLineOption(\"rep\", \"Repository name\", optionRepname=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"user\", \"Repository username\", optionUsername=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"pass\", \"Repository password\", optionPassword=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"trans\", \"The name of the transformation to launch\", optionTransname=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"dir\", \"The directory (don't forget the leading /)\", optionDirname=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"file\", \"The filename (Transformation in XML) to launch\", optionFilename=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"level\", \"The logging level (Basic, Detailed, Debug, Rowlevel, Error, Nothing)\", optionLoglevel=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"logfile\", \"The logging file to write to\", optionLogfile=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"log\", \"The logging file to write to (deprecated)\", optionLogfileOld=new StringBuffer(), false, true),\n\t\t\t    new CommandLineOption(\"listdir\", \"List the directories in the repository\", optionListdir=new StringBuffer(), true, false),\n\t\t\t    new CommandLineOption(\"listtrans\", \"List the transformations in the specified directory\", optionListtrans=new StringBuffer(), true, false),\n\t\t\t    new CommandLineOption(\"listrep\", \"List the available repositories\", optionListrep=new StringBuffer(), true, false),\n\t\t        new CommandLineOption(\"exprep\", \"Export all repository objects to one XML file\", optionExprep=new StringBuffer(), true, false),\n\t\t        new CommandLineOption(\"norep\", \"Do not log into the repository\", optionNorep=new StringBuffer(), true, false),\n\t\t        new CommandLineOption(\"safemode\", \"Run in safe mode: with extra checking enabled\", optionSafemode=new StringBuffer(), true, false),\n                new CommandLineOption(\"version\", \"show the version, revision and build date\", optionVersion=new StringBuffer(), true, false),\n                new CommandLineOption(\"jarfile\", \"specifies the jar filename\", optionJarFilename=new StringBuffer(), false, true),\n            };\n\n\t\tif (args.size()==0 ) \n\t\t{\n\t\t\tCommandLineOption.printUsage(options);\n            System.exit(9);\n\t\t}\n\n        LogWriter log;\n        LogWriter.setConsoleAppenderDebug();\n        // start with the default logger until we find out otherwise\n        log=LogWriter.getInstance( LogWriter.LOG_LEVEL_BASIC );\n\n\t\t// Parse the options...\n\t\tif( !CommandLineOption.parseArguments(args, options, log) ) {\n            log.logError(\"Pan\",  Messages.getString(\"Pan.Error.CommandLineError\"));\r\n           \n            System.exit(8);\n\t\t}\n\t\t\n\t\tString kettleRepname  = Const.getEnvironmentVariable(\"KETTLE_REPOSITORY\", null);\n        String kettleUsername = Const.getEnvironmentVariable(\"KETTLE_USER\", null);\n        String kettlePassword = Const.getEnvironmentVariable(\"KETTLE_PASSWORD\", null);\n        \n        if (kettleRepname !=null && kettleRepname .length()>0) optionRepname  = new StringBuffer(kettleRepname);\n        if (kettleUsername!=null && kettleUsername.length()>0) optionUsername = new StringBuffer(kettleUsername);\n        if (kettlePassword!=null && kettlePassword.length()>0) optionPassword = new StringBuffer(kettlePassword);\n        \n        \n        if (Const.isEmpty(optionLogfile) && !Const.isEmpty(optionLogfileOld))\n        {\n           // if the old style of logging name is filled in, and the new one is not\n           // overwrite the new by the old\n           optionLogfile = optionLogfileOld;\n        }\n        \n        if (!Const.isEmpty(optionLogfile))\n        {\n            log=LogWriter.getInstance( optionLogfile.toString(), true, LogWriter.LOG_LEVEL_BASIC );\n        }\n        \n        if (!Const.isEmpty(optionLoglevel)) \n        {\n            log.setLogLevel(optionLoglevel.toString());\n            log.logMinimal(\"Pan\", \"Logging is at level : \"+log.getLogLevelLongDesc());\n        }\n        \n        if (!Const.isEmpty(optionVersion))\n        {\n            BuildVersion buildVersion = BuildVersion.getInstance();\n            log.logBasic(\"Pan\", \"Kettle version \"+Const.VERSION+\", build \"+buildVersion.getVersion()+\", build date : \"+buildVersion.getBuildDate());\n            if (a.length==1) System.exit(6);\n        }\n        \n        /////////////////////////////////////////////////////////////////////////////////////////////////////\n        // This is where the action starts.\n        // Print the options before we start processing when running in Debug or Rowlevel\n        // \n        if (log.isDebug())\n        {\n\t\t    System.out.println(\"Arguments:\");\n\t\t    for (int i=0;i<options.length;i++) \n\t\t    {\n\t\t    \t/*if (!options[i].isHiddenOption())*/\n                System.out.println(Const.rightPad(options[i].getOption(),12)+\" : \"+options[i].getArgument());\n\t\t    }\n\t\t    System.out.println(\"\");\n        }\n        /////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n        log.logMinimal(\"Pan\", Messages.getString(\"Pan.Log.StartingToRun\"));\r\n        \n\t\t\n\t\t/* Load the plugins etc.*/\n\t\ttry {\n\t\t\tStepLoader.init();\n\t\t}\n\t\tcatch(KettleException e)\n\t\t{\n\t\t\tlog.logError(\"Pan\", Messages.getString(\"Pan.Error.LoadingStepsHaltPan\"));\r\n\t\t\t\n            System.exit(8);\n\t\t}\n\t\t\n        /* Load the plugins etc.*/\n\t\ttry \n\t\t{\n\t\t\tJobEntryLoader.init();\n\t\t}\n\t\tcatch(KettleException e)\n        {\n            log.logError(\"Pan\", Messages.getString(\"Pan.Error.LoadingJobEntriesHaltPan\"), e);\r\n            \n            System.exit(8);\n        }\n        \n\t\tDate start, stop;\n\t\tCalendar cal;\n\t\tSimpleDateFormat df = new SimpleDateFormat(\"yyyy/MM/dd HH:mm:ss.SSS\");\n\t\tcal=Calendar.getInstance();\n\t\tstart=cal.getTime();\n\n\t\tlog.logDebug(\"Pan\", \"Allocate new transformation.\");\n\t\tTransMeta transMeta = new TransMeta();\n\n\t\ttry\n\t\t{\n\t\t\tlog.logDebug(\"Pan\", \"Starting to look at options...\");\n\t\t\t// Read kettle transformation specified on command-line?\n\t\t\tif (!Const.isEmpty(optionRepname) || !Const.isEmpty(optionFilename) || !Const.isEmpty(optionJarFilename))\n\t\t\t{\t\t\t\n\t\t\t\tif(log.isDebug()) log.logDebug(\"Pan\", \"Parsing command line options.\");\n\t\t\t\tif (!Const.isEmpty(optionRepname) && !\"Y\".equalsIgnoreCase(optionNorep.toString()))\n\t\t\t\t{\n\t\t\t\t\tif(log.isDebug()) log.logDebug(\"Pan\", \"Loading available repositories.\");\n\t\t\t\t\tRepositoriesMeta repsinfo = new RepositoriesMeta(log);\n\t\t\t\t\tif (repsinfo.readData())\n\t\t\t\t\t{\n\t\t\t\t\t\tif(log.isDebug()) log.logDebug(\"Pan\", \"Finding repository [\"+optionRepname+\"]\");\n\t\t\t\t\t\trepinfo = repsinfo.findRepository(optionRepname.toString());\n\t\t\t\t\t\tif (repinfo!=null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Define and connect to the repository...\n\t\t\t\t\t\t\tif(log.isDebug()) log.logDebug(\"Pan\", \"Allocate & connect to repository.\");\n\t\t\t\t\t\t\tRepository rep = new Repository(log, repinfo, userinfo);\n\t\t\t\t\t\t\tif (rep.connect(\"Pan commandline\"))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tRepositoryDirectory directory = rep.getDirectoryTree(); // Default = root\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Find the directory name if one is specified...\n\t\t\t\t\t\t\t\tif (!Const.isEmpty(optionDirname))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tdirectory = rep.getDirectoryTree().findDirectory(optionDirname.toString());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (directory!=null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t// Check username, password\n\t\t\t\t\t\t\t\t\tif(log.isDebug()) log.logDebug(\"Pan\", \"Check supplied username and password.\");\n\t\t\t\t\t\t\t\t\tuserinfo = new UserInfo(rep, optionUsername.toString(), optionPassword.toString());\n\t\t\t\t\t\t\t\t\tif (userinfo.getID()>0)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t// Load a transformation\n\t\t\t\t\t\t\t\t\t\tif (!Const.isEmpty(optionTransname))\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif(log.isDebug()) log.logDebug(\"Pan\", \"Load the transformation info...\");\n\t\t\t\t\t\t\t\t\t\t\ttransMeta = new TransMeta(rep, optionTransname.toString(), directory);\n\t\t\t\t\t\t\t\t\t\t\tif(log.isDebug()) log.logDebug(\"Pan\", \"Allocate transformation...\");\n\t\t\t\t\t\t\t\t\t\t\ttrans = new Trans(transMeta);\r\n\t\t\t\t\t\t\t\t\t\t\ttrans.setRepository(rep);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t// List the transformations in the repository\n\t\t\t\t\t\t\t\t\t\tif (\"Y\".equalsIgnoreCase(optionListtrans.toString()))\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif(log.isDebug()) log.logDebug(\"Pan\", \"Getting list of transformations in directory: \"+directory);\n\t\t\t\t\t\t\t\t\t\t\tString transnames[] = rep.getTransformationNames(directory.getID());\n\t\t\t\t\t\t\t\t\t\t\tfor (int i=0;i<transnames.length;i++)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tSystem.out.println(transnames[i]);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t// List the directories in the repository\n\t\t\t\t\t\t\t\t\t\tif (\"Y\".equalsIgnoreCase(optionListdir.toString()))\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tString dirnames[] = rep.getDirectoryNames(directory.getID());\n\t\t\t\t\t\t\t\t\t\t\tfor (int i=0;i<dirnames.length;i++)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tSystem.out.println(dirnames[i]);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n                                        else\n                                        // Export the repository\n                                        if (!Const.isEmpty(optionExprep))\n                                        {\n                                            System.out.println(\"Exporting all objects in the repository to file [\"+optionExprep+\"]\");\n                                            rep.exportAllObjects(null, optionExprep.toString(), directory);\n                                            System.out.println(\"Finished exporting all objects in the repository to file [\"+optionExprep+\"]\");\n                                        }\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tSystem.out.println(\"ERROR: No transformation name supplied: which one should be run?\");\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tSystem.out.println(\"ERROR: Can't verify username and password.\");\n\t\t\t\t\t\t\t\t\t\tuserinfo=null;\n\t\t\t\t\t\t\t\t\t\trepinfo=null;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tSystem.out.println(\"ERROR: Can't find the specified directory [\"+optionDirname+\"]\");\n\t\t\t\t\t\t\t\t\tuserinfo=null;\n\t\t\t\t\t\t\t\t\trepinfo=null;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\trep.disconnect();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tSystem.out.println(\"ERROR: Can't connect to the repository.\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tSystem.out.println(\"ERROR: No repository provided, can't load transformation.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tSystem.out.println(\"ERROR: No repositories defined on this system.\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Try to load the transformation from file, even if it failed to load from the repository\n                // You could implement some fail-over mechanism this way.\n                //\n\t\t\t\tif (trans==null && !Const.isEmpty(optionFilename))\n\t\t\t\t{\n\t\t\t\t\tif(log.isDetailed()) log.logDetailed(\"Pan\", \"Loading transformation from XML file [\"+optionFilename+\"]\");\n\t\t\t\t\ttransMeta = new TransMeta(optionFilename.toString());\n\t\t\t\t\ttrans = new Trans(transMeta);\n\t\t\t\t}\n                \n                // Try to load the transformation from a jar file\n                // \n                if (trans==null && !Const.isEmpty(optionJarFilename))\n                {\n                    try\n                    {\n                    \tif(log.isDetailed())  log.logDetailed(\"Pan\", \"Loading transformation from jar file [\"+optionJarFilename+\"]\");\n                        InputStream inputStream = Pan.class.getResourceAsStream(optionJarFilename.toString());\n                        StringBuffer xml = new StringBuffer();\n                        int c;\n                        while ((c=inputStream.read()) != -1) xml.append((char)c);\n                        inputStream.close();\n                        Document document = XMLHandler.loadXMLString(xml.toString());\n                        transMeta = new TransMeta(XMLHandler.getSubNode(document, \"transformation\"), null);\n                        trans = new Trans(transMeta);\n                    }\n                    catch(Exception e)\n                    {\n                        System.out.println(\"Error reading jarfile: \"+e.toString());\n                        System.out.println(Const.getStackTracker(e));\n                        throw e;\n                    }\n                }\n\t\t\t}\n\t\t\t\n\t\t\tif (\"Y\".equalsIgnoreCase(optionListrep.toString()))\n\t\t\t{\n\t\t\t\tif(log.isDebug()) log.logDebug(\"Pan\", \"Getting the list of repositories...\");\n\t\t\t\tRepositoriesMeta ri = new RepositoriesMeta(log);\n\t\t\t\tif (ri.readData())\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println(\"List of repositories:\");\n\t\t\t\t\tfor (int i=0;i<ri.nrRepositories();i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tRepositoryMeta rinfo = ri.getRepository(i);\n\t\t\t\t\t\tSystem.out.println(\"#\"+(i+1)+\" : \"+rinfo.getName()+\" [\"+rinfo.getDescription()+\"] \");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println(\"ERROR: Unable to read/parse the repositories XML file.\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch(Exception e)\n\t\t{\n\t\t\ttrans=null;\n\t\t\ttransMeta=null;\n\t\t\tSystem.out.println(\"Processing has stopped because of an error: \"+e.getMessage());\n\t\t\te.printStackTrace();\n\t\t\tSystem.exit(1);\n\t\t}\n\n\t\tif (trans==null)\n\t\t{\n\t\t\tif (!\"Y\".equalsIgnoreCase(optionListtrans.toString()) && \n                !\"Y\".equalsIgnoreCase(optionListdir.toString()) && \n                !\"Y\".equalsIgnoreCase(optionListrep.toString()) &&\n                Const.isEmpty(optionExprep)\n               )\n            {\n                System.out.println(\"ERROR: Pan can't continue because the transformation couldn't be loaded.\");\n                System.exit(7);\n            }\n\t\t\telse\n\t\t\t{\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n            \n\t\t}\n\t\t\n\t\ttry\n\t\t{\n\t\t\ttrans.initializeVariablesFrom(null);\n\t\t\ttrans.getTransMeta().setInternalKettleVariables(trans);\n\t\t\t\n\t\t\t// See if we want to run in safe mode:\n\t\t\tif (\"Y\".equalsIgnoreCase(optionSafemode.toString()))\n\t\t\t{\n\t\t\t\ttrans.setSafeModeEnabled(true);\n\t\t\t}\n\t\t\t\n\t\t    // allocate & run the required sub-threads\n\t\t\ttry {\n\t\t\t\ttrans.execute((String[])args.toArray(new String[args.size()]));\n\t\t\t}\n\t\t\tcatch(KettleException e) {\n                System.out.println(\"Unable to prepare and initialize this transformation\");\n                System.exit(3);\n\t\t\t}\n\n\t\t\ttrans.waitUntilFinished();\n\t\t\ttrans.endProcessing(\"end\");\n\n\t\t\tlog.logMinimal(\"Pan\", \"Finished!\");\n\t\t\t\n\t\t\tcal=Calendar.getInstance();\n\t\t\tstop=cal.getTime();\n\t\t\tString begin=df.format(start).toString();\n\t\t\tString end  =df.format(stop).toString();\n\n\t\t\tlog.logMinimal(\"Pan\", \"Start=\"+begin+\", Stop=\"+end);\n\t\t\tlong millis=stop.getTime()-start.getTime();\n\t\t\tlog.logMinimal(\"Pan\", \"Processing ended after \"+(millis/1000)+\" seconds.\");\n\t\t\tif (trans.getResult().getNrErrors()==0) \n\t\t\t{\n\t\t\t\ttrans.printStats((int)millis/1000);\n                System.exit(0);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n                System.exit(1);\n\t\t\t}\n\t\t}\n\t\tcatch(KettleException ke)\n\t\t{\n\t\t\tSystem.out.println(\"ERROR occurred: \"+ke.getMessage());\n            log.logError(\"Pan\", \"Unexpected error occurred: \"+ke.getMessage());\n            System.exit(2);\n\t\t}\n\n\t}","commit_id":"300ff794dfd6e5df1540abada309aaa6c8bc74e6","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException\r\n    {\r\n        if (!request.getContextPath().equals(CONTEXT_PATH)) return;\r\n        \r\n        if (log.isDebug()) log.logDebug(toString(), \"Status requested\");\r\n        response.setStatus(HttpServletResponse.SC_OK);\r\n        \r\n        boolean useXML = \"Y\".equalsIgnoreCase( request.getParameter(\"xml\") );\r\n\r\n        if (useXML)\r\n        {\r\n            response.setContentType(\"text/xml\");\r\n            response.setCharacterEncoding(Const.XML_ENCODING);\r\n        }\r\n        else\r\n        {\r\n            response.setContentType(\"text/html\");\r\n        }\r\n        \r\n        PrintStream out = new PrintStream(response.getOutputStream());\r\n        \r\n        String[] transNames = transformationMap.getTransformationNames();\r\n        String[] jobNames = jobMap.getJobNames();\r\n        \r\n        if (useXML)\r\n        {\r\n            out.print(XMLHandler.getXMLHeader(Const.XML_ENCODING));\r\n            SlaveServerStatus serverStatus = new SlaveServerStatus();\r\n            serverStatus.setStatusDescription(\"Online\");\r\n            \r\n            for (int i=0;i<transNames.length;i++)\r\n            {\r\n                String name   = transNames[i]; \r\n                Trans  trans  = transformationMap.getTransformation(name);\r\n                String status = trans.getStatus();\r\n                \r\n                serverStatus.getTransStatusList().add( new SlaveServerTransStatus(name, status) );\r\n            }\r\n\r\n            for (int i=0;i<jobNames.length;i++)\r\n            {\r\n                String name   = jobNames[i]; \r\n                Job job       = jobMap.getJob(name);\r\n                String status = job.getStatus();\r\n                \r\n                serverStatus.getJobStatusList().add( new SlaveServerJobStatus(name, status) );\r\n            }\r\n\r\n            out.println(serverStatus.getXML());\r\n        }\r\n        else\r\n        {    \r\n            out.println(\"<HTML>\");\r\n            out.println(\"<HEAD><TITLE>Kettle slave server status<\/TITLE><\/HEAD>\");\r\n            out.println(\"<BODY>\");\r\n            out.println(\"<H1>Status<\/H1>\");\r\n    \r\n    \r\n            try\r\n            {\r\n                out.println(\"<table border=\\\"1\\\">\");\r\n                out.print(\"<tr> <th>Transformation name<\/th> <th>Status<\/th> <\/tr>\");\r\n\r\n                for (int i=0;i<transNames.length;i++)\r\n                {\r\n                    String name   = transNames[i]; \r\n                    Trans  trans  = transformationMap.getTransformation(name);\r\n                    String status = trans.getStatus();\r\n                    \r\n                    out.print(\"<tr>\");\r\n                    out.print(\"<td><a href=\\\"/kettle/transStatus?name=\"+name+\"\\\">\"+name+\"<\/a><\/td>\");\r\n                    out.print(\"<td>\"+status+\"<\/td>\");\r\n                    out.print(\"<\/tr>\");\r\n                }\r\n                out.print(\"<\/table><p>\");\r\n                \r\n                out.println(\"<table border=\\\"1\\\">\");\r\n                out.print(\"<tr> <th>Job name<\/th> <th>Status<\/th> <\/tr>\");\r\n\r\n                for (int i=0;i<jobNames.length;i++)\r\n                {\r\n                    String name   = jobNames[i]; \r\n                    Job job       = jobMap.getJob(name);\r\n                    String status = job.getStatus();\r\n                    \r\n                    out.print(\"<tr>\");\r\n                    out.print(\"<td><a href=\\\"/kettle/jobStatus?name=\"+name+\"\\\">\"+name+\"<\/a><\/td>\");\r\n                    out.print(\"<td>\"+status+\"<\/td>\");\r\n                    out.print(\"<\/tr>\");\r\n                }\r\n                out.print(\"<\/table>\");\r\n\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                out.println(\"<p>\");\r\n                out.println(\"<pre>\");\r\n                ex.printStackTrace(out);\r\n                out.println(\"<\/pre>\");\r\n            }\r\n    \r\n            out.println(\"<p>\");\r\n            out.println(\"<\/BODY>\");\r\n            out.println(\"<\/HTML>\");\r\n        }        \r\n    }","id":15395,"modified_method":"protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException\r\n    {\r\n        if (!request.getContextPath().equals(CONTEXT_PATH)) return;\r\n        \r\n        if (log.isDebug()) log.logDebug(toString(), Messages.getString(\"GetStatusServlet.StatusRequested\"));\r\n        response.setStatus(HttpServletResponse.SC_OK);\r\n        \r\n        boolean useXML = \"Y\".equalsIgnoreCase( request.getParameter(\"xml\") );\r\n\r\n        if (useXML)\r\n        {\r\n            response.setContentType(\"text/xml\");\r\n            response.setCharacterEncoding(Const.XML_ENCODING);\r\n        }\r\n        else\r\n        {\r\n            response.setContentType(\"text/html\");\r\n        }\r\n        \r\n        PrintStream out = new PrintStream(response.getOutputStream());\r\n        \r\n        String[] transNames = transformationMap.getTransformationNames();\r\n        String[] jobNames = jobMap.getJobNames();\r\n        \r\n        if (useXML)\r\n        {\r\n            out.print(XMLHandler.getXMLHeader(Const.XML_ENCODING));\r\n            SlaveServerStatus serverStatus = new SlaveServerStatus();\r\n            serverStatus.setStatusDescription(\"Online\");\r\n            \r\n            for (int i=0;i<transNames.length;i++)\r\n            {\r\n                String name   = transNames[i]; \r\n                Trans  trans  = transformationMap.getTransformation(name);\r\n                String status = trans.getStatus();\r\n                \r\n                serverStatus.getTransStatusList().add( new SlaveServerTransStatus(name, status) );\r\n            }\r\n\r\n            for (int i=0;i<jobNames.length;i++)\r\n            {\r\n                String name   = jobNames[i]; \r\n                Job job       = jobMap.getJob(name);\r\n                String status = job.getStatus();\r\n                \r\n                serverStatus.getJobStatusList().add( new SlaveServerJobStatus(name, status) );\r\n            }\r\n\r\n            out.println(serverStatus.getXML());\r\n        }\r\n        else\r\n        {    \r\n            out.println(\"<HTML>\");\r\n            out.println(\"<HEAD><TITLE>\" + Messages.getString(\"GetStatusServlet.KettleSlaveServerStatus\") + \"<\/TITLE><\/HEAD>\");\r\n            out.println(\"<BODY>\");\r\n            out.println(\"<H1>\" + Messages.getString(\"GetStatusServlet.TopStatus\") + \"<\/H1>\");\r\n    \r\n    \r\n            try\r\n            {\r\n                out.println(\"<table border=\\\"1\\\">\");\r\n                out.print(\"<tr> <th>\" + Messages.getString(\"GetStatusServlet.TransName\") + \"<\/th> <th>\" + Messages.getString(\"GetStatusServlet.Status\") + \"<\/th> <\/tr>\");\r\n\r\n                for (int i=0;i<transNames.length;i++)\r\n                {\r\n                    String name   = transNames[i]; \r\n                    Trans  trans  = transformationMap.getTransformation(name);\r\n                    String status = trans.getStatus();\r\n                    \r\n                    out.print(\"<tr>\");\r\n                    out.print(\"<td><a href=\\\"/kettle/transStatus?name=\"+name+\"\\\">\"+name+\"<\/a><\/td>\");\r\n                    out.print(\"<td>\"+status+\"<\/td>\");\r\n                    out.print(\"<\/tr>\");\r\n                }\r\n                out.print(\"<\/table><p>\");\r\n                \r\n                out.println(\"<table border=\\\"1\\\">\");\r\n                out.print(\"<tr> <th>\" + Messages.getString(\"GetStatusServlet.JobName\") + \"<\/th> <th>\" + Messages.getString(\"GetStatusServlet.Status\") + \"<\/th> <\/tr>\");\r\n\r\n                for (int i=0;i<jobNames.length;i++)\r\n                {\r\n                    String name   = jobNames[i]; \r\n                    Job job       = jobMap.getJob(name);\r\n                    String status = job.getStatus();\r\n                    \r\n                    out.print(\"<tr>\");\r\n                    out.print(\"<td><a href=\\\"/kettle/jobStatus?name=\"+name+\"\\\">\"+name+\"<\/a><\/td>\");\r\n                    out.print(\"<td>\"+status+\"<\/td>\");\r\n                    out.print(\"<\/tr>\");\r\n                }\r\n                out.print(\"<\/table>\");\r\n\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                out.println(\"<p>\");\r\n                out.println(\"<pre>\");\r\n                ex.printStackTrace(out);\r\n                out.println(\"<\/pre>\");\r\n            }\r\n    \r\n            out.println(\"<p>\");\r\n            out.println(\"<\/BODY>\");\r\n            out.println(\"<\/HTML>\");\r\n        }        \r\n    }","commit_id":"387df3198bbd652715489199316801fdbcab324a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException\r\n    {\r\n        if (!request.getContextPath().equals(CONTEXT_PATH)) return;\r\n        \r\n        if (log.isDebug()) log.logDebug(toString(),  Messages.getString(\"TransStatusServlet.Log.TransStatusRequested\"));\r\n\r\n        String transName = request.getParameter(\"name\");\r\n        boolean useXML = \"Y\".equalsIgnoreCase( request.getParameter(\"xml\") );\r\n\r\n        response.setStatus(HttpServletResponse.SC_OK);\r\n\r\n        if (useXML)\r\n        {\r\n            response.setContentType(\"text/xml\");\r\n            response.setCharacterEncoding(Const.XML_ENCODING);\r\n        }\r\n        else\r\n        {\r\n            response.setContentType(\"text/html\");\r\n        }\r\n        \r\n        PrintWriter out = response.getWriter();\r\n\r\n        Trans  trans  = transformationMap.getTransformation(transName);\r\n        \r\n        if (trans!=null)\r\n        {\r\n            String status = trans.getStatus();\r\n    \r\n            if (useXML)\r\n            {\r\n                response.setContentType(\"text/xml\");\r\n                response.setCharacterEncoding(Const.XML_ENCODING);\r\n                out.print(XMLHandler.getXMLHeader(Const.XML_ENCODING));\r\n                \r\n                SlaveServerTransStatus transStatus = new SlaveServerTransStatus(transName, status);\r\n    \r\n                for (int i = 0; i < trans.nrSteps(); i++)\r\n                {\r\n                    BaseStep baseStep = trans.getRunThread(i);\r\n                    if ( (baseStep.isAlive()) || baseStep.getStatus()!=StepDataInterface.STATUS_EMPTY)\r\n                    {\r\n                        StepStatus stepStatus = new StepStatus(baseStep);\r\n                        transStatus.getStepStatusList().add(stepStatus);\r\n                    }\r\n                }\r\n                \r\n                Log4jStringAppender appender = (Log4jStringAppender) transformationMap.getAppender(transName);\r\n                if (appender!=null)\r\n                {\r\n                    // The log can be quite large at times, we are going to put a base64 encoding around a compressed stream\r\n                    // of bytes to handle this one.\r\n                    \r\n                    ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n                    GZIPOutputStream gzos = new GZIPOutputStream(baos);\r\n                    gzos.write( appender.getBuffer().toString().getBytes() );\r\n                    gzos.close();\r\n                    \r\n                    String loggingString = new String(Base64.encodeBase64(baos.toByteArray()));\r\n                    transStatus.setLoggingString( loggingString );\r\n                }\r\n                \r\n                // Also set the result object...\r\n                //\r\n                transStatus.setResult( trans.getResult() );\r\n                \r\n                // Send the result back as XML\r\n                //\r\n                out.println(transStatus.getXML());\r\n            }\r\n            else\r\n            {\r\n                response.setContentType(\"text/html\");\r\n\r\n                out.println(\"<HTML>\");\r\n                out.println(\"<HEAD>\");\r\n                out.println(\"<TITLE>\" + Messages.getString(\"TransStatusServlet.KettleTransStatus\")  + \"<\/TITLE>\");\r\n                out.println(\"<META http-equiv=\\\"Refresh\\\" content=\\\"10;url=/kettle/transStatus?name=\"+transName+\"\\\">\");\r\n                out.println(\"<\/HEAD>\");\r\n                out.println(\"<BODY>\");\r\n                out.println(\"<H1>\" + Messages.getString(\"TransStatusServlet.TransStatus\") +\"<\/H1>\");\r\n                \r\n                \r\n        \r\n                try\r\n                {\r\n                    out.println(\"<table border=\\\"1\\\">\");\r\n                    out.print(\"<tr> <th>\" + Messages.getString(\"TransStatusServlet.TransName\") + \"<\/th> <th>\" + Messages.getString(\"TransStatusServlet.TransStatus\") +  \"<\/th> <\/tr>\");\r\n        \r\n                    out.print(\"<tr>\");\r\n                    out.print(\"<td>\"+transName+\"<\/td>\");\r\n                    out.print(\"<td>\"+status+\"<\/td>\");\r\n                    out.print(\"<\/tr>\");\r\n                    out.print(\"<\/table>\");\r\n                    \r\n                    out.print(\"<p>\");\r\n                    \r\n                    if ( (trans.isFinished() && trans.isRunning()) || ( !trans.isRunning() && !trans.isPreparing() && !trans.isInitializing() ))\r\n                    {\r\n                        out.print(\"<a href=\\\"/kettle/startTrans?name=\"+transName+\"\\\">\" + Messages.getString(\"TransStatusServlet.StartTrans\") +\"<\/a>\");\r\n                        out.print(\"<p>\");\r\n                        out.print(\"<a href=\\\"/kettle/prepareExec?name=\"+transName+\"\\\">\" + Messages.getString(\"TransStatusServlet.PrepareTrans\") +\"<\/a><br>\");\r\n                        out.print(\"<a href=\\\"/kettle/startExec?name=\"+transName+\"\\\">\" + Messages.getString(\"TransStatusServlet.StartTrans\") + \"<\/a><p>\");\r\n                    }\r\n                    else\r\n                    if (trans.isRunning())\r\n                    {\r\n                        out.print(\"<a href=\\\"/kettle/stopTrans?name=\"+transName+\"\\\">\" + Messages.getString(\"TransStatusServlet.StopTrans\")  + \"<\/a>\");\r\n                        out.print(\"<p>\");\r\n                    }\r\n                    out.print(\"<a href=\\\"/kettle/cleanupTrans?name=\"+transName+\"\\\">\" + Messages.getString(\"TransStatusServlet.CleanupTrans\") + \"<\/a>\");\r\n                    out.print(\"<p>\");\r\n                    \r\n                    out.println(\"<table border=\\\"1\\\">\");\r\n                    out.print(\"<tr> <th>\" +Messages.getString(\"TransStatusServlet.Stepname\") + \"<\/th> <th>\"  + Messages.getString(\"TransStatusServlet.CopyNr\") + \"<\/th> <th>\" + Messages.getString(\"TransStatusServlet.Read\") + \"<\/th> <th>\"+ Messages.getString(\"TransStatusServlet.Written\") + \"<\/th> <th>\" +Messages.getString(\"TransStatusServlet.Input\") + \"<\/th> <th>\" +Messages.getString(\"TransStatusServlet.Output\") + \"<\/th> \" +\r\n                            \"<th>Updated<\/th> <th>\" +  Messages.getString(\"TransStatusServlet.Rejected\") + \"<\/th> <th>\" +Messages.getString(\"TransStatusServlet.Errors\")  + \"<\/th> <th>\" + Messages.getString(\"TransStatusServlet.Active\")  + \"<\/th> <th>\" + Messages.getString(\"TransStatusServlet.Time\") + \"<\/th> \" +\r\n                            \"<th>\" + Messages.getString(\"TransStatusServlet.Speed\")+\"<\/th> <th>\" + Messages.getString(\"TransStatusServlet.prinout\") + \"<\/th> <\/tr>\");\r\n                   \r\n        \r\n                    for (int i = 0; i < trans.nrSteps(); i++)\r\n                    {\r\n                        BaseStep baseStep = trans.getRunThread(i);\r\n                        if ( (baseStep.isAlive()) || baseStep.getStatus()!=StepDataInterface.STATUS_EMPTY)\r\n                        {\r\n                            StepStatus stepStatus = new StepStatus(baseStep);\r\n                            out.print(stepStatus.getHTMLTableRow());\r\n                        }\r\n                    }\r\n                    out.println(\"<\/table>\");\r\n                    out.println(\"<p>\");\r\n                    \r\n                    out.print(\"<a href=\\\"/kettle/transStatus/?name=\"+transName+\"&xml=y\\\">\" +  Messages.getString(\"TransStatusServlet.ShowAsXml\")  +\"<\/a><br>\");\r\n                    out.print(\"<a href=\\\"/kettle/status\\\">\" + Messages.getString(\"TransStatusServlet.BackToStatusPage\")  +\"<\/a><br>\");\r\n                    out.print(\"<p><a href=\\\"/kettle/transStatus?name=\"+transName+\"\\\">\" +  Messages.getString(\"TransStatusServlet.Refresh\")  + \"<\/a>\");\r\n                    \r\n                    // Put the logging below that.\r\n                    Log4jStringAppender appender = (Log4jStringAppender) transformationMap.getAppender(transName);\r\n                    if (appender!=null)\r\n                    {\r\n                        out.println(\"<p>\");\r\n                        /*\r\n                        out.println(\"<pre>\");\r\n                        out.println(appender.getBuffer().toString());\r\n                        out.println(\"<\/pre>\");\r\n                        */\r\n                        out.println(\"<textarea id=\\\"translog\\\" cols=\\\"120\\\" rows=\\\"20\\\" wrap=\\\"off\\\" name=\\\"Transformation log\\\" readonly=\\\"readonly\\\">\"+appender.getBuffer().toString()+\"<\/textarea>\");\r\n                        \r\n                        out.println(\"<script type=\\\"text/javascript\\\"> \");\r\n                        out.println(\"  translog.scrollTop=translog.scrollHeight; \");\r\n                        out.println(\"<\/script> \");\r\n                        out.println(\"<p>\");\r\n                    }\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    out.println(\"<p>\");\r\n                    out.println(\"<pre>\");\r\n                    ex.printStackTrace(out);\r\n                    out.println(\"<\/pre>\");\r\n                }\r\n                \r\n                out.println(\"<p>\");\r\n                out.println(\"<\/BODY>\");\r\n                out.println(\"<\/HTML>\");\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if (useXML)\r\n            {\r\n                out.println(new WebResult(WebResult.STRING_ERROR, Messages.getString(\"TransStatusServlet.Log.CoundNotFindSpecTrans\",transName)));\r\n            }\r\n            else\r\n            {\r\n                out.println(\"<H1>\" + Messages.getString(\"TransStatusServlet.Log.CoundNotFindTrans\",transName)  + \"<\/H1>\");\r\n                out.println(\"<a href=\\\"/kettle/status\\\">\" + Messages.getString(\"TransStatusServlet.BackToStatusPage\")+ \"<\/a><p>\");\r\n                \r\n            }\r\n        }\r\n    }","id":15396,"modified_method":"protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException\r\n    {\r\n        if (!request.getContextPath().equals(CONTEXT_PATH)) return;\r\n        \r\n        if (log.isDebug()) log.logDebug(toString(),  Messages.getString(\"TransStatusServlet.Log.TransStatusRequested\"));\r\n\r\n        String transName = request.getParameter(\"name\");\r\n        boolean useXML = \"Y\".equalsIgnoreCase( request.getParameter(\"xml\") );\r\n\r\n        response.setStatus(HttpServletResponse.SC_OK);\r\n\r\n        if (useXML)\r\n        {\r\n            response.setContentType(\"text/xml\");\r\n            response.setCharacterEncoding(Const.XML_ENCODING);\r\n        }\r\n        else\r\n        {\r\n            response.setContentType(\"text/html\");\r\n        }\r\n        \r\n        PrintWriter out = response.getWriter();\r\n\r\n        Trans  trans  = transformationMap.getTransformation(transName);\r\n        \r\n        if (trans!=null)\r\n        {\r\n            String status = trans.getStatus();\r\n    \r\n            if (useXML)\r\n            {\r\n                response.setContentType(\"text/xml\");\r\n                response.setCharacterEncoding(Const.XML_ENCODING);\r\n                out.print(XMLHandler.getXMLHeader(Const.XML_ENCODING));\r\n                \r\n                SlaveServerTransStatus transStatus = new SlaveServerTransStatus(transName, status);\r\n    \r\n                for (int i = 0; i < trans.nrSteps(); i++)\r\n                {\r\n                    BaseStep baseStep = trans.getRunThread(i);\r\n                    if ( (baseStep.isAlive()) || baseStep.getStatus()!=StepDataInterface.STATUS_EMPTY)\r\n                    {\r\n                        StepStatus stepStatus = new StepStatus(baseStep);\r\n                        transStatus.getStepStatusList().add(stepStatus);\r\n                    }\r\n                }\r\n                \r\n                Log4jStringAppender appender = (Log4jStringAppender) transformationMap.getAppender(transName);\r\n                if (appender!=null)\r\n                {\r\n                    // The log can be quite large at times, we are going to put a base64 encoding around a compressed stream\r\n                    // of bytes to handle this one.\r\n                    \r\n                    ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n                    GZIPOutputStream gzos = new GZIPOutputStream(baos);\r\n                    gzos.write( appender.getBuffer().toString().getBytes() );\r\n                    gzos.close();\r\n                    \r\n                    String loggingString = new String(Base64.encodeBase64(baos.toByteArray()));\r\n                    transStatus.setLoggingString( loggingString );\r\n                }\r\n                \r\n                // Also set the result object...\r\n                //\r\n                transStatus.setResult( trans.getResult() );\r\n                \r\n                // Send the result back as XML\r\n                //\r\n                out.println(transStatus.getXML());\r\n            }\r\n            else\r\n            {\r\n                response.setContentType(\"text/html\");\r\n\r\n                out.println(\"<HTML>\");\r\n                out.println(\"<HEAD>\");\r\n                out.println(\"<TITLE>\" + Messages.getString(\"TransStatusServlet.KettleTransStatus\")  + \"<\/TITLE>\");\r\n                out.println(\"<META http-equiv=\\\"Refresh\\\" content=\\\"10;url=/kettle/transStatus?name=\"+transName+\"\\\">\");\r\n                out.println(\"<\/HEAD>\");\r\n                out.println(\"<BODY>\");\r\n                out.println(\"<H1>\" + Messages.getString(\"TransStatusServlet.TopTransStatus\", transName) +\"<\/H1>\");\r\n                \r\n                \r\n        \r\n                try\r\n                {\r\n                    out.println(\"<table border=\\\"1\\\">\");\r\n                    out.print(\"<tr> <th>\" + Messages.getString(\"TransStatusServlet.TransName\") + \"<\/th> <th>\" + Messages.getString(\"TransStatusServlet.TransStatus\") +  \"<\/th> <\/tr>\");\r\n        \r\n                    out.print(\"<tr>\");\r\n                    out.print(\"<td>\"+transName+\"<\/td>\");\r\n                    out.print(\"<td>\"+status+\"<\/td>\");\r\n                    out.print(\"<\/tr>\");\r\n                    out.print(\"<\/table>\");\r\n                    \r\n                    out.print(\"<p>\");\r\n                    \r\n                    if ( (trans.isFinished() && trans.isRunning()) || ( !trans.isRunning() && !trans.isPreparing() && !trans.isInitializing() ))\r\n                    {\r\n                        out.print(\"<a href=\\\"/kettle/startTrans?name=\"+transName+\"\\\">\" + Messages.getString(\"TransStatusServlet.StartTrans\") +\"<\/a>\");\r\n                        out.print(\"<p>\");\r\n                        out.print(\"<a href=\\\"/kettle/prepareExec?name=\"+transName+\"\\\">\" + Messages.getString(\"TransStatusServlet.PrepareTrans\") +\"<\/a><br>\");\r\n                        //out.print(\"<a href=\\\"/kettle/startExec?name=\"+transName+\"\\\">\" + Messages.getString(\"TransStatusServlet.StartTrans\") + \"<\/a><p>\");\r\n                    }\r\n                    else\r\n                    if (trans.isRunning())\r\n                    {\r\n                        out.print(\"<a href=\\\"/kettle/stopTrans?name=\"+transName+\"\\\">\" + Messages.getString(\"TransStatusServlet.StopTrans\")  + \"<\/a>\");\r\n                        out.print(\"<p>\");\r\n                    }\r\n                    out.print(\"<a href=\\\"/kettle/cleanupTrans?name=\"+transName+\"\\\">\" + Messages.getString(\"TransStatusServlet.CleanupTrans\") + \"<\/a>\");\r\n                    out.print(\"<p>\");\r\n                    \r\n                    out.println(\"<table border=\\\"1\\\">\");\r\n                    out.print(\"<tr> <th>\" +Messages.getString(\"TransStatusServlet.Stepname\") + \"<\/th> <th>\"  + Messages.getString(\"TransStatusServlet.CopyNr\") + \"<\/th> <th>\" + Messages.getString(\"TransStatusServlet.Read\") + \"<\/th> <th>\"+ Messages.getString(\"TransStatusServlet.Written\") + \"<\/th> <th>\" +Messages.getString(\"TransStatusServlet.Input\") + \"<\/th> <th>\" +Messages.getString(\"TransStatusServlet.Output\") + \"<\/th> \" +\r\n                            \"<th>\" + Messages.getString(\"TransStatusServlet.Updated\") + \"<\/th> <th>\" +  Messages.getString(\"TransStatusServlet.Rejected\") + \"<\/th> <th>\" +Messages.getString(\"TransStatusServlet.Errors\")  + \"<\/th> <th>\" + Messages.getString(\"TransStatusServlet.Active\")  + \"<\/th> <th>\" + Messages.getString(\"TransStatusServlet.Time\") + \"<\/th> \" +\r\n                            \"<th>\" + Messages.getString(\"TransStatusServlet.Speed\")+\"<\/th> <th>\" + Messages.getString(\"TransStatusServlet.prinout\") + \"<\/th> <\/tr>\");\r\n                   \r\n        \r\n                    for (int i = 0; i < trans.nrSteps(); i++)\r\n                    {\r\n                        BaseStep baseStep = trans.getRunThread(i);\r\n                        if ( (baseStep.isAlive()) || baseStep.getStatus()!=StepDataInterface.STATUS_EMPTY)\r\n                        {\r\n                            StepStatus stepStatus = new StepStatus(baseStep);\r\n                            out.print(stepStatus.getHTMLTableRow());\r\n                        }\r\n                    }\r\n                    out.println(\"<\/table>\");\r\n                    out.println(\"<p>\");\r\n                    \r\n                    out.print(\"<a href=\\\"/kettle/transStatus/?name=\"+transName+\"&xml=y\\\">\" +  Messages.getString(\"TransStatusServlet.ShowAsXml\")  +\"<\/a><br>\");\r\n                    out.print(\"<a href=\\\"/kettle/status\\\">\" + Messages.getString(\"TransStatusServlet.BackToStatusPage\")  +\"<\/a><br>\");\r\n                    out.print(\"<p><a href=\\\"/kettle/transStatus?name=\"+transName+\"\\\">\" +  Messages.getString(\"TransStatusServlet.Refresh\")  + \"<\/a>\");\r\n                    \r\n                    // Put the logging below that.\r\n                    Log4jStringAppender appender = (Log4jStringAppender) transformationMap.getAppender(transName);\r\n                    if (appender!=null)\r\n                    {\r\n                        out.println(\"<p>\");\r\n                        /*\r\n                        out.println(\"<pre>\");\r\n                        out.println(appender.getBuffer().toString());\r\n                        out.println(\"<\/pre>\");\r\n                        */\r\n                        out.println(\"<textarea id=\\\"translog\\\" cols=\\\"120\\\" rows=\\\"20\\\" wrap=\\\"off\\\" name=\\\"Transformation log\\\" readonly=\\\"readonly\\\">\"+appender.getBuffer().toString()+\"<\/textarea>\");\r\n                        \r\n                        out.println(\"<script type=\\\"text/javascript\\\"> \");\r\n                        out.println(\"  translog.scrollTop=translog.scrollHeight; \");\r\n                        out.println(\"<\/script> \");\r\n                        out.println(\"<p>\");\r\n                    }\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    out.println(\"<p>\");\r\n                    out.println(\"<pre>\");\r\n                    ex.printStackTrace(out);\r\n                    out.println(\"<\/pre>\");\r\n                }\r\n                \r\n                out.println(\"<p>\");\r\n                out.println(\"<\/BODY>\");\r\n                out.println(\"<\/HTML>\");\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if (useXML)\r\n            {\r\n                out.println(new WebResult(WebResult.STRING_ERROR, Messages.getString(\"TransStatusServlet.Log.CoundNotFindSpecTrans\",transName)));\r\n            }\r\n            else\r\n            {\r\n                out.println(\"<H1>\" + Messages.getString(\"TransStatusServlet.Log.CoundNotFindTrans\",transName)  + \"<\/H1>\");\r\n                out.println(\"<a href=\\\"/kettle/status\\\">\" + Messages.getString(\"TransStatusServlet.BackToStatusPage\")+ \"<\/a><p>\");\r\n                \r\n            }\r\n        }\r\n    }","commit_id":"387df3198bbd652715489199316801fdbcab324a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public static void main(String[] a) throws KettleException\n\t{\n\t\tEnvUtil.environmentInit();\n\t\t\n\t    List<String> args = new ArrayList<String>();\n\t    for (int i=0;i<a.length;i++)\n\t    {\n\t        if (a[i].length()>0) args.add(a[i]);\n\t    }\n\n\t\tRepositoryMeta repinfo  = null;\n\t\tUserInfo       userinfo = null;\n\t\tJob            job      = null;\n\t\t\n\t\tStringBuffer optionRepname, optionUsername, optionPassword, optionJobname, optionDirname, optionFilename, optionLoglevel;\n        StringBuffer optionLogfile, optionLogfileOld, optionListdir, optionListjobs, optionListrep, optionNorep, optionVersion;\n\n\t\tCommandLineOption options[] = new CommandLineOption[] \n            {\n\t\t\t    new CommandLineOption(\"rep\", \"Repository name\", optionRepname=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"user\", \"Repository username\", optionUsername=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"pass\", \"Repository password\", optionPassword=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"job\", \"The name of the transformation to launch\", optionJobname=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"dir\", \"The directory (don't forget the leading /)\", optionDirname=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"file\", \"The filename (Job XML) to launch\", optionFilename=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"level\", \"The logging level (Basic, Detailed, Debug, Rowlevel, Error, Nothing)\", optionLoglevel=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"logfile\", \"The logging file to write to\", optionLogfile=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"log\", \"The logging file to write to (deprecated)\", optionLogfileOld=new StringBuffer(), false, true),\n\t\t\t    new CommandLineOption(\"listdir\", \"List the directories in the repository\", optionListdir=new StringBuffer(), true, false),\n\t\t\t    new CommandLineOption(\"listjobs\", \"List the jobs in the specified directory\", optionListjobs=new StringBuffer(), true, false),\n\t\t\t    new CommandLineOption(\"listrep\", \"List the available repositories\", optionListrep=new StringBuffer(), true, false),\n\t\t        new CommandLineOption(\"norep\", \"Do not log into the repository\", optionNorep=new StringBuffer(), true, false),\n                new CommandLineOption(\"version\", \"show the version, revision and build date\", optionVersion=new StringBuffer(), true, false),\n            };\n\n\t\tif (args.size()==0 ) \n\t\t{\n\t\t    CommandLineOption.printUsage(options);\n\t\t    System.exit(9);\n\t\t}\n        \n        LogWriter log = LogWriter.getInstance(LogWriter.LOG_LEVEL_BASIC);\n        \n        CommandLineOption.parseArguments(args, options, log);\n\n        String kettleRepname  = Const.getEnvironmentVariable(\"KETTLE_REPOSITORY\", null);\n        String kettleUsername = Const.getEnvironmentVariable(\"KETTLE_USER\", null);\n        String kettlePassword = Const.getEnvironmentVariable(\"KETTLE_PASSWORD\", null);\n        \n        if (!Const.isEmpty(kettleRepname )) optionRepname  = new StringBuffer(kettleRepname );\n        if (!Const.isEmpty(kettleUsername)) optionUsername = new StringBuffer(kettleUsername);\n        if (!Const.isEmpty(kettlePassword)) optionPassword = new StringBuffer(kettlePassword);\n        \n        LogWriter.setConsoleAppenderDebug();\n        \n        if (Const.isEmpty(optionLogfile) && !Const.isEmpty(optionLogfileOld))\n        {\n           // if the old style of logging name is filled in, and the new one is not\n           // overwrite the new by the old\n           optionLogfile = optionLogfileOld;\n        }\n        \n        if (Const.isEmpty(optionLogfile))\n        {\n            log=LogWriter.getInstance( LogWriter.LOG_LEVEL_BASIC );\n        }\n        else\n        {\n            log=LogWriter.getInstance( optionLogfile.toString(), true, LogWriter.LOG_LEVEL_BASIC );\n        }\n        \n        if (!Const.isEmpty(optionLoglevel)) \n        {\n            log.setLogLevel(optionLoglevel.toString());\n            log.logMinimal(STRING_KITCHEN, \"Logging is at level : \"+log.getLogLevelLongDesc());\n        } \n\t\t\n        if (!Const.isEmpty(optionVersion))\n        {\n            BuildVersion buildVersion = BuildVersion.getInstance();\n            log.logBasic(\"Pan\", \"Kettle version \"+Const.VERSION+\", build \"+buildVersion.getVersion()+\", build date : \"+buildVersion.getBuildDate());\n            if (a.length==1) System.exit(6);\n        }\n        \n        // Start the action...\n        //\n        if (!Const.isEmpty(optionRepname) && !Const.isEmpty(optionUsername)) \tlog.logDetailed(STRING_KITCHEN,  Messages.getString(\"Kitchen.Log.RepUsernameSupplied\"));\n\n\t\tlog.logMinimal(STRING_KITCHEN, Messages.getString(\"Kitchen.Log.Starting\"));\r\n\t\t\n\t\t\n\t\t/* Load the plugins etc.*/\n\t\ttry {\n\t\t\tStepLoader.init();\n\t\t}\n\t\tcatch(KettleException e)\n\t\t{\n\t\t\tlog.logError(STRING_KITCHEN, Messages.getString(\"Kitchen.Error.LoadingSteps\"), e);\r\n\t\t\t\n\t\t\tSystem.exit(8);\n\t\t}\n\t\tStepLoader stepLoader = StepLoader.getInstance();\n        \n        /* Load the plugins etc.*/\n\t\ttry \n\t\t{\n\t\t\tJobEntryLoader.init();\n\t\t}\n\t\tcatch(KettleException e)\n        {\n            log.logError(STRING_KITCHEN, Messages.getString(\"Kitchen.Error.LoadingJobEntries\"), e);\r\n            \n            return;\n        }\n\n\t\tDate start, stop;\n\t\tCalendar cal;\n\t\tSimpleDateFormat df = new SimpleDateFormat(\"yyyy/MM/dd HH:mm:ss.SSS\");\n\t\tcal=Calendar.getInstance();\n\t\tstart=cal.getTime();\n\t\t\t\t\n\t\tif(log.isDebug()) log.logDebug(STRING_KITCHEN, Messages.getString(\"Kitchen.Log.AllocateNewJob\"));\r\n\t\t\r\n\t\t\n\t\tJobMeta jobMeta = new JobMeta(log);\n        \n        // In case we use a repository...\n        Repository repository = null;\n\n\t\ttry\n\t\t{\n\t\t\t// Read kettle job specified on command-line?\n\t\t\tif (!Const.isEmpty(optionRepname) || !Const.isEmpty(optionFilename))\n\t\t\t{\n\t\t\t\tlog.logDebug(STRING_KITCHEN, \"Parsing command line options.\");\n\t\t\t\tif (!Const.isEmpty(optionRepname) && !\"Y\".equalsIgnoreCase(optionNorep.toString()))\n\t\t\t\t{\n\t\t\t\t\tlog.logDebug(STRING_KITCHEN, \"Loading available repositories.\");\n\t\t\t\t\tRepositoriesMeta repsinfo = new RepositoriesMeta(log);\n\t\t\t\t\tif (repsinfo.readData())\n\t\t\t\t\t{\n\t\t\t\t\t\tlog.logDebug(STRING_KITCHEN, \"Finding repository [\"+optionRepname+\"]\");\n\t\t\t\t\t\trepinfo = repsinfo.findRepository(optionRepname.toString());\n\t\t\t\t\t\tif (repinfo!=null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Define and connect to the repository...\n\t\t\t\t\t\t\tlog.logDebug(STRING_KITCHEN, \"Allocate & connect to repository.\");\n\t\t\t\t\t\t\trepository = new Repository(log, repinfo, userinfo);\n\t\t\t\t\t\t\tif (repository.connect(\"Kitchen commandline\"))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tRepositoryDirectory directory = repository.getDirectoryTree(); // Default = root\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Find the directory name if one is specified...\n\t\t\t\t\t\t\t\tif (!Const.isEmpty(optionDirname))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tdirectory = repository.getDirectoryTree().findDirectory(optionDirname.toString());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (directory!=null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t// Check username, password\n\t\t\t\t\t\t\t\t\tlog.logDebug(STRING_KITCHEN, \"Check supplied username and password.\");\n\t\t\t\t\t\t\t\t\tuserinfo = new UserInfo(repository, optionUsername.toString(), optionPassword.toString());\n\t\t\t\t\t\t\t\t\tif (userinfo.getID()>0)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t    // Load a job\n\t\t\t\t\t\t\t\t\t\tif (!Const.isEmpty(optionJobname))\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlog.logDebug(STRING_KITCHEN, \"Load the job info...\");\n\t\t\t\t\t\t\t\t\t\t\tjobMeta =  new JobMeta(log, repository, optionJobname.toString(), directory);\n\t\t\t\t\t\t\t\t\t\t\tlog.logDebug(STRING_KITCHEN, \"Allocate job...\");\n\t\t\t\t\t\t\t\t\t\t\tjob = new Job(log, stepLoader, repository, jobMeta);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t// List the jobs in the repository\n\t\t\t\t\t\t\t\t\t\tif (\"Y\".equalsIgnoreCase(optionListjobs.toString()))\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t    log.logDebug(STRING_KITCHEN, \"Getting list of jobs in directory: \"+directory);\n\t\t\t\t\t\t\t\t\t\t\tString jobnames[] = repository.getJobNames(directory.getID());\n\t\t\t\t\t\t\t\t\t\t\tfor (int i=0;i<jobnames.length;i++)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tSystem.out.println(jobnames[i]);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t// List the directories in the repository\n\t\t\t\t\t\t\t\t\t\tif (\"Y\".equalsIgnoreCase(optionListdir.toString()))\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tString dirnames[] = repository.getDirectoryNames(directory.getID());\n\t\t\t\t\t\t\t\t\t\t\tfor (int i=0;i<dirnames.length;i++)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tSystem.out.println(dirnames[i]);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tSystem.out.println(\"ERROR: Can't verify username and password.\");\n\t\t\t\t\t\t\t\t\t\tuserinfo=null;\n\t\t\t\t\t\t\t\t\t\trepinfo=null;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tSystem.out.println(\"ERROR: Can't find the supplied directory [\"+optionDirname+\"]\");\n\t\t\t\t\t\t\t\t\tuserinfo=null;\n\t\t\t\t\t\t\t\t\trepinfo=null;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tSystem.out.println(\"ERROR: Can't connect to the repository.\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tSystem.out.println(\"ERROR: No repository provided, can't load job.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tSystem.out.println(\"ERROR: No repositories defined on this system.\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n                // Try to load if from file anyway.\n\t\t\t\tif (!Const.isEmpty(optionFilename) && job==null)\n\t\t\t\t{\n\t\t\t\t\tjobMeta = new JobMeta(log, optionFilename.toString(), null, null);\n\t\t\t\t\tjob = new Job(log, stepLoader, null, jobMeta);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\tif (\"Y\".equalsIgnoreCase(optionListrep.toString()))\n\t\t\t{\n\t\t\t\tRepositoriesMeta ri = new RepositoriesMeta(log);\n\t\t\t\tif (ri.readData())\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println(\"List of repositories:\");\n\t\t\t\t\tfor (int i=0;i<ri.nrRepositories();i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tRepositoryMeta rinfo = ri.getRepository(i);\n\t\t\t\t\t\tSystem.out.println(\"#\"+(i+1)+\" : \"+rinfo.getName()+\" [\"+rinfo.getDescription()+\"] \");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println(\"ERROR: Unable to read/parse the repositories XML file.\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch(KettleException e)\n\t\t{\n\t\t\tjob=null;\n\t\t\tjobMeta=null;\n\t\t\tSystem.out.println(\"Processing stopped because of an error: \"+e.getMessage());\n\t\t}\n\n\t\tif (job==null)\n\t\t{\n\t\t\tif (!\"Y\".equalsIgnoreCase(optionListjobs.toString()) &&  \n\t\t\t\t!\"Y\".equalsIgnoreCase(optionListdir.toString()) && \n\t\t\t\t!\"Y\".equalsIgnoreCase(optionListrep.toString()) \n\t\t\t    )\n\t\t\t{\n\t\t\t\tSystem.out.println(\"ERROR: Kitchen can't continue because the job couldn't be loaded.\");\t\t\t    \n\t\t\t}\n\n            System.exit(7);\n\t\t}\n\t\t\n\t\tResult result = null;\n\n        int returnCode=0;\n        \n\t\ttry\n\t\t{\n            // Set the arguments on the job metadata as well...\n            if ( args.size() == 0 )\n            {\n                job.getJobMeta().setArguments(null);\n            }\n            else\n            {\n                job.getJobMeta().setArguments((String[]) args.toArray(new String[args.size()]));\n            }\n            job.initializeVariablesFrom(null);\n            job.getJobMeta().setInternalKettleVariables(job);\n            \n\t\t\tresult = job.execute(); // Execute the selected job.\t\t\n\t\t\tjob.endProcessing(\"end\", result);  // The bookkeeping...\n\t\t}\n\t\tcatch(KettleJobException je)\n\t\t{\n            if (result==null)\n            {\n                result = new Result();\n            }\n            result.setNrErrors(1L);\n            \n\t\t\ttry\n\t\t\t{\n\t\t\t\tjob.endProcessing(\"error\", result);\n\t\t\t}\n\t\t\tcatch(KettleJobException je2)\n\t\t\t{\n\t\t\t\tlog.logError(job.getName(), \"A serious error occured : \"+je2.getMessage());\n                returnCode = 2;\n\t\t\t}\n\t\t}\n        finally\n        {\n            if (repository!=null) repository.disconnect();\n        }\n        \n\t\tlog.logMinimal(STRING_KITCHEN, Messages.getString(\"Kitchen.Log.Finished\"));\r\n\t\t\n\t\t\n\t\tif (result!=null && result.getNrErrors()!=0)\n\t\t{\n\t\t\tlog.logError(STRING_KITCHEN, \"Finished with errors\");\n            returnCode = 1;\n\t\t}\n\t\tcal=Calendar.getInstance();\n\t\tstop=cal.getTime();\n\t\tString begin=df.format(start).toString();\n\t\tString end  =df.format(stop).toString();\n\n\t\tlog.logMinimal(STRING_KITCHEN, \"Start=\"+begin+\", Stop=\"+end);\n\t\tlong millis=stop.getTime()-start.getTime();\n\t\tlog.logMinimal(STRING_KITCHEN, \"Processing ended after \"+(millis/1000)+\" seconds.\");\n        \n        System.exit(returnCode);\n\n\t}","id":15397,"modified_method":"public static void main(String[] a) throws KettleException\n\t{\n\t\tEnvUtil.environmentInit();\n\t\t\n\t    List<String> args = new ArrayList<String>();\n\t    for (int i=0;i<a.length;i++)\n\t    {\n\t        if (a[i].length()>0) args.add(a[i]);\n\t    }\n\n\t\tRepositoryMeta repinfo  = null;\n\t\tUserInfo       userinfo = null;\n\t\tJob            job      = null;\n\t\t\n\t\tStringBuffer optionRepname, optionUsername, optionPassword, optionJobname, optionDirname, optionFilename, optionLoglevel;\n        StringBuffer optionLogfile, optionLogfileOld, optionListdir, optionListjobs, optionListrep, optionNorep, optionVersion;\n\n\t\tCommandLineOption options[] = new CommandLineOption[] \n            {\n\t\t\t    new CommandLineOption(\"rep\", \"Repository name\", optionRepname=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"user\", \"Repository username\", optionUsername=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"pass\", \"Repository password\", optionPassword=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"job\", \"The name of the transformation to launch\", optionJobname=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"dir\", \"The directory (don't forget the leading /)\", optionDirname=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"file\", \"The filename (Job XML) to launch\", optionFilename=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"level\", \"The logging level (Basic, Detailed, Debug, Rowlevel, Error, Nothing)\", optionLoglevel=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"logfile\", \"The logging file to write to\", optionLogfile=new StringBuffer()),\n\t\t\t    new CommandLineOption(\"log\", \"The logging file to write to (deprecated)\", optionLogfileOld=new StringBuffer(), false, true),\n\t\t\t    new CommandLineOption(\"listdir\", \"List the directories in the repository\", optionListdir=new StringBuffer(), true, false),\n\t\t\t    new CommandLineOption(\"listjobs\", \"List the jobs in the specified directory\", optionListjobs=new StringBuffer(), true, false),\n\t\t\t    new CommandLineOption(\"listrep\", \"List the available repositories\", optionListrep=new StringBuffer(), true, false),\n\t\t        new CommandLineOption(\"norep\", \"Do not log into the repository\", optionNorep=new StringBuffer(), true, false),\n                new CommandLineOption(\"version\", \"show the version, revision and build date\", optionVersion=new StringBuffer(), true, false),\n            };\n\n\t\tif (args.size()==0 ) \n\t\t{\n\t\t    CommandLineOption.printUsage(options);\n\t\t    System.exit(9);\n\t\t}\n        \n        LogWriter log = LogWriter.getInstance(LogWriter.LOG_LEVEL_BASIC);\n        \n        CommandLineOption.parseArguments(args, options, log);\n\n        String kettleRepname  = Const.getEnvironmentVariable(\"KETTLE_REPOSITORY\", null);\n        String kettleUsername = Const.getEnvironmentVariable(\"KETTLE_USER\", null);\n        String kettlePassword = Const.getEnvironmentVariable(\"KETTLE_PASSWORD\", null);\n        \n        if (!Const.isEmpty(kettleRepname )) optionRepname  = new StringBuffer(kettleRepname );\n        if (!Const.isEmpty(kettleUsername)) optionUsername = new StringBuffer(kettleUsername);\n        if (!Const.isEmpty(kettlePassword)) optionPassword = new StringBuffer(kettlePassword);\n        \n        LogWriter.setConsoleAppenderDebug();\n        \n        if (Const.isEmpty(optionLogfile) && !Const.isEmpty(optionLogfileOld))\n        {\n           // if the old style of logging name is filled in, and the new one is not\n           // overwrite the new by the old\n           optionLogfile = optionLogfileOld;\n        }\n        \n        if (Const.isEmpty(optionLogfile))\n        {\n            log=LogWriter.getInstance( LogWriter.LOG_LEVEL_BASIC );\n        }\n        else\n        {\n            log=LogWriter.getInstance( optionLogfile.toString(), true, LogWriter.LOG_LEVEL_BASIC );\n        }\n        \n        if (!Const.isEmpty(optionLoglevel)) \n        {\n            log.setLogLevel(optionLoglevel.toString());\n            log.logMinimal(STRING_KITCHEN, \"Logging is at level : \"+log.getLogLevelLongDesc());\n        } \n\t\t\n        if (!Const.isEmpty(optionVersion))\n        {\n            BuildVersion buildVersion = BuildVersion.getInstance();\n            log.logBasic(\"Pan\", \"Kettle version \"+Const.VERSION+\", build \"+buildVersion.getVersion()+\", build date : \"+buildVersion.getBuildDate());\n            if (a.length==1) System.exit(6);\n        }\n        \n        // Start the action...\n        //\n        if (!Const.isEmpty(optionRepname) && !Const.isEmpty(optionUsername)) \tlog.logDetailed(STRING_KITCHEN,  Messages.getString(\"Kitchen.Log.RepUsernameSupplied\"));\n\n\t\tlog.logMinimal(STRING_KITCHEN, Messages.getString(\"Kitchen.Log.Starting\"));\r\n\t\t\n\t\t\n\t\t/* Load the plugins etc.*/\n\t\ttry {\n\t\t\tStepLoader.init();\n\t\t}\n\t\tcatch(KettleException e)\n\t\t{\n\t\t\tlog.logError(STRING_KITCHEN, Messages.getString(\"Kitchen.Error.LoadingSteps\"), e);\r\n\t\t\t\n\t\t\tSystem.exit(8);\n\t\t}\n\t\tStepLoader stepLoader = StepLoader.getInstance();\n        \n        /* Load the plugins etc.*/\n\t\ttry \n\t\t{\n\t\t\tJobEntryLoader.init();\n\t\t}\n\t\tcatch(KettleException e)\n        {\n            log.logError(STRING_KITCHEN, Messages.getString(\"Kitchen.Error.LoadingJobEntries\"), e);\r\n            \n            return;\n        }\n\n\t\tDate start, stop;\n\t\tCalendar cal;\n\t\tSimpleDateFormat df = new SimpleDateFormat(\"yyyy/MM/dd HH:mm:ss.SSS\");\n\t\tcal=Calendar.getInstance();\n\t\tstart=cal.getTime();\n\t\t\t\t\n\t\tif(log.isDebug()) log.logDebug(STRING_KITCHEN, Messages.getString(\"Kitchen.Log.AllocateNewJob\"));\r\n\t\t\r\n\t\t\n\t\tJobMeta jobMeta = new JobMeta(log);\n        \n        // In case we use a repository...\n        Repository repository = null;\n\n\t\ttry\n\t\t{\n\t\t\t// Read kettle job specified on command-line?\n\t\t\tif (!Const.isEmpty(optionRepname) || !Const.isEmpty(optionFilename))\n\t\t\t{\n\t\t\t\tlog.logDebug(STRING_KITCHEN, \"Parsing command line options.\");\n\t\t\t\tif (!Const.isEmpty(optionRepname) && !\"Y\".equalsIgnoreCase(optionNorep.toString()))\n\t\t\t\t{\n\t\t\t\t\tif(log.isDebug()) log.logDebug(STRING_KITCHEN, \"Loading available repositories.\");\n\t\t\t\t\tRepositoriesMeta repsinfo = new RepositoriesMeta(log);\n\t\t\t\t\tif (repsinfo.readData())\n\t\t\t\t\t{\n\t\t\t\t\t\tif(log.isDebug())log.logDebug(STRING_KITCHEN, \"Finding repository [\"+optionRepname+\"]\");\n\t\t\t\t\t\trepinfo = repsinfo.findRepository(optionRepname.toString());\n\t\t\t\t\t\tif (repinfo!=null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Define and connect to the repository...\n\t\t\t\t\t\t\tif(log.isDebug())log.logDebug(STRING_KITCHEN, \"Allocate & connect to repository.\");\n\t\t\t\t\t\t\trepository = new Repository(log, repinfo, userinfo);\n\t\t\t\t\t\t\tif (repository.connect(\"Kitchen commandline\"))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tRepositoryDirectory directory = repository.getDirectoryTree(); // Default = root\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Find the directory name if one is specified...\n\t\t\t\t\t\t\t\tif (!Const.isEmpty(optionDirname))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tdirectory = repository.getDirectoryTree().findDirectory(optionDirname.toString());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (directory!=null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t// Check username, password\n\t\t\t\t\t\t\t\t\tif(log.isDebug())log.logDebug(STRING_KITCHEN, \"Check supplied username and password.\");\n\t\t\t\t\t\t\t\t\tuserinfo = new UserInfo(repository, optionUsername.toString(), optionPassword.toString());\n\t\t\t\t\t\t\t\t\tif (userinfo.getID()>0)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t    // Load a job\n\t\t\t\t\t\t\t\t\t\tif (!Const.isEmpty(optionJobname))\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif(log.isDebug())log.logDebug(STRING_KITCHEN, \"Load the job info...\");\n\t\t\t\t\t\t\t\t\t\t\tjobMeta =  new JobMeta(log, repository, optionJobname.toString(), directory);\n\t\t\t\t\t\t\t\t\t\t\tif(log.isDebug())log.logDebug(STRING_KITCHEN, \"Allocate job...\");\n\t\t\t\t\t\t\t\t\t\t\tjob = new Job(log, stepLoader, repository, jobMeta);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t// List the jobs in the repository\n\t\t\t\t\t\t\t\t\t\tif (\"Y\".equalsIgnoreCase(optionListjobs.toString()))\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif(log.isDebug())log.logDebug(STRING_KITCHEN, \"Getting list of jobs in directory: \"+directory);\n\t\t\t\t\t\t\t\t\t\t\tString jobnames[] = repository.getJobNames(directory.getID());\n\t\t\t\t\t\t\t\t\t\t\tfor (int i=0;i<jobnames.length;i++)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tSystem.out.println(jobnames[i]);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t// List the directories in the repository\n\t\t\t\t\t\t\t\t\t\tif (\"Y\".equalsIgnoreCase(optionListdir.toString()))\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tString dirnames[] = repository.getDirectoryNames(directory.getID());\n\t\t\t\t\t\t\t\t\t\t\tfor (int i=0;i<dirnames.length;i++)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tSystem.out.println(dirnames[i]);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tSystem.out.println(\"ERROR: Can't verify username and password.\");\n\t\t\t\t\t\t\t\t\t\tuserinfo=null;\n\t\t\t\t\t\t\t\t\t\trepinfo=null;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tSystem.out.println(\"ERROR: Can't find the supplied directory [\"+optionDirname+\"]\");\n\t\t\t\t\t\t\t\t\tuserinfo=null;\n\t\t\t\t\t\t\t\t\trepinfo=null;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tSystem.out.println(\"ERROR: Can't connect to the repository.\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tSystem.out.println(\"ERROR: No repository provided, can't load job.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tSystem.out.println(\"ERROR: No repositories defined on this system.\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n                // Try to load if from file anyway.\n\t\t\t\tif (!Const.isEmpty(optionFilename) && job==null)\n\t\t\t\t{\n\t\t\t\t\tjobMeta = new JobMeta(log, optionFilename.toString(), null, null);\n\t\t\t\t\tjob = new Job(log, stepLoader, null, jobMeta);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\tif (\"Y\".equalsIgnoreCase(optionListrep.toString()))\n\t\t\t{\n\t\t\t\tRepositoriesMeta ri = new RepositoriesMeta(log);\n\t\t\t\tif (ri.readData())\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println(\"List of repositories:\");\n\t\t\t\t\tfor (int i=0;i<ri.nrRepositories();i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tRepositoryMeta rinfo = ri.getRepository(i);\n\t\t\t\t\t\tSystem.out.println(\"#\"+(i+1)+\" : \"+rinfo.getName()+\" [\"+rinfo.getDescription()+\"] \");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println(\"ERROR: Unable to read/parse the repositories XML file.\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch(KettleException e)\n\t\t{\n\t\t\tjob=null;\n\t\t\tjobMeta=null;\n\t\t\tSystem.out.println(\"Processing stopped because of an error: \"+e.getMessage());\n\t\t}\n\n\t\tif (job==null)\n\t\t{\n\t\t\tif (!\"Y\".equalsIgnoreCase(optionListjobs.toString()) &&  \n\t\t\t\t!\"Y\".equalsIgnoreCase(optionListdir.toString()) && \n\t\t\t\t!\"Y\".equalsIgnoreCase(optionListrep.toString()) \n\t\t\t    )\n\t\t\t{\n\t\t\t\tSystem.out.println(\"ERROR: Kitchen can't continue because the job couldn't be loaded.\");\t\t\t    \n\t\t\t}\n\n            System.exit(7);\n\t\t}\n\t\t\n\t\tResult result = null;\n\n        int returnCode=0;\n        \n\t\ttry\n\t\t{\n            // Set the arguments on the job metadata as well...\n            if ( args.size() == 0 )\n            {\n                job.getJobMeta().setArguments(null);\n            }\n            else\n            {\n                job.getJobMeta().setArguments((String[]) args.toArray(new String[args.size()]));\n            }\n            job.initializeVariablesFrom(null);\n            job.getJobMeta().setInternalKettleVariables(job);\n            \n\t\t\tresult = job.execute(); // Execute the selected job.\t\t\n\t\t\tjob.endProcessing(\"end\", result);  // The bookkeeping...\n\t\t}\n\t\tcatch(KettleJobException je)\n\t\t{\n            if (result==null)\n            {\n                result = new Result();\n            }\n            result.setNrErrors(1L);\n            \n\t\t\ttry\n\t\t\t{\n\t\t\t\tjob.endProcessing(\"error\", result);\n\t\t\t}\n\t\t\tcatch(KettleJobException je2)\n\t\t\t{\n\t\t\t\tlog.logError(job.getName(), \"A serious error occured : \"+je2.getMessage());\n                returnCode = 2;\n\t\t\t}\n\t\t}\n        finally\n        {\n            if (repository!=null) repository.disconnect();\n        }\n        \n\t\tlog.logMinimal(STRING_KITCHEN, Messages.getString(\"Kitchen.Log.Finished\"));\r\n\t\t\n\t\t\n\t\tif (result!=null && result.getNrErrors()!=0)\n\t\t{\n\t\t\tlog.logError(STRING_KITCHEN, Messages.getString(\"Kitchen.Error.FinishedWithErrors\"));\n            returnCode = 1;\n\t\t}\n\t\tcal=Calendar.getInstance();\n\t\tstop=cal.getTime();\n\t\tString begin=df.format(start).toString();\n\t\tString end  =df.format(stop).toString();\n\n\t\tlog.logMinimal(STRING_KITCHEN, \"Start=\"+begin+\", Stop=\"+end);\n\t\tlong millis=stop.getTime()-start.getTime();\n\t\tlog.logMinimal(STRING_KITCHEN, \"Processing ended after \"+(millis/1000)+\" seconds.\");\n        \n        System.exit(returnCode);\n\n\t}","commit_id":"387df3198bbd652715489199316801fdbcab324a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException\r\n    {\r\n        if (!request.getContextPath().equals(CONTEXT_PATH)) return;\r\n        \r\n        if (log.isDebug()) log.logDebug(toString(), \"Prepare execution of transformation requested\");\r\n\r\n        String transName = request.getParameter(\"name\");\r\n        boolean useXML = \"Y\".equalsIgnoreCase( request.getParameter(\"xml\") );\r\n\r\n        response.setStatus(HttpServletResponse.SC_OK);\r\n        \r\n        PrintWriter out = response.getWriter();\r\n        if (useXML)\r\n        {\r\n            response.setContentType(\"text/xml\");\r\n            out.print(XMLHandler.getXMLHeader(Const.XML_ENCODING));\r\n        }\r\n        else\r\n        {\r\n            response.setContentType(\"text/html\");\r\n            out.println(\"<HTML>\");\r\n            out.println(\"<HEAD>\");\r\n            out.println(\"<TITLE>Prepare execution of transformation<\/TITLE>\");\r\n            out.println(\"<META http-equiv=\\\"Refresh\\\" content=\\\"2;url=/kettle/transStatus?name=\"+transName+\"\\\">\");\r\n            out.println(\"<\/HEAD>\");\r\n            out.println(\"<BODY>\");\r\n        }\r\n    \r\n        try\r\n        {\r\n            Trans trans = transformationMap.getTransformation(transName);\r\n            TransConfiguration transConfiguration = transformationMap.getConfiguration(transName);\r\n            if (trans!=null && transConfiguration!=null)\r\n            {\r\n                TransExecutionConfiguration executionConfiguration = transConfiguration.getTransExecutionConfiguration();\r\n                // Set the appropriate logging, variables, arguments, replaydate, ...\r\n                // etc.\r\n                log.setLogLevel(executionConfiguration.getLogLevel());\r\n                trans.getTransMeta().setArguments(executionConfiguration.getArgumentStrings());\r\n                trans.setReplayDate(executionConfiguration.getReplayDate());\r\n                trans.setSafeModeEnabled(executionConfiguration.isSafeModeEnabled());\r\n                trans.injectVariables(executionConfiguration.getVariables());\r\n                \r\n                // Log to a String\r\n                Log4jStringAppender appender = LogWriter.createStringAppender();\r\n                log.addAppender(appender);\r\n                transformationMap.addAppender(transName, appender);\r\n                \r\n                try {\r\n                \ttrans.prepareExecution(null);\r\n\r\n                    if (useXML)\r\n                    {\r\n                        out.println(WebResult.OK.getXML());\r\n                    }\r\n                    else\r\n                    {\r\n                        out.println(\"<H1>Transformation '\"+transName+\"' was started.<\/H1>\");\r\n                        out.println(\"<a href=\\\"/kettle/transStatus?name=\"+transName+\"\\\">Back to the transformation status page<\/a><p>\");\r\n                    }\r\n                }\r\n                catch (Exception e) {\r\n                \t\r\n                    if (useXML)\r\n                    {\r\n                        out.println(new WebResult(WebResult.STRING_ERROR, \"Initialisation of transformation failed: \"+Const.CR+appender.getBuffer().toString()));\r\n                    }\r\n                    else\r\n                    {\r\n                        out.println(\"<H1>Transformation '\"+transName+\"' was not initialised correctly.<\/H1>\");\r\n                        out.println(\"<pre>\");\r\n                        out.println(appender.getBuffer().toString());\r\n                        out.println(\"<\/pre>\");\r\n                        out.println(\"<a href=\\\"/kettle/transStatus?name=\"+transName+\"\\\">Back to the transformation status page<\/a><p>\");\r\n                    }\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if (useXML)\r\n                {\r\n                    out.println(new WebResult(WebResult.STRING_ERROR, \"The specified transformation [\"+transName+\"] could not be found\"));\r\n                }\r\n                else\r\n                {\r\n                    out.println(\"<H1>Transformation '\"+transName+\"' could not be found.<\/H1>\");\r\n                    out.println(\"<a href=\\\"/kettle/status\\\">Back to the status page<\/a><p>\");\r\n                }\r\n            }\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            if (useXML)\r\n            {\r\n                out.println(new WebResult(WebResult.STRING_ERROR, \"Unexpected error during transformation execution preparation:\"+Const.CR+Const.getStackTracker(ex)));\r\n            }\r\n            else\r\n            {\r\n                out.println(\"<p>\");\r\n                out.println(\"<pre>\");\r\n                ex.printStackTrace(out);\r\n                out.println(\"<\/pre>\");\r\n            }\r\n        }\r\n\r\n        if (!useXML)\r\n        {\r\n            out.println(\"<p>\");\r\n            out.println(\"<\/BODY>\");\r\n            out.println(\"<\/HTML>\");\r\n        }\r\n    }","id":15398,"modified_method":"protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException\r\n    {\r\n        if (!request.getContextPath().equals(CONTEXT_PATH)) return;\r\n        \r\n        if (log.isDebug()) log.logDebug(toString(), \"Prepare execution of transformation requested\");\r\n\r\n        String transName = request.getParameter(\"name\");\r\n        boolean useXML = \"Y\".equalsIgnoreCase( request.getParameter(\"xml\") );\r\n\r\n        response.setStatus(HttpServletResponse.SC_OK);\r\n        \r\n        PrintWriter out = response.getWriter();\r\n        if (useXML)\r\n        {\r\n            response.setContentType(\"text/xml\");\r\n            out.print(XMLHandler.getXMLHeader(Const.XML_ENCODING));\r\n        }\r\n        else\r\n        {\r\n            response.setContentType(\"text/html\");\r\n            out.println(\"<HTML>\");\r\n            out.println(\"<HEAD>\");\r\n            out.println(\"<TITLE>Prepare execution of transformation<\/TITLE>\");\r\n            out.println(\"<META http-equiv=\\\"Refresh\\\" content=\\\"2;url=/kettle/transStatus?name=\"+transName+\"\\\">\");\r\n            out.println(\"<\/HEAD>\");\r\n            out.println(\"<BODY>\");\r\n        }\r\n    \r\n        try\r\n        {\r\n            Trans trans = transformationMap.getTransformation(transName);\r\n            TransConfiguration transConfiguration = transformationMap.getConfiguration(transName);\r\n            if (trans!=null && transConfiguration!=null)\r\n            {\r\n                TransExecutionConfiguration executionConfiguration = transConfiguration.getTransExecutionConfiguration();\r\n                // Set the appropriate logging, variables, arguments, replaydate, ...\r\n                // etc.\r\n                log.setLogLevel(executionConfiguration.getLogLevel());\r\n                trans.getTransMeta().setArguments(executionConfiguration.getArgumentStrings());\r\n                trans.setReplayDate(executionConfiguration.getReplayDate());\r\n                trans.setSafeModeEnabled(executionConfiguration.isSafeModeEnabled());\r\n                trans.injectVariables(executionConfiguration.getVariables());\r\n                \r\n                // Log to a String\r\n                Log4jStringAppender appender = LogWriter.createStringAppender();\r\n                log.addAppender(appender);\r\n                transformationMap.addAppender(transName, appender);\r\n                \r\n                try {\r\n                \ttrans.prepareExecution(null);\r\n\r\n                    if (useXML)\r\n                    {\r\n                        out.println(WebResult.OK.getXML());\r\n                    }\r\n                    else\r\n                    {\r\n                        out.println(\"<H1>Transformation '\"+transName+\"' was prepared.<\/H1>\");\r\n                        out.println(\"<a href=\\\"/kettle/transStatus?name=\"+transName+\"\\\">Back to the transformation status page<\/a><p>\");\r\n                    }\r\n                }\r\n                catch (Exception e) {\r\n                \t\r\n                    if (useXML)\r\n                    {\r\n                        out.println(new WebResult(WebResult.STRING_ERROR, \"Initialisation of transformation failed: \"+Const.CR+appender.getBuffer().toString()));\r\n                    }\r\n                    else\r\n                    {\r\n                        out.println(\"<H1>Transformation '\"+transName+\"' was not initialised correctly.<\/H1>\");\r\n                        out.println(\"<pre>\");\r\n                        out.println(appender.getBuffer().toString());\r\n                        out.println(\"<\/pre>\");\r\n                        out.println(\"<a href=\\\"/kettle/transStatus?name=\"+transName+\"\\\">Back to the transformation status page<\/a><p>\");\r\n                    }\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if (useXML)\r\n                {\r\n                    out.println(new WebResult(WebResult.STRING_ERROR, \"The specified transformation [\"+transName+\"] could not be found\"));\r\n                }\r\n                else\r\n                {\r\n                    out.println(\"<H1>Transformation '\"+transName+\"' could not be found.<\/H1>\");\r\n                    out.println(\"<a href=\\\"/kettle/status\\\">Back to the status page<\/a><p>\");\r\n                }\r\n            }\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            if (useXML)\r\n            {\r\n                out.println(new WebResult(WebResult.STRING_ERROR, \"Unexpected error during transformation execution preparation:\"+Const.CR+Const.getStackTracker(ex)));\r\n            }\r\n            else\r\n            {\r\n                out.println(\"<p>\");\r\n                out.println(\"<pre>\");\r\n                ex.printStackTrace(out);\r\n                out.println(\"<\/pre>\");\r\n            }\r\n        }\r\n\r\n        if (!useXML)\r\n        {\r\n            out.println(\"<p>\");\r\n            out.println(\"<\/BODY>\");\r\n            out.println(\"<\/HTML>\");\r\n        }\r\n    }","commit_id":"387df3198bbd652715489199316801fdbcab324a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException\r\n    {\r\n        if (!request.getContextPath().equals(CONTEXT_PATH)) return;\r\n        \r\n        if (log.isDebug()) log.logDebug(toString(), Messages.getString(\"StartJobServlet.Log.StartJobRequested\"));\r\n\r\n        String jobName = request.getParameter(\"name\");\r\n        boolean useXML = \"Y\".equalsIgnoreCase( request.getParameter(\"xml\") );\r\n\r\n        response.setStatus(HttpServletResponse.SC_OK);\r\n        \r\n        PrintWriter out = response.getWriter();\r\n        if (useXML)\r\n        {\r\n            response.setContentType(\"text/xml\");\r\n            response.setCharacterEncoding(Const.XML_ENCODING);\r\n            out.print(XMLHandler.getXMLHeader(Const.XML_ENCODING));\r\n        }\r\n        else\r\n        {\r\n            response.setContentType(\"text/html\");\r\n            out.println(\"<HTML>\");\r\n            out.println(\"<HEAD>\");\r\n            out.println(\"<TITLE>Start job<\/TITLE>\");\r\n            out.println(\"<META http-equiv=\\\"Refresh\\\" content=\\\"2;url=/kettle/jobStatus?name=\"+jobName+\"\\\">\");\r\n            out.println(\"<\/HEAD>\");\r\n            out.println(\"<BODY>\");\r\n        }\r\n    \r\n        try\r\n        {\r\n            Job job = jobMap.getJob(jobName);\r\n            if (job!=null)\r\n            {\r\n            \t// First see if this job already ran to completion.\r\n            \t// If so, we get an exception is we try to start() the job thread\r\n            \t//\r\n            \tif (job.isInitialized() && !job.isActive())\r\n            \t{\r\n            \t\t// Re-create the job from the jobMeta\r\n            \t\t//\r\n            \t\t// We might need to re-connect to the database\r\n            \t\t//\r\n            \t\tif (!job.getRep().getRepositoryInfo().isLocked())\r\n            \t\t{\r\n            \t\t\tjob.getRep().connect(toString());\r\n            \t\t}\r\n\r\n            \t\tjob = new Job(LogWriter.getInstance(), StepLoader.getInstance(), job.getRep(), job.getJobMeta());\r\n            \t}\r\n            \t\r\n                // Log to a String & save appender for re-use later.\r\n                Log4jStringAppender appender = LogWriter.createStringAppender();\r\n                log.addAppender(appender);\r\n                jobMap.addAppender(jobName, appender);\r\n                \r\n                job.start(); // runs the thread in the background...\r\n\r\n                String message = Messages.getString(\"StartJobServlet.Log.TransStarted\",jobName);\r\n                if (useXML)\r\n                {\r\n                    out.println(new WebResult(WebResult.STRING_OK, message).getXML());\r\n                }\r\n                else\r\n                {\r\n                    \r\n                    out.println(\"<H1>\"+message+\"<\/H1>\");\r\n                    out.println(\"<a href=\\\"/kettle/jobStatus?name=\"+jobName+\"\\\">\" +Messages.getString(\"JobStatusServlet.BackToJobStatusPage\") +\"<\/a><p>\");\r\n                    \r\n                    \r\n                }\r\n            }\r\n            else\r\n            {\r\n                String message = Messages.getString(\"StartJobServlet.Log.SpecifiedJobNotFound\",jobName);\r\n                if (useXML)\r\n                {\r\n                    out.println(new WebResult(WebResult.STRING_ERROR, message));\r\n                }\r\n                else\r\n                {\r\n                    out.println(\"<H1>\"+message+\"<\/H1>\");\r\n                    out.println(\"<a href=\\\"/kettle/status\\\">\" + Messages.getString(\"TransStatusServlet.BackToStatusPage\") + \"<\/a><p>\");\r\n                }\r\n            }\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            if (useXML)\r\n            {\r\n                out.println(new WebResult(WebResult.STRING_ERROR, \"Unexpected error during job start:\"+Const.CR+Const.getStackTracker(ex)));\r\n            }\r\n            else\r\n            {\r\n                out.println(\"<p>\");\r\n                out.println(\"<pre>\");\r\n                ex.printStackTrace(out);\r\n                out.println(\"<\/pre>\");\r\n            }\r\n        }\r\n\r\n        if (!useXML)\r\n        {\r\n            out.println(\"<p>\");\r\n            out.println(\"<\/BODY>\");\r\n            out.println(\"<\/HTML>\");\r\n        }\r\n    }","id":15399,"modified_method":"protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException\r\n    {\r\n        if (!request.getContextPath().equals(CONTEXT_PATH)) return;\r\n        \r\n        if (log.isDebug()) log.logDebug(toString(), Messages.getString(\"StartJobServlet.Log.StartJobRequested\"));\r\n\r\n        String jobName = request.getParameter(\"name\");\r\n        boolean useXML = \"Y\".equalsIgnoreCase( request.getParameter(\"xml\") );\r\n\r\n        response.setStatus(HttpServletResponse.SC_OK);\r\n        \r\n        PrintWriter out = response.getWriter();\r\n        if (useXML)\r\n        {\r\n            response.setContentType(\"text/xml\");\r\n            response.setCharacterEncoding(Const.XML_ENCODING);\r\n            out.print(XMLHandler.getXMLHeader(Const.XML_ENCODING));\r\n        }\r\n        else\r\n        {\r\n            response.setContentType(\"text/html\");\r\n            out.println(\"<HTML>\");\r\n            out.println(\"<HEAD>\");\r\n            out.println(\"<TITLE>Start job<\/TITLE>\");\r\n            out.println(\"<META http-equiv=\\\"Refresh\\\" content=\\\"2;url=/kettle/jobStatus?name=\"+jobName+\"\\\">\");\r\n            out.println(\"<\/HEAD>\");\r\n            out.println(\"<BODY>\");\r\n        }\r\n    \r\n        try\r\n        {\r\n            Job job = jobMap.getJob(jobName);\r\n            if (job!=null)\r\n            {\r\n            \t// First see if this job already ran to completion.\r\n            \t// If so, we get an exception is we try to start() the job thread\r\n            \t//\r\n            \tif (job.isInitialized() && !job.isActive())\r\n            \t{\r\n            \t\t// Re-create the job from the jobMeta\r\n            \t\t//\r\n            \t\t// We might need to re-connect to the database\r\n            \t\t//\r\n            \t\tif (!job.getRep().getRepositoryInfo().isLocked())\r\n            \t\t{\r\n            \t\t\tjob.getRep().connect(toString());\r\n            \t\t}\r\n\r\n            \t\tjob = new Job(LogWriter.getInstance(), StepLoader.getInstance(), job.getRep(), job.getJobMeta());\r\n            \t}\r\n            \t\r\n                // Log to a String & save appender for re-use later.\r\n                Log4jStringAppender appender = LogWriter.createStringAppender();\r\n                log.addAppender(appender);\r\n                jobMap.addAppender(jobName, appender);\r\n                \r\n                job.start(); // runs the thread in the background...\r\n\r\n                String message = Messages.getString(\"StartJobServlet.Log.JobStarted\",jobName);\r\n                if (useXML)\r\n                {\r\n                    out.println(new WebResult(WebResult.STRING_OK, message).getXML());\r\n                }\r\n                else\r\n                {\r\n                    \r\n                    out.println(\"<H1>\"+message+\"<\/H1>\");\r\n                    out.println(\"<a href=\\\"/kettle/jobStatus?name=\"+jobName+\"\\\">\" +Messages.getString(\"JobStatusServlet.BackToJobStatusPage\") +\"<\/a><p>\");\r\n                    \r\n                    \r\n                }\r\n            }\r\n            else\r\n            {\r\n                String message = Messages.getString(\"StartJobServlet.Log.SpecifiedJobNotFound\",jobName);\r\n                if (useXML)\r\n                {\r\n                    out.println(new WebResult(WebResult.STRING_ERROR, message));\r\n                }\r\n                else\r\n                {\r\n                    out.println(\"<H1>\"+message+\"<\/H1>\");\r\n                    out.println(\"<a href=\\\"/kettle/status\\\">\" + Messages.getString(\"TransStatusServlet.BackToStatusPage\") + \"<\/a><p>\");\r\n                }\r\n            }\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            if (useXML)\r\n            {\r\n                out.println(new WebResult(WebResult.STRING_ERROR, Messages.getString(\"StartJobServlet.Error.UnexpectedError\",Const.CR+Const.getStackTracker(ex))));\r\n            }\r\n            else\r\n            {\r\n                out.println(\"<p>\");\r\n                out.println(\"<pre>\");\r\n                ex.printStackTrace(out);\r\n                out.println(\"<\/pre>\");\r\n            }\r\n        }\r\n\r\n        if (!useXML)\r\n        {\r\n            out.println(\"<p>\");\r\n            out.println(\"<\/BODY>\");\r\n            out.println(\"<\/HTML>\");\r\n        }\r\n    }","commit_id":"387df3198bbd652715489199316801fdbcab324a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException\r\n    {\r\n        if (!request.getContextPath().equals(CONTEXT_PATH)) return;\r\n        \r\n        if (log.isDebug()) log.logDebug(toString(), \"Start of transformation requested\");\r\n\r\n        String transName = request.getParameter(\"name\");\r\n        boolean useXML = \"Y\".equalsIgnoreCase( request.getParameter(\"xml\") );\r\n\r\n        response.setStatus(HttpServletResponse.SC_OK);\r\n        \r\n        PrintWriter out = response.getWriter();\r\n        if (useXML)\r\n        {\r\n            response.setContentType(\"text/xml\");\r\n            response.setCharacterEncoding(Const.XML_ENCODING);\r\n            out.print(XMLHandler.getXMLHeader(Const.XML_ENCODING));\r\n        }\r\n        else\r\n        {\r\n            response.setContentType(\"text/html\");\r\n            out.println(\"<HTML>\");\r\n            out.println(\"<HEAD>\");\r\n            out.println(\"<TITLE>Start transformation<\/TITLE>\");\r\n            out.println(\"<META http-equiv=\\\"Refresh\\\" content=\\\"2;url=/kettle/transStatus?name=\"+transName+\"\\\">\");\r\n            out.println(\"<\/HEAD>\");\r\n            out.println(\"<BODY>\");\r\n        }\r\n    \r\n        try\r\n        {\r\n            Trans trans = transformationMap.getTransformation(transName);\r\n            if (trans!=null)\r\n            {\r\n                // Log to a String & save appender for re-use later.\r\n                Log4jStringAppender appender = LogWriter.createStringAppender();\r\n                log.addAppender(appender);\r\n                transformationMap.addAppender(transName, appender);\r\n                \r\n                trans.execute(null);\r\n\r\n                String message = \"Transformation '\"+transName+\"' was started.\";\r\n                if (useXML)\r\n                {\r\n                    out.println(new WebResult(WebResult.STRING_OK, message).getXML());\r\n                }\r\n                else\r\n                {\r\n                    \r\n                    out.println(\"<H1>\"+message+\"<\/H1>\");\r\n                    out.println(\"<a href=\\\"/kettle/transStatus?name=\"+transName+\"\\\">\" + Messages.getString(\"TransStatusServlet.BackToStatusPage\")+ \"<\/a><p>\");\r\n                }\r\n            }\r\n            else\r\n            {\r\n                String message = \"The specified transformation [\"+transName+\"] could not be found\";\r\n                if (useXML)\r\n                {\r\n                    out.println(new WebResult(WebResult.STRING_ERROR, message));\r\n                }\r\n                else\r\n                {\r\n                    out.println(\"<H1>\"+message+\"<\/H1>\");\r\n                    out.println(\"<a href=\\\"/kettle/status\\\">\" + Messages.getString(\"TransStatusServlet.BackToStatusPage\")+\"<\/a><p>\");\r\n                }\r\n            }\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            if (useXML)\r\n            {\r\n                out.println(new WebResult(WebResult.STRING_ERROR, \"Unexpected error during transformations start:\"+Const.CR+Const.getStackTracker(ex)));\r\n            }\r\n            else\r\n            {\r\n                out.println(\"<p>\");\r\n                out.println(\"<pre>\");\r\n                ex.printStackTrace(out);\r\n                out.println(\"<\/pre>\");\r\n            }\r\n        }\r\n\r\n        if (!useXML)\r\n        {\r\n            out.println(\"<p>\");\r\n            out.println(\"<\/BODY>\");\r\n            out.println(\"<\/HTML>\");\r\n        }\r\n    }","id":15400,"modified_method":"protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException\r\n    {\r\n        if (!request.getContextPath().equals(CONTEXT_PATH)) return;\r\n        \r\n        if (log.isDebug()) log.logDebug(toString(), Messages.getString(\"StartTransServlet.Log.StartTransRequested\"));\r\n\r\n        String transName = request.getParameter(\"name\");\r\n        boolean useXML = \"Y\".equalsIgnoreCase( request.getParameter(\"xml\") );\r\n\r\n        response.setStatus(HttpServletResponse.SC_OK);\r\n        \r\n        PrintWriter out = response.getWriter();\r\n        if (useXML)\r\n        {\r\n            response.setContentType(\"text/xml\");\r\n            response.setCharacterEncoding(Const.XML_ENCODING);\r\n            out.print(XMLHandler.getXMLHeader(Const.XML_ENCODING));\r\n        }\r\n        else\r\n        {\r\n            response.setContentType(\"text/html\");\r\n            out.println(\"<HTML>\");\r\n            out.println(\"<HEAD>\");\r\n            out.println(\"<TITLE>\" + Messages.getString(\"StartTransServlet.Log.StartOfTrans\") + \"<\/TITLE>\");\r\n            out.println(\"<META http-equiv=\\\"Refresh\\\" content=\\\"2;url=/kettle/transStatus?name=\"+transName+\"\\\">\");\r\n            out.println(\"<\/HEAD>\");\r\n            out.println(\"<BODY>\");\r\n        }\r\n    \r\n        try\r\n        {\r\n            Trans trans = transformationMap.getTransformation(transName);\r\n            if (trans!=null)\r\n            {\r\n                // Log to a String & save appender for re-use later.\r\n                Log4jStringAppender appender = LogWriter.createStringAppender();\r\n                log.addAppender(appender);\r\n                transformationMap.addAppender(transName, appender);\r\n                \r\n                trans.execute(null);\r\n\r\n                String message = Messages.getString(\"StartTransServlet.Log.TransStarted\",transName);\r\n                if (useXML)\r\n                {\r\n                    out.println(new WebResult(WebResult.STRING_OK, message).getXML());\r\n                }\r\n                else\r\n                {\r\n                    \r\n                    out.println(\"<H1>\"+message+\"<\/H1>\");\r\n                    out.println(\"<a href=\\\"/kettle/transStatus?name=\"+transName+\"\\\">\" + Messages.getString(\"TransStatusServlet.BackToStatusPage\")+ \"<\/a><p>\");\r\n                }\r\n            }\r\n            else\r\n            {\r\n                String message = Messages.getString(\"TransStatusServlet.Log.CoundNotFindSpecTrans\",transName);\r\n                if (useXML)\r\n                {\r\n                    out.println(new WebResult(WebResult.STRING_ERROR, message));\r\n                }\r\n                else\r\n                {\r\n                    out.println(\"<H1>\"+message+\"<\/H1>\");\r\n                    out.println(\"<a href=\\\"/kettle/status\\\">\" + Messages.getString(\"TransStatusServlet.BackToStatusPage\")+\"<\/a><p>\");\r\n                }\r\n            }\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            if (useXML)\r\n            {\r\n                out.println(new WebResult(WebResult.STRING_ERROR, Messages.getString(\"StartTransServlet.Error.UnexpectedError\",Const.CR+Const.getStackTracker(ex))));\r\n            }\r\n            else\r\n            {\r\n                out.println(\"<p>\");\r\n                out.println(\"<pre>\");\r\n                ex.printStackTrace(out);\r\n                out.println(\"<\/pre>\");\r\n            }\r\n        }\r\n\r\n        if (!useXML)\r\n        {\r\n            out.println(\"<p>\");\r\n            out.println(\"<\/BODY>\");\r\n            out.println(\"<\/HTML>\");\r\n        }\r\n    }","commit_id":"387df3198bbd652715489199316801fdbcab324a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public static byte[] wput(final String url, final String vhost, LinkedHashMap<String,ContentBody> post, final int timeout) throws IOException {\n\t\tfinal Client client = new Client();\n\t\tclient.setTimout(timeout);\n\t\tclient.setUserAgent(HTTPLoader.yacyUserAgent);\n\t\tclient.setHost(vhost);\n\t\t\n\t\treturn client.POSTbytes(url, post);\n\t}","id":15401,"modified_method":"/**\n     * send data to the server named by vhost\n     * \n     * @param url address of the server\n     * @param vhost name of the server at address which should respond\n     * @param post data to send (name-value-pairs)\n     * @param timeout in milliseconds\n     * @return response body\n     * @throws IOException\n     */\n    public static byte[] wput(final String url, final String vhost, LinkedHashMap<String,ContentBody> post, final int timeout) throws IOException {\n\t\tfinal Client client = new Client();\n\t\tclient.setTimout(timeout);\n\t\tclient.setUserAgent(HTTPLoader.yacyUserAgent);\n\t\tclient.setHost(vhost);\n\t\t\n\t\treturn client.POSTbytes(url, post);\n\t}","commit_id":"e1316d12d0de33707de4ffe74d1520c81b754b08","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public static byte[] wget(final String url, final String vhost, final int timeout) throws IOException {\n\t\tfinal Client client = new Client();\n        client.setTimout(timeout);\n\t\tclient.setUserAgent(HTTPLoader.yacyUserAgent);\n        client.setHost(vhost);\n        \n        return client.GETbytes(url);\n\t}","id":15402,"modified_method":"/**\n     * get data from the server named by vhost\n     * \n     * @param url address of the server\n     * @param vhost name of the server at address which should respond\n     * @param timeout in milliseconds\n     * @return response body\n     * @throws IOException\n     */\n    public static byte[] wget(final String url, final String vhost, final int timeout) throws IOException {\n\t\tfinal Client client = new Client();\n        client.setTimout(timeout);\n\t\tclient.setUserAgent(HTTPLoader.yacyUserAgent);\n        client.setHost(vhost);\n        \n        return client.GETbytes(url);\n\t}","commit_id":"e1316d12d0de33707de4ffe74d1520c81b754b08","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"/**\n     * send a query to a yacy public search interface\n     * @param rssSearchServiceURL the target url base (everything before the ? that follows the SRU request syntax properties). can null, then the local peer is used\n     * @param query the query as string\n     * @param startRecord number of first record\n     * @param maximumRecords maximum number of records\n     * @param verify if true, result entries are verified using the snippet fetch (slow); if false simply the result is returned\n     * @param global if true also search results from other peers are included\n     * @param timeout milliseconds that are waited at maximum for a search result\n     * @return\n     */\n    public static RSSFeed search(String rssSearchServiceURL, String query, boolean verify, boolean global, long timeout, int startRecord, int maximumRecords) throws IOException {\n        MultiProtocolURI uri = null;\n        try {\n            uri = new MultiProtocolURI(rssSearchServiceURL);\n        } catch (MalformedURLException e) {\n            throw new IOException(\"cora.Search failed asking peer '\" + rssSearchServiceURL + \"': bad url, \" + e.getMessage());\n        }\n        \n        // prepare request\n        final List<Part> post = new ArrayList<Part>();\n        post.add(new StringPart(\"query\", query, Charset.defaultCharset().name()));\n        post.add(new StringPart(\"startRecord\", Integer.toString(startRecord), Charset.defaultCharset().name()));\n        post.add(new StringPart(\"maximumRecords\", Long.toString(maximumRecords), Charset.defaultCharset().name()));\n        post.add(new StringPart(\"verify\", verify ? \"true\" : \"false\", Charset.defaultCharset().name()));\n        post.add(new StringPart(\"resource\", global ? \"global\" : \"local\", Charset.defaultCharset().name()));\n        \n        // send request\n        try {\n            final byte[] result = HttpConnector.wput(rssSearchServiceURL, uri.getHost(), post, (int) timeout);\n            //String debug = new String(result); System.out.println(\"*** DEBUG: \" + debug);\n            final RSSReader reader = RSSReader.parse(result);\n            if (reader == null) {\n                throw new IOException(\"cora.Search failed asking peer '\" + uri.getHost() + \"': probably bad response from remote peer (1), reader == null\");\n            }\n            final RSSFeed feed = reader.getFeed();\n            if (feed == null) {\n                // case where the rss reader does not understand the content\n                throw new IOException(\"cora.Search failed asking peer '\" + uri.getHost() + \"': probably bad response from remote peer (2)\");\n            }\n            return feed;\n        } catch (final IOException e) {\n            throw new IOException(\"cora.Search error asking peer '\" + uri.getHost() + \"':\" + e.toString());\n        }\n    }","id":15403,"modified_method":"/**\n     * send a query to a yacy public search interface\n     * @param rssSearchServiceURL the target url base (everything before the ? that follows the SRU request syntax properties). can null, then the local peer is used\n     * @param query the query as string\n     * @param startRecord number of first record\n     * @param maximumRecords maximum number of records\n     * @param verify if true, result entries are verified using the snippet fetch (slow); if false simply the result is returned\n     * @param global if true also search results from other peers are included\n     * @param timeout milliseconds that are waited at maximum for a search result\n     * @return\n     */\n    public static RSSFeed search(String rssSearchServiceURL, String query, boolean verify, boolean global, long timeout, int startRecord, int maximumRecords) throws IOException {\n        MultiProtocolURI uri = null;\n        try {\n            uri = new MultiProtocolURI(rssSearchServiceURL);\n        } catch (MalformedURLException e) {\n            throw new IOException(\"cora.Search failed asking peer '\" + rssSearchServiceURL + \"': bad url, \" + e.getMessage());\n        }\n        \n        // prepare request\n//        final List<Part> post = new ArrayList<Part>();\n//        post.add(new StringPart(\"query\", query, Charset.defaultCharset().name()));\n//        post.add(new StringPart(\"startRecord\", Integer.toString(startRecord), Charset.defaultCharset().name()));\n//        post.add(new StringPart(\"maximumRecords\", Long.toString(maximumRecords), Charset.defaultCharset().name()));\n//        post.add(new StringPart(\"verify\", verify ? \"true\" : \"false\", Charset.defaultCharset().name()));\n//        post.add(new StringPart(\"resource\", global ? \"global\" : \"local\", Charset.defaultCharset().name()));\n        \n        // send request\n        try {\n//            final byte[] result = HttpConnector.wput(rssSearchServiceURL, uri.getHost(), post, (int) timeout);\n            final LinkedHashMap<String,ContentBody> parts = new LinkedHashMap<String,ContentBody>();\n            parts.put(\"query\", new StringBody(query));\n            parts.put(\"startRecord\", new StringBody(Integer.toString(startRecord)));\n            parts.put(\"maximumRecords\", new StringBody(Long.toString(maximumRecords)));\n            parts.put(\"verify\", new StringBody(verify ? \"true\" : \"false\"));\n            parts.put(\"resource\", new StringBody(global ? \"global\" : \"local\"));\n            final byte[] result = HttpConnector.wput(rssSearchServiceURL, uri.getHost(), parts, (int) timeout);\n            //String debug = new String(result); System.out.println(\"*** DEBUG: \" + debug);\n            final RSSReader reader = RSSReader.parse(result);\n            if (reader == null) {\n                throw new IOException(\"cora.Search failed asking peer '\" + uri.getHost() + \"': probably bad response from remote peer (1), reader == null\");\n            }\n            final RSSFeed feed = reader.getFeed();\n            if (feed == null) {\n                // case where the rss reader does not understand the content\n                throw new IOException(\"cora.Search failed asking peer '\" + uri.getHost() + \"': probably bad response from remote peer (2)\");\n            }\n            return feed;\n        } catch (final IOException e) {\n            throw new IOException(\"cora.Search error asking peer '\" + uri.getHost() + \"':\" + e.toString());\n        }\n    }","commit_id":"e1316d12d0de33707de4ffe74d1520c81b754b08","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public static RSSFeed queryRemoteCrawlURLs(final yacySeedDB seedDB, final yacySeed target, final int maxCount, final long maxTime) {\r\n        // returns a list of \r\n        if (target == null) { return null; }\r\n        \r\n        // prepare request\r\n        final String salt = crypt.randomSalt();\r\n        final List<Part> post = yacyNetwork.basicRequestPost(Switchboard.getSwitchboard(), target.hash, salt);\r\n        post.add(new DefaultCharsetStringPart(\"call\", \"remotecrawl\"));\r\n        post.add(new DefaultCharsetStringPart(\"count\", Integer.toString(maxCount)));\r\n        post.add(new DefaultCharsetStringPart(\"time\", Long.toString(maxTime)));\r\n        \r\n        // send request\r\n        try {\r\n            /* a long time-out is needed */\r\n            final byte[] result = HttpConnector.wput(\"http://\" + target.getClusterAddress() + \"/yacy/urls.xml\", target.getHexHash() + \".yacyh\", post, (int) maxTime); \r\n            final RSSReader reader = RSSReader.parse(result);\r\n            if (reader == null) {\r\n                yacyCore.log.logWarning(\"yacyClient.queryRemoteCrawlURLs failed asking peer '\" + target.getName() + \"': probably bad response from remote peer (1), reader == null\");\r\n                target.put(yacySeed.RCOUNT, \"0\");\r\n                seedDB.update(target.hash, target); // overwrite number of remote-available number to avoid that this peer is called again (until update is done by peer ping)\r\n                //Log.logException(e);\r\n                return null;\r\n            }\r\n            final RSSFeed feed = reader.getFeed();\r\n            if (feed == null) {\r\n                // case where the rss reader does not understand the content\r\n                yacyCore.log.logWarning(\"yacyClient.queryRemoteCrawlURLs failed asking peer '\" + target.getName() + \"': probably bad response from remote peer (2)\");\r\n                //System.out.println(\"***DEBUG*** rss input = \" + new String(result));\r\n                target.put(yacySeed.RCOUNT, \"0\");\r\n                seedDB.update(target.hash, target); // overwrite number of remote-available number to avoid that this peer is called again (until update is done by peer ping)\r\n                //Log.logException(e);\r\n                return null;\r\n            }\r\n            return feed;\r\n        } catch (final IOException e) {\r\n            yacyCore.log.logSevere(\"yacyClient.queryRemoteCrawlURLs error asking peer '\" + target.getName() + \"':\" + e.toString());\r\n            return null;\r\n        }\r\n    }","id":15404,"modified_method":"public static RSSFeed queryRemoteCrawlURLs(final yacySeedDB seedDB, final yacySeed target, final int maxCount, final long maxTime) {\r\n        // returns a list of \r\n        if (target == null) { return null; }\r\n        \r\n        // prepare request\r\n        final String salt = crypt.randomSalt();\r\n//        final List<Part> post = yacyNetwork.basicRequestPost(Switchboard.getSwitchboard(), target.hash, salt);\r\n//        post.add(new DefaultCharsetStringPart(\"call\", \"remotecrawl\"));\r\n//        post.add(new DefaultCharsetStringPart(\"count\", Integer.toString(maxCount)));\r\n//        post.add(new DefaultCharsetStringPart(\"time\", Long.toString(maxTime)));\r\n        \r\n        // send request\r\n        try {\r\n            /* a long time-out is needed */\r\n//            final byte[] result = HttpConnector.wput(\"http://\" + target.getClusterAddress() + \"/yacy/urls.xml\", target.getHexHash() + \".yacyh\", post, (int) maxTime); \r\n            final LinkedHashMap<String,ContentBody> parts = yacyNetwork.basicRequestParts(Switchboard.getSwitchboard(), target.hash, salt);\r\n            parts.put(\"call\", new StringBody(\"remotecrawl\"));\r\n            parts.put(\"count\", new StringBody(Integer.toString(maxCount)));\r\n            parts.put(\"time\", new StringBody(Long.toString(maxTime)));\r\n            final byte[] result = HttpConnector.wput(\"http://\" + target.getClusterAddress() + \"/yacy/urls.xml\", target.getHexHash() + \".yacyh\", parts, (int) maxTime); \r\n            final RSSReader reader = RSSReader.parse(result);\r\n            if (reader == null) {\r\n                yacyCore.log.logWarning(\"yacyClient.queryRemoteCrawlURLs failed asking peer '\" + target.getName() + \"': probably bad response from remote peer (1), reader == null\");\r\n                target.put(yacySeed.RCOUNT, \"0\");\r\n                seedDB.update(target.hash, target); // overwrite number of remote-available number to avoid that this peer is called again (until update is done by peer ping)\r\n                //Log.logException(e);\r\n                return null;\r\n            }\r\n            final RSSFeed feed = reader.getFeed();\r\n            if (feed == null) {\r\n                // case where the rss reader does not understand the content\r\n                yacyCore.log.logWarning(\"yacyClient.queryRemoteCrawlURLs failed asking peer '\" + target.getName() + \"': probably bad response from remote peer (2)\");\r\n                //System.out.println(\"***DEBUG*** rss input = \" + new String(result));\r\n                target.put(yacySeed.RCOUNT, \"0\");\r\n                seedDB.update(target.hash, target); // overwrite number of remote-available number to avoid that this peer is called again (until update is done by peer ping)\r\n                //Log.logException(e);\r\n                return null;\r\n            }\r\n            return feed;\r\n        } catch (final IOException e) {\r\n            yacyCore.log.logSevere(\"yacyClient.queryRemoteCrawlURLs error asking peer '\" + target.getName() + \"':\" + e.toString());\r\n            return null;\r\n        }\r\n    }","commit_id":"e1316d12d0de33707de4ffe74d1520c81b754b08","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public static Map<String, String> transferStore(final String targetAddress, final String access, final String filename, final byte[] file) {\r\n        \r\n        // prepare request\r\n        final String salt = crypt.randomSalt();\r\n        final List<Part> post = yacyNetwork.basicRequestPost(Switchboard.getSwitchboard(), null, salt);\r\n        post.add(new DefaultCharsetStringPart(\"process\", \"store\"));\r\n        post.add(new DefaultCharsetStringPart(\"purpose\", \"crcon\"));\r\n        post.add(new DefaultCharsetStringPart(\"filesize\", Long.toString(file.length)));\r\n        post.add(new DefaultCharsetStringPart(\"md5\", Digest.encodeMD5Hex(file)));\r\n        post.add(new DefaultCharsetStringPart(\"access\", access));\r\n        post.add(new DefaultCharsetFilePart(\"filename\", new ByteArrayPartSource(filename, file)));\r\n        \r\n        // send request\r\n        try {\r\n            final byte[] content = HttpConnector.wput(\"http://\" + targetAddress + \"/yacy/transfer.html\", targetAddress, post, 20000);\r\n            final Map<String, String> result = FileUtils.table(content);\r\n            return result;\r\n        } catch (final Exception e) {\r\n            yacyCore.log.logSevere(\"yacyClient.postMessage error:\" + e.getMessage());\r\n            return null;\r\n        }\r\n    }","id":15405,"modified_method":"public static Map<String, String> transferStore(final String targetAddress, final String access, final String filename, final byte[] file) {\r\n        \r\n        // prepare request\r\n        final String salt = crypt.randomSalt();\r\n//        final List<Part> post = yacyNetwork.basicRequestPost(Switchboard.getSwitchboard(), null, salt);\r\n//        post.add(new DefaultCharsetStringPart(\"process\", \"store\"));\r\n//        post.add(new DefaultCharsetStringPart(\"purpose\", \"crcon\"));\r\n//        post.add(new DefaultCharsetStringPart(\"filesize\", Long.toString(file.length)));\r\n//        post.add(new DefaultCharsetStringPart(\"md5\", Digest.encodeMD5Hex(file)));\r\n//        post.add(new DefaultCharsetStringPart(\"access\", access));\r\n//        post.add(new DefaultCharsetFilePart(\"filename\", new ByteArrayPartSource(filename, file)));\r\n        \r\n        // send request\r\n        try {\r\n//            final byte[] content = HttpConnector.wput(\"http://\" + targetAddress + \"/yacy/transfer.html\", targetAddress, post, 20000);\r\n            final LinkedHashMap<String,ContentBody> parts = yacyNetwork.basicRequestParts(Switchboard.getSwitchboard(), null, salt);\r\n            parts.put(\"process\", new StringBody(\"store\"));\r\n            parts.put(\"purpose\", new StringBody(\"crcon\"));\r\n            parts.put(\"filesize\", new StringBody(Long.toString(file.length)));\r\n            parts.put(\"md5\", new StringBody(Digest.encodeMD5Hex(file)));\r\n            parts.put(\"access\", new StringBody(access));\r\n            parts.put(\"filename\", new ByteArrayBody(file, filename));\r\n            final byte[] content = HttpConnector.wput(\"http://\" + targetAddress + \"/yacy/transfer.html\", targetAddress, parts, 20000);\r\n            final Map<String, String> result = FileUtils.table(content);\r\n            return result;\r\n        } catch (final Exception e) {\r\n            yacyCore.log.logSevere(\"yacyClient.postMessage error:\" + e.getMessage());\r\n            return null;\r\n        }\r\n    }","commit_id":"e1316d12d0de33707de4ffe74d1520c81b754b08","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public static Map<String, String> crawlReceipt(final yacySeed mySeed, final yacySeed target, final String process, final String result, final String reason, final URIMetadataRow entry, final String wordhashes) {\r\n        assert (target != null);\r\n        assert (mySeed != null);\r\n        assert (mySeed != target);\r\n\r\n        /*\r\n         the result can have one of the following values:\r\n         negative cases, no retry\r\n           unavailable - the resource is not avaiable (a broken link); not found or interrupted\r\n           robot       - a robot-file has denied to crawl that resource\r\n         \r\n         negative cases, retry possible\r\n           rejected    - the peer has rejected to load the resource\r\n           dequeue     - peer too busy - rejected to crawl\r\n         \r\n         positive cases with crawling\r\n           fill        - the resource was loaded and processed\r\n           update      - the resource was already in database but re-loaded and processed\r\n         \r\n         positive cases without crawling\r\n           known       - the resource is already in database, believed to be fresh and not reloaded\r\n           stale       - the resource was reloaded but not processed because source had no changes\r\n         \r\n         */\r\n        \r\n        // prepare request\r\n        final String salt = crypt.randomSalt();\r\n        final List<Part> post = yacyNetwork.basicRequestPost(Switchboard.getSwitchboard(), target.hash, salt);\r\n        post.add(new DefaultCharsetStringPart(\"process\", process));\r\n        post.add(new DefaultCharsetStringPart(\"urlhash\", ((entry == null) ? \"\" : new String(entry.hash()))));\r\n        post.add(new DefaultCharsetStringPart(\"result\", result));\r\n        post.add(new DefaultCharsetStringPart(\"reason\", reason));\r\n        post.add(new DefaultCharsetStringPart(\"wordh\", wordhashes));\r\n        post.add(new DefaultCharsetStringPart(\"lurlEntry\", ((entry == null) ? \"\" : crypt.simpleEncode(entry.toString(), salt))));\r\n        \r\n        // determining target address\r\n        final String address = target.getClusterAddress();\r\n        if (address == null) { return null; }\r\n            \r\n        // send request\r\n        try {\r\n            final byte[] content = HttpConnector.wput(\"http://\" + address + \"/yacy/crawlReceipt.html\", target.getHexHash() + \".yacyh\", post, 10000);\r\n            return FileUtils.table(content);\r\n        } catch (final Exception e) {\r\n            // most probably a network time-out exception\r\n            yacyCore.log.logSevere(\"yacyClient.crawlReceipt error:\" + e.getMessage());\r\n            return null;\r\n        }\r\n    }","id":15406,"modified_method":"public static Map<String, String> crawlReceipt(final yacySeed mySeed, final yacySeed target, final String process, final String result, final String reason, final URIMetadataRow entry, final String wordhashes) {\r\n        assert (target != null);\r\n        assert (mySeed != null);\r\n        assert (mySeed != target);\r\n\r\n        /*\r\n         the result can have one of the following values:\r\n         negative cases, no retry\r\n           unavailable - the resource is not avaiable (a broken link); not found or interrupted\r\n           robot       - a robot-file has denied to crawl that resource\r\n         \r\n         negative cases, retry possible\r\n           rejected    - the peer has rejected to load the resource\r\n           dequeue     - peer too busy - rejected to crawl\r\n         \r\n         positive cases with crawling\r\n           fill        - the resource was loaded and processed\r\n           update      - the resource was already in database but re-loaded and processed\r\n         \r\n         positive cases without crawling\r\n           known       - the resource is already in database, believed to be fresh and not reloaded\r\n           stale       - the resource was reloaded but not processed because source had no changes\r\n         \r\n         */\r\n        \r\n        // prepare request\r\n        final String salt = crypt.randomSalt();\r\n//        final List<Part> post = yacyNetwork.basicRequestPost(Switchboard.getSwitchboard(), target.hash, salt);\r\n//        post.add(new DefaultCharsetStringPart(\"process\", process));\r\n//        post.add(new DefaultCharsetStringPart(\"urlhash\", ((entry == null) ? \"\" : new String(entry.hash()))));\r\n//        post.add(new DefaultCharsetStringPart(\"result\", result));\r\n//        post.add(new DefaultCharsetStringPart(\"reason\", reason));\r\n//        post.add(new DefaultCharsetStringPart(\"wordh\", wordhashes));\r\n//        post.add(new DefaultCharsetStringPart(\"lurlEntry\", ((entry == null) ? \"\" : crypt.simpleEncode(entry.toString(), salt))));\r\n        \r\n        // determining target address\r\n        final String address = target.getClusterAddress();\r\n        if (address == null) { return null; }\r\n            \r\n        // send request\r\n        try {\r\n//            final byte[] content = HttpConnector.wput(\"http://\" + address + \"/yacy/crawlReceipt.html\", target.getHexHash() + \".yacyh\", post, 10000);\r\n            // prepare request\r\n            final LinkedHashMap<String,ContentBody> parts = yacyNetwork.basicRequestParts(Switchboard.getSwitchboard(), target.hash, salt);\r\n            parts.put(\"process\", new StringBody(process));\r\n            parts.put(\"urlhash\", new StringBody(((entry == null) ? \"\" : new String(entry.hash()))));\r\n            parts.put(\"result\", new StringBody(result));\r\n            parts.put(\"reason\", new StringBody(reason));\r\n            parts.put(\"wordh\", new StringBody(wordhashes));\r\n            parts.put(\"lurlEntry\", new StringBody(((entry == null) ? \"\" : crypt.simpleEncode(entry.toString(), salt))));\r\n            // send request\r\n            final byte[] content = HttpConnector.wput(\"http://\" + address + \"/yacy/crawlReceipt.html\", target.getHexHash() + \".yacyh\", parts, 10000);\r\n            return FileUtils.table(content);\r\n        } catch (final Exception e) {\r\n            // most probably a network time-out exception\r\n            yacyCore.log.logSevere(\"yacyClient.crawlReceipt error:\" + e.getMessage());\r\n            return null;\r\n        }\r\n    }","commit_id":"e1316d12d0de33707de4ffe74d1520c81b754b08","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public static Map<String, String> transferPermission(final String targetAddress, final long filesize, final String filename) {\r\n\r\n        // prepare request\r\n        final String salt = crypt.randomSalt();\r\n        final List<Part> post = yacyNetwork.basicRequestPost(Switchboard.getSwitchboard(), null, salt);\r\n        post.add(new DefaultCharsetStringPart(\"process\", \"permission\"));\r\n        post.add(new DefaultCharsetStringPart(\"purpose\", \"crcon\"));\r\n        post.add(new DefaultCharsetStringPart(\"filename\", filename));\r\n        post.add(new DefaultCharsetStringPart(\"filesize\", Long.toString(filesize)));\r\n        post.add(new DefaultCharsetStringPart(\"can-send-protocol\", \"http\"));\r\n        \r\n        // send request\r\n        try {\r\n            final byte[] content = HttpConnector.wput(\"http://\" + targetAddress + \"/yacy/transfer.html\", targetAddress, post, 10000);\r\n            final Map<String, String> result = FileUtils.table(content);\r\n            return result;\r\n        } catch (final Exception e) {\r\n            // most probably a network time-out exception\r\n            yacyCore.log.logSevere(\"yacyClient.permissionTransfer error:\" + e.getMessage());\r\n            return null;\r\n        }\r\n    }","id":15407,"modified_method":"public static Map<String, String> transferPermission(final String targetAddress, final long filesize, final String filename) {\r\n\r\n        // prepare request\r\n        final String salt = crypt.randomSalt();\r\n//        final List<Part> post = yacyNetwork.basicRequestPost(Switchboard.getSwitchboard(), null, salt);\r\n//        post.add(new DefaultCharsetStringPart(\"process\", \"permission\"));\r\n//        post.add(new DefaultCharsetStringPart(\"purpose\", \"crcon\"));\r\n//        post.add(new DefaultCharsetStringPart(\"filename\", filename));\r\n//        post.add(new DefaultCharsetStringPart(\"filesize\", Long.toString(filesize)));\r\n//        post.add(new DefaultCharsetStringPart(\"can-send-protocol\", \"http\"));\r\n        \r\n        // send request\r\n        try {\r\n            // final byte[] content = HttpConnector.wput(\"http://\" + targetAddress + \"/yacy/transfer.html\", targetAddress, post, 10000);\r\n            final LinkedHashMap<String,ContentBody> parts = yacyNetwork.basicRequestParts(Switchboard.getSwitchboard(), null, salt);\r\n            parts.put(\"process\", new StringBody(\"permission\"));\r\n            parts.put(\"purpose\", new StringBody(\"crcon\"));\r\n            parts.put(\"filename\", new StringBody(filename));\r\n            parts.put(\"filesize\", new StringBody(Long.toString(filesize)));\r\n            parts.put(\"can-send-protocol\", new StringBody(\"http\"));\r\n            final byte[] content = HttpConnector.wput(\"http://\" + targetAddress + \"/yacy/transfer.html\", targetAddress, parts, 10000);\r\n            final Map<String, String> result = FileUtils.table(content);\r\n            return result;\r\n        } catch (final Exception e) {\r\n            // most probably a network time-out exception\r\n            yacyCore.log.logSevere(\"yacyClient.permissionTransfer error:\" + e.getMessage());\r\n            return null;\r\n        }\r\n    }","commit_id":"e1316d12d0de33707de4ffe74d1520c81b754b08","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"@SuppressWarnings(\"unchecked\")\r\n    public static int search(\r\n            final yacySeed mySeed,\r\n            final String wordhashes,\r\n            final String excludehashes,\r\n            final String urlhashes,\r\n            final Pattern prefer,\r\n            final Pattern filter,\r\n            final String language,\r\n            final String sitehash,\r\n            final String authorhash,\r\n            final int count,\r\n            final int maxDistance,\r\n            final boolean global, \r\n            final int partitions,\r\n            final yacySeed target,\r\n            final Segment indexSegment,\r\n            final ResultURLs crawlResults,\r\n            final RankingProcess containerCache,\r\n            final SearchEvent.SecondarySearchSuperviser secondarySearchSuperviser,\r\n            final Blacklist blacklist,\r\n            final RankingProfile rankingProfile,\r\n            final Bitfield constraint\r\n    ) {\r\n        // send a search request to peer with remote Hash\r\n\r\n        // INPUT:\r\n        // iam        : complete seed of the requesting peer\r\n        // youare     : seed hash of the target peer, used for testing network stability\r\n        // key        : transmission key for response\r\n        // search     : a list of search words\r\n        // hsearch    : a string of word hashes\r\n        // fwdep      : forward depth. if \"0\" then peer may NOT ask another peer for more results\r\n        // fwden      : forward deny, a list of seed hashes. They may NOT be target of forward hopping\r\n        // count      : maximum number of wanted results\r\n        // global     : if \"true\", then result may consist of answers from other peers\r\n        // partitions : number of remote peers that are asked (for evaluation of QPM)\r\n        // duetime    : maximum time that a peer should spent to create a result\r\n\r\n        // prepare request\r\n        final String salt = crypt.randomSalt();\r\n        final List<Part> post = yacyNetwork.basicRequestPost(Switchboard.getSwitchboard(), target.hash, salt);\r\n        post.add(new DefaultCharsetStringPart(\"myseed\", mySeed.genSeedStr(salt)));\r\n        post.add(new DefaultCharsetStringPart(\"count\", Integer.toString(Math.max(10, count))));\r\n        post.add(new DefaultCharsetStringPart(\"resource\", ((global) ? \"global\" : \"local\")));\r\n        post.add(new DefaultCharsetStringPart(\"partitions\", Integer.toString(partitions)));\r\n        post.add(new DefaultCharsetStringPart(\"query\", wordhashes));\r\n        post.add(new DefaultCharsetStringPart(\"exclude\", excludehashes));\r\n        post.add(new DefaultCharsetStringPart(\"duetime\", \"1000\"));\r\n        post.add(new DefaultCharsetStringPart(\"urls\", urlhashes));\r\n        post.add(new DefaultCharsetStringPart(\"prefer\", prefer.toString()));\r\n        post.add(new DefaultCharsetStringPart(\"filter\", filter.toString()));\r\n        post.add(new DefaultCharsetStringPart(\"language\", language));\r\n        post.add(new DefaultCharsetStringPart(\"sitehash\", sitehash));\r\n        post.add(new DefaultCharsetStringPart(\"authorhash\", authorhash));\r\n        post.add(new DefaultCharsetStringPart(\"ttl\", \"0\"));\r\n        post.add(new DefaultCharsetStringPart(\"maxdist\", Integer.toString(maxDistance)));\r\n        post.add(new DefaultCharsetStringPart(\"profile\", crypt.simpleEncode(rankingProfile.toExternalString())));\r\n        post.add(new DefaultCharsetStringPart(\"constraint\", (constraint == null) ? \"\" : constraint.exportB64()));\r\n        if (secondarySearchSuperviser != null) post.add(new DefaultCharsetStringPart(\"abstracts\", \"auto\"));\r\n        final long timestamp = System.currentTimeMillis();\r\n        boolean thisIsASecondarySearch = urlhashes.length() > 0;\r\n        assert !thisIsASecondarySearch || secondarySearchSuperviser == null;\r\n\r\n        // send request\r\n        Map<String, String> result = null;\r\n        try {\r\n          \tresult = FileUtils.table(HttpConnector.wput(\"http://\" + target.getClusterAddress() + \"/yacy/search.html\", target.getHexHash() + \".yacyh\", post, 60000));\r\n        } catch (final IOException e) {\r\n            yacyCore.log.logInfo(\"SEARCH failed, Peer: \" + target.hash + \":\" + target.getName() + \" (\" + e.getMessage() + \"), score=\" + target.selectscore);\r\n            //yacyCore.peerActions.peerDeparture(target, \"search request to peer created io exception: \" + e.getMessage());\r\n            return -1;\r\n        }\r\n\r\n        if (result == null || result.isEmpty()) {\r\n            if (yacyCore.log.isFine()) yacyCore.log.logFine(\"SEARCH failed FROM \"\r\n\t\t\t\t\t+ target.hash\r\n\t\t\t\t\t+ \":\"\r\n\t\t\t\t\t+ target.getName()\r\n\t\t\t\t\t+ \" (zero response), score=\"\r\n\t\t\t\t\t+ target.selectscore);\r\n\t\t\treturn -1;\r\n\t\t}\r\n\r\n\t\t// compute all computation times\r\n\t\tfinal long totalrequesttime = System.currentTimeMillis() - timestamp;\r\n\t\t\r\n\t\t// OUTPUT:\r\n\t\t// version : application version of responder\r\n\t\t// uptime : uptime in seconds of responder\r\n\t\t// total : number of total available LURL's for this search\r\n\t\t// count : number of returned LURL's for this search\r\n\t\t// resource<n> : LURL of search\r\n\t\t// fwhop : hops (depth) of forwards that had been performed to construct this result\r\n\t\t// fwsrc : peers that helped to construct this result\r\n\t\t// fwrec : peers that would have helped to construct this result (recommendations)\r\n\t\t// searchtime : time that the peer actually spent to create the result\r\n\t\t// references : references (search hints) that was calculated during search\r\n\t\t\r\n\t\t// now create a plasmaIndex out of this result\r\n\t\t// System.out.println(\"yacyClient: \" + ((urlhashes.length() == 0) ? \"primary\" : \"secondary\")+ \" search result = \" + result.toString()); // debug\r\n\t\t\r\n\t\tint urlcount = 0, joincount = 0;\r\n        try {\r\n            joincount = Integer.parseInt(result.get(\"joincount\")); // the complete number of hits at remote site\r\n            urlcount = Integer.parseInt(result.get(\"count\"));      // the number of hits that are returned in the result list\r\n        } catch (final NumberFormatException e) {\r\n            yacyCore.log.logInfo(\"SEARCH failed FROM \" + target.hash + \":\" + target.getName() + \", wrong output format: \" + e.getMessage());\r\n            //yacyCore.peerActions.peerDeparture(target, \"search request to peer created number format exception\");\r\n            return -1;\r\n        }\r\n\t\t// System.out.println(\"***result count \" + results);\r\n\r\n\t\t// create containers\r\n\t\tfinal int words = wordhashes.length() / Word.commonHashLength;\r\n\t\tassert words > 0 : \"wordhashes = \" + wordhashes;\r\n\t\tfinal ReferenceContainer<WordReference>[] container = new ReferenceContainer[words];\r\n\t\tfor (int i = 0; i < words; i++) {\r\n\t\t\ttry {\r\n                container[i] = ReferenceContainer.emptyContainer(Segment.wordReferenceFactory, wordhashes.substring(i * Word.commonHashLength, (i + 1) * Word.commonHashLength).getBytes(), count);\r\n            } catch (RowSpaceExceededException e) {\r\n                Log.logException(e);\r\n                return -1;\r\n            }\r\n\t\t}\r\n\r\n\t\t// insert results to containers\r\n\t\tURIMetadataRow urlEntry;\r\n\t\tfor (int n = 0; n < urlcount; n++) {\r\n\t\t\t// get one single search result\r\n\t\t\turlEntry = URIMetadataRow.importEntry(result.get(\"resource\" + n));\r\n\t\t\tif (urlEntry == null) continue;\r\n\t\t\tassert (urlEntry.hash().length == 12) : \"urlEntry.hash() = \" + new String(urlEntry.hash());\r\n\t\t\tif (urlEntry.hash().length != 12) continue; // bad url hash\r\n\t\t\tfinal URIMetadataRow.Components metadata = urlEntry.metadata();\r\n\t\t\tif (metadata == null) continue;\r\n\t\t\tif (blacklist.isListed(Blacklist.BLACKLIST_SEARCH, metadata.url())) {\r\n\t\t\t    if (yacyCore.log.isInfo()) yacyCore.log.logInfo(\"remote search: filtered blacklisted url \" + metadata.url() + \" from peer \" + target.getName());\r\n\t\t\t\tcontinue; // block with backlist\r\n\t\t\t}\r\n            \r\n\t\t\tfinal String urlRejectReason = Switchboard.getSwitchboard().crawlStacker.urlInAcceptedDomain(metadata.url());\r\n            if (urlRejectReason != null) {\r\n                if (yacyCore.log.isInfo()) yacyCore.log.logInfo(\"remote search: rejected url '\" + metadata.url() + \"' (\" + urlRejectReason + \") from peer \" + target.getName());\r\n                continue; // reject url outside of our domain\r\n            }\r\n\r\n\t\t\t// save the url entry\r\n            Reference entry = urlEntry.word();\r\n\t\t\tif (entry == null) {\r\n\t\t\t    if (yacyCore.log.isWarning()) yacyCore.log.logWarning(\"remote search: no word attached from peer \" + target.getName() + \", version \" + target.getVersion());\r\n\t\t\t\tcontinue; // no word attached\r\n\t\t\t}\r\n\r\n\t\t\t// the search-result-url transports all the attributes of word indexes\r\n\t\t\tif (!Base64Order.enhancedCoder.equal(entry.metadataHash(), urlEntry.hash())) {\r\n\t\t\t\tyacyCore.log.logInfo(\"remote search: url-hash \" + new String(urlEntry.hash()) + \" does not belong to word-attached-hash \" + new String(entry.metadataHash()) + \"; url = \" + metadata.url() + \" from peer \" + target.getName());\r\n\t\t\t\tcontinue; // spammed\r\n\t\t\t}\r\n\r\n\t\t\t// passed all checks, store url\r\n\t\t\ttry {\r\n\t\t\t    indexSegment.urlMetadata().store(urlEntry);\r\n\t\t\t\tcrawlResults.stack(urlEntry, mySeed.hash.getBytes(), target.hash.getBytes(), EventOrigin.QUERIES);\r\n\t\t\t} catch (final IOException e) {\r\n\t\t\t\tyacyCore.log.logSevere(\"could not store search result\", e);\r\n\t\t\t\tcontinue; // db-error\r\n\t\t\t}\r\n\r\n\t\t\tif (urlEntry.snippet() != null) {\r\n\t\t\t\t// we don't store the snippets along the url entry,\r\n                // because they are search-specific.\r\n\t\t\t\t// instead, they are placed in a snipped-search cache.\r\n\t\t\t\t// System.out.println(\"--- RECEIVED SNIPPET '\" + link.snippet() + \"'\");\r\n\t\t\t    TextSnippet.storeToCache(wordhashes, new String(urlEntry.hash()), urlEntry.snippet());\r\n\t\t\t}\r\n            \r\n\t\t\t// add the url entry to the word indexes\r\n\t\t\tfor (int m = 0; m < words; m++) {\r\n\t\t\t\ttry {\r\n                    container[m].add(entry);\r\n                } catch (RowSpaceExceededException e) {\r\n                    Log.logException(e);\r\n                    break;\r\n                }\r\n\t\t\t}\r\n\t\t}\r\n\r\n        // store remote result to local result container\r\n        synchronized (containerCache) {\r\n            // insert one container into the search result buffer\r\n            containerCache.add(container[0], false, joincount); // one is enough, only the references are used, not the word\r\n        }\r\n        // insert the containers to the index\r\n        for (ReferenceContainer<WordReference> c: container) try {\r\n            indexSegment.termIndex().add(c);\r\n        } catch (Exception e) {\r\n            Log.logException(e);\r\n        }\r\n        yacyCore.log.logInfo(\"remote search: peer \" + target.getName() + \" sent \" + container[0].size() + \"/\" + joincount + \" references for \" + (thisIsASecondarySearch ? \"a secondary search\" : \"joined word queries\"));\r\n\r\n        // integrate remote top-words/topics\r\n        final String references = result.get(\"references\");\r\n        if (references != null && references.length() > 0) {\r\n            yacyCore.log.logInfo(\"remote search: peer \" + target.getName() + \" sent topics: \" + references);\r\n            // add references twice, so they can be counted (must have at least 2 entries)\r\n            String[] rs = references.split(\",\");\r\n            synchronized (containerCache) {\r\n                containerCache.addTopic(rs);\r\n                containerCache.addTopic(rs);\r\n            }\r\n        }\r\n        \r\n\t\t// read index abstract\r\n\t\tif (secondarySearchSuperviser != null) {\r\n\t\t\tfinal Iterator<Map.Entry<String, String>> i = result.entrySet().iterator();\r\n\t\t\tMap.Entry<String, String> entry;\r\n\t\t\tString wordhash;\r\n\t\t\tString whacc = \"\";\r\n\t\t\tByteBuffer ci;\r\n\t\t\tint ac = 0;\r\n\t\t\tabstractparser: while (i.hasNext()) {\r\n\t\t\t\tentry = i.next();\r\n\t\t\t\tif (entry.getKey().startsWith(\"indexabstract.\")) {\r\n\t\t\t\t\twordhash = entry.getKey().substring(14);\r\n\t\t\t\t\tif (wordhash.charAt(0) == '[') break abstractparser;\r\n\t\t\t\t\twhacc += wordhash;\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tci = new ByteBuffer(entry.getValue().getBytes(\"UTF-8\"));\r\n\t\t\t\t\t} catch (UnsupportedEncodingException e) {\r\n\t\t\t\t\t    Log.logException(e);\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//System.out.println(\"DEBUG-ABSTRACTFETCH: for word hash \" + wordhash + \" received \" + ci.toString());\r\n\t\t\t\t\tsecondarySearchSuperviser.addAbstract(wordhash, ReferenceContainer.decompressIndex(ci, target.hash));\r\n\t\t\t\t\tac++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (ac > 0) {\r\n\t\t\t    secondarySearchSuperviser.commitAbstract();\r\n\t\t\t    yacyCore.log.logInfo(\"remote search: peer \" + target.getName() + \" sent \" + ac + \" index abstracts for words \"+ whacc);\r\n\t\t\t}\r\n\t\t}\r\n        \r\n        // generate statistics\r\n\t\tlong searchtime;\r\n\t\ttry {\r\n\t\t\tsearchtime = Integer.parseInt(result.get(\"searchtime\"));\r\n\t\t} catch (final NumberFormatException e) {\r\n\t\t\tsearchtime = totalrequesttime;\r\n\t\t}\r\n\t\tif (yacyCore.log.isFine()) yacyCore.log.logFine(\"SEARCH \"\r\n\t\t\t\t+ urlcount\r\n\t\t\t\t+ \" URLS FROM \"\r\n\t\t\t\t+ target.hash\r\n\t\t\t\t+ \":\"\r\n\t\t\t\t+ target.getName()\r\n\t\t\t\t+ \", score=\"\r\n\t\t\t\t+ target.selectscore\r\n\t\t\t\t+ \", searchtime=\" + searchtime + \", netdelay=\"\r\n\t\t\t\t+ (totalrequesttime - searchtime) + \", references=\"\r\n\t\t\t\t+ result.get(\"references\"));\r\n\t\treturn urlcount;\r\n\t}","id":15408,"modified_method":"@SuppressWarnings(\"unchecked\")\r\n    public static int search(\r\n            final yacySeed mySeed,\r\n            final String wordhashes,\r\n            final String excludehashes,\r\n            final String urlhashes,\r\n            final Pattern prefer,\r\n            final Pattern filter,\r\n            final String language,\r\n            final String sitehash,\r\n            final String authorhash,\r\n            final int count,\r\n            final int maxDistance,\r\n            final boolean global, \r\n            final int partitions,\r\n            final yacySeed target,\r\n            final Segment indexSegment,\r\n            final ResultURLs crawlResults,\r\n            final RankingProcess containerCache,\r\n            final SearchEvent.SecondarySearchSuperviser secondarySearchSuperviser,\r\n            final Blacklist blacklist,\r\n            final RankingProfile rankingProfile,\r\n            final Bitfield constraint\r\n    ) {\r\n        // send a search request to peer with remote Hash\r\n\r\n        // INPUT:\r\n        // iam        : complete seed of the requesting peer\r\n        // youare     : seed hash of the target peer, used for testing network stability\r\n        // key        : transmission key for response\r\n        // search     : a list of search words\r\n        // hsearch    : a string of word hashes\r\n        // fwdep      : forward depth. if \"0\" then peer may NOT ask another peer for more results\r\n        // fwden      : forward deny, a list of seed hashes. They may NOT be target of forward hopping\r\n        // count      : maximum number of wanted results\r\n        // global     : if \"true\", then result may consist of answers from other peers\r\n        // partitions : number of remote peers that are asked (for evaluation of QPM)\r\n        // duetime    : maximum time that a peer should spent to create a result\r\n\r\n        // prepare request\r\n        final String salt = crypt.randomSalt();\r\n//        final List<Part> post = yacyNetwork.basicRequestPost(Switchboard.getSwitchboard(), target.hash, salt);\r\n//        post.add(new DefaultCharsetStringPart(\"myseed\", mySeed.genSeedStr(salt)));\r\n//        post.add(new DefaultCharsetStringPart(\"count\", Integer.toString(Math.max(10, count))));\r\n//        post.add(new DefaultCharsetStringPart(\"resource\", ((global) ? \"global\" : \"local\")));\r\n//        post.add(new DefaultCharsetStringPart(\"partitions\", Integer.toString(partitions)));\r\n//        post.add(new DefaultCharsetStringPart(\"query\", wordhashes));\r\n//        post.add(new DefaultCharsetStringPart(\"exclude\", excludehashes));\r\n//        post.add(new DefaultCharsetStringPart(\"duetime\", \"1000\"));\r\n//        post.add(new DefaultCharsetStringPart(\"urls\", urlhashes));\r\n//        post.add(new DefaultCharsetStringPart(\"prefer\", prefer.toString()));\r\n//        post.add(new DefaultCharsetStringPart(\"filter\", filter.toString()));\r\n//        post.add(new DefaultCharsetStringPart(\"language\", language));\r\n//        post.add(new DefaultCharsetStringPart(\"sitehash\", sitehash));\r\n//        post.add(new DefaultCharsetStringPart(\"authorhash\", authorhash));\r\n//        post.add(new DefaultCharsetStringPart(\"ttl\", \"0\"));\r\n//        post.add(new DefaultCharsetStringPart(\"maxdist\", Integer.toString(maxDistance)));\r\n//        post.add(new DefaultCharsetStringPart(\"profile\", crypt.simpleEncode(rankingProfile.toExternalString())));\r\n//        post.add(new DefaultCharsetStringPart(\"constraint\", (constraint == null) ? \"\" : constraint.exportB64()));\r\n//        if (secondarySearchSuperviser != null) post.add(new DefaultCharsetStringPart(\"abstracts\", \"auto\"));\r\n        final long timestamp = System.currentTimeMillis();\r\n        boolean thisIsASecondarySearch = urlhashes.length() > 0;\r\n        assert !thisIsASecondarySearch || secondarySearchSuperviser == null;\r\n\r\n        // send request\r\n        Map<String, String> result = null;\r\n        try {\r\n//          \tresult = FileUtils.table(HttpConnector.wput(\"http://\" + target.getClusterAddress() + \"/yacy/search.html\", target.getHexHash() + \".yacyh\", post, 60000));\r\n          \tfinal LinkedHashMap<String,ContentBody> parts = yacyNetwork.basicRequestParts(Switchboard.getSwitchboard(), target.hash, salt);\r\n          \tparts.put(\"myseed\", new StringBody(mySeed.genSeedStr(salt)));\r\n          \tparts.put(\"count\", new StringBody(Integer.toString(Math.max(10, count))));\r\n          \tparts.put(\"resource\", new StringBody(((global) ? \"global\" : \"local\")));\r\n          \tparts.put(\"partitions\", new StringBody(Integer.toString(partitions)));\r\n          \tparts.put(\"query\", new StringBody(wordhashes));\r\n          \tparts.put(\"exclude\", new StringBody(excludehashes));\r\n          \tparts.put(\"duetime\", new StringBody(\"1000\"));\r\n          \tparts.put(\"urls\", new StringBody(urlhashes));\r\n          \tparts.put(\"prefer\", new StringBody(prefer.toString()));\r\n          \tparts.put(\"filter\", new StringBody(filter.toString()));\r\n          \tparts.put(\"language\", new StringBody(language));\r\n          \tparts.put(\"sitehash\", new StringBody(sitehash));\r\n          \tparts.put(\"authorhash\", new StringBody(authorhash));\r\n          \tparts.put(\"ttl\", new StringBody(\"0\"));\r\n          \tparts.put(\"maxdist\", new StringBody(Integer.toString(maxDistance)));\r\n          \tparts.put(\"profile\", new StringBody(crypt.simpleEncode(rankingProfile.toExternalString())));\r\n          \tparts.put(\"constraint\", new StringBody((constraint == null) ? \"\" : constraint.exportB64()));\r\n          \tif (secondarySearchSuperviser != null)\r\n          \t\tparts.put(\"abstracts\", new StringBody(\"auto\"));\r\n          \tresult = FileUtils.table(HttpConnector.wput(\"http://\" + target.getClusterAddress() + \"/yacy/search.html\", target.getHexHash() + \".yacyh\", parts, 60000));\r\n        } catch (final IOException e) {\r\n            yacyCore.log.logInfo(\"SEARCH failed, Peer: \" + target.hash + \":\" + target.getName() + \" (\" + e.getMessage() + \"), score=\" + target.selectscore);\r\n            //yacyCore.peerActions.peerDeparture(target, \"search request to peer created io exception: \" + e.getMessage());\r\n            return -1;\r\n        }\r\n\r\n        if (result == null || result.isEmpty()) {\r\n            if (yacyCore.log.isFine()) yacyCore.log.logFine(\"SEARCH failed FROM \"\r\n\t\t\t\t\t+ target.hash\r\n\t\t\t\t\t+ \":\"\r\n\t\t\t\t\t+ target.getName()\r\n\t\t\t\t\t+ \" (zero response), score=\"\r\n\t\t\t\t\t+ target.selectscore);\r\n\t\t\treturn -1;\r\n\t\t}\r\n\r\n\t\t// compute all computation times\r\n\t\tfinal long totalrequesttime = System.currentTimeMillis() - timestamp;\r\n\t\t\r\n\t\t// OUTPUT:\r\n\t\t// version : application version of responder\r\n\t\t// uptime : uptime in seconds of responder\r\n\t\t// total : number of total available LURL's for this search\r\n\t\t// count : number of returned LURL's for this search\r\n\t\t// resource<n> : LURL of search\r\n\t\t// fwhop : hops (depth) of forwards that had been performed to construct this result\r\n\t\t// fwsrc : peers that helped to construct this result\r\n\t\t// fwrec : peers that would have helped to construct this result (recommendations)\r\n\t\t// searchtime : time that the peer actually spent to create the result\r\n\t\t// references : references (search hints) that was calculated during search\r\n\t\t\r\n\t\t// now create a plasmaIndex out of this result\r\n\t\t// System.out.println(\"yacyClient: \" + ((urlhashes.length() == 0) ? \"primary\" : \"secondary\")+ \" search result = \" + result.toString()); // debug\r\n\t\t\r\n\t\tint urlcount = 0, joincount = 0;\r\n        try {\r\n            joincount = Integer.parseInt(result.get(\"joincount\")); // the complete number of hits at remote site\r\n            urlcount = Integer.parseInt(result.get(\"count\"));      // the number of hits that are returned in the result list\r\n        } catch (final NumberFormatException e) {\r\n            yacyCore.log.logInfo(\"SEARCH failed FROM \" + target.hash + \":\" + target.getName() + \", wrong output format: \" + e.getMessage());\r\n            //yacyCore.peerActions.peerDeparture(target, \"search request to peer created number format exception\");\r\n            return -1;\r\n        }\r\n\t\t// System.out.println(\"***result count \" + results);\r\n\r\n\t\t// create containers\r\n\t\tfinal int words = wordhashes.length() / Word.commonHashLength;\r\n\t\tassert words > 0 : \"wordhashes = \" + wordhashes;\r\n\t\tfinal ReferenceContainer<WordReference>[] container = new ReferenceContainer[words];\r\n\t\tfor (int i = 0; i < words; i++) {\r\n\t\t\ttry {\r\n                container[i] = ReferenceContainer.emptyContainer(Segment.wordReferenceFactory, wordhashes.substring(i * Word.commonHashLength, (i + 1) * Word.commonHashLength).getBytes(), count);\r\n            } catch (RowSpaceExceededException e) {\r\n                Log.logException(e);\r\n                return -1;\r\n            }\r\n\t\t}\r\n\r\n\t\t// insert results to containers\r\n\t\tURIMetadataRow urlEntry;\r\n\t\tfor (int n = 0; n < urlcount; n++) {\r\n\t\t\t// get one single search result\r\n\t\t\turlEntry = URIMetadataRow.importEntry(result.get(\"resource\" + n));\r\n\t\t\tif (urlEntry == null) continue;\r\n\t\t\tassert (urlEntry.hash().length == 12) : \"urlEntry.hash() = \" + new String(urlEntry.hash());\r\n\t\t\tif (urlEntry.hash().length != 12) continue; // bad url hash\r\n\t\t\tfinal URIMetadataRow.Components metadata = urlEntry.metadata();\r\n\t\t\tif (metadata == null) continue;\r\n\t\t\tif (blacklist.isListed(Blacklist.BLACKLIST_SEARCH, metadata.url())) {\r\n\t\t\t    if (yacyCore.log.isInfo()) yacyCore.log.logInfo(\"remote search: filtered blacklisted url \" + metadata.url() + \" from peer \" + target.getName());\r\n\t\t\t\tcontinue; // block with backlist\r\n\t\t\t}\r\n            \r\n\t\t\tfinal String urlRejectReason = Switchboard.getSwitchboard().crawlStacker.urlInAcceptedDomain(metadata.url());\r\n            if (urlRejectReason != null) {\r\n                if (yacyCore.log.isInfo()) yacyCore.log.logInfo(\"remote search: rejected url '\" + metadata.url() + \"' (\" + urlRejectReason + \") from peer \" + target.getName());\r\n                continue; // reject url outside of our domain\r\n            }\r\n\r\n\t\t\t// save the url entry\r\n            Reference entry = urlEntry.word();\r\n\t\t\tif (entry == null) {\r\n\t\t\t    if (yacyCore.log.isWarning()) yacyCore.log.logWarning(\"remote search: no word attached from peer \" + target.getName() + \", version \" + target.getVersion());\r\n\t\t\t\tcontinue; // no word attached\r\n\t\t\t}\r\n\r\n\t\t\t// the search-result-url transports all the attributes of word indexes\r\n\t\t\tif (!Base64Order.enhancedCoder.equal(entry.metadataHash(), urlEntry.hash())) {\r\n\t\t\t\tyacyCore.log.logInfo(\"remote search: url-hash \" + new String(urlEntry.hash()) + \" does not belong to word-attached-hash \" + new String(entry.metadataHash()) + \"; url = \" + metadata.url() + \" from peer \" + target.getName());\r\n\t\t\t\tcontinue; // spammed\r\n\t\t\t}\r\n\r\n\t\t\t// passed all checks, store url\r\n\t\t\ttry {\r\n\t\t\t    indexSegment.urlMetadata().store(urlEntry);\r\n\t\t\t\tcrawlResults.stack(urlEntry, mySeed.hash.getBytes(), target.hash.getBytes(), EventOrigin.QUERIES);\r\n\t\t\t} catch (final IOException e) {\r\n\t\t\t\tyacyCore.log.logSevere(\"could not store search result\", e);\r\n\t\t\t\tcontinue; // db-error\r\n\t\t\t}\r\n\r\n\t\t\tif (urlEntry.snippet() != null) {\r\n\t\t\t\t// we don't store the snippets along the url entry,\r\n                // because they are search-specific.\r\n\t\t\t\t// instead, they are placed in a snipped-search cache.\r\n\t\t\t\t// System.out.println(\"--- RECEIVED SNIPPET '\" + link.snippet() + \"'\");\r\n\t\t\t    TextSnippet.storeToCache(wordhashes, new String(urlEntry.hash()), urlEntry.snippet());\r\n\t\t\t}\r\n            \r\n\t\t\t// add the url entry to the word indexes\r\n\t\t\tfor (int m = 0; m < words; m++) {\r\n\t\t\t\ttry {\r\n                    container[m].add(entry);\r\n                } catch (RowSpaceExceededException e) {\r\n                    Log.logException(e);\r\n                    break;\r\n                }\r\n\t\t\t}\r\n\t\t}\r\n\r\n        // store remote result to local result container\r\n        synchronized (containerCache) {\r\n            // insert one container into the search result buffer\r\n            containerCache.add(container[0], false, joincount); // one is enough, only the references are used, not the word\r\n        }\r\n        // insert the containers to the index\r\n        for (ReferenceContainer<WordReference> c: container) try {\r\n            indexSegment.termIndex().add(c);\r\n        } catch (Exception e) {\r\n            Log.logException(e);\r\n        }\r\n        yacyCore.log.logInfo(\"remote search: peer \" + target.getName() + \" sent \" + container[0].size() + \"/\" + joincount + \" references for \" + (thisIsASecondarySearch ? \"a secondary search\" : \"joined word queries\"));\r\n\r\n        // integrate remote top-words/topics\r\n        final String references = result.get(\"references\");\r\n        if (references != null && references.length() > 0) {\r\n            yacyCore.log.logInfo(\"remote search: peer \" + target.getName() + \" sent topics: \" + references);\r\n            // add references twice, so they can be counted (must have at least 2 entries)\r\n            String[] rs = references.split(\",\");\r\n            synchronized (containerCache) {\r\n                containerCache.addTopic(rs);\r\n                containerCache.addTopic(rs);\r\n            }\r\n        }\r\n        \r\n\t\t// read index abstract\r\n\t\tif (secondarySearchSuperviser != null) {\r\n\t\t\tfinal Iterator<Map.Entry<String, String>> i = result.entrySet().iterator();\r\n\t\t\tMap.Entry<String, String> entry;\r\n\t\t\tString wordhash;\r\n\t\t\tString whacc = \"\";\r\n\t\t\tByteBuffer ci;\r\n\t\t\tint ac = 0;\r\n\t\t\tabstractparser: while (i.hasNext()) {\r\n\t\t\t\tentry = i.next();\r\n\t\t\t\tif (entry.getKey().startsWith(\"indexabstract.\")) {\r\n\t\t\t\t\twordhash = entry.getKey().substring(14);\r\n\t\t\t\t\tif (wordhash.charAt(0) == '[') break abstractparser;\r\n\t\t\t\t\twhacc += wordhash;\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tci = new ByteBuffer(entry.getValue().getBytes(\"UTF-8\"));\r\n\t\t\t\t\t} catch (UnsupportedEncodingException e) {\r\n\t\t\t\t\t    Log.logException(e);\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//System.out.println(\"DEBUG-ABSTRACTFETCH: for word hash \" + wordhash + \" received \" + ci.toString());\r\n\t\t\t\t\tsecondarySearchSuperviser.addAbstract(wordhash, ReferenceContainer.decompressIndex(ci, target.hash));\r\n\t\t\t\t\tac++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (ac > 0) {\r\n\t\t\t    secondarySearchSuperviser.commitAbstract();\r\n\t\t\t    yacyCore.log.logInfo(\"remote search: peer \" + target.getName() + \" sent \" + ac + \" index abstracts for words \"+ whacc);\r\n\t\t\t}\r\n\t\t}\r\n        \r\n        // generate statistics\r\n\t\tlong searchtime;\r\n\t\ttry {\r\n\t\t\tsearchtime = Integer.parseInt(result.get(\"searchtime\"));\r\n\t\t} catch (final NumberFormatException e) {\r\n\t\t\tsearchtime = totalrequesttime;\r\n\t\t}\r\n\t\tif (yacyCore.log.isFine()) yacyCore.log.logFine(\"SEARCH \"\r\n\t\t\t\t+ urlcount\r\n\t\t\t\t+ \" URLS FROM \"\r\n\t\t\t\t+ target.hash\r\n\t\t\t\t+ \":\"\r\n\t\t\t\t+ target.getName()\r\n\t\t\t\t+ \", score=\"\r\n\t\t\t\t+ target.selectscore\r\n\t\t\t\t+ \", searchtime=\" + searchtime + \", netdelay=\"\r\n\t\t\t\t+ (totalrequesttime - searchtime) + \", references=\"\r\n\t\t\t\t+ result.get(\"references\"));\r\n\t\treturn urlcount;\r\n\t}","commit_id":"e1316d12d0de33707de4ffe74d1520c81b754b08","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public static Map<String, String> getProfile(final yacySeed targetSeed) {\r\n\r\n        // this post a message to the remote message board\r\n        final String salt = crypt.randomSalt();\r\n        final List<Part> post = yacyNetwork.basicRequestPost(Switchboard.getSwitchboard(), targetSeed.hash, salt);\r\n         \r\n        String address = targetSeed.getClusterAddress();\r\n        if (address == null) { address = \"localhost:8080\"; }\r\n        try {\r\n            final byte[] content = HttpConnector.wput(\"http://\" + address + \"/yacy/profile.html\", targetSeed.getHexHash() + \".yacyh\", post, 5000);\r\n            return FileUtils.table(content);\r\n        } catch (final Exception e) {\r\n            yacyCore.log.logSevere(\"yacyClient.getProfile error:\" + e.getMessage());\r\n            return null;\r\n        }\r\n    }","id":15409,"modified_method":"public static Map<String, String> getProfile(final yacySeed targetSeed) {\r\n\r\n        // this post a message to the remote message board\r\n        final String salt = crypt.randomSalt();\r\n//        final List<Part> post = yacyNetwork.basicRequestPost(Switchboard.getSwitchboard(), targetSeed.hash, salt);\r\n         \r\n        String address = targetSeed.getClusterAddress();\r\n        if (address == null) { address = \"localhost:8080\"; }\r\n        try {\r\n//            final byte[] content = HttpConnector.wput(\"http://\" + address + \"/yacy/profile.html\", targetSeed.getHexHash() + \".yacyh\", post, 5000);\r\n            final LinkedHashMap<String,ContentBody> parts = yacyNetwork.basicRequestParts(Switchboard.getSwitchboard(), targetSeed.hash, salt);\r\n            final byte[] content = HttpConnector.wput(\"http://\" + address + \"/yacy/profile.html\", targetSeed.getHexHash() + \".yacyh\", parts, 5000);\r\n            return FileUtils.table(content);\r\n        } catch (final Exception e) {\r\n            yacyCore.log.logSevere(\"yacyClient.getProfile error:\" + e.getMessage());\r\n            return null;\r\n        }\r\n    }","commit_id":"e1316d12d0de33707de4ffe74d1520c81b754b08","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"protected void addCategories(long vocabularyId) throws Exception {\n\t\tfor (String categoryName : _CATEGORY_NAMES) {\n\t\t\tAssetCategory category = AssetCategoryLocalServiceUtil.addCategory(\n\t\t\t\tTestPropsValues.getUserId(), categoryName, vocabularyId,\n\t\t\t\tServiceTestUtil.getServiceContext());\n\n\t\t\t_categoryIds = ArrayUtil.append(\n\t\t\t\t_categoryIds, category.getCategoryId());\n\t\t}\n\t}","id":15410,"modified_method":"protected void addAssetCategories(long vocabularyId) throws Exception {\n\t\tfor (String assetCategoryName : _ASSET_CATEGORY_NAMES) {\n\t\t\tAssetCategory assetCategory =\n\t\t\t\tAssetCategoryLocalServiceUtil.addCategory(\n\t\t\t\t\tTestPropsValues.getUserId(), assetCategoryName,\n\t\t\t\t\tvocabularyId, ServiceTestUtil.getServiceContext());\n\n\t\t\t_assetCategoryIds = ArrayUtil.append(\n\t\t\t\t_assetCategoryIds, assetCategory.getCategoryId());\n\t\t}\n\t}","commit_id":"3796dcdda359f24634446044cc2cb4365826a073","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\t@Transactional\n\tpublic void testGetAssetEntriesFilteredByTags() throws Exception {\n\t\tString[] allTagNames = new String[] {_TAG_NAMES[0], _TAG_NAMES[1]};\n\n\t\t_expectedAssetEntries = addAssetEntries(\n\t\t\t_NO_CATEGORY_IDS, allTagNames, 2, true);\n\n\t\tList<AssetEntry> assetEntries = AssetPublisherUtil.getAssetEntries(\n\t\t\tnew MockPortletRequest(), new MockPortletPreferences(),\n\t\t\t_permissionChecker, new long[] {TestPropsValues.getGroupId()},\n\t\t\t_assetEntryXmls, false, false);\n\n\t\tAssert.assertEquals(7, assetEntries.size());\n\n\t\tList<AssetEntry> filteredAssetEntries =\n\t\t\tAssetPublisherUtil.getAssetEntries(\n\t\t\t\tnew MockPortletRequest(), new MockPortletPreferences(),\n\t\t\t\t_permissionChecker, new long[] {TestPropsValues.getGroupId()},\n\t\t\t\t_NO_CATEGORY_IDS, _assetEntryXmls, allTagNames, false, false);\n\n\t\tAssert.assertEquals(_expectedAssetEntries, filteredAssetEntries);\n\t}","id":15411,"modified_method":"@Test\n\t@Transactional\n\tpublic void testGetAssetEntriesFilteredByTags() throws Exception {\n\t\tString[] allAssetTagNames = {_ASSET_TAG_NAMES[0], _ASSET_TAG_NAMES[1]};\n\n\t\tList<AssetEntry> expectedAssetEntries = addAssetEntries(\n\t\t\t_NO_ASSET_CATEGORY_IDS, allAssetTagNames, 2, true);\n\n\t\tList<AssetEntry> assetEntries = AssetPublisherUtil.getAssetEntries(\n\t\t\tnew MockPortletRequest(), new MockPortletPreferences(),\n\t\t\t_permissionChecker, new long[] {TestPropsValues.getGroupId()},\n\t\t\t_assetEntryXmls, false, false);\n\n\t\tAssert.assertEquals(\n\t\t\t_initialAssetEntries.size() + expectedAssetEntries.size(),\n\t\t\tassetEntries.size());\n\n\t\tList<AssetEntry> filteredAssetEntries =\n\t\t\tAssetPublisherUtil.getAssetEntries(\n\t\t\t\tnew MockPortletRequest(), new MockPortletPreferences(),\n\t\t\t\t_permissionChecker, new long[] {TestPropsValues.getGroupId()},\n\t\t\t\t_NO_ASSET_CATEGORY_IDS, _assetEntryXmls, allAssetTagNames,\n\t\t\t\tfalse, false);\n\n\t\tAssert.assertEquals(expectedAssetEntries, filteredAssetEntries);\n\t}","commit_id":"3796dcdda359f24634446044cc2cb4365826a073","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void addVocabulary() throws Exception {\n\t\tServiceContext serviceContext = ServiceTestUtil.getServiceContext(\n\t\t\tTestPropsValues.getGroupId());\n\n\t\tserviceContext.setAddGroupPermissions(false);\n\t\tserviceContext.setAddGuestPermissions(false);\n\n\t\tAssetVocabulary vocabulary =\n\t\t\tAssetVocabularyLocalServiceUtil.addVocabulary(\n\t\t\t\tTestPropsValues.getUserId(), ServiceTestUtil.randomString(),\n\t\t\t\tServiceTestUtil.getServiceContext(\n\t\t\t\t\tTestPropsValues.getGroupId()));\n\n\t\taddCategories(vocabulary.getVocabularyId());\n\t}","id":15412,"modified_method":"protected void addVocabulary() throws Exception {\n\t\tServiceContext serviceContext = ServiceTestUtil.getServiceContext(\n\t\t\tTestPropsValues.getGroupId());\n\n\t\tserviceContext.setAddGroupPermissions(false);\n\t\tserviceContext.setAddGuestPermissions(false);\n\n\t\tAssetVocabulary vocabulary =\n\t\t\tAssetVocabularyLocalServiceUtil.addVocabulary(\n\t\t\t\tTestPropsValues.getUserId(), ServiceTestUtil.randomString(),\n\t\t\t\tServiceTestUtil.getServiceContext(\n\t\t\t\t\tTestPropsValues.getGroupId()));\n\n\t\taddAssetCategories(vocabulary.getVocabularyId());\n\t}","commit_id":"3796dcdda359f24634446044cc2cb4365826a073","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\t@Transactional\n\tpublic void testGetAssetEntriesFilteredByCategoriesAndTags()\n\t\tthrows Exception {\n\n\t\taddVocabulary();\n\n\t\tlong[] allCategoyIds = new long[] {\n\t\t\t_categoryIds[0], _categoryIds[1], _categoryIds[2], _categoryIds[3]};\n\n\t\tString[] allTagNames = new String[] {_TAG_NAMES[0], _TAG_NAMES[1]};\n\n\t\t_expectedAssetEntries = addAssetEntries(\n\t\t\tallCategoyIds, allTagNames, 2, true);\n\n\t\tList<AssetEntry> assetEntries = AssetPublisherUtil.getAssetEntries(\n\t\t\tnew MockPortletRequest(), new MockPortletPreferences(),\n\t\t\t_permissionChecker, new long[] {TestPropsValues.getGroupId()},\n\t\t\t_assetEntryXmls, false, false);\n\n\t\tAssert.assertEquals(7, assetEntries.size());\n\n\t\tList<AssetEntry> filteredAssetEntries =\n\t\t\tAssetPublisherUtil.getAssetEntries(\n\t\t\t\tnew MockPortletRequest(), new MockPortletPreferences(),\n\t\t\t\t_permissionChecker, new long[] {TestPropsValues.getGroupId()},\n\t\t\t\tallCategoyIds, _assetEntryXmls, allTagNames, false, false);\n\n\t\tAssert.assertEquals(_expectedAssetEntries, filteredAssetEntries);\n\t}","id":15413,"modified_method":"@Test\n\t@Transactional\n\tpublic void testGetAssetEntriesFilteredByCategoriesAndTags()\n\t\tthrows Exception {\n\n\t\taddVocabulary();\n\n\t\tlong[] allCategoyIds =\n\t\t\t{_assetCategoryIds[0], _assetCategoryIds[1], _assetCategoryIds[2],\n\t\t\t\t_assetCategoryIds[3]};\n\n\t\tString[] allAssetTagNames = {_ASSET_TAG_NAMES[0], _ASSET_TAG_NAMES[1]};\n\n\t\tList<AssetEntry> expectedAssetEntries = addAssetEntries(\n\t\t\tallCategoyIds, allAssetTagNames, 2, true);\n\n\t\tList<AssetEntry> assetEntries = AssetPublisherUtil.getAssetEntries(\n\t\t\tnew MockPortletRequest(), new MockPortletPreferences(),\n\t\t\t_permissionChecker, new long[] {TestPropsValues.getGroupId()},\n\t\t\t_assetEntryXmls, false, false);\n\n\t\tAssert.assertEquals(\n\t\t\t_initialAssetEntries.size() + expectedAssetEntries.size(),\n\t\t\tassetEntries.size());\n\n\t\tList<AssetEntry> filteredAssetEntries =\n\t\t\tAssetPublisherUtil.getAssetEntries(\n\t\t\t\tnew MockPortletRequest(), new MockPortletPreferences(),\n\t\t\t\t_permissionChecker, new long[] {TestPropsValues.getGroupId()},\n\t\t\t\tallCategoyIds, _assetEntryXmls, allAssetTagNames, false, false);\n\n\t\tAssert.assertEquals(expectedAssetEntries, filteredAssetEntries);\n\t}","commit_id":"3796dcdda359f24634446044cc2cb4365826a073","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\t@Transactional\n\tpublic void testGetAssetEntriesFilteredByCategories() throws Exception {\n\t\taddVocabulary();\n\n\t\tlong[] allCategoryIds =\n\t\t\tnew long[] {_categoryIds[0], _categoryIds[1], _categoryIds[2]};\n\n\t\t_expectedAssetEntries = addAssetEntries(\n\t\t\tallCategoryIds, _NO_TAG_NAMES, 2, true);\n\n\t\tList<AssetEntry> assetEntries = AssetPublisherUtil.getAssetEntries(\n\t\t\tnew MockPortletRequest(), new MockPortletPreferences(),\n\t\t\t_permissionChecker, new long[] {TestPropsValues.getGroupId()},\n\t\t\t_assetEntryXmls, false, false);\n\n\t\tAssert.assertEquals(7, assetEntries.size());\n\n\t\tList<AssetEntry> filteredAsssetEntries =\n\t\t\tAssetPublisherUtil.getAssetEntries(\n\t\t\t\tnew MockPortletRequest(), new MockPortletPreferences(),\n\t\t\t\t_permissionChecker, new long[] {TestPropsValues.getGroupId()},\n\t\t\t\tallCategoryIds, _assetEntryXmls, _NO_TAG_NAMES, false, false);\n\n\t\tAssert.assertEquals(_expectedAssetEntries, filteredAsssetEntries);\n\t}","id":15414,"modified_method":"@Test\n\t@Transactional\n\tpublic void testGetAssetEntriesFilteredByCategories() throws Exception {\n\t\taddVocabulary();\n\n\t\tlong[] allAssetCategoryIds =\n\t\t\t{_assetCategoryIds[0], _assetCategoryIds[1], _assetCategoryIds[2]};\n\n\t\tList<AssetEntry> expectedAssetEntries = addAssetEntries(\n\t\t\tallAssetCategoryIds, _NO_ASSET_TAG_NAMES, 2, true);\n\n\t\tList<AssetEntry> assetEntries = AssetPublisherUtil.getAssetEntries(\n\t\t\tnew MockPortletRequest(), new MockPortletPreferences(),\n\t\t\t_permissionChecker, new long[] {TestPropsValues.getGroupId()},\n\t\t\t_assetEntryXmls, false, false);\n\n\t\tAssert.assertEquals(\n\t\t\t_initialAssetEntries.size() + expectedAssetEntries.size(),\n\t\t\tassetEntries.size());\n\n\t\tList<AssetEntry> filteredAsssetEntries =\n\t\t\tAssetPublisherUtil.getAssetEntries(\n\t\t\t\tnew MockPortletRequest(), new MockPortletPreferences(),\n\t\t\t\t_permissionChecker, new long[] {TestPropsValues.getGroupId()},\n\t\t\t\tallAssetCategoryIds, _assetEntryXmls, _NO_ASSET_TAG_NAMES,\n\t\t\t\tfalse, false);\n\n\t\tAssert.assertEquals(expectedAssetEntries, filteredAsssetEntries);\n\t}","commit_id":"3796dcdda359f24634446044cc2cb4365826a073","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected List<AssetEntry> addAssetEntries(\n\t\t\tlong[] categoryIds, String[] tagNames, int number,\n\t\t\tboolean manualMode)\n\t\tthrows Exception {\n\n\t\tList<AssetEntry> assetEntries = new ArrayList<AssetEntry>();\n\n\t\tfor (int i = 0; i < number; i++) {\n\t\t\tJournalArticle article = JournalTestUtil.addArticle(\n\t\t\t\tTestPropsValues.getGroupId(), ServiceTestUtil.randomString(),\n\t\t\t\tServiceTestUtil.randomString(100));\n\n\t\t\tJournalArticleLocalServiceUtil.updateAsset(\n\t\t\t\tTestPropsValues.getUserId(), article, categoryIds, tagNames,\n\t\t\t\tnull);\n\n\t\t\tAssetEntry assetEntry = AssetEntryLocalServiceUtil.getEntry(\n\t\t\t\tJournalArticle.class.getName(), article.getResourcePrimKey());\n\n\t\t\tassetEntries.add(assetEntry);\n\n\t\t\tif (manualMode) {\n\t\t\t\t_formatXml(assetEntry);\n\t\t\t}\n\t\t}\n\n\t\treturn assetEntries;\n\t}","id":15415,"modified_method":"protected List<AssetEntry> addAssetEntries(\n\t\t\tlong[] assetCategoryIds, String[] assetTagNames, int number,\n\t\t\tboolean manualMode)\n\t\tthrows Exception {\n\n\t\tList<AssetEntry> assetEntries = new ArrayList<AssetEntry>();\n\n\t\tfor (int i = 0; i < number; i++) {\n\t\t\tJournalArticle article = JournalTestUtil.addArticle(\n\t\t\t\tTestPropsValues.getGroupId(), ServiceTestUtil.randomString(),\n\t\t\t\tServiceTestUtil.randomString(100));\n\n\t\t\tJournalArticleLocalServiceUtil.updateAsset(\n\t\t\t\tTestPropsValues.getUserId(), article, assetCategoryIds,\n\t\t\t\tassetTagNames, null);\n\n\t\t\tAssetEntry assetEntry = AssetEntryLocalServiceUtil.getEntry(\n\t\t\t\tJournalArticle.class.getName(), article.getResourcePrimKey());\n\n\t\t\tassetEntries.add(assetEntry);\n\n\t\t\tif (manualMode) {\n\t\t\t\t_formatXml(assetEntry);\n\t\t\t}\n\t\t}\n\n\t\treturn assetEntries;\n\t}","commit_id":"3796dcdda359f24634446044cc2cb4365826a073","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Before\n\tpublic void setUp() throws Exception {\n\t\t_initialAssetEntries = addAssetEntries(\n\t\t\t_NO_CATEGORY_IDS, _NO_TAG_NAMES, 5, true);\n\n\t\t_permissionChecker = PermissionCheckerFactoryUtil.create(\n\t\t\tTestPropsValues.getUser());\n\t}","id":15416,"modified_method":"@Before\n\tpublic void setUp() throws Exception {\n\t\t_initialAssetEntries = addAssetEntries(\n\t\t\t_NO_ASSET_CATEGORY_IDS, _NO_ASSET_TAG_NAMES, 5, true);\n\n\t\t_permissionChecker = PermissionCheckerFactoryUtil.create(\n\t\t\tTestPropsValues.getUser());\n\t}","commit_id":"3796dcdda359f24634446044cc2cb4365826a073","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n   * Generally, this method shall not be used directly. Consider using {@link jetbrains.mps.smodel.legacy.ConceptMetaInfoConverter#convertAggregation(String)}} instead\n   */\n  @Deprecated\n  @ToRemove(version = 3.4)\n  public static SContainmentLink getContainmentLink(String conceptName, String linkName) {\n    for (SContainmentLink l : getAnyConcept(conceptName).getContainmentLinks()) {\n      if (l.getName().equals(linkName)) return l;\n    }\n    return new InvalidContainmentLink(conceptName, linkName);\n  }","id":15417,"modified_method":"/**\n   * Generally, this method shall not be used directly. Consider using {@link jetbrains.mps.smodel.legacy.ConceptMetaInfoConverter#convertAggregation(String)}} instead\n   */\n  @Deprecated\n  @ToRemove(version = 3.4)\n  public static SContainmentLink getContainmentLink(String conceptName, String linkName) {\n    SAbstractConcept c = getAnyConcept(conceptName);\n    if (!c.isValid()) return new InvalidContainmentLink(conceptName, linkName);\n    return ((ConceptMetaInfoConverter) c).convertAggregation(linkName);\n  }","commit_id":"2147f8b7ed8efcb935537ce68fc10225bee73c8f","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static SAbstractConcept getAnyConcept(String conceptName) {\n    SAbstractConcept cached = ourCache.get(conceptName);\n    if (cached!=null) return cached;\n\n    SLanguage l = getLanguage(NameUtil.namespaceFromConceptFQName(conceptName));\n    for (SAbstractConcept c : l.getConcepts()) {\n      if (c.getQualifiedName().equals(conceptName)) {\n        ourCache.put(conceptName, c);\n        return c;\n      }\n    }\n    return new SConceptAdapterById(MetaIdFactory.INVALID_CONCEPT_ID, conceptName);\n  }","id":15418,"modified_method":"private static SAbstractConcept getAnyConcept(String conceptName) {\n    SAbstractConcept cached = ourCache.get(conceptName);\n    if (cached!=null) return cached;\n\n    SLanguage l = getLanguage(NameUtil.namespaceFromConceptFQName(conceptName));\n    for (SAbstractConcept c : l.getConcepts()) {\n      if (c.getQualifiedName().equals(conceptName)) {\n        ourCache.put(conceptName, c);\n        return c;\n      }\n    }\n    return new InvalidConcept(conceptName);\n  }","commit_id":"2147f8b7ed8efcb935537ce68fc10225bee73c8f","url":"https://github.com/JetBrains/MPS"},{"original_method":"/**\n   * Generally, this method shall not be used directly. Consider using {@link jetbrains.mps.smodel.legacy.ConceptMetaInfoConverter#convertAssociation(String)} instead\n   */\n  @Deprecated\n  @ToRemove(version = 3.4)\n  public static SReferenceLink getReferenceLink(String conceptName, String refName) {\n    for (SReferenceLink r : getAnyConcept(conceptName).getReferenceLinks()) {\n      if (r.getName().equals(refName)) return r;\n    }\n    return new InvalidReferenceLink(conceptName, refName);\n  }","id":15419,"modified_method":"/**\n   * Generally, this method shall not be used directly. Consider using {@link jetbrains.mps.smodel.legacy.ConceptMetaInfoConverter#convertAssociation(String)} instead\n   */\n  @Deprecated\n  @ToRemove(version = 3.4)\n  public static SReferenceLink getReferenceLink(String conceptName, String refName) {\n    SAbstractConcept c = getAnyConcept(conceptName);\n    if (!c.isValid()) return new InvalidReferenceLink(conceptName, refName);\n    return ((ConceptMetaInfoConverter) c).convertAssociation(refName);\n  }","commit_id":"2147f8b7ed8efcb935537ce68fc10225bee73c8f","url":"https://github.com/JetBrains/MPS"},{"original_method":"/**\n   * Generally, this method shall not be used directly. Consider using {@link jetbrains.mps.smodel.legacy.ConceptMetaInfoConverter#convertProperty(String)} instead\n   */\n  @Deprecated\n  @ToRemove(version = 3.4)\n  public static SProperty getProperty(String conceptName, String propName) {\n    for (SProperty p : getAnyConcept(conceptName).getProperties()) {\n      if (p.getName().equals(propName)) return p;\n    }\n    return new InvalidProperty(conceptName, propName);\n  }","id":15420,"modified_method":"/**\n   * Generally, this method shall not be used directly. Consider using {@link jetbrains.mps.smodel.legacy.ConceptMetaInfoConverter#convertProperty(String)} instead\n   */\n  @Deprecated\n  @ToRemove(version = 3.4)\n  public static SProperty getProperty(String conceptName, String propName) {\n    SAbstractConcept c = getAnyConcept(conceptName);\n    if (!c.isValid()) return new InvalidProperty(conceptName, propName);\n    return ((ConceptMetaInfoConverter) c).convertProperty(propName);\n  }","commit_id":"2147f8b7ed8efcb935537ce68fc10225bee73c8f","url":"https://github.com/JetBrains/MPS"},{"original_method":"@NotNull\n  @Override\n  public SProperty convertProperty(String propertyName) {\n    return MetaAdapterFactoryByName.getProperty(getQualifiedName(), propertyName);\n  }","id":15421,"modified_method":"@NotNull\n  @Override\n  public SProperty convertProperty(String propertyName) {\n    for (SProperty p : getProperties()) {\n      if (p.getName().equals(propertyName)) return p;\n    }\n    return new InvalidProperty(getQualifiedName(),propertyName);\n  }","commit_id":"2147f8b7ed8efcb935537ce68fc10225bee73c8f","url":"https://github.com/JetBrains/MPS"},{"original_method":"@NotNull\n  @Override\n  public SContainmentLink convertAggregation(String role) {\n    return MetaAdapterFactoryByName.getContainmentLink(getQualifiedName(), role);\n  }","id":15422,"modified_method":"@NotNull\n  @Override\n  public SContainmentLink convertAggregation(String role) {\n    for (SContainmentLink l : getContainmentLinks()) {\n      if (l.getName().equals(role)) return l;\n    }\n    return new InvalidContainmentLink(getQualifiedName(), role);\n  }","commit_id":"2147f8b7ed8efcb935537ce68fc10225bee73c8f","url":"https://github.com/JetBrains/MPS"},{"original_method":"@NotNull\n  @Override\n  public SReferenceLink convertAssociation(String role) {\n    return MetaAdapterFactoryByName.getReferenceLink(getQualifiedName(), role);\n  }","id":15423,"modified_method":"@NotNull\n  @Override\n  public SReferenceLink convertAssociation(String role) {\n    for (SReferenceLink r : getReferenceLinks()) {\n      if (r.getName().equals(role)) return r;\n    }\n    return new InvalidReferenceLink(getQualifiedName(), role);\n  }","commit_id":"2147f8b7ed8efcb935537ce68fc10225bee73c8f","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  @Deprecated\n  public SProperty getProperty(String name) {\n    ConceptDescriptor cd = getConceptDescriptor();\n    if (cd == null) return null;\n\n    PropertyDescriptor d = cd.getPropertyDescriptor(name);\n    if (d == null) {\n      return MetaAdapterFactoryByName.getProperty(myFqName, name);\n    }\n    SPropertyId pid = d.getId();\n    return MetaAdapterFactory.getProperty(pid, name);\n  }","id":15424,"modified_method":"@Override\n  @Deprecated\n  public SProperty getProperty(String name) {\n    ConceptDescriptor cd = getConceptDescriptor();\n    if (cd == null) return null;\n\n    PropertyDescriptor d = cd.getPropertyDescriptor(name);\n    if (d == null) return new InvalidProperty(myFqName, name);\n\n    SPropertyId pid = d.getId();\n    return MetaAdapterFactory.getProperty(pid, name);\n  }","commit_id":"2147f8b7ed8efcb935537ce68fc10225bee73c8f","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static void configureBlockSize(HTable table, Configuration conf) throws IOException {\n    StringBuilder blockSizeConfigValue = new StringBuilder();\n    HTableDescriptor tableDescriptor = table.getTableDescriptor();\n    if(tableDescriptor == null){\n      // could happen with mock table instance\n      return;\n    }\n    Collection<HColumnDescriptor> families = tableDescriptor.getFamilies();\n    int i = 0;\n    for (HColumnDescriptor familyDescriptor : families) {\n      if (i++ > 0) {\n        blockSizeConfigValue.append('&');\n      }\n      blockSizeConfigValue.append(URLEncoder.encode(\n          familyDescriptor.getNameAsString(), \"UTF-8\"));\n      blockSizeConfigValue.append('=');\n      blockSizeConfigValue.append(URLEncoder.encode(\n          String.valueOf(familyDescriptor.getBlocksize()), \"UTF-8\"));\n    }\n    // Get rid of the last ampersand\n    conf.set(BLOCK_SIZE_CONF_KEY, blockSizeConfigValue.toString());\n  }","id":15425,"modified_method":"/**\n   * Serialize column family to block size map to configuration.\n   * Invoked while configuring the MR job for incremental load.\n   *\n   * @param table to read the properties from\n   * @param conf to persist serialized values into\n   * @throws IOException\n   *           on failure to read column family descriptors\n   */\n  @VisibleForTesting\n  static void configureBlockSize(HTable table, Configuration conf) throws IOException {\n    StringBuilder blockSizeConfigValue = new StringBuilder();\n    HTableDescriptor tableDescriptor = table.getTableDescriptor();\n    if (tableDescriptor == null) {\n      // could happen with mock table instance\n      return;\n    }\n    Collection<HColumnDescriptor> families = tableDescriptor.getFamilies();\n    int i = 0;\n    for (HColumnDescriptor familyDescriptor : families) {\n      if (i++ > 0) {\n        blockSizeConfigValue.append('&');\n      }\n      blockSizeConfigValue.append(URLEncoder.encode(\n          familyDescriptor.getNameAsString(), \"UTF-8\"));\n      blockSizeConfigValue.append('=');\n      blockSizeConfigValue.append(URLEncoder.encode(\n          String.valueOf(familyDescriptor.getBlocksize()), \"UTF-8\"));\n    }\n    // Get rid of the last ampersand\n    conf.set(BLOCK_SIZE_FAMILIES_CONF_KEY, blockSizeConfigValue.toString());\n  }","commit_id":"e93012ca836869f6af8d16a15d74d879a675bf7b","url":"https://github.com/apache/hbase"},{"original_method":"/**\n   * Run inside the task to deserialize column family to compression algorithm\n   * map from the\n   * configuration.\n   *\n   * Package-private for unit tests only.\n   *\n   * @return a map from column family to the name of the configured compression\n   *         algorithm\n   */\n  static Map<byte[], String> createFamilyCompressionMap(Configuration conf) {\n    return createFamilyConfValueMap(conf, COMPRESSION_CONF_KEY);\n  }","id":15426,"modified_method":"/**\n   * Runs inside the task to deserialize column family to compression algorithm\n   * map from the configuration.\n   *\n   * @param conf to read the serialized values from\n   * @return a map from column family to the configured compression algorithm\n   */\n  @VisibleForTesting\n  static Map<byte[], Algorithm> createFamilyCompressionMap(Configuration\n      conf) {\n    Map<byte[], String> stringMap = createFamilyConfValueMap(conf,\n        COMPRESSION_FAMILIES_CONF_KEY);\n    Map<byte[], Algorithm> compressionMap = new TreeMap<byte[],\n        Algorithm>(Bytes.BYTES_COMPARATOR);\n    for (Map.Entry<byte[], String> e : stringMap.entrySet()) {\n      Algorithm algorithm = AbstractHFileWriter.compressionByName\n          (e.getValue());\n      compressionMap.put(e.getKey(), algorithm);\n    }\n    return compressionMap;\n  }","commit_id":"e93012ca836869f6af8d16a15d74d879a675bf7b","url":"https://github.com/apache/hbase"},{"original_method":"public RecordWriter<ImmutableBytesWritable, KeyValue> getRecordWriter(final TaskAttemptContext context)\n  throws IOException, InterruptedException {\n    // Get the path of the temporary output file\n    final Path outputPath = FileOutputFormat.getOutputPath(context);\n    final Path outputdir = new FileOutputCommitter(outputPath, context).getWorkPath();\n    final Configuration conf = context.getConfiguration();\n    final FileSystem fs = outputdir.getFileSystem(conf);\n    // These configs. are from hbase-*.xml\n    final long maxsize = conf.getLong(HConstants.HREGION_MAX_FILESIZE,\n        HConstants.DEFAULT_MAX_FILE_SIZE);\n    // Invented config.  Add to hbase-*.xml if other than default compression.\n    final String defaultCompression = conf.get(\"hfile.compression\",\n        Compression.Algorithm.NONE.getName());\n    final boolean compactionExclude = conf.getBoolean(\n        \"hbase.mapreduce.hfileoutputformat.compaction.exclude\", false);\n\n    // create a map from column family to the compression algorithm\n    final Map<byte[], String> compressionMap = createFamilyCompressionMap(conf);\n    final Map<byte[], String> bloomTypeMap = createFamilyBloomMap(conf);\n    final Map<byte[], String> blockSizeMap = createFamilyBlockSizeMap(conf);\n\n    final String dataBlockEncodingStr = conf.get(DATABLOCK_ENCODING_CONF_KEY);\n\n    return new RecordWriter<ImmutableBytesWritable, KeyValue>() {\n      // Map of families to writers and how much has been output on the writer.\n      private final Map<byte [], WriterLength> writers =\n        new TreeMap<byte [], WriterLength>(Bytes.BYTES_COMPARATOR);\n      private byte [] previousRow = HConstants.EMPTY_BYTE_ARRAY;\n      private final byte [] now = Bytes.toBytes(System.currentTimeMillis());\n      private boolean rollRequested = false;\n\n      public void write(ImmutableBytesWritable row, KeyValue kv)\n      throws IOException {\n        // null input == user explicitly wants to flush\n        if (row == null && kv == null) {\n          rollWriters();\n          return;\n        }\n\n        byte [] rowKey = kv.getRow();\n        long length = kv.getLength();\n        byte [] family = kv.getFamily();\n        WriterLength wl = this.writers.get(family);\n\n        // If this is a new column family, verify that the directory exists\n        if (wl == null) {\n          fs.mkdirs(new Path(outputdir, Bytes.toString(family)));\n        }\n\n        // If any of the HFiles for the column families has reached\n        // maxsize, we need to roll all the writers\n        if (wl != null && wl.written + length >= maxsize) {\n          this.rollRequested = true;\n        }\n\n        // This can only happen once a row is finished though\n        if (rollRequested && Bytes.compareTo(this.previousRow, rowKey) != 0) {\n          rollWriters();\n        }\n\n        // create a new HLog writer, if necessary\n        if (wl == null || wl.writer == null) {\n          wl = getNewWriter(family, conf);\n        }\n\n        // we now have the proper HLog writer. full steam ahead\n        kv.updateLatestStamp(this.now);\n        wl.writer.append(kv);\n        wl.written += length;\n\n        // Copy the row so we know when a row transition.\n        this.previousRow = rowKey;\n      }\n\n      private void rollWriters() throws IOException {\n        for (WriterLength wl : this.writers.values()) {\n          if (wl.writer != null) {\n            LOG.info(\"Writer=\" + wl.writer.getPath() +\n                ((wl.written == 0)? \"\": \", wrote=\" + wl.written));\n            close(wl.writer);\n          }\n          wl.writer = null;\n          wl.written = 0;\n        }\n        this.rollRequested = false;\n      }\n\n      /* Create a new StoreFile.Writer.\n       * @param family\n       * @return A WriterLength, containing a new StoreFile.Writer.\n       * @throws IOException\n       */\n      private WriterLength getNewWriter(byte[] family, Configuration conf)\n          throws IOException {\n        WriterLength wl = new WriterLength();\n        Path familydir = new Path(outputdir, Bytes.toString(family));\n        String compression = compressionMap.get(family);\n        compression = compression == null ? defaultCompression : compression;\n        String bloomTypeStr = bloomTypeMap.get(family);\n        BloomType bloomType = BloomType.NONE;\n        if (bloomTypeStr != null) {\n          bloomType = BloomType.valueOf(bloomTypeStr);\n        }\n        String blockSizeString = blockSizeMap.get(family);\n        int blockSize = blockSizeString == null ? HConstants.DEFAULT_BLOCKSIZE\n            : Integer.parseInt(blockSizeString);\n        Configuration tempConf = new Configuration(conf);\n        tempConf.setFloat(HConstants.HFILE_BLOCK_CACHE_SIZE_KEY, 0.0f);\n        HFileContextBuilder contextBuilder = new HFileContextBuilder()\n                                    .withCompression(AbstractHFileWriter.compressionByName(compression))\n                                    .withChecksumType(HStore.getChecksumType(conf))\n                                    .withBytesPerCheckSum(HStore.getBytesPerChecksum(conf))\n                                    .withBlockSize(blockSize);\n        if(dataBlockEncodingStr !=  null) {\n          contextBuilder.withDataBlockEncoding(DataBlockEncoding.valueOf(dataBlockEncodingStr));\n        }\n        HFileContext hFileContext = contextBuilder.build();\n                                    \n        wl.writer = new StoreFile.WriterBuilder(conf, new CacheConfig(tempConf), fs)\n            .withOutputDir(familydir).withBloomType(bloomType).withComparator(KeyValue.COMPARATOR)\n            .withFileContext(hFileContext)\n            .build();\n\n        this.writers.put(family, wl);\n        return wl;\n      }\n\n      private void close(final StoreFile.Writer w) throws IOException {\n        if (w != null) {\n          w.appendFileInfo(StoreFile.BULKLOAD_TIME_KEY,\n              Bytes.toBytes(System.currentTimeMillis()));\n          w.appendFileInfo(StoreFile.BULKLOAD_TASK_KEY,\n              Bytes.toBytes(context.getTaskAttemptID().toString()));\n          w.appendFileInfo(StoreFile.MAJOR_COMPACTION_KEY,\n              Bytes.toBytes(true));\n          w.appendFileInfo(StoreFile.EXCLUDE_FROM_MINOR_COMPACTION_KEY,\n              Bytes.toBytes(compactionExclude));\n          w.appendTrackedTimestampsToMetadata();\n          w.close();\n        }\n      }\n\n      public void close(TaskAttemptContext c)\n      throws IOException, InterruptedException {\n        for (WriterLength wl: this.writers.values()) {\n          close(wl.writer);\n        }\n      }\n    };\n  }","id":15427,"modified_method":"public RecordWriter<ImmutableBytesWritable, KeyValue> getRecordWriter(final TaskAttemptContext context)\n  throws IOException, InterruptedException {\n    // Get the path of the temporary output file\n    final Path outputPath = FileOutputFormat.getOutputPath(context);\n    final Path outputdir = new FileOutputCommitter(outputPath, context).getWorkPath();\n    final Configuration conf = context.getConfiguration();\n    final FileSystem fs = outputdir.getFileSystem(conf);\n    // These configs. are from hbase-*.xml\n    final long maxsize = conf.getLong(HConstants.HREGION_MAX_FILESIZE,\n        HConstants.DEFAULT_MAX_FILE_SIZE);\n    // Invented config.  Add to hbase-*.xml if other than default compression.\n    final String defaultCompressionStr = conf.get(\"hfile.compression\",\n        Compression.Algorithm.NONE.getName());\n    final Algorithm defaultCompression = AbstractHFileWriter\n        .compressionByName(defaultCompressionStr);\n    final boolean compactionExclude = conf.getBoolean(\n        \"hbase.mapreduce.hfileoutputformat.compaction.exclude\", false);\n\n    // create a map from column family to the compression algorithm\n    final Map<byte[], Algorithm> compressionMap = createFamilyCompressionMap(conf);\n    final Map<byte[], BloomType> bloomTypeMap = createFamilyBloomTypeMap(conf);\n    final Map<byte[], Integer> blockSizeMap = createFamilyBlockSizeMap(conf);\n\n    String dataBlockEncodingStr = conf.get(DATABLOCK_ENCODING_OVERRIDE_CONF_KEY);\n    final Map<byte[], DataBlockEncoding> datablockEncodingMap\n        = createFamilyDataBlockEncodingMap(conf);\n    final DataBlockEncoding overriddenEncoding;\n    if (dataBlockEncodingStr != null) {\n      overriddenEncoding = DataBlockEncoding.valueOf(dataBlockEncodingStr);\n    } else {\n      overriddenEncoding = null;\n    }\n\n    return new RecordWriter<ImmutableBytesWritable, KeyValue>() {\n      // Map of families to writers and how much has been output on the writer.\n      private final Map<byte [], WriterLength> writers =\n        new TreeMap<byte [], WriterLength>(Bytes.BYTES_COMPARATOR);\n      private byte [] previousRow = HConstants.EMPTY_BYTE_ARRAY;\n      private final byte [] now = Bytes.toBytes(System.currentTimeMillis());\n      private boolean rollRequested = false;\n\n      public void write(ImmutableBytesWritable row, KeyValue kv)\n      throws IOException {\n        // null input == user explicitly wants to flush\n        if (row == null && kv == null) {\n          rollWriters();\n          return;\n        }\n\n        byte [] rowKey = kv.getRow();\n        long length = kv.getLength();\n        byte [] family = kv.getFamily();\n        WriterLength wl = this.writers.get(family);\n\n        // If this is a new column family, verify that the directory exists\n        if (wl == null) {\n          fs.mkdirs(new Path(outputdir, Bytes.toString(family)));\n        }\n\n        // If any of the HFiles for the column families has reached\n        // maxsize, we need to roll all the writers\n        if (wl != null && wl.written + length >= maxsize) {\n          this.rollRequested = true;\n        }\n\n        // This can only happen once a row is finished though\n        if (rollRequested && Bytes.compareTo(this.previousRow, rowKey) != 0) {\n          rollWriters();\n        }\n\n        // create a new HLog writer, if necessary\n        if (wl == null || wl.writer == null) {\n          wl = getNewWriter(family, conf);\n        }\n\n        // we now have the proper HLog writer. full steam ahead\n        kv.updateLatestStamp(this.now);\n        wl.writer.append(kv);\n        wl.written += length;\n\n        // Copy the row so we know when a row transition.\n        this.previousRow = rowKey;\n      }\n\n      private void rollWriters() throws IOException {\n        for (WriterLength wl : this.writers.values()) {\n          if (wl.writer != null) {\n            LOG.info(\"Writer=\" + wl.writer.getPath() +\n                ((wl.written == 0)? \"\": \", wrote=\" + wl.written));\n            close(wl.writer);\n          }\n          wl.writer = null;\n          wl.written = 0;\n        }\n        this.rollRequested = false;\n      }\n\n      /* Create a new StoreFile.Writer.\n       * @param family\n       * @return A WriterLength, containing a new StoreFile.Writer.\n       * @throws IOException\n       */\n      private WriterLength getNewWriter(byte[] family, Configuration conf)\n          throws IOException {\n        WriterLength wl = new WriterLength();\n        Path familydir = new Path(outputdir, Bytes.toString(family));\n        Algorithm compression = compressionMap.get(family);\n        compression = compression == null ? defaultCompression : compression;\n        BloomType bloomType = bloomTypeMap.get(family);\n        bloomType = bloomType == null ? BloomType.NONE : bloomType;\n        Integer blockSize = blockSizeMap.get(family);\n        blockSize = blockSize == null ? HConstants.DEFAULT_BLOCKSIZE : blockSize;\n        DataBlockEncoding encoding = overriddenEncoding;\n        encoding = encoding == null ? datablockEncodingMap.get(family) : encoding;\n        encoding = encoding == null ? DataBlockEncoding.NONE : encoding;\n        Configuration tempConf = new Configuration(conf);\n        tempConf.setFloat(HConstants.HFILE_BLOCK_CACHE_SIZE_KEY, 0.0f);\n        HFileContextBuilder contextBuilder = new HFileContextBuilder()\n                                    .withCompression(compression)\n                                    .withChecksumType(HStore.getChecksumType(conf))\n                                    .withBytesPerCheckSum(HStore.getBytesPerChecksum(conf))\n                                    .withBlockSize(blockSize);\n        contextBuilder.withDataBlockEncoding(encoding);\n        HFileContext hFileContext = contextBuilder.build();\n                                    \n        wl.writer = new StoreFile.WriterBuilder(conf, new CacheConfig(tempConf), fs)\n            .withOutputDir(familydir).withBloomType(bloomType).withComparator(KeyValue.COMPARATOR)\n            .withFileContext(hFileContext)\n            .build();\n\n        this.writers.put(family, wl);\n        return wl;\n      }\n\n      private void close(final StoreFile.Writer w) throws IOException {\n        if (w != null) {\n          w.appendFileInfo(StoreFile.BULKLOAD_TIME_KEY,\n              Bytes.toBytes(System.currentTimeMillis()));\n          w.appendFileInfo(StoreFile.BULKLOAD_TASK_KEY,\n              Bytes.toBytes(context.getTaskAttemptID().toString()));\n          w.appendFileInfo(StoreFile.MAJOR_COMPACTION_KEY,\n              Bytes.toBytes(true));\n          w.appendFileInfo(StoreFile.EXCLUDE_FROM_MINOR_COMPACTION_KEY,\n              Bytes.toBytes(compactionExclude));\n          w.appendTrackedTimestampsToMetadata();\n          w.close();\n        }\n      }\n\n      public void close(TaskAttemptContext c)\n      throws IOException, InterruptedException {\n        for (WriterLength wl: this.writers.values()) {\n          close(wl.writer);\n        }\n      }\n    };\n  }","commit_id":"e93012ca836869f6af8d16a15d74d879a675bf7b","url":"https://github.com/apache/hbase"},{"original_method":"/**\n   * Serialize column family to bloom type map to configuration.\n   * Invoked while configuring the MR job for incremental load.\n   *\n   * @throws IOException\n   *           on failure to read column family descriptors\n   */\n  static void configureBloomType(HTable table, Configuration conf) throws IOException {\n    HTableDescriptor tableDescriptor = table.getTableDescriptor();\n    if (tableDescriptor == null) {\n      // could happen with mock table instance\n      return;\n    }\n    StringBuilder bloomTypeConfigValue = new StringBuilder();\n    Collection<HColumnDescriptor> families = tableDescriptor.getFamilies();\n    int i = 0;\n    for (HColumnDescriptor familyDescriptor : families) {\n      if (i++ > 0) {\n        bloomTypeConfigValue.append('&');\n      }\n      bloomTypeConfigValue.append(URLEncoder.encode(familyDescriptor.getNameAsString(), \"UTF-8\"));\n      bloomTypeConfigValue.append('=');\n      String bloomType = familyDescriptor.getBloomFilterType().toString();\n      if (bloomType == null) {\n        bloomType = HColumnDescriptor.DEFAULT_BLOOMFILTER;\n      }\n      bloomTypeConfigValue.append(URLEncoder.encode(bloomType, \"UTF-8\"));\n    }\n    conf.set(BLOOM_TYPE_CONF_KEY, bloomTypeConfigValue.toString());\n  }","id":15428,"modified_method":"/**\n   * Serialize column family to bloom type map to configuration.\n   * Invoked while configuring the MR job for incremental load.\n   *\n   * @param table to read the properties from\n   * @param conf to persist serialized values into\n   * @throws IOException\n   *           on failure to read column family descriptors\n   */\n  @VisibleForTesting\n  static void configureBloomType(HTable table, Configuration conf) throws IOException {\n    HTableDescriptor tableDescriptor = table.getTableDescriptor();\n    if (tableDescriptor == null) {\n      // could happen with mock table instance\n      return;\n    }\n    StringBuilder bloomTypeConfigValue = new StringBuilder();\n    Collection<HColumnDescriptor> families = tableDescriptor.getFamilies();\n    int i = 0;\n    for (HColumnDescriptor familyDescriptor : families) {\n      if (i++ > 0) {\n        bloomTypeConfigValue.append('&');\n      }\n      bloomTypeConfigValue.append(URLEncoder.encode(familyDescriptor.getNameAsString(), \"UTF-8\"));\n      bloomTypeConfigValue.append('=');\n      String bloomType = familyDescriptor.getBloomFilterType().toString();\n      if (bloomType == null) {\n        bloomType = HColumnDescriptor.DEFAULT_BLOOMFILTER;\n      }\n      bloomTypeConfigValue.append(URLEncoder.encode(bloomType, \"UTF-8\"));\n    }\n    conf.set(BLOOM_TYPE_FAMILIES_CONF_KEY, bloomTypeConfigValue.toString());\n  }","commit_id":"e93012ca836869f6af8d16a15d74d879a675bf7b","url":"https://github.com/apache/hbase"},{"original_method":"/**\n   * Serialize column family to compression algorithm map to configuration.\n   * Invoked while configuring the MR job for incremental load.\n   *\n   * Package-private for unit tests only.\n   *\n   * @throws IOException\n   *           on failure to read column family descriptors\n   */\n  @edu.umd.cs.findbugs.annotations.SuppressWarnings(\n      value=\"RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE\")\n  static void configureCompression(HTable table, Configuration conf) throws IOException {\n    StringBuilder compressionConfigValue = new StringBuilder();\n    HTableDescriptor tableDescriptor = table.getTableDescriptor();\n    if(tableDescriptor == null){\n      // could happen with mock table instance\n      return;\n    }\n    Collection<HColumnDescriptor> families = tableDescriptor.getFamilies();\n    int i = 0;\n    for (HColumnDescriptor familyDescriptor : families) {\n      if (i++ > 0) {\n        compressionConfigValue.append('&');\n      }\n      compressionConfigValue.append(URLEncoder.encode(familyDescriptor.getNameAsString(), \"UTF-8\"));\n      compressionConfigValue.append('=');\n      compressionConfigValue.append(URLEncoder.encode(familyDescriptor.getCompression().getName(), \"UTF-8\"));\n    }\n    // Get rid of the last ampersand\n    conf.set(COMPRESSION_CONF_KEY, compressionConfigValue.toString());\n  }","id":15429,"modified_method":"/**\n   * Serialize column family to compression algorithm map to configuration.\n   * Invoked while configuring the MR job for incremental load.\n   *\n   * @param table to read the properties from\n   * @param conf to persist serialized values into\n   * @throws IOException\n   *           on failure to read column family descriptors\n   */\n  @edu.umd.cs.findbugs.annotations.SuppressWarnings(\n      value=\"RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE\")\n  @VisibleForTesting\n  static void configureCompression(HTable table, Configuration conf) throws IOException {\n    StringBuilder compressionConfigValue = new StringBuilder();\n    HTableDescriptor tableDescriptor = table.getTableDescriptor();\n    if(tableDescriptor == null){\n      // could happen with mock table instance\n      return;\n    }\n    Collection<HColumnDescriptor> families = tableDescriptor.getFamilies();\n    int i = 0;\n    for (HColumnDescriptor familyDescriptor : families) {\n      if (i++ > 0) {\n        compressionConfigValue.append('&');\n      }\n      compressionConfigValue.append(URLEncoder.encode(familyDescriptor.getNameAsString(), \"UTF-8\"));\n      compressionConfigValue.append('=');\n      compressionConfigValue.append(URLEncoder.encode(familyDescriptor.getCompression().getName(), \"UTF-8\"));\n    }\n    // Get rid of the last ampersand\n    conf.set(COMPRESSION_FAMILIES_CONF_KEY, compressionConfigValue.toString());\n  }","commit_id":"e93012ca836869f6af8d16a15d74d879a675bf7b","url":"https://github.com/apache/hbase"},{"original_method":"private static Map<byte[], String> createFamilyBlockSizeMap(Configuration conf) {\n    return createFamilyConfValueMap(conf, BLOCK_SIZE_CONF_KEY);\n  }","id":15430,"modified_method":"/**\n   * Runs inside the task to deserialize column family to block size\n   * map from the configuration.\n   *\n   * @param conf to read the serialized values from\n   * @return a map from column family to the configured block size\n   */\n  @VisibleForTesting\n  static Map<byte[], Integer> createFamilyBlockSizeMap(Configuration conf) {\n    Map<byte[], String> stringMap = createFamilyConfValueMap(conf,\n        BLOCK_SIZE_FAMILIES_CONF_KEY);\n    Map<byte[], Integer> blockSizeMap = new TreeMap<byte[],\n        Integer>(Bytes.BYTES_COMPARATOR);\n    for (Map.Entry<byte[], String> e : stringMap.entrySet()) {\n      Integer blockSize = Integer.parseInt(e.getValue());\n      blockSizeMap.put(e.getKey(), blockSize);\n    }\n    return blockSizeMap;\n  }","commit_id":"e93012ca836869f6af8d16a15d74d879a675bf7b","url":"https://github.com/apache/hbase"},{"original_method":"private static Map<byte[], String> createFamilyBloomMap(Configuration conf) {\n    return createFamilyConfValueMap(conf, BLOOM_TYPE_CONF_KEY);\n  }","id":15431,"modified_method":"/**\n   * Runs inside the task to deserialize column family to bloom filter type\n   * map from the configuration.\n   *\n   * @param conf to read the serialized values from\n   * @return a map from column family to the the configured bloom filter type\n   */\n  @VisibleForTesting\n  static Map<byte[], BloomType> createFamilyBloomTypeMap(Configuration conf) {\n    Map<byte[], String> stringMap = createFamilyConfValueMap(conf,\n        BLOOM_TYPE_FAMILIES_CONF_KEY);\n    Map<byte[], BloomType> bloomTypeMap = new TreeMap<byte[],\n        BloomType>(Bytes.BYTES_COMPARATOR);\n    for (Map.Entry<byte[], String> e : stringMap.entrySet()) {\n      BloomType bloomType = BloomType.valueOf(e.getValue());\n      bloomTypeMap.put(e.getKey(), bloomType);\n    }\n    return bloomTypeMap;\n  }","commit_id":"e93012ca836869f6af8d16a15d74d879a675bf7b","url":"https://github.com/apache/hbase"},{"original_method":"/**\n   * Configure a MapReduce Job to perform an incremental load into the given\n   * table. This\n   * <ul>\n   *   <li>Inspects the table to configure a total order partitioner<\/li>\n   *   <li>Uploads the partitions file to the cluster and adds it to the DistributedCache<\/li>\n   *   <li>Sets the number of reduce tasks to match the current number of regions<\/li>\n   *   <li>Sets the output key/value class to match HFileOutputFormat's requirements<\/li>\n   *   <li>Sets the reducer up to perform the appropriate sorting (either KeyValueSortReducer or\n   *     PutSortReducer)<\/li>\n   * <\/ul>\n   * The user should be sure to set the map output value class to either KeyValue or Put before\n   * running this function.\n   */\n  public static void configureIncrementalLoad(Job job, HTable table)\n  throws IOException {\n    Configuration conf = job.getConfiguration();\n\n    job.setOutputKeyClass(ImmutableBytesWritable.class);\n    job.setOutputValueClass(KeyValue.class);\n    job.setOutputFormatClass(HFileOutputFormat.class);\n\n    // Based on the configured map output class, set the correct reducer to properly\n    // sort the incoming values.\n    // TODO it would be nice to pick one or the other of these formats.\n    if (KeyValue.class.equals(job.getMapOutputValueClass())) {\n      job.setReducerClass(KeyValueSortReducer.class);\n    } else if (Put.class.equals(job.getMapOutputValueClass())) {\n      job.setReducerClass(PutSortReducer.class);\n    } else if (Text.class.equals(job.getMapOutputValueClass())) {\n      job.setReducerClass(TextSortReducer.class);\n    } else {\n      LOG.warn(\"Unknown map output value type:\" + job.getMapOutputValueClass());\n    }\n\n    conf.setStrings(\"io.serializations\", conf.get(\"io.serializations\"),\n        MutationSerialization.class.getName(), ResultSerialization.class.getName(),\n        KeyValueSerialization.class.getName());\n\n    // Use table's region boundaries for TOP split points.\n    LOG.info(\"Looking up current regions for table \" + Bytes.toString(table.getTableName()));\n    List<ImmutableBytesWritable> startKeys = getRegionStartKeys(table);\n    LOG.info(\"Configuring \" + startKeys.size() + \" reduce partitions \" +\n        \"to match current region count\");\n    job.setNumReduceTasks(startKeys.size());\n\n    configurePartitioner(job, startKeys);\n    // Set compression algorithms based on column families\n    configureCompression(table, conf);\n    configureBloomType(table, conf);\n    configureBlockSize(table, conf);\n\n    TableMapReduceUtil.addDependencyJars(job);\n    TableMapReduceUtil.initCredentials(job);\n    LOG.info(\"Incremental table \" + Bytes.toString(table.getTableName()) + \" output configured.\");\n  }","id":15432,"modified_method":"/**\n   * Configure a MapReduce Job to perform an incremental load into the given\n   * table. This\n   * <ul>\n   *   <li>Inspects the table to configure a total order partitioner<\/li>\n   *   <li>Uploads the partitions file to the cluster and adds it to the DistributedCache<\/li>\n   *   <li>Sets the number of reduce tasks to match the current number of regions<\/li>\n   *   <li>Sets the output key/value class to match HFileOutputFormat's requirements<\/li>\n   *   <li>Sets the reducer up to perform the appropriate sorting (either KeyValueSortReducer or\n   *     PutSortReducer)<\/li>\n   * <\/ul>\n   * The user should be sure to set the map output value class to either KeyValue or Put before\n   * running this function.\n   */\n  public static void configureIncrementalLoad(Job job, HTable table)\n  throws IOException {\n    Configuration conf = job.getConfiguration();\n\n    job.setOutputKeyClass(ImmutableBytesWritable.class);\n    job.setOutputValueClass(KeyValue.class);\n    job.setOutputFormatClass(HFileOutputFormat.class);\n\n    // Based on the configured map output class, set the correct reducer to properly\n    // sort the incoming values.\n    // TODO it would be nice to pick one or the other of these formats.\n    if (KeyValue.class.equals(job.getMapOutputValueClass())) {\n      job.setReducerClass(KeyValueSortReducer.class);\n    } else if (Put.class.equals(job.getMapOutputValueClass())) {\n      job.setReducerClass(PutSortReducer.class);\n    } else if (Text.class.equals(job.getMapOutputValueClass())) {\n      job.setReducerClass(TextSortReducer.class);\n    } else {\n      LOG.warn(\"Unknown map output value type:\" + job.getMapOutputValueClass());\n    }\n\n    conf.setStrings(\"io.serializations\", conf.get(\"io.serializations\"),\n        MutationSerialization.class.getName(), ResultSerialization.class.getName(),\n        KeyValueSerialization.class.getName());\n\n    // Use table's region boundaries for TOP split points.\n    LOG.info(\"Looking up current regions for table \" + Bytes.toString(table.getTableName()));\n    List<ImmutableBytesWritable> startKeys = getRegionStartKeys(table);\n    LOG.info(\"Configuring \" + startKeys.size() + \" reduce partitions \" +\n        \"to match current region count\");\n    job.setNumReduceTasks(startKeys.size());\n\n    configurePartitioner(job, startKeys);\n    // Set compression algorithms based on column families\n    configureCompression(table, conf);\n    configureBloomType(table, conf);\n    configureBlockSize(table, conf);\n    configureDataBlockEncoding(table, conf);\n\n    TableMapReduceUtil.addDependencyJars(job);\n    TableMapReduceUtil.initCredentials(job);\n    LOG.info(\"Incremental table \" + Bytes.toString(table.getTableName()) + \" output configured.\");\n  }","commit_id":"e93012ca836869f6af8d16a15d74d879a675bf7b","url":"https://github.com/apache/hbase"},{"original_method":"/**\n   * @return a map from column family names to compression algorithms for\n   *         testing column family compression. Column family names have special characters\n   */\n  private Map<String, Compression.Algorithm> getMockColumnFamilies(int numCfs) {\n    Map<String, Compression.Algorithm> familyToCompression = new HashMap<String, Compression.Algorithm>();\n    // use column family names having special characters\n    if (numCfs-- > 0) {\n      familyToCompression.put(\"Family1!@#!@#&\", Compression.Algorithm.LZO);\n    }\n    if (numCfs-- > 0) {\n      familyToCompression.put(\"Family2=asdads&!AASD\", Compression.Algorithm.SNAPPY);\n    }\n    if (numCfs-- > 0) {\n      familyToCompression.put(\"Family2=asdads&!AASD\", Compression.Algorithm.GZ);\n    }\n    if (numCfs-- > 0) {\n      familyToCompression.put(\"Family3\", Compression.Algorithm.NONE);\n    }\n    return familyToCompression;\n  }","id":15433,"modified_method":"/**\n   * @return a map from column family names to compression algorithms for\n   *         testing column family compression. Column family names have special characters\n   */\n  private Map<String, Integer>\n  getMockColumnFamiliesForBlockSize (int numCfs) {\n    Map<String, Integer> familyToBlockSize =\n        new HashMap<String, Integer>();\n    // use column family names having special characters\n    if (numCfs-- > 0) {\n      familyToBlockSize.put(\"Family1!@#!@#&\", 1234);\n    }\n    if (numCfs-- > 0) {\n      familyToBlockSize.put(\"Family2=asdads&!AASD\",\n          Integer.MAX_VALUE);\n    }\n    if (numCfs-- > 0) {\n      familyToBlockSize.put(\"Family2=asdads&!AASD\",\n          Integer.MAX_VALUE);\n    }\n    if (numCfs-- > 0) {\n      familyToBlockSize.put(\"Family3\", 0);\n    }\n    return familyToBlockSize;\n  }","commit_id":"e93012ca836869f6af8d16a15d74d879a675bf7b","url":"https://github.com/apache/hbase"},{"original_method":"/**\n   * Test for\n   * {@link HFileOutputFormat#createFamilyCompressionMap(Configuration)}. Tests\n   * that the compression map is correctly deserialized from configuration\n   *\n   * @throws IOException\n   */\n  @Test\n  public void testCreateFamilyCompressionMap() throws IOException {\n    for (int numCfs = 0; numCfs <= 3; numCfs++) {\n      Configuration conf = new Configuration(this.util.getConfiguration());\n      Map<String, Compression.Algorithm> familyToCompression = getMockColumnFamilies(numCfs);\n      HTable table = Mockito.mock(HTable.class);\n      setupMockColumnFamilies(table, familyToCompression);\n      HFileOutputFormat.configureCompression(table, conf);\n\n      // read back family specific compression setting from the configuration\n      Map<byte[], String> retrievedFamilyToCompressionMap = HFileOutputFormat.createFamilyCompressionMap(conf);\n\n      // test that we have a value for all column families that matches with the\n      // used mock values\n      for (Entry<String, Algorithm> entry : familyToCompression.entrySet()) {\n        assertEquals(\"Compression configuration incorrect for column family:\" + entry.getKey(), entry.getValue()\n                     .getName(), retrievedFamilyToCompressionMap.get(entry.getKey().getBytes()));\n      }\n    }\n  }","id":15434,"modified_method":"/**\n   * Test for {@link HFileOutputFormat#configureCompression(HTable,\n   * Configuration)} and {@link HFileOutputFormat#createFamilyCompressionMap\n   * (Configuration)}.\n   * Tests that the compression map is correctly serialized into\n   * and deserialized from configuration\n   *\n   * @throws IOException\n   */\n  @Test\n  public void testSerializeDeserializeFamilyCompressionMap() throws IOException {\n    for (int numCfs = 0; numCfs <= 3; numCfs++) {\n      Configuration conf = new Configuration(this.util.getConfiguration());\n      Map<String, Compression.Algorithm> familyToCompression =\n          getMockColumnFamiliesForCompression(numCfs);\n      HTable table = Mockito.mock(HTable.class);\n      setupMockColumnFamiliesForCompression(table, familyToCompression);\n      HFileOutputFormat.configureCompression(table, conf);\n\n      // read back family specific compression setting from the configuration\n      Map<byte[], Algorithm> retrievedFamilyToCompressionMap = HFileOutputFormat\n          .createFamilyCompressionMap(conf);\n\n      // test that we have a value for all column families that matches with the\n      // used mock values\n      for (Entry<String, Algorithm> entry : familyToCompression.entrySet()) {\n        assertEquals(\"Compression configuration incorrect for column family:\"\n            + entry.getKey(), entry.getValue(),\n            retrievedFamilyToCompressionMap.get(entry.getKey().getBytes()));\n      }\n    }\n  }","commit_id":"e93012ca836869f6af8d16a15d74d879a675bf7b","url":"https://github.com/apache/hbase"},{"original_method":"private void setupMockColumnFamilies(HTable table,\n    Map<String, Compression.Algorithm> familyToCompression) throws IOException\n  {\n    HTableDescriptor mockTableDescriptor = new HTableDescriptor(TABLE_NAME);\n    for (Entry<String, Compression.Algorithm> entry : familyToCompression.entrySet()) {\n      mockTableDescriptor.addFamily(new HColumnDescriptor(entry.getKey())\n          .setMaxVersions(1)\n          .setCompressionType(entry.getValue())\n          .setBlockCacheEnabled(false)\n          .setTimeToLive(0));\n    }\n    Mockito.doReturn(mockTableDescriptor).when(table).getTableDescriptor();\n  }","id":15435,"modified_method":"private void setupMockColumnFamiliesForCompression(HTable table,\n      Map<String, Compression.Algorithm> familyToCompression) throws IOException {\n    HTableDescriptor mockTableDescriptor = new HTableDescriptor(TABLE_NAME);\n    for (Entry<String, Compression.Algorithm> entry : familyToCompression.entrySet()) {\n      mockTableDescriptor.addFamily(new HColumnDescriptor(entry.getKey())\n          .setMaxVersions(1)\n          .setCompressionType(entry.getValue())\n          .setBlockCacheEnabled(false)\n          .setTimeToLive(0));\n    }\n    Mockito.doReturn(mockTableDescriptor).when(table).getTableDescriptor();\n  }","commit_id":"e93012ca836869f6af8d16a15d74d879a675bf7b","url":"https://github.com/apache/hbase"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\n\t\tfinal SmartWriter wh = new SmartWriter(out);\n\t\tfinal Grid self = (Grid) comp;\n\t\tfinal String uuid = self.getUuid();\n\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"\\\" z.type=\\\"zul.grid.Grid\\\"\");\n\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\">\");\n\t\tif(self.getColumns() != null){\n\t\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"!head\\\" class=\\\"grid-head\\\">\")\n\t\t\t\t.writeln(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"table-layout:fixed\\\">\")\n\t\t\t\t.writeComponents(self.getHeads())\n\t\t\t\t.write(\"<\/table><\/div>\");\n\t\t}\n\n\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"!body\\\" class=\\\"grid-body\\\">\");\n\t\twh.writeln(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" class=\\\"grid-btable\\\">\")\n\t\t\t.writeln(self.getRows())\n\t\t\t.write(\"<\/table><\/div>\");\n\n\t\tif(self.getFoot() != null){\n\t\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"!foot\\\" class=\\\"grid-foot\\\">\")\n\t\t\t\t.writeln(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\"  style=\\\"table-layout:fixed\\\">\")\n\t\t\t\t.writeln(self.getFoot())\n\t\t\t\t.write(\"<\/table><\/div>\");\n\t\t}\n\n\t\twh.write(\"<\/div>\");\n\t}","id":15436,"modified_method":"public void render(Component comp, Writer out) throws IOException {\n\t\tfinal SmartWriter wh = new SmartWriter(out);\n\t\tfinal Grid self = (Grid) comp;\n\t\tfinal String uuid = self.getUuid();\n\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"\\\" z.type=\\\"zul.grid.Grid\\\"\");\n\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\">\");\n\t\tif(self.getColumns() != null){\n\t\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"!head\\\" class=\\\"grid-head\\\">\")\n\t\t\t\t.write(\"<table width=\\\"\").write(self.getInnerWidth()).write(\"\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"table-layout:fixed\\\">\")\n\t\t\t\t.writeComponents(self.getHeads())\n\t\t\t\t.write(\"<\/table><\/div>\");\n\t\t}\n\n\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"!body\\\" class=\\\"grid-body\\\">\");\n\t\twh.write(\"<table width=\\\"\").write(self.getInnerWidth()).write(\"\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" class=\\\"grid-btable\\\">\")\n\t\t\t.writeln(self.getRows())\n\t\t\t.write(\"<\/table><\/div>\");\n\n\t\tif(self.getFoot() != null){\n\t\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"!foot\\\" class=\\\"grid-foot\\\">\")\n\t\t\t\t.write(\"<table width=\\\"\").write(self.getInnerWidth()).write(\"\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\"  style=\\\"table-layout:fixed\\\">\")\n\t\t\t\t.writeln(self.getFoot())\n\t\t\t\t.write(\"<\/table><\/div>\");\n\t\t}\n\n\t\twh.write(\"<\/div>\");\n\t}","commit_id":"8403fafc95c5f51f6493340d23800c29ccad7f4a","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\n\t\tfinal SmartWriter wh = new SmartWriter(out);\n\t\tfinal Grid self = (Grid) comp;\n\t\tfinal String uuid = self.getUuid();\n\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"\\\" z.type=\\\"zul.grid.Grid\\\"\");\n\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\">\");\n\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"!paging\\\" class=\\\"grid-paging\\\">\");\n\t\twh.writeln(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" class=\\\"grid-btable\\\">\")\n\t\t\t.writeln(\"<tbody class=\\\"grid-head\\\">\")\n\t\t\t.writeComponents(self.getHeads())\n\t\t\t.writeln(\"<\/tbody>\")\n\t\t\t.writeln(self.getRows());\n\n\t\twh.writeln(\"<tbody class=\\\"grid-foot\\\">\")\n\t\t\t.writeln(self.getFoot())\n\t\t\t.write(\"<\/tbody><\/table>\");\n\n\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"!pgi\\\" class=\\\"grid-pgi\\\">\")\n\t\t\t.write(self.getPaging())\n\t\t\t.write(\"<\/div><\/div><\/div>\");\n\t}","id":15437,"modified_method":"public void render(Component comp, Writer out) throws IOException {\n\t\tfinal SmartWriter wh = new SmartWriter(out);\n\t\tfinal Grid self = (Grid) comp;\n\t\tfinal String uuid = self.getUuid();\n\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"\\\" z.type=\\\"zul.grid.Grid\\\"\");\n\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\">\");\n\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"!paging\\\" class=\\\"grid-paging\\\">\");\n\t\twh.write(\"<table width=\\\"\").write(self.getInnerWidth()).write(\"\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" class=\\\"grid-btable\\\">\")\n\t\t\t.writeln(\"<tbody class=\\\"grid-head\\\">\")\n\t\t\t.writeComponents(self.getHeads())\n\t\t\t.writeln(\"<\/tbody>\")\n\t\t\t.writeln(self.getRows());\n\n\t\twh.writeln(\"<tbody class=\\\"grid-foot\\\">\")\n\t\t\t.writeln(self.getFoot())\n\t\t\t.write(\"<\/tbody><\/table>\");\n\n\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"!pgi\\\" class=\\\"grid-pgi\\\">\")\n\t\t\t.write(self.getPaging())\n\t\t\t.write(\"<\/div><\/div><\/div>\");\n\t}","commit_id":"8403fafc95c5f51f6493340d23800c29ccad7f4a","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\n\t\tfinal SmartWriter wh = new SmartWriter(out);\n\t\tfinal Listbox self = (Listbox)comp;\n\t\tfinal String uuid = self.getUuid();\n\t\t\n\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"\\\" z.type=\\\"zul.sel.Libox\\\"\")\n\t\t\t.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\">\");\n\n\t\tif(self.getListhead() != null){\n\t\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"!head\\\" class=\\\"listbox-head\\\">\")\n\t\t\t\t.writeln(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"table-layout:fixed\\\">\")\n\t\t\t\t.writeComponents(self.getHeads())\n\t\t\t\t.write(\"<\/table><\/div>\");\n\t\t}\n\n\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"!body\\\" class=\\\"listbox-body\\\">\")\n\t\t\t.write(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" id=\\\"\")\n\t\t\t.write(uuid).writeln(\"!cave\\\" class=\\\"listbox-btable\\\">\")\n\t\t\t.writeComponents(self.getItems())\n\t\t\t.write(\"\\n<\/table><\/div>\");\n\n\t\tif(self.getListfoot() != null){\n\t\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"!foot\\\" class=\\\"listbox-foot\\\">\")\n\t\t\t\t.writeln(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"table-layout:fixed\\\">\")\n\t\t\t\t.writeln(self.getListfoot())\n\t\t\t\t.write(\"<\/table><\/div>\");\n\t\t}\n\n\t\twh.write(\"<\/div>\");\n\t}","id":15438,"modified_method":"public void render(Component comp, Writer out) throws IOException {\n\t\tfinal SmartWriter wh = new SmartWriter(out);\n\t\tfinal Listbox self = (Listbox)comp;\n\t\tfinal String uuid = self.getUuid();\n\t\t\n\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"\\\" z.type=\\\"zul.sel.Libox\\\"\")\n\t\t\t.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\">\");\n\n\t\tif(self.getListhead() != null){\n\t\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"!head\\\" class=\\\"listbox-head\\\">\")\n\t\t\t\t.write(\"<table width=\\\"\").write(self.getInnerWidth()).write(\"\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"table-layout:fixed\\\">\")\n\t\t\t\t.writeComponents(self.getHeads())\n\t\t\t\t.write(\"<\/table><\/div>\");\n\t\t}\n\n\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"!body\\\" class=\\\"listbox-body\\\">\")\n\t\t\t.write(\"<table width=\\\"\").write(self.getInnerWidth()).write(\"\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" id=\\\"\")\n\t\t\t.write(uuid).writeln(\"!cave\\\" class=\\\"listbox-btable\\\">\")\n\t\t\t.writeComponents(self.getItems())\n\t\t\t.write(\"\\n<\/table><\/div>\");\n\n\t\tif(self.getListfoot() != null){\n\t\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"!foot\\\" class=\\\"listbox-foot\\\">\")\n\t\t\t\t.write(\"<table width=\\\"\").write(self.getInnerWidth()).write(\"\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"table-layout:fixed\\\">\")\n\t\t\t\t.writeln(self.getListfoot())\n\t\t\t\t.write(\"<\/table><\/div>\");\n\t\t}\n\n\t\twh.write(\"<\/div>\");\n\t}","commit_id":"8403fafc95c5f51f6493340d23800c29ccad7f4a","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\n\t\tfinal SmartWriter wh = new SmartWriter(out);\n\t\tfinal Tree self = (Tree) comp;\n\n\t\twh.write(\"<div id=\\\"\").write(self.getUuid()).write(\"\\\" z.type=\\\"zul.tree.Tree\\\"\")\n\t\t\t.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\">\");\n\n\t\tif(self.getTreecols() != null){\n\t\t\twh.write(\"<div id=\\\"\").write(self.getUuid()).write(\"!head\\\" class=\\\"tree-head\\\">\")\n\t\t\t\t.writeln(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"table-layout:fixed\\\">\")\n\t\t\t\t.writeComponents(self.getHeads())\n\t\t\t\t.write(\"<\/table><\/div>\");\n\t\t}\n\n\t\twh.write(\"<div id=\\\"\").write(self.getUuid()).write(\"!body\\\" class=\\\"tree-body\\\">\")\n\t\t\t.writeln(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\")\n\t\t\t.writeln(self.getTreechildren())\n\t\t\t.write(\"<\/table><\/div>\");\n\n\t\tif(self.getTreefoot() != null){\n\t\t\twh.write(\"<div id=\\\"\").write(self.getUuid()).write(\"!foot\\\" class=\\\"tree-foot\\\">\")\n\t\t\t\t.writeln(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"table-layout:fixed\\\">\")\n\t\t\t\t.writeln(self.getTreefoot())\n\t\t\t\t.write(\"<\/table><\/div>\");\n\t\t}\n\t\twh.write(\"<\/div>\");\n\t}","id":15439,"modified_method":"public void render(Component comp, Writer out) throws IOException {\n\t\tfinal SmartWriter wh = new SmartWriter(out);\n\t\tfinal Tree self = (Tree) comp;\n\n\t\twh.write(\"<div id=\\\"\").write(self.getUuid()).write(\"\\\" z.type=\\\"zul.tree.Tree\\\"\")\n\t\t\t.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\">\");\n\n\t\tif(self.getTreecols() != null){\n\t\t\twh.write(\"<div id=\\\"\").write(self.getUuid()).write(\"!head\\\" class=\\\"tree-head\\\">\")\n\t\t\t\t.write(\"<table width=\\\"\").write(self.getInnerWidth()).write(\"\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"table-layout:fixed\\\">\")\n\t\t\t\t.writeComponents(self.getHeads())\n\t\t\t\t.write(\"<\/table><\/div>\");\n\t\t}\n\n\t\twh.write(\"<div id=\\\"\").write(self.getUuid()).write(\"!body\\\" class=\\\"tree-body\\\">\")\n\t\t\t .write(\"<table width=\\\"\").write(self.getInnerWidth()).write(\"\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\")\n\t\t\t.writeln(self.getTreechildren())\n\t\t\t.write(\"<\/table><\/div>\");\n\n\t\tif(self.getTreefoot() != null){\n\t\t\twh.write(\"<div id=\\\"\").write(self.getUuid()).write(\"!foot\\\" class=\\\"tree-foot\\\">\")\n\t\t\t\t.write(\"<table width=\\\"\").write(self.getInnerWidth()).write(\"\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"table-layout:fixed\\\">\")\n\t\t\t\t.writeln(self.getTreefoot())\n\t\t\t\t.write(\"<\/table><\/div>\");\n\t\t}\n\t\twh.write(\"<\/div>\");\n\t}","commit_id":"8403fafc95c5f51f6493340d23800c29ccad7f4a","url":"https://github.com/zkoss/zk"},{"original_method":"@Override public void onValue(int docId, long value) {\n            if (value <= from || value > to) { // bounds check\n                return;\n            }\n            int index = ((int) ((value + offset) / interval));\n            InternalBoundedFullHistogramFacet.FullEntry entry = (InternalBoundedFullHistogramFacet.FullEntry) entries[index];\n            if (entry == null) {\n                if (valueFieldData.multiValued()) {\n                    entry = new InternalBoundedFullHistogramFacet.FullEntry(index, 1, Double.MAX_VALUE, Double.MIN_VALUE, 0, 0);\n                    entries[index] = entry;\n\n                    valueAggregator.entry = entry;\n                    valueFieldData.forEachValueInDoc(docId, valueAggregator);\n                } else {\n                    double valueValue = valueFieldData.doubleValue(docId);\n                    entry = new InternalBoundedFullHistogramFacet.FullEntry(index, 1, valueValue, valueValue, 1, valueValue);\n                    entries[index] = entry;\n                }\n            } else {\n                entry.count++;\n                if (valueFieldData.multiValued()) {\n                    valueAggregator.entry = entry;\n                    valueFieldData.forEachValueInDoc(docId, valueAggregator);\n                } else {\n                    entry.totalCount++;\n                    double valueValue = valueFieldData.doubleValue(docId);\n                    entry.total += valueValue;\n                    if (valueValue < entry.min) {\n                        entry.min = valueValue;\n                    }\n                    if (valueValue > entry.max) {\n                        entry.max = valueValue;\n                    }\n                }\n            }\n        }","id":15440,"modified_method":"@Override public void onValue(int docId, long value) {\n            if (value <= from || value > to) { // bounds check\n                return;\n            }\n            int index = ((int) ((value + offset) / interval));\n            InternalBoundedFullHistogramFacet.FullEntry entry = (InternalBoundedFullHistogramFacet.FullEntry) entries[index];\n            if (entry == null) {\n                entry = new InternalBoundedFullHistogramFacet.FullEntry(index, 0, Double.MAX_VALUE, Double.MIN_VALUE, 0, 0);\n                entries[index] = entry;\n            }\n            entry.count++;\n            valueAggregator.entry = entry;\n            valueFieldData.forEachValueInDoc(docId, valueAggregator);\n        }","commit_id":"4603d105016bdbd4164e748b0d5bf52b7f350367","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override public void onValue(int docId, double value) {\n            InternalTermsStatsDoubleFacet.DoubleEntry doubleEntry = entries.get(value);\n            if (doubleEntry == null) {\n                doubleEntry = new InternalTermsStatsDoubleFacet.DoubleEntry(value, 1, 0, 0, Double.MAX_VALUE, Double.MIN_VALUE);\n                entries.put(value, doubleEntry);\n            } else {\n                doubleEntry.count++;\n            }\n\n            if (valueFieldData.multiValued()) {\n                valueAggregator.doubleEntry = doubleEntry;\n                valueFieldData.forEachValueInDoc(docId, valueAggregator);\n            } else {\n                double valueValue = valueFieldData.doubleValue(docId);\n                if (valueValue < doubleEntry.min) {\n                    doubleEntry.min = valueValue;\n                }\n                if (valueValue > doubleEntry.max) {\n                    doubleEntry.max = valueValue;\n                }\n                doubleEntry.totalCount++;\n                doubleEntry.total += valueValue;\n            }\n        }","id":15441,"modified_method":"@Override public void onValue(int docId, double value) {\n            InternalTermsStatsDoubleFacet.DoubleEntry doubleEntry = entries.get(value);\n            if (doubleEntry == null) {\n                doubleEntry = new InternalTermsStatsDoubleFacet.DoubleEntry(value, 0, 0, 0, Double.MAX_VALUE, Double.MIN_VALUE);\n                entries.put(value, doubleEntry);\n            }\n            doubleEntry.count++;\n            valueAggregator.doubleEntry = doubleEntry;\n            valueFieldData.forEachValueInDoc(docId, valueAggregator);\n        }","commit_id":"4603d105016bdbd4164e748b0d5bf52b7f350367","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override public void onValue(int docId, long value) {\n            InternalTermsStatsLongFacet.LongEntry longEntry = entries.get(value);\n            if (longEntry == null) {\n                longEntry = new InternalTermsStatsLongFacet.LongEntry(value, 1, 0, 0, Double.MAX_VALUE, Double.MIN_VALUE);\n                entries.put(value, longEntry);\n            } else {\n                longEntry.count++;\n            }\n            if (valueFieldData.multiValued()) {\n                valueAggregator.longEntry = longEntry;\n                valueFieldData.forEachValueInDoc(docId, valueAggregator);\n            } else {\n                double valueValue = valueFieldData.doubleValue(docId);\n                if (valueValue < longEntry.min) {\n                    longEntry.min = valueValue;\n                }\n                if (valueValue > longEntry.max) {\n                    longEntry.max = valueValue;\n                }\n                longEntry.totalCount++;\n                longEntry.total += valueValue;\n            }\n        }","id":15442,"modified_method":"@Override public void onValue(int docId, long value) {\n            InternalTermsStatsLongFacet.LongEntry longEntry = entries.get(value);\n            if (longEntry == null) {\n                longEntry = new InternalTermsStatsLongFacet.LongEntry(value, 0, 0, 0, Double.MAX_VALUE, Double.MIN_VALUE);\n                entries.put(value, longEntry);\n            }\n            longEntry.count++;\n            valueAggregator.longEntry = longEntry;\n            valueFieldData.forEachValueInDoc(docId, valueAggregator);\n        }","commit_id":"4603d105016bdbd4164e748b0d5bf52b7f350367","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override public void onValue(int docId, String value) {\n            InternalTermsStatsStringFacet.StringEntry stringEntry = entries.get(value);\n            if (stringEntry == null) {\n                stringEntry = new InternalTermsStatsStringFacet.StringEntry(value, 1, 0, 0, Double.MAX_VALUE, Double.MIN_VALUE);\n                entries.put(value, stringEntry);\n            } else {\n                stringEntry.count++;\n            }\n            if (valueFieldData.multiValued()) {\n                valueAggregator.stringEntry = stringEntry;\n                valueFieldData.forEachValueInDoc(docId, valueAggregator);\n            } else {\n                double valueValue = valueFieldData.doubleValue(docId);\n                if (valueValue < stringEntry.min) {\n                    stringEntry.min = valueValue;\n                }\n                if (valueValue > stringEntry.max) {\n                    stringEntry.max = valueValue;\n                }\n                stringEntry.total += valueValue;\n                stringEntry.totalCount++;\n\n            }\n        }","id":15443,"modified_method":"@Override public void onValue(int docId, String value) {\n            InternalTermsStatsStringFacet.StringEntry stringEntry = entries.get(value);\n            if (stringEntry == null) {\n                stringEntry = new InternalTermsStatsStringFacet.StringEntry(value, 0, 0, 0, Double.MAX_VALUE, Double.MIN_VALUE);\n                entries.put(value, stringEntry);\n            }\n            stringEntry.count++;\n            valueAggregator.stringEntry = stringEntry;\n            valueFieldData.forEachValueInDoc(docId, valueAggregator);\n        }","commit_id":"4603d105016bdbd4164e748b0d5bf52b7f350367","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override public void onValue(int docId, MutableDateTime dateTime) {\n            long time = dateTime.getMillis();\n            if (interval != 1) {\n                time = CountDateHistogramFacetCollector.bucket(time, interval);\n            }\n\n            InternalFullDateHistogramFacet.FullEntry entry = entries.get(time);\n            if (entry == null) {\n                if (valueFieldData.multiValued()) {\n                    double[] valuesValues = valueFieldData.doubleValues(docId);\n                    entry = new InternalFullDateHistogramFacet.FullEntry(time, 1, Double.MAX_VALUE, Double.MIN_VALUE, valuesValues.length, 0);\n                    for (double valueValue : valuesValues) {\n                        entry.total += valueValue;\n                        if (valueValue < entry.min) {\n                            entry.min = valueValue;\n                        }\n                        if (valueValue > entry.max) {\n                            entry.max = valueValue;\n                        }\n                    }\n                    entries.put(time, entry);\n                } else {\n                    double valueValue = valueFieldData.doubleValue(docId);\n                    entry = new InternalFullDateHistogramFacet.FullEntry(time, 1, valueValue, valueValue, 1, valueValue);\n                    entries.put(time, entry);\n                }\n            } else {\n                entry.count++;\n                if (valueFieldData.multiValued()) {\n                    double[] valuesValues = valueFieldData.doubleValues(docId);\n                    entry.totalCount += valuesValues.length;\n                    for (double valueValue : valuesValues) {\n                        entry.total += valueValue;\n                        if (valueValue < entry.min) {\n                            entry.min = valueValue;\n                        }\n                        if (valueValue > entry.max) {\n                            entry.max = valueValue;\n                        }\n                    }\n                } else {\n                    entry.totalCount++;\n                    double valueValue = valueFieldData.doubleValue(docId);\n                    entry.total += valueValue;\n                    if (valueValue < entry.min) {\n                        entry.min = valueValue;\n                    }\n                    if (valueValue > entry.max) {\n                        entry.max = valueValue;\n                    }\n                }\n            }\n        }","id":15444,"modified_method":"@Override public void onValue(int docId, MutableDateTime dateTime) {\n            long time = dateTime.getMillis();\n            if (interval != 1) {\n                time = CountDateHistogramFacetCollector.bucket(time, interval);\n            }\n\n            InternalFullDateHistogramFacet.FullEntry entry = entries.get(time);\n            if (entry == null) {\n                entry = new InternalFullDateHistogramFacet.FullEntry(time, 0, Double.MAX_VALUE, Double.MIN_VALUE, 0, 0);\n                entries.put(time, entry);\n            }\n            entry.count++;\n            valueAggregator.entry = entry;\n            valueFieldData.forEachValueInDoc(docId, valueAggregator);\n        }","commit_id":"4603d105016bdbd4164e748b0d5bf52b7f350367","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override public void onValue(int docId, double lat, double lon) {\n            double distance = geoDistance.calculate(this.lat, this.lon, lat, lon, unit);\n            for (GeoDistanceFacet.Entry entry : entries) {\n                if (entry.foundInDoc) {\n                    continue;\n                }\n                if (distance >= entry.getFrom() && distance < entry.getTo()) {\n                    entry.foundInDoc = true;\n                    entry.count++;\n                    if (valueFieldData.multiValued()) {\n                        double[] values = valueFieldData.doubleValues(docId);\n                        entry.totalCount += values.length;\n                        for (double value : values) {\n                            entry.total += value;\n                            if (value < entry.min) {\n                                entry.min = value;\n                            }\n                            if (value > entry.max) {\n                                entry.max = value;\n                            }\n                        }\n                    } else if (valueFieldData.hasValue(docId)) {\n                        entry.totalCount++;\n                        double value = valueFieldData.doubleValue(docId);\n                        entry.total += value;\n                        if (value < entry.min) {\n                            entry.min = value;\n                        }\n                        if (value > entry.max) {\n                            entry.max = value;\n                        }\n                    }\n                }\n            }\n        }","id":15445,"modified_method":"@Override public void onValue(int docId, double lat, double lon) {\n            double distance = geoDistance.calculate(this.lat, this.lon, lat, lon, unit);\n            for (GeoDistanceFacet.Entry entry : entries) {\n                if (entry.foundInDoc) {\n                    continue;\n                }\n                if (distance >= entry.getFrom() && distance < entry.getTo()) {\n                    entry.foundInDoc = true;\n                    entry.count++;\n                    valueAggregator.entry = entry;\n                    valueFieldData.forEachValueInDoc(docId, valueAggregator);\n                }\n            }\n        }","commit_id":"4603d105016bdbd4164e748b0d5bf52b7f350367","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override public void onValue(int docId, double value) {\n            long bucket = FullHistogramFacetCollector.bucket(value, interval);\n            InternalFullHistogramFacet.FullEntry entry = entries.get(bucket);\n            if (entry == null) {\n                if (valueFieldData.multiValued()) {\n                    entry = new InternalFullHistogramFacet.FullEntry(bucket, 1, Double.MAX_VALUE, Double.MIN_VALUE, 0, 0);\n                    entries.put(bucket, entry);\n                    valueAggregator.entry = entry;\n                    valueFieldData.forEachValueInDoc(docId, valueAggregator);\n                } else {\n                    double valueValue = valueFieldData.doubleValue(docId);\n                    entry = new InternalFullHistogramFacet.FullEntry(bucket, 1, valueValue, valueValue, 1, valueValue);\n                    entries.put(bucket, entry);\n                }\n            } else {\n                entry.count++;\n                if (valueFieldData.multiValued()) {\n                    valueAggregator.entry = entry;\n                    valueFieldData.forEachValueInDoc(docId, valueAggregator);\n                } else {\n                    entry.totalCount++;\n                    double valueValue = valueFieldData.doubleValue(docId);\n                    entry.total += valueValue;\n                    if (valueValue < entry.min) {\n                        entry.min = valueValue;\n                    }\n                    if (valueValue > entry.max) {\n                        entry.max = valueValue;\n                    }\n                }\n            }\n        }","id":15446,"modified_method":"@Override public void onValue(int docId, double value) {\n            long bucket = FullHistogramFacetCollector.bucket(value, interval);\n            InternalFullHistogramFacet.FullEntry entry = entries.get(bucket);\n            if (entry == null) {\n                entry = new InternalFullHistogramFacet.FullEntry(bucket, 0, Double.MAX_VALUE, Double.MIN_VALUE, 0, 0);\n                entries.put(bucket, entry);\n            }\n            entry.count++;\n            valueAggregator.entry = entry;\n            valueFieldData.forEachValueInDoc(docId, valueAggregator);\n        }","commit_id":"4603d105016bdbd4164e748b0d5bf52b7f350367","url":"https://github.com/elastic/elasticsearch"},{"original_method":"/**\n     * <P>\n     * Poll the specified address for ICMP service availability.\n     * <\/P>\n     * \n     * <P>\n     * The ICMP service monitor relies on Discovery for the actual generation of\n     * IMCP 'ping' requests. A JSDT session with two channels (send/receive) is\n     * utilized for passing poll requests and receiving poll replies from\n     * discovery. All exchanges are SOAP/XML compliant.\n     * <\/P>\n     * \n     * @param parameters\n     *            The package parameters (timeout, retry, etc...) to be used for\n     *            this poll.\n     * @param iface\n     *            The network interface to test the service on.\n     * @return The availability of the interface and if a transition event\n     *         should be suppressed.\n     * \n     */\n    public PollStatus poll(MonitoredService svc, Map parameters) {\n        NetworkInterface iface = svc.getNetInterface();\n\n        // Get interface address from NetworkInterface\n        //\n        if (iface.getType() != NetworkInterface.TYPE_IPV4)\n            throw new NetworkInterfaceNotSupportedException(\"Unsupported interface type, only TYPE_IPV4 currently supported\");\n\n        Category log = ThreadCategory.getInstance(this.getClass());\n        PollStatus serviceStatus = PollStatus.unavailable();\n        InetAddress host = (InetAddress) iface.getAddress();\n        List<Number> responseTimes = null;\n\n        try {\n\n            // get parameters\n            //\n            long timeout = ParameterMap.getKeyedLong(parameters, \"timeout\", Pinger.DEFAULT_TIMEOUT);\n            int count = ParameterMap.getKeyedInteger(parameters, \"ping-count\", DEFAULT_MULTI_PING_COUNT);\n            long pingInterval = ParameterMap.getKeyedLong(parameters, \"wait-interval\", DEFAULT_PING_INTERVAL);\n            int failurePingCount = ParameterMap.getKeyedInteger(parameters, \"failure-ping-count\", DEFAULT_FAILURE_PING_COUNT);\n            \n            responseTimes = new ArrayList<Number>(Pinger.parallelPing(host, count, timeout, pingInterval));\n\n            if (CollectionMath.countNull(responseTimes) >= failurePingCount) {\n                return PollStatus.unavailable(\"the failure ping count (\" + failurePingCount + \") was reached\");\n            }\n\n            serviceStatus = PollStatus.available();\n            Collections.sort(responseTimes, new Comparator<Number>() {\n\n                public int compare(Number arg0, Number arg1) {\n                    if (arg0 == null) {\n                        return -1;\n                    } else if (arg1 == null) {\n                        return 1;\n                    } else if (arg0.doubleValue() == arg1.doubleValue()) {\n                        return 0;\n                    } else {\n                        return arg0.doubleValue() < arg1.doubleValue() ? -1 : 1;\n                    }\n                }\n\n            });\n\n            Map<String, Number> returnval = new LinkedHashMap<String, Number>();\n            for (int i = 0; i < responseTimes.size(); i++) {\n                returnval.put(\"ping\" + (i + 1), responseTimes.get(i));\n            }\n            returnval.put(\"loss\", CollectionMath.countNull(responseTimes));\n            returnval.put(\"median\", CollectionMath.median(responseTimes));\n            returnval.put(\"response-time\", CollectionMath.average(responseTimes));\n\n            serviceStatus.setProperties(returnval);\n        } catch (Exception e) {\n            log.debug(\"failed to ping \" + host, e);\n        }\n\n        return serviceStatus;\n    }","id":15447,"modified_method":"/**\n     * <P>\n     * Poll the specified address for ICMP service availability.\n     * <\/P>\n     * \n     * <P>\n     * The ICMP service monitor relies on Discovery for the actual generation of\n     * IMCP 'ping' requests. A JSDT session with two channels (send/receive) is\n     * utilized for passing poll requests and receiving poll replies from\n     * discovery. All exchanges are SOAP/XML compliant.\n     * <\/P>\n     * \n     * @param parameters\n     *            The package parameters (timeout, retry, etc...) to be used for\n     *            this poll.\n     * @param iface\n     *            The network interface to test the service on.\n     * @return The availability of the interface and if a transition event\n     *         should be suppressed.\n     * \n     */\n    public PollStatus poll(MonitoredService svc, Map parameters) {\n        NetworkInterface iface = svc.getNetInterface();\n\n        // Get interface address from NetworkInterface\n        //\n        if (iface.getType() != NetworkInterface.TYPE_IPV4)\n            throw new NetworkInterfaceNotSupportedException(\"Unsupported interface type, only TYPE_IPV4 currently supported\");\n\n        Category log = ThreadCategory.getInstance(this.getClass());\n        PollStatus serviceStatus = PollStatus.unavailable();\n        InetAddress host = (InetAddress) iface.getAddress();\n        List<Number> responseTimes = null;\n\n        try {\n\n            // get parameters\n            //\n            long timeout = ParameterMap.getKeyedLong(parameters, \"timeout\", Pinger.DEFAULT_TIMEOUT);\n            int count = ParameterMap.getKeyedInteger(parameters, \"ping-count\", DEFAULT_MULTI_PING_COUNT);\n            long pingInterval = ParameterMap.getKeyedLong(parameters, \"wait-interval\", DEFAULT_PING_INTERVAL);\n            int failurePingCount = ParameterMap.getKeyedInteger(parameters, \"failure-ping-count\", DEFAULT_FAILURE_PING_COUNT);\n            \n            responseTimes = new ArrayList<Number>(Pinger.parallelPing(host, count, timeout, pingInterval));\n\n            if (CollectionMath.countNull(responseTimes) >= failurePingCount) {\n            \tif (log().isDebugEnabled()) {\n            \t\tlog().debug(\"Service \" +svc.getSvcName()+ \" on interface \" +svc.getIpAddr()+ \" is down, but continuing to gather latency data\");\n            \t}\n                serviceStatus = PollStatus.unavailable(\"the failure ping count (\" + failurePingCount + \") was reached\");\n            } else {\n            \tserviceStatus = PollStatus.available();\n            }\n            \n            Collections.sort(responseTimes, new Comparator<Number>() {\n\n                public int compare(Number arg0, Number arg1) {\n                    if (arg0 == null) {\n                        return -1;\n                    } else if (arg1 == null) {\n                        return 1;\n                    } else if (arg0.doubleValue() == arg1.doubleValue()) {\n                        return 0;\n                    } else {\n                        return arg0.doubleValue() < arg1.doubleValue() ? -1 : 1;\n                    }\n                }\n\n            });\n\n            Map<String, Number> returnval = new LinkedHashMap<String, Number>();\n            for (int i = 0; i < responseTimes.size(); i++) {\n                returnval.put(\"ping\" + (i + 1), responseTimes.get(i));\n            }\n            returnval.put(\"loss\", CollectionMath.countNull(responseTimes));\n            returnval.put(\"median\", CollectionMath.median(responseTimes));\n            returnval.put(\"response-time\", CollectionMath.average(responseTimes));\n\n            serviceStatus.setProperties(returnval);\n        } catch (Exception e) {\n            log.debug(\"failed to ping \" + host, e);\n        }\n\n        return serviceStatus;\n    }","commit_id":"9025b82cd16a42ed50c61fe9676b6212c86eefa9","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * <P>\n     * Poll the specified address for ICMP service availability.\n     * <\/P>\n     * \n     * <P>\n     * The ICMP service monitor relies on Discovery for the actual generation of\n     * IMCP 'ping' requests. A JSDT session with two channels (send/receive) is\n     * utilized for passing poll requests and receiving poll replies from\n     * discovery. All exchanges are SOAP/XML compliant.\n     * <\/P>\n     * \n     * @param parameters\n     *            The package parameters (timeout, retry, etc...) to be used for\n     *            this poll.\n     * @param iface\n     *            The network interface to test the service on.\n     * @return The availability of the interface and if a transition event\n     *         should be suppressed.\n     * \n     */\n    public PollStatus poll(MonitoredService svc, Map parameters) {\n        NetworkInterface iface = svc.getNetInterface();\n\n        // Get interface address from NetworkInterface\n        //\n        if (iface.getType() != NetworkInterface.TYPE_IPV4)\n            throw new NetworkInterfaceNotSupportedException(\"Unsupported interface type, only TYPE_IPV4 currently supported\");\n\n        Category log = ThreadCategory.getInstance(this.getClass());\n        PollStatus serviceStatus = PollStatus.unavailable();\n        InetAddress host = (InetAddress) iface.getAddress();\n        List<Number> responseTimes = null;\n\n        try {\n\n            // get parameters\n            //\n            long timeout = ParameterMap.getKeyedLong(parameters, \"timeout\", Pinger.DEFAULT_TIMEOUT);\n            int count = ParameterMap.getKeyedInteger(parameters, \"ping-count\", DEFAULT_MULTI_PING_COUNT);\n            long pingInterval = ParameterMap.getKeyedLong(parameters, \"wait-interval\", DEFAULT_PING_INTERVAL);\n            int failurePingCount = ParameterMap.getKeyedInteger(parameters, \"failure-ping-count\", DEFAULT_FAILURE_PING_COUNT);\n            \n            responseTimes = new ArrayList<Number>(Pinger.parallelPing(host, count, timeout, pingInterval));\n\n            if (CollectionMath.countNull(responseTimes) >= failurePingCount) {\n                return PollStatus.unavailable(\"the failure ping count (\" + failurePingCount + \") was reached\");\n            }\n\n            serviceStatus = PollStatus.available();\n            Collections.sort(responseTimes, new Comparator<Number>() {\n\n                public int compare(Number arg0, Number arg1) {\n                    if (arg0 == null) {\n                        return -1;\n                    } else if (arg1 == null) {\n                        return 1;\n                    } else if (arg0.doubleValue() == arg1.doubleValue()) {\n                        return 0;\n                    } else {\n                        return arg0.doubleValue() < arg1.doubleValue() ? -1 : 1;\n                    }\n                }\n\n            });\n\n            Map<String, Number> returnval = new LinkedHashMap<String, Number>();\n            for (int i = 0; i < responseTimes.size(); i++) {\n                returnval.put(\"ping\" + (i + 1), responseTimes.get(i));\n            }\n            returnval.put(\"loss\", CollectionMath.countNull(responseTimes));\n            returnval.put(\"median\", CollectionMath.median(responseTimes));\n            returnval.put(\"response-time\", CollectionMath.average(responseTimes));\n\n            serviceStatus.setProperties(returnval);\n        } catch (Exception e) {\n            log.debug(\"failed to ping \" + host, e);\n        }\n\n        return serviceStatus;\n    }","id":15448,"modified_method":"/**\n     * <P>\n     * Poll the specified address for ICMP service availability.\n     * <\/P>\n     * \n     * <P>\n     * The ICMP service monitor relies on Discovery for the actual generation of\n     * IMCP 'ping' requests. A JSDT session with two channels (send/receive) is\n     * utilized for passing poll requests and receiving poll replies from\n     * discovery. All exchanges are SOAP/XML compliant.\n     * <\/P>\n     * \n     * @param parameters\n     *            The package parameters (timeout, retry, etc...) to be used for\n     *            this poll.\n     * @param iface\n     *            The network interface to test the service on.\n     * @return The availability of the interface and if a transition event\n     *         should be suppressed.\n     * \n     */\n    public PollStatus poll(MonitoredService svc, Map parameters) {\n        NetworkInterface iface = svc.getNetInterface();\n\n        // Get interface address from NetworkInterface\n        //\n        if (iface.getType() != NetworkInterface.TYPE_IPV4)\n            throw new NetworkInterfaceNotSupportedException(\"Unsupported interface type, only TYPE_IPV4 currently supported\");\n\n        Category log = ThreadCategory.getInstance(this.getClass());\n        PollStatus serviceStatus = PollStatus.unavailable();\n        InetAddress host = (InetAddress) iface.getAddress();\n        List<Number> responseTimes = null;\n\n        try {\n\n            // get parameters\n            //\n            long timeout = ParameterMap.getKeyedLong(parameters, \"timeout\", Pinger.DEFAULT_TIMEOUT);\n            int count = ParameterMap.getKeyedInteger(parameters, \"ping-count\", DEFAULT_MULTI_PING_COUNT);\n            long pingInterval = ParameterMap.getKeyedLong(parameters, \"wait-interval\", DEFAULT_PING_INTERVAL);\n            int failurePingCount = ParameterMap.getKeyedInteger(parameters, \"failure-ping-count\", DEFAULT_FAILURE_PING_COUNT);\n            \n            responseTimes = new ArrayList<Number>(Pinger.parallelPing(host, count, timeout, pingInterval));\n\n            if (CollectionMath.countNull(responseTimes) >= failurePingCount) {\n            \tif (log().isDebugEnabled()) {\n            \t\tlog().debug(\"Service \" +svc.getSvcName()+ \" on interface \" +svc.getIpAddr()+ \" is down, but continuing to gather latency data\");\n            \t}\n                serviceStatus = PollStatus.unavailable(\"the failure ping count (\" + failurePingCount + \") was reached\");\n            } else {\n            \tserviceStatus = PollStatus.available();\n            }\n            \n            Collections.sort(responseTimes, new Comparator<Number>() {\n\n                public int compare(Number arg0, Number arg1) {\n                    if (arg0 == null) {\n                        return -1;\n                    } else if (arg1 == null) {\n                        return 1;\n                    } else if (arg0.doubleValue() == arg1.doubleValue()) {\n                        return 0;\n                    } else {\n                        return arg0.doubleValue() < arg1.doubleValue() ? -1 : 1;\n                    }\n                }\n\n            });\n\n            Map<String, Number> returnval = new LinkedHashMap<String, Number>();\n            for (int i = 0; i < responseTimes.size(); i++) {\n                returnval.put(\"ping\" + (i + 1), responseTimes.get(i));\n            }\n            returnval.put(\"loss\", CollectionMath.countNull(responseTimes));\n            returnval.put(\"median\", CollectionMath.median(responseTimes));\n            returnval.put(\"response-time\", CollectionMath.average(responseTimes));\n\n            serviceStatus.setProperties(returnval);\n        } catch (Exception e) {\n            log.debug(\"failed to ping \" + host, e);\n        }\n\n        return serviceStatus;\n    }","commit_id":"89a9b5f4370e557e221ca5eebc2325e3c31487aa","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * <P>\n     * Poll the specified address for ICMP service availability.\n     * <\/P>\n     * \n     * <P>\n     * The ICMP service monitor relies on Discovery for the actual generation of\n     * IMCP 'ping' requests. A JSDT session with two channels (send/receive) is\n     * utilized for passing poll requests and receiving poll replies from\n     * discovery. All exchanges are SOAP/XML compliant.\n     * <\/P>\n     * \n     * @param parameters\n     *            The package parameters (timeout, retry, etc...) to be used for\n     *            this poll.\n     * @param iface\n     *            The network interface to test the service on.\n     * @return The availability of the interface and if a transition event\n     *         should be suppressed.\n     * \n     */\n    public PollStatus poll(MonitoredService svc, Map parameters) {\n        NetworkInterface iface = svc.getNetInterface();\n\n        // Get interface address from NetworkInterface\n        //\n        if (iface.getType() != NetworkInterface.TYPE_IPV4)\n            throw new NetworkInterfaceNotSupportedException(\"Unsupported interface type, only TYPE_IPV4 currently supported\");\n\n        Category log = ThreadCategory.getInstance(this.getClass());\n        PollStatus serviceStatus = PollStatus.unavailable();\n        InetAddress host = (InetAddress) iface.getAddress();\n        List<Number> responseTimes = null;\n\n        try {\n\n            // get parameters\n            //\n            long timeout = ParameterMap.getKeyedLong(parameters, \"timeout\", Pinger.DEFAULT_TIMEOUT);\n            int count = ParameterMap.getKeyedInteger(parameters, \"ping-count\", DEFAULT_MULTI_PING_COUNT);\n            long pingInterval = ParameterMap.getKeyedLong(parameters, \"wait-interval\", DEFAULT_PING_INTERVAL);\n            int failurePingCount = ParameterMap.getKeyedInteger(parameters, \"failure-ping-count\", DEFAULT_FAILURE_PING_COUNT);\n            \n            responseTimes = new ArrayList<Number>(Pinger.parallelPing(host, count, timeout, pingInterval));\n\n            if (CollectionMath.countNull(responseTimes) >= failurePingCount) {\n                return PollStatus.unavailable(\"the failure ping count (\" + failurePingCount + \") was reached\");\n            }\n\n            serviceStatus = PollStatus.available();\n            Collections.sort(responseTimes, new Comparator<Number>() {\n\n                public int compare(Number arg0, Number arg1) {\n                    if (arg0 == null) {\n                        return -1;\n                    } else if (arg1 == null) {\n                        return 1;\n                    } else if (arg0.doubleValue() == arg1.doubleValue()) {\n                        return 0;\n                    } else {\n                        return arg0.doubleValue() < arg1.doubleValue() ? -1 : 1;\n                    }\n                }\n\n            });\n\n            Map<String, Number> returnval = new LinkedHashMap<String, Number>();\n            for (int i = 0; i < responseTimes.size(); i++) {\n                returnval.put(\"ping\" + (i + 1), responseTimes.get(i));\n            }\n            returnval.put(\"loss\", CollectionMath.countNull(responseTimes));\n            returnval.put(\"median\", CollectionMath.median(responseTimes));\n            returnval.put(\"response-time\", CollectionMath.average(responseTimes));\n\n            serviceStatus.setProperties(returnval);\n        } catch (Exception e) {\n            log.debug(\"failed to ping \" + host, e);\n        }\n\n        return serviceStatus;\n    }","id":15449,"modified_method":"/**\n     * <P>\n     * Poll the specified address for ICMP service availability.\n     * <\/P>\n     * \n     * <P>\n     * The ICMP service monitor relies on Discovery for the actual generation of\n     * IMCP 'ping' requests. A JSDT session with two channels (send/receive) is\n     * utilized for passing poll requests and receiving poll replies from\n     * discovery. All exchanges are SOAP/XML compliant.\n     * <\/P>\n     * \n     * @param parameters\n     *            The package parameters (timeout, retry, etc...) to be used for\n     *            this poll.\n     * @param iface\n     *            The network interface to test the service on.\n     * @return The availability of the interface and if a transition event\n     *         should be suppressed.\n     * \n     */\n    public PollStatus poll(MonitoredService svc, Map parameters) {\n        NetworkInterface iface = svc.getNetInterface();\n\n        // Get interface address from NetworkInterface\n        //\n        if (iface.getType() != NetworkInterface.TYPE_IPV4)\n            throw new NetworkInterfaceNotSupportedException(\"Unsupported interface type, only TYPE_IPV4 currently supported\");\n\n        Category log = ThreadCategory.getInstance(this.getClass());\n        PollStatus serviceStatus = PollStatus.unavailable();\n        InetAddress host = (InetAddress) iface.getAddress();\n        List<Number> responseTimes = null;\n\n        try {\n\n            // get parameters\n            //\n            long timeout = ParameterMap.getKeyedLong(parameters, \"timeout\", Pinger.DEFAULT_TIMEOUT);\n            int count = ParameterMap.getKeyedInteger(parameters, \"ping-count\", DEFAULT_MULTI_PING_COUNT);\n            long pingInterval = ParameterMap.getKeyedLong(parameters, \"wait-interval\", DEFAULT_PING_INTERVAL);\n            int failurePingCount = ParameterMap.getKeyedInteger(parameters, \"failure-ping-count\", DEFAULT_FAILURE_PING_COUNT);\n            \n            responseTimes = new ArrayList<Number>(Pinger.parallelPing(host, count, timeout, pingInterval));\n\n            if (CollectionMath.countNull(responseTimes) >= failurePingCount) {\n            \tif (log().isDebugEnabled()) {\n            \t\tlog().debug(\"Service \" +svc.getSvcName()+ \" on interface \" +svc.getIpAddr()+ \" is down, but continuing to gather latency data\");\n            \t}\n                serviceStatus = PollStatus.unavailable(\"the failure ping count (\" + failurePingCount + \") was reached\");\n            } else {\n            \tserviceStatus = PollStatus.available();\n            }\n            \n            Collections.sort(responseTimes, new Comparator<Number>() {\n\n                public int compare(Number arg0, Number arg1) {\n                    if (arg0 == null) {\n                        return -1;\n                    } else if (arg1 == null) {\n                        return 1;\n                    } else if (arg0.doubleValue() == arg1.doubleValue()) {\n                        return 0;\n                    } else {\n                        return arg0.doubleValue() < arg1.doubleValue() ? -1 : 1;\n                    }\n                }\n\n            });\n\n            Map<String, Number> returnval = new LinkedHashMap<String, Number>();\n            for (int i = 0; i < responseTimes.size(); i++) {\n                returnval.put(\"ping\" + (i + 1), responseTimes.get(i));\n            }\n            returnval.put(\"loss\", CollectionMath.countNull(responseTimes));\n            returnval.put(\"median\", CollectionMath.median(responseTimes));\n            returnval.put(\"response-time\", CollectionMath.average(responseTimes));\n\n            serviceStatus.setProperties(returnval);\n        } catch (Exception e) {\n            log.debug(\"failed to ping \" + host, e);\n        }\n\n        return serviceStatus;\n    }","commit_id":"0b175c910b4ff514e1fb37f1184aa4cfdccbc6bf","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public StatusPanel(int width, final ContributionTab contributionTab) {\n    if (foundationIcon == null) {\n      foundationIcon = Toolkit.getLibIconX(\"icons/foundation\", 32);\n    }\n\n    setBackground(new Color(0xebebeb));\n//    setBorder(BorderFactory.createMatteBorder(2, 0, 0, 0, Color.BLACK));\n    this.contributionTab = contributionTab;\n\n    iconLabel = new JLabel();\n    iconLabel.setHorizontalAlignment(SwingConstants.CENTER);\n\n    label = new JTextPane();\n    label.setEditable(false);\n    label.setOpaque(false);\n    label.setContentType(\"text/html\");\n    bodyRule = \"a, body { font-family: \" + ContributionManagerDialog.font.getFamily() + \"; \" +\n            \"font-size: \" + ContributionManagerDialog.font.getSize() + \"pt; color: black; text-decoration: none;}\";\n    label.addHyperlinkListener(new HyperlinkListener() {\n\n      @Override\n      public void hyperlinkUpdate(HyperlinkEvent e) {\n        if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {\n          if (e.getURL() != null) {\n            Platform.openURL(e.getURL().toString());\n          }\n        }\n      }\n    });\n    installButton =\n      new JButton(\"Install\", Toolkit.getLibIconX(\"manager/install\"));\n    installButton.setFont(Toolkit.getSansFont(14, Font.PLAIN));\n    installButton.setHorizontalAlignment(SwingConstants.LEFT);\n//    installButton.setContentAreaFilled(false);\n//    installButton.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createLineBorder(Color.BLACK, 1),BorderFactory.createEmptyBorder(3, 0, 3, 0)));\n    installButton.addActionListener(new ActionListener() {\n\n      @Override\n      public void actionPerformed(ActionEvent e) {\n        installButton.setEnabled(false);\n        ContributionPanel currentPanel = contributionTab.contributionListPanel\n          .getSelectedPanel();\n        currentPanel.install();\n        StatusPanel.this.update(currentPanel);\n      }\n    });\n    progressBarPanel = new JPanel();\n    progressBarPanel.setLayout(new BorderLayout());\n    progressBarPanel.setOpaque(false);\n    updateLabel = new JLabel(\" \");\n    updateLabel.setFont(Toolkit.getSansFont(14, Font.PLAIN));\n    updateLabel.setHorizontalAlignment(SwingConstants.CENTER);\n    updateButton =\n      new JButton(\"Update\", Toolkit.getLibIconX(\"manager/update\"));\n    updateButton.setFont(Toolkit.getSansFont(14, Font.PLAIN));\n    updateButton.setHorizontalAlignment(SwingConstants.LEFT);\n    updateButton.addActionListener(new ActionListener() {\n      public void actionPerformed(ActionEvent e) {\n        updateButton.setEnabled(false);\n        ContributionPanel currentPanel =\n          contributionTab.contributionListPanel.getSelectedPanel();\n        currentPanel.update();\n        StatusPanel.this.update(currentPanel);\n      }\n    });\n\n    removeButton =\n      new JButton(\"Remove\", Toolkit.getLibIconX(\"manager/remove\"));\n    removeButton.setFont(Toolkit.getSansFont(14, Font.BOLD));\n    removeButton.setHorizontalAlignment(SwingConstants.LEFT);\n    removeButton.addActionListener(new ActionListener() {\n      public void actionPerformed(ActionEvent e) {\n        removeButton.setEnabled(false);\n        ContributionPanel currentPanel =\n          contributionTab.contributionListPanel.getSelectedPanel();\n        currentPanel.remove();\n        StatusPanel.this.update(currentPanel);\n      }\n    });\n\n    int labelWidth = (width != 0) ? (3 * width / 4) : GroupLayout.PREFERRED_SIZE;\n    layout = new GroupLayout(this);\n    this.setLayout(layout);\n\n    layout.setAutoCreateContainerGaps(true);\n    layout.setAutoCreateGaps(true);\n\n    layout.setHorizontalGroup(layout\n      .createSequentialGroup()\n      .addGap(0)\n      .addComponent(iconLabel, ContributionManagerDialog.STATUS_WIDTH, ContributionManagerDialog.STATUS_WIDTH, ContributionManagerDialog.STATUS_WIDTH)\n      .addGap(0)\n      .addComponent(label, labelWidth, labelWidth, labelWidth)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED,\n                       GroupLayout.PREFERRED_SIZE, Short.MAX_VALUE)\n      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER)\n                  .addComponent(installButton, BUTTON_WIDTH, BUTTON_WIDTH,\n                                BUTTON_WIDTH)\n                  .addComponent(progressBarPanel)\n                  .addComponent(updateLabel, BUTTON_WIDTH, BUTTON_WIDTH, BUTTON_WIDTH)\n                  .addComponent(updateButton)\n                  .addComponent(removeButton)));\n\n    layout.setVerticalGroup(layout\n      .createParallelGroup(GroupLayout.Alignment.LEADING)\n      .addComponent(iconLabel)\n      .addComponent(label)\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(installButton)\n                  .addGroup(layout.createParallelGroup()\n                              .addComponent(progressBarPanel)\n                              .addComponent(updateLabel))\n                  .addComponent(updateButton).addComponent(removeButton)));\n\n    layout.linkSize(SwingConstants.HORIZONTAL, installButton, progressBarPanel,\n                    updateButton, removeButton);\n\n    progressBarPanel.setVisible(false);\n    updateLabel.setVisible(false);\n\n    installButton.setEnabled(false);\n    updateButton.setEnabled(false);\n    removeButton.setEnabled(false);\n    updateLabel.setVisible(true);\n\n    layout.setHonorsVisibility(updateLabel, false); // Makes the label take up space even though not visible\n\n    validate();\n\n  }","id":15450,"modified_method":"public StatusPanel(int width, final ContributionTab contributionTab) {\n    if (foundationIcon == null) {\n      foundationIcon = Toolkit.getLibIconX(\"icons/foundation\", 32);\n      installIcon = Toolkit.getLibIconX(\"manager/install\");\n      updateIcon = Toolkit.getLibIconX(\"manager/update\");\n      removeIcon = Toolkit.getLibIconX(\"manager/remove\");\n      buttonFont = Toolkit.getSansFont(14, Font.PLAIN);\n    }\n\n    setBackground(new Color(0xebebeb));\n//    setBorder(BorderFactory.createMatteBorder(2, 0, 0, 0, Color.BLACK));\n    this.contributionTab = contributionTab;\n\n    iconLabel = new JLabel();\n    iconLabel.setHorizontalAlignment(SwingConstants.CENTER);\n\n    label = new JTextPane();\n    label.setEditable(false);\n    label.setOpaque(false);\n    label.setContentType(\"text/html\");\n    bodyRule = \"a, body { font-family: \" + ContributionManagerDialog.font.getFamily() + \"; \" +\n            \"font-size: \" + ContributionManagerDialog.font.getSize() + \"pt; color: black; text-decoration: none;}\";\n    label.addHyperlinkListener(new HyperlinkListener() {\n\n      @Override\n      public void hyperlinkUpdate(HyperlinkEvent e) {\n        if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {\n          if (e.getURL() != null) {\n            Platform.openURL(e.getURL().toString());\n          }\n        }\n      }\n    });\n    installButton = new JButton(\"Install\", installIcon);\n    installButton.setDisabledIcon(installIcon);\n    installButton.setFont(buttonFont);\n    installButton.setHorizontalAlignment(SwingConstants.LEFT);\n    installButton.addActionListener(new ActionListener() {\n\n      @Override\n      public void actionPerformed(ActionEvent e) {\n        installButton.setEnabled(false);\n        ContributionPanel currentPanel =\n          contributionTab.contributionListPanel.getSelectedPanel();\n        currentPanel.install();\n        StatusPanel.this.update(currentPanel);\n      }\n    });\n    progressBarPanel = new JPanel();\n    progressBarPanel.setLayout(new BorderLayout());\n    progressBarPanel.setOpaque(false);\n\n    updateLabel = new JLabel(\" \");\n    updateLabel.setFont(buttonFont);\n    updateLabel.setHorizontalAlignment(SwingConstants.CENTER);\n\n    updateButton = new JButton(\"Update\", updateIcon);\n    updateButton.setDisabledIcon(updateIcon);\n    updateButton.setFont(buttonFont);\n    updateButton.setHorizontalAlignment(SwingConstants.LEFT);\n    updateButton.addActionListener(new ActionListener() {\n      public void actionPerformed(ActionEvent e) {\n        updateButton.setEnabled(false);\n        ContributionPanel currentPanel =\n          contributionTab.contributionListPanel.getSelectedPanel();\n        currentPanel.update();\n        StatusPanel.this.update(currentPanel);\n      }\n    });\n\n    removeButton = new JButton(\"Remove\", removeIcon);\n    removeButton.setDisabledIcon(removeIcon);\n    removeButton.setFont(buttonFont);\n    removeButton.setHorizontalAlignment(SwingConstants.LEFT);\n    removeButton.addActionListener(new ActionListener() {\n      public void actionPerformed(ActionEvent e) {\n        removeButton.setEnabled(false);\n        ContributionPanel currentPanel =\n          contributionTab.contributionListPanel.getSelectedPanel();\n        currentPanel.remove();\n        StatusPanel.this.update(currentPanel);\n      }\n    });\n\n    int labelWidth = (width != 0) ? (3 * width / 4) : GroupLayout.PREFERRED_SIZE;\n    layout = new GroupLayout(this);\n    this.setLayout(layout);\n\n    layout.setAutoCreateContainerGaps(true);\n    layout.setAutoCreateGaps(true);\n\n    layout.setHorizontalGroup(layout\n      .createSequentialGroup()\n      .addGap(0)\n      .addComponent(iconLabel, ContributionManagerDialog.STATUS_WIDTH, ContributionManagerDialog.STATUS_WIDTH, ContributionManagerDialog.STATUS_WIDTH)\n      .addGap(0)\n      .addComponent(label, labelWidth, labelWidth, labelWidth)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED,\n                       GroupLayout.PREFERRED_SIZE, Short.MAX_VALUE)\n      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER)\n                  .addComponent(installButton, BUTTON_WIDTH, BUTTON_WIDTH,\n                                BUTTON_WIDTH)\n                  .addComponent(progressBarPanel)\n                  .addComponent(updateLabel, BUTTON_WIDTH, BUTTON_WIDTH, BUTTON_WIDTH)\n                  .addComponent(updateButton)\n                  .addComponent(removeButton)));\n\n    layout.setVerticalGroup(layout\n      .createParallelGroup(GroupLayout.Alignment.LEADING)\n      .addComponent(iconLabel)\n      .addComponent(label)\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(installButton)\n                  .addGroup(layout.createParallelGroup()\n                              .addComponent(progressBarPanel)\n                              .addComponent(updateLabel))\n                  .addComponent(updateButton).addComponent(removeButton)));\n\n    layout.linkSize(SwingConstants.HORIZONTAL, installButton, progressBarPanel,\n                    updateButton, removeButton);\n\n    progressBarPanel.setVisible(false);\n    updateLabel.setVisible(false);\n\n    installButton.setEnabled(false);\n    updateButton.setEnabled(false);\n    removeButton.setEnabled(false);\n    updateLabel.setVisible(true);\n\n    layout.setHonorsVisibility(updateLabel, false); // Makes the label take up space even though not visible\n\n    validate();\n\n  }","commit_id":"15e9a31b0c61bc9d75fee27189f8151f62a57c40","url":"https://github.com/processing/processing"},{"original_method":"/**\n     * Write the ASF implements.\n     *\n     * @param writer not null\n     * @see <a href=\"http://svn.apache.org/repos/asf/infrastructure/site-tools/trunk/projects/asfext\">\n     *      http://svn.apache.org/repos/asf/infrastructure/site-tools/trunk/projects/asfext<\/a>\n     * @see <a href=\"http://projects.apache.org/docs/standards.html\">http://projects.apache.org/docs/standards.html<\/a>\n     */\n    private void writeASFImplements( XMLWriter writer )\n    {\n        if ( asfExtOptions.getStandards() == null || asfExtOptions.getStandards().isEmpty() )\n        {\n            return;\n        }\n\n        for ( Standard standard : asfExtOptions.getStandards() )\n        {\n            DoapUtil.writeStartElement( writer, asfExtOptions.getXmlnsPrefix(), \"implements\" );\n            DoapUtil.writeStartElement( writer, asfExtOptions.getXmlnsPrefix(), \"Standard\" );\n\n            if ( StringUtils.isEmpty( standard.getTitle() ) )\n            {\n                messages.addMessage( new String[] { \"asfExtOptions\", \"standards\", \"title\" }, null,\n                                     UserMessages.REQUIRED_BY_ASF );\n            }\n            else\n            {\n                DoapUtil.writeElement( writer, asfExtOptions.getXmlnsPrefix(), \"title\", standard.getTitle().trim() );\n            }\n\n            if ( StringUtils.isEmpty( standard.getBody() ) )\n            {\n                messages.addMessage( new String[] { \"asfExtOptions\", \"standards\", \"body\" }, null,\n                                     UserMessages.REQUIRED_BY_ASF );\n            }\n            else\n            {\n                DoapUtil.writeElement( writer, asfExtOptions.getXmlnsPrefix(), \"body\", standard.getBody().trim() );\n            }\n\n            if ( StringUtils.isEmpty( standard.getId() ) )\n            {\n                messages.addMessage( new String[] { \"asfExtOptions\", \"standards\", \"id\" }, null,\n                                     UserMessages.REQUIRED_BY_ASF );\n            }\n            else\n            {\n                DoapUtil.writeElement( writer, asfExtOptions.getXmlnsPrefix(), \"id\", standard.getId().trim() );\n            }\n\n            if ( StringUtils.isNotEmpty( standard.getUrl() ) )\n            {\n                try\n                {\n                    new URL( standard.getUrl().trim() );\n\n                    DoapUtil.writeElement( writer, asfExtOptions.getXmlnsPrefix(), \"url\", standard.getUrl().trim() );\n                }\n                catch ( MalformedURLException e )\n                {\n                    messages.addMessage( new String[] { \"asfExtOptions\", \"standards\", \"url\" },\n                                         standard.getUrl().trim(), UserMessages.INVALID_URL );\n                }\n            }\n\n            writer.endElement(); // asfext:Standard\n            writer.endElement(); // asfext:implements\n        }\n    }","id":15451,"modified_method":"/**\n     * Write the ASF implements.\n     *\n     * @param writer not null\n     * @see <a href=\"http://svn.apache.org/repos/asf/infrastructure/site-tools/trunk/projects/asfext\">\n     *      http://svn.apache.org/repos/asf/infrastructure/site-tools/trunk/projects/asfext<\/a>\n     * @see <a href=\"http://projects.apache.org/docs/standards.html\">http://projects.apache.org/docs/standards.html<\/a>\n     */\n    private void writeASFImplements( XMLWriter writer )\n    {\n        if ( asfExtOptions.getStandards() == null || asfExtOptions.getStandards().isEmpty() )\n        {\n            return;\n        }\n\n        for ( Standard standard : asfExtOptions.getStandards() )\n        {\n            DoapUtil.writeStartElement( writer, asfExtOptions.getXmlnsPrefix(), \"implements\" );\n            DoapUtil.writeStartElement( writer, asfExtOptions.getXmlnsPrefix(), \"Standard\" );\n\n            if ( StringUtils.isEmpty( standard.getTitle() ) )\n            {\n                messages.addMessage( new String[] { \"asfExtOptions\", \"standards\", \"title\" }, null,\n                                     UserMessages.REQUIRED_BY_ASF );\n            }\n            else\n            {\n                DoapUtil.writeElement( writer, asfExtOptions.getXmlnsPrefix(), \"title\", standard.getTitle().trim() );\n            }\n\n            if ( StringUtils.isEmpty( standard.getBody() ) )\n            {\n                messages.addMessage( new String[] { \"asfExtOptions\", \"standards\", \"body\" }, null,\n                                     UserMessages.REQUIRED_BY_ASF );\n            }\n            else\n            {\n                DoapUtil.writeElement( writer, asfExtOptions.getXmlnsPrefix(), \"body\", standard.getBody().trim() );\n            }\n\n            if ( StringUtils.isEmpty( standard.getId() ) )\n            {\n                messages.addMessage( new String[] { \"asfExtOptions\", \"standards\", \"id\" }, null,\n                                     UserMessages.REQUIRED_BY_ASF );\n            }\n            else\n            {\n                DoapUtil.writeElement( writer, asfExtOptions.getXmlnsPrefix(), \"id\", standard.getId().trim() );\n            }\n\n            if ( StringUtils.isNotEmpty( standard.getUrl() ) )\n            {\n                String standardUrl = standard.getUrl().trim();\n                try\n                {\n                    new URL( standardUrl );\n\n                    DoapUtil.writeElement( writer, asfExtOptions.getXmlnsPrefix(), \"url\", standardUrl );\n                }\n                catch ( MalformedURLException e )\n                {\n                    messages.addMessage( new String[] { \"asfExtOptions\", \"standards\", \"url\" }, standardUrl,\n                                         UserMessages.INVALID_URL );\n                }\n            }\n\n            writer.endElement(); // asfext:Standard\n            writer.endElement(); // asfext:implements\n        }\n    }","commit_id":"8dbdb4949bf44e059023176c6439030aa54faef7","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP vendor.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#vendor\">http://usefulinc.com/ns/doap#vendor<\/a>\n     * @since 1.1\n     */\n    private void writeVendor( XMLWriter writer, MavenProject project )\n    {\n        String vendor = interpolate( doapOptions.getVendor(), project, settings );\n        if ( StringUtils.isEmpty( vendor ) )\n        {\n            return;\n        }\n\n        DoapUtil.writeComment( writer, \"Vendor.\" );\n        DoapUtil.writeElement( writer, doapOptions.getXmlnsPrefix(), \"vendor\", vendor );\n    }","id":15452,"modified_method":"/**\n     * Write DOAP vendor.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#vendor\">http://usefulinc.com/ns/doap#vendor<\/a>\n     * @since 1.1\n     */\n    private void writeVendor( XMLWriter writer, MavenProject project )\n    {\n        String vendor = DoapUtil.interpolate( doapOptions.getVendor(), project, settings );\n        if ( StringUtils.isEmpty( vendor ) )\n        {\n            return;\n        }\n\n        DoapUtil.writeComment( writer, \"Vendor.\" );\n        DoapUtil.writeElement( writer, doapOptions.getXmlnsPrefix(), \"vendor\", vendor );\n    }","commit_id":"8dbdb4949bf44e059023176c6439030aa54faef7","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP screenshots.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#screenshots\">http://usefulinc.com/ns/doap#screenshots<\/a>\n     */\n    private void writeScreenshots( XMLWriter writer, MavenProject project )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getScreenshots() ) )\n        {\n            return;\n        }\n\n        String screenshots = doapOptions.getScreenshots().trim();\n        try\n        {\n            new URL( screenshots );\n        }\n        catch ( MalformedURLException e )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"screenshots\" }, screenshots, UserMessages.INVALID_URL );\n            return;\n        }\n\n        DoapUtil.writeComment( writer, \"Web page with screenshots of project.\" );\n        DoapUtil.writeRdfResourceElement( writer, doapOptions.getXmlnsPrefix(), \"screenshots\", screenshots );\n    }","id":15453,"modified_method":"/**\n     * Write DOAP screenshots.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#screenshots\">http://usefulinc.com/ns/doap#screenshots<\/a>\n     */\n    private void writeScreenshots( XMLWriter writer, MavenProject project )\n    {\n        String screenshots = DoapUtil.interpolate( doapOptions.getScreenshots(), project, settings );\n        if ( StringUtils.isEmpty( screenshots ) )\n        {\n            return;\n        }\n\n        screenshots = screenshots.trim();\n        try\n        {\n            new URL( screenshots );\n        }\n        catch ( MalformedURLException e )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"screenshots\" }, screenshots, UserMessages.INVALID_URL );\n            return;\n        }\n\n        DoapUtil.writeComment( writer, \"Web page with screenshots of project.\" );\n        DoapUtil.writeRdfResourceElement( writer, doapOptions.getXmlnsPrefix(), \"screenshots\", screenshots );\n    }","commit_id":"8dbdb4949bf44e059023176c6439030aa54faef7","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP plateform.\n     *\n     * @param writer not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#plateform\">http://usefulinc.com/ns/doap#plateform<\/a>\n     * @since 1.1\n     */\n    private void writePlateform( XMLWriter writer )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getPlatform() ) )\n        {\n            return;\n        }\n\n        DoapUtil.writeComment( writer, \"Plateform.\" );\n        DoapUtil.writeElement( writer, doapOptions.getXmlnsPrefix(), \"plateform\", doapOptions.getPlatform().trim() );\n    }","id":15454,"modified_method":"/**\n     * Write DOAP plateform.\n     *\n     * @param writer not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#plateform\">http://usefulinc.com/ns/doap#plateform<\/a>\n     * @since 1.1\n     */\n    private void writePlateform( XMLWriter writer )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getPlatform() ) )\n        {\n            return;\n        }\n\n        DoapUtil.writeComment( writer, \"Platform.\" );\n        String[] platforms = StringUtils.split( doapOptions.getPlatform(), \",\" );\n        for ( String platform : platforms )\n        {\n            DoapUtil.writeElement( writer, doapOptions.getXmlnsPrefix(), \"platform\", platform.trim() );\n        }\n    }","commit_id":"8dbdb4949bf44e059023176c6439030aa54faef7","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write all DOAP repositories.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#Repository\">http://usefulinc.com/ns/doap#Repository<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#CVSRepository\">http://usefulinc.com/ns/doap#CVSRepository<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#SVNRepository\">http://usefulinc.com/ns/doap#SVNRepository<\/a>\n     */\n    private void writeSourceRepositories( XMLWriter writer, MavenProject project )\n    {\n        Scm scm = project.getScm();\n        if ( scm == null )\n        {\n            messages.addMessage( new String[] { \"project\", \"scm\" }, null, UserMessages.REQUIRED_BY_ASF_OR_RECOMMENDED );\n            return;\n        }\n\n        String anonymousConnection = scm.getConnection();\n        if ( StringUtils.isNotEmpty( anonymousConnection ) )\n        {\n            DoapUtil.writeComment( writer, \"Anonymous Source Repository\" );\n            writeSourceRepository( writer, project, anonymousConnection );\n        }\n\n        String developerConnection = scm.getDeveloperConnection();\n        if ( StringUtils.isNotEmpty( developerConnection ) )\n        {\n            DoapUtil.writeComment( writer, \"Developer Source Repository\" );\n            writeSourceRepository( writer, project, developerConnection );\n        }\n    }","id":15455,"modified_method":"/**\n     * Write all DOAP repositories.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#Repository\">http://usefulinc.com/ns/doap#Repository<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#CVSRepository\">http://usefulinc.com/ns/doap#CVSRepository<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#SVNRepository\">http://usefulinc.com/ns/doap#SVNRepository<\/a>\n     */\n    private void writeSourceRepositories( XMLWriter writer, MavenProject project )\n    {\n        String anonymousConnection = DoapUtil.interpolate( doapOptions.getScmAnonymous(), project, settings );\n        if ( StringUtils.isEmpty( anonymousConnection ) )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"scmAnonymousConnection\" }, null,\n                                 UserMessages.REQUIRED_BY_ASF_OR_RECOMMENDED );\n        }\n        else\n        {\n            DoapUtil.writeComment( writer, \"Anonymous Source Repository.\" );\n\n            try\n            {\n                new URL( anonymousConnection );\n\n                DoapUtil.writeStartElement( writer, doapOptions.getXmlnsPrefix(), \"repository\" );\n                DoapUtil.writeStartElement( writer, doapOptions.getXmlnsPrefix(), \"Repository\" );\n                DoapUtil.writeRdfResourceElement( writer, doapOptions.getXmlnsPrefix(), \"location\", anonymousConnection );\n                writer.endElement(); // Repository\n                writer.endElement(); // repository\n            }\n            catch ( MalformedURLException e )\n            {\n                writeSourceRepository( writer, project, anonymousConnection );\n            }\n        }\n\n        String devConnection = DoapUtil.interpolate( doapOptions.getScmDeveloper(), project, settings );\n        if ( StringUtils.isEmpty( devConnection ) )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"scmDeveloperConnection\" }, null,\n                                 UserMessages.REQUIRED_BY_ASF_OR_RECOMMENDED );\n        }\n        else\n        {\n            DoapUtil.writeComment( writer, \"Developer Source Repository.\" );\n\n            try\n            {\n                new URL( devConnection );\n\n                DoapUtil.writeStartElement( writer, doapOptions.getXmlnsPrefix(), \"repository\" );\n                DoapUtil.writeStartElement( writer, doapOptions.getXmlnsPrefix(), \"Repository\" );\n                DoapUtil.writeRdfResourceElement( writer, doapOptions.getXmlnsPrefix(), \"location\", devConnection );\n                writer.endElement(); // Repository\n                writer.endElement(); // repository\n            }\n            catch ( MalformedURLException e )\n            {\n                writeSourceRepository( writer, project, devConnection );\n            }\n        }\n    }","commit_id":"8dbdb4949bf44e059023176c6439030aa54faef7","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP created.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#created\">http://usefulinc.com/ns/doap#created<\/a>\n     */\n    private void writeCreated( XMLWriter writer, MavenProject project )\n    {\n        String created = interpolate( doapOptions.getCreated(), project, settings );\n        if ( StringUtils.isEmpty( created ) )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"created\" }, null,\n                                 UserMessages.REQUIRED_BY_ASF_OR_RECOMMENDED );\n            return;\n        }\n\n        try\n        {\n            DOAP_DATE_FORMAT.parse( created );\n        }\n        catch ( ParseException e )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"created\" }, null, UserMessages.INVALID_DATE );\n            return;\n        }\n\n        DoapUtil.writeComment( writer, \"Date when something was created, in YYYY-MM-DD form. e.g. 2004-04-05\" );\n        DoapUtil.writeElement( writer, doapOptions.getXmlnsPrefix(), \"created\", created );\n    }","id":15456,"modified_method":"/**\n     * Write DOAP created.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#created\">http://usefulinc.com/ns/doap#created<\/a>\n     */\n    private void writeCreated( XMLWriter writer, MavenProject project )\n    {\n        String created = DoapUtil.interpolate( doapOptions.getCreated(), project, settings );\n        if ( StringUtils.isEmpty( created ) )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"created\" }, null,\n                                 UserMessages.REQUIRED_BY_ASF_OR_RECOMMENDED );\n            return;\n        }\n\n        try\n        {\n            DOAP_DATE_FORMAT.parse( created );\n        }\n        catch ( ParseException e )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"created\" }, null, UserMessages.INVALID_DATE );\n            return;\n        }\n\n        DoapUtil.writeComment( writer, \"Date when something was created, in YYYY-MM-DD form. e.g. 2004-04-05\" );\n        DoapUtil.writeElement( writer, doapOptions.getXmlnsPrefix(), \"created\", created );\n    }","commit_id":"8dbdb4949bf44e059023176c6439030aa54faef7","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP name.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#name\">http://usefulinc.com/ns/doap#name<\/a>\n     */\n    private void writeName( XMLWriter writer, MavenProject project )\n    {\n        String name = interpolate( doapOptions.getName(), project, settings );\n        if ( StringUtils.isEmpty( name ) )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"name\" }, null, UserMessages.REQUIRED_BY_ASF_OR_RECOMMENDED );\n            return;\n        }\n\n        DoapUtil.writeComment( writer, \"A name of something.\" );\n\n        if ( asfExtOptions.isIncluded() && !name.toLowerCase( Locale.ENGLISH ).startsWith( \"apache\" ) )\n        {\n            DoapUtil.writeElement( writer, doapOptions.getXmlnsPrefix(), \"name\", \"Apache \" + name );\n        }\n        else\n        {\n            DoapUtil.writeElement( writer, doapOptions.getXmlnsPrefix(), \"name\", name );\n        }\n    }","id":15457,"modified_method":"/**\n     * Write DOAP name.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#name\">http://usefulinc.com/ns/doap#name<\/a>\n     */\n    private void writeName( XMLWriter writer, MavenProject project )\n    {\n        String name = DoapUtil.interpolate( doapOptions.getName(), project, settings );\n        if ( StringUtils.isEmpty( name ) )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"name\" }, null,\n                                 UserMessages.REQUIRED_BY_ASF_OR_RECOMMENDED );\n            return;\n        }\n\n        DoapUtil.writeComment( writer, \"A name of something.\" );\n        if ( ASFExtOptionsUtil.isASFProject( project ) && !name.toLowerCase( Locale.ENGLISH ).startsWith( \"apache\" ) )\n        {\n            name = \"Apache \" + name;\n        }\n        DoapUtil.writeElement( writer, doapOptions.getXmlnsPrefix(), \"name\", name );\n    }","commit_id":"8dbdb4949bf44e059023176c6439030aa54faef7","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP description.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#description\">http://usefulinc.com/ns/doap#description<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#shortdesc\">http://usefulinc.com/ns/doap#shortdesc<\/a>\n     */\n    private void writeDescription( XMLWriter writer, MavenProject project )\n    {\n        boolean addComment = false;\n        String description = interpolate( doapOptions.getDescription(), project, settings );\n        if ( StringUtils.isEmpty( description ) )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"description\" }, null,\n                                 UserMessages.REQUIRED_BY_ASF_OR_RECOMMENDED );\n        }\n        else\n        {\n            DoapUtil.writeComment( writer, \"Plain text description of a project, of 2-4 sentences in length.\" );\n            addComment = true;\n            DoapUtil.writeElement( writer, doapOptions.getXmlnsPrefix(), \"description\", description, lang );\n        }\n\n        String comment = \"Short plain text description of a project.\";\n        String shortdesc = interpolate( doapOptions.getShortdesc(), project, settings );\n        if ( StringUtils.isEmpty( shortdesc ) )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"shortdesc\" }, null,\n                                 UserMessages.REQUIRED_BY_ASF_OR_RECOMMENDED );\n            return;\n        }\n        if ( description.equals( shortdesc ) )\n        {\n            // try to get the first 10 words of the description\n            String sentence = StringUtils.split( shortdesc, \".\" )[0];\n            if ( StringUtils.split( sentence, \" \" ).length > 10 )\n            {\n                messages.addMessage( new String[] { \"doapOptions\", \"shortdesc\" }, null,\n                                     UserMessages.REQUIRED_BY_ASF_OR_RECOMMENDED );\n                return;\n            }\n            if ( !addComment )\n            {\n                DoapUtil.writeComment( writer, comment );\n            }\n            DoapUtil.writeElement( writer, doapOptions.getXmlnsPrefix(), \"shortdesc\", sentence, lang );\n            return;\n        }\n        if ( !addComment )\n        {\n            DoapUtil.writeComment( writer, comment );\n        }\n        DoapUtil.writeElement( writer, doapOptions.getXmlnsPrefix(), \"shortdesc\", shortdesc, lang );\n    }","id":15458,"modified_method":"/**\n     * Write DOAP description.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#description\">http://usefulinc.com/ns/doap#description<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#shortdesc\">http://usefulinc.com/ns/doap#shortdesc<\/a>\n     */\n    private void writeDescription( XMLWriter writer, MavenProject project )\n    {\n        boolean addComment = false;\n        String description = DoapUtil.interpolate( doapOptions.getDescription(), project, settings );\n        if ( StringUtils.isEmpty( description ) )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"description\" }, null,\n                                 UserMessages.REQUIRED_BY_ASF_OR_RECOMMENDED );\n        }\n        else\n        {\n            DoapUtil.writeComment( writer, \"Plain text description of a project, of 2-4 sentences in length.\" );\n            addComment = true;\n            DoapUtil.writeElement( writer, doapOptions.getXmlnsPrefix(), \"description\", description, lang );\n        }\n\n        String comment = \"Short plain text description of a project.\";\n        String shortdesc = DoapUtil.interpolate( doapOptions.getShortdesc(), project, settings );\n        if ( StringUtils.isEmpty( shortdesc ) )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"shortdesc\" }, null,\n                                 UserMessages.REQUIRED_BY_ASF_OR_RECOMMENDED );\n            return;\n        }\n        if ( description.equals( shortdesc ) )\n        {\n            // try to get the first 10 words of the description\n            String sentence = StringUtils.split( shortdesc, \".\" )[0];\n            if ( StringUtils.split( sentence, \" \" ).length > 10 )\n            {\n                messages.addMessage( new String[] { \"doapOptions\", \"shortdesc\" }, null,\n                                     UserMessages.REQUIRED_BY_ASF_OR_RECOMMENDED );\n                return;\n            }\n            if ( !addComment )\n            {\n                DoapUtil.writeComment( writer, comment );\n            }\n            DoapUtil.writeElement( writer, doapOptions.getXmlnsPrefix(), \"shortdesc\", sentence, lang );\n            return;\n        }\n        if ( !addComment )\n        {\n            DoapUtil.writeComment( writer, comment );\n        }\n        DoapUtil.writeElement( writer, doapOptions.getXmlnsPrefix(), \"shortdesc\", shortdesc, lang );\n    }","commit_id":"8dbdb4949bf44e059023176c6439030aa54faef7","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP wiki.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#wiki\">http://usefulinc.com/ns/doap#wiki<\/a>\n     */\n    private void writeWiki( XMLWriter writer, MavenProject project )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getWiki() ) )\n        {\n            return;\n        }\n\n        String wiki = doapOptions.getWiki().trim();\n        try\n        {\n            new URL( wiki );\n        }\n        catch ( MalformedURLException e )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"wiki\" }, wiki, UserMessages.INVALID_URL );\n            return;\n        }\n\n        DoapUtil.writeComment( writer, \"URL of Wiki for collaborative discussion of project.\" );\n        DoapUtil.writeRdfResourceElement( writer, doapOptions.getXmlnsPrefix(), \"wiki\", wiki );\n    }","id":15459,"modified_method":"/**\n     * Write DOAP wiki.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#wiki\">http://usefulinc.com/ns/doap#wiki<\/a>\n     */\n    private void writeWiki( XMLWriter writer, MavenProject project )\n    {\n        String wiki = DoapUtil.interpolate( doapOptions.getWiki(), project, settings );\n        if ( StringUtils.isEmpty( wiki ) )\n        {\n            return;\n        }\n\n        wiki = wiki.trim();\n        try\n        {\n            new URL( wiki );\n        }\n        catch ( MalformedURLException e )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"wiki\" }, wiki, UserMessages.INVALID_URL );\n            return;\n        }\n\n        DoapUtil.writeComment( writer, \"URL of Wiki for collaborative discussion of project.\" );\n        DoapUtil.writeRdfResourceElement( writer, doapOptions.getXmlnsPrefix(), \"wiki\", wiki );\n    }","commit_id":"8dbdb4949bf44e059023176c6439030aa54faef7","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP service-endpoint.\n     *\n     * @param writer not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#service-endpoint\">http://usefulinc.com/ns/doap#service-endpoint<\/a>\n     * @since 1.1\n     */\n    private void writeServiceEndpoint( XMLWriter writer )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getServiceEndpoint() ) )\n        {\n            return;\n        }\n\n        String serviceEndpoint = doapOptions.getServiceEndpoint().trim();\n        try\n        {\n            new URL( serviceEndpoint );\n        }\n        catch ( MalformedURLException e )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"serviceEndpoint\" }, serviceEndpoint,\n                                 UserMessages.INVALID_URL );\n            return;\n        }\n\n        DoapUtil.writeComment( writer, \"Service endpoint.\" );\n        DoapUtil.writeRdfResourceElement( writer, doapOptions.getXmlnsPrefix(), \"service-endpoint\", serviceEndpoint );\n    }","id":15460,"modified_method":"/**\n     * Write DOAP service-endpoint.\n     *\n     * @param writer not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#service-endpoint\">http://usefulinc.com/ns/doap#service-endpoint<\/a>\n     * @since 1.1\n     */\n    private void writeServiceEndpoint( XMLWriter writer )\n    {\n        String serviceEndpoint = DoapUtil.interpolate( doapOptions.getServiceEndpoint(), project, settings );\n        if ( StringUtils.isEmpty( serviceEndpoint ) )\n        {\n            return;\n        }\n\n        serviceEndpoint = serviceEndpoint.trim();\n        try\n        {\n            new URL( serviceEndpoint );\n        }\n        catch ( MalformedURLException e )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"serviceEndpoint\" }, serviceEndpoint,\n                                 UserMessages.INVALID_URL );\n            return;\n        }\n\n        DoapUtil.writeComment( writer, \"Service endpoint.\" );\n        DoapUtil.writeRdfResourceElement( writer, doapOptions.getXmlnsPrefix(), \"service-endpoint\", serviceEndpoint );\n    }","commit_id":"8dbdb4949bf44e059023176c6439030aa54faef7","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP blog.\n     *\n     * @param writer not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#blog\">http://usefulinc.com/ns/doap#blog<\/a>\n     * @since 1.1\n     */\n    private void writeBlog( XMLWriter writer )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getBlog() ) )\n        {\n            return;\n        }\n\n        String blog = doapOptions.getBlog().trim();\n        try\n        {\n            new URL( blog );\n        }\n        catch ( MalformedURLException e )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"blog\" }, blog, UserMessages.INVALID_URL );\n            return;\n        }\n\n        DoapUtil.writeComment( writer, \"Blog page.\" );\n        DoapUtil.writeRdfResourceElement( writer, doapOptions.getXmlnsPrefix(), \"blog\", blog );\n    }","id":15461,"modified_method":"/**\n     * Write DOAP blog.\n     *\n     * @param writer not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#blog\">http://usefulinc.com/ns/doap#blog<\/a>\n     * @since 1.1\n     */\n    private void writeBlog( XMLWriter writer )\n    {\n        String blog = DoapUtil.interpolate( doapOptions.getBlog(), project, settings );\n        if ( StringUtils.isEmpty( doapOptions.getBlog() ) )\n        {\n            return;\n        }\n\n        blog = blog.trim();\n        try\n        {\n            new URL( blog );\n        }\n        catch ( MalformedURLException e )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"blog\" }, blog, UserMessages.INVALID_URL );\n            return;\n        }\n\n        DoapUtil.writeComment( writer, \"Blog page.\" );\n        DoapUtil.writeRdfResourceElement( writer, doapOptions.getXmlnsPrefix(), \"blog\", blog );\n    }","commit_id":"8dbdb4949bf44e059023176c6439030aa54faef7","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP download-page and download-mirror.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#download-page\">http://usefulinc.com/ns/doap#download-page<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#download-mirror\">http://usefulinc.com/ns/doap#download-mirror<\/a>\n     */\n    private void writeDownloadPage( XMLWriter writer, MavenProject project )\n    {\n        String downloadPage = interpolate( doapOptions.getDownloadPage(), project, settings );\n        if ( StringUtils.isEmpty( downloadPage ) )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"downloadPage\" }, null,\n                                 UserMessages.REQUIRED_BY_ASF_OR_RECOMMENDED );\n            return;\n        }\n\n        try\n        {\n            new URL( downloadPage );\n\n            DoapUtil.writeComment( writer, \"Download page.\" );\n            DoapUtil.writeRdfResourceElement( writer, doapOptions.getXmlnsPrefix(), \"download-page\", downloadPage );\n        }\n        catch ( MalformedURLException e )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"downloadPage\" }, downloadPage, UserMessages.INVALID_URL );\n        }\n\n        if ( StringUtils.isNotEmpty( doapOptions.getDownloadMirror() ) )\n        {\n            boolean addComment = false;\n            String[] downloadMirrors = StringUtils.split( doapOptions.getDownloadMirror(), \",\" );\n            for ( String downloadMirror : downloadMirrors )\n            {\n                downloadMirror = downloadMirror.trim();\n\n                try\n                {\n                    new URL( downloadMirror );\n\n                    if ( !addComment )\n                    {\n                        DoapUtil.writeComment( writer, \"Mirror of software download web page.\" );\n                        addComment = true;\n                    }\n                    DoapUtil.writeRdfResourceElement( writer, doapOptions.getXmlnsPrefix(), \"download-mirror\",\n                                                      downloadMirror );\n                }\n                catch ( MalformedURLException e )\n                {\n                    messages.addMessage( new String[] { \"doapOptions\", \"downloadMirror\" }, downloadMirror,\n                                         UserMessages.INVALID_URL );\n                }\n            }\n        }\n    }","id":15462,"modified_method":"/**\n     * Write DOAP download-page and download-mirror.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#download-page\">http://usefulinc.com/ns/doap#download-page<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#download-mirror\">http://usefulinc.com/ns/doap#download-mirror<\/a>\n     */\n    private void writeDownloadPage( XMLWriter writer, MavenProject project )\n    {\n        String downloadPage = DoapUtil.interpolate( doapOptions.getDownloadPage(), project, settings );\n        if ( StringUtils.isEmpty( downloadPage ) )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"downloadPage\" }, null,\n                                 UserMessages.REQUIRED_BY_ASF_OR_RECOMMENDED );\n            return;\n        }\n\n        try\n        {\n            new URL( downloadPage );\n\n            DoapUtil.writeComment( writer, \"Download page.\" );\n            DoapUtil.writeRdfResourceElement( writer, doapOptions.getXmlnsPrefix(), \"download-page\", downloadPage );\n        }\n        catch ( MalformedURLException e )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"downloadPage\" }, downloadPage, UserMessages.INVALID_URL );\n        }\n\n        if ( StringUtils.isNotEmpty( doapOptions.getDownloadMirror() ) )\n        {\n            boolean addComment = false;\n            String[] downloadMirrors = StringUtils.split( doapOptions.getDownloadMirror(), \",\" );\n            for ( String downloadMirror : downloadMirrors )\n            {\n                downloadMirror = downloadMirror.trim();\n\n                try\n                {\n                    new URL( downloadMirror );\n\n                    if ( !addComment )\n                    {\n                        DoapUtil.writeComment( writer, \"Mirror of software download web page.\" );\n                        addComment = true;\n                    }\n                    DoapUtil.writeRdfResourceElement( writer, doapOptions.getXmlnsPrefix(), \"download-mirror\",\n                                                      downloadMirror );\n                }\n                catch ( MalformedURLException e )\n                {\n                    messages.addMessage( new String[] { \"doapOptions\", \"downloadMirror\" }, downloadMirror,\n                                         UserMessages.INVALID_URL );\n                }\n            }\n        }\n    }","commit_id":"8dbdb4949bf44e059023176c6439030aa54faef7","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP licenses.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#license\">http://usefulinc.com/ns/doap#license<\/a>\n     */\n    private void writeLicenses( XMLWriter writer, MavenProject project )\n    {\n        if ( project.getLicenses() == null || project.getLicenses().isEmpty() )\n        {\n            messages.addMessage( new String[] { \"project\", \"licenses\" }, null, UserMessages.REQUIRED_BY_ASF_OR_RECOMMENDED );\n            return;\n        }\n\n        DoapUtil.writeComment( writer, \"The URI of the license the software is distributed under.\" );\n        // TODO: how to map to usefulinc site, or if this is necessary, the OSI page might\n        // be more appropriate.\n        @SuppressWarnings( \"unchecked\" )\n        List<License> licenses = project.getLicenses();\n        for ( License license : licenses )\n        {\n            if ( StringUtils.isEmpty( license.getUrl() ) )\n            {\n                continue;\n            }\n\n            String licenseUrl = license.getUrl().trim();\n            try\n            {\n                new URL( licenseUrl );\n\n                DoapUtil.writeRdfResourceElement( writer, doapOptions.getXmlnsPrefix(), \"license\", licenseUrl );\n            }\n            catch ( MalformedURLException e )\n            {\n                messages.addMessage( new String[] { \"project\", \"licenses\", \"license\", \"url\" }, licenseUrl,\n                                     UserMessages.INVALID_URL );\n            }\n        }\n    }","id":15463,"modified_method":"/**\n     * Write DOAP licenses.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#license\">http://usefulinc.com/ns/doap#license<\/a>\n     */\n    private void writeLicenses( XMLWriter writer, MavenProject project )\n    {\n        String license = DoapUtil.interpolate( doapOptions.getLicense(), project, settings );\n        if ( StringUtils.isEmpty( license ) )\n        {\n            boolean added = false;\n            @SuppressWarnings( \"unchecked\" )\n            List<License> licenses = project.getLicenses();\n            if ( licenses.size() > 1 )\n            {\n                for ( int i = 1; i < licenses.size(); i++ )\n                {\n                    if ( StringUtils.isEmpty( licenses.get( i ).getUrl() ) )\n                    {\n                        continue;\n                    }\n\n                    String licenseUrl = licenses.get( i ).getUrl().trim();\n                    try\n                    {\n                        new URL( licenseUrl );\n\n                        DoapUtil.writeRdfResourceElement( writer, doapOptions.getXmlnsPrefix(), \"license\", licenseUrl );\n                        added = true;\n                    }\n                    catch ( MalformedURLException e )\n                    {\n                        messages.addMessage( new String[] { \"project\", \"licenses\", \"license\", \"url\" }, licenseUrl,\n                                             UserMessages.INVALID_URL );\n                    }\n                }\n            }\n\n            if ( !added )\n            {\n                messages.addMessage( new String[] { \"doapOptions\", \"license\" }, null,\n                                     UserMessages.REQUIRED_BY_ASF_OR_RECOMMENDED );\n            }\n            return;\n        }\n\n        try\n        {\n            new URL( license );\n\n            DoapUtil.writeComment( writer, \"The URI of the license the software is distributed under.\" );\n            DoapUtil.writeRdfResourceElement( writer, doapOptions.getXmlnsPrefix(), \"license\", license );\n        }\n        catch ( MalformedURLException e )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"license\" }, license, UserMessages.INVALID_URL );\n        }\n    }","commit_id":"8dbdb4949bf44e059023176c6439030aa54faef7","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write all DOAP persons.\n     *\n     * @param writer not null\n     * @param contributors list of developers or contributors\n     */\n    private void writeContributors( XMLWriter writer, List<Contributor> contributors )\n    {\n        if ( contributors == null || contributors.isEmpty() )\n        {\n            // no msg there, only dev are req\n            return;\n        }\n\n        boolean isDeveloper = Developer.class.isAssignableFrom( contributors.get( 0 ).getClass() );\n        if ( isDeveloper )\n        {\n            DoapUtil.writeComment( writer, \"Main committers\" );\n        }\n        else\n        {\n            DoapUtil.writeComment( writer, \"Contributed persons\" );\n        }\n\n        List<Contributor> maintainers = DoapUtil.getContributorsWithMaintainerRole( i18n, contributors );\n        List<Contributor> developers = DoapUtil.getContributorsWithDeveloperRole( i18n, contributors );\n        List<Contributor> documenters = DoapUtil.getContributorsWithDocumenterRole( i18n, contributors );\n        List<Contributor> translators = DoapUtil.getContributorsWithTranslatorRole( i18n, contributors );\n        List<Contributor> testers = DoapUtil.getContributorsWithTesterRole( i18n, contributors );\n        List<Contributor> helpers = DoapUtil.getContributorsWithHelperRole( i18n, contributors );\n        List<Contributor> unknowns = DoapUtil.getContributorsWithUnknownRole( i18n, contributors );\n\n        // By default, all developers are maintainers and contributors are helpers\n        if ( isDeveloper )\n        {\n            maintainers.addAll( unknowns );\n        }\n        else\n        {\n            helpers.addAll( unknowns );\n        }\n\n        // all alphabetical\n        if ( developers.size() != 0 )\n        {\n            writeContributor( writer, developers, \"developer\" );\n        }\n        if ( documenters.size() != 0 )\n        {\n            writeContributor( writer, documenters, \"documenter\" );\n        }\n        if ( helpers.size() != 0 )\n        {\n            writeContributor( writer, helpers, \"helper\" );\n        }\n        if ( maintainers.size() != 0 )\n        {\n            writeContributor( writer, maintainers, \"maintainer\" );\n        }\n        if ( testers.size() != 0 )\n        {\n            writeContributor( writer, testers, \"tester\" );\n        }\n        if ( translators.size() != 0 )\n        {\n            writeContributor( writer, translators, \"translator\" );\n        }\n    }","id":15464,"modified_method":"/**\n     * Write all DOAP persons.\n     *\n     * @param writer not null\n     * @param contributors list of developers or contributors\n     */\n    private void writeContributors( XMLWriter writer, List<Contributor> contributors )\n    {\n        if ( contributors == null || contributors.isEmpty() )\n        {\n            return;\n        }\n\n        boolean isDeveloper = Developer.class.isAssignableFrom( contributors.get( 0 ).getClass() );\n        if ( isDeveloper )\n        {\n            DoapUtil.writeComment( writer, \"Main committers.\" );\n        }\n        else\n        {\n            DoapUtil.writeComment( writer, \"Contributed persons.\" );\n        }\n\n        List<Contributor> maintainers = DoapUtil.getContributorsWithMaintainerRole( i18n, contributors );\n        List<Contributor> developers = DoapUtil.getContributorsWithDeveloperRole( i18n, contributors );\n        List<Contributor> documenters = DoapUtil.getContributorsWithDocumenterRole( i18n, contributors );\n        List<Contributor> translators = DoapUtil.getContributorsWithTranslatorRole( i18n, contributors );\n        List<Contributor> testers = DoapUtil.getContributorsWithTesterRole( i18n, contributors );\n        List<Contributor> helpers = DoapUtil.getContributorsWithHelperRole( i18n, contributors );\n        List<Contributor> unknowns = DoapUtil.getContributorsWithUnknownRole( i18n, contributors );\n\n        // By default, all developers are maintainers and contributors are helpers\n        if ( isDeveloper )\n        {\n            maintainers.addAll( unknowns );\n        }\n        else\n        {\n            helpers.addAll( unknowns );\n        }\n\n        // all alphabetical\n        if ( developers.size() != 0 )\n        {\n            writeContributor( writer, developers, \"developer\" );\n        }\n        if ( documenters.size() != 0 )\n        {\n            writeContributor( writer, documenters, \"documenter\" );\n        }\n        if ( helpers.size() != 0 )\n        {\n            writeContributor( writer, helpers, \"helper\" );\n        }\n        if ( maintainers.size() != 0 )\n        {\n            writeContributor( writer, maintainers, \"maintainer\" );\n        }\n        if ( testers.size() != 0 )\n        {\n            writeContributor( writer, testers, \"tester\" );\n        }\n        if ( translators.size() != 0 )\n        {\n            writeContributor( writer, translators, \"translator\" );\n        }\n    }","commit_id":"8dbdb4949bf44e059023176c6439030aa54faef7","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP homepage and old-homepage.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#homepage\">http://usefulinc.com/ns/doap#homepage<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#old-homepage\">http://usefulinc.com/ns/doap#old-homepage<\/a>\n     */\n    private void writeHomepage( XMLWriter writer, MavenProject project )\n    {\n        String homepage = interpolate( doapOptions.getHomepage(), project, settings );\n        if ( StringUtils.isEmpty( homepage ) )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"homepage\" }, null,\n                                 UserMessages.REQUIRED_BY_ASF_OR_RECOMMENDED );\n        }\n        else\n        {\n            try\n            {\n                new URL( homepage );\n\n                DoapUtil.writeComment( writer, \"URL of a project's homepage, associated with exactly one project.\" );\n                DoapUtil.writeRdfResourceElement( writer, doapOptions.getXmlnsPrefix(), \"homepage\", homepage );\n            }\n            catch ( MalformedURLException e )\n            {\n                messages.addMessage( new String[] { \"doapOptions\", \"homepage\" }, homepage, UserMessages.INVALID_URL );\n            }\n        }\n\n        if ( StringUtils.isNotEmpty( doapOptions.getOldHomepage() ) )\n        {\n            String oldHomepage = interpolate( doapOptions.getOldHomepage(), project, settings );\n            if ( StringUtils.isEmpty( oldHomepage ) )\n            {\n                return;\n            }\n\n            try\n            {\n                new URL( oldHomepage );\n\n                DoapUtil.writeComment( writer, \"URL of a project's past homepage, associated with exactly one project.\" );\n                DoapUtil.writeRdfResourceElement( writer, doapOptions.getXmlnsPrefix(), \"old-homepage\", oldHomepage );\n            }\n            catch ( MalformedURLException e )\n            {\n                messages.addMessage( new String[] { \"doapOptions\", \"oldHomepage\" }, oldHomepage, UserMessages.INVALID_URL );\n            }\n        }\n    }","id":15465,"modified_method":"/**\n     * Write DOAP homepage and old-homepage.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#homepage\">http://usefulinc.com/ns/doap#homepage<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#old-homepage\">http://usefulinc.com/ns/doap#old-homepage<\/a>\n     */\n    private void writeHomepage( XMLWriter writer, MavenProject project )\n    {\n        String homepage = DoapUtil.interpolate( doapOptions.getHomepage(), project, settings );\n        if ( StringUtils.isEmpty( homepage ) )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"homepage\" }, null,\n                                 UserMessages.REQUIRED_BY_ASF_OR_RECOMMENDED );\n        }\n        else\n        {\n            try\n            {\n                new URL( homepage );\n\n                DoapUtil.writeComment( writer, \"URL of a project's homepage, associated with exactly one project.\" );\n                DoapUtil.writeRdfResourceElement( writer, doapOptions.getXmlnsPrefix(), \"homepage\", homepage );\n            }\n            catch ( MalformedURLException e )\n            {\n                messages.addMessage( new String[] { \"doapOptions\", \"homepage\" }, homepage, UserMessages.INVALID_URL );\n            }\n        }\n\n        if ( StringUtils.isNotEmpty( doapOptions.getOldHomepage() ) )\n        {\n            String oldHomepage = DoapUtil.interpolate( doapOptions.getOldHomepage(), project, settings );\n            if ( StringUtils.isEmpty( oldHomepage ) )\n            {\n                return;\n            }\n\n            try\n            {\n                new URL( oldHomepage );\n\n                DoapUtil.writeComment( writer, \"URL of a project's past homepage, associated with exactly one project.\" );\n                DoapUtil.writeRdfResourceElement( writer, doapOptions.getXmlnsPrefix(), \"old-homepage\", oldHomepage );\n            }\n            catch ( MalformedURLException e )\n            {\n                messages.addMessage( new String[] { \"doapOptions\", \"oldHomepage\" }, oldHomepage,\n                                     UserMessages.INVALID_URL );\n            }\n        }\n    }","commit_id":"8dbdb4949bf44e059023176c6439030aa54faef7","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP OS.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#os\">http://usefulinc.com/ns/doap#os<\/a>\n     */\n    private void writeOS( XMLWriter writer, MavenProject project )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getOs() ) )\n        {\n            return;\n        }\n\n        DoapUtil.writeComment( writer, \"Operating system that a project is limited to.\" );\n        String[] oses = StringUtils.split( doapOptions.getOs(), \",\" );\n        for ( String os : oses )\n        {\n            DoapUtil.writeElement( writer, doapOptions.getXmlnsPrefix(), \"os\", os.trim() );\n        }\n    }","id":15466,"modified_method":"/**\n     * Write DOAP OS.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#os\">http://usefulinc.com/ns/doap#os<\/a>\n     */\n    private void writeOS( XMLWriter writer, MavenProject project )\n    {\n        String os = DoapUtil.interpolate( doapOptions.getOs(), project, settings );\n        if ( StringUtils.isEmpty( os ) )\n        {\n            return;\n        }\n\n        DoapUtil.writeComment( writer, \"Operating system that a project is limited to.\" );\n        String[] oses = StringUtils.split( os, \",\" );\n        for ( String os_ : oses )\n        {\n            DoapUtil.writeElement( writer, doapOptions.getXmlnsPrefix(), \"os\", os_.trim() );\n        }\n    }","commit_id":"8dbdb4949bf44e059023176c6439030aa54faef7","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP bug-database.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#bug-database\">http://usefulinc.com/ns/doap#bug-database<\/a>\n     */\n    private void writeBugDatabase( XMLWriter writer, MavenProject project )\n    {\n        if ( project.getIssueManagement() == null || StringUtils.isEmpty( project.getIssueManagement().getUrl() ) )\n        {\n            messages.addMessage( new String[] { \"project\", \"issueManagement\" }, null,\n                                 UserMessages.REQUIRED_BY_ASF_OR_RECOMMENDED );\n            return;\n        }\n\n        String issueManagementUrl = project.getIssueManagement().getUrl().trim();\n        try\n        {\n            new URL( issueManagementUrl );\n        }\n        catch ( MalformedURLException e )\n        {\n            messages.addMessage( new String[] { \"project\", \"issueManagement\", \"url\" }, issueManagementUrl,\n                                 UserMessages.INVALID_URL );\n            return;\n        }\n\n        DoapUtil.writeComment( writer, \"Bug database.\" );\n        DoapUtil.writeRdfResourceElement( writer, doapOptions.getXmlnsPrefix(), \"bug-database\", issueManagementUrl );\n    }","id":15467,"modified_method":"/**\n     * Write DOAP bug-database.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#bug-database\">http://usefulinc.com/ns/doap#bug-database<\/a>\n     */\n    private void writeBugDatabase( XMLWriter writer, MavenProject project )\n    {\n        String bugDatabase = DoapUtil.interpolate( doapOptions.getBugDatabase(), project, settings );\n        if ( StringUtils.isEmpty( bugDatabase ) )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"bugDatabase\" }, null,\n                                 UserMessages.REQUIRED_BY_ASF_OR_RECOMMENDED );\n            return;\n        }\n\n        try\n        {\n            new URL( bugDatabase );\n\n            DoapUtil.writeComment( writer, \"Bug database.\" );\n            DoapUtil.writeRdfResourceElement( writer, doapOptions.getXmlnsPrefix(), \"bug-database\", bugDatabase );\n        }\n        catch ( MalformedURLException e )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"bugDatabase\" }, bugDatabase, UserMessages.INVALID_URL );\n        }\n    }","commit_id":"8dbdb4949bf44e059023176c6439030aa54faef7","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP audience.\n     *\n     * @param writer not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#audience\">http://usefulinc.com/ns/doap#audience<\/a>\n     * @since 1.1\n     */\n    private void writeAudience( XMLWriter writer )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getAudience() ) )\n        {\n            return;\n        }\n\n        DoapUtil.writeComment( writer, \"Audience.\" );\n        DoapUtil.writeElement( writer, doapOptions.getXmlnsPrefix(), \"audience\", doapOptions.getAudience().trim() );\n    }","id":15468,"modified_method":"/**\n     * Write DOAP audience.\n     *\n     * @param writer not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#audience\">http://usefulinc.com/ns/doap#audience<\/a>\n     * @since 1.1\n     */\n    private void writeAudience( XMLWriter writer )\n    {\n        String audience = DoapUtil.interpolate( doapOptions.getAudience(), project, settings );\n        if ( StringUtils.isEmpty( audience ) )\n        {\n            return;\n        }\n\n        DoapUtil.writeComment( writer, \"Audience.\" );\n        DoapUtil.writeElement( writer, doapOptions.getXmlnsPrefix(), \"audience\", audience );\n    }","commit_id":"8dbdb4949bf44e059023176c6439030aa54faef7","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write a doap file for the given project.\n     *\n     * @param project not null\n     * @param outputFile not null\n     * @since 1.1\n     */\n    private void writeDoapFile( MavenProject project, File outputFile )\n        throws MojoExecutionException\n    {\n        // ----------------------------------------------------------------------------\n        // Includes ASF extensions\n        // ----------------------------------------------------------------------------\n\n        if ( !asfExtOptions.isIncluded() && ASFExtOptionsUtil.isASFProject( project ) )\n        {\n            getLog().info( \"This project is an ASF project, ASF Extensions to DOAP will be added.\" );\n            asfExtOptions.setIncluded( true );\n        }\n\n        // ----------------------------------------------------------------------------\n        // setup pretty print xml writer\n        // ----------------------------------------------------------------------------\n\n        Writer w;\n        try\n        {\n            if ( !outputFile.getParentFile().exists() )\n            {\n                FileUtils.mkdir( outputFile.getParentFile().getAbsolutePath() );\n            }\n\n            w = WriterFactory.newXmlWriter( outputFile );\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error creating DOAP file \" + outputFile.getAbsolutePath(), e );\n        }\n\n        if ( asfExtOptions.isIncluded() )\n        {\n            getLog().info( \"Generating an ASF DOAP file \" + outputFile.getAbsolutePath() );\n        }\n        else\n        {\n            getLog().info( \"Generating a pure DOAP file \" + outputFile.getAbsolutePath() );\n        }\n\n        XMLWriter writer = new PrettyPrintXMLWriter( w, project.getModel().getModelEncoding(), null );\n\n        // ----------------------------------------------------------------------------\n        // Convert POM to DOAP\n        // ----------------------------------------------------------------------------\n\n        DoapUtil.writeHeader( writer );\n\n        // Heading\n        DoapUtil.writeStartElement( writer, \"rdf\", \"RDF\" );\n        if ( Arrays.binarySearch( Locale.getISOLanguages(), lang ) < 0 )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"lang\" }, lang, UserMessages.INVALID_ISO_DATE );\n            throw new MojoExecutionException( messages.getErrorMessages().get( 0 ) );\n        }\n        writer.addAttribute( \"xml:lang\", lang );\n        if ( StringUtils.isEmpty( doapOptions.getXmlnsNamespaceURI() ) )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"xmlnsNamespaceURI\" }, null, UserMessages.REQUIRED );\n            throw new MojoExecutionException( messages.getErrorMessages().get( 0 ) );\n        }\n        writer.addAttribute( \"xmlns\"\n                                 + ( StringUtils.isEmpty( doapOptions.getXmlnsPrefix() ) ? \"\" : \":\"\n                                     + doapOptions.getXmlnsPrefix() ), doapOptions.getXmlnsNamespaceURI() );\n        writer.addAttribute( \"xmlns:rdf\", \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" );\n        writer.addAttribute( \"xmlns:foaf\", \"http://xmlns.com/foaf/0.1/\" );\n        if ( asfExtOptions.isIncluded() )\n        {\n            if ( StringUtils.isEmpty( asfExtOptions.getXmlnsPrefix() ) )\n            {\n                messages.addMessage( new String[] { \"doapOptions\", \"xmlnsPrefix\" }, null, UserMessages.REQUIRED );\n                throw new MojoExecutionException( messages.getErrorMessages().get( 0 ) );\n            }\n            if ( StringUtils.isEmpty( asfExtOptions.getXmlnsNamespaceURI() ) )\n            {\n                messages.addMessage( new String[] { \"doapOptions\", \"xmlnsNamespaceURI\" }, null, UserMessages.REQUIRED );\n            }\n            writer.addAttribute( \"xmlns\"\n                                     + ( StringUtils.isEmpty( asfExtOptions.getXmlnsPrefix() ) ? \"\" : \":\"\n                                         + asfExtOptions.getXmlnsPrefix() ), asfExtOptions.getXmlnsNamespaceURI() );\n        }\n        if ( extOptions != null && extOptions.length > 0 && !extOptions[0].getExtensions().isEmpty() )\n        {\n            for ( ExtOptions extOption : extOptions )\n            {\n                if ( StringUtils.isEmpty( extOption.getXmlnsPrefix() ) )\n                {\n                    messages.addMessage( new String[] { \"extOptions\", \"extOption\", \"xmlnsPrefix\" }, null,\n                                         UserMessages.REQUIRED );\n                    throw new MojoExecutionException( messages.getErrorMessages().get( 0 ) );\n                }\n                if ( StringUtils.isEmpty( extOption.getXmlnsNamespaceURI() ) )\n                {\n                    messages.addMessage( new String[] { \"extOptions\", \"extOption\", \"xmlnsNamespaceURI\" }, null,\n                                         UserMessages.REQUIRED );\n                    throw new MojoExecutionException( messages.getErrorMessages().get( 0 ) );\n                }\n                writer.addAttribute( \"xmlns\"\n                                         + ( StringUtils.isEmpty( extOption.getXmlnsPrefix() ) ? \"\" : \":\"\n                                             + extOption.getXmlnsPrefix() ),\n                                     extOption.getXmlnsNamespaceURI() );\n            }\n        }\n\n        // Project\n        DoapUtil.writeStartElement( writer, doapOptions.getXmlnsPrefix(), \"Project\" );\n        boolean added = false;\n        if ( artifact != null )\n        {\n            String about_ = project.getUrl();\n\n            if ( StringUtils.isNotEmpty( about_ ) )\n            {\n                try\n                {\n                    new URL( about_ );\n\n                    writer.addAttribute( \"rdf:about\", about_ );\n                    added = true;\n                }\n                catch ( MalformedURLException e )\n                {\n                }\n            }\n\n            if ( !added )\n            {\n                messages.getWarnMessages().add( \"The project's url defined from \" + artifact.toConfiguration()\n                                                    + \" is empty or not valid, using <about/> parameter.\" );\n            }\n        }\n\n        if ( !added )\n        {\n            if ( StringUtils.isNotEmpty( about ) )\n            {\n                try\n                {\n                    new URL( about );\n\n                    writer.addAttribute( \"rdf:about\", about );\n                }\n                catch ( MalformedURLException e )\n                {\n                    messages.addMessage( new String[] { \"about\" }, null, UserMessages.INVALID_URL );\n                }\n                added = true;\n            }\n        }\n\n        if ( !added )\n        {\n            messages.addMessage( new String[] { \"about\" }, null, UserMessages.RECOMMENDED );\n        }\n\n        // name\n        writeName( writer, project );\n\n        // description\n        writeDescription( writer, project );\n\n        // implements\n        writeImplements( writer );\n\n        // Audience\n        writeAudience( writer );\n\n        // Vendor\n        writeVendor( writer, project );\n\n        // created\n        writeCreated( writer, project );\n\n        // homepage and old-homepage\n        writeHomepage( writer, project );\n\n        // Blog\n        writeBlog( writer );\n\n        // licenses\n        writeLicenses( writer, project );\n\n        // programming-language\n        writeProgrammingLanguage( writer, project );\n\n        // category\n        writeCategory( writer, project );\n\n        // os\n        writeOS( writer, project );\n\n        // Plateform\n        writePlateform( writer );\n\n        // Language\n        writeLanguage( writer );\n\n        // SCM\n        writeSourceRepositories( writer, project );\n\n        // bug-database\n        writeBugDatabase( writer, project );\n\n        // mailing list\n        writeMailingList( writer, project );\n\n        // download-page and download-mirror\n        writeDownloadPage( writer, project );\n\n        // screenshots\n        writeScreenshots( writer, project );\n\n        // service-endpoint\n        writeServiceEndpoint( writer );\n\n        // wiki\n        writeWiki( writer, project );\n\n        // Releases\n        writeReleases( writer, project );\n\n        // Developers\n        @SuppressWarnings( \"unchecked\" )\n        List<Contributor> developers = project.getDevelopers();\n        if ( developers == null || developers.isEmpty() )\n        {\n            messages.addMessage( new String[] { \"project\", \"developers\" }, null,\n                                 UserMessages.REQUIRED_BY_ASF_OR_RECOMMENDED );\n        }\n        else\n        {\n            writeContributors( writer, developers );\n        }\n\n        // Contributors\n        @SuppressWarnings( \"unchecked\" )\n        List<Contributor> contributors = project.getContributors();\n        writeContributors( writer, contributors );\n\n        // Extra DOAP\n        @SuppressWarnings( \"unchecked\" )\n        Map<String, String> map = doapOptions.getExtra();\n        writeExtra( writer, project, \"Extra DOAP vocabulary.\", map, doapOptions.getXmlnsPrefix() );\n\n        // ASFext\n        writeASFext( writer, project );\n\n        // Extra extensions\n        writeExtensions( writer );\n\n        writer.endElement(); // Project\n\n        writeOrganizations( writer );\n\n        writer.endElement(); // rdf:RDF\n\n        try\n        {\n            w.close();\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error when closing the writer.\", e );\n        }\n\n        if ( !messages.getWarnMessages().isEmpty() )\n        {\n            for ( String warn : messages.getWarnMessages() )\n            {\n                getLog().warn( warn );\n            }\n        }\n\n        if ( !messages.getErrorMessages().isEmpty() )\n        {\n            getLog().error( \"\" );\n            for ( String error : messages.getErrorMessages() )\n            {\n                getLog().error( error );\n            }\n            getLog().error( \"\" );\n\n            if ( ASFExtOptionsUtil.isASFProject( project ) )\n            {\n                getLog().error( \"For more information about the errors and possible solutions, please read the plugin documentation:\" );\n                getLog().error( \"http://maven.apache.org/plugins/maven-doap-plugin/usage.html#DOAP_ASF_Configuration\" );\n                throw new MojoExecutionException( \"The generated DOAP doesn't respect ASF rules, see above.\" );\n            }\n        }\n\n        if ( validate )\n        {\n            List<String> errors = DoapUtil.validate( outputFile );\n            if ( !errors.isEmpty() )\n            {\n                getLog().error( \"\" );\n                for ( String error : errors )\n                {\n                    getLog().error( error );\n                }\n                getLog().error( \"\" );\n\n                throw new MojoExecutionException( \"Error parsing the generated DOAP file, see above.\" );\n            }\n        }\n    }","id":15469,"modified_method":"/**\n     * Write a doap file for the given project.\n     *\n     * @param project not null\n     * @param outputFile not null\n     * @since 1.1\n     */\n    private void writeDoapFile( MavenProject project, File outputFile )\n        throws MojoExecutionException\n    {\n        // ----------------------------------------------------------------------------\n        // Includes ASF extensions\n        // ----------------------------------------------------------------------------\n\n        if ( !asfExtOptions.isIncluded() && ASFExtOptionsUtil.isASFProject( project ) )\n        {\n            getLog().info( \"This project is an ASF project, ASF Extensions to DOAP will be added.\" );\n            asfExtOptions.setIncluded( true );\n        }\n\n        // ----------------------------------------------------------------------------\n        // setup pretty print xml writer\n        // ----------------------------------------------------------------------------\n\n        Writer w;\n        try\n        {\n            if ( !outputFile.getParentFile().exists() )\n            {\n                FileUtils.mkdir( outputFile.getParentFile().getAbsolutePath() );\n            }\n\n            w = WriterFactory.newXmlWriter( outputFile );\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error creating DOAP file \" + outputFile.getAbsolutePath(), e );\n        }\n\n        if ( asfExtOptions.isIncluded() )\n        {\n            getLog().info( \"Generating an ASF DOAP file \" + outputFile.getAbsolutePath() );\n        }\n        else\n        {\n            getLog().info( \"Generating a pure DOAP file \" + outputFile.getAbsolutePath() );\n        }\n\n        XMLWriter writer = new PrettyPrintXMLWriter( w, project.getModel().getModelEncoding(), null );\n\n        // ----------------------------------------------------------------------------\n        // Convert POM to DOAP\n        // ----------------------------------------------------------------------------\n\n        DoapUtil.writeHeader( writer );\n\n        // Heading\n        DoapUtil.writeStartElement( writer, \"rdf\", \"RDF\" );\n        if ( Arrays.binarySearch( Locale.getISOLanguages(), lang ) < 0 )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"lang\" }, lang, UserMessages.INVALID_ISO_DATE );\n            throw new MojoExecutionException( messages.getErrorMessages().get( 0 ) );\n        }\n        writer.addAttribute( \"xml:lang\", lang );\n        if ( StringUtils.isEmpty( doapOptions.getXmlnsNamespaceURI() ) )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"xmlnsNamespaceURI\" }, null, UserMessages.REQUIRED );\n            throw new MojoExecutionException( messages.getErrorMessages().get( 0 ) );\n        }\n        writer.addAttribute( \"xmlns\"\n                                 + ( StringUtils.isEmpty( doapOptions.getXmlnsPrefix() ) ? \"\" : \":\"\n                                     + doapOptions.getXmlnsPrefix() ), doapOptions.getXmlnsNamespaceURI() );\n        writer.addAttribute( \"xmlns:rdf\", \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" );\n        writer.addAttribute( \"xmlns:foaf\", \"http://xmlns.com/foaf/0.1/\" );\n        if ( asfExtOptions.isIncluded() )\n        {\n            if ( StringUtils.isEmpty( asfExtOptions.getXmlnsPrefix() ) )\n            {\n                messages.addMessage( new String[] { \"doapOptions\", \"xmlnsPrefix\" }, null, UserMessages.REQUIRED );\n                throw new MojoExecutionException( messages.getErrorMessages().get( 0 ) );\n            }\n            if ( StringUtils.isEmpty( asfExtOptions.getXmlnsNamespaceURI() ) )\n            {\n                messages.addMessage( new String[] { \"doapOptions\", \"xmlnsNamespaceURI\" }, null, UserMessages.REQUIRED );\n            }\n            writer.addAttribute( \"xmlns\"\n                                     + ( StringUtils.isEmpty( asfExtOptions.getXmlnsPrefix() ) ? \"\" : \":\"\n                                         + asfExtOptions.getXmlnsPrefix() ), asfExtOptions.getXmlnsNamespaceURI() );\n        }\n        if ( extOptions != null && extOptions.length > 0 && !extOptions[0].getExtensions().isEmpty() )\n        {\n            for ( ExtOptions extOption : extOptions )\n            {\n                if ( StringUtils.isEmpty( extOption.getXmlnsPrefix() ) )\n                {\n                    messages.addMessage( new String[] { \"extOptions\", \"extOption\", \"xmlnsPrefix\" }, null,\n                                         UserMessages.REQUIRED );\n                    throw new MojoExecutionException( messages.getErrorMessages().get( 0 ) );\n                }\n                if ( StringUtils.isEmpty( extOption.getXmlnsNamespaceURI() ) )\n                {\n                    messages.addMessage( new String[] { \"extOptions\", \"extOption\", \"xmlnsNamespaceURI\" }, null,\n                                         UserMessages.REQUIRED );\n                    throw new MojoExecutionException( messages.getErrorMessages().get( 0 ) );\n                }\n                writer.addAttribute( \"xmlns\"\n                                         + ( StringUtils.isEmpty( extOption.getXmlnsPrefix() ) ? \"\" : \":\"\n                                             + extOption.getXmlnsPrefix() ),\n                                     extOption.getXmlnsNamespaceURI() );\n            }\n        }\n\n        // Project\n        DoapUtil.writeStartElement( writer, doapOptions.getXmlnsPrefix(), \"Project\" );\n        boolean added = false;\n        if ( artifact != null )\n        {\n            String about_ = project.getUrl();\n\n            if ( StringUtils.isNotEmpty( about_ ) )\n            {\n                try\n                {\n                    new URL( about_ );\n\n                    writer.addAttribute( \"rdf:about\", about_ );\n                    added = true;\n                }\n                catch ( MalformedURLException e )\n                {\n                }\n            }\n\n            if ( !added )\n            {\n                messages.getWarnMessages().add( \"The project's url defined from \" + artifact.toConfiguration()\n                                                    + \" is empty or not a valid URL, using <about/> parameter.\" );\n            }\n        }\n\n        if ( !added )\n        {\n            if ( StringUtils.isNotEmpty( about ) )\n            {\n                try\n                {\n                    new URL( about );\n\n                    writer.addAttribute( \"rdf:about\", about );\n                }\n                catch ( MalformedURLException e )\n                {\n                    messages.addMessage( new String[] { \"about\" }, about, UserMessages.INVALID_URL );\n                }\n                added = true;\n            }\n        }\n\n        if ( !added )\n        {\n            messages.addMessage( new String[] { \"about\" }, null, UserMessages.RECOMMENDED );\n        }\n\n        // name\n        writeName( writer, project );\n\n        // description\n        writeDescription( writer, project );\n\n        // implements\n        writeImplements( writer );\n\n        // Audience\n        writeAudience( writer );\n\n        // Vendor\n        writeVendor( writer, project );\n\n        // created\n        writeCreated( writer, project );\n\n        // homepage and old-homepage\n        writeHomepage( writer, project );\n\n        // Blog\n        writeBlog( writer );\n\n        // licenses\n        writeLicenses( writer, project );\n\n        // programming-language\n        writeProgrammingLanguage( writer, project );\n\n        // category\n        writeCategory( writer, project );\n\n        // os\n        writeOS( writer, project );\n\n        // Plateform\n        writePlateform( writer );\n\n        // Language\n        writeLanguage( writer );\n\n        // SCM\n        writeSourceRepositories( writer, project );\n\n        // bug-database\n        writeBugDatabase( writer, project );\n\n        // mailing list\n        writeMailingList( writer, project );\n\n        // download-page and download-mirror\n        writeDownloadPage( writer, project );\n\n        // screenshots\n        writeScreenshots( writer, project );\n\n        // service-endpoint\n        writeServiceEndpoint( writer );\n\n        // wiki\n        writeWiki( writer, project );\n\n        // Releases\n        writeReleases( writer, project );\n\n        // Developers\n        @SuppressWarnings( \"unchecked\" )\n        List<Contributor> developers = project.getDevelopers();\n        writeContributors( writer, developers );\n\n        // Contributors\n        @SuppressWarnings( \"unchecked\" )\n        List<Contributor> contributors = project.getContributors();\n        writeContributors( writer, contributors );\n\n        // Extra DOAP\n        @SuppressWarnings( \"unchecked\" )\n        Map<String, String> map = doapOptions.getExtra();\n        writeExtra( writer, project, \"Extra DOAP vocabulary.\", map, doapOptions.getXmlnsPrefix() );\n\n        // ASFext\n        writeASFext( writer, project );\n\n        // Extra extensions\n        writeExtensions( writer );\n\n        writer.endElement(); // Project\n\n        writeOrganizations( writer );\n\n        writer.endElement(); // rdf:RDF\n\n        try\n        {\n            w.close();\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error when closing the writer.\", e );\n        }\n\n        if ( !messages.getWarnMessages().isEmpty() )\n        {\n            for ( String warn : messages.getWarnMessages() )\n            {\n                getLog().warn( warn );\n            }\n        }\n\n        if ( !messages.getErrorMessages().isEmpty() )\n        {\n            getLog().error( \"\" );\n            for ( String error : messages.getErrorMessages() )\n            {\n                getLog().error( error );\n            }\n            getLog().error( \"\" );\n\n            if ( ASFExtOptionsUtil.isASFProject( project ) )\n            {\n                getLog().error( \"For more information about the errors and possible solutions, please read the plugin documentation:\" );\n                getLog().error( \"http://maven.apache.org/plugins/maven-doap-plugin/usage.html#DOAP_ASF_Configuration\" );\n                throw new MojoExecutionException( \"The generated DOAP doesn't respect ASF rules, see above.\" );\n            }\n        }\n\n        if ( validate )\n        {\n            List<String> errors = DoapUtil.validate( outputFile );\n            if ( !errors.isEmpty() )\n            {\n                getLog().error( \"\" );\n                for ( String error : errors )\n                {\n                    getLog().error( error );\n                }\n                getLog().error( \"\" );\n\n                throw new MojoExecutionException( \"Error parsing the generated DOAP file, see above.\" );\n            }\n        }\n    }","commit_id":"8dbdb4949bf44e059023176c6439030aa54faef7","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write extra for DOAP or any extension.\n     *\n     * @param writer not null\n     * @param project not null\n     * @param comment not null\n     * @param map not null\n     * @param xmlnsPrefix not null\n     * @since 1.1\n     */\n    private void writeExtra( XMLWriter writer, MavenProject project, String comment, Map<String, String> map,\n                             String xmlnsPrefix )\n    {\n        if ( map == null || map.isEmpty() )\n        {\n            return;\n        }\n\n        boolean addComment = false;\n        for ( Map.Entry<String, String> entry : map.entrySet() )\n        {\n            String key = entry.getKey();\n            String value = entry.getValue();\n\n            if ( value == null )\n            {\n                continue;\n            }\n\n            String interpolatedValue = interpolate( value, project, settings );\n            if ( interpolatedValue == null )\n            {\n                continue;\n            }\n\n            if ( !addComment )\n            {\n                DoapUtil.writeComment( writer, comment );\n                addComment = true;\n            }\n\n            try\n            {\n                new URL( interpolatedValue );\n\n                DoapUtil.writeRdfResourceElement( writer, xmlnsPrefix, key, interpolatedValue );\n            }\n            catch ( MalformedURLException e )\n            {\n                DoapUtil.writeElement( writer, xmlnsPrefix, key, interpolatedValue );\n            }\n        }\n    }","id":15470,"modified_method":"/**\n     * Write extra for DOAP or any extension.\n     *\n     * @param writer not null\n     * @param project not null\n     * @param comment not null\n     * @param map not null\n     * @param xmlnsPrefix not null\n     * @since 1.1\n     */\n    private void writeExtra( XMLWriter writer, MavenProject project, String comment, Map<String, String> map,\n                             String xmlnsPrefix )\n    {\n        if ( map == null || map.isEmpty() )\n        {\n            return;\n        }\n\n        boolean addComment = false;\n        for ( Map.Entry<String, String> entry : map.entrySet() )\n        {\n            String key = entry.getKey();\n            String value = entry.getValue();\n\n            if ( value == null )\n            {\n                continue;\n            }\n\n            String interpolatedValue = DoapUtil.interpolate( value, project, settings );\n            if ( interpolatedValue == null )\n            {\n                continue;\n            }\n\n            if ( !addComment )\n            {\n                DoapUtil.writeComment( writer, comment );\n                addComment = true;\n            }\n\n            try\n            {\n                new URL( interpolatedValue );\n\n                DoapUtil.writeRdfResourceElement( writer, xmlnsPrefix, key, interpolatedValue );\n            }\n            catch ( MalformedURLException e )\n            {\n                DoapUtil.writeElement( writer, xmlnsPrefix, key, interpolatedValue );\n            }\n        }\n    }","commit_id":"8dbdb4949bf44e059023176c6439030aa54faef7","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write the ASF extensions\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://svn.apache.org/repos/asf/infrastructure/site-tools/trunk/projects/asfext\">\n     *      http://svn.apache.org/repos/asf/infrastructure/site-tools/trunk/projects/asfext<\/a>\n     * @see <a href=\"http://projects.apache.org/docs/pmc.html\">http://projects.apache.org/docs/pmc.html<\/a>\n     */\n    private void writeASFext( XMLWriter writer, MavenProject project )\n    {\n        if ( !asfExtOptions.isIncluded() )\n        {\n            return;\n        }\n\n        DoapUtil.writeComment( writer, \"ASF extension\" );\n\n        // asfext:pmc\n        String pmc = interpolate( asfExtOptions.getPmc(), project, settings );\n        if ( StringUtils.isNotEmpty( pmc ) )\n        {\n            DoapUtil.writeRdfResourceElement( writer, asfExtOptions.getXmlnsPrefix(), \"pmc\", pmc );\n        }\n        else\n        {\n            messages.addMessage( new String[] { \"asfExtOptions\", \"pmc\" }, null, UserMessages.REQUIRED_BY_ASF );\n        }\n\n        // asfext:name\n        String name = interpolate( asfExtOptions.getName(), project, settings );\n        if ( StringUtils.isNotEmpty( name ) )\n        {\n            if ( !name.toLowerCase( Locale.ENGLISH ).trim().startsWith( \"apache\" ) )\n            {\n                name = \"Apache \" + name;\n            }\n            DoapUtil.writeElement( writer, asfExtOptions.getXmlnsPrefix(), \"name\", name );\n        }\n        else\n        {\n            messages.addMessage( new String[] { \"asfExtOptions\", \"name\" }, null, UserMessages.REQUIRED_BY_ASF );\n        }\n\n        String homepage = interpolate( doapOptions.getHomepage(), project, settings );\n        if ( StringUtils.isNotEmpty( homepage ) )\n        {\n            try\n            {\n                new URL( homepage );\n\n                DoapUtil.writeRdfResourceElement( writer, \"foaf\", \"homepage\", homepage );\n            }\n            catch ( MalformedURLException e )\n            {\n                messages.addMessage( new String[] { \"doapOptions\", \"homepage\" }, homepage, UserMessages.INVALID_URL );\n            }\n        }\n\n        // asfext:charter\n        if ( StringUtils.isEmpty( asfExtOptions.getCharter() ) )\n        {\n            messages.addMessage( new String[] { \"asfExtOptions\", \"charter\" }, null, UserMessages.REQUIRED_BY_ASF );\n        }\n        else\n        {\n            DoapUtil.writeElement( writer, asfExtOptions.getXmlnsPrefix(), \"charter\", asfExtOptions.getCharter() );\n        }\n\n        // asfext:chair\n        @SuppressWarnings( \"unchecked\" )\n        List<Developer> developers = new ArrayList<Developer>( project.getDevelopers() );\n        sortContributors( developers );\n\n        if ( StringUtils.isNotEmpty( asfExtOptions.getChair() ) )\n        {\n            DoapUtil.writeStartElement( writer, asfExtOptions.getXmlnsPrefix(), \"chair\" );\n            DoapUtil.writeStartElement( writer, \"foaf\", \"Person\" );\n            DoapUtil.writeStartElement( writer, \"foaf\", \"name\" );\n            writer.writeText( asfExtOptions.getChair() );\n            writer.endElement(); // foaf:name\n            writer.endElement(); // foaf:Person\n            writer.endElement(); // asfext:chair\n        }\n        else\n        {\n            Developer chair = ASFExtOptionsUtil.findChair( developers );\n            if ( chair != null )\n            {\n                writeContributor( writer, chair, asfExtOptions.getXmlnsPrefix(), \"chair\" );\n                developers.remove( chair );\n            }\n            else\n            {\n                messages.addMessage( new String[] { \"asfExtOptions\", \"chair\" }, null, UserMessages.REQUIRED_BY_ASF );\n            }\n        }\n\n        // asfext:member\n        if ( developers != null && developers.size() > 0 )\n        {\n            List<Developer> pmcMembers = ASFExtOptionsUtil.findPMCMembers( developers );\n            for ( Developer pmcMember : pmcMembers )\n            {\n                writeContributor( writer, pmcMember, asfExtOptions.getXmlnsPrefix(), \"member\" );\n            }\n        }\n\n        writeASFImplements( writer );\n\n        @SuppressWarnings( \"unchecked\" )\n        Map<String, String> map = asfExtOptions.getExtra();\n        writeExtra( writer, project, \"Extra ASFExt vocabulary.\", map, asfExtOptions.getXmlnsPrefix() );\n    }","id":15471,"modified_method":"/**\n     * Write the ASF extensions\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://svn.apache.org/repos/asf/infrastructure/site-tools/trunk/projects/asfext\">\n     *      http://svn.apache.org/repos/asf/infrastructure/site-tools/trunk/projects/asfext<\/a>\n     * @see <a href=\"http://projects.apache.org/docs/pmc.html\">http://projects.apache.org/docs/pmc.html<\/a>\n     */\n    private void writeASFext( XMLWriter writer, MavenProject project )\n    {\n        if ( !asfExtOptions.isIncluded() )\n        {\n            return;\n        }\n\n        DoapUtil.writeComment( writer, \"ASF extension.\" );\n\n        // asfext:pmc\n        String pmc = DoapUtil.interpolate( asfExtOptions.getPmc(), project, settings );\n        if ( StringUtils.isNotEmpty( pmc ) )\n        {\n            DoapUtil.writeRdfResourceElement( writer, asfExtOptions.getXmlnsPrefix(), \"pmc\", pmc );\n        }\n        else\n        {\n            messages.addMessage( new String[] { \"asfExtOptions\", \"pmc\" }, null, UserMessages.REQUIRED_BY_ASF );\n        }\n\n        // asfext:name\n        String name = DoapUtil.interpolate( asfExtOptions.getName(), project, settings );\n        if ( StringUtils.isNotEmpty( name ) )\n        {\n            if ( !name.toLowerCase( Locale.ENGLISH ).trim().startsWith( \"apache\" ) )\n            {\n                name = \"Apache \" + name;\n            }\n            DoapUtil.writeElement( writer, asfExtOptions.getXmlnsPrefix(), \"name\", name );\n        }\n        else\n        {\n            messages.addMessage( new String[] { \"asfExtOptions\", \"name\" }, null, UserMessages.REQUIRED_BY_ASF );\n        }\n\n        String homepage = DoapUtil.interpolate( doapOptions.getHomepage(), project, settings );\n        if ( StringUtils.isNotEmpty( homepage ) )\n        {\n            try\n            {\n                new URL( homepage );\n\n                DoapUtil.writeRdfResourceElement( writer, \"foaf\", \"homepage\", homepage );\n            }\n            catch ( MalformedURLException e )\n            {\n                messages.addMessage( new String[] { \"doapOptions\", \"homepage\" }, homepage, UserMessages.INVALID_URL );\n            }\n        }\n\n        // asfext:charter\n        if ( StringUtils.isEmpty( asfExtOptions.getCharter() ) )\n        {\n            messages.addMessage( new String[] { \"asfExtOptions\", \"charter\" }, null, UserMessages.REQUIRED_BY_ASF );\n        }\n        else\n        {\n            DoapUtil.writeElement( writer, asfExtOptions.getXmlnsPrefix(), \"charter\", asfExtOptions.getCharter() );\n        }\n\n        // asfext:chair\n        @SuppressWarnings( \"unchecked\" )\n        List<Developer> developers = new ArrayList<Developer>( project.getDevelopers() );\n        sortContributors( developers );\n\n        if ( StringUtils.isNotEmpty( asfExtOptions.getChair() ) )\n        {\n            DoapUtil.writeStartElement( writer, asfExtOptions.getXmlnsPrefix(), \"chair\" );\n            DoapUtil.writeStartElement( writer, \"foaf\", \"Person\" );\n            DoapUtil.writeStartElement( writer, \"foaf\", \"name\" );\n            writer.writeText( asfExtOptions.getChair() );\n            writer.endElement(); // foaf:name\n            writer.endElement(); // foaf:Person\n            writer.endElement(); // asfext:chair\n        }\n        else\n        {\n            Developer chair = ASFExtOptionsUtil.findChair( developers );\n            if ( chair != null )\n            {\n                writeContributor( writer, chair, asfExtOptions.getXmlnsPrefix(), \"chair\" );\n                developers.remove( chair );\n            }\n            else\n            {\n                messages.addMessage( new String[] { \"asfExtOptions\", \"chair\" }, null, UserMessages.REQUIRED_BY_ASF );\n            }\n        }\n\n        // asfext:member\n        if ( developers != null && developers.size() > 0 )\n        {\n            List<Developer> pmcMembers = ASFExtOptionsUtil.findPMCMembers( developers );\n            for ( Developer pmcMember : pmcMembers )\n            {\n                writeContributor( writer, pmcMember, asfExtOptions.getXmlnsPrefix(), \"member\" );\n            }\n        }\n\n        writeASFImplements( writer );\n\n        @SuppressWarnings( \"unchecked\" )\n        Map<String, String> map = asfExtOptions.getExtra();\n        writeExtra( writer, project, \"Extra ASFExt vocabulary.\", map, asfExtOptions.getXmlnsPrefix() );\n    }","commit_id":"8dbdb4949bf44e059023176c6439030aa54faef7","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP mailing-list.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#mailing-list\">http://usefulinc.com/ns/doap#mailing-list<\/a>\n     * @see DoapOptions#getMailingList()\n     */\n    private void writeMailingList( XMLWriter writer, MavenProject project )\n    {\n        String ml = interpolate( doapOptions.getMailingList(), project, settings );\n        if ( StringUtils.isEmpty( ml ) )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"mailingList\" }, null,\n                                 UserMessages.REQUIRED_BY_ASF_OR_RECOMMENDED );\n            return;\n        }\n\n        try\n        {\n            new URL( ml );\n\n            DoapUtil.writeComment( writer, \"Mailing lists.\" );\n            DoapUtil.writeRdfResourceElement( writer, doapOptions.getXmlnsPrefix(), \"mailing-list\", ml );\n        }\n        catch ( MalformedURLException e )\n        {\n            messages.addMessage( new String[] { \"project\", \"mailingList\" }, ml, UserMessages.INVALID_URL );\n        }\n    }","id":15472,"modified_method":"/**\n     * Write DOAP mailing-list.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#mailing-list\">http://usefulinc.com/ns/doap#mailing-list<\/a>\n     * @see DoapOptions#getMailingList()\n     */\n    private void writeMailingList( XMLWriter writer, MavenProject project )\n    {\n        String ml = DoapUtil.interpolate( doapOptions.getMailingList(), project, settings );\n        if ( StringUtils.isEmpty( ml ) )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"mailingList\" }, null,\n                                 UserMessages.REQUIRED_BY_ASF_OR_RECOMMENDED );\n            return;\n        }\n\n        try\n        {\n            new URL( ml );\n\n            DoapUtil.writeComment( writer, \"Mailing lists.\" );\n            DoapUtil.writeRdfResourceElement( writer, doapOptions.getXmlnsPrefix(), \"mailing-list\", ml );\n        }\n        catch ( MalformedURLException e )\n        {\n            messages.addMessage( new String[] { \"doapOptions\", \"mailingList\" }, ml, UserMessages.INVALID_URL );\n        }\n    }","commit_id":"8dbdb4949bf44e059023176c6439030aa54faef7","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Verify the generation of a DOAP file from an artifact.\n     *\n     * @throws Exception if any\n     */\n    public void testGeneratedDoapArtifact()\n        throws Exception\n    {\n        File pluginXmlFile =\n            new File( getBasedir(), \"src/test/resources/unit/doap-configuration/doap-configuration-plugin-config.xml\" );\n        DoapMojo mojo = (DoapMojo) lookupMojo( \"generate\", pluginXmlFile );\n        assertNotNull( \"Mojo found.\", mojo );\n\n        MavenProject mavenProject = (MavenProject) getVariableValueFromObject( mojo, \"project\" );\n        assertNotNull( mavenProject );\n\n        // Set some Mojo parameters\n        setVariableValueToObject( mojo, \"remoteRepositories\", mavenProject.getRemoteArtifactRepositories() );\n        setVariableValueToObject( mojo, \"about\", mavenProject.getUrl() );\n\n        DoapArtifact artifact = new DoapArtifact();\n        artifact.setGroupId( \"org.codehaus.plexus\" );\n        artifact.setArtifactId( \"plexus-utils\" );\n        artifact.setVersion( \"1.5.5\" );\n        setVariableValueToObject( mojo, \"artifact\", artifact );\n        setVariableValueToObject( mojo, \"outputDirectory\", \"target/test/unit/doap-configuration/\" );\n\n        mojo.execute();\n\n        File doapFile = new File( getBasedir(), \"target/test/unit/doap-configuration/doap_plexus-utils.rdf\" );\n        assertTrue( \"Doap File was not generated!\", doapFile.exists() );\n\n        String readed = readFile( doapFile );\n\n        // Validate\n\n        // Pure DOAP\n        assertTrue( readed.contains( \"<rdf:RDF xml:lang=\\\"en\\\" xmlns=\\\"http://usefulinc.com/ns/doap#\\\" \"\n            + \"xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\" \"\n            + \"xmlns:foaf=\\\"http://xmlns.com/foaf/0.1/\\\">\" ) );\n        assertTrue( readed.contains( \"<name>Plexus Common Utilities<\/name>\" ) );\n    }","id":15473,"modified_method":"/**\n     * Verify the generation of a DOAP file from an artifact.\n     *\n     * @throws Exception if any\n     */\n    public void testGeneratedDoapArtifact()\n        throws Exception\n    {\n        File pluginXmlFile =\n            new File( getBasedir(), \"src/test/resources/unit/doap-configuration/doap-configuration-plugin-config.xml\" );\n        DoapMojo mojo = (DoapMojo) lookupMojo( \"generate\", pluginXmlFile );\n        assertNotNull( \"Mojo found.\", mojo );\n\n        MavenProject mavenProject = (MavenProject) getVariableValueFromObject( mojo, \"project\" );\n        assertNotNull( mavenProject );\n\n        // Set some Mojo parameters\n        setVariableValueToObject( mojo, \"remoteRepositories\", mavenProject.getRemoteArtifactRepositories() );\n        setVariableValueToObject( mojo, \"about\", mavenProject.getUrl() );\n        DoapOptions doapOptions = (DoapOptions)getVariableValueFromObject(  mojo, \"doapOptions\" );\n        doapOptions.setDescription( \"Common Utilities\" );\n        doapOptions.setShortdesc( \"Common Utilities\" );\n        doapOptions.setDownloadPage( \"http://plexus.codehaus.org/download-binaries.html\" );\n        setVariableValueToObject( mojo, \"doapOptions\", doapOptions );\n\n        DoapArtifact artifact = new DoapArtifact();\n        artifact.setGroupId( \"org.codehaus.plexus\" );\n        artifact.setArtifactId( \"plexus-utils\" );\n        artifact.setVersion( \"1.5.5\" );\n        setVariableValueToObject( mojo, \"artifact\", artifact );\n        setVariableValueToObject( mojo, \"outputDirectory\", \"target/test/unit/doap-configuration/\" );\n\n        mojo.execute();\n\n        File doapFile = new File( getBasedir(), \"target/test/unit/doap-configuration/doap_plexus-utils.rdf\" );\n        assertTrue( \"Doap File was not generated!\", doapFile.exists() );\n\n        String readed = readFile( doapFile );\n\n        // Validate\n\n        // Pure DOAP\n        assertTrue( readed.contains( \"<rdf:RDF xml:lang=\\\"en\\\" xmlns=\\\"http://usefulinc.com/ns/doap#\\\" \"\n            + \"xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\" \"\n            + \"xmlns:foaf=\\\"http://xmlns.com/foaf/0.1/\\\">\" ) );\n        assertTrue( readed.contains( \"<Project rdf:about=\\\"http://plexus.codehaus.org/plexus-utils\\\">\" ) );\n        assertTrue( readed.contains( \"<name>Plexus Common Utilities<\/name>\" ) );\n        assertTrue( readed.contains( \"<description xml:lang=\\\"en\\\">Common Utilities<\/description>\" ) );\n        assertTrue( readed.contains( \"<shortdesc xml:lang=\\\"en\\\">Common Utilities<\/shortdesc>\" ) );\n        assertTrue( readed.contains( \"<created>2001-01-01<\/created>\" ) );\n        assertTrue( readed.contains( \"<download-page rdf:resource=\\\"http://plexus.codehaus.org/download-binaries.html\\\"/>\" ) );\n        assertTrue( readed.contains( \"<programming-language>Java<\/programming-language>\" ) );\n        assertTrue( readed.contains( \"<bug-database rdf:resource=\\\"http://jira.codehaus.org/browse/PLXUTILS\\\"/>\" ) );\n        assertTrue( readed.contains( \"<license rdf:resource=\\\"http://www.apache.org/licenses/LICENSE-2.0.txt\\\"/>\" ) );\n        assertTrue( readed.contains( \"<SVNRepository>\" ) );\n        assertTrue( readed.contains( \"<location rdf:resource=\\\"http://svn.codehaus.org/plexus/plexus-utils/tags/plexus-utils-1.5.5\\\"/>\" ) );\n        assertTrue( readed.contains( \"<browse rdf:resource=\\\"http://fisheye.codehaus.org/browse/plexus/plexus-utils/tags/plexus-utils-1.5.5\\\"/>\" ) );\n\n        // conf\n        assertTrue( readed.contains( \"<audience>developers<\/audience>\" ) );\n        assertTrue( readed.contains( \"<blog rdf:resource=\\\"http://myblog.foo.org\\\"/>\" ) );\n        assertTrue( readed.contains( \"<implements>JSR-foo<\/implements>\" ) );\n        assertTrue( readed.contains( \"<language>en<\/language>\" ) );\n        assertTrue( readed.contains( \"<language>fr<\/language>\" ) );\n        assertTrue( readed.contains( \"<old-homepage rdf:resource=\\\"http://old.foo.org\\\"/>\" ) );\n        assertTrue( readed.contains( \"<os>windows<\/os>\" ) );\n        assertTrue( readed.contains( \"<os>linux<\/os>\" ) );\n        assertTrue( readed.contains( \"<os>mac<\/os>\" ) );\n        assertTrue( readed.contains( \"<platform>java<\/platform>\" ) );\n        assertTrue( readed.contains( \"<screenshots rdf:resource=\\\"http://plexus.codehaus.org/plexus-utils/screenshots.html\\\"/>\" ) );\n        assertTrue( readed.contains( \"<service-endpoint rdf:resource=\\\"http://webservice.foo.org\\\"/>\" ) );\n        assertTrue( readed.contains( \"<wiki rdf:resource=\\\"http://wiki.foo.org\\\"/>\" ) );\n    }","commit_id":"8dbdb4949bf44e059023176c6439030aa54faef7","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Verify the generation of a pure DOAP file.\n     *\n     * @throws Exception if any\n     */\n    public void testGeneratedDoap()\n        throws Exception\n    {\n        File pluginXmlFile =\n            new File( getBasedir(), \"src/test/resources/unit/doap-configuration/doap-configuration-plugin-config.xml\" );\n        DoapMojo mojo = (DoapMojo) lookupMojo( \"generate\", pluginXmlFile );\n        assertNotNull( \"Mojo found.\", mojo );\n\n        MavenProject mavenProject = (MavenProject) getVariableValueFromObject( mojo, \"project\" );\n        assertNotNull( mavenProject );\n\n        // Set some Mojo parameters\n        setVariableValueToObject( mojo, \"remoteRepositories\", mavenProject.getRemoteArtifactRepositories() );\n        setVariableValueToObject( mojo, \"about\", mavenProject.getUrl() );\n\n        mojo.execute();\n\n        File doapFile = new File( getBasedir(), \"target/test/unit/doap-configuration/doap-configuration.rdf\" );\n        assertTrue( \"Doap File was not generated!\", doapFile.exists() );\n\n        String readed = readFile( doapFile );\n\n        // Validate\n\n        // Pure DOAP\n        assertTrue( readed.contains( \"<rdf:RDF xml:lang=\\\"en\\\" xmlns=\\\"http://usefulinc.com/ns/doap#\\\" \"\n            + \"xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\" \"\n            + \"xmlns:foaf=\\\"http://xmlns.com/foaf/0.1/\\\">\" ) );\n        if ( StringUtils.isNotEmpty( mavenProject.getUrl() ) )\n        {\n            assertTrue( readed.contains( \"<Project rdf:about=\\\"\" + mavenProject.getUrl() + \"\\\">\" ) );\n            assertTrue( readed.contains( \"<homepage rdf:resource=\\\"\" + mavenProject.getUrl() + \"\\\"/>\" ) );\n        }\n        assertTrue( readed.contains( \"<name>\" + mavenProject.getName() + \"<\/name>\" ) );\n        assertTrue( readed.contains( \"<programming-language>java<\/programming-language>\" ) );\n\n        // ASF ext\n        assertFalse( readed.contains( \"<asfext:pmc rdf:resource=\\\"\" + mavenProject.getUrl() + \"\\\"/>\" ) );\n        assertFalse( readed.contains( \"<asfext:name>\" + mavenProject.getName() + \"<\/name>\" ) );\n\n        // Developers and Organizations\n        assertTrue( readed.contains( \"<maintainer>\" ) );\n        assertTrue( readed.contains( \"<foaf:Person rdf:nodeID=\\\"b1\\\">\" ) );\n        assertTrue( readed.contains( \"<foaf:name>Jane Doe<\/foaf:name>\" ) );\n        assertTrue( readed.contains( \"<foaf:Organization>\" ) );\n        assertTrue( readed.contains( \"<foaf:homepage rdf:resource=\\\"http://www.example.org\\\"/>\" ) );\n        assertTrue( readed.contains( \"<foaf:member rdf:nodeID=\\\"b1\\\"/>\" ) );\n    }","id":15474,"modified_method":"/**\n     * Verify the generation of a pure DOAP file.\n     *\n     * @throws Exception if any\n     */\n    public void testGeneratedDoap()\n        throws Exception\n    {\n        File pluginXmlFile =\n            new File( getBasedir(), \"src/test/resources/unit/doap-configuration/doap-configuration-plugin-config.xml\" );\n        DoapMojo mojo = (DoapMojo) lookupMojo( \"generate\", pluginXmlFile );\n        assertNotNull( \"Mojo found.\", mojo );\n\n        MavenProject mavenProject = (MavenProject) getVariableValueFromObject( mojo, \"project\" );\n        assertNotNull( mavenProject );\n\n        // Set some Mojo parameters\n        setVariableValueToObject( mojo, \"remoteRepositories\", mavenProject.getRemoteArtifactRepositories() );\n        setVariableValueToObject( mojo, \"about\", mavenProject.getUrl() );\n\n        mojo.execute();\n\n        File doapFile = new File( getBasedir(), \"target/test/unit/doap-configuration/doap-configuration.rdf\" );\n        assertTrue( \"Doap File was not generated!\", doapFile.exists() );\n\n        String readed = readFile( doapFile );\n\n        // Validate\n\n        // Pure DOAP\n        assertTrue( readed.contains( \"<rdf:RDF xml:lang=\\\"en\\\" xmlns=\\\"http://usefulinc.com/ns/doap#\\\" \"\n            + \"xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\" \"\n            + \"xmlns:foaf=\\\"http://xmlns.com/foaf/0.1/\\\">\" ) );\n        assertTrue( readed.contains( \"<Project rdf:about=\\\"\" + mavenProject.getUrl() + \"\\\">\" ) );\n        assertTrue( readed.contains( \"<description xml:lang=\\\"en\\\">Test the DOAP plugin<\/description>\" ) );\n        assertTrue( readed.contains( \"<shortdesc xml:lang=\\\"en\\\">Test the DOAP plugin<\/shortdesc>\" ) );\n        assertTrue( readed.contains( \"<homepage rdf:resource=\\\"\" + mavenProject.getUrl() + \"\\\"/>\" ) );\n        assertTrue( readed.contains( \"<category>library<\/category>\" ) );\n        assertTrue( readed.contains( \"<created>2008-01-01<\/created>\" ) );\n        assertTrue( readed.contains( \"<name>\" + mavenProject.getName() + \"<\/name>\" ) );\n        assertTrue( readed.contains( \"<download-page rdf:resource=\\\"http://foo.org/download.html\\\"/>\" ) );\n        assertTrue( readed.contains( \"<programming-language>Java<\/programming-language>\" ) );\n        assertTrue( readed.contains( \"<bug-database rdf:resource=\\\"http://jira.codehaus.org/browse/MDOAPTEST\\\"/>\" ) );\n        assertTrue( readed.contains( \"<license rdf:resource=\\\"http://www.apache.org/licenses/LICENSE-2.0.txt\\\"/>\" ) );\n        assertTrue( readed.contains( \"<SVNRepository>\" ) );\n        assertTrue( readed.contains( \"<location rdf:resource=\\\"http://svn.foo.org/repos/asf/maven/plugins/trunk/maven-doap-plugin/src/test/resources/unit/doap-configuration\\\"/>\" ) );\n        assertTrue( readed.contains( \"<browse rdf:resource=\\\"http://svn.foo.org/viewvc/maven/plugins/trunk/maven-doap-plugin/src/test/resources/unit/doap-configuration\\\"/>\" ) );\n        assertTrue( readed.contains( \"<location rdf:resource=\\\"https://svn.foo.org/repos/asf/maven/plugins/trunk/maven-doap-plugin/src/test/resources/unit/doap-configuration\\\"/>\" ) );\n\n        // conf\n        assertTrue( readed.contains( \"<audience>developers<\/audience>\" ) );\n        assertTrue( readed.contains( \"<blog rdf:resource=\\\"http://myblog.foo.org\\\"/>\" ) );\n        assertTrue( readed.contains( \"<implements>JSR-foo<\/implements>\" ) );\n        assertTrue( readed.contains( \"<language>en<\/language>\" ) );\n        assertTrue( readed.contains( \"<language>fr<\/language>\" ) );\n        assertTrue( readed.contains( \"<old-homepage rdf:resource=\\\"http://old.foo.org\\\"/>\" ) );\n        assertTrue( readed.contains( \"<os>windows<\/os>\" ) );\n        assertTrue( readed.contains( \"<os>linux<\/os>\" ) );\n        assertTrue( readed.contains( \"<os>mac<\/os>\" ) );\n        assertTrue( readed.contains( \"<platform>java<\/platform>\" ) );\n        assertTrue( readed.contains( \"<platform>firefox<\/platform>\" ) );\n        assertTrue( readed.contains( \"<screenshots rdf:resource=\\\"\" + mavenProject.getUrl() +\"/screenshots.html\\\"/>\" ) );\n        assertTrue( readed.contains( \"<service-endpoint rdf:resource=\\\"http://webservice.foo.org\\\"/>\" ) );\n        assertTrue( readed.contains( \"<wiki rdf:resource=\\\"http://wiki.foo.org\\\"/>\" ) );\n\n        // ASF ext\n        assertFalse( readed.contains( \"<asfext:pmc rdf:resource=\\\"\" + mavenProject.getUrl() + \"\\\"/>\" ) );\n        assertFalse( readed.contains( \"<asfext:name>\" + mavenProject.getName() + \"<\/name>\" ) );\n\n        // Developers and Organizations\n        assertTrue( readed.contains( \"<maintainer>\" ) );\n        assertTrue( readed.contains( \"<foaf:Person rdf:nodeID=\\\"b1\\\">\" ) );\n        assertTrue( readed.contains( \"<foaf:name>Jane Doe<\/foaf:name>\" ) );\n        assertTrue( readed.contains( \"<foaf:Organization>\" ) );\n        assertTrue( readed.contains( \"<foaf:homepage rdf:resource=\\\"http://www.example.org\\\"/>\" ) );\n        assertTrue( readed.contains( \"<foaf:member rdf:nodeID=\\\"b1\\\"/>\" ) );\n    }","commit_id":"8dbdb4949bf44e059023176c6439030aa54faef7","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Verify the generation of a DOAP file with ASF extension.\n     *\n     * @throws Exception if any\n     */\n    public void testGeneratedDoapForASF()\n        throws Exception\n    {\n        File pluginXmlFile =\n            new File( getBasedir(),\n                      \"src/test/resources/unit/asf-doap-configuration/asf-doap-configuration-plugin-config.xml\" );\n        DoapMojo mojo = (DoapMojo) lookupMojo( \"generate\", pluginXmlFile );\n        assertNotNull( \"Mojo found.\", mojo );\n\n        MavenProject mavenProject = (MavenProject) getVariableValueFromObject( mojo, \"project\" );\n        assertNotNull( mavenProject );\n\n        // Set some Mojo parameters\n        setVariableValueToObject( mojo, \"remoteRepositories\", mavenProject.getRemoteArtifactRepositories() );\n        setVariableValueToObject( mojo, \"about\", mavenProject.getUrl() );\n\n        mojo.execute();\n\n        File doapFile = new File( getBasedir(), \"target/test/unit/asf-doap-configuration/asf-doap-configuration.rdf\" );\n        assertTrue( \"Doap File was not generated!\", doapFile.exists() );\n\n        String readed = readFile( doapFile );\n\n        // Validate\n\n        // ASF DOAP\n        assertTrue( readed.contains( \"<rdf:RDF xml:lang=\\\"en\\\" xmlns=\\\"http://usefulinc.com/ns/doap#\\\" \"\n            + \"xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\" \"\n            + \"xmlns:foaf=\\\"http://xmlns.com/foaf/0.1/\\\" \" + \"xmlns:asfext=\\\"http://projects.apache.org/ns/asfext#\\\">\" ) );\n        if ( StringUtils.isNotEmpty( mavenProject.getUrl() ) )\n        {\n            assertTrue( readed.contains( \"<Project rdf:about=\\\"\" + mavenProject.getUrl() + \"\\\">\" ) );\n            assertTrue( readed.contains( \"<homepage rdf:resource=\\\"\" + mavenProject.getUrl() + \"\\\"/>\" ) );\n        }\n        assertTrue( readed.contains( \"<name>Apache \" + mavenProject.getName() + \"<\/name>\" ) );\n        assertTrue( readed.contains( \"<programming-language>Java<\/programming-language>\" ) );\n\n        // ASF ext\n        assertTrue( readed.contains( \"<asfext:pmc rdf:resource=\\\"\" + mavenProject.getUrl() + \"\\\"/>\" ) );\n        assertTrue( readed.contains( \"<asfext:name>Apache \" + mavenProject.getName() + \"<\/asfext:name>\" ) );\n    }","id":15475,"modified_method":"/**\n     * Verify the generation of a DOAP file with ASF extension.\n     *\n     * @throws Exception if any\n     */\n    public void testGeneratedDoapForASF()\n        throws Exception\n    {\n        File pluginXmlFile =\n            new File( getBasedir(),\n                      \"src/test/resources/unit/asf-doap-configuration/asf-doap-configuration-plugin-config.xml\" );\n        DoapMojo mojo = (DoapMojo) lookupMojo( \"generate\", pluginXmlFile );\n        assertNotNull( \"Mojo found.\", mojo );\n\n        MavenProject mavenProject = (MavenProject) getVariableValueFromObject( mojo, \"project\" );\n        assertNotNull( mavenProject );\n\n        // Set some Mojo parameters\n        setVariableValueToObject( mojo, \"remoteRepositories\", mavenProject.getRemoteArtifactRepositories() );\n        setVariableValueToObject( mojo, \"about\", mavenProject.getUrl() );\n\n        mojo.execute();\n\n        File doapFile = new File( getBasedir(), \"target/test/unit/asf-doap-configuration/asf-doap-configuration.rdf\" );\n        assertTrue( \"Doap File was not generated!\", doapFile.exists() );\n\n        String readed = readFile( doapFile );\n\n        // Validate\n\n        // ASF DOAP\n        assertTrue( readed.contains( \"<rdf:RDF xml:lang=\\\"en\\\" xmlns=\\\"http://usefulinc.com/ns/doap#\\\" \"\n            + \"xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\" \"\n            + \"xmlns:foaf=\\\"http://xmlns.com/foaf/0.1/\\\" \" + \"xmlns:asfext=\\\"http://projects.apache.org/ns/asfext#\\\">\" ) );\n        if ( StringUtils.isNotEmpty( mavenProject.getUrl() ) )\n        {\n            assertTrue( readed.contains( \"<Project rdf:about=\\\"\" + mavenProject.getUrl() + \"\\\">\" ) );\n            assertTrue( readed.contains( \"<homepage rdf:resource=\\\"\" + mavenProject.getUrl() + \"\\\"/>\" ) );\n        }\n        assertTrue( readed.contains( \"<name>Apache \" + mavenProject.getName() + \"<\/name>\" ) );\n        assertTrue( readed.contains( \"<programming-language>Java<\/programming-language>\" ) );\n        assertTrue( readed.contains( \"<category rdf:resource=\\\"http://projects.apache.org/category/library\\\"/>\" ) );\n\n        // ASF ext\n        assertTrue( readed.contains( \"<asfext:pmc rdf:resource=\\\"\" + mavenProject.getUrl() + \"\\\"/>\" ) );\n        assertTrue( readed.contains( \"<asfext:name>Apache \" + mavenProject.getName() + \"<\/asfext:name>\" ) );\n        assertTrue( readed.contains( \"<asfext:charter>\" ) );\n        assertTrue( readed.contains( \"<asfext:chair>\" ) );\n    }","commit_id":"8dbdb4949bf44e059023176c6439030aa54faef7","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * @throws Exception if any\n     */\n    public void testLangParameters()\n        throws Exception\n    {\n\n        File pluginXmlFile =\n            new File( getBasedir(), \"src/test/resources/unit/doap-configuration/doap-configuration-plugin-config.xml\" );\n        DoapMojo mojo = (DoapMojo) lookupMojo( \"generate\", pluginXmlFile );\n        assertNotNull( \"Mojo found.\", mojo );\n\n        MavenProject mavenProject = (MavenProject) getVariableValueFromObject( mojo, \"project\" );\n        assertNotNull( mavenProject );\n\n        // check invalid lang\n        setVariableValueToObject( mojo, \"remoteRepositories\", mavenProject.getRemoteArtifactRepositories() );\n        setVariableValueToObject( mojo, \"lang\", \"foo\" );\n        try\n        {\n            mojo.execute();\n            assertTrue( \"No lang checked\", false );\n        }\n        catch ( Exception e )\n        {\n            assertTrue( true );\n        }\n    }","id":15476,"modified_method":"/**\n     * @throws Exception if any\n     */\n    public void testLangParameter()\n        throws Exception\n    {\n        File pluginXmlFile =\n            new File( getBasedir(), \"src/test/resources/unit/doap-configuration/doap-configuration-plugin-config.xml\" );\n        DoapMojo mojo = (DoapMojo) lookupMojo( \"generate\", pluginXmlFile );\n        assertNotNull( \"Mojo found.\", mojo );\n\n        MavenProject mavenProject = (MavenProject) getVariableValueFromObject( mojo, \"project\" );\n        assertNotNull( mavenProject );\n\n        // check invalid lang\n        setVariableValueToObject( mojo, \"remoteRepositories\", mavenProject.getRemoteArtifactRepositories() );\n        setVariableValueToObject( mojo, \"lang\", \"foo\" );\n        try\n        {\n            mojo.execute();\n            assertTrue( \"No lang checked\", false );\n        }\n        catch ( Exception e )\n        {\n            assertTrue( true );\n        }\n    }","commit_id":"8dbdb4949bf44e059023176c6439030aa54faef7","url":"https://github.com/apache/maven-plugins"},{"original_method":"@Override\n    public void modifyOutputStream(JarOutputStream jarOutputStream)\n            throws IOException {\n\n        if (shadedManifest == null) {\n            shadedManifest = new Manifest();\n        }\n\n        Attributes attributes = shadedManifest.getMainAttributes();\n        attributes.putValue(IMPORT_PACKAGE, StringUtils.join(importedPackages.iterator(), \",\"));\n        attributes.putValue(EXPORT_PACKAGE, StringUtils.join(exportedPackages.iterator(), \",\"));\n\n        if (mainClass != null) {\n            attributes.put(Attributes.Name.MAIN_CLASS, mainClass);\n        }\n\n        if (manifestEntries != null) {\n            for (Map.Entry<String, Attributes> entry : manifestEntries.entrySet()) {\n                attributes.put(new Attributes.Name(entry.getKey()), entry.getValue());\n            }\n        }\n\n        jarOutputStream.putNextEntry(new JarEntry(JarFile.MANIFEST_NAME));\n        shadedManifest.write(jarOutputStream);\n    }","id":15477,"modified_method":"@Override\n    public void modifyOutputStream(JarOutputStream jarOutputStream)\n            throws IOException {\n\n        if (shadedManifest == null) {\n            shadedManifest = new Manifest();\n        }\n\n        precompileOverrideInstructions();\n\n        Attributes attributes = shadedManifest.getMainAttributes();\n        attributes.putValue(IMPORT_PACKAGE, StringUtils.join(shadeImports().iterator(), \",\"));\n        attributes.putValue(EXPORT_PACKAGE, StringUtils.join(shadeExports().iterator(), \",\"));\n\n        attributes.putValue(\"Created-By\", \"HazelcastManifestTransformer through Shade Plugin\");\n\n        if (mainClass != null) {\n            attributes.put(Attributes.Name.MAIN_CLASS, mainClass);\n        }\n\n        if (manifestEntries != null) {\n            for (Map.Entry<String, Attributes> entry : manifestEntries.entrySet()) {\n                attributes.put(new Attributes.Name(entry.getKey()), entry.getValue());\n            }\n        }\n\n        jarOutputStream.putNextEntry(new JarEntry(JarFile.MANIFEST_NAME));\n        shadedManifest.write(jarOutputStream);\n        jarOutputStream.flush();\n    }","commit_id":"d0a28ca42b1784decda2f9ee66751a94c11ca572","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public void processResource(String resource, InputStream inputStream, List<Relocator> relocators)\n            throws IOException {\n\n        Attributes attributes;\n        if (shadedManifest == null) {\n            shadedManifest = new Manifest(inputStream);\n            attributes = shadedManifest.getMainAttributes();\n        } else {\n            Manifest manifest = new Manifest(inputStream);\n            attributes = manifest.getMainAttributes();\n        }\n\n        Set<String> imports = new LinkedHashSet<String>();\n        Set<String> exports = new LinkedHashSet<String>();\n\n        String importPackages = attributes.getValue(IMPORT_PACKAGE);\n        if (importPackages != null) {\n            imports.addAll(ElementParser.parseDelimitedString(importPackages, ',', true));\n        }\n\n        String exportPackages = attributes.getValue(EXPORT_PACKAGE);\n        if (exportPackages != null) {\n            exports.addAll(ElementParser.parseDelimitedString(exportPackages, ',', true));\n        }\n\n        importedPackages.removeAll(exports);\n        importedPackages.addAll(imports);\n        exportedPackages.addAll(exports);\n\n        IOUtil.close(inputStream);\n    }","id":15478,"modified_method":"@Override\n    public void processResource(String resource, InputStream inputStream, List<Relocator> relocators)\n            throws IOException {\n\n        Attributes attributes;\n        if (shadedManifest == null) {\n            shadedManifest = new Manifest(inputStream);\n            attributes = shadedManifest.getMainAttributes();\n        } else {\n            Manifest manifest = new Manifest(inputStream);\n            attributes = manifest.getMainAttributes();\n        }\n\n        String importPackages = attributes.getValue(IMPORT_PACKAGE);\n        if (importPackages != null) {\n            List<String> definitions = ElementParser.parseDelimitedString(importPackages, ',', true);\n            for (String definition : definitions) {\n                PackageDefinition packageDefinition = new PackageDefinition(definition);\n\n                String packageName = packageDefinition.packageName;\n                PackageDefinition oldPackageDefinition = importedPackages.get(packageName);\n                importedPackages.put(packageName, findStrongerDefinition(packageDefinition, oldPackageDefinition));\n            }\n        }\n\n        String exportPackages = attributes.getValue(EXPORT_PACKAGE);\n        if (exportPackages != null) {\n            List<String> definitions = ElementParser.parseDelimitedString(exportPackages, ',', true);\n            for (String definition : definitions) {\n                PackageDefinition packageDefinition = new PackageDefinition(definition);\n\n                String packageName = packageDefinition.packageName;\n                PackageDefinition oldPackageDefinition = exportedPackages.get(packageName);\n                exportedPackages.put(packageName, mergeExportUsesConstraint(packageDefinition, oldPackageDefinition));\n            }\n        }\n\n        IOUtil.close(inputStream);\n    }","commit_id":"d0a28ca42b1784decda2f9ee66751a94c11ca572","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public boolean canTransformResource(String resource) {\n        return resource.equals(JarFile.MANIFEST_NAME);\n    }","id":15479,"modified_method":"@Override\n    public boolean canTransformResource(String resource) {\n        return JarFile.MANIFEST_NAME.equalsIgnoreCase(resource);\n    }","commit_id":"d0a28ca42b1784decda2f9ee66751a94c11ca572","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public boolean canTransformResource(String resource) {\n        return resource.equals(JarFile.MANIFEST_NAME);\n    }","id":15480,"modified_method":"@Override\n    public boolean canTransformResource(String resource) {\n        return JarFile.MANIFEST_NAME.equalsIgnoreCase(resource);\n    }","commit_id":"f3eb9507a43b004a0a7d076229a6736ecd8f6bbf","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public void processResource(String resource, InputStream inputStream, List<Relocator> relocators)\n            throws IOException {\n\n        Attributes attributes;\n        if (shadedManifest == null) {\n            shadedManifest = new Manifest(inputStream);\n            attributes = shadedManifest.getMainAttributes();\n        } else {\n            Manifest manifest = new Manifest(inputStream);\n            attributes = manifest.getMainAttributes();\n        }\n\n        Set<String> imports = new LinkedHashSet<String>();\n        Set<String> exports = new LinkedHashSet<String>();\n\n        String importPackages = attributes.getValue(IMPORT_PACKAGE);\n        if (importPackages != null) {\n            imports.addAll(ElementParser.parseDelimitedString(importPackages, ',', true));\n        }\n\n        String exportPackages = attributes.getValue(EXPORT_PACKAGE);\n        if (exportPackages != null) {\n            exports.addAll(ElementParser.parseDelimitedString(exportPackages, ',', true));\n        }\n\n        importedPackages.removeAll(exports);\n        importedPackages.addAll(imports);\n        exportedPackages.addAll(exports);\n\n        IOUtil.close(inputStream);\n    }","id":15481,"modified_method":"@Override\n    public void processResource(String resource, InputStream inputStream, List<Relocator> relocators)\n            throws IOException {\n\n        Attributes attributes;\n        if (shadedManifest == null) {\n            shadedManifest = new Manifest(inputStream);\n            attributes = shadedManifest.getMainAttributes();\n        } else {\n            Manifest manifest = new Manifest(inputStream);\n            attributes = manifest.getMainAttributes();\n        }\n\n        String importPackages = attributes.getValue(IMPORT_PACKAGE);\n        if (importPackages != null) {\n            List<String> definitions = ElementParser.parseDelimitedString(importPackages, ',', true);\n            for (String definition : definitions) {\n                PackageDefinition packageDefinition = new PackageDefinition(definition);\n\n                String packageName = packageDefinition.packageName;\n                PackageDefinition oldPackageDefinition = importedPackages.get(packageName);\n                importedPackages.put(packageName, findStrongerDefinition(packageDefinition, oldPackageDefinition));\n            }\n        }\n\n        String exportPackages = attributes.getValue(EXPORT_PACKAGE);\n        if (exportPackages != null) {\n            List<String> definitions = ElementParser.parseDelimitedString(exportPackages, ',', true);\n            for (String definition : definitions) {\n                PackageDefinition packageDefinition = new PackageDefinition(definition);\n\n                String packageName = packageDefinition.packageName;\n                PackageDefinition oldPackageDefinition = exportedPackages.get(packageName);\n                exportedPackages.put(packageName, mergeExportUsesConstraint(packageDefinition, oldPackageDefinition));\n            }\n        }\n\n        IOUtil.close(inputStream);\n    }","commit_id":"f3eb9507a43b004a0a7d076229a6736ecd8f6bbf","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public void modifyOutputStream(JarOutputStream jarOutputStream)\n            throws IOException {\n\n        if (shadedManifest == null) {\n            shadedManifest = new Manifest();\n        }\n\n        Attributes attributes = shadedManifest.getMainAttributes();\n        attributes.putValue(IMPORT_PACKAGE, StringUtils.join(importedPackages.iterator(), \",\"));\n        attributes.putValue(EXPORT_PACKAGE, StringUtils.join(exportedPackages.iterator(), \",\"));\n\n        if (mainClass != null) {\n            attributes.put(Attributes.Name.MAIN_CLASS, mainClass);\n        }\n\n        if (manifestEntries != null) {\n            for (Map.Entry<String, Attributes> entry : manifestEntries.entrySet()) {\n                attributes.put(new Attributes.Name(entry.getKey()), entry.getValue());\n            }\n        }\n\n        jarOutputStream.putNextEntry(new JarEntry(JarFile.MANIFEST_NAME));\n        shadedManifest.write(jarOutputStream);\n    }","id":15482,"modified_method":"@Override\n    public void modifyOutputStream(JarOutputStream jarOutputStream)\n            throws IOException {\n\n        if (shadedManifest == null) {\n            shadedManifest = new Manifest();\n        }\n\n        precompileOverrideInstructions();\n\n        Attributes attributes = shadedManifest.getMainAttributes();\n        attributes.putValue(IMPORT_PACKAGE, StringUtils.join(shadeImports().iterator(), \",\"));\n        attributes.putValue(EXPORT_PACKAGE, StringUtils.join(shadeExports().iterator(), \",\"));\n\n        attributes.putValue(\"Created-By\", \"HazelcastManifestTransformer through Shade Plugin\");\n\n        if (mainClass != null) {\n            attributes.put(Attributes.Name.MAIN_CLASS, mainClass);\n        }\n\n        if (manifestEntries != null) {\n            for (Map.Entry<String, Attributes> entry : manifestEntries.entrySet()) {\n                attributes.put(new Attributes.Name(entry.getKey()), entry.getValue());\n            }\n        }\n\n        jarOutputStream.putNextEntry(new JarEntry(JarFile.MANIFEST_NAME));\n        shadedManifest.write(jarOutputStream);\n        jarOutputStream.flush();\n    }","commit_id":"f3eb9507a43b004a0a7d076229a6736ecd8f6bbf","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Test\n    public void testVelocityLetter() throws Exception {\n        String msg = String.format(\"Dear Ibsen, Claus%s%sThanks for the order of Camel in Action.%s%sRegards Camel Riders Bookstore%sPS: Next beer is on me, James\",\n                System.lineSeparator(), System.lineSeparator(), System.lineSeparator(), System.lineSeparator(), System.lineSeparator());\n        MockEndpoint mock = getMockEndpoint(\"mock:result\");\n        mock.expectedBodiesReceived(msg);\n\n        template.send(\"direct:a\", createLetter());\n\n        mock.assertIsSatisfied();\n        \n        mock.reset();\n\n        String msg2 = String.format(\"Dear Ibsen, Claus%s%sThanks for the order of Camel in Action.%s%sRegards Apache Camel Riders Bookstore%sPS: Next beer is on me, James\",\n                System.lineSeparator(), System.lineSeparator(), System.lineSeparator(), System.lineSeparator(), System.lineSeparator());\n        mock.expectedBodiesReceived(msg2);\n\n        template.send(\"direct:a\", createLetter());\n\n        mock.assertIsSatisfied();\n    }","id":15483,"modified_method":"@Test\n    public void testVelocityLetter() throws Exception {\n        MockEndpoint mock = getMockEndpoint(\"mock:result\");\n        mock.expectedMessageCount(1);\n        mock.message(0).body(String.class).contains(\"Thanks for the order of Camel in Action\");\n\n        template.send(\"direct:a\", createLetter());\n\n        mock.assertIsSatisfied();\n        \n        mock.reset();\n\n        mock.expectedMessageCount(1);\n        mock.message(0).body(String.class).contains(\"Regards Apache Camel Riders Bookstore\");\n\n        template.send(\"direct:a\", createLetter());\n\n        mock.assertIsSatisfied();\n    }","commit_id":"bf8df747a27cc5c6eafa038d2a89d32d878393cb","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void testVelocityLetter() throws Exception {\n        String msg = String.format(\"Dear Ibsen, Claus%s%sThanks for the order of Camel in Action.%s%sRegards Camel Riders Bookstore%sPS: Next beer is on me, James\",\n                System.lineSeparator(), System.lineSeparator(), System.lineSeparator(), System.lineSeparator(), System.lineSeparator());\n\n        MockEndpoint mock = getMockEndpoint(\"mock:result\");\n        mock.expectedMessageCount(1);\n        mock.expectedBodiesReceived(msg);\n\n        template.send(\"direct:a\", createLetter());\n\n        mock.assertIsSatisfied();\n    }","id":15484,"modified_method":"@Test\n    public void testVelocityLetter() throws Exception {\n        MockEndpoint mock = getMockEndpoint(\"mock:result\");\n        mock.expectedMessageCount(1);\n        mock.message(0).body(String.class).contains(\"Thanks for the order of Camel in Action\");\n\n        template.send(\"direct:a\", createLetter());\n\n        mock.assertIsSatisfied();\n    }","commit_id":"bf8df747a27cc5c6eafa038d2a89d32d878393cb","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void testVelocityLetter() throws Exception {\n        String msg = String.format(\"Dear Ibsen, Claus%s%sThanks for the order of Camel in Action.%s%sRegards Camel Riders Bookstore%sPS: Next beer is on me, James\",\n                System.lineSeparator(), System.lineSeparator(), System.lineSeparator(), System.lineSeparator(), System.lineSeparator());\n        MockEndpoint mock = getMockEndpoint(\"mock:result\");\n        mock.expectedBodiesReceived(msg);\n\n        template.send(\"direct:a\", createLetter(\"org/apache/camel/component/velocity/letter.vm\"));\n\n        mock.assertIsSatisfied();\n        \n        mock.reset();\n\n        String msg2 = String.format(\"Dear Ibsen, Claus%s%sThanks for the order of Camel in Action.%s%sRegards Apache Camel Riders Bookstore%sPS: Next beer is on me, James\",\n                System.lineSeparator(), System.lineSeparator(), System.lineSeparator(), System.lineSeparator(), System.lineSeparator());\n        mock.expectedBodiesReceived(msg2);\n\n        template.send(\"direct:a\", createLetter(\"org/apache/camel/component/velocity/letter2.vm\"));\n\n        mock.assertIsSatisfied();\n    }","id":15485,"modified_method":"@Test\n    public void testVelocityLetter() throws Exception {\n        MockEndpoint mock = getMockEndpoint(\"mock:result\");\n        mock.expectedMessageCount(1);\n        mock.message(0).body(String.class).contains(\"Thanks for the order of Camel in Action\");\n\n        template.send(\"direct:a\", createLetter(\"org/apache/camel/component/velocity/letter.vm\"));\n\n        mock.assertIsSatisfied();\n        \n        mock.reset();\n\n        mock.expectedMessageCount(1);\n        mock.message(0).body(String.class).contains(\"Regards Apache Camel Riders Bookstore\");\n\n        template.send(\"direct:a\", createLetter(\"org/apache/camel/component/velocity/letter2.vm\"));\n\n        mock.assertIsSatisfied();\n    }","commit_id":"bf8df747a27cc5c6eafa038d2a89d32d878393cb","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void testWithAllValues() throws Exception {\n        MockEndpoint mock = getMockEndpoint(\"mock:result\");\n        mock.expectedMessageCount(1);\n        mock.expectedBodiesReceived(\"Hello Claus\\n\"\n                + \"You have id: 123 if an id was assigned to you.\");\n\n        Map<String, Object> headers = new HashMap<String, Object>();\n        headers.put(\"name\", \"Claus\");\n        headers.put(\"id\", 123);\n        template.sendBodyAndHeaders(\"direct:a\", \"\", headers);\n\n        assertMockEndpointsSatisfied();\n    }","id":15486,"modified_method":"@Test\n    public void testWithAllValues() throws Exception {\n        MockEndpoint mock = getMockEndpoint(\"mock:result\");\n        mock.expectedMessageCount(1);\n        mock.message(0).constant(\"Hello Claus\");\n        mock.message(0).constant(\"You have id: 123 if an id was assigned to you.\");\n\n        Map<String, Object> headers = new HashMap<String, Object>();\n        headers.put(\"name\", \"Claus\");\n        headers.put(\"id\", 123);\n        template.sendBodyAndHeaders(\"direct:a\", \"\", headers);\n\n        assertMockEndpointsSatisfied();\n    }","commit_id":"bf8df747a27cc5c6eafa038d2a89d32d878393cb","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void testWithSomeValues() throws Exception {\n        MockEndpoint mock = getMockEndpoint(\"mock:result\");\n        mock.expectedMessageCount(1);\n        mock.expectedBodiesReceived(\"Hello Claus\\n\"\n                + \"You have id:  if an id was assigned to you.\");\n\n        Map<String, Object> headers = new HashMap<String, Object>();\n        headers.put(\"name\", \"Claus\");\n        template.sendBodyAndHeaders(\"direct:a\", \"\", headers);\n\n        assertMockEndpointsSatisfied();\n    }","id":15487,"modified_method":"@Test\n    public void testWithSomeValues() throws Exception {\n        MockEndpoint mock = getMockEndpoint(\"mock:result\");\n        mock.expectedMessageCount(1);\n        mock.message(0).constant(\"Hello Claus\");\n        mock.message(0).constant(\"You have id:  if an id was assigned to you.\");\n\n        Map<String, Object> headers = new HashMap<String, Object>();\n        headers.put(\"name\", \"Claus\");\n        template.sendBodyAndHeaders(\"direct:a\", \"\", headers);\n\n        assertMockEndpointsSatisfied();\n    }","commit_id":"bf8df747a27cc5c6eafa038d2a89d32d878393cb","url":"https://github.com/apache/camel"},{"original_method":"public ChainedProperties(ClassLoader classLoader, String confFileName, boolean populateDefaults) {\r\n        if ( classLoader == null ) {\r\n            classLoader = Thread.currentThread().getContextClassLoader();\r\n            if ( classLoader == null ) {\r\n                classLoader = this.getClass().getClassLoader();\r\n            }\r\n        }  \r\n        \r\n        this.props = new ArrayList();\r\n        this.defaultProps = new ArrayList();\r\n        \r\n        // Properties added in precedence order\r\n\r\n        // System defined properties always get precedence\r\n        addProperties( System.getProperties() );\r\n\r\n        // System property defined properties file\r\n        loadProperties( System.getProperty( \"drools.\" + confFileName), this.props );\r\n\r\n        // User home properties file\r\n        loadProperties( System.getProperty( \"user.home\" ) + \"/drools.\" + confFileName, this.props );\r\n\r\n        // Working directory properties file\r\n        loadProperties( \"drools.\" + confFileName, this.props );\r\n\r\n        // check META-INF directories for all known ClassLoaders\r\n        ClassLoader confClassLoader = classLoader;\r\n        if ( confClassLoader != null ) {\r\n            loadProperties( confClassLoader.getResource( \"META-INF/drools.\" + confFileName), this.props );\r\n        }\r\n\r\n        confClassLoader = getClass().getClassLoader();\r\n        if ( confClassLoader != null && confClassLoader != classLoader ) {\r\n            loadProperties( confClassLoader.getResource( \"META-INF/drools.\" + confFileName ), this.props );\r\n        }\r\n\r\n        confClassLoader = Thread.currentThread().getContextClassLoader();\r\n        if ( confClassLoader != null && confClassLoader != classLoader ) {\r\n            loadProperties( confClassLoader.getResource( \"META-INF/drools.\" + confFileName ), this.props );\r\n        }\r\n\r\n        confClassLoader = ClassLoader.getSystemClassLoader();\r\n        if ( confClassLoader != null && confClassLoader != classLoader ) {\r\n            loadProperties( confClassLoader.getResource( \"META-INF/drools.\" + confFileName ), this.props );\r\n        }\r\n        \r\n        if ( !populateDefaults ) {\r\n            return;            \r\n        }\r\n\r\n        // load default, only use the first one as there should only be one\r\n        confClassLoader = classLoader;\r\n        URL defaultURL = null;\r\n        if ( confClassLoader != null ) {\r\n            defaultURL = confClassLoader.getResource( \"META-INF/drools.default.\" + confFileName );\r\n        }\r\n\r\n        if ( defaultURL == null ) {\r\n            confClassLoader = getClass().getClassLoader();\r\n            if ( confClassLoader != null && confClassLoader != classLoader ) {\r\n                defaultURL = confClassLoader.getResource( \"META-INF/drools.default.\" + confFileName );\r\n            }\r\n        }\r\n\r\n        if ( defaultURL == null ) {\r\n            confClassLoader = Thread.currentThread().getContextClassLoader();\r\n            if ( confClassLoader != null && confClassLoader != classLoader ) {\r\n                defaultURL = confClassLoader.getResource( \"META-INF/drools.default.\" + confFileName );\r\n            }\r\n        }\r\n\r\n        if ( defaultURL == null ) {\r\n            confClassLoader = ClassLoader.getSystemClassLoader();\r\n            if ( confClassLoader != null && confClassLoader != classLoader ) {\r\n                defaultURL = confClassLoader.getResource( \"META-INF/drools.default.\" + confFileName );\r\n            }\r\n        }\r\n\r\n        if ( defaultURL != null ) {\r\n            loadProperties( defaultURL, this.defaultProps );\r\n        }\r\n    }","id":15488,"modified_method":"public ChainedProperties(ClassLoader classLoader,\r\n                             String confFileName,\r\n                             boolean populateDefaults) {\r\n        if ( classLoader == null ) {\r\n            classLoader = Thread.currentThread().getContextClassLoader();\r\n            if ( classLoader == null ) {\r\n                classLoader = this.getClass().getClassLoader();\r\n            }\r\n        }\r\n\r\n        this.props = new ArrayList();\r\n        this.defaultProps = new ArrayList();\r\n\r\n        // Properties added in precedence order\r\n\r\n        // System defined properties always get precedence\r\n        addProperties( System.getProperties() );\r\n\r\n        // System property defined properties file\r\n        loadProperties( System.getProperty( \"drools.\" + confFileName ),\r\n                        this.props );\r\n\r\n        // User home properties file\r\n        loadProperties( System.getProperty( \"user.home\" ) + \"/drools.\" + confFileName,\r\n                        this.props );\r\n\r\n        // Working directory properties file\r\n        loadProperties( \"drools.\" + confFileName,\r\n                        this.props );\r\n\r\n        // check META-INF directories for all known ClassLoaders\r\n        ClassLoader confClassLoader = classLoader;\r\n        if ( confClassLoader != null ) {\r\n            loadProperties( getResources( \"META-INF/drools.\" + confFileName,\r\n                                          confClassLoader ),\r\n                            this.props );\r\n        }\r\n\r\n        confClassLoader = getClass().getClassLoader();\r\n        if ( confClassLoader != null && confClassLoader != classLoader ) {\r\n            loadProperties( getResources( \"META-INF/drools.\" + confFileName,\r\n                                          confClassLoader ),\r\n                            this.props );\r\n        }\r\n\r\n        confClassLoader = Thread.currentThread().getContextClassLoader();\r\n        if ( confClassLoader != null && confClassLoader != classLoader ) {\r\n            loadProperties( getResources( \"META-INF/drools.\" + confFileName,\r\n                                          confClassLoader ),\r\n                            this.props );\r\n        }\r\n\r\n        confClassLoader = ClassLoader.getSystemClassLoader();\r\n        if ( confClassLoader != null && confClassLoader != classLoader ) {\r\n            loadProperties( getResources( \"META-INF/drools.\" + confFileName,\r\n                                          confClassLoader ),\r\n                            this.props );\r\n        }\r\n\r\n        if ( !populateDefaults ) {\r\n            return;\r\n        }\r\n\r\n        // load defaults\r\n        confClassLoader = classLoader;\r\n        if ( confClassLoader != null ) {\r\n            loadProperties( getResources( \"META-INF/drools.default.\" + confFileName,\r\n                                          confClassLoader ),\r\n                            this.defaultProps );\r\n        }\r\n\r\n        confClassLoader = getClass().getClassLoader();\r\n        if ( confClassLoader != null && confClassLoader != classLoader ) {\r\n            loadProperties( getResources( \"META-INF/drools.default.\" + confFileName,\r\n                                          confClassLoader ),\r\n                            this.defaultProps );\r\n        }\r\n\r\n        confClassLoader = Thread.currentThread().getContextClassLoader();\r\n        if ( confClassLoader != null && confClassLoader != classLoader ) {\r\n            loadProperties( getResources( \"META-INF/drools.default.\" + confFileName,\r\n                                          confClassLoader ),\r\n                            this.defaultProps );\r\n        }\r\n\r\n        confClassLoader = ClassLoader.getSystemClassLoader();\r\n        if ( confClassLoader != null && confClassLoader != classLoader ) {\r\n            loadProperties( getResources( \"META-INF/drools.default.\" + confFileName,\r\n                                          confClassLoader ),\r\n                            this.defaultProps );\r\n        }\r\n    }","commit_id":"8f2c3068f6c50090bf33b690302f48747ec8d0c9","url":"https://github.com/droolsjbpm/drools"},{"original_method":"private void loadProperties(URL confURL, List chain) {\r\n        if ( confURL != null ) {\r\n            Properties properties = new Properties();\r\n            try {\r\n                properties.load( confURL.openStream() );\r\n                chain.add( properties );\r\n            } catch ( IOException e ) {\r\n                //throw new IllegalArgumentException( \"Invalid URL to properties file '\" + confURL.toExternalForm() + \"'\" );\r\n            }\r\n        }\r\n    }","id":15489,"modified_method":"private void loadProperties(URL confURL,\r\n                                List chain) {\r\n        if ( confURL == null ) {\r\n            return;\r\n        }\r\n        Properties properties = new Properties();\r\n        try {\r\n            properties.load( confURL.openStream() );\r\n            chain.add( properties );\r\n        } catch ( IOException e ) {\r\n            //throw new IllegalArgumentException( \"Invalid URL to properties file '\" + confURL.toExternalForm() + \"'\" );\r\n        }\r\n    }","commit_id":"8f2c3068f6c50090bf33b690302f48747ec8d0c9","url":"https://github.com/droolsjbpm/drools"},{"original_method":"private void executeDelete(Tree statement) \n            throws TException, InvalidRequestException, UnavailableException, TimedOutException\n    {\n        if (!CliMain.isConnected() || !hasKeySpace())\n            return;\n\n        Tree columnFamilySpec = statement.getChild(0);\n\n        String key = CliCompiler.getKey(columnFamilySpec);\n        String columnFamily = CliCompiler.getColumnFamily(columnFamilySpec, keyspacesMap.get(keySpace).cf_defs);\n        int columnSpecCnt = CliCompiler.numColumnSpecifiers(columnFamilySpec);\n\n        byte[] superColumnName = null;\n        byte[] columnName = null;\n        CfDef cfDef = getCfDef(columnFamily);\n        boolean isSuper = cfDef.column_type.equals(\"Super\");\n     \n        if ((columnSpecCnt < 0) || (columnSpecCnt > 2))\n        {\n            sessionState.out.println(\"Invalid row, super column, or column specification.\");\n            return;\n        }\n        \n        if (columnSpecCnt == 1)\n        {\n            // table.cf['key']['column']\n            if (isSuper)\n                superColumnName = columnNameAsByteArray(CliCompiler.getColumn(columnFamilySpec, 0), cfDef);\n            else\n                columnName = columnNameAsByteArray(CliCompiler.getColumn(columnFamilySpec, 0), cfDef);\n        }\n        else if (columnSpecCnt == 2)\n        {\n            // table.cf['key']['column']['column']\n            superColumnName = columnNameAsByteArray(CliCompiler.getColumn(columnFamilySpec, 0), cfDef);\n            columnName = subColumnNameAsByteArray(CliCompiler.getColumn(columnFamilySpec, 1), cfDef);\n        }\n\n        ColumnPath path = new ColumnPath(columnFamily);\n        if (superColumnName != null)\n            path.setSuper_column(superColumnName);\n\n        if (columnName != null)\n            path.setColumn(columnName);\n\n        if (isCounterCF(cfDef))\n        {\n            thriftClient.remove_counter(ByteBufferUtil.bytes(key), path, consistencyLevel);\n        }\n        else\n        {\n            thriftClient.remove(ByteBufferUtil.bytes(key), path,\n                    FBUtilities.timestampMicros(), consistencyLevel);\n        }\n        sessionState.out.println(String.format(\"%s removed.\", (columnSpecCnt == 0) ? \"row\" : \"column\"));\n    }","id":15490,"modified_method":"private void executeDelete(Tree statement) \n            throws TException, InvalidRequestException, UnavailableException, TimedOutException\n    {\n        if (!CliMain.isConnected() || !hasKeySpace())\n            return;\n\n        Tree columnFamilySpec = statement.getChild(0);\n\n        String columnFamily = CliCompiler.getColumnFamily(columnFamilySpec, keyspacesMap.get(keySpace).cf_defs);\n        CfDef cfDef = getCfDef(columnFamily);\n\n        ByteBuffer key = getKeyAsBytes(columnFamily, columnFamilySpec.getChild(1));\n        int columnSpecCnt = CliCompiler.numColumnSpecifiers(columnFamilySpec);\n\n        byte[] superColumnName = null;\n        byte[] columnName = null;\n        boolean isSuper = cfDef.column_type.equals(\"Super\");\n     \n        if ((columnSpecCnt < 0) || (columnSpecCnt > 2))\n        {\n            sessionState.out.println(\"Invalid row, super column, or column specification.\");\n            return;\n        }\n\n        Tree columnTree = (columnSpecCnt >= 1)\n                           ? columnFamilySpec.getChild(2)\n                           : null;\n\n        Tree subColumnTree = (columnSpecCnt == 2)\n                              ? columnFamilySpec.getChild(3)\n                              : null;\n\n        if (columnSpecCnt == 1)\n        {\n            assert columnTree != null;\n\n            byte[] columnNameBytes = (columnTree.getType() == CliParser.FUNCTION_CALL)\n                                      ? convertValueByFunction(columnTree, null, null).array()\n                                      : columnNameAsByteArray(CliCompiler.getColumn(columnFamilySpec, 0), cfDef);\n\n            // table.cf['key']['column']\n            if (isSuper)\n                superColumnName = columnNameBytes;\n            else\n                columnName = columnNameBytes;\n        }\n        else if (columnSpecCnt == 2)\n        {\n            assert columnTree != null;\n            assert subColumnTree != null;\n\n            // table.cf['key']['column']['column']\n            superColumnName = (columnTree.getType() == CliParser.FUNCTION_CALL)\n                                      ? convertValueByFunction(columnTree, null, null).array()\n                                      : columnNameAsByteArray(CliCompiler.getColumn(columnFamilySpec, 0), cfDef);\n\n            columnName = (subColumnTree.getType() == CliParser.FUNCTION_CALL)\n                                         ? convertValueByFunction(subColumnTree, null, null).array()\n                                         : subColumnNameAsByteArray(CliCompiler.getColumn(columnFamilySpec, 1), cfDef);\n        }\n\n        ColumnPath path = new ColumnPath(columnFamily);\n        if (superColumnName != null)\n            path.setSuper_column(superColumnName);\n\n        if (columnName != null)\n            path.setColumn(columnName);\n\n        if (isCounterCF(cfDef))\n        {\n            thriftClient.remove_counter(key, path, consistencyLevel);\n        }\n        else\n        {\n            thriftClient.remove(key, path, FBUtilities.timestampMicros(), consistencyLevel);\n        }\n        sessionState.out.println(String.format(\"%s removed.\", (columnSpecCnt == 0) ? \"row\" : \"column\"));\n    }","commit_id":"ab72dc9270bc14235ea81f7fc73da1b780f657e5","url":"https://github.com/apache/cassandra"},{"original_method":"private void executeDelete(Tree statement) \n            throws TException, InvalidRequestException, UnavailableException, TimedOutException\n    {\n        if (!CliMain.isConnected() || !hasKeySpace())\n            return;\n\n        Tree columnFamilySpec = statement.getChild(0);\n\n        String key = CliCompiler.getKey(columnFamilySpec);\n        String columnFamily = CliCompiler.getColumnFamily(columnFamilySpec, keyspacesMap.get(keySpace).cf_defs);\n        int columnSpecCnt = CliCompiler.numColumnSpecifiers(columnFamilySpec);\n\n        byte[] superColumnName = null;\n        byte[] columnName = null;\n        CfDef cfDef = getCfDef(columnFamily);\n        boolean isSuper = cfDef.column_type.equals(\"Super\");\n     \n        if ((columnSpecCnt < 0) || (columnSpecCnt > 2))\n        {\n            sessionState.out.println(\"Invalid row, super column, or column specification.\");\n            return;\n        }\n        \n        if (columnSpecCnt == 1)\n        {\n            // table.cf['key']['column']\n            if (isSuper)\n                superColumnName = columnNameAsByteArray(CliCompiler.getColumn(columnFamilySpec, 0), cfDef);\n            else\n                columnName = columnNameAsByteArray(CliCompiler.getColumn(columnFamilySpec, 0), cfDef);\n        }\n        else if (columnSpecCnt == 2)\n        {\n            // table.cf['key']['column']['column']\n            superColumnName = columnNameAsByteArray(CliCompiler.getColumn(columnFamilySpec, 0), cfDef);\n            columnName = subColumnNameAsByteArray(CliCompiler.getColumn(columnFamilySpec, 1), cfDef);\n        }\n\n        ColumnPath path = new ColumnPath(columnFamily);\n        if (superColumnName != null)\n            path.setSuper_column(superColumnName);\n\n        if (columnName != null)\n            path.setColumn(columnName);\n\n        thriftClient.remove(ByteBufferUtil.bytes(key), path,\n                             FBUtilities.timestampMicros(), consistencyLevel);\n        sessionState.out.println(String.format(\"%s removed.\", (columnSpecCnt == 0) ? \"row\" : \"column\"));\n    }","id":15491,"modified_method":"private void executeDelete(Tree statement) \n            throws TException, InvalidRequestException, UnavailableException, TimedOutException\n    {\n        if (!CliMain.isConnected() || !hasKeySpace())\n            return;\n\n        Tree columnFamilySpec = statement.getChild(0);\n\n        String key = CliCompiler.getKey(columnFamilySpec);\n        String columnFamily = CliCompiler.getColumnFamily(columnFamilySpec, keyspacesMap.get(keySpace).cf_defs);\n        int columnSpecCnt = CliCompiler.numColumnSpecifiers(columnFamilySpec);\n\n        byte[] superColumnName = null;\n        byte[] columnName = null;\n        CfDef cfDef = getCfDef(columnFamily);\n        boolean isSuper = cfDef.column_type.equals(\"Super\");\n     \n        if ((columnSpecCnt < 0) || (columnSpecCnt > 2))\n        {\n            sessionState.out.println(\"Invalid row, super column, or column specification.\");\n            return;\n        }\n\n        Tree columnTree = (columnSpecCnt >= 1)\n                           ? columnFamilySpec.getChild(2)\n                           : null;\n\n        Tree subColumnTree = (columnSpecCnt == 2)\n                              ? columnFamilySpec.getChild(3)\n                              : null;\n\n        if (columnSpecCnt == 1)\n        {\n            // table.cf['key']['column']\n            assert columnTree != null;\n\n            byte[] columnNameBytes = (columnTree.getType() == CliParser.FUNCTION_CALL)\n                                      ? convertValueByFunction(columnTree, null, null).array()\n                                      : columnNameAsByteArray(CliCompiler.getColumn(columnFamilySpec, 0), cfDef);\n\n            if (isSuper)\n                superColumnName = columnNameBytes;\n            else\n                columnName = columnNameBytes;\n        }\n        else if (columnSpecCnt == 2)\n        {\n            assert columnTree != null;\n            assert subColumnTree != null;\n\n            // table.cf['key']['column']['column']\n            superColumnName = (columnTree.getType() == CliParser.FUNCTION_CALL)\n                                      ? convertValueByFunction(columnTree, null, null).array()\n                                      : columnNameAsByteArray(CliCompiler.getColumn(columnFamilySpec, 0), cfDef);\n\n            columnName = (subColumnTree.getType() == CliParser.FUNCTION_CALL)\n                                         ? convertValueByFunction(subColumnTree, null, null).array()\n                                         : subColumnNameAsByteArray(CliCompiler.getColumn(columnFamilySpec, 1), cfDef);\n        }\n\n        ColumnPath path = new ColumnPath(columnFamily);\n        if (superColumnName != null)\n            path.setSuper_column(superColumnName);\n\n        if (columnName != null)\n            path.setColumn(columnName);\n\n        thriftClient.remove(ByteBufferUtil.bytes(key), path,\n                             FBUtilities.timestampMicros(), consistencyLevel);\n        sessionState.out.println(String.format(\"%s removed.\", (columnSpecCnt == 0) ? \"row\" : \"column\"));\n    }","commit_id":"65dcec661a1cade3ccd5adb1fa0b47b5df7b972d","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n     * ORDER OF INTERPOLATION PRECEDENCE:\n     * <ol>\n     * <li>Support for special expressions, like ${finalName} (use the assembly plugin configuration not the build\n     * config)<\/li>\n     * <li>prefixed with \"module.\" if moduleProject is non-null\n     * <ol>\n     * <li>MavenProject instance for module being assembled<\/li>\n     * <\/ol>\n     * <\/li>\n     * <li>prefixed with \"artifact.\" if artifactProject is non-null\n     * <ol>\n     * <li>MavenProject instance for artifact<\/li>\n     * <\/ol>\n     * <\/li>\n     * <li>user-defined properties from the command line<\/li>\n     * <li>prefixed with \"pom.\" or \"project.\", or no prefix at all\n     * <ol>\n     * <li>MavenProject instance from current build<\/li>\n     * <\/ol>\n     * <\/li>\n     * <li>properties from main project<\/li>\n     * <li>system properties, from the MavenSession instance (to support IDEs)<\/li>\n     * <li>environment variables.<\/li>\n     * <\/ol>\n     */\n    public static String getOutputDirectory( final String output, final MavenProject mainProject,\n                                             final MavenProject moduleProject, final MavenProject artifactProject,\n                                             final String finalName, final AssemblerConfigurationSource configSource )\n        throws AssemblyFormattingException\n    {\n        String value = output;\n        if ( value == null )\n        {\n            value = \"\";\n        }\n\n        final StringSearchInterpolator interpolator = new StringSearchInterpolator();\n\n        final Properties specialExpressionOverrides = new Properties();\n\n        if ( finalName != null )\n        {\n            specialExpressionOverrides.setProperty( \"finalName\", finalName );\n            specialExpressionOverrides.setProperty( \"build.finalName\", finalName );\n        }\n\n        // 1\n        interpolator.addValueSource( new PropertiesBasedValueSource( specialExpressionOverrides ) );\n\n        if ( moduleProject != null )\n        {\n            // 2\n            interpolator.addValueSource( new PrefixedObjectValueSource( \"module.\", moduleProject ) );\n            interpolator.addValueSource( new PrefixedPropertiesValueSource( \"module.properties.\",\n                                                                            moduleProject.getProperties() ) );\n            if ( moduleProject.getArtifact() != null )\n            {\n                interpolator.addValueSource( new PrefixedObjectValueSource( \"module.\", moduleProject.getArtifact() ) );\n            }\n        }\n\n        if ( artifactProject != null )\n        {\n            // 3\n            interpolator.addValueSource( new PrefixedObjectValueSource( \"artifact.\", artifactProject ) );\n            interpolator.addValueSource( new PrefixedPropertiesValueSource( \"artifact.properties.\",\n                                                                            artifactProject.getProperties() ) );\n            if ( artifactProject.getArtifact() != null )\n            {\n                interpolator.addValueSource( new PrefixedObjectValueSource( \"artifact.\", artifactProject.getArtifact() ) );\n            }\n        }\n\n        MavenSession session = null;\n\n        if ( configSource != null )\n        {\n            session = configSource.getMavenSession();\n\n            if ( session != null )\n            {\n                Properties userProperties = null;\n                try\n                {\n                    userProperties = session.getExecutionProperties();\n                }\n                catch ( final NoSuchMethodError nsmer )\n                {\n                    // OK, so user is using Maven <= 2.0.8. No big deal.\n                }\n\n                if ( userProperties != null )\n                {\n                    // 4\n                    interpolator.addValueSource( new PropertiesBasedValueSource( userProperties ) );\n                }\n            }\n        }\n\n        if ( mainProject != null )\n        {\n            // 5\n            interpolator.addValueSource( new PrefixedObjectValueSource( InterpolationConstants.PROJECT_PREFIXES,\n                                                                        mainProject, true ) );\n\n            // 6\n            interpolator.addValueSource( new PrefixedPropertiesValueSource(\n                                                                            InterpolationConstants.PROJECT_PROPERTIES_PREFIXES,\n                                                                            mainProject.getProperties(), true ) );\n        }\n\n        Properties commandLineProperties = System.getProperties();\n        try\n        {\n            if ( session != null )\n            {\n                commandLineProperties = session.getExecutionProperties();\n            }\n\n        }\n        catch ( final NoSuchMethodError nsmer )\n        {\n            // OK, so user is using Maven <= 2.0.8. No big deal.\n        }\n\n        // 7\n        interpolator.addValueSource( new PropertiesBasedValueSource( commandLineProperties ) );\n\n        try\n        {\n            // 8\n            interpolator.addValueSource( new PrefixedPropertiesValueSource( Collections.singletonList( \"env.\" ),\n                                                                            CommandLineUtils.getSystemEnvVars( false ),\n                                                                            true ) );\n        }\n        catch ( final IOException e )\n        {\n            throw new AssemblyFormattingException( \"Failed to retrieve OS environment variables. Reason: \"\n                            + e.getMessage(), e );\n        }\n\n        try\n        {\n            value = interpolator.interpolate( value );\n        }\n        catch ( final InterpolationException e )\n        {\n            throw new AssemblyFormattingException( \"Failed to interpolate output directory. Reason: \" + e.getMessage(),\n                                                   e );\n        }\n\n        if ( ( value.length() > 0 ) && !value.endsWith( \"/\" ) && !value.endsWith( \"\\\\\" ) )\n        {\n            value += \"/\";\n        }\n\n        if ( ( value.length() > 0 ) && ( value.startsWith( \"/\" ) || value.startsWith( \"\\\\\" ) ) )\n        {\n            value = value.substring( 1 );\n        }\n\n        value = StringUtils.replace( value, \"//\", \"/\" );\n        value = StringUtils.replace( value, \"\\\\\\\\\", \"\\\\\" );\n        value = StringUtils.replace( value, \"./\", \"\" );\n        value = StringUtils.replace( value, \".\\\\\", \"\" );\n\n        return value;\n    }","id":15492,"modified_method":"/**\n     * ORDER OF INTERPOLATION PRECEDENCE:\n     * <ol>\n     * <li>Support for special expressions, like ${finalName} (use the assembly plugin configuration not the build\n     * config)<\/li>\n     * <li>prefixed with \"module.\" if moduleProject is non-null\n     * <ol>\n     * <li>MavenProject instance for module being assembled<\/li>\n     * <\/ol>\n     * <\/li>\n     * <li>prefixed with \"artifact.\" if artifactProject is non-null\n     * <ol>\n     * <li>MavenProject instance for artifact<\/li>\n     * <\/ol>\n     * <\/li>\n     * <li>user-defined properties from the command line<\/li>\n     * <li>prefixed with \"pom.\" or \"project.\", or no prefix at all\n     * <ol>\n     * <li>MavenProject instance from current build<\/li>\n     * <\/ol>\n     * <\/li>\n     * <li>properties from main project<\/li>\n     * <li>system properties, from the MavenSession instance (to support IDEs)<\/li>\n     * <li>environment variables.<\/li>\n     * <\/ol>\n     */\n    public static String getOutputDirectory( final String output, final MavenProject mainProject,\n                                             final MavenProject moduleProject, final MavenProject artifactProject,\n                                             final String finalName, final AssemblerConfigurationSource configSource )\n        throws AssemblyFormattingException\n    {\n        String value = output;\n        if ( value == null )\n        {\n            value = \"\";\n        }\n\n        final StringSearchInterpolator interpolator = new StringSearchInterpolator();\n\n        final Properties specialExpressionOverrides = new Properties();\n\n        if ( finalName != null )\n        {\n            specialExpressionOverrides.setProperty( \"finalName\", finalName );\n            specialExpressionOverrides.setProperty( \"build.finalName\", finalName );\n        }\n\n        // 1\n        interpolator.addValueSource( new PropertiesBasedValueSource( specialExpressionOverrides ) );\n\n        if ( moduleProject != null )\n        {\n            // 2\n            interpolator.addValueSource( new PrefixedObjectValueSource( \"module.\", moduleProject ) );\n            interpolator.addValueSource( new PrefixedPropertiesValueSource( \"module.properties.\",\n                                                                            moduleProject.getProperties() ) );\n            if ( moduleProject.getArtifact() != null )\n            {\n                interpolator.addValueSource( new PrefixedObjectValueSource( \"module.\", moduleProject.getArtifact() ) );\n            }\n        }\n\n        if ( artifactProject != null )\n        {\n            // 3\n            interpolator.addValueSource( new PrefixedObjectValueSource( \"artifact.\", artifactProject ) );\n            interpolator.addValueSource( new PrefixedPropertiesValueSource( \"artifact.properties.\",\n                                                                            artifactProject.getProperties() ) );\n            if ( artifactProject.getArtifact() != null )\n            {\n                interpolator.addValueSource( new PrefixedObjectValueSource( \"artifact.\", artifactProject.getArtifact() ) );\n            }\n        }\n\n        MavenSession session = null;\n\n        if ( configSource != null )\n        {\n            session = configSource.getMavenSession();\n\n            if ( session != null )\n            {\n                Properties userProperties = null;\n                try\n                {\n                    userProperties = session.getExecutionProperties();\n                }\n                catch ( final NoSuchMethodError nsmer )\n                {\n                    // OK, so user is using Maven <= 2.0.8. No big deal.\n                }\n\n                if ( userProperties != null )\n                {\n                    // 4\n                    interpolator.addValueSource( new PropertiesBasedValueSource( userProperties ) );\n                }\n            }\n        }\n\n        if ( mainProject != null )\n        {\n            // 5\n            interpolator.addValueSource( new PrefixedObjectValueSource( InterpolationConstants.PROJECT_PREFIXES,\n                                                                        mainProject, true ) );\n\n            // 6\n            interpolator.addValueSource( new PrefixedPropertiesValueSource(\n                                                                            InterpolationConstants.PROJECT_PROPERTIES_PREFIXES,\n                                                                            mainProject.getProperties(), true ) );\n        }\n\n        Properties commandLineProperties = System.getProperties();\n        if ( session != null )\n        {\n            commandLineProperties = new Properties();\n            if ( session.getExecutionProperties() != null )\n            {\n                commandLineProperties.putAll( session.getExecutionProperties() );\n            }\n\n            if ( session.getUserProperties() != null )\n            {\n                commandLineProperties.putAll( session.getUserProperties() );\n            }\n        }\n\n        // 7\n        interpolator.addValueSource( new PropertiesBasedValueSource( commandLineProperties ) );\n\n        try\n        {\n            // 8\n            interpolator.addValueSource( new PrefixedPropertiesValueSource( Collections.singletonList( \"env.\" ),\n                                                                            CommandLineUtils.getSystemEnvVars( false ),\n                                                                            true ) );\n        }\n        catch ( final IOException e )\n        {\n            throw new AssemblyFormattingException( \"Failed to retrieve OS environment variables. Reason: \"\n                            + e.getMessage(), e );\n        }\n\n        try\n        {\n            value = interpolator.interpolate( value );\n        }\n        catch ( final InterpolationException e )\n        {\n            throw new AssemblyFormattingException( \"Failed to interpolate output directory. Reason: \" + e.getMessage(),\n                                                   e );\n        }\n\n        if ( ( value.length() > 0 ) && !value.endsWith( \"/\" ) && !value.endsWith( \"\\\\\" ) )\n        {\n            value += \"/\";\n        }\n\n        if ( ( value.length() > 0 ) && ( value.startsWith( \"/\" ) || value.startsWith( \"\\\\\" ) ) )\n        {\n            value = value.substring( 1 );\n        }\n\n        value = StringUtils.replace( value, \"//\", \"/\" );\n        value = StringUtils.replace( value, \"\\\\\\\\\", \"\\\\\" );\n        value = StringUtils.replace( value, \"./\", \"\" );\n        value = StringUtils.replace( value, \".\\\\\", \"\" );\n\n        return value;\n    }","commit_id":"5c40ef7a9252f479be090cf3d8dafb201c863d5d","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * ORDER OF INTERPOLATION PRECEDENCE:\n     * <ol>\n     * <li>prefixed with \"module.\", if moduleProject != null\n     * <ol>\n     * <li>Artifact instance for module, if moduleArtifact != null<\/li>\n     * <li>ArtifactHandler instance for module, if moduleArtifact != null<\/li>\n     * <li>MavenProject instance for module<\/li>\n     * <\/ol>\n     * <\/li>\n     * <li>prefixed with \"artifact.\"\n     * <ol>\n     * <li>Artifact instance<\/li>\n     * <li>ArtifactHandler instance for artifact<\/li>\n     * <li>MavenProject instance for artifact<\/li>\n     * <\/ol>\n     * <\/li>\n     * <li>prefixed with \"pom.\" or \"project.\"\n     * <ol>\n     * <li>MavenProject instance from current build<\/li>\n     * <\/ol>\n     * <\/li>\n     * <li>no prefix, using main project instance\n     * <ol>\n     * <li>MavenProject instance from current build<\/li>\n     * <\/ol>\n     * <\/li>\n     * <li>Support for special expressions, like ${dashClassifier?}<\/li>\n     * <li>user-defined properties from the command line<\/li>\n     * <li>properties from main project<\/li>\n     * <li>system properties, from the MavenSession instance (to support IDEs)<\/li>\n     * <li>environment variables.<\/li>\n     * <\/ol>\n     */\n    public static String evaluateFileNameMapping( final String expression, final Artifact artifact,\n                                                  final MavenProject mainProject, final MavenProject moduleProject,\n                                                  final Artifact moduleArtifact, final MavenProject artifactProject,\n                                                  final AssemblerConfigurationSource configSource )\n        throws AssemblyFormattingException\n    {\n        String value = expression;\n\n        // TODO: This is BAD! Accessors SHOULD NOT change the behavior of the object.\n        // [jdcasey; 16-Aug-1007] This is fixed in SVN, just waiting for it to pass out of legacy.\n        artifact.isSnapshot();\n\n        final StringSearchInterpolator interpolator = new StringSearchInterpolator();\n\n        if ( moduleArtifact != null )\n        {\n            // 1A\n            interpolator.addValueSource( new PrefixedObjectValueSource( \"module.\", moduleArtifact ) );\n\n            // 1B\n            interpolator.addValueSource( new PrefixedObjectValueSource( \"module.\", moduleArtifact.getArtifactHandler() ) );\n            interpolator.addValueSource( new PrefixedObjectValueSource( \"module.handler.\",\n                                                                        moduleArtifact.getArtifactHandler() ) );\n        }\n\n        // 1C\n        if ( moduleProject != null )\n        {\n            interpolator.addValueSource( new PrefixedObjectValueSource( \"module.\", moduleProject ) );\n            interpolator.addValueSource( new PrefixedPropertiesValueSource( \"module.properties.\",\n                                                                            moduleProject.getProperties() ) );\n            if ( moduleProject.getArtifact() != null )\n            {\n                interpolator.addValueSource( new PrefixedObjectValueSource( \"module.\", moduleProject.getArtifact() ) );\n            }\n        }\n\n        // 2A\n        interpolator.addValueSource( new PrefixedObjectValueSource( \"artifact.\", artifact ) );\n\n        // 2B\n        interpolator.addValueSource( new PrefixedObjectValueSource( \"artifact.\", artifact.getArtifactHandler() ) );\n        interpolator.addValueSource( new PrefixedObjectValueSource( \"artifact.handler.\", artifact.getArtifactHandler() ) );\n\n        // 2C\n        if ( artifactProject != null )\n        {\n            interpolator.addValueSource( new PrefixedObjectValueSource( \"artifact.\", artifactProject ) );\n            interpolator.addValueSource( new PrefixedPropertiesValueSource( \"artifact.properties.\",\n                                                                            artifactProject.getProperties() ) );\n            if ( artifactProject.getArtifact() != null )\n            {\n                interpolator.addValueSource( new PrefixedObjectValueSource( \"artifact.\", artifactProject.getArtifact() ) );\n            }\n        }\n\n        if ( mainProject != null )\n        {\n            // 3\n            // 4\n            interpolator.addValueSource( new PrefixedObjectValueSource( InterpolationConstants.PROJECT_PREFIXES,\n                                                                        mainProject, true ) );\n        }\n\n        final Properties specialRules = new Properties();\n\n        final String classifier = artifact.getClassifier();\n        if ( classifier != null )\n        {\n            specialRules.setProperty( \"dashClassifier?\", \"-\" + classifier );\n            specialRules.setProperty( \"dashClassifier\", \"-\" + classifier );\n        }\n        else\n        {\n            specialRules.setProperty( \"dashClassifier?\", \"\" );\n            specialRules.setProperty( \"dashClassifier\", \"\" );\n        }\n\n        // 5\n        interpolator.addValueSource( new PropertiesBasedValueSource( specialRules ) );\n\n        MavenSession session = null;\n        if ( configSource != null )\n        {\n            session = configSource.getMavenSession();\n\n            if ( session != null )\n            {\n                Properties userProperties = null;\n                try\n                {\n                    userProperties = session.getExecutionProperties();\n                }\n                catch ( final NoSuchMethodError nsmer )\n                {\n                    // OK, so user is using Maven <= 2.0.8. No big deal.\n                }\n\n                if ( userProperties != null )\n                {\n                    // 6\n                    interpolator.addValueSource( new PropertiesBasedValueSource( userProperties ) );\n                }\n            }\n        }\n\n        if ( mainProject != null )\n        {\n            // 7\n            interpolator.addValueSource( new PrefixedPropertiesValueSource(\n                                                                            InterpolationConstants.PROJECT_PROPERTIES_PREFIXES,\n                                                                            mainProject.getProperties(), true ) );\n        }\n\n        Properties commandLineProperties = System.getProperties();\n        try\n        {\n            if ( session != null )\n            {\n                commandLineProperties = session.getExecutionProperties();\n            }\n\n        }\n        catch ( final NoSuchMethodError nsmer )\n        {\n            // OK, so user is using Maven <= 2.0.8. No big deal.\n        }\n\n        // 8\n        interpolator.addValueSource( new PropertiesBasedValueSource( commandLineProperties ) );\n\n        try\n        {\n            // 9\n            interpolator.addValueSource( new PrefixedPropertiesValueSource( Collections.singletonList( \"env.\" ),\n                                                                            CommandLineUtils.getSystemEnvVars( false ),\n                                                                            true ) );\n        }\n        catch ( final IOException e )\n        {\n            throw new AssemblyFormattingException( \"Failed to retrieve OS environment variables. Reason: \"\n                            + e.getMessage(), e );\n        }\n\n        try\n        {\n            value = interpolator.interpolate( value );\n        }\n        catch ( final InterpolationException e )\n        {\n            throw new AssemblyFormattingException( \"Failed to interpolate output filename mapping. Reason: \"\n                            + e.getMessage(), e );\n        }\n\n        value = StringUtils.replace( value, \"//\", \"/\" );\n        value = StringUtils.replace( value, \"\\\\\\\\\", \"\\\\\" );\n        value = StringUtils.replace( value, \"./\", \"\" );\n        value = StringUtils.replace( value, \".\\\\\", \"\" );\n\n        return value;\n    }","id":15493,"modified_method":"/**\n     * ORDER OF INTERPOLATION PRECEDENCE:\n     * <ol>\n     * <li>prefixed with \"module.\", if moduleProject != null\n     * <ol>\n     * <li>Artifact instance for module, if moduleArtifact != null<\/li>\n     * <li>ArtifactHandler instance for module, if moduleArtifact != null<\/li>\n     * <li>MavenProject instance for module<\/li>\n     * <\/ol>\n     * <\/li>\n     * <li>prefixed with \"artifact.\"\n     * <ol>\n     * <li>Artifact instance<\/li>\n     * <li>ArtifactHandler instance for artifact<\/li>\n     * <li>MavenProject instance for artifact<\/li>\n     * <\/ol>\n     * <\/li>\n     * <li>prefixed with \"pom.\" or \"project.\"\n     * <ol>\n     * <li>MavenProject instance from current build<\/li>\n     * <\/ol>\n     * <\/li>\n     * <li>no prefix, using main project instance\n     * <ol>\n     * <li>MavenProject instance from current build<\/li>\n     * <\/ol>\n     * <\/li>\n     * <li>Support for special expressions, like ${dashClassifier?}<\/li>\n     * <li>user-defined properties from the command line<\/li>\n     * <li>properties from main project<\/li>\n     * <li>system properties, from the MavenSession instance (to support IDEs)<\/li>\n     * <li>environment variables.<\/li>\n     * <\/ol>\n     */\n    public static String evaluateFileNameMapping( final String expression, final Artifact artifact,\n                                                  final MavenProject mainProject, final MavenProject moduleProject,\n                                                  final Artifact moduleArtifact, final MavenProject artifactProject,\n                                                  final AssemblerConfigurationSource configSource )\n        throws AssemblyFormattingException\n    {\n        String value = expression;\n\n        // TODO: This is BAD! Accessors SHOULD NOT change the behavior of the object.\n        // [jdcasey; 16-Aug-1007] This is fixed in SVN, just waiting for it to pass out of legacy.\n        artifact.isSnapshot();\n\n        final StringSearchInterpolator interpolator = new StringSearchInterpolator();\n\n        if ( moduleArtifact != null )\n        {\n            // 1A\n            interpolator.addValueSource( new PrefixedObjectValueSource( \"module.\", moduleArtifact ) );\n\n            // 1B\n            interpolator.addValueSource( new PrefixedObjectValueSource( \"module.\", moduleArtifact.getArtifactHandler() ) );\n            interpolator.addValueSource( new PrefixedObjectValueSource( \"module.handler.\",\n                                                                        moduleArtifact.getArtifactHandler() ) );\n        }\n\n        // 1C\n        if ( moduleProject != null )\n        {\n            interpolator.addValueSource( new PrefixedObjectValueSource( \"module.\", moduleProject ) );\n            interpolator.addValueSource( new PrefixedPropertiesValueSource( \"module.properties.\",\n                                                                            moduleProject.getProperties() ) );\n            if ( moduleProject.getArtifact() != null )\n            {\n                interpolator.addValueSource( new PrefixedObjectValueSource( \"module.\", moduleProject.getArtifact() ) );\n            }\n        }\n\n        // 2A\n        interpolator.addValueSource( new PrefixedObjectValueSource( \"artifact.\", artifact ) );\n\n        // 2B\n        interpolator.addValueSource( new PrefixedObjectValueSource( \"artifact.\", artifact.getArtifactHandler() ) );\n        interpolator.addValueSource( new PrefixedObjectValueSource( \"artifact.handler.\", artifact.getArtifactHandler() ) );\n\n        // 2C\n        if ( artifactProject != null )\n        {\n            interpolator.addValueSource( new PrefixedObjectValueSource( \"artifact.\", artifactProject ) );\n            interpolator.addValueSource( new PrefixedPropertiesValueSource( \"artifact.properties.\",\n                                                                            artifactProject.getProperties() ) );\n            if ( artifactProject.getArtifact() != null )\n            {\n                interpolator.addValueSource( new PrefixedObjectValueSource( \"artifact.\", artifactProject.getArtifact() ) );\n            }\n        }\n\n        if ( mainProject != null )\n        {\n            // 3\n            // 4\n            interpolator.addValueSource( new PrefixedObjectValueSource( InterpolationConstants.PROJECT_PREFIXES,\n                                                                        mainProject, true ) );\n        }\n\n        final Properties specialRules = new Properties();\n\n        final String classifier = artifact.getClassifier();\n        if ( classifier != null )\n        {\n            specialRules.setProperty( \"dashClassifier?\", \"-\" + classifier );\n            specialRules.setProperty( \"dashClassifier\", \"-\" + classifier );\n        }\n        else\n        {\n            specialRules.setProperty( \"dashClassifier?\", \"\" );\n            specialRules.setProperty( \"dashClassifier\", \"\" );\n        }\n\n        // 5\n        interpolator.addValueSource( new PropertiesBasedValueSource( specialRules ) );\n\n        MavenSession session = null;\n        if ( configSource != null )\n        {\n            session = configSource.getMavenSession();\n\n            if ( session != null )\n            {\n                Properties userProperties = null;\n                try\n                {\n                    userProperties = session.getExecutionProperties();\n                }\n                catch ( final NoSuchMethodError nsmer )\n                {\n                    // OK, so user is using Maven <= 2.0.8. No big deal.\n                }\n\n                if ( userProperties != null )\n                {\n                    // 6\n                    interpolator.addValueSource( new PropertiesBasedValueSource( userProperties ) );\n                }\n            }\n        }\n\n        if ( mainProject != null )\n        {\n            // 7\n            interpolator.addValueSource( new PrefixedPropertiesValueSource(\n                                                                            InterpolationConstants.PROJECT_PROPERTIES_PREFIXES,\n                                                                            mainProject.getProperties(), true ) );\n        }\n\n        Properties commandLineProperties = System.getProperties();\n        if ( session != null )\n        {\n            commandLineProperties = new Properties();\n            if ( session.getExecutionProperties() != null )\n            {\n                commandLineProperties.putAll( session.getExecutionProperties() );\n            }\n\n            if ( session.getUserProperties() != null )\n            {\n                commandLineProperties.putAll( session.getUserProperties() );\n            }\n        }\n\n        // 8\n        interpolator.addValueSource( new PropertiesBasedValueSource( commandLineProperties ) );\n\n        try\n        {\n            // 9\n            interpolator.addValueSource( new PrefixedPropertiesValueSource( Collections.singletonList( \"env.\" ),\n                                                                            CommandLineUtils.getSystemEnvVars( false ),\n                                                                            true ) );\n        }\n        catch ( final IOException e )\n        {\n            throw new AssemblyFormattingException( \"Failed to retrieve OS environment variables. Reason: \"\n                            + e.getMessage(), e );\n        }\n\n        try\n        {\n            value = interpolator.interpolate( value );\n        }\n        catch ( final InterpolationException e )\n        {\n            throw new AssemblyFormattingException( \"Failed to interpolate output filename mapping. Reason: \"\n                            + e.getMessage(), e );\n        }\n\n        value = StringUtils.replace( value, \"//\", \"/\" );\n        value = StringUtils.replace( value, \"\\\\\\\\\", \"\\\\\" );\n        value = StringUtils.replace( value, \"./\", \"\" );\n        value = StringUtils.replace( value, \".\\\\\", \"\" );\n\n        return value;\n    }","commit_id":"5c40ef7a9252f479be090cf3d8dafb201c863d5d","url":"https://github.com/apache/maven-plugins"},{"original_method":"public static Interpolator buildInterpolator( final MavenProject project,\n                                                  final AssemblerConfigurationSource configSource )\n    {\n        final StringSearchInterpolator interpolator = new StringSearchInterpolator();\n        interpolator.setCacheAnswers( true );\n\n        final MavenSession session = configSource.getMavenSession();\n\n        if ( session != null )\n        {\n            Properties userProperties = null;\n            try\n            {\n                userProperties = session.getExecutionProperties();\n            }\n            catch ( final NoSuchMethodError nsmer )\n            {\n                // OK, so user is using Maven <= 2.0.8. No big deal.\n            }\n\n            if ( userProperties != null )\n            {\n                // 4\n                interpolator.addValueSource( new PropertiesBasedValueSource( userProperties ) );\n            }\n        }\n\n        interpolator.addValueSource( new PrefixedPropertiesValueSource(\n                                                                        InterpolationConstants.PROJECT_PROPERTIES_PREFIXES,\n                                                                        project.getProperties(), true ) );\n        interpolator.addValueSource( new PrefixedObjectValueSource( InterpolationConstants.PROJECT_PREFIXES, project,\n                                                                    true ) );\n\n        final Properties settingsProperties = new Properties();\n        if ( configSource.getLocalRepository() != null )\n        {\n            settingsProperties.setProperty( \"localRepository\", configSource.getLocalRepository()\n                                                                           .getBasedir() );\n            settingsProperties.setProperty( \"settings.localRepository\", configSource.getLocalRepository()\n                                                                                    .getBasedir() );\n        }\n        else if ( session != null && session.getSettings() != null )\n        {\n            settingsProperties.setProperty( \"localRepository\", session.getSettings()\n                                                                      .getLocalRepository() );\n            settingsProperties.setProperty( \"settings.localRepository\", configSource.getLocalRepository()\n                                                                                    .getBasedir() );\n        }\n\n        interpolator.addValueSource( new PropertiesBasedValueSource( settingsProperties ) );\n\n        Properties commandLineProperties = System.getProperties();\n        try\n        {\n            if ( session != null )\n            {\n                commandLineProperties = session.getExecutionProperties();\n            }\n\n        }\n        catch ( final NoSuchMethodError nsmer )\n        {\n            // OK, so user is using Maven <= 2.0.8. No big deal.\n        }\n\n        // 7\n        interpolator.addValueSource( new PropertiesBasedValueSource( commandLineProperties ) );\n        interpolator.addValueSource( new PrefixedPropertiesValueSource( Collections.singletonList( \"env.\" ),\n                                                                        ENVIRONMENT_VARIABLES, true ) );\n\n        interpolator.addPostProcessor( new PathTranslatingPostProcessor( project.getBasedir() ) );\n        return interpolator;\n    }","id":15494,"modified_method":"public static Interpolator buildInterpolator( final MavenProject project,\n                                                  final AssemblerConfigurationSource configSource )\n    {\n        final StringSearchInterpolator interpolator = new StringSearchInterpolator();\n        interpolator.setCacheAnswers( true );\n\n        final MavenSession session = configSource.getMavenSession();\n\n        if ( session != null )\n        {\n            Properties userProperties = null;\n            try\n            {\n                userProperties = session.getExecutionProperties();\n            }\n            catch ( final NoSuchMethodError nsmer )\n            {\n                // OK, so user is using Maven <= 2.0.8. No big deal.\n            }\n\n            if ( userProperties != null )\n            {\n                // 4\n                interpolator.addValueSource( new PropertiesBasedValueSource( userProperties ) );\n            }\n        }\n\n        interpolator.addValueSource( new PrefixedPropertiesValueSource(\n                                                                        InterpolationConstants.PROJECT_PROPERTIES_PREFIXES,\n                                                                        project.getProperties(), true ) );\n        interpolator.addValueSource( new PrefixedObjectValueSource( InterpolationConstants.PROJECT_PREFIXES, project,\n                                                                    true ) );\n\n        final Properties settingsProperties = new Properties();\n        if ( configSource.getLocalRepository() != null )\n        {\n            settingsProperties.setProperty( \"localRepository\", configSource.getLocalRepository().getBasedir() );\n            settingsProperties.setProperty( \"settings.localRepository\", configSource.getLocalRepository().getBasedir() );\n        }\n        else if ( session != null && session.getSettings() != null )\n        {\n            settingsProperties.setProperty( \"localRepository\", session.getSettings().getLocalRepository() );\n            settingsProperties.setProperty( \"settings.localRepository\", configSource.getLocalRepository().getBasedir() );\n        }\n\n        interpolator.addValueSource( new PropertiesBasedValueSource( settingsProperties ) );\n\n        Properties commandLineProperties = System.getProperties();\n        if ( session != null )\n        {\n            commandLineProperties = new Properties();\n            if ( session.getExecutionProperties() != null )\n            {\n                commandLineProperties.putAll( session.getExecutionProperties() );\n            }\n            \n            if ( session.getUserProperties() != null )\n            {\n                commandLineProperties.putAll( session.getUserProperties() );\n            }\n        }\n\n        // 7\n        interpolator.addValueSource( new PropertiesBasedValueSource( commandLineProperties ) );\n        interpolator.addValueSource( new PrefixedPropertiesValueSource( Collections.singletonList( \"env.\" ),\n                                                                        ENVIRONMENT_VARIABLES, true ) );\n\n        interpolator.addPostProcessor( new PathTranslatingPostProcessor( project.getBasedir() ) );\n        return interpolator;\n    }","commit_id":"5c40ef7a9252f479be090cf3d8dafb201c863d5d","url":"https://github.com/apache/maven-plugins"},{"original_method":"protected Assembly readAssembly( final Reader reader, final String locationDescription, final File assemblyDir,\n                                     final AssemblerConfigurationSource configSource )\n        throws AssemblyReadException, InvalidAssemblerConfigurationException\n    {\n        Assembly assembly;\n\n        final File basedir = configSource.getBasedir();\n        final MavenProject project = configSource.getProject();\n\n        try\n        {\n            final Map<String, String> context = new HashMap<String, String>();\n            for ( final Object k : System.getProperties().keySet() )\n            {\n                final String key = (String) k;\n                context.put( key, System.getProperty( key ) );\n            }\n\n            context.put( \"basedir\", basedir.getAbsolutePath() );\n\n            final AssemblyXpp3Reader r = new AssemblyXpp3Reader();\n            assembly = r.read( reader );\n\n            mergeComponentsWithMainAssembly( assembly, assemblyDir, configSource );\n\n            debugPrintAssembly( \"Before assembly is interpolated:\", assembly );\n\n            assembly = new AssemblyInterpolator().interpolate( assembly, project, configSource );\n\n            debugPrintAssembly( \"After assembly is interpolated:\", assembly );\n        }\n        catch ( final IOException e )\n        {\n            throw new AssemblyReadException(\n                                             \"Error reading descriptor: \" + locationDescription + \": \" + e.getMessage(),\n                                             e );\n        }\n        catch ( final XmlPullParserException e )\n        {\n            throw new AssemblyReadException(\n                                             \"Error reading descriptor: \" + locationDescription + \": \" + e.getMessage(),\n                                             e );\n        }\n        catch ( final AssemblyInterpolationException e )\n        {\n            throw new AssemblyReadException(\n                                             \"Error reading descriptor: \" + locationDescription + \": \" + e.getMessage(),\n                                             e );\n        }\n        finally\n        {\n            IOUtil.close( reader );\n        }\n\n        if ( configSource.isSiteIncluded() || assembly.isIncludeSiteDirectory() )\n        {\n            includeSiteInAssembly( assembly, configSource );\n        }\n\n        return assembly;\n    }","id":15495,"modified_method":"protected Assembly readAssembly( final Reader reader, final String locationDescription, final File assemblyDir,\n                                     final AssemblerConfigurationSource configSource )\n        throws AssemblyReadException, InvalidAssemblerConfigurationException\n    {\n        Assembly assembly;\n\n        final File basedir = configSource.getBasedir();\n        final MavenProject project = configSource.getProject();\n\n        try\n        {\n            final Map<String, String> context = new HashMap<String, String>();\n            final MavenSession session = configSource.getMavenSession();\n\n            Properties commandLineProperties = System.getProperties();\n            if ( session != null )\n            {\n                commandLineProperties = new Properties();\n                if ( session.getExecutionProperties() != null )\n                {\n                    commandLineProperties.putAll( session.getExecutionProperties() );\n                }\n\n                if ( session.getUserProperties() != null )\n                {\n                    commandLineProperties.putAll( session.getUserProperties() );\n                }\n            }\n\n            for ( final Enumeration<Object> e = commandLineProperties.keys(); e.hasMoreElements(); )\n            {\n                final String key = (String) e.nextElement();\n                if ( key == null || key.trim().length() < 1 )\n                {\n                    continue;\n                }\n\n                context.put( key, commandLineProperties.getProperty( key ) );\n            }\n\n            context.put( \"basedir\", basedir.getAbsolutePath() );\n\n            final AssemblyXpp3Reader r = new AssemblyXpp3Reader();\n            assembly = r.read( reader );\n\n            mergeComponentsWithMainAssembly( assembly, assemblyDir, configSource );\n\n            debugPrintAssembly( \"Before assembly is interpolated:\", assembly );\n\n            assembly = new AssemblyInterpolator().interpolate( assembly, project, configSource );\n\n            debugPrintAssembly( \"After assembly is interpolated:\", assembly );\n        }\n        catch ( final IOException e )\n        {\n            throw new AssemblyReadException(\n                                             \"Error reading descriptor: \" + locationDescription + \": \" + e.getMessage(),\n                                             e );\n        }\n        catch ( final XmlPullParserException e )\n        {\n            throw new AssemblyReadException(\n                                             \"Error reading descriptor: \" + locationDescription + \": \" + e.getMessage(),\n                                             e );\n        }\n        catch ( final AssemblyInterpolationException e )\n        {\n            throw new AssemblyReadException(\n                                             \"Error reading descriptor: \" + locationDescription + \": \" + e.getMessage(),\n                                             e );\n        }\n        finally\n        {\n            IOUtil.close( reader );\n        }\n\n        if ( configSource.isSiteIncluded() || assembly.isIncludeSiteDirectory() )\n        {\n            includeSiteInAssembly( assembly, configSource );\n        }\n\n        return assembly;\n    }","commit_id":"5c40ef7a9252f479be090cf3d8dafb201c863d5d","url":"https://github.com/apache/maven-plugins"},{"original_method":"public PutObjectInlineResponseType putObjectInline(\n\t\t\tPutObjectInlineType request) throws EucalyptusCloudException {\n\t\tPutObjectInlineResponseType reply = (PutObjectInlineResponseType) request\n\t\t\t\t.getReply();\n\t\tContext ctx = Contexts.lookup();\n\t\tAccount account = ctx.getAccount();\n\n\t\tString bucketName = request.getBucket();\n\t\tString objectKey = request.getKey();\n\n\t\tString md5 = \"\";\n\t\tLong oldBucketSize = 0L;\n\t\tDate lastModified;\n\n\t\tAccessControlListType accessControlList = request\n\t\t\t\t.getAccessControlList();\n\t\tif (accessControlList == null) {\n\t\t\taccessControlList = new AccessControlListType();\n\t\t}\n\n\t\tEntityWrapper<BucketInfo> db = EntityWrapper.get(BucketInfo.class);\n\t\tBucketInfo bucketInfo = new BucketInfo(bucketName);\n\t\tList<BucketInfo> bucketList = db.query(bucketInfo);\n\n\t\tif (bucketList.size() > 0) {\n\t\t\tBucketInfo bucket = bucketList.get(0);\n\t\t\tBucketLogData logData = bucket.getLoggingEnabled() ? request.getLogData() : null;\n\t\t\tlong objSize = 0;\n\t\t\ttry {\n\t\t\t\tobjSize = Long.valueOf( request.getContentLength( ) );\n\t\t\t} catch ( NumberFormatException e ) {\n\t\t\t\tLOG.error( \"Invalid content length \" + request.getContentLength( ) );\n\t\t\t\t// TODO(wenye): should handle this properly.\n\t\t\t\tobjSize = 1L;\n\t\t\t}\n\t\t\tif (ctx.hasAdministrativePrivileges() || (\n\t\t\t\t\tbucket.canWrite(account.getAccountNumber()) &&\n\t\t\t\t\t(bucket.isGlobalWrite() || Lookups.checkPrivilege(PolicySpec.S3_PUTOBJECT,\n\t\t\t\t\t\t\tPolicySpec.VENDOR_S3,\n\t\t\t\t\t\t\tPolicySpec.S3_RESOURCE_BUCKET,\n\t\t\t\t\t\t\tbucketName,\n\t\t\t\t\t\t\tnull)))) {\n\t\t\t\tEntityWrapper<ObjectInfo> dbObject = db\n\t\t\t\t\t\t.recast(ObjectInfo.class);\n\t\t\t\tObjectInfo searchObjectInfo = new ObjectInfo();\n\t\t\t\tsearchObjectInfo.setBucketName(bucketName);\n\n\t\t\t\tObjectInfo foundObject = null;\n\t\t\t\tList<ObjectInfo> objectInfos = dbObject.query(searchObjectInfo);\n\t\t\t\tfor (ObjectInfo objectInfo : objectInfos) {\n\t\t\t\t\tif (objectInfo.getObjectKey().equals(objectKey)) {\n\t\t\t\t\t\t// key (object) exists. check perms\n\t\t\t\t\t\tif (!objectInfo.canWrite(account.getAccountNumber())) {\n\t\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\t\tthrow new AccessDeniedException(\"Key\", objectKey,\n\t\t\t\t\t\t\t\t\tlogData);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfoundObject = objectInfo;\n\t\t\t\t\t\toldBucketSize = -foundObject.getSize();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// write object to bucket\n\t\t\t\tString objectName;\n\t\t\t\tif (foundObject == null) {\n\t\t\t\t\t// not found. create an object info\n\t\t\t\t\tfoundObject = new ObjectInfo(bucketName, objectKey);\n\t\t\t\t\tfoundObject.setOwnerId(account.getAccountNumber());\n\t\t\t\t\tList<GrantInfo> grantInfos = new ArrayList<GrantInfo>();\n\t\t\t\t\tfoundObject\n\t\t\t\t\t.addGrants(account.getAccountNumber(), grantInfos, accessControlList);\n\t\t\t\t\tfoundObject.setGrants(grantInfos);\n\t\t\t\t\tobjectName = UUID.randomUUID().toString();\n\t\t\t\t\tfoundObject.setObjectName(objectName);\n\t\t\t\t\tdbObject.add(foundObject);\n\t\t\t\t} else {\n\t\t\t\t\t// object already exists. see if we can modify acl\n\t\t\t\t\tif (ctx.hasAdministrativePrivileges() || foundObject.canWriteACP(account.getAccountNumber())) {\n\t\t\t\t\t\tList<GrantInfo> grantInfos = foundObject.getGrants();\n\t\t\t\t\t\tfoundObject.addGrants(account.getAccountNumber(), grantInfos,\n\t\t\t\t\t\t\t\taccessControlList);\n\t\t\t\t\t}\n\t\t\t\t\tobjectName = foundObject.getObjectName();\n\t\t\t\t}\n\t\t\t\tfoundObject.setObjectKey(objectKey);\n\t\t\t\ttry {\n\t\t\t\t\t// writes are unconditional\n\t\t\t\t\tif (request.getBase64Data().getBytes().length > WalrusProperties.MAX_INLINE_DATA_SIZE) {\n\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\tthrow new InlineDataTooLargeException(bucketName + \"/\"\n\t\t\t\t\t\t\t\t+ objectKey);\n\t\t\t\t\t}\n\t\t\t\t\tbyte[] base64Data = Hashes.base64decode(\n\t\t\t\t\t\t\trequest.getBase64Data()).getBytes();\n\t\t\t\t\tfoundObject.setObjectName(objectName);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tFileIO fileIO = storageManager.prepareForWrite(\n\t\t\t\t\t\t\t\tbucketName, objectName);\n\t\t\t\t\t\tif (fileIO != null) {\n\t\t\t\t\t\t\tfileIO.write(base64Data);\n\t\t\t\t\t\t\tfileIO.finish();\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (Exception ex) {\n\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\tthrow new EucalyptusCloudException(ex);\n\t\t\t\t\t}\n\t\t\t\t\tmd5 = Hashes.getHexString(Digest.MD5.get().digest(base64Data));\n\t\t\t\t\tfoundObject.setEtag(md5);\n\t\t\t\t\tLong size = (long) base64Data.length;\n\t\t\t\t\tfoundObject.setSize(size);\n\t\t\t\t\tif (!ctx.hasAdministrativePrivileges() &&\n\t\t\t\t\t\t\t!Permissions.canAllocate(PolicySpec.VENDOR_S3,\n\t\t\t\t\t\t\t\t\tPolicySpec.S3_RESOURCE_OBJECT,\n\t\t\t\t\t\t\t\t\tbucketName,\n\t\t\t\t\t\t\t\t\tPolicySpec.S3_PUTOBJECT,\n\t\t\t\t\t\t\t\t\tctx.getUser(),\n\t\t\t\t\t\t\t\t\toldBucketSize + size)) {\n\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\tLOG.error(\"Quota exceeded in Walrus putObject\");\n\t\t\t\t\t\tthrow new EntityTooLargeException(\"Key\", objectKey, logData);\n\t\t\t\t\t}\n\t\t\t\t\tboolean success = false;\n\t\t\t\t\tint retryCount = 0;\n\t\t\t\t\tdo {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tincrementBucketSize(bucketName, objectKey, oldBucketSize, size);\n\t\t\t\t\t\t\tsuccess = true;\n\t\t\t\t\t\t} catch (EntityTooLargeException ex) {\n\t\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\t\tthrow ex;\n\t\t\t\t\t\t} catch (NoSuchBucketException ex) {\n\t\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\t\tthrow ex;\n\t\t\t\t\t\t} catch (RollbackException ex) {\n\t\t\t\t\t\t\tretryCount++;\n\t\t\t\t\t\t\tLOG.trace(\"retrying update: \" + bucketName);\n\t\t\t\t\t\t} catch (EucalyptusCloudException ex) {\n\t\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\t\tthrow ex;\n\t\t\t\t\t\t}\n\t\t\t\t\t} while(!success && (retryCount < 5));\n\t\t\t\t\tif (WalrusProperties.trackUsageStatistics) {\n\t\t\t\t\t\twalrusStatistics.updateBytesIn(size);\n\t\t\t\t\t\twalrusStatistics.updateSpaceUsed(size);\n\t\t\t\t\t}\n\t\t\t\t\t// Add meta data if specified\n\t\t\t\t\tif (request.getMetaData() != null)\n\t\t\t\t\t\tfoundObject.replaceMetaData(request.getMetaData());\n\n\t\t\t\t\t// TODO: add support for other storage classes\n\t\t\t\t\tfoundObject.setStorageClass(\"STANDARD\");\n\t\t\t\t\tlastModified = new Date();\n\t\t\t\t\tfoundObject.setLastModified(lastModified);\n\t\t\t\t\tif (logData != null) {\n\t\t\t\t\t\tupdateLogData(bucket, logData);\n\t\t\t\t\t\tlogData.setObjectSize(size);\n\t\t\t\t\t\treply.setLogData(logData);\n\t\t\t\t\t}\n\t\t\t\t\tQueueSender queueSender =\n\t\t\t\t\t\t\tQueueFactory.getInstance()\n\t\t\t\t\t\t\t.getSender(QueueIdentifier.S3);\n\t\t\t\t\tqueueSender.send(new S3Event(true,\n\t\t\t\t\t\t\tsize / WalrusProperties.M,\n\t\t\t\t\t\t\tctx.getUser().getUserId(),\n\t\t\t\t\t\t\tctx.getUser().getName(),\n\t\t\t\t\t\t\tctx.getAccount().getAccountNumber(),\n\t\t\t\t\t\t\tctx.getAccount().getName()));\n\t\t\t\t} catch (Exception ex) {\n\t\t\t\t\tLOG.error(ex);\n\t\t\t\t\tdb.rollback();\n\t\t\t\t\tthrow new EucalyptusCloudException(bucketName);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdb.rollback();\n\t\t\t\tthrow new AccessDeniedException(\"Bucket\", bucketName, logData);\n\t\t\t}\n\t\t} else {\n\t\t\tdb.rollback();\n\t\t\tthrow new NoSuchBucketException(bucketName);\n\t\t}\n\n\t\tdb.commit();\n\n\t\treply.setEtag(md5);\n\t\treply.setLastModified(DateUtils.format(lastModified.getTime(),\n\t\t\t\tDateUtils.ISO8601_DATETIME_PATTERN)\n\t\t\t\t+ \".000Z\");\n\t\treturn reply;\n\t}","id":15496,"modified_method":"public PutObjectInlineResponseType putObjectInline(\n\t\t\tPutObjectInlineType request) throws EucalyptusCloudException {\n\t\tPutObjectInlineResponseType reply = (PutObjectInlineResponseType) request\n\t\t\t\t.getReply();\n\t\tContext ctx = Contexts.lookup();\n\t\tAccount account = ctx.getAccount();\n\n\t\tString bucketName = request.getBucket();\n\t\tString objectKey = request.getKey();\n\n\t\tString md5 = \"\";\n\t\tLong oldBucketSize = 0L;\n\t\tDate lastModified;\n\n\t\tAccessControlListType accessControlList = request\n\t\t\t\t.getAccessControlList();\n\t\tif (accessControlList == null) {\n\t\t\taccessControlList = new AccessControlListType();\n\t\t}\n\n\t\tEntityWrapper<BucketInfo> db = EntityWrapper.get(BucketInfo.class);\n\t\tBucketInfo bucketInfo = new BucketInfo(bucketName);\n\t\tList<BucketInfo> bucketList = db.query(bucketInfo);\n\n\t\tif (bucketList.size() > 0) {\n\t\t\tBucketInfo bucket = bucketList.get(0);\n\t\t\tBucketLogData logData = bucket.getLoggingEnabled() ? request.getLogData() : null;\n\t\t\tlong objSize = 0;\n\t\t\ttry {\n\t\t\t\tobjSize = Long.valueOf( request.getContentLength( ) );\n\t\t\t} catch ( NumberFormatException e ) {\n\t\t\t\tLOG.error( \"Invalid content length \" + request.getContentLength( ) );\n\t\t\t\t// TODO(wenye): should handle this properly.\n\t\t\t\tobjSize = 1L;\n\t\t\t}\n\t\t\tif (ctx.hasAdministrativePrivileges() || (\n\t\t\t\t\tbucket.canWrite(account.getAccountNumber()) &&\n\t\t\t\t\t(bucket.isGlobalWrite() || Lookups.checkPrivilege(PolicySpec.S3_PUTOBJECT,\n\t\t\t\t\t\t\tPolicySpec.VENDOR_S3,\n\t\t\t\t\t\t\tPolicySpec.S3_RESOURCE_BUCKET,\n\t\t\t\t\t\t\tbucketName,\n\t\t\t\t\t\t\tnull)))) {\n\t\t\t\tEntityWrapper<ObjectInfo> dbObject = db\n\t\t\t\t\t\t.recast(ObjectInfo.class);\n\t\t\t\tObjectInfo searchObjectInfo = new ObjectInfo();\n\t\t\t\tsearchObjectInfo.setBucketName(bucketName);\n\n\t\t\t\tObjectInfo foundObject = null;\n\t\t\t\tList<ObjectInfo> objectInfos = dbObject.query(searchObjectInfo);\n\t\t\t\tfor (ObjectInfo objectInfo : objectInfos) {\n\t\t\t\t\tif (objectInfo.getObjectKey().equals(objectKey)) {\n\t\t\t\t\t\t// key (object) exists. check perms\n\t\t\t\t\t\tif (!objectInfo.canWrite(account.getAccountNumber())) {\n\t\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\t\tthrow new AccessDeniedException(\"Key\", objectKey,\n\t\t\t\t\t\t\t\t\tlogData);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfoundObject = objectInfo;\n\t\t\t\t\t\toldBucketSize = -foundObject.getSize();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// write object to bucket\n\t\t\t\tString objectName;\n\t\t\t\tif (foundObject == null) {\n\t\t\t\t\t// not found. create an object info\n\t\t\t\t\tfoundObject = new ObjectInfo(bucketName, objectKey);\n\t\t\t\t\tfoundObject.setOwnerId(account.getAccountNumber());\n\t\t\t\t\tList<GrantInfo> grantInfos = new ArrayList<GrantInfo>();\n\t\t\t\t\tfoundObject\n\t\t\t\t\t.addGrants(account.getAccountNumber(), grantInfos, accessControlList);\n\t\t\t\t\tfoundObject.setGrants(grantInfos);\n\t\t\t\t\tobjectName = UUID.randomUUID().toString();\n\t\t\t\t\tfoundObject.setObjectName(objectName);\n\t\t\t\t\tdbObject.add(foundObject);\n\t\t\t\t} else {\n\t\t\t\t\t// object already exists. see if we can modify acl\n\t\t\t\t\tif (ctx.hasAdministrativePrivileges() || foundObject.canWriteACP(account.getAccountNumber())) {\n\t\t\t\t\t\tList<GrantInfo> grantInfos = foundObject.getGrants();\n\t\t\t\t\t\tfoundObject.addGrants(account.getAccountNumber(), grantInfos,\n\t\t\t\t\t\t\t\taccessControlList);\n\t\t\t\t\t}\n\t\t\t\t\tobjectName = foundObject.getObjectName();\n\t\t\t\t}\n\t\t\t\tfoundObject.setObjectKey(objectKey);\n\t\t\t\ttry {\n\t\t\t\t\t// writes are unconditional\n\t\t\t\t\tif (request.getBase64Data().getBytes().length > WalrusProperties.MAX_INLINE_DATA_SIZE) {\n\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\tthrow new InlineDataTooLargeException(bucketName + \"/\"\n\t\t\t\t\t\t\t\t+ objectKey);\n\t\t\t\t\t}\n\t\t\t\t\tbyte[] base64Data = Hashes.base64decode(\n\t\t\t\t\t\t\trequest.getBase64Data()).getBytes();\n\t\t\t\t\tfoundObject.setObjectName(objectName);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tFileIO fileIO = storageManager.prepareForWrite(\n\t\t\t\t\t\t\t\tbucketName, objectName);\n\t\t\t\t\t\tif (fileIO != null) {\n\t\t\t\t\t\t\tfileIO.write(base64Data);\n\t\t\t\t\t\t\tfileIO.finish();\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (Exception ex) {\n\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\tthrow new EucalyptusCloudException(ex);\n\t\t\t\t\t}\n\t\t\t\t\tmd5 = Hashes.getHexString(Digest.MD5.get().digest(base64Data));\n\t\t\t\t\tfoundObject.setEtag(md5);\n\t\t\t\t\tLong size = (long) base64Data.length;\n\t\t\t\t\tfoundObject.setSize(size);\n\t\t\t\t\tif (!ctx.hasAdministrativePrivileges() &&\n\t\t\t\t\t\t\t!Permissions.canAllocate(PolicySpec.VENDOR_S3,\n\t\t\t\t\t\t\t\t\tPolicySpec.S3_RESOURCE_OBJECT,\n\t\t\t\t\t\t\t\t\tbucketName,\n\t\t\t\t\t\t\t\t\tPolicySpec.S3_PUTOBJECT,\n\t\t\t\t\t\t\t\t\tctx.getUser(),\n\t\t\t\t\t\t\t\t\toldBucketSize + size)) {\n\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\tLOG.error(\"Quota exceeded in Walrus putObject\");\n\t\t\t\t\t\tthrow new EntityTooLargeException(\"Key\", objectKey, logData);\n\t\t\t\t\t}\n\t\t\t\t\tboolean success = false;\n\t\t\t\t\tint retryCount = 0;\n\t\t\t\t\tdo {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tincrementBucketSize(bucketName, objectKey, oldBucketSize, size);\n\t\t\t\t\t\t\tsuccess = true;\n\t\t\t\t\t\t} catch (EntityTooLargeException ex) {\n\t\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\t\tthrow ex;\n\t\t\t\t\t\t} catch (NoSuchBucketException ex) {\n\t\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\t\tthrow ex;\n\t\t\t\t\t\t} catch (RollbackException ex) {\n\t\t\t\t\t\t\tretryCount++;\n\t\t\t\t\t\t\tLOG.trace(\"retrying update: \" + bucketName);\n\t\t\t\t\t\t} catch (EucalyptusCloudException ex) {\n\t\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\t\tthrow ex;\n\t\t\t\t\t\t}\n\t\t\t\t\t} while(!success && (retryCount < 5));\n\t\t\t\t\tif (WalrusProperties.trackUsageStatistics) {\n\t\t\t\t\t\twalrusStatistics.updateBytesIn(size);\n\t\t\t\t\t\twalrusStatistics.updateSpaceUsed(size);\n\t\t\t\t\t}\n\t\t\t\t\t// Add meta data if specified\n\t\t\t\t\tif (request.getMetaData() != null)\n\t\t\t\t\t\tfoundObject.replaceMetaData(request.getMetaData());\n\n\t\t\t\t\t// TODO: add support for other storage classes\n\t\t\t\t\tfoundObject.setStorageClass(\"STANDARD\");\n\t\t\t\t\tlastModified = new Date();\n\t\t\t\t\tfoundObject.setLastModified(lastModified);\n\t\t\t\t\tif (logData != null) {\n\t\t\t\t\t\tupdateLogData(bucket, logData);\n\t\t\t\t\t\tlogData.setObjectSize(size);\n\t\t\t\t\t\treply.setLogData(logData);\n\t\t\t\t\t}\n\n\n\t\t\t\t\t/* Send an event to reporting to report this S3 usage. */\n\t\n\t\t\t\t\tfinal String userId = ctx.getUser().getUserId();\n\t\t\t\t\tfinal String accountId = ctx.getAccount().getAccountNumber();\n\t\t\t\t\tfinal String userName = Accounts.lookupUserById(userId).getName();\n\t\t\t\t\tfinal String accountName = Accounts.lookupAccountById(accountId).getName();\n\n\t\t\t\t\tQueueSender queueSender = QueueFactory.getInstance().getSender(QueueIdentifier.S3);\n\t\t\t\t\tqueueSender.send(new S3Event(true, size / WalrusProperties.M,\n\t\t\t\t\t\t\tuserId, userName, accountId, accountName));\n\n\t\t\t\t} catch (Exception ex) {\n\t\t\t\t\tLOG.error(ex);\n\t\t\t\t\tdb.rollback();\n\t\t\t\t\tthrow new EucalyptusCloudException(bucketName);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdb.rollback();\n\t\t\t\tthrow new AccessDeniedException(\"Bucket\", bucketName, logData);\n\t\t\t}\n\t\t} else {\n\t\t\tdb.rollback();\n\t\t\tthrow new NoSuchBucketException(bucketName);\n\t\t}\n\n\t\tdb.commit();\n\n\t\treply.setEtag(md5);\n\t\treply.setLastModified(DateUtils.format(lastModified.getTime(),\n\t\t\t\tDateUtils.ISO8601_DATETIME_PATTERN)\n\t\t\t\t+ \".000Z\");\n\t\treturn reply;\n\t}","commit_id":"c57c14f306f9dae5d49d9decf1f263a1d0b5893f","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public PutObjectResponseType putObject(PutObjectType request) throws EucalyptusCloudException {\n\t\tPutObjectResponseType reply = (PutObjectResponseType) request.getReply();\n\t\tContext ctx = Contexts.lookup();\n\t\tAccount account = ctx.getAccount() ;\n\n\t\tString bucketName = request.getBucket();\n\t\tString objectKey = request.getKey();\n\t\tLong oldBucketSize = 0L;\n\t\tString md5 = \"\";\n\t\tDate lastModified = null;\n\n\t\tAccessControlListType accessControlList = request.getAccessControlList();\n\t\tif (accessControlList == null) {\n\t\t\taccessControlList = new AccessControlListType();\n\t\t}\n\n\t\tString key = bucketName + \".\" + objectKey;\n\t\tString randomKey = request.getRandomKey();\n\t\tWalrusDataMessenger messenger = WalrusRESTBinding.getWriteMessenger();\n\n\t\tEntityWrapper<BucketInfo> db = EntityWrapper.get(BucketInfo.class);\n\t\tBucketInfo bucketInfo = new BucketInfo(bucketName);\n\t\tList<BucketInfo> bucketList = db.query(bucketInfo);\n\n\t\tif (bucketList.size() > 0) {\n\t\t\tBucketInfo bucket = bucketList.get(0);\n\t\t\tBucketLogData logData = bucket.getLoggingEnabled() ? request.getLogData() : null;\n\t\t\tlong objSize = 0;\n\t\t\ttry {\n\t\t\t\tobjSize = Long.valueOf( request.getContentLength( ) );\n\t\t\t} catch ( NumberFormatException e ) {\n\t\t\t\tLOG.error( \"Invalid content length \" + request.getContentLength( ) );\n\t\t\t\t// TODO(wenye): should handle this properly.\n\t\t\t\tobjSize = 1L;\n\t\t\t}\n\t\t\tif (ctx.hasAdministrativePrivileges() || (\n\t\t\t\t\tbucket.canWrite(account.getAccountNumber()) &&\n\t\t\t\t\t(bucket.isGlobalWrite() || Lookups.checkPrivilege(PolicySpec.S3_PUTOBJECT,\n\t\t\t\t\t\t\tPolicySpec.VENDOR_S3,\n\t\t\t\t\t\t\tPolicySpec.S3_RESOURCE_BUCKET,\n\t\t\t\t\t\t\tbucketName,\n\t\t\t\t\t\t\tnull)))) {\n\t\t\t\tif (logData != null) {\n\t\t\t\t\treply.setLogData(logData);\n\t\t\t\t}\n\t\t\t\tString objectName = null;\n\t\t\t\tString versionId =  null;\n\t\t\t\tObjectInfo objectInfo = null;\n\t\t\t\tif (bucket.isVersioningEnabled()) {\n\t\t\t\t\t//If versioning, add new object with new version id and make it the 'latest' version.\n\t\t\t\t\tobjectInfo = new ObjectInfo(bucketName, objectKey);\n\t\t\t\t\tobjectInfo.setOwnerId(account.getAccountNumber());\n\t\t\t\t\tList<GrantInfo> grantInfos = new ArrayList<GrantInfo>();\n\t\t\t\t\tobjectInfo.addGrants(account.getAccountNumber(), grantInfos, accessControlList);\n\t\t\t\t\tobjectInfo.setGrants(grantInfos);\n\t\t\t\t\tobjectName = UUID.randomUUID().toString();\n\t\t\t\t\tobjectInfo.setObjectName(objectName);\n\t\t\t\t\tobjectInfo.setSize(0L);\n\t\t\t\t\tversionId = UUID.randomUUID().toString().replaceAll(\"-\", \"\");\n\t\t\t\t\treply.setVersionId(versionId);\n\t\t\t\t} else {\n\t\t\t\t\t//If no versioning enabled, put using a null version id, this will replace any previous 'null' versioned object but not one with a version id.\n\t\t\t\t\tversionId = WalrusProperties.NULL_VERSION_ID;\n\t\t\t\t\tObjectInfo searchObject = new ObjectInfo(bucketName, objectKey);\n\t\t\t\t\tsearchObject.setVersionId(versionId);\t\t\t\t\t\t\t\n\t\t\t\t\tEntityWrapper<ObjectInfo> dbObject = db.recast(ObjectInfo.class);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tObjectInfo foundObject = dbObject.getUnique(searchObject);\n\t\t\t\t\t\tif (!foundObject.canWrite(account.getAccountNumber())) {\n\t\t\t\t\t\t\t//Found existing object, but don't have write access\n\t\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\t\tmessenger.removeQueue(key, randomKey);\n\t\t\t\t\t\t\tthrow new AccessDeniedException(\"Key\", objectKey, logData);\n\t\t\t\t\t\t} \n\t\t\t\t\t\tobjectName = foundObject.getObjectName();\n\t\t\t\t\t} catch(AccessDeniedException ex) { \n\t\t\t\t\t\tthrow ex;\n\t\t\t\t\t} catch(EucalyptusCloudException ex) {\n\t\t\t\t\t\t//No existing object found\n\t\t\t\t\t\tobjectInfo = new ObjectInfo(bucketName, objectKey);\n\t\t\t\t\t\tobjectInfo.setOwnerId(account.getAccountNumber());\n\t\t\t\t\t\tList<GrantInfo> grantInfos = new ArrayList<GrantInfo>();\n\t\t\t\t\t\tobjectInfo.addGrants(account.getAccountNumber(), grantInfos, accessControlList);\n\t\t\t\t\t\tobjectInfo.setGrants(grantInfos);\n\t\t\t\t\t\tobjectName =  UUID.randomUUID().toString();\n\t\t\t\t\t\tobjectInfo.setObjectName(objectName);\n\t\t\t\t\t\tobjectInfo.setSize(0L);\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\t\n\n\t\t\t\tdb.commit();\n\t\t\t\t// writes are unconditional\n\t\t\t\tWalrusDataQueue<WalrusDataMessage> putQueue = messenger.getQueue(key, randomKey);\n\n\t\t\t\ttry {\n\t\t\t\t\tWalrusDataMessage dataMessage;\n\t\t\t\t\tString tempObjectName = objectName;\n\t\t\t\t\tMessageDigest digest = null;\n\t\t\t\t\tlong size = 0;\n\t\t\t\t\tFileIO fileIO = null;\n\t\t\t\t\twhile ((dataMessage = putQueue.take()) != null) {\n\t\t\t\t\t\tif(putQueue.getInterrupted()) {                                         \n\t\t\t\t\t\t\tif(WalrusDataMessage.isEOF(dataMessage)) {\n\t\t\t\t\t\t\t\tWalrusMonitor monitor = messenger.getMonitor(key);\n\t\t\t\t\t\t\t\tif(monitor.getLastModified() == null) {\n\t\t\t\t\t\t\t\t\tLOG.trace(\"Monitor wait: \" + key + \" random: \" + randomKey);\n\t\t\t\t\t\t\t\t\tsynchronized (monitor) {\n\t\t\t\t\t\t\t\t\t\tmonitor.wait();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tLOG.trace(\"Monitor resume: \" + key + \" random: \" + randomKey);\n\t\t\t\t\t\t\t\tlastModified = monitor.getLastModified();\n\t\t\t\t\t\t\t\tmd5 = monitor.getMd5();\n\t\t\t\t\t\t\t\t//ok we are done here\n\t\t\t\t\t\t\t\tif(fileIO != null) {\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tfileIO.finish();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tObjectDeleter objectDeleter = new ObjectDeleter(bucketName,\n\t\t\t\t\t\t\t\t\t\ttempObjectName,\n\t\t\t\t\t\t\t\t\t\t-1L,\n\t\t\t\t\t\t\t\t\t\tctx.getUser().getName(),\n\t\t\t\t\t\t\t\t\t\tctx.getUser().getUserId(),\n\t\t\t\t\t\t\t\t\t\tctx.getAccount().getName(),\n\t\t\t\t\t\t\t\t\t\tctx.getAccount().getAccountNumber());\n\t\t\t\t\t\t\t\tThreads.lookup(Walrus.class, WalrusManager.ObjectDeleter.class).limitTo(10).submit(objectDeleter);\n\t\t\t\t\t\t\t\tLOG.info(\"Transfer interrupted: \"+ key);\n\t\t\t\t\t\t\t\tmessenger.removeQueue(key, randomKey);\n\t\t\t\t\t\t\t\tbreak;  \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (WalrusDataMessage.isStart(dataMessage)) {\n\t\t\t\t\t\t\ttempObjectName = UUID.randomUUID().toString();\n\t\t\t\t\t\t\tdigest = Digest.MD5.get();\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tfileIO = storageManager.prepareForWrite(bucketName, tempObjectName);\n\t\t\t\t\t\t\t} catch (Exception ex) {\n\t\t\t\t\t\t\t\tmessenger.removeQueue(key, randomKey);\n\t\t\t\t\t\t\t\tthrow new EucalyptusCloudException(ex);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (WalrusDataMessage.isEOF(dataMessage)) {\n\t\t\t\t\t\t\tif (digest != null) {\n\t\t\t\t\t\t\t\tmd5 = Hashes.bytesToHex(digest.digest());\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tWalrusMonitor monitor = messenger.getMonitor(key);\n\t\t\t\t\t\t\t\tmd5 = monitor.getMd5();\n\t\t\t\t\t\t\t\tlastModified = monitor.getLastModified();\n\t\t\t\t\t\t\t\tif (md5 == null) {\n\t\t\t\t\t\t\t\t\tLOG.error(\"ETag did not match for: \" + randomKey + \" Computed MD5 is null\");\n\t\t\t\t\t\t\t\t\tthrow new ContentMismatchException(bucketName + \"/\" + objectKey);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tString contentMD5 = request.getContentMD5();\n\t\t\t\t\t\t\tif (contentMD5 != null) {\n\t\t\t\t\t\t\t\tString contentMD5AsHex = Hashes.bytesToHex(Base64.decode(contentMD5));\n\t\t\t\t\t\t\t\tif(!contentMD5AsHex.equals(md5)) {\n\t\t\t\t\t\t\t\t\tif(fileIO != null) {\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tfileIO.finish();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tObjectDeleter objectDeleter = new ObjectDeleter(bucketName,\n\t\t\t\t\t\t\t\t\t\t\ttempObjectName,\n\t\t\t\t\t\t\t\t\t\t\t-1L,\n\t\t\t\t\t\t\t\t\t\t\tctx.getUser().getName(),\n\t\t\t\t\t\t\t\t\t\t\tctx.getUser().getUserId(),\n\t\t\t\t\t\t\t\t\t\t\tctx.getAccount().getName(),\n\t\t\t\t\t\t\t\t\t\t\tctx.getAccount().getAccountNumber());\n\t\t\t\t\t\t\t\t\tThreads.lookup(Walrus.class, WalrusManager.ObjectDeleter.class).limitTo(10).submit(objectDeleter);\n\t\t\t\t\t\t\t\t\tmessenger.removeQueue(key, randomKey);\n\t\t\t\t\t\t\t\t\tLOG.error(\"ETag did not match for: \" + randomKey + \" Expected: \" + contentMD5AsHex + \" Computed: \" + md5);\n\t\t\t\t\t\t\t\t\tthrow new ContentMismatchException(bucketName + \"/\" + objectKey);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// commit object\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tif (fileIO != null) { \n\t\t\t\t\t\t\t\t\tfileIO.finish();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tstorageManager.renameObject(bucketName, tempObjectName, objectName);\n\t\t\t\t\t\t\t} catch (IOException ex) {\n\t\t\t\t\t\t\t\tLOG.error(ex);\n\t\t\t\t\t\t\t\tmessenger.removeQueue(key, randomKey);\n\t\t\t\t\t\t\t\tthrow new EucalyptusCloudException(objectKey);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlastModified = new Date();\n\t\t\t\t\t\t\tObjectInfo searchObject = new ObjectInfo(bucketName, objectKey);\n\t\t\t\t\t\t\tsearchObject.setVersionId(versionId);\n\t\t\t\t\t\t\tEntityWrapper<ObjectInfo> dbObject = EntityWrapper.get(ObjectInfo.class);\n\t\t\t\t\t\t\tObjectInfo foundObject;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tfoundObject = dbObject.getUnique(searchObject);\n\t\t\t\t\t\t\t\tif (ctx.hasAdministrativePrivileges() || foundObject.canWriteACP(account.getAccountNumber())) {\n\t\t\t\t\t\t\t\t\tList<GrantInfo> grantInfos = new ArrayList<GrantInfo>();\n\t\t\t\t\t\t\t\t\tfoundObject.addGrants(account.getAccountNumber(), grantInfos, accessControlList);\n\t\t\t\t\t\t\t\t\tfoundObject.setGrants(grantInfos);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (WalrusProperties.enableTorrents) {\n\t\t\t\t\t\t\t\t\tEntityWrapper<TorrentInfo> dbTorrent = dbObject.recast(TorrentInfo.class);\n\t\t\t\t\t\t\t\t\tTorrentInfo torrentInfo = new TorrentInfo(bucketName, objectKey);\n\t\t\t\t\t\t\t\t\tList<TorrentInfo> torrentInfos = dbTorrent.query(torrentInfo);\n\t\t\t\t\t\t\t\t\tif (torrentInfos.size() > 0) {\n\t\t\t\t\t\t\t\t\t\tTorrentInfo foundTorrentInfo = torrentInfos.get(0);\n\t\t\t\t\t\t\t\t\t\tTorrentClient torrentClient = Torrents.getClient(bucketName + objectKey);\n\t\t\t\t\t\t\t\t\t\tif (torrentClient != null) {\n\t\t\t\t\t\t\t\t\t\t\ttorrentClient.bye();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tdbTorrent.delete(foundTorrentInfo);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tLOG.warn(\"Bittorrent support has been disabled. Please check pre-requisites\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (EucalyptusCloudException ex) {\n\t\t\t\t\t\t\t\tif(objectInfo != null) {\n\t\t\t\t\t\t\t\t\tfoundObject = objectInfo;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tdbObject.rollback();\n\t\t\t\t\t\t\t\t\tthrow new EucalyptusCloudException(\"Unable to update object: \" + bucketName + \"/\" + objectKey);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfoundObject.setVersionId(versionId);\n\t\t\t\t\t\t\tfoundObject.replaceMetaData(request.getMetaData());\n\t\t\t\t\t\t\tfoundObject.setEtag(md5);\n\t\t\t\t\t\t\tfoundObject.setSize(size);\n\t\t\t\t\t\t\tfoundObject.setLastModified(lastModified);\n\t\t\t\t\t\t\tfoundObject.setStorageClass(\"STANDARD\");\n\t\t\t\t\t\t\tfoundObject.setContentType(request.getContentType());\n\t\t\t\t\t\t\tfoundObject.setContentDisposition(request.getContentDisposition());\n\t\t\t\t\t\t\tfoundObject.setLast(true);\n\t\t\t\t\t\t\tfoundObject.setDeleted(false);\n\t\t\t\t\t\t\treply.setSize(size);\n\t\t\t\t\t\t\tif (!ctx.hasAdministrativePrivileges() &&\n\t\t\t\t\t\t\t\t\t!Permissions.canAllocate(PolicySpec.VENDOR_S3,\n\t\t\t\t\t\t\t\t\t\t\tPolicySpec.S3_RESOURCE_OBJECT,\n\t\t\t\t\t\t\t\t\t\t\tbucketName,\n\t\t\t\t\t\t\t\t\t\t\tPolicySpec.S3_PUTOBJECT,\n\t\t\t\t\t\t\t\t\t\t\tctx.getUser(),\n\t\t\t\t\t\t\t\t\t\t\toldBucketSize + size)) {\n\t\t\t\t\t\t\t\tdbObject.rollback();\n\t\t\t\t\t\t\t\tLOG.error(\"Quota exceeded for Walrus putObject\");\n\t\t\t\t\t\t\t\tthrow new EntityTooLargeException(\"Key\", objectKey);\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tboolean success = false;\n\t\t\t\t\t\t\tint retryCount = 0;\n\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tincrementBucketSize(bucketName, objectKey, oldBucketSize, size);\n\t\t\t\t\t\t\t\t\tsuccess = true;\n\t\t\t\t\t\t\t\t} catch (EntityTooLargeException ex) {\n\t\t\t\t\t\t\t\t\tmessenger.removeQueue(key, randomKey);\n\t\t\t\t\t\t\t\t\tdbObject.rollback();\n\t\t\t\t\t\t\t\t\tthrow ex;\n\t\t\t\t\t\t\t\t} catch (NoSuchBucketException ex) {\n\t\t\t\t\t\t\t\t\tdbObject.rollback();\n\t\t\t\t\t\t\t\t\tthrow ex;\n\t\t\t\t\t\t\t\t} catch (RollbackException ex) {\n\t\t\t\t\t\t\t\t\tretryCount++;\n\t\t\t\t\t\t\t\t\tLOG.trace(\"retrying update: \" + bucketName);\n\t\t\t\t\t\t\t\t} catch (EucalyptusCloudException ex) {\n\t\t\t\t\t\t\t\t\tdbObject.rollback();\n\t\t\t\t\t\t\t\t\tthrow ex;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} while(!success && (retryCount < 5));\n\t\t\t\t\t\t\tif (WalrusProperties.trackUsageStatistics) {\n\t\t\t\t\t\t\t\twalrusStatistics.updateBytesIn(size);\n\t\t\t\t\t\t\t\twalrusStatistics.updateSpaceUsed(size);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (logData != null) {\n\t\t\t\t\t\t\t\tlogData.setObjectSize(size);\n\t\t\t\t\t\t\t\tupdateLogData(bucket, logData);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(objectInfo != null) {\n\t\t\t\t\t\t\t\tdbObject.add(foundObject);\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\tsuccess = false;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tdbObject.commit();\n\t\t\t\t\t\t\t\tsuccess = true;\n\t\t\t\t\t\t\t} catch (RollbackException ex) {\n\t\t\t\t\t\t\t\tdbObject.rollback();\n\t\t\t\t\t\t\t\tLOG.error(ex, ex);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdbObject = EntityWrapper.get(ObjectInfo.class);\n\t\t\t\t\t\t\tList<ObjectInfo> objectInfos = dbObject.query(new ObjectInfo(bucketName, objectKey));\n\t\t\t\t\t\t\tfor(ObjectInfo objInfo : objectInfos) {\n\t\t\t\t\t\t\t\tif (!success) {\n\t\t\t\t\t\t\t\t\tif (objInfo.getLast()) {\n\t\t\t\t\t\t\t\t\t\tlastModified = objInfo.getLastModified();\n\t\t\t\t\t\t\t\t\t\tmd5 = objInfo.getEtag();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tsuccess = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (!versionId.equals(objInfo.getVersionId())) {\n\t\t\t\t\t\t\t\t\tobjInfo.setLast(false);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdbObject.commit();\n\n\t\t\t\t\t\t\tdbObject = EntityWrapper.get(ObjectInfo.class);\n\t\t\t\t\t\t\tObjectInfo deleteMarker = new ObjectInfo(bucketName, objectKey);\n\t\t\t\t\t\t\tdeleteMarker.setDeleted(true);\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tObjectInfo foundDeleteMarker = dbObject.getUnique(deleteMarker);\n\t\t\t\t\t\t\t\tdbObject.delete(foundDeleteMarker);\n\t\t\t\t\t\t\t} catch(EucalyptusCloudException ex) {\n\t\t\t\t\t\t\t\t//no delete marker found.\n\t\t\t\t\t\t\t\tLOG.trace(\"No delete marker found for: \" + bucketName + \"/\" + objectKey);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdbObject.commit();\n\n\t\t\t\t\t\t\tif (logData != null) {\n\t\t\t\t\t\t\t\tlogData.setTurnAroundTime(Long\n\t\t\t\t\t\t\t\t\t\t.parseLong(new String(dataMessage\n\t\t\t\t\t\t\t\t\t\t\t\t.getPayload())));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// restart all interrupted puts\n\t\t\t\t\t\t\tWalrusMonitor monitor = messenger.getMonitor(key);\n\t\t\t\t\t\t\tsynchronized (monitor) {\n\t\t\t\t\t\t\t\tmonitor.setLastModified(lastModified);\n\t\t\t\t\t\t\t\tmonitor.setMd5(md5);\n\t\t\t\t\t\t\t\tmonitor.notifyAll();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//messenger.removeMonitor(key);\n\t\t\t\t\t\t\tmessenger.clearQueues(key);\n\t\t\t\t\t\t\tmessenger.removeQueue(key, randomKey);\n\t\t\t\t\t\t\tLOG.info(\"Transfer complete: \" + key);\n\t\t\t\t\t\t\tQueueSender queueSender = QueueFactory.getInstance().getSender(QueueIdentifier.S3);\n\n\t\t\t\t\t\t\tqueueSender.send(new S3Event(true,\n\t\t\t\t\t\t\t\t\tsize / WalrusProperties.M,\n\t\t\t\t\t\t\t\t\tctx.getUser().getUserId(),\n\t\t\t\t\t\t\t\t\tctx.getUser().getName(),\n\t\t\t\t\t\t\t\t\tctx.getAccount().getAccountNumber(),\n\t\t\t\t\t\t\t\t\tctx.getAccount().getName()));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tassert (WalrusDataMessage.isData(dataMessage));\n\t\t\t\t\t\t\tbyte[] data = dataMessage.getPayload();\n\t\t\t\t\t\t\t// start writing object (but do not commit yet)\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tif (fileIO != null)\n\t\t\t\t\t\t\t\t\tfileIO.write(data);\n\t\t\t\t\t\t\t} catch (IOException ex) {\n\t\t\t\t\t\t\t\tLOG.error(ex);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// calculate md5 on the fly\n\t\t\t\t\t\t\tsize += data.length;\n\t\t\t\t\t\t\tif (digest != null) {\n\t\t\t\t\t\t\t\tdigest.update(data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (InterruptedException ex) {\n\t\t\t\t\tLOG.error(ex, ex);\n\t\t\t\t\tmessenger.removeQueue(key, randomKey);\n\t\t\t\t\tthrow new EucalyptusCloudException(\"Transfer interrupted: \" + key + \".\" + randomKey);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdb.rollback();\n\t\t\t\tmessenger.removeQueue(key, randomKey);\n\t\t\t\tthrow new AccessDeniedException(\"Bucket\", bucketName, logData);\n\t\t\t}\n\t\t} else {\n\t\t\tdb.rollback();\n\t\t\tmessenger.removeQueue(key, randomKey);\n\t\t\tthrow new NoSuchBucketException(bucketName);\n\t\t}\n\t\treply.setEtag(md5);\n\t\treply.setLastModified(DateUtils.format(lastModified.getTime(),\n\t\t\t\tDateUtils.ISO8601_DATETIME_PATTERN)\n\t\t\t\t+ \".000Z\");\n\t\treturn reply;\n\t}","id":15497,"modified_method":"public PutObjectResponseType putObject(PutObjectType request) throws EucalyptusCloudException {\n\t\tPutObjectResponseType reply = (PutObjectResponseType) request.getReply();\n\t\tContext ctx = Contexts.lookup();\n\t\tAccount account = ctx.getAccount() ;\n\n\t\tString bucketName = request.getBucket();\n\t\tString objectKey = request.getKey();\n\t\tLong oldBucketSize = 0L;\n\t\tString md5 = \"\";\n\t\tDate lastModified = null;\n\n\t\tAccessControlListType accessControlList = request.getAccessControlList();\n\t\tif (accessControlList == null) {\n\t\t\taccessControlList = new AccessControlListType();\n\t\t}\n\n\t\tString key = bucketName + \".\" + objectKey;\n\t\tString randomKey = request.getRandomKey();\n\t\tWalrusDataMessenger messenger = WalrusRESTBinding.getWriteMessenger();\n\n\t\tEntityWrapper<BucketInfo> db = EntityWrapper.get(BucketInfo.class);\n\t\tBucketInfo bucketInfo = new BucketInfo(bucketName);\n\t\tList<BucketInfo> bucketList = db.query(bucketInfo);\n\n\t\tif (bucketList.size() > 0) {\n\t\t\tBucketInfo bucket = bucketList.get(0);\n\t\t\tBucketLogData logData = bucket.getLoggingEnabled() ? request.getLogData() : null;\n\t\t\tlong objSize = 0;\n\t\t\ttry {\n\t\t\t\tobjSize = Long.valueOf( request.getContentLength( ) );\n\t\t\t} catch ( NumberFormatException e ) {\n\t\t\t\tLOG.error( \"Invalid content length \" + request.getContentLength( ) );\n\t\t\t\t// TODO(wenye): should handle this properly.\n\t\t\t\tobjSize = 1L;\n\t\t\t}\n\t\t\tif (ctx.hasAdministrativePrivileges() || (\n\t\t\t\t\tbucket.canWrite(account.getAccountNumber()) &&\n\t\t\t\t\t(bucket.isGlobalWrite() || Lookups.checkPrivilege(PolicySpec.S3_PUTOBJECT,\n\t\t\t\t\t\t\tPolicySpec.VENDOR_S3,\n\t\t\t\t\t\t\tPolicySpec.S3_RESOURCE_BUCKET,\n\t\t\t\t\t\t\tbucketName,\n\t\t\t\t\t\t\tnull)))) {\n\t\t\t\tif (logData != null) {\n\t\t\t\t\treply.setLogData(logData);\n\t\t\t\t}\n\t\t\t\tString objectName = null;\n\t\t\t\tString versionId =  null;\n\t\t\t\tObjectInfo objectInfo = null;\n\t\t\t\tif (bucket.isVersioningEnabled()) {\n\t\t\t\t\t//If versioning, add new object with new version id and make it the 'latest' version.\n\t\t\t\t\tobjectInfo = new ObjectInfo(bucketName, objectKey);\n\t\t\t\t\tobjectInfo.setOwnerId(account.getAccountNumber());\n\t\t\t\t\tList<GrantInfo> grantInfos = new ArrayList<GrantInfo>();\n\t\t\t\t\tobjectInfo.addGrants(account.getAccountNumber(), grantInfos, accessControlList);\n\t\t\t\t\tobjectInfo.setGrants(grantInfos);\n\t\t\t\t\tobjectName = UUID.randomUUID().toString();\n\t\t\t\t\tobjectInfo.setObjectName(objectName);\n\t\t\t\t\tobjectInfo.setSize(0L);\n\t\t\t\t\tversionId = UUID.randomUUID().toString().replaceAll(\"-\", \"\");\n\t\t\t\t\treply.setVersionId(versionId);\n\t\t\t\t} else {\n\t\t\t\t\t//If no versioning enabled, put using a null version id, this will replace any previous 'null' versioned object but not one with a version id.\n\t\t\t\t\tversionId = WalrusProperties.NULL_VERSION_ID;\n\t\t\t\t\tObjectInfo searchObject = new ObjectInfo(bucketName, objectKey);\n\t\t\t\t\tsearchObject.setVersionId(versionId);\t\t\t\t\t\t\t\n\t\t\t\t\tEntityWrapper<ObjectInfo> dbObject = db.recast(ObjectInfo.class);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tObjectInfo foundObject = dbObject.getUnique(searchObject);\n\t\t\t\t\t\tif (!foundObject.canWrite(account.getAccountNumber())) {\n\t\t\t\t\t\t\t//Found existing object, but don't have write access\n\t\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\t\tmessenger.removeQueue(key, randomKey);\n\t\t\t\t\t\t\tthrow new AccessDeniedException(\"Key\", objectKey, logData);\n\t\t\t\t\t\t} \n\t\t\t\t\t\tobjectName = foundObject.getObjectName();\n\t\t\t\t\t} catch(AccessDeniedException ex) { \n\t\t\t\t\t\tthrow ex;\n\t\t\t\t\t} catch(EucalyptusCloudException ex) {\n\t\t\t\t\t\t//No existing object found\n\t\t\t\t\t\tobjectInfo = new ObjectInfo(bucketName, objectKey);\n\t\t\t\t\t\tobjectInfo.setOwnerId(account.getAccountNumber());\n\t\t\t\t\t\tList<GrantInfo> grantInfos = new ArrayList<GrantInfo>();\n\t\t\t\t\t\tobjectInfo.addGrants(account.getAccountNumber(), grantInfos, accessControlList);\n\t\t\t\t\t\tobjectInfo.setGrants(grantInfos);\n\t\t\t\t\t\tobjectName =  UUID.randomUUID().toString();\n\t\t\t\t\t\tobjectInfo.setObjectName(objectName);\n\t\t\t\t\t\tobjectInfo.setSize(0L);\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\t\n\n\t\t\t\tdb.commit();\n\t\t\t\t// writes are unconditional\n\t\t\t\tWalrusDataQueue<WalrusDataMessage> putQueue = messenger.getQueue(key, randomKey);\n\n\t\t\t\ttry {\n\t\t\t\t\tWalrusDataMessage dataMessage;\n\t\t\t\t\tString tempObjectName = objectName;\n\t\t\t\t\tMessageDigest digest = null;\n\t\t\t\t\tlong size = 0;\n\t\t\t\t\tFileIO fileIO = null;\n\t\t\t\t\twhile ((dataMessage = putQueue.take()) != null) {\n\t\t\t\t\t\tif(putQueue.getInterrupted()) {                                         \n\t\t\t\t\t\t\tif(WalrusDataMessage.isEOF(dataMessage)) {\n\t\t\t\t\t\t\t\tWalrusMonitor monitor = messenger.getMonitor(key);\n\t\t\t\t\t\t\t\tif(monitor.getLastModified() == null) {\n\t\t\t\t\t\t\t\t\tLOG.trace(\"Monitor wait: \" + key + \" random: \" + randomKey);\n\t\t\t\t\t\t\t\t\tsynchronized (monitor) {\n\t\t\t\t\t\t\t\t\t\tmonitor.wait();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tLOG.trace(\"Monitor resume: \" + key + \" random: \" + randomKey);\n\t\t\t\t\t\t\t\tlastModified = monitor.getLastModified();\n\t\t\t\t\t\t\t\tmd5 = monitor.getMd5();\n\t\t\t\t\t\t\t\t//ok we are done here\n\t\t\t\t\t\t\t\tif(fileIO != null) {\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tfileIO.finish();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tObjectDeleter objectDeleter = new ObjectDeleter(bucketName,\n\t\t\t\t\t\t\t\t\t\ttempObjectName,\n\t\t\t\t\t\t\t\t\t\t-1L,\n\t\t\t\t\t\t\t\t\t\tctx.getUser().getName(),\n\t\t\t\t\t\t\t\t\t\tctx.getUser().getUserId(),\n\t\t\t\t\t\t\t\t\t\tctx.getAccount().getName(),\n\t\t\t\t\t\t\t\t\t\tctx.getAccount().getAccountNumber());\n\t\t\t\t\t\t\t\tThreads.lookup(Walrus.class, WalrusManager.ObjectDeleter.class).limitTo(10).submit(objectDeleter);\n\t\t\t\t\t\t\t\tLOG.info(\"Transfer interrupted: \"+ key);\n\t\t\t\t\t\t\t\tmessenger.removeQueue(key, randomKey);\n\t\t\t\t\t\t\t\tbreak;  \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (WalrusDataMessage.isStart(dataMessage)) {\n\t\t\t\t\t\t\ttempObjectName = UUID.randomUUID().toString();\n\t\t\t\t\t\t\tdigest = Digest.MD5.get();\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tfileIO = storageManager.prepareForWrite(bucketName, tempObjectName);\n\t\t\t\t\t\t\t} catch (Exception ex) {\n\t\t\t\t\t\t\t\tmessenger.removeQueue(key, randomKey);\n\t\t\t\t\t\t\t\tthrow new EucalyptusCloudException(ex);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (WalrusDataMessage.isEOF(dataMessage)) {\n\t\t\t\t\t\t\tif (digest != null) {\n\t\t\t\t\t\t\t\tmd5 = Hashes.bytesToHex(digest.digest());\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tWalrusMonitor monitor = messenger.getMonitor(key);\n\t\t\t\t\t\t\t\tmd5 = monitor.getMd5();\n\t\t\t\t\t\t\t\tlastModified = monitor.getLastModified();\n\t\t\t\t\t\t\t\tif (md5 == null) {\n\t\t\t\t\t\t\t\t\tLOG.error(\"ETag did not match for: \" + randomKey + \" Computed MD5 is null\");\n\t\t\t\t\t\t\t\t\tthrow new ContentMismatchException(bucketName + \"/\" + objectKey);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tString contentMD5 = request.getContentMD5();\n\t\t\t\t\t\t\tif (contentMD5 != null) {\n\t\t\t\t\t\t\t\tString contentMD5AsHex = Hashes.bytesToHex(Base64.decode(contentMD5));\n\t\t\t\t\t\t\t\tif(!contentMD5AsHex.equals(md5)) {\n\t\t\t\t\t\t\t\t\tif(fileIO != null) {\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tfileIO.finish();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tObjectDeleter objectDeleter = new ObjectDeleter(bucketName,\n\t\t\t\t\t\t\t\t\t\t\ttempObjectName,\n\t\t\t\t\t\t\t\t\t\t\t-1L,\n\t\t\t\t\t\t\t\t\t\t\tctx.getUser().getName(),\n\t\t\t\t\t\t\t\t\t\t\tctx.getUser().getUserId(),\n\t\t\t\t\t\t\t\t\t\t\tctx.getAccount().getName(),\n\t\t\t\t\t\t\t\t\t\t\tctx.getAccount().getAccountNumber());\n\t\t\t\t\t\t\t\t\tThreads.lookup(Walrus.class, WalrusManager.ObjectDeleter.class).limitTo(10).submit(objectDeleter);\n\t\t\t\t\t\t\t\t\tmessenger.removeQueue(key, randomKey);\n\t\t\t\t\t\t\t\t\tLOG.error(\"ETag did not match for: \" + randomKey + \" Expected: \" + contentMD5AsHex + \" Computed: \" + md5);\n\t\t\t\t\t\t\t\t\tthrow new ContentMismatchException(bucketName + \"/\" + objectKey);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// commit object\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tif (fileIO != null) { \n\t\t\t\t\t\t\t\t\tfileIO.finish();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tstorageManager.renameObject(bucketName, tempObjectName, objectName);\n\t\t\t\t\t\t\t} catch (IOException ex) {\n\t\t\t\t\t\t\t\tLOG.error(ex);\n\t\t\t\t\t\t\t\tmessenger.removeQueue(key, randomKey);\n\t\t\t\t\t\t\t\tthrow new EucalyptusCloudException(objectKey);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlastModified = new Date();\n\t\t\t\t\t\t\tObjectInfo searchObject = new ObjectInfo(bucketName, objectKey);\n\t\t\t\t\t\t\tsearchObject.setVersionId(versionId);\n\t\t\t\t\t\t\tEntityWrapper<ObjectInfo> dbObject = EntityWrapper.get(ObjectInfo.class);\n\t\t\t\t\t\t\tObjectInfo foundObject;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tfoundObject = dbObject.getUnique(searchObject);\n\t\t\t\t\t\t\t\tif (ctx.hasAdministrativePrivileges() || foundObject.canWriteACP(account.getAccountNumber())) {\n\t\t\t\t\t\t\t\t\tList<GrantInfo> grantInfos = new ArrayList<GrantInfo>();\n\t\t\t\t\t\t\t\t\tfoundObject.addGrants(account.getAccountNumber(), grantInfos, accessControlList);\n\t\t\t\t\t\t\t\t\tfoundObject.setGrants(grantInfos);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (WalrusProperties.enableTorrents) {\n\t\t\t\t\t\t\t\t\tEntityWrapper<TorrentInfo> dbTorrent = dbObject.recast(TorrentInfo.class);\n\t\t\t\t\t\t\t\t\tTorrentInfo torrentInfo = new TorrentInfo(bucketName, objectKey);\n\t\t\t\t\t\t\t\t\tList<TorrentInfo> torrentInfos = dbTorrent.query(torrentInfo);\n\t\t\t\t\t\t\t\t\tif (torrentInfos.size() > 0) {\n\t\t\t\t\t\t\t\t\t\tTorrentInfo foundTorrentInfo = torrentInfos.get(0);\n\t\t\t\t\t\t\t\t\t\tTorrentClient torrentClient = Torrents.getClient(bucketName + objectKey);\n\t\t\t\t\t\t\t\t\t\tif (torrentClient != null) {\n\t\t\t\t\t\t\t\t\t\t\ttorrentClient.bye();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tdbTorrent.delete(foundTorrentInfo);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tLOG.warn(\"Bittorrent support has been disabled. Please check pre-requisites\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (EucalyptusCloudException ex) {\n\t\t\t\t\t\t\t\tif(objectInfo != null) {\n\t\t\t\t\t\t\t\t\tfoundObject = objectInfo;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tdbObject.rollback();\n\t\t\t\t\t\t\t\t\tthrow new EucalyptusCloudException(\"Unable to update object: \" + bucketName + \"/\" + objectKey);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfoundObject.setVersionId(versionId);\n\t\t\t\t\t\t\tfoundObject.replaceMetaData(request.getMetaData());\n\t\t\t\t\t\t\tfoundObject.setEtag(md5);\n\t\t\t\t\t\t\tfoundObject.setSize(size);\n\t\t\t\t\t\t\tfoundObject.setLastModified(lastModified);\n\t\t\t\t\t\t\tfoundObject.setStorageClass(\"STANDARD\");\n\t\t\t\t\t\t\tfoundObject.setContentType(request.getContentType());\n\t\t\t\t\t\t\tfoundObject.setContentDisposition(request.getContentDisposition());\n\t\t\t\t\t\t\tfoundObject.setLast(true);\n\t\t\t\t\t\t\tfoundObject.setDeleted(false);\n\t\t\t\t\t\t\treply.setSize(size);\n\t\t\t\t\t\t\tif (!ctx.hasAdministrativePrivileges() &&\n\t\t\t\t\t\t\t\t\t!Permissions.canAllocate(PolicySpec.VENDOR_S3,\n\t\t\t\t\t\t\t\t\t\t\tPolicySpec.S3_RESOURCE_OBJECT,\n\t\t\t\t\t\t\t\t\t\t\tbucketName,\n\t\t\t\t\t\t\t\t\t\t\tPolicySpec.S3_PUTOBJECT,\n\t\t\t\t\t\t\t\t\t\t\tctx.getUser(),\n\t\t\t\t\t\t\t\t\t\t\toldBucketSize + size)) {\n\t\t\t\t\t\t\t\tdbObject.rollback();\n\t\t\t\t\t\t\t\tLOG.error(\"Quota exceeded for Walrus putObject\");\n\t\t\t\t\t\t\t\tthrow new EntityTooLargeException(\"Key\", objectKey);\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tboolean success = false;\n\t\t\t\t\t\t\tint retryCount = 0;\n\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tincrementBucketSize(bucketName, objectKey, oldBucketSize, size);\n\t\t\t\t\t\t\t\t\tsuccess = true;\n\t\t\t\t\t\t\t\t} catch (EntityTooLargeException ex) {\n\t\t\t\t\t\t\t\t\tmessenger.removeQueue(key, randomKey);\n\t\t\t\t\t\t\t\t\tdbObject.rollback();\n\t\t\t\t\t\t\t\t\tthrow ex;\n\t\t\t\t\t\t\t\t} catch (NoSuchBucketException ex) {\n\t\t\t\t\t\t\t\t\tdbObject.rollback();\n\t\t\t\t\t\t\t\t\tthrow ex;\n\t\t\t\t\t\t\t\t} catch (RollbackException ex) {\n\t\t\t\t\t\t\t\t\tretryCount++;\n\t\t\t\t\t\t\t\t\tLOG.trace(\"retrying update: \" + bucketName);\n\t\t\t\t\t\t\t\t} catch (EucalyptusCloudException ex) {\n\t\t\t\t\t\t\t\t\tdbObject.rollback();\n\t\t\t\t\t\t\t\t\tthrow ex;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} while(!success && (retryCount < 5));\n\t\t\t\t\t\t\tif (WalrusProperties.trackUsageStatistics) {\n\t\t\t\t\t\t\t\twalrusStatistics.updateBytesIn(size);\n\t\t\t\t\t\t\t\twalrusStatistics.updateSpaceUsed(size);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (logData != null) {\n\t\t\t\t\t\t\t\tlogData.setObjectSize(size);\n\t\t\t\t\t\t\t\tupdateLogData(bucket, logData);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(objectInfo != null) {\n\t\t\t\t\t\t\t\tdbObject.add(foundObject);\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\tsuccess = false;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tdbObject.commit();\n\t\t\t\t\t\t\t\tsuccess = true;\n\t\t\t\t\t\t\t} catch (RollbackException ex) {\n\t\t\t\t\t\t\t\tdbObject.rollback();\n\t\t\t\t\t\t\t\tLOG.error(ex, ex);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdbObject = EntityWrapper.get(ObjectInfo.class);\n\t\t\t\t\t\t\tList<ObjectInfo> objectInfos = dbObject.query(new ObjectInfo(bucketName, objectKey));\n\t\t\t\t\t\t\tfor(ObjectInfo objInfo : objectInfos) {\n\t\t\t\t\t\t\t\tif (!success) {\n\t\t\t\t\t\t\t\t\tif (objInfo.getLast()) {\n\t\t\t\t\t\t\t\t\t\tlastModified = objInfo.getLastModified();\n\t\t\t\t\t\t\t\t\t\tmd5 = objInfo.getEtag();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tsuccess = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (!versionId.equals(objInfo.getVersionId())) {\n\t\t\t\t\t\t\t\t\tobjInfo.setLast(false);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdbObject.commit();\n\n\t\t\t\t\t\t\tdbObject = EntityWrapper.get(ObjectInfo.class);\n\t\t\t\t\t\t\tObjectInfo deleteMarker = new ObjectInfo(bucketName, objectKey);\n\t\t\t\t\t\t\tdeleteMarker.setDeleted(true);\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tObjectInfo foundDeleteMarker = dbObject.getUnique(deleteMarker);\n\t\t\t\t\t\t\t\tdbObject.delete(foundDeleteMarker);\n\n\t\t\t\t\t\t\t\t/* Send an event to reporting to report this S3 usage. */\n\t\t\t\n\t\t\t\t\t\t\t\tfinal String userId = ctx.getUser().getUserId();\n\t\t\t\t\t\t\t\tfinal String accountId = ctx.getAccount().getAccountNumber();\n\t\t\t\t\t\t\t\tfinal String userName = Accounts.lookupUserById(userId).getName();\n\t\t\t\t\t\t\t\tfinal String accountName = Accounts.lookupAccountById(accountId).getName();\n\t\n\t\t\t\t\t\t\t\tQueueSender queueSender = QueueFactory.getInstance().getSender(QueueIdentifier.S3);\n\n\t\t\t\t\t\t\t\tqueueSender.send(new S3Event(true, size / WalrusProperties.M,\n\t\t\t\t\t\t\t\t\t\tuserId, userName, accountId, accountName));\n\n\t\t\t\t\t\t\t} catch(Exception ex) {\n\t\t\t\t\t\t\t\t//no delete marker found.\n\t\t\t\t\t\t\t\tLOG.error(\"Deletion failed for: \" + bucketName + \"/\" + objectKey, ex);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdbObject.commit();\n\n\t\t\t\t\t\t\tif (logData != null) {\n\t\t\t\t\t\t\t\tlogData.setTurnAroundTime(Long\n\t\t\t\t\t\t\t\t\t\t.parseLong(new String(dataMessage\n\t\t\t\t\t\t\t\t\t\t\t\t.getPayload())));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// restart all interrupted puts\n\t\t\t\t\t\t\tWalrusMonitor monitor = messenger.getMonitor(key);\n\t\t\t\t\t\t\tsynchronized (monitor) {\n\t\t\t\t\t\t\t\tmonitor.setLastModified(lastModified);\n\t\t\t\t\t\t\t\tmonitor.setMd5(md5);\n\t\t\t\t\t\t\t\tmonitor.notifyAll();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//messenger.removeMonitor(key);\n\t\t\t\t\t\t\tmessenger.clearQueues(key);\n\t\t\t\t\t\t\tmessenger.removeQueue(key, randomKey);\n\t\t\t\t\t\t\tLOG.info(\"Transfer complete: \" + key);\n\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tassert (WalrusDataMessage.isData(dataMessage));\n\t\t\t\t\t\t\tbyte[] data = dataMessage.getPayload();\n\t\t\t\t\t\t\t// start writing object (but do not commit yet)\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tif (fileIO != null)\n\t\t\t\t\t\t\t\t\tfileIO.write(data);\n\t\t\t\t\t\t\t} catch (IOException ex) {\n\t\t\t\t\t\t\t\tLOG.error(ex);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// calculate md5 on the fly\n\t\t\t\t\t\t\tsize += data.length;\n\t\t\t\t\t\t\tif (digest != null) {\n\t\t\t\t\t\t\t\tdigest.update(data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (InterruptedException ex) {\n\t\t\t\t\tLOG.error(ex, ex);\n\t\t\t\t\tmessenger.removeQueue(key, randomKey);\n\t\t\t\t\tthrow new EucalyptusCloudException(\"Transfer interrupted: \" + key + \".\" + randomKey);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdb.rollback();\n\t\t\t\tmessenger.removeQueue(key, randomKey);\n\t\t\t\tthrow new AccessDeniedException(\"Bucket\", bucketName, logData);\n\t\t\t}\n\t\t} else {\n\t\t\tdb.rollback();\n\t\t\tmessenger.removeQueue(key, randomKey);\n\t\t\tthrow new NoSuchBucketException(bucketName);\n\t\t}\n\t\treply.setEtag(md5);\n\t\treply.setLastModified(DateUtils.format(lastModified.getTime(),\n\t\t\t\tDateUtils.ISO8601_DATETIME_PATTERN)\n\t\t\t\t+ \".000Z\");\n\t\treturn reply;\n\t}","commit_id":"c57c14f306f9dae5d49d9decf1f263a1d0b5893f","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public CreateBucketResponseType createBucket(CreateBucketType request)\n\t\t\tthrows EucalyptusCloudException {\n\t\tCreateBucketResponseType reply = (CreateBucketResponseType) request\n\t\t\t\t.getReply();\n\t\tContext ctx = Contexts.lookup();\n\t\tAccount account = ctx.getAccount();\n\n\t\tString bucketName = request.getBucket();\n\t\tString locationConstraint = request.getLocationConstraint();\n\n\t\tif (account == null) {\n\t\t\tthrow new AccessDeniedException(\"Bucket\", bucketName);\n\t\t}\n\n\t\tAccessControlListType accessControlList = request\n\t\t\t\t.getAccessControlList();\n\t\tif (accessControlList == null) {\n\t\t\taccessControlList = new AccessControlListType();\n\t\t}\n\n\t\tif(!checkBucketName(bucketName))\n\t\t\tthrow new InvalidBucketNameException(bucketName);\n\n\t\tEntityWrapper<BucketInfo> db = EntityWrapper.get(BucketInfo.class);\n\n\t\tif (WalrusProperties.shouldEnforceUsageLimits\n\t\t\t\t&& !Contexts.lookup().hasAdministrativePrivileges()) {\n\t\t\tBucketInfo searchBucket = new BucketInfo();\n\t\t\tsearchBucket.setOwnerId(account.getAccountNumber());\n\t\t\tList<BucketInfo> bucketList = db.query(searchBucket);\n\t\t\tif (bucketList.size() >= WalrusInfo.getWalrusInfo().getStorageMaxBucketsPerAccount()) {\n\t\t\t\tdb.rollback();\n\t\t\t\tthrow new TooManyBucketsException(bucketName);\n\t\t\t}\n\t\t}\n\n\t\tBucketInfo bucketInfo = new BucketInfo(bucketName);\n\t\tList<BucketInfo> bucketList = db.query(bucketInfo);\n\n\t\tif (bucketList.size() > 0) {\n\t\t\tif (bucketList.get(0).getOwnerId().equals(account.getAccountNumber())) {\n\t\t\t\t// bucket already exists and you created it\n\t\t\t\tdb.rollback();\n\t\t\t\tthrow new BucketAlreadyOwnedByYouException(bucketName);\n\t\t\t}\n\t\t\t// bucket already exists\n\t\t\tdb.rollback();\n\t\t\tthrow new BucketAlreadyExistsException(bucketName);\n\t\t} else {\n\t\t\tif (ctx.hasAdministrativePrivileges() || (\n\t\t\t\t\tPermissions.isAuthorized(PolicySpec.VENDOR_S3,\n\t\t\t\t\t\t\tPolicySpec.S3_RESOURCE_BUCKET,\n\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\tctx.getAccount(),\n\t\t\t\t\t\t\tPolicySpec.S3_CREATEBUCKET,\n\t\t\t\t\t\t\tctx.getUser()) &&\n\t\t\t\t\t\t\tPermissions.canAllocate(PolicySpec.VENDOR_S3,\n\t\t\t\t\t\t\t\t\tPolicySpec.S3_RESOURCE_BUCKET,\n\t\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\t\tPolicySpec.S3_CREATEBUCKET,\n\t\t\t\t\t\t\t\t\tctx.getUser(),\n\t\t\t\t\t\t\t\t\t1L))) {\n\t\t\t\t// create bucket and set its acl\n\t\t\t\tBucketInfo bucket = new BucketInfo(account.getAccountNumber(), ctx.getUser( ).getUserId( ), bucketName, new Date());\n\t\t\t\tArrayList<GrantInfo> grantInfos = new ArrayList<GrantInfo>();\n\t\t\t\tbucket.addGrants(account.getAccountNumber(), grantInfos, accessControlList);\n\t\t\t\tbucket.setGrants(grantInfos);\n\t\t\t\tbucket.setBucketSize(0L);\n\t\t\t\tbucket.setLoggingEnabled(false);\n\t\t\t\tbucket.setVersioning(WalrusProperties.VersioningStatus.Disabled\n\t\t\t\t\t\t.toString());\n\t\t\t\tbucket.setHidden(false);\n\t\t\t\tif (locationConstraint != null)\n\t\t\t\t\tbucket.setLocation(locationConstraint);\n\t\t\t\telse\n\t\t\t\t\tbucket.setLocation(\"US\");\n\t\t\t\t// call the storage manager to save the bucket to disk\n\t\t\t\ttry {\n\t\t\t\t\tdb.add(bucket);\n\t\t\t\t\tdb.commit();\n\t\t\t\t\tstorageManager.createBucket(bucketName);\n\t\t\t\t\tif (WalrusProperties.trackUsageStatistics)\n\t\t\t\t\t\twalrusStatistics.incrementBucketCount();\n\t\t\t\t} catch (IOException ex) {\n\t\t\t\t\tLOG.error(ex, ex);\n\t\t\t\t\tthrow new BucketAlreadyExistsException(bucketName);\n\t\t\t\t} catch (Exception ex) {\n\t\t\t\t\tLOG.error(ex, ex);\n\t\t\t\t\tdb.rollback();\n\t\t\t\t\tif (Exceptions.isCausedBy(ex, ConstraintViolationException.class)) {\n\t\t\t\t\t\tthrow new BucketAlreadyExistsException(bucketName);\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new EucalyptusCloudException(\"Unable to create bucket: \" + bucketName);\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tQueueSender queueSender = QueueFactory.getInstance().getSender(QueueIdentifier.S3);\n\t\t\t\tqueueSender.send(new S3Event(true, ctx.getUser().getUserId(),\n\t\t\t\t\t\tctx.getUser().getName(), ctx.getAccount().getAccountNumber(),\n\t\t\t\t\t\tctx.getAccount().getName()));\n\t\t\t} else {\n\t\t\t\tLOG.error( \"Not authorized to create bucket by \" + ctx.getUserFullName( ) );\n\t\t\t\tdb.rollback();\n\t\t\t\tthrow new AccessDeniedException(\"Bucket\", bucketName);\n\t\t\t}\n\t\t}\n\t\treply.setBucket(bucketName);\n\t\treturn reply;\n\t}","id":15498,"modified_method":"public CreateBucketResponseType createBucket(CreateBucketType request)\n\t\t\tthrows EucalyptusCloudException {\n\t\tCreateBucketResponseType reply = (CreateBucketResponseType) request\n\t\t\t\t.getReply();\n\t\tContext ctx = Contexts.lookup();\n\t\tAccount account = ctx.getAccount();\n\n\t\tString bucketName = request.getBucket();\n\t\tString locationConstraint = request.getLocationConstraint();\n\n\t\tif (account == null) {\n\t\t\tthrow new AccessDeniedException(\"Bucket\", bucketName);\n\t\t}\n\n\t\tAccessControlListType accessControlList = request\n\t\t\t\t.getAccessControlList();\n\t\tif (accessControlList == null) {\n\t\t\taccessControlList = new AccessControlListType();\n\t\t}\n\n\t\tif(!checkBucketName(bucketName))\n\t\t\tthrow new InvalidBucketNameException(bucketName);\n\n\t\tEntityWrapper<BucketInfo> db = EntityWrapper.get(BucketInfo.class);\n\n\t\tif (WalrusProperties.shouldEnforceUsageLimits\n\t\t\t\t&& !Contexts.lookup().hasAdministrativePrivileges()) {\n\t\t\tBucketInfo searchBucket = new BucketInfo();\n\t\t\tsearchBucket.setOwnerId(account.getAccountNumber());\n\t\t\tList<BucketInfo> bucketList = db.query(searchBucket);\n\t\t\tif (bucketList.size() >= WalrusInfo.getWalrusInfo().getStorageMaxBucketsPerAccount()) {\n\t\t\t\tdb.rollback();\n\t\t\t\tthrow new TooManyBucketsException(bucketName);\n\t\t\t}\n\t\t}\n\n\t\tBucketInfo bucketInfo = new BucketInfo(bucketName);\n\t\tList<BucketInfo> bucketList = db.query(bucketInfo);\n\n\t\tif (bucketList.size() > 0) {\n\t\t\tif (bucketList.get(0).getOwnerId().equals(account.getAccountNumber())) {\n\t\t\t\t// bucket already exists and you created it\n\t\t\t\tdb.rollback();\n\t\t\t\tthrow new BucketAlreadyOwnedByYouException(bucketName);\n\t\t\t}\n\t\t\t// bucket already exists\n\t\t\tdb.rollback();\n\t\t\tthrow new BucketAlreadyExistsException(bucketName);\n\t\t} else {\n\t\t\tif (ctx.hasAdministrativePrivileges() || (\n\t\t\t\t\tPermissions.isAuthorized(PolicySpec.VENDOR_S3,\n\t\t\t\t\t\t\tPolicySpec.S3_RESOURCE_BUCKET,\n\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\tctx.getAccount(),\n\t\t\t\t\t\t\tPolicySpec.S3_CREATEBUCKET,\n\t\t\t\t\t\t\tctx.getUser()) &&\n\t\t\t\t\t\t\tPermissions.canAllocate(PolicySpec.VENDOR_S3,\n\t\t\t\t\t\t\t\t\tPolicySpec.S3_RESOURCE_BUCKET,\n\t\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\t\tPolicySpec.S3_CREATEBUCKET,\n\t\t\t\t\t\t\t\t\tctx.getUser(),\n\t\t\t\t\t\t\t\t\t1L))) {\n\t\t\t\t// create bucket and set its acl\n\t\t\t\tBucketInfo bucket = new BucketInfo(account.getAccountNumber(), ctx.getUser( ).getUserId( ), bucketName, new Date());\n\t\t\t\tArrayList<GrantInfo> grantInfos = new ArrayList<GrantInfo>();\n\t\t\t\tbucket.addGrants(account.getAccountNumber(), grantInfos, accessControlList);\n\t\t\t\tbucket.setGrants(grantInfos);\n\t\t\t\tbucket.setBucketSize(0L);\n\t\t\t\tbucket.setLoggingEnabled(false);\n\t\t\t\tbucket.setVersioning(WalrusProperties.VersioningStatus.Disabled\n\t\t\t\t\t\t.toString());\n\t\t\t\tbucket.setHidden(false);\n\t\t\t\tif (locationConstraint != null)\n\t\t\t\t\tbucket.setLocation(locationConstraint);\n\t\t\t\telse\n\t\t\t\t\tbucket.setLocation(\"US\");\n\t\t\t\t// call the storage manager to save the bucket to disk\n\t\t\t\ttry {\n\t\t\t\t\tdb.add(bucket);\n\t\t\t\t\tdb.commit();\n\t\t\t\t\tstorageManager.createBucket(bucketName);\n\t\t\t\t\tif (WalrusProperties.trackUsageStatistics)\n\t\t\t\t\t\twalrusStatistics.incrementBucketCount();\n\n\t\t\t\t\t/* Send an event to reporting to report this S3 usage. */\n\n\t\t\t\t\tfinal String userId = ctx.getUser().getUserId();\n\t\t\t\t\tfinal String accountId = ctx.getAccount().getAccountNumber();\n\t\t\t\t\tfinal String userName = Accounts.lookupUserById(userId).getName();\n\t\t\t\t\tfinal String accountName = Accounts.lookupAccountById(accountId).getName();\n\n\t\t\t\t\tQueueSender queueSender = QueueFactory.getInstance().getSender(QueueIdentifier.S3);\n\t\t\t\t\tqueueSender.send(new S3Event(true, userId, userName, accountId, accountName));\n\n\t\t\t\t} catch (IOException ex) {\n\t\t\t\t\tLOG.error(ex, ex);\n\t\t\t\t\tthrow new BucketAlreadyExistsException(bucketName);\n\t\t\t\t} catch (Exception ex) {\n\t\t\t\t\tLOG.error(ex, ex);\n\t\t\t\t\tdb.rollback();\n\t\t\t\t\tif (Exceptions.isCausedBy(ex, ConstraintViolationException.class)) {\n\t\t\t\t\t\tthrow new BucketAlreadyExistsException(bucketName);\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new EucalyptusCloudException(\"Unable to create bucket: \" + bucketName);\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\n\t\t\t} else {\n\t\t\t\tLOG.error( \"Not authorized to create bucket by \" + ctx.getUserFullName( ) );\n\t\t\t\tdb.rollback();\n\t\t\t\tthrow new AccessDeniedException(\"Bucket\", bucketName);\n\t\t\t}\n\t\t}\n\t\treply.setBucket(bucketName);\n\t\treturn reply;\n\t}","commit_id":"c57c14f306f9dae5d49d9decf1f263a1d0b5893f","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public void run() {\n\t\t\ttry {\n\t\t\t\tstorageManager.deleteObject(bucketName, objectName);\n\t\t\t\tif (WalrusProperties.trackUsageStatistics && (size > 0))\n\t\t\t\t\twalrusStatistics.updateSpaceUsed(-size);\n\t\t\t\tQueueSender queueSender =\n\t\t\t\t\t\tQueueFactory.getInstance()\n\t\t\t\t\t\t.getSender(QueueIdentifier.S3);\n\t\t\t\tqueueSender.send(new S3Event(false,\n\t\t\t\t\t\tsize / WalrusProperties.M, userId, user,\n\t\t\t\t\t\taccountNumber, account));\t\t\t\n\t\t\t} catch (IOException ex) {\n\t\t\t\tLOG.error(ex, ex);\n\t\t\t}\n\t\t}","id":15499,"modified_method":"public void run() {\n\t\t\ttry {\n\t\t\t\tstorageManager.deleteObject(bucketName, objectName);\n\t\t\t\tif (WalrusProperties.trackUsageStatistics && (size > 0))\n\t\t\t\t\twalrusStatistics.updateSpaceUsed(-size);\n\n\n\t\t\t\t\t/* Send an event to reporting to report this S3 usage. */\n\t\n\t\t\t\t\tfinal String userName = Accounts.lookupUserById(this.userId).getName();\n\t\t\t\t\tfinal String accountName = Accounts.lookupAccountById(this.accountNumber).getName();\n\n\t\t\t\t\tQueueSender queueSender = QueueFactory.getInstance().getSender(QueueIdentifier.S3);\n\t\t\t\t\tqueueSender.send(new S3Event(false, size / WalrusProperties.M, this.userId, userName,\n\t\t\t\t\t\tthis.accountNumber, accountName));\t\t\t\n\n\t\t\t} catch (Exception ex) {\n\t\t\t\tLOG.error(ex, ex);\n\t\t\t}\n\t\t}","commit_id":"c57c14f306f9dae5d49d9decf1f263a1d0b5893f","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public DeleteBucketResponseType deleteBucket(DeleteBucketType request) throws EucalyptusCloudException {\n\t\tDeleteBucketResponseType reply = (DeleteBucketResponseType) request.getReply();\n\t\tString bucketName = request.getBucket();\n\t\tContext ctx = Contexts.lookup();\n\t\tAccount account = ctx.getAccount();\n\t\tEntityWrapper<BucketInfo> db = EntityWrapper.get(BucketInfo.class);\n\t\tBucketInfo searchBucket = new BucketInfo(bucketName);\n\t\tList<BucketInfo> bucketList = db.query(searchBucket);\n\n\t\tif (bucketList.size() > 0) {\n\t\t\tBucketInfo bucketFound = bucketList.get(0);\n\t\t\tBucketLogData logData = bucketFound.getLoggingEnabled() ? request.getLogData() : null;\n\t\t\tif (ctx.hasAdministrativePrivileges() || (\n\t\t\t\t\tLookups.checkPrivilege(PolicySpec.S3_DELETEBUCKET,\n\t\t\t\t\t\t\tPolicySpec.VENDOR_S3,\n\t\t\t\t\t\t\tPolicySpec.S3_RESOURCE_BUCKET,\n\t\t\t\t\t\t\tbucketName,\n\t\t\t\t\t\t\tbucketFound.getOwnerId()))) {\n\t\t\t\tEntityWrapper<ObjectInfo> dbObject = db\n\t\t\t\t\t\t.recast(ObjectInfo.class);\n\t\t\t\tObjectInfo searchObject = new ObjectInfo();\n\t\t\t\tsearchObject.setBucketName(bucketName);\n\t\t\t\tsearchObject.setDeleted(false);\n\t\t\t\tList<ObjectInfo> objectInfos = dbObject.query(searchObject);\n\t\t\t\tif (objectInfos.size() == 0) {\n\t\t\t\t\t//check if the bucket contains any images\n\t\t\t\t\tEntityWrapper<ImageCacheInfo> dbIC = db.recast(ImageCacheInfo.class);\n\t\t\t\t\tImageCacheInfo searchImageCacheInfo = new ImageCacheInfo();\n\t\t\t\t\tsearchImageCacheInfo.setBucketName(bucketName);\n\t\t\t\t\tList<ImageCacheInfo> foundImageCacheInfos = dbIC.query(searchImageCacheInfo);\n\n\t\t\t\t\tif (foundImageCacheInfos.size() > 0) {\n\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\tthrow new BucketNotEmptyException(bucketName, logData);\n\t\t\t\t\t}\n\t\t\t\t\t//remove any delete markers\n\t\t\t\t\tObjectInfo searchDeleteMarker = new ObjectInfo();\n\t\t\t\t\tsearchDeleteMarker.setBucketName(bucketName);\n\t\t\t\t\tsearchDeleteMarker.setDeleted(true);\n\t\t\t\t\tList<ObjectInfo> deleteMarkers = dbObject.query(searchDeleteMarker);\n\t\t\t\t\tfor(ObjectInfo deleteMarker : deleteMarkers) {\n\t\t\t\t\t\tdbObject.delete(deleteMarker);\n\t\t\t\t\t}\n\t\t\t\t\tdb.delete(bucketFound);\n\t\t\t\t\t// Actually remove the bucket from the backing store\n\t\t\t\t\ttry {\n\t\t\t\t\t\tstorageManager.deleteBucket(bucketName);\n\t\t\t\t\t\tif (WalrusProperties.trackUsageStatistics)\n\t\t\t\t\t\t\twalrusStatistics.decrementBucketCount();\n\t\t\t\t\t} catch (IOException ex) {\n\t\t\t\t\t\t// set exception code in reply\n\t\t\t\t\t\tLOG.error(ex);\n\t\t\t\t\t}\n\t\t\t\t\tQueueSender queueSender = QueueFactory.getInstance().getSender(QueueIdentifier.S3);\n\t\t\t\t\tqueueSender.send(new S3Event(false, ctx.getUser().getUserId(),\n\t\t\t\t\t\t\tctx.getUser().getName(), ctx.getAccount().getAccountNumber(),\n\t\t\t\t\t\t\tctx.getAccount().getName()));\n\t\t\t\t\tStatus status = new Status();\n\t\t\t\t\tstatus.setCode(204);\n\t\t\t\t\tstatus.setDescription(\"No Content\");\n\t\t\t\t\treply.setStatus(status);\n\t\t\t\t\tif (logData != null) {\n\t\t\t\t\t\tupdateLogData(bucketFound, logData);\n\t\t\t\t\t\treply.setLogData(logData);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdb.rollback();\n\t\t\t\t\tthrow new BucketNotEmptyException(bucketName, logData);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdb.rollback();\n\t\t\t\tthrow new AccessDeniedException(\"Bucket\", bucketName, logData);\n\t\t\t}\n\t\t} else {\n\t\t\tdb.rollback();\n\t\t\tthrow new NoSuchBucketException(bucketName);\n\t\t}\n\t\tdb.commit();\n\t\treturn reply;\n\t}","id":15500,"modified_method":"public DeleteBucketResponseType deleteBucket(DeleteBucketType request) throws EucalyptusCloudException {\n\t\tDeleteBucketResponseType reply = (DeleteBucketResponseType) request.getReply();\n\t\tString bucketName = request.getBucket();\n\t\tContext ctx = Contexts.lookup();\n\t\tAccount account = ctx.getAccount();\n\t\tEntityWrapper<BucketInfo> db = EntityWrapper.get(BucketInfo.class);\n\t\tBucketInfo searchBucket = new BucketInfo(bucketName);\n\t\tList<BucketInfo> bucketList = db.query(searchBucket);\n\n\t\tif (bucketList.size() > 0) {\n\t\t\tBucketInfo bucketFound = bucketList.get(0);\n\t\t\tBucketLogData logData = bucketFound.getLoggingEnabled() ? request.getLogData() : null;\n\t\t\tif (ctx.hasAdministrativePrivileges() || (\n\t\t\t\t\tLookups.checkPrivilege(PolicySpec.S3_DELETEBUCKET,\n\t\t\t\t\t\t\tPolicySpec.VENDOR_S3,\n\t\t\t\t\t\t\tPolicySpec.S3_RESOURCE_BUCKET,\n\t\t\t\t\t\t\tbucketName,\n\t\t\t\t\t\t\tbucketFound.getOwnerId()))) {\n\t\t\t\tEntityWrapper<ObjectInfo> dbObject = db\n\t\t\t\t\t\t.recast(ObjectInfo.class);\n\t\t\t\tObjectInfo searchObject = new ObjectInfo();\n\t\t\t\tsearchObject.setBucketName(bucketName);\n\t\t\t\tsearchObject.setDeleted(false);\n\t\t\t\tList<ObjectInfo> objectInfos = dbObject.query(searchObject);\n\t\t\t\tif (objectInfos.size() == 0) {\n\t\t\t\t\t//check if the bucket contains any images\n\t\t\t\t\tEntityWrapper<ImageCacheInfo> dbIC = db.recast(ImageCacheInfo.class);\n\t\t\t\t\tImageCacheInfo searchImageCacheInfo = new ImageCacheInfo();\n\t\t\t\t\tsearchImageCacheInfo.setBucketName(bucketName);\n\t\t\t\t\tList<ImageCacheInfo> foundImageCacheInfos = dbIC.query(searchImageCacheInfo);\n\n\t\t\t\t\tif (foundImageCacheInfos.size() > 0) {\n\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\tthrow new BucketNotEmptyException(bucketName, logData);\n\t\t\t\t\t}\n\t\t\t\t\t//remove any delete markers\n\t\t\t\t\tObjectInfo searchDeleteMarker = new ObjectInfo();\n\t\t\t\t\tsearchDeleteMarker.setBucketName(bucketName);\n\t\t\t\t\tsearchDeleteMarker.setDeleted(true);\n\t\t\t\t\tList<ObjectInfo> deleteMarkers = dbObject.query(searchDeleteMarker);\n\t\t\t\t\tfor(ObjectInfo deleteMarker : deleteMarkers) {\n\t\t\t\t\t\tdbObject.delete(deleteMarker);\n\t\t\t\t\t}\n\t\t\t\t\tdb.delete(bucketFound);\n\t\t\t\t\t// Actually remove the bucket from the backing store\n\t\t\t\t\ttry {\n\t\t\t\t\t\tstorageManager.deleteBucket(bucketName);\n\t\t\t\t\t\tif (WalrusProperties.trackUsageStatistics)\n\t\t\t\t\t\t\twalrusStatistics.decrementBucketCount();\n\n\t\t\t\t\t\t/* Send an event to reporting to report this S3 usage. */\n\t\n\t\t\t\t\t\tfinal String userId = ctx.getUser().getUserId();\n\t\t\t\t\t\tfinal String accountId = ctx.getAccount().getAccountNumber();\n\t\t\t\t\t\tfinal String userName = Accounts.lookupUserById(userId).getName();\n\t\t\t\t\t\tfinal String accountName = Accounts.lookupAccountById(accountId).getName();\n\n\t\t\t\t\t\tQueueSender queueSender = QueueFactory.getInstance().getSender(QueueIdentifier.S3);\n\t\t\t\t\t\tqueueSender.send(new S3Event(false, userId, userName, accountId, accountName));\n\n\t\t\t\t\t} catch (Exception ex) {\n\t\t\t\t\t\t// set exception code in reply\n\t\t\t\t\t\tLOG.error(ex);\n\t\t\t\t\t}\n\n\n\n\t\t\t\t\tStatus status = new Status();\n\t\t\t\t\tstatus.setCode(204);\n\t\t\t\t\tstatus.setDescription(\"No Content\");\n\t\t\t\t\treply.setStatus(status);\n\t\t\t\t\tif (logData != null) {\n\t\t\t\t\t\tupdateLogData(bucketFound, logData);\n\t\t\t\t\t\treply.setLogData(logData);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdb.rollback();\n\t\t\t\t\tthrow new BucketNotEmptyException(bucketName, logData);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdb.rollback();\n\t\t\t\tthrow new AccessDeniedException(\"Bucket\", bucketName, logData);\n\t\t\t}\n\t\t} else {\n\t\t\tdb.rollback();\n\t\t\tthrow new NoSuchBucketException(bucketName);\n\t\t}\n\t\tdb.commit();\n\t\treturn reply;\n\t}","commit_id":"c57c14f306f9dae5d49d9decf1f263a1d0b5893f","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static Map<String,int[]> getBaseCountsBySample(AlignmentContext context, int minMapQ, int minBaseQ, PartitionType type) {\n        Map<String,int[]> samplesToCounts = new HashMap<String,int[]>();\n\n        for (PileupElement e : context.getBasePileup()) {\n            if ( e.getMappingQual() >= minMapQ && ( e.getQual() >= minBaseQ || e.isDeletion() ) ) {\n                String sample = type == PartitionType.BY_SAMPLE ? e.getRead().getReadGroup().getSample() :\n                        e.getRead().getReadGroup().getSample()+\"_rg_\"+e.getRead().getReadGroup().getReadGroupId();\n                if ( ! samplesToCounts.keySet().contains(sample) )\n                    samplesToCounts.put(sample,new int[6]);\n                updateCounts(samplesToCounts.get(sample),e);\n            }\n        }\n\n        return samplesToCounts;\n    }","id":15501,"modified_method":"public static Map<CoverageAggregator.AggregationType,Map<String,int[]>>\n                    getBaseCountsByPartition(AlignmentContext context, int minMapQ, int minBaseQ, List<CoverageAggregator.AggregationType> types) {\n\n        Map<CoverageAggregator.AggregationType,Map<String,int[]>> countsByIDByType = new HashMap<CoverageAggregator.AggregationType,Map<String,int[]>>();\n        for (CoverageAggregator.AggregationType t : types ) {\n            countsByIDByType.put(t,new HashMap<String,int[]>());\n        }\n        for (PileupElement e : context.getBasePileup()) {\n            if ( e.getMappingQual() >= minMapQ && ( e.getQual() >= minBaseQ || e.isDeletion() ) ) {\n                for (CoverageAggregator.AggregationType t : types ) {\n                    String id = getTypeID(e.getRead(),t);\n                    if ( ! countsByIDByType.get(t).keySet().contains(id) ) {\n                        countsByIDByType.get(t).put(id,new int[6]);\n                    }\n                    updateCounts(countsByIDByType.get(t).get(id),e);\n                }\n            }\n        }\n\n        return countsByIDByType;\n    }","commit_id":"e016491a3db9b6c71e5537b68152c9648d9fee50","url":"https://github.com/broadgsa/gatk"},{"original_method":"@Test\n    public void testBaseOutputNoFiltering() {\n        // our base file\n        File baseOutputFile = this.createTempFile(\"depthofcoveragenofiltering\",\".tmp\");\n        this.setOutputFileLocation(baseOutputFile);\n\n        String[] intervals = {\"/humgen/gsa-hpprojects/GATK/data/Validation_Data/fhs_jhs_30_targts.interval_list\"};\n        String[] bams = {\"/humgen/gsa-hpprojects/GATK/data/Validation_Data/FHS_indexed_subset.bam\"};\n\n        String cmd = buildRootCmd(hg18,new ArrayList<String>(Arrays.asList(bams)),new ArrayList<String>(Arrays.asList(intervals))) + \" -mmq 0 -mbq 0 -dels -baseCounts -both --outputFormat csv\";\n        WalkerTestSpec spec = new WalkerTestSpec(cmd,0, new ArrayList<String>());\n\n        // now add the expected files that get generated\n        spec.addAuxFile(\"f53ddf25c2b71e46381f9c434402d88d\", baseOutputFile);\n        spec.addAuxFile(\"925cc5b49286e0222bce6251d1baafc7\", createTempFileFromBase(baseOutputFile.getAbsolutePath()+\".sample_interval_statistics\"));\n        spec.addAuxFile(\"d9e812398d778f28ed12d7f3d18628e2\", createTempFileFromBase(baseOutputFile.getAbsolutePath()+\".sample_interval_summary\"));\n        spec.addAuxFile(\"80577bf378de570f84d91b0ef6004102\", createTempFileFromBase(baseOutputFile.getAbsolutePath()+\".sample_locus_statistics\"));\n        spec.addAuxFile(\"3a059ad82d945643dc4e03239c4041f5\", createTempFileFromBase(baseOutputFile.getAbsolutePath()+\".sample_summary_statistics\"));\n        spec.addAuxFile(\"f3315551081331bc322c53b11412d707\", createTempFileFromBase(baseOutputFile.getAbsolutePath()+\".sample_statistics\"));\n        spec.addAuxFile(\"7b9d0e93bf5b5313995be7010ef1f528\", createTempFileFromBase(baseOutputFile.getAbsolutePath()+\".read_group_interval_statistics\"));\n        spec.addAuxFile(\"fd29fe0c14351e934a6fef9df1f38f7b\", createTempFileFromBase(baseOutputFile.getAbsolutePath()+\".read_group_interval_summary\"));\n        spec.addAuxFile(\"111261f0e8ccf8c456d0b2a9482bc32c\", createTempFileFromBase(baseOutputFile.getAbsolutePath()+\".read_group_locus_statistics\"));\n        spec.addAuxFile(\"cc7ee5075a932dba486e78824ca34202\", createTempFileFromBase(baseOutputFile.getAbsolutePath()+\".read_group_statistics\"));\n        spec.addAuxFile(\"e1653480daa2d96f7c584ed4cd20c147\", createTempFileFromBase(baseOutputFile.getAbsolutePath()+\".read_group_summary\"));\n        \n        execute(\"testBaseOutputNoFiltering\",spec);\n    }","id":15502,"modified_method":"@Test\n    public void testBaseOutputNoFiltering() {\n        // our base file\n        File baseOutputFile = this.createTempFile(\"depthofcoveragenofiltering\",\".tmp\");\n        this.setOutputFileLocation(baseOutputFile);\n\n        String[] intervals = {\"/humgen/gsa-hpprojects/GATK/data/Validation_Data/fhs_jhs_30_targts.interval_list\"};\n        String[] bams = {\"/humgen/gsa-hpprojects/GATK/data/Validation_Data/FHS_indexed_subset.bam\"};\n\n        String cmd = buildRootCmd(hg18,new ArrayList<String>(Arrays.asList(bams)),new ArrayList<String>(Arrays.asList(intervals))) + \" -mmq 0 -mbq 0 -dels -baseCounts -pt readgroup -pt sample -pt library --outputFormat csv\";\n        WalkerTestSpec spec = new WalkerTestSpec(cmd,0, new ArrayList<String>());\n\n        // now add the expected files that get generated\n        spec.addAuxFile(\"fc742e346be2344557cf8c039f467508\", baseOutputFile);\n        spec.addAuxFile(\"e58b701b01ec0dbe75c146295434ba3b\", createTempFileFromBase(baseOutputFile.getAbsolutePath()+\".library_cumulative_coverage_counts\"));\n        spec.addAuxFile(\"b9a7748e5aec4dc06daed893c901c00d\", createTempFileFromBase(baseOutputFile.getAbsolutePath()+\".library_cumulative_coverage_proportions\"));\n        spec.addAuxFile(\"848e556ec7e03e9b0398d189d7cbb4ad\", createTempFileFromBase(baseOutputFile.getAbsolutePath()+\".library_interval_statistics\"));\n        spec.addAuxFile(\"e6fc8f7a5fcc440e21de5891f3403d5d\", createTempFileFromBase(baseOutputFile.getAbsolutePath()+\".library_interval_summary\"));\n        spec.addAuxFile(\"cac8e7a688d9bbe781232c61091d3237\", createTempFileFromBase(baseOutputFile.getAbsolutePath()+\".library_statistics\"));\n        spec.addAuxFile(\"e452dfb5581a7aafaf2122c5ae497f1b\", createTempFileFromBase(baseOutputFile.getAbsolutePath()+\".library_summary\"));\n        spec.addAuxFile(\"38fb89e1bb52d0342f97f72e86956b79\", createTempFileFromBase(baseOutputFile.getAbsolutePath()+\".read_group_cumulative_coverage_counts\"));\n        spec.addAuxFile(\"f9f2941ee39577ac2f80668e7f6b3d4b\", createTempFileFromBase(baseOutputFile.getAbsolutePath()+\".read_group_cumulative_coverage_proportions\"));\n        spec.addAuxFile(\"7b9d0e93bf5b5313995be7010ef1f528\", createTempFileFromBase(baseOutputFile.getAbsolutePath()+\".read_group_interval_statistics\"));\n        spec.addAuxFile(\"fd29fe0c14351e934a6fef9df1f38f7b\", createTempFileFromBase(baseOutputFile.getAbsolutePath()+\".read_group_interval_summary\"));\n        spec.addAuxFile(\"cc7ee5075a932dba486e78824ca34202\", createTempFileFromBase(baseOutputFile.getAbsolutePath()+\".read_group_statistics\"));\n        spec.addAuxFile(\"e1653480daa2d96f7c584ed4cd20c147\", createTempFileFromBase(baseOutputFile.getAbsolutePath()+\".read_group_summary\"));\n        spec.addAuxFile(\"529353375d23c529228b38119c51e269\", createTempFileFromBase(baseOutputFile.getAbsolutePath()+\".sample_cumulative_coverage_counts\"));\n        spec.addAuxFile(\"650ee3714da7fbad7832c9d4ad49eb51\", createTempFileFromBase(baseOutputFile.getAbsolutePath()+\".sample_cumulative_coverage_proportions\"));\n        spec.addAuxFile(\"925cc5b49286e0222bce6251d1baafc7\", createTempFileFromBase(baseOutputFile.getAbsolutePath()+\".sample_interval_statistics\"));\n        spec.addAuxFile(\"d9e812398d778f28ed12d7f3d18628e2\", createTempFileFromBase(baseOutputFile.getAbsolutePath()+\".sample_interval_summary\"));\n        spec.addAuxFile(\"f3315551081331bc322c53b11412d707\", createTempFileFromBase(baseOutputFile.getAbsolutePath()+\".sample_statistics\"));\n        spec.addAuxFile(\"3a059ad82d945643dc4e03239c4041f5\", createTempFileFromBase(baseOutputFile.getAbsolutePath()+\".sample_summary\"));\n        \n        execute(\"testBaseOutputNoFiltering\",spec);\n    }","commit_id":"e016491a3db9b6c71e5537b68152c9648d9fee50","url":"https://github.com/broadgsa/gatk"},{"original_method":"public void initialize(boolean useDels, boolean omitLocusTable) {\n        if ( agType == AggregationType.SAMPLE || agType == AggregationType.BOTH ) {\n            if ( useDels ) {\n                coverageBySample.initializeDeletions();\n            }\n\n            if ( ! omitLocusTable ) {\n                coverageBySample.initializeLocusCounts();\n            }\n        }\n\n        if ( agType == AggregationType.READ || agType == AggregationType.BOTH) {\n            if ( useDels ) {\n                coverageByRead.initializeDeletions();\n            }\n\n            if ( ! omitLocusTable ) {\n                coverageByRead.initializeLocusCounts();\n            }\n        }\n    }","id":15503,"modified_method":"public void initialize(boolean useDels, boolean omitLocusTable) {\n        for ( AggregationType t : types ) {\n            if ( useDels ) {\n                coverageProfiles.get(t).initializeDeletions();\n            }\n            if ( ! omitLocusTable ) {\n                coverageProfiles.get(t).initializeLocusCounts();\n            }\n        }\n    }","commit_id":"e016491a3db9b6c71e5537b68152c9648d9fee50","url":"https://github.com/broadgsa/gatk"},{"original_method":"public void merge(CoverageAggregator otherAggregator) {\n        if ( agType == AggregationType.SAMPLE || agType == AggregationType.BOTH ) {\n            this.coverageBySample.merge(otherAggregator.coverageBySample);\n        }\n\n        if ( agType == AggregationType.READ || agType == AggregationType.BOTH) {\n            this.coverageByRead.merge(otherAggregator.coverageByRead);\n        }\n    }","id":15504,"modified_method":"public void merge(CoverageAggregator otherAggregator) {\n        for ( AggregationType type : types ) {\n            this.coverageProfiles.get(type).merge(otherAggregator.coverageProfiles.get(type));\n        }\n    }","commit_id":"e016491a3db9b6c71e5537b68152c9648d9fee50","url":"https://github.com/broadgsa/gatk"},{"original_method":"public void initialize() {\n\n        if ( printBinEndpointsAndExit ) {\n            int[] endpoints = DepthOfCoverageStats.calculateBinEndpoints(start,stop,nBins);\n            System.out.print(\"[ \");\n            for ( int e : endpoints ) {\n                System.out.print(e+\" \");\n            }\n            System.out.println(\"]\");\n            System.exit(0);\n        }\n\n        boolean goodOutputFormat = false;\n        for ( String f : OUTPUT_FORMATS ) {\n            goodOutputFormat = goodOutputFormat || f.equals(outputFormat);\n        }\n\n        if ( ! goodOutputFormat ) {\n            System.out.println(\"Improper output format. Can be one of table,rtable,csv. Was \"+outputFormat);\n            System.exit(0);\n        }\n\n        if ( outputFormat.equals(\"csv\") ) {\n            separator = \",\";\n        }\n\n        if ( getToolkit().getArguments().outFileName == null ) {\n            logger.warn(\"This walker creates many output files from one input file; you may wish to specify an input file rather \"+\n                        \"than defaulting all output to stdout.\");\n        }\n\n        if ( ! omitDepthOutput ) { // print header\n            out.printf(\"%s\\t%s\\t%s\",\"Locus\",\"Total_Depth\",\"Average_Depth\");\n            // get all the samples\n            HashSet<String> allSamples = getSamplesFromToolKit(useReadGroup);\n            if ( useBoth ) {\n                allSamples.addAll(getSamplesFromToolKit(!useReadGroup));\n            }\n\n            for ( String s : allSamples) {\n                out.printf(\"\\t%s_%s\",\"Depth_for\",s);\n                if ( printBaseCounts ) {\n                    out.printf(\"\\t%s_%s\",s,\"base_counts\");\n                }\n            }\n\n            out.printf(\"%n\");\n\n        } else {\n            out.printf(\"Per-Locus Depth of Coverage output was omitted\");\n        }\n    }","id":15505,"modified_method":"public void initialize() {\n\n        if ( printBinEndpointsAndExit ) {\n            int[] endpoints = DepthOfCoverageStats.calculateBinEndpoints(start,stop,nBins);\n            System.out.print(\"[ \");\n            for ( int e : endpoints ) {\n                System.out.print(e+\" \");\n            }\n            System.out.println(\"]\");\n            System.exit(0);\n        }\n\n        // Check the output format\n        boolean goodOutputFormat = false;\n        for ( String f : OUTPUT_FORMATS ) {\n            goodOutputFormat = goodOutputFormat || f.equals(outputFormat);\n        }\n\n        if ( ! goodOutputFormat ) {\n            System.out.println(\"Improper output format. Can be one of table,rtable,csv. Was \"+outputFormat);\n            System.exit(0);\n        }\n\n        if ( outputFormat.equals(\"csv\") ) {\n            separator = \",\";\n        }\n\n        // Check the partition types\n        for ( String t : partitionTypes ) {\n            boolean valid = false;\n            for ( String s : PARTITION_TYPES ) {\n                if ( s.equalsIgnoreCase(t) ) {\n                    valid = true;\n                }\n            }\n            if ( ! valid ) {\n                throw new StingException(\"The partition type '\"+t+\"' is not a valid partition type. Please use any combination of 'sample','readgroup','library'.\");\n            } else {\n                aggregationTypes.add(CoverageAggregator.typeStringToAggregationType(t));\n            }\n        }\n\n        if ( getToolkit().getArguments().outFileName == null ) {\n            logger.warn(\"This walker creates many output files from one input file; you may wish to specify an input file rather \"+\n                        \"than defaulting all output to stdout.\");\n        }\n\n        if ( ! omitDepthOutput ) { // print header\n            out.printf(\"%s\\t%s\",\"Locus\",\"Total_Depth\");\n            for (CoverageAggregator.AggregationType type : aggregationTypes ) {\n                out.printf(\"\\t%s_%s\",\"Average_Depth\",agTypeToString(type));\n            }\n            // get all the samples\n            HashSet<String> allSamples = getSamplesFromToolKit(aggregationTypes);\n\n            for ( String s : allSamples) {\n                out.printf(\"\\t%s_%s\",\"Depth_for\",s);\n                if ( printBaseCounts ) {\n                    out.printf(\"\\t%s_%s\",s,\"base_counts\");\n                }\n            }\n\n            out.printf(\"%n\");\n\n        } else {\n            out.printf(\"Per-Locus Depth of Coverage output was omitted\");\n        }\n\n        for (CoverageAggregator.AggregationType type : aggregationTypes ) {\n            orderCheck.put(type,new ArrayList<String>());\n            for ( String id : getSamplesFromToolKit(type) ) {\n                orderCheck.get(type).add(id);\n            }\n            Collections.sort(orderCheck.get(type));\n        }\n    }","commit_id":"e016491a3db9b6c71e5537b68152c9648d9fee50","url":"https://github.com/broadgsa/gatk"},{"original_method":"public CoverageAggregator reduce(Map<String,int[]> thisMap, CoverageAggregator prevReduce) {\n        if ( ! omitDepthOutput ) {\n            printDepths(out,thisMap, prevReduce.getAllSamples());\n            // this is an additional iteration through thisMap, plus dealing with IO, so should be much slower without\n            // turning on omit\n        }\n\n        prevReduce.update(thisMap); // note that in \"useBoth\" cases, this method alters the thisMap object\n\n        return prevReduce;\n    }","id":15506,"modified_method":"public CoverageAggregator reduce(Map<CoverageAggregator.AggregationType,Map<String,int[]>> thisMap, CoverageAggregator prevReduce) {\n        if ( ! omitDepthOutput ) {\n            printDepths(out,thisMap, prevReduce.getIdentifiersByType());\n            // this is an additional iteration through thisMap, plus dealing with IO, so should be much slower without\n            // turning on omit\n        }\n\n        prevReduce.update(thisMap); // note that in \"useBoth\" cases, this method alters the thisMap object\n\n        return prevReduce;\n    }","commit_id":"e016491a3db9b6c71e5537b68152c9648d9fee50","url":"https://github.com/broadgsa/gatk"},{"original_method":"public void update(Map<String,int[]> countsByIdentifier) {\n        if ( agType != AggregationType.BOTH ) {\n            if ( agType == AggregationType.SAMPLE ) {\n                coverageBySample.update(countsByIdentifier);\n            } else {\n                coverageByRead.update(countsByIdentifier);\n            }\n        } else { // have to separate samples and read groups\n            HashMap<String,int[]> countsBySample = new HashMap<String,int[]>(sampleNames.size());\n            HashMap<String,int[]> countsByRG = new HashMap<String,int[]>(allSamples.size()-sampleNames.size());\n            for ( String s : countsByIdentifier.keySet() ) {\n                if ( sampleNames.contains(s) ) {\n                    countsBySample.put(s,countsByIdentifier.get(s));\n                } else {                                               // cannot use .remove() to save time due to concurrency issues\n                    countsByRG.put(s,countsByIdentifier.get(s));\n                }\n            }\n\n            coverageBySample.update(countsBySample);\n            coverageByRead.update(countsByRG);\n        }\n    }","id":15507,"modified_method":"public void update(Map<AggregationType,Map<String,int[]>> countsByIdentifierByType) {\n        for ( AggregationType t : types ) {\n            coverageProfiles.get(t).update(countsByIdentifierByType.get(t));\n        }\n    }","commit_id":"e016491a3db9b6c71e5537b68152c9648d9fee50","url":"https://github.com/broadgsa/gatk"},{"original_method":"private void printGeneStats(List<Pair<GenomeLoc,CoverageAggregator>> statsByTarget) {\n        LocationAwareSeekableRODIterator refseqIterator = initializeRefSeq();\n        List<Pair<String,DepthOfCoverageStats>> statsByGene = new ArrayList<Pair<String,DepthOfCoverageStats>>();// maintains order\n        Map<String,DepthOfCoverageStats> geneNamesToStats = new HashMap<String,DepthOfCoverageStats>(); // alows indirect updating of objects in list\n\n        for ( Pair<GenomeLoc,CoverageAggregator> targetStats : statsByTarget ) {\n            String gene = getGeneName(targetStats.first,refseqIterator);\n            if ( geneNamesToStats.keySet().contains(gene) ) {\n                geneNamesToStats.get(gene).merge(targetStats.second.getCoverageBySample());\n            } else {\n                geneNamesToStats.put(gene,targetStats.second.getCoverageBySample());\n                statsByGene.add(new Pair<String,DepthOfCoverageStats>(gene,targetStats.second.getCoverageBySample()));\n            }\n        }\n\n        PrintStream geneSummaryOut = getCorrectStream(out,deriveFromStream(\"gene_summary\"));\n\n        for ( Pair<String,DepthOfCoverageStats> geneStats : statsByGene ) {\n            printTargetSummary(geneSummaryOut,geneStats);\n        }\n\n        if ( ! getToolkit().getArguments().outFileName.contains(\"stdout\")) {\n            geneSummaryOut.close();\n        }\n\n    }","id":15508,"modified_method":"private void printGeneStats(List<Pair<GenomeLoc,CoverageAggregator>> statsByTarget) {\n        LocationAwareSeekableRODIterator refseqIterator = initializeRefSeq();\n        List<Pair<String,DepthOfCoverageStats>> statsByGene = new ArrayList<Pair<String,DepthOfCoverageStats>>();// maintains order\n        Map<String,DepthOfCoverageStats> geneNamesToStats = new HashMap<String,DepthOfCoverageStats>(); // alows indirect updating of objects in list\n\n        for ( Pair<GenomeLoc,CoverageAggregator> targetStats : statsByTarget ) {\n            String gene = getGeneName(targetStats.first,refseqIterator);\n            if ( geneNamesToStats.keySet().contains(gene) ) {\n                geneNamesToStats.get(gene).merge(targetStats.second.getCoverageByAggregationType(CoverageAggregator.AggregationType.SAMPLE));\n            } else {\n                geneNamesToStats.put(gene,targetStats.second.getCoverageByAggregationType(CoverageAggregator.AggregationType.SAMPLE));\n                statsByGene.add(new Pair<String,DepthOfCoverageStats>(gene,new DepthOfCoverageStats(targetStats.second.getCoverageByAggregationType(CoverageAggregator.AggregationType.SAMPLE))));\n            }\n        }\n\n        PrintStream geneSummaryOut = getCorrectStream(out,deriveFromStream(\"gene_summary\"));\n\n        for ( Pair<String,DepthOfCoverageStats> geneStats : statsByGene ) {\n            printTargetSummary(geneSummaryOut,geneStats);\n        }\n\n        if ( ! getToolkit().getArguments().outFileName.contains(\"stdout\")) {\n            geneSummaryOut.close();\n        }\n\n    }","commit_id":"e016491a3db9b6c71e5537b68152c9648d9fee50","url":"https://github.com/broadgsa/gatk"},{"original_method":"public CoverageAggregator reduceInit() {\n\n        CoverageAggregator.AggregationType agType;\n        if ( useBoth ) {\n            agType = CoverageAggregator.AggregationType.BOTH;\n        } else {\n            agType = useReadGroup ? CoverageAggregator.AggregationType.READ : CoverageAggregator.AggregationType.SAMPLE;\n        }\n\n        CoverageAggregator aggro = new CoverageAggregator(agType,start,stop,nBins);\n\n        if ( ! useReadGroup || useBoth ) {\n            aggro.addSamples(getSamplesFromToolKit(false));\n        }\n\n        if ( useReadGroup || useBoth ) {\n            aggro.addReadGroups(getSamplesFromToolKit(true));\n        }\n\n        aggro.initialize(includeDeletions,omitLocusTable);\n\n        return aggro;\n    }","id":15509,"modified_method":"public CoverageAggregator reduceInit() {\n        CoverageAggregator aggro = new CoverageAggregator(aggregationTypes,start,stop,nBins);\n        for (CoverageAggregator.AggregationType t : aggregationTypes ) {\n            aggro.addIdentifiers(t,getSamplesFromToolKit(t));\n        }\n        aggro.initialize(includeDeletions,omitLocusTable);\n        checkOrder(aggro);\n        return aggro;\n    }","commit_id":"e016491a3db9b6c71e5537b68152c9648d9fee50","url":"https://github.com/broadgsa/gatk"},{"original_method":"public void onTraversalDone(CoverageAggregator coverageProfiles) {\n        ///////////////////\n        // OPTIONAL OUTPUTS\n        //////////////////\n\n        if ( ! omitSampleSummary ) {\n            logger.info(\"Printing summary info\");\n            if ( ! useReadGroup || useBoth ) {\n                File summaryStatisticsFile = deriveFromStream(\"sample_summary_statistics\");\n                File perSampleStatisticsFile = deriveFromStream(\"sample_statistics\");\n                printSummary(out,summaryStatisticsFile,coverageProfiles.getCoverageBySample());\n                printPerSample(out,perSampleStatisticsFile,coverageProfiles.getCoverageBySample());\n            }\n\n            if ( useReadGroup || useBoth ) {\n                File rgStatsFile = deriveFromStream(\"read_group_summary\");\n                File rgSumFile = deriveFromStream(\"read_group_statistics\");\n                printSummary(out,rgStatsFile,coverageProfiles.getCoverageByReadGroup());\n                printPerSample(out,rgSumFile,coverageProfiles.getCoverageByReadGroup());\n            }\n        }\n\n        if ( ! omitLocusTable ) {\n            logger.info(\"Printing locus summary\");\n            if ( ! useReadGroup || useBoth ) {\n                File perLocusStatisticsFile = deriveFromStream(\"sample_locus_statistics\");\n                File perLocusCoverageFile = deriveFromStream(\"sample_coverage_statistics\");\n                printPerLocus(perLocusStatisticsFile,perLocusCoverageFile,coverageProfiles.getCoverageBySample(),false);\n            }\n\n            if ( useReadGroup || useBoth ) {\n                File perLocusRGStats = deriveFromStream(\"read_group_locus_statistics\");\n                File perLocusRGCoverage = deriveFromStream(\"read_group_locus_coverage\");\n                printPerLocus(perLocusRGStats,perLocusRGCoverage,coverageProfiles.getCoverageByReadGroup(),true);\n            }\n        }\n    }","id":15510,"modified_method":"public void onTraversalDone(CoverageAggregator coverageProfiles) {\n        ///////////////////\n        // OPTIONAL OUTPUTS\n        //////////////////\n\n        if ( ! omitSampleSummary ) {\n            logger.info(\"Printing summary info\");\n            for (CoverageAggregator.AggregationType type : aggregationTypes ) {\n                outputSummaryFiles(coverageProfiles,type);\n            }\n        }\n\n        if ( ! omitLocusTable ) {\n            logger.info(\"Printing locus summary\");\n            for (CoverageAggregator.AggregationType type : aggregationTypes ) {\n                outputLocusFiles(coverageProfiles,type);\n            }\n        }\n    }","commit_id":"e016491a3db9b6c71e5537b68152c9648d9fee50","url":"https://github.com/broadgsa/gatk"},{"original_method":"public void onTraversalDone( List<Pair<GenomeLoc,CoverageAggregator>> statsByInterval ) {\n        if ( refSeqGeneList != null && ( useBoth || ! useReadGroup ) ) {\n            printGeneStats(statsByInterval);\n        }\n\n        if ( useBoth || ! useReadGroup ) {\n            File intervalStatisticsFile = deriveFromStream(\"sample_interval_statistics\");\n            File intervalSummaryFile = deriveFromStream(\"sample_interval_summary\");\n            printIntervalStats(statsByInterval,intervalSummaryFile, intervalStatisticsFile, true);\n        }\n\n        if ( useBoth || useReadGroup ) {\n            File intervalStatisticsFile = deriveFromStream(\"read_group_interval_statistics\");\n            File intervalSummaryFile = deriveFromStream(\"read_group_interval_summary\");\n            printIntervalStats(statsByInterval,intervalSummaryFile, intervalStatisticsFile, false);\n        }\n\n        onTraversalDone(mergeAll(statsByInterval));\n\n    }","id":15511,"modified_method":"public void onTraversalDone( List<Pair<GenomeLoc,CoverageAggregator>> statsByInterval ) {\n        if ( refSeqGeneList != null && aggregationTypes.contains(CoverageAggregator.AggregationType.SAMPLE ) ) {\n            printGeneStats(statsByInterval);\n        }\n\n        if ( aggregationTypes.contains(CoverageAggregator.AggregationType.SAMPLE) ) {\n            File intervalStatisticsFile = deriveFromStream(\"sample_interval_statistics\");\n            File intervalSummaryFile = deriveFromStream(\"sample_interval_summary\");\n            printIntervalStats(statsByInterval,intervalSummaryFile, intervalStatisticsFile, CoverageAggregator.AggregationType.SAMPLE );\n        }\n\n        if ( aggregationTypes.contains(CoverageAggregator.AggregationType.READGROUP ) ) {\n            File intervalStatisticsFile = deriveFromStream(\"read_group_interval_statistics\");\n            File intervalSummaryFile = deriveFromStream(\"read_group_interval_summary\");\n            printIntervalStats(statsByInterval,intervalSummaryFile, intervalStatisticsFile, CoverageAggregator.AggregationType.READGROUP);\n        }\n\n        if ( aggregationTypes.contains(CoverageAggregator.AggregationType.LIBRARY) ) {\n            File intervalStatisticsFile = deriveFromStream(\"library_interval_statistics\");\n            File intervalSummaryFile = deriveFromStream(\"library_interval_summary\");\n            printIntervalStats(statsByInterval,intervalSummaryFile,intervalStatisticsFile,CoverageAggregator.AggregationType.LIBRARY);\n        }\n\n        onTraversalDone(mergeAll(statsByInterval));\n\n    }","commit_id":"e016491a3db9b6c71e5537b68152c9648d9fee50","url":"https://github.com/broadgsa/gatk"},{"original_method":"private void printDepths(PrintStream stream, Map<String,int[]> countsBySample, Set<String> allSamples) {\n        // get the depths per sample and build up the output string while tabulating total and average coverage\n        // todo -- update me to deal with base counts/indels\n        StringBuilder perSampleOutput = new StringBuilder();\n        int tDepth = 0;\n        for ( String s : allSamples ) {\n            perSampleOutput.append(separator);\n            long dp = countsBySample.keySet().contains(s) ? sumArray(countsBySample.get(s)) : 0;\n            perSampleOutput.append(dp);\n            if ( printBaseCounts ) {\n                perSampleOutput.append(separator);\n                perSampleOutput.append(baseCounts(countsBySample.get(s)));\n            }\n            tDepth += dp;\n        }\n        // remember -- genome locus was printed in map()\n        stream.printf(\"%s%d%s%.2f%s%n\",separator,tDepth,separator,( (double) tDepth/ (double) allSamples.size()),\n                                       perSampleOutput);\n    }","id":15512,"modified_method":"private void printDepths(PrintStream stream, Map<CoverageAggregator.AggregationType,Map<String,int[]>> countsBySampleByType, Map<CoverageAggregator.AggregationType,List<String>> identifiersByType) {\n        // get the depths per sample and build up the output string while tabulating total and average coverage\n        StringBuilder perSampleOutput = new StringBuilder();\n        int tDepth = 0;\n        boolean depthCounted = false;\n        for (CoverageAggregator.AggregationType type : aggregationTypes ) {\n            Map<String,int[]> countsByID = countsBySampleByType.get(type);\n            for ( String s : identifiersByType.get(type) ) {\n                perSampleOutput.append(separator);\n                long dp = countsByID.keySet().contains(s) ? sumArray(countsByID.get(s)) : 0 ;\n                perSampleOutput.append(dp);\n                if ( printBaseCounts ) {\n                    perSampleOutput.append(separator);\n                    perSampleOutput.append(baseCounts(countsByID.get(s)));\n                }\n                if ( ! depthCounted ) {\n                    tDepth += dp;\n                }\n            }\n            depthCounted = true; // only sum the total depth once\n        }\n\n        // remember -- genome locus was printed in map()\n        stream.printf(\"%s%d\",separator,tDepth);\n        for (CoverageAggregator.AggregationType type : aggregationTypes ) {\n            stream.printf(\"%s%.2f\",separator, ( (double) tDepth / identifiersByType.get(type).size() ) );\n        }\n        stream.printf(\"%s%n\",perSampleOutput);\n    }","commit_id":"e016491a3db9b6c71e5537b68152c9648d9fee50","url":"https://github.com/broadgsa/gatk"},{"original_method":"public Map<String,int[]> map(RefMetaDataTracker tracker, ReferenceContext ref, AlignmentContext context) {\n\n        if ( ! omitDepthOutput ) {\n            out.printf(\"%s\",ref.getLocus()); // yes: print locus in map, and the rest of the info in reduce (for eventual cumulatives)\n            //System.out.printf(\"\\t[log]\\t%s\",ref.getLocus());\n        }\n\n        Map<String,int[]> countsBySample = CoverageUtils.getBaseCountsBySample(context,minMappingQuality,minBaseQuality,\n                useReadGroup ? CoverageUtils.PartitionType.BY_READ_GROUP : CoverageUtils.PartitionType.BY_SAMPLE);\n\n        if ( useBoth ) {\n            Map<String,int[]> countsByOther = CoverageUtils.getBaseCountsBySample(context,minMappingQuality,minBaseQuality,\n                !useReadGroup ? CoverageUtils.PartitionType.BY_READ_GROUP : CoverageUtils.PartitionType.BY_SAMPLE);\n            for ( String s : countsByOther.keySet()) {\n                countsBySample.put(s,countsByOther.get(s));\n            }\n        }\n\n        return countsBySample;\n    }","id":15513,"modified_method":"public Map<CoverageAggregator.AggregationType,Map<String,int[]>> map(RefMetaDataTracker tracker, ReferenceContext ref, AlignmentContext context) {\n\n        if ( ! omitDepthOutput ) {\n            out.printf(\"%s\",ref.getLocus()); // yes: print locus in map, and the rest of the info in reduce (for eventual cumulatives)\n            //System.out.printf(\"\\t[log]\\t%s\",ref.getLocus());\n        }\n\n        return CoverageUtils.getBaseCountsByPartition(context,minMappingQuality,minBaseQuality,aggregationTypes);\n    }","commit_id":"e016491a3db9b6c71e5537b68152c9648d9fee50","url":"https://github.com/broadgsa/gatk"},{"original_method":"private void printPerLocus(File locusFile, File coverageFile, DepthOfCoverageStats stats, boolean isRG) {\n        PrintStream output = getCorrectStream(out,locusFile);\n        PrintStream coverageOut = getCorrectStream(out,coverageFile);\n        if ( output == null ) {\n            return;\n        }\n\n        int[] endpoints = stats.getEndpoints();\n        int samples = stats.getHistograms().size();\n\n        int[][] baseCoverageCumDist = stats.getLocusCounts();\n\n        // rows - # of samples\n        // columns - depth of coverage\n\n        boolean printSampleColumnHeader = outputFormat.equals(\"csv\") || outputFormat.equals(\"table\");\n\n        StringBuilder header = new StringBuilder();\n        if ( printSampleColumnHeader ) {\n            if ( isRG ) {\n                header.append(\"ReadGroup\");\n            } else {\n                header.append(\"Sample\");\n            }\n        }\n        header.append(String.format(\"%sgte_0\",separator));\n        for ( int d : endpoints ) {\n            header.append(String.format(\"%sgte_%d\",separator,d));\n        }\n        header.append(String.format(\"%n\"));\n\n        output.print(header);\n        coverageOut.print(header);\n\n        for ( int row = 0; row < samples; row ++ ) {\n            output.printf(\"%s_%d\",\"NSamples\",row+1);\n            for ( int depthBin = 0; depthBin < baseCoverageCumDist[0].length; depthBin ++ ) {\n                output.printf(\"%s%d\",separator,baseCoverageCumDist[row][depthBin]);\n            }\n            output.printf(\"%n\");\n        }\n\n        for ( String sample : stats.getAllSamples() ) {\n            coverageOut.printf(\"%s\",sample);\n            double[] coverageDistribution = stats.getCoverageProportions(sample);\n            for ( int bin = 0; bin < coverageDistribution.length; bin ++ ) {\n                coverageOut.printf(\"%s%.2f\",separator,coverageDistribution[bin]);\n            }\n            coverageOut.printf(\"%n\");\n        }\n    }","id":15514,"modified_method":"private void printPerLocus(File locusFile, File coverageFile, DepthOfCoverageStats stats, String partitionType) {\n        PrintStream output = getCorrectStream(out,locusFile);\n        PrintStream coverageOut = getCorrectStream(out,coverageFile);\n        if ( output == null ) {\n            return;\n        }\n\n        int[] endpoints = stats.getEndpoints();\n        int samples = stats.getHistograms().size();\n\n        int[][] baseCoverageCumDist = stats.getLocusCounts();\n\n        // rows - # of samples\n        // columns - depth of coverage\n\n        boolean printSampleColumnHeader = outputFormat.equals(\"csv\") || outputFormat.equals(\"table\");\n\n        StringBuilder header = new StringBuilder();\n        if ( printSampleColumnHeader ) {\n            header.append(partitionType);\n        }\n        header.append(String.format(\"%sgte_0\",separator));\n        for ( int d : endpoints ) {\n            header.append(String.format(\"%sgte_%d\",separator,d));\n        }\n        header.append(String.format(\"%n\"));\n\n        output.print(header);\n        coverageOut.print(header);\n\n        for ( int row = 0; row < samples; row ++ ) {\n            output.printf(\"%s_%d\",\"NSamples\",row+1);\n            for ( int depthBin = 0; depthBin < baseCoverageCumDist[0].length; depthBin ++ ) {\n                output.printf(\"%s%d\",separator,baseCoverageCumDist[row][depthBin]);\n            }\n            output.printf(\"%n\");\n        }\n\n        for ( String sample : stats.getAllSamples() ) {\n            coverageOut.printf(\"%s\",sample);\n            double[] coverageDistribution = stats.getCoverageProportions(sample);\n            for ( int bin = 0; bin < coverageDistribution.length; bin ++ ) {\n                coverageOut.printf(\"%s%.2f\",separator,coverageDistribution[bin]);\n            }\n            coverageOut.printf(\"%n\");\n        }\n    }","commit_id":"e016491a3db9b6c71e5537b68152c9648d9fee50","url":"https://github.com/broadgsa/gatk"},{"original_method":"private DepthOfCoverageStats printIntervalStats(List<Pair<GenomeLoc,CoverageAggregator>> statsByInterval, File summaryFile, File statsFile, boolean isSample) {\n        PrintStream summaryOut;\n        PrintStream statsOut;\n\n        try {\n            summaryOut = summaryFile == null ? out : new PrintStream(summaryFile);\n            statsOut = statsFile == null ? out : new PrintStream(statsFile);\n        } catch ( IOException e ) {\n            throw new StingException(\"Unable to open interval file on reduce\", e);\n        }\n\n        Pair<GenomeLoc,CoverageAggregator> firstPair = statsByInterval.get(0);\n        CoverageAggregator firstAggregator = firstPair.second;\n        DepthOfCoverageStats firstStats = isSample ? firstAggregator.getCoverageBySample() : firstAggregator.getCoverageByReadGroup();\n\n        StringBuilder summaryHeader = new StringBuilder();\n        summaryHeader.append(\"Target\");\n        summaryHeader.append(separator);\n        summaryHeader.append(\"total_coverage\");\n        summaryHeader.append(separator);\n        summaryHeader.append(\"average_coverage\");\n\n        for ( String s : firstStats.getAllSamples() ) {\n            summaryHeader.append(separator);\n            summaryHeader.append(s);\n            summaryHeader.append(\"_total_cvg\");\n            summaryHeader.append(separator);\n            summaryHeader.append(s);\n            summaryHeader.append(\"_mean_cvg\");\n            summaryHeader.append(separator);\n            summaryHeader.append(s);\n            summaryHeader.append(\"_granular_Q1\");\n            summaryHeader.append(separator);\n            summaryHeader.append(s);\n            summaryHeader.append(\"_granular_median\");\n            summaryHeader.append(separator);\n            summaryHeader.append(s);\n            summaryHeader.append(\"_granular_Q3\");\n        }\n\n        summaryOut.printf(\"%s%n\",summaryHeader);\n\n        int[][] nTargetsByAvgCvgBySample = new int[firstStats.getHistograms().size()][firstStats.getEndpoints().length+1];\n\n        for ( Pair<GenomeLoc,CoverageAggregator> targetAggregator : statsByInterval ) {\n\n            Pair<GenomeLoc,DepthOfCoverageStats> targetStats = new Pair<GenomeLoc,DepthOfCoverageStats>(\n                    targetAggregator.first, isSample ? targetAggregator.second.getCoverageBySample() :\n                    targetAggregator.second.getCoverageByReadGroup());\n            printTargetSummary(summaryOut,targetStats);\n            updateTargetTable(nTargetsByAvgCvgBySample,targetStats.second);\n        }\n\n        printIntervalTable(statsOut,nTargetsByAvgCvgBySample,firstStats.getEndpoints());\n\n        if ( getToolkit().getArguments().outErrFileName != null && ! getToolkit().getArguments().outFileName.contains(\"stdout\")) {\n            summaryOut.close();\n            statsOut.close();\n        }\n\n        return firstStats;\n    }","id":15515,"modified_method":"private DepthOfCoverageStats printIntervalStats(List<Pair<GenomeLoc,CoverageAggregator>> statsByInterval, File summaryFile, File statsFile, CoverageAggregator.AggregationType type) {\n        PrintStream summaryOut;\n        PrintStream statsOut;\n\n        try {\n            summaryOut = summaryFile == null ? out : new PrintStream(summaryFile);\n            statsOut = statsFile == null ? out : new PrintStream(statsFile);\n        } catch ( IOException e ) {\n            throw new StingException(\"Unable to open interval file on reduce\", e);\n        }\n\n        Pair<GenomeLoc,CoverageAggregator> firstPair = statsByInterval.get(0);\n        CoverageAggregator firstAggregator = firstPair.second;\n        DepthOfCoverageStats firstStats = firstAggregator.getCoverageByAggregationType(type);\n\n        StringBuilder summaryHeader = new StringBuilder();\n        summaryHeader.append(\"Target\");\n        summaryHeader.append(separator);\n        summaryHeader.append(\"total_coverage\");\n        summaryHeader.append(separator);\n        summaryHeader.append(\"average_coverage\");\n\n        for ( String s : firstStats.getAllSamples() ) {\n            summaryHeader.append(separator);\n            summaryHeader.append(s);\n            summaryHeader.append(\"_total_cvg\");\n            summaryHeader.append(separator);\n            summaryHeader.append(s);\n            summaryHeader.append(\"_mean_cvg\");\n            summaryHeader.append(separator);\n            summaryHeader.append(s);\n            summaryHeader.append(\"_granular_Q1\");\n            summaryHeader.append(separator);\n            summaryHeader.append(s);\n            summaryHeader.append(\"_granular_median\");\n            summaryHeader.append(separator);\n            summaryHeader.append(s);\n            summaryHeader.append(\"_granular_Q3\");\n        }\n\n        summaryOut.printf(\"%s%n\",summaryHeader);\n\n        int[][] nTargetsByAvgCvgBySample = new int[firstStats.getHistograms().size()][firstStats.getEndpoints().length+1];\n\n        for ( Pair<GenomeLoc,CoverageAggregator> targetAggregator : statsByInterval ) {\n\n            Pair<GenomeLoc,DepthOfCoverageStats> targetStats = new Pair<GenomeLoc,DepthOfCoverageStats>(\n                    targetAggregator.first, targetAggregator.second.getCoverageByAggregationType(type));\n            printTargetSummary(summaryOut,targetStats);\n            updateTargetTable(nTargetsByAvgCvgBySample,targetStats.second);\n        }\n\n        printIntervalTable(statsOut,nTargetsByAvgCvgBySample,firstStats.getEndpoints());\n\n        if ( getToolkit().getArguments().outErrFileName != null && ! getToolkit().getArguments().outFileName.contains(\"stdout\")) {\n            summaryOut.close();\n            statsOut.close();\n        }\n\n        return firstStats;\n    }","commit_id":"e016491a3db9b6c71e5537b68152c9648d9fee50","url":"https://github.com/broadgsa/gatk"},{"original_method":"public CoverageAggregator(AggregationType type, int start, int stop, int nBins) {\n        if ( type == AggregationType.READ || type == AggregationType.BOTH) {\n            coverageByRead = new DepthOfCoverageStats(DepthOfCoverageStats.calculateBinEndpoints(start,stop,nBins));\n        }\n\n        if ( type == AggregationType.SAMPLE || type == AggregationType.BOTH) {\n            coverageBySample = new DepthOfCoverageStats(DepthOfCoverageStats.calculateBinEndpoints(start,stop,nBins));\n        }\n\n        agType = type;\n        allSamples = new HashSet<String>();\n    }","id":15516,"modified_method":"public CoverageAggregator(List<AggregationType> typesToUse, int start, int stop, int nBins) {\n        coverageProfiles = new HashMap<AggregationType,DepthOfCoverageStats>();\n        identifiersByType = new HashMap<AggregationType,List<String>>();\n        types = typesToUse;\n        for ( AggregationType type : types ) {\n            coverageProfiles.put(type,new DepthOfCoverageStats(DepthOfCoverageStats.calculateBinEndpoints(start,stop,nBins)));\n            identifiersByType.put(type,new ArrayList<String>());\n        }\n        allIdentifiers = new HashSet<String>();\n    }","commit_id":"e016491a3db9b6c71e5537b68152c9648d9fee50","url":"https://github.com/broadgsa/gatk"},{"original_method":"protected void handleUsernameTokenSupportingToken(\n        UsernameToken token, boolean endorse, boolean encryptedToken, Map<AbstractToken, Object> ret\n    ) throws WSSecurityException {\n        if (endorse) {\n            WSSecUsernameToken utBuilder = addDKUsernameToken(token, true);\n            if (utBuilder != null) {\n                utBuilder.prepare(saaj.getSOAPPart());\n                addSupportingElement(utBuilder.getUsernameTokenElement());\n                ret.put(token, utBuilder);\n                if (encryptedToken) {\n                    WSEncryptionPart part = new WSEncryptionPart(utBuilder.getId(), \"Element\");\n                    part.setElement(utBuilder.getUsernameTokenElement());\n                    encryptedTokensList.add(part);\n                }\n            }\n        } else {\n            WSSecUsernameToken utBuilder = addUsernameToken(token);\n            if (utBuilder != null) {\n                utBuilder.prepare(saaj.getSOAPPart());\n                addSupportingElement(utBuilder.getUsernameTokenElement());\n                ret.put(token, utBuilder);\n                //WebLogic and WCF always encrypt these\n                //See:  http://e-docs.bea.com/wls/docs103/webserv_intro/interop.html\n                //encryptedTokensIdList.add(utBuilder.getId());\n                if (encryptedToken\n                    || MessageUtils.getContextualBoolean(message, \n                                                         SecurityConstants.ALWAYS_ENCRYPT_UT,\n                                                         true)) {\n                    WSEncryptionPart part = new WSEncryptionPart(utBuilder.getId(), \"Element\");\n                    part.setElement(utBuilder.getUsernameTokenElement());\n                    encryptedTokensList.add(part);\n                }\n            }\n        }\n    }","id":15517,"modified_method":"protected void handleUsernameTokenSupportingToken(\n        UsernameToken token, boolean endorse, boolean encryptedToken, List<SupportingToken> ret\n    ) throws WSSecurityException {\n        if (endorse) {\n            WSSecUsernameToken utBuilder = addDKUsernameToken(token, true);\n            if (utBuilder != null) {\n                utBuilder.prepare(saaj.getSOAPPart());\n                addSupportingElement(utBuilder.getUsernameTokenElement());\n                ret.add(new SupportingToken(token, utBuilder));\n                if (encryptedToken) {\n                    WSEncryptionPart part = new WSEncryptionPart(utBuilder.getId(), \"Element\");\n                    part.setElement(utBuilder.getUsernameTokenElement());\n                    encryptedTokensList.add(part);\n                }\n            }\n        } else {\n            WSSecUsernameToken utBuilder = addUsernameToken(token);\n            if (utBuilder != null) {\n                utBuilder.prepare(saaj.getSOAPPart());\n                addSupportingElement(utBuilder.getUsernameTokenElement());\n                ret.add(new SupportingToken(token, utBuilder));\n                //WebLogic and WCF always encrypt these\n                //See:  http://e-docs.bea.com/wls/docs103/webserv_intro/interop.html\n                //encryptedTokensIdList.add(utBuilder.getId());\n                if (encryptedToken\n                    || MessageUtils.getContextualBoolean(message, \n                                                         SecurityConstants.ALWAYS_ENCRYPT_UT,\n                                                         true)) {\n                    WSEncryptionPart part = new WSEncryptionPart(utBuilder.getId(), \"Element\");\n                    part.setElement(utBuilder.getUsernameTokenElement());\n                    encryptedTokensList.add(part);\n                }\n            }\n        }\n    }","commit_id":"888bfa0ee1fcb1c649b8af7291bad431bb3f9474","url":"https://github.com/apache/cxf"},{"original_method":"protected void doEndorsedSignatures(Map<AbstractToken, Object> tokenMap,\n                                        boolean isTokenProtection,\n                                        boolean isSigProtect) {\n        \n        for (Map.Entry<AbstractToken, Object> ent : tokenMap.entrySet()) {\n            Object tempTok = ent.getValue();\n            \n            List<WSEncryptionPart> sigParts = new ArrayList<WSEncryptionPart>();\n            WSEncryptionPart sigPart = new WSEncryptionPart(mainSigId);\n            sigPart.setElement(bottomUpElement);\n            sigParts.add(sigPart);\n            \n            if (tempTok instanceof WSSecSignature) {\n                WSSecSignature sig = (WSSecSignature)tempTok;\n                if (isTokenProtection && sig.getBSTTokenId() != null) {\n                    WSEncryptionPart bstPart = \n                        new WSEncryptionPart(sig.getBSTTokenId());\n                    bstPart.setElement(sig.getBinarySecurityTokenElement());\n                    sigParts.add(bstPart);\n                }\n                try {\n                    List<Reference> referenceList = sig.addReferencesToSign(sigParts, secHeader);\n                    sig.computeSignature(referenceList, false, null);\n                    \n                    signatures.add(sig.getSignatureValue());\n                    if (isSigProtect) {\n                        WSEncryptionPart part = new WSEncryptionPart(sig.getId(), \"Element\");\n                        encryptedTokensList.add(part);\n                    }\n                } catch (WSSecurityException e) {\n                    policyNotAsserted(ent.getKey(), e);\n                }\n                \n            } else if (tempTok instanceof WSSecurityTokenHolder) {\n                SecurityToken token = ((WSSecurityTokenHolder)tempTok).getToken();\n                if (isTokenProtection) {\n                    sigParts.add(new WSEncryptionPart(token.getId()));\n                }\n                \n                try {\n                    if (ent.getKey().getDerivedKeys() == DerivedKeys.RequireDerivedKeys) {\n                        doSymmSignatureDerived(ent.getKey(), token, sigParts, isTokenProtection);\n                    } else {\n                        doSymmSignature(ent.getKey(), token, sigParts, isTokenProtection);\n                    }\n                } catch (Exception e) {\n                    LOG.log(Level.FINE, e.getMessage(), e);\n                }\n            } else if (tempTok instanceof WSSecUsernameToken) {\n                WSSecUsernameToken utBuilder = (WSSecUsernameToken)tempTok;\n                String id = utBuilder.getId();\n\n                Date created = new Date();\n                Date expires = new Date();\n                expires.setTime(created.getTime() + 300000);\n                SecurityToken secToken = \n                    new SecurityToken(id, utBuilder.getUsernameTokenElement(), created, expires);\n                \n                if (isTokenProtection) {\n                    sigParts.add(new WSEncryptionPart(secToken.getId()));\n                }\n                \n                try {\n                    byte[] secret = utBuilder.getDerivedKey();\n                    secToken.setSecret(secret);\n                    \n                    if (ent.getKey().getDerivedKeys() == DerivedKeys.RequireDerivedKeys) {\n                        doSymmSignatureDerived(ent.getKey(), secToken, sigParts, isTokenProtection);\n                    } else {\n                        doSymmSignature(ent.getKey(), secToken, sigParts, isTokenProtection);\n                    }\n                } catch (Exception e) {\n                    LOG.log(Level.FINE, e.getMessage(), e);\n                }\n                \n            }\n        } \n    }","id":15518,"modified_method":"protected void doEndorsedSignatures(List<SupportingToken> tokenList,\n                                        boolean isTokenProtection,\n                                        boolean isSigProtect) {\n        \n        for (SupportingToken supportingToken : tokenList) {\n            Object tempTok = supportingToken.getTokenImplementation();\n            \n            List<WSEncryptionPart> sigParts = new ArrayList<WSEncryptionPart>();\n            WSEncryptionPart sigPart = new WSEncryptionPart(mainSigId);\n            sigPart.setElement(bottomUpElement);\n            sigParts.add(sigPart);\n            \n            if (tempTok instanceof WSSecSignature) {\n                WSSecSignature sig = (WSSecSignature)tempTok;\n                if (isTokenProtection && sig.getBSTTokenId() != null) {\n                    WSEncryptionPart bstPart = \n                        new WSEncryptionPart(sig.getBSTTokenId());\n                    bstPart.setElement(sig.getBinarySecurityTokenElement());\n                    sigParts.add(bstPart);\n                }\n                try {\n                    List<Reference> referenceList = sig.addReferencesToSign(sigParts, secHeader);\n                    sig.computeSignature(referenceList, false, null);\n                    \n                    signatures.add(sig.getSignatureValue());\n                    if (isSigProtect) {\n                        WSEncryptionPart part = new WSEncryptionPart(sig.getId(), \"Element\");\n                        encryptedTokensList.add(part);\n                    }\n                } catch (WSSecurityException e) {\n                    policyNotAsserted(supportingToken.getToken(), e);\n                }\n                \n            } else if (tempTok instanceof WSSecurityTokenHolder) {\n                SecurityToken token = ((WSSecurityTokenHolder)tempTok).getToken();\n                if (isTokenProtection) {\n                    sigParts.add(new WSEncryptionPart(token.getId()));\n                }\n                \n                try {\n                    if (supportingToken.getToken().getDerivedKeys() == DerivedKeys.RequireDerivedKeys) {\n                        doSymmSignatureDerived(supportingToken.getToken(), token, sigParts,\n                                               isTokenProtection);\n                    } else {\n                        doSymmSignature(supportingToken.getToken(), token, sigParts, isTokenProtection);\n                    }\n                } catch (Exception e) {\n                    LOG.log(Level.FINE, e.getMessage(), e);\n                }\n            } else if (tempTok instanceof WSSecUsernameToken) {\n                WSSecUsernameToken utBuilder = (WSSecUsernameToken)tempTok;\n                String id = utBuilder.getId();\n\n                Date created = new Date();\n                Date expires = new Date();\n                expires.setTime(created.getTime() + 300000);\n                SecurityToken secToken = \n                    new SecurityToken(id, utBuilder.getUsernameTokenElement(), created, expires);\n                \n                if (isTokenProtection) {\n                    sigParts.add(new WSEncryptionPart(secToken.getId()));\n                }\n                \n                try {\n                    byte[] secret = utBuilder.getDerivedKey();\n                    secToken.setSecret(secret);\n                    \n                    if (supportingToken.getToken().getDerivedKeys() == DerivedKeys.RequireDerivedKeys) {\n                        doSymmSignatureDerived(supportingToken.getToken(), secToken, sigParts, \n                                               isTokenProtection);\n                    } else {\n                        doSymmSignature(supportingToken.getToken(), secToken, sigParts, isTokenProtection);\n                    }\n                } catch (Exception e) {\n                    LOG.log(Level.FINE, e.getMessage(), e);\n                }\n                \n            }\n        } \n    }","commit_id":"888bfa0ee1fcb1c649b8af7291bad431bb3f9474","url":"https://github.com/apache/cxf"},{"original_method":"protected void doEndorse() {\n        boolean tokenProtect = false;\n        boolean sigProtect = false;\n        if (binding instanceof AsymmetricBinding) {\n            tokenProtect = ((AsymmetricBinding)binding).isProtectTokens();\n            sigProtect = ((AsymmetricBinding)binding).isEncryptSignature();            \n        } else if (binding instanceof SymmetricBinding) {\n            tokenProtect = ((SymmetricBinding)binding).isProtectTokens();\n            sigProtect = ((SymmetricBinding)binding).isEncryptSignature();            \n        }\n        // Adding the endorsing encrypted supporting tokens to endorsing supporting tokens\n        endSuppTokMap.putAll(endEncSuppTokMap);\n        // Do endorsed signatures\n        doEndorsedSignatures(endSuppTokMap, tokenProtect, sigProtect);\n\n        //Adding the signed endorsed encrypted tokens to signed endorsed supporting tokens\n        sgndEndSuppTokMap.putAll(sgndEndEncSuppTokMap);\n        // Do signed endorsing signatures\n        doEndorsedSignatures(sgndEndSuppTokMap, tokenProtect, sigProtect);\n    }","id":15519,"modified_method":"protected void doEndorse() {\n        boolean tokenProtect = false;\n        boolean sigProtect = false;\n        if (binding instanceof AsymmetricBinding) {\n            tokenProtect = ((AsymmetricBinding)binding).isProtectTokens();\n            sigProtect = ((AsymmetricBinding)binding).isEncryptSignature();            \n        } else if (binding instanceof SymmetricBinding) {\n            tokenProtect = ((SymmetricBinding)binding).isProtectTokens();\n            sigProtect = ((SymmetricBinding)binding).isEncryptSignature();            \n        }\n        // Adding the endorsing encrypted supporting tokens to endorsing supporting tokens\n        endSuppTokList.addAll(endEncSuppTokList);\n        // Do endorsed signatures\n        doEndorsedSignatures(endSuppTokList, tokenProtect, sigProtect);\n\n        //Adding the signed endorsed encrypted tokens to signed endorsed supporting tokens\n        sgndEndSuppTokList.addAll(sgndEndEncSuppTokList);\n        // Do signed endorsing signatures\n        doEndorsedSignatures(sgndEndSuppTokList, tokenProtect, sigProtect);\n    }","commit_id":"888bfa0ee1fcb1c649b8af7291bad431bb3f9474","url":"https://github.com/apache/cxf"},{"original_method":"private Map<AbstractToken, Object> handleSupportingTokens(\n        Collection<Assertion> tokens, \n        boolean endorse\n    ) throws WSSecurityException {\n        Map<AbstractToken, Object> ret = new HashMap<AbstractToken, Object>();\n        if (tokens != null) {\n            for (Assertion pa : tokens) {\n                if (pa instanceof SupportingTokens) {\n                    handleSupportingTokens((SupportingTokens)pa, endorse, ret);\n                }\n            }\n        }\n        return ret;\n    }","id":15520,"modified_method":"private List<SupportingToken> handleSupportingTokens(\n        Collection<AssertionInfo> tokensInfos, \n        boolean endorse\n    ) throws WSSecurityException {\n        List<SupportingToken> ret = new ArrayList<SupportingToken>();\n        if (tokensInfos != null) {\n            for (AssertionInfo assertionInfo : tokensInfos) {\n                if (assertionInfo.getAssertion() instanceof SupportingTokens) {\n                    handleSupportingTokens((SupportingTokens)assertionInfo.getAssertion(), endorse, ret);\n                }\n            }\n        }\n        return ret;\n    }","commit_id":"888bfa0ee1fcb1c649b8af7291bad431bb3f9474","url":"https://github.com/apache/cxf"},{"original_method":"protected void addSupportingTokens(List<WSEncryptionPart> sigs) throws WSSecurityException {\n        \n        Collection<Assertion> sgndSuppTokens = \n            findAndAssertPolicy(SP12Constants.SIGNED_SUPPORTING_TOKENS);\n        Map<AbstractToken, Object> sigSuppTokMap = this.handleSupportingTokens(sgndSuppTokens, false);\n        sgndSuppTokens = findAndAssertPolicy(SP11Constants.SIGNED_SUPPORTING_TOKENS);\n        sigSuppTokMap.putAll(this.handleSupportingTokens(sgndSuppTokens, false));\n        \n        Collection<Assertion> endSuppTokens = \n            findAndAssertPolicy(SP12Constants.ENDORSING_SUPPORTING_TOKENS);\n        endSuppTokMap = this.handleSupportingTokens(endSuppTokens, true);\n        endSuppTokens = findAndAssertPolicy(SP11Constants.ENDORSING_SUPPORTING_TOKENS);\n        endSuppTokMap.putAll(this.handleSupportingTokens(endSuppTokens, true));\n\n        Collection<Assertion> sgndEndSuppTokens \n            = findAndAssertPolicy(SP12Constants.SIGNED_ENDORSING_SUPPORTING_TOKENS);\n        sgndEndSuppTokMap = this.handleSupportingTokens(sgndEndSuppTokens, true);\n        sgndEndSuppTokens = findAndAssertPolicy(SP11Constants.SIGNED_ENDORSING_SUPPORTING_TOKENS);\n        sgndEndSuppTokMap.putAll(this.handleSupportingTokens(sgndEndSuppTokens, true));\n        \n        Collection<Assertion> sgndEncryptedSuppTokens \n            = findAndAssertPolicy(SP12Constants.SIGNED_ENCRYPTED_SUPPORTING_TOKENS);\n        Map<AbstractToken, Object> sgndEncSuppTokMap \n            = this.handleSupportingTokens(sgndEncryptedSuppTokens, false);\n        \n        Collection<Assertion> endorsingEncryptedSuppTokens \n            = findAndAssertPolicy(SP12Constants.ENDORSING_ENCRYPTED_SUPPORTING_TOKENS);\n        endEncSuppTokMap \n            = this.handleSupportingTokens(endorsingEncryptedSuppTokens, true);\n\n        Collection<Assertion> sgndEndEncSuppTokens \n            = findAndAssertPolicy(SP12Constants.SIGNED_ENDORSING_ENCRYPTED_SUPPORTING_TOKENS);\n        sgndEndEncSuppTokMap \n            = this.handleSupportingTokens(sgndEndEncSuppTokens, true);\n\n        Collection<Assertion> supportingToks \n            = findAndAssertPolicy(SP12Constants.SUPPORTING_TOKENS);\n        this.handleSupportingTokens(supportingToks, false);\n        supportingToks = findAndAssertPolicy(SP11Constants.SUPPORTING_TOKENS);\n        this.handleSupportingTokens(supportingToks, false);\n\n        Collection<Assertion> encryptedSupportingToks \n            = findAndAssertPolicy(SP12Constants.ENCRYPTED_SUPPORTING_TOKENS);\n        this.handleSupportingTokens(encryptedSupportingToks, false);\n\n        //Setup signature parts\n        addSignatureParts(sigSuppTokMap, sigs);\n        addSignatureParts(sgndEncSuppTokMap, sigs);\n        addSignatureParts(sgndEndSuppTokMap, sigs);\n        addSignatureParts(sgndEndEncSuppTokMap, sigs);\n    }","id":15521,"modified_method":"protected void addSupportingTokens(List<WSEncryptionPart> sigs) throws WSSecurityException {\n        Collection<AssertionInfo> sgndSuppTokens = \n            getAllAssertionsByLocalname(aim, SPConstants.SIGNED_SUPPORTING_TOKENS);\n        List<SupportingToken> sigSuppTokList = this.handleSupportingTokens(sgndSuppTokens, false);\n        \n        Collection<AssertionInfo> endSuppTokens = \n            getAllAssertionsByLocalname(aim, SPConstants.ENDORSING_SUPPORTING_TOKENS);\n        endSuppTokList = this.handleSupportingTokens(endSuppTokens, true);\n\n        Collection<AssertionInfo> sgndEndSuppTokens =\n            getAllAssertionsByLocalname(aim, SPConstants.SIGNED_ENDORSING_SUPPORTING_TOKENS);\n        sgndEndSuppTokList = this.handleSupportingTokens(sgndEndSuppTokens, true);\n        \n        Collection<AssertionInfo> sgndEncryptedSuppTokens =\n            getAllAssertionsByLocalname(aim, SPConstants.SIGNED_ENCRYPTED_SUPPORTING_TOKENS);\n        List<SupportingToken> sgndEncSuppTokList \n            = this.handleSupportingTokens(sgndEncryptedSuppTokens, false);\n        \n        Collection<AssertionInfo> endorsingEncryptedSuppTokens =\n            getAllAssertionsByLocalname(aim, SPConstants.ENDORSING_ENCRYPTED_SUPPORTING_TOKENS);\n        endEncSuppTokList \n            = this.handleSupportingTokens(endorsingEncryptedSuppTokens, true);\n\n        Collection<AssertionInfo> sgndEndEncSuppTokens =\n            getAllAssertionsByLocalname(aim, SPConstants.SIGNED_ENDORSING_ENCRYPTED_SUPPORTING_TOKENS);\n        sgndEndEncSuppTokList \n            = this.handleSupportingTokens(sgndEndEncSuppTokens, true);\n\n        Collection<AssertionInfo> supportingToks =\n            getAllAssertionsByLocalname(aim, SPConstants.SUPPORTING_TOKENS);\n        this.handleSupportingTokens(supportingToks, false);\n\n        Collection<AssertionInfo> encryptedSupportingToks =\n            getAllAssertionsByLocalname(aim, SPConstants.ENCRYPTED_SUPPORTING_TOKENS);\n        this.handleSupportingTokens(encryptedSupportingToks, false);\n\n        //Setup signature parts\n        addSignatureParts(sigSuppTokList, sigs);\n        addSignatureParts(sgndEncSuppTokList, sigs);\n        addSignatureParts(sgndEndSuppTokList, sigs);\n        addSignatureParts(sgndEndEncSuppTokList, sigs);\n    }","commit_id":"888bfa0ee1fcb1c649b8af7291bad431bb3f9474","url":"https://github.com/apache/cxf"},{"original_method":"protected void addSignatureParts(Map<AbstractToken, Object> tokenMap,\n                                       List<WSEncryptionPart> sigParts) {\n        \n        for (Map.Entry<AbstractToken, Object> entry : tokenMap.entrySet()) {\n            \n            Object tempTok = entry.getValue();\n            WSEncryptionPart part = null;\n            \n            if (tempTok instanceof WSSecSignature) {\n                WSSecSignature tempSig = (WSSecSignature) tempTok;\n                SecurityTokenReference secRef = tempSig.getSecurityTokenReference();\n                // TODO Add support for SAML2 here\n                if ((WSConstants.WSS_SAML_KI_VALUE_TYPE).equals(secRef.getKeyIdentifierValueType())) {\n                    \n                    Element secRefElement = cloneElement(secRef.getElement());\n                    addSupportingElement(secRefElement);\n                               \n                    part = new WSEncryptionPart(\"STRTransform\", null, \"Element\");\n                    part.setId(tempSig.getSecurityTokenReferenceURI());\n                    part.setElement(secRefElement);\n                } else {\n                    if (tempSig.getBSTTokenId() != null) {\n                        part = new WSEncryptionPart(tempSig.getBSTTokenId());\n                        part.setElement(tempSig.getBinarySecurityTokenElement());\n                    }\n                }\n            } else if (tempTok instanceof WSSecUsernameToken) {\n                WSSecUsernameToken unt = (WSSecUsernameToken)tempTok;\n                part = new WSEncryptionPart(unt.getId());\n                part.setElement(unt.getUsernameTokenElement());\n            } else if (tempTok instanceof BinarySecurity) {\n                BinarySecurity bst = (BinarySecurity)tempTok;\n                part = new WSEncryptionPart(bst.getID());\n                part.setElement(bst.getElement());\n            } else if (tempTok instanceof SamlAssertionWrapper) {\n                SamlAssertionWrapper assertionWrapper = (SamlAssertionWrapper)tempTok;\n\n                Document doc = assertionWrapper.getElement().getOwnerDocument();\n                boolean saml1 = assertionWrapper.getSaml1() != null;\n                // TODO We only support using a KeyIdentifier for the moment\n                SecurityTokenReference secRef = \n                    createSTRForSamlAssertion(doc, assertionWrapper.getId(), saml1, false);\n                Element clone = cloneElement(secRef.getElement());\n                addSupportingElement(clone);\n                part = new WSEncryptionPart(\"STRTransform\", null, \"Element\");\n                part.setId(secRef.getID());\n                part.setElement(clone);\n            } else if (tempTok instanceof WSSecurityTokenHolder) {\n                SecurityToken token = ((WSSecurityTokenHolder)tempTok).getToken();\n                String tokenType = token.getTokenType();\n                if (WSConstants.WSS_SAML_TOKEN_TYPE.equals(tokenType)\n                    || WSConstants.SAML_NS.equals(tokenType)\n                    || WSConstants.WSS_SAML2_TOKEN_TYPE.equals(tokenType)\n                    || WSConstants.SAML2_NS.equals(tokenType)) {\n                    Document doc = token.getToken().getOwnerDocument();\n                    boolean saml1 = WSConstants.WSS_SAML_TOKEN_TYPE.equals(tokenType)\n                        || WSConstants.SAML_NS.equals(tokenType);\n                    String id = null;\n                    if (saml1) {\n                        id = token.getToken().getAttributeNS(null, \"AssertionID\");\n                    } else {\n                        id = token.getToken().getAttributeNS(null, \"ID\");\n                    }\n                    SecurityTokenReference secRef = \n                        createSTRForSamlAssertion(doc, id, saml1, false);\n                    Element clone = cloneElement(secRef.getElement());\n                    addSupportingElement(clone);\n                    part = new WSEncryptionPart(\"STRTransform\", null, \"Element\");\n                    part.setId(secRef.getID());\n                    part.setElement(clone);\n                } else {\n                    String id = token.getId();\n                    if (id != null && id.charAt(0) == '#') {\n                        id = id.substring(1);\n                    }\n                    part = new WSEncryptionPart(id);\n                    part.setElement(token.getToken());\n                }\n            } else {\n                policyNotAsserted(entry.getKey(), \"UnsupportedTokenInSupportingToken: \" + tempTok);  \n            }\n            if (part != null) {\n                sigParts.add(part);\n            }\n        }\n    }","id":15522,"modified_method":"protected void addSignatureParts(List<SupportingToken> tokenList,\n                                       List<WSEncryptionPart> sigParts) {\n        \n        for (SupportingToken supportingToken : tokenList) {\n            \n            Object tempTok = supportingToken.getTokenImplementation();\n            WSEncryptionPart part = null;\n            \n            if (tempTok instanceof WSSecSignature) {\n                WSSecSignature tempSig = (WSSecSignature) tempTok;\n                SecurityTokenReference secRef = tempSig.getSecurityTokenReference();\n                // TODO Add support for SAML2 here\n                if ((WSConstants.WSS_SAML_KI_VALUE_TYPE).equals(secRef.getKeyIdentifierValueType())) {\n                    \n                    Element secRefElement = cloneElement(secRef.getElement());\n                    addSupportingElement(secRefElement);\n                               \n                    part = new WSEncryptionPart(\"STRTransform\", null, \"Element\");\n                    part.setId(tempSig.getSecurityTokenReferenceURI());\n                    part.setElement(secRefElement);\n                } else {\n                    if (tempSig.getBSTTokenId() != null) {\n                        part = new WSEncryptionPart(tempSig.getBSTTokenId());\n                        part.setElement(tempSig.getBinarySecurityTokenElement());\n                    }\n                }\n            } else if (tempTok instanceof WSSecUsernameToken) {\n                WSSecUsernameToken unt = (WSSecUsernameToken)tempTok;\n                part = new WSEncryptionPart(unt.getId());\n                part.setElement(unt.getUsernameTokenElement());\n            } else if (tempTok instanceof BinarySecurity) {\n                BinarySecurity bst = (BinarySecurity)tempTok;\n                part = new WSEncryptionPart(bst.getID());\n                part.setElement(bst.getElement());\n            } else if (tempTok instanceof SamlAssertionWrapper) {\n                SamlAssertionWrapper assertionWrapper = (SamlAssertionWrapper)tempTok;\n\n                Document doc = assertionWrapper.getElement().getOwnerDocument();\n                boolean saml1 = assertionWrapper.getSaml1() != null;\n                // TODO We only support using a KeyIdentifier for the moment\n                SecurityTokenReference secRef = \n                    createSTRForSamlAssertion(doc, assertionWrapper.getId(), saml1, false);\n                Element clone = cloneElement(secRef.getElement());\n                addSupportingElement(clone);\n                part = new WSEncryptionPart(\"STRTransform\", null, \"Element\");\n                part.setId(secRef.getID());\n                part.setElement(clone);\n            } else if (tempTok instanceof WSSecurityTokenHolder) {\n                SecurityToken token = ((WSSecurityTokenHolder)tempTok).getToken();\n                String tokenType = token.getTokenType();\n                if (WSConstants.WSS_SAML_TOKEN_TYPE.equals(tokenType)\n                    || WSConstants.SAML_NS.equals(tokenType)\n                    || WSConstants.WSS_SAML2_TOKEN_TYPE.equals(tokenType)\n                    || WSConstants.SAML2_NS.equals(tokenType)) {\n                    Document doc = token.getToken().getOwnerDocument();\n                    boolean saml1 = WSConstants.WSS_SAML_TOKEN_TYPE.equals(tokenType)\n                        || WSConstants.SAML_NS.equals(tokenType);\n                    String id = null;\n                    if (saml1) {\n                        id = token.getToken().getAttributeNS(null, \"AssertionID\");\n                    } else {\n                        id = token.getToken().getAttributeNS(null, \"ID\");\n                    }\n                    SecurityTokenReference secRef = \n                        createSTRForSamlAssertion(doc, id, saml1, false);\n                    Element clone = cloneElement(secRef.getElement());\n                    addSupportingElement(clone);\n                    part = new WSEncryptionPart(\"STRTransform\", null, \"Element\");\n                    part.setId(secRef.getID());\n                    part.setElement(clone);\n                } else {\n                    String id = token.getId();\n                    if (id != null && id.charAt(0) == '#') {\n                        id = id.substring(1);\n                    }\n                    part = new WSEncryptionPart(id);\n                    part.setElement(token.getToken());\n                }\n            } else {\n                policyNotAsserted(supportingToken.getToken(), \n                                  \"UnsupportedTokenInSupportingToken: \" + tempTok);  \n            }\n            if (part != null) {\n                sigParts.add(part);\n            }\n        }\n    }","commit_id":"888bfa0ee1fcb1c649b8af7291bad431bb3f9474","url":"https://github.com/apache/cxf"},{"original_method":"protected Map<AbstractToken, Object> handleSupportingTokens(\n        SupportingTokens suppTokens, \n        boolean endorse,\n        Map<AbstractToken, Object> ret\n    ) throws WSSecurityException {\n        if (suppTokens == null) {\n            return ret;\n        }\n        for (AbstractToken token : suppTokens.getTokens()) {\n            assertToken(token);\n            if (!isTokenRequired(token.getIncludeTokenType())) {\n                continue;\n            }\n            if (token instanceof UsernameToken) {\n                handleUsernameTokenSupportingToken(\n                    (UsernameToken)token, endorse, suppTokens.isEncryptedToken(), ret\n                );\n            } else if (token instanceof IssuedToken\n                    || token instanceof SecureConversationToken\n                    || token instanceof SecurityContextToken\n                    || token instanceof KerberosToken) {\n                //ws-trust/ws-sc stuff.......\n                SecurityToken secToken = getSecurityToken();\n                if (secToken == null) {\n                    policyNotAsserted(token, \"Could not find IssuedToken\");\n                }\n                Element clone = cloneElement(secToken.getToken());\n                secToken.setToken(clone);\n                addSupportingElement(clone);\n                \n                String id = secToken.getId();\n                if (id != null && id.charAt(0) == '#') {\n                    id = id.substring(1);\n                }\n                if (suppTokens.isEncryptedToken()) {\n                    WSEncryptionPart part = new WSEncryptionPart(id, \"Element\");\n                    part.setElement(clone);\n                    encryptedTokensList.add(part);\n                }\n        \n                if (secToken.getX509Certificate() == null) {  \n                    ret.put(token, new WSSecurityTokenHolder(wssConfig, secToken));\n                } else {\n                    WSSecSignature sig = new WSSecSignature(wssConfig);                    \n                    sig.setX509Certificate(secToken.getX509Certificate());\n                    sig.setCustomTokenId(id);\n                    sig.setKeyIdentifierType(WSConstants.CUSTOM_KEY_IDENTIFIER);\n                    String tokenType = secToken.getTokenType();\n                    if (WSConstants.WSS_SAML_TOKEN_TYPE.equals(tokenType)\n                        || WSConstants.SAML_NS.equals(tokenType)) {\n                        sig.setCustomTokenValueType(WSConstants.WSS_SAML_KI_VALUE_TYPE);\n                    } else if (WSConstants.WSS_SAML2_TOKEN_TYPE.equals(tokenType)\n                        || WSConstants.SAML2_NS.equals(tokenType)) {\n                        sig.setCustomTokenValueType(WSConstants.WSS_SAML2_KI_VALUE_TYPE);\n                    } else if (tokenType != null) {\n                        sig.setCustomTokenValueType(tokenType);\n                    } else {\n                        sig.setCustomTokenValueType(WSConstants.WSS_SAML_KI_VALUE_TYPE);\n                    }\n                    sig.setSignatureAlgorithm(binding.getAlgorithmSuite().getAsymmetricSignature());\n                    sig.setSigCanonicalization(binding.getAlgorithmSuite().getC14n().getValue());\n                    \n                    Crypto crypto = secToken.getCrypto();\n                    String uname = null;\n                    try {\n                        uname = crypto.getX509Identifier(secToken.getX509Certificate());\n                    } catch (WSSecurityException e1) {\n                        LOG.log(Level.FINE, e1.getMessage(), e1);\n                        throw new Fault(e1);\n                    }\n\n                    String password = getPassword(uname, token, WSPasswordCallback.SIGNATURE);\n                    sig.setUserInfo(uname, password);\n                    try {\n                        sig.prepare(saaj.getSOAPPart(), secToken.getCrypto(), secHeader);\n                    } catch (WSSecurityException e) {\n                        LOG.log(Level.FINE, e.getMessage(), e);\n                        throw new Fault(e);\n                    }\n                    \n                    ret.put(token, sig);                \n                }\n\n            } else if (token instanceof X509Token) {\n                //We have to use a cert\n                //Prepare X509 signature\n                WSSecSignature sig = getSignatureBuilder(suppTokens, token, endorse);\n                Element bstElem = sig.getBinarySecurityTokenElement();\n                if (bstElem != null) {\n                    sig.prependBSTElementToHeader(secHeader);\n                }\n                if (suppTokens.isEncryptedToken()) {\n                    WSEncryptionPart part = new WSEncryptionPart(sig.getBSTTokenId(), \"Element\");\n                    encryptedTokensList.add(part);\n                }\n                ret.put(token, sig);\n            } else if (token instanceof KeyValueToken) {\n                WSSecSignature sig = getSignatureBuilder(suppTokens, token, endorse);\n                if (suppTokens.isEncryptedToken()) {\n                    WSEncryptionPart part = new WSEncryptionPart(sig.getBSTTokenId(), \"Element\");\n                    encryptedTokensList.add(part);\n                }\n                ret.put(token, sig);                \n            } else if (token instanceof SamlToken) {\n                SamlAssertionWrapper assertionWrapper = addSamlToken((SamlToken)token);\n                if (assertionWrapper != null) {\n                    Element assertionElement = assertionWrapper.toDOM(saaj.getSOAPPart());\n                    addSupportingElement(assertionElement);\n                    ret.put(token, assertionWrapper);\n                    if (suppTokens.isEncryptedToken()) {\n                        WSEncryptionPart part = new WSEncryptionPart(assertionWrapper.getId(), \"Element\");\n                        part.setElement(assertionElement);\n                        encryptedTokensList.add(part);\n                    }\n                }\n            }\n        }\n        return ret;\n    }","id":15523,"modified_method":"protected List<SupportingToken> handleSupportingTokens(\n        SupportingTokens suppTokens, \n        boolean endorse,\n        List<SupportingToken> ret\n    ) throws WSSecurityException {\n        if (suppTokens == null) {\n            return ret;\n        }\n        for (AbstractToken token : suppTokens.getTokens()) {\n            assertToken(token);\n            if (!isTokenRequired(token.getIncludeTokenType())) {\n                continue;\n            }\n            if (token instanceof UsernameToken) {\n                handleUsernameTokenSupportingToken(\n                    (UsernameToken)token, endorse, suppTokens.isEncryptedToken(), ret\n                );\n            } else if (token instanceof IssuedToken\n                    || token instanceof SecureConversationToken\n                    || token instanceof SecurityContextToken\n                    || token instanceof KerberosToken) {\n                //ws-trust/ws-sc stuff.......\n                SecurityToken secToken = getSecurityToken();\n                if (secToken == null) {\n                    policyNotAsserted(token, \"Could not find IssuedToken\");\n                }\n                Element clone = cloneElement(secToken.getToken());\n                secToken.setToken(clone);\n                addSupportingElement(clone);\n                \n                String id = secToken.getId();\n                if (id != null && id.charAt(0) == '#') {\n                    id = id.substring(1);\n                }\n                if (suppTokens.isEncryptedToken()) {\n                    WSEncryptionPart part = new WSEncryptionPart(id, \"Element\");\n                    part.setElement(clone);\n                    encryptedTokensList.add(part);\n                }\n        \n                if (secToken.getX509Certificate() == null) {  \n                    ret.add(\n                        new SupportingToken(token, new WSSecurityTokenHolder(wssConfig, secToken))\n                    );\n                } else {\n                    WSSecSignature sig = new WSSecSignature(wssConfig);                    \n                    sig.setX509Certificate(secToken.getX509Certificate());\n                    sig.setCustomTokenId(id);\n                    sig.setKeyIdentifierType(WSConstants.CUSTOM_KEY_IDENTIFIER);\n                    String tokenType = secToken.getTokenType();\n                    if (WSConstants.WSS_SAML_TOKEN_TYPE.equals(tokenType)\n                        || WSConstants.SAML_NS.equals(tokenType)) {\n                        sig.setCustomTokenValueType(WSConstants.WSS_SAML_KI_VALUE_TYPE);\n                    } else if (WSConstants.WSS_SAML2_TOKEN_TYPE.equals(tokenType)\n                        || WSConstants.SAML2_NS.equals(tokenType)) {\n                        sig.setCustomTokenValueType(WSConstants.WSS_SAML2_KI_VALUE_TYPE);\n                    } else if (tokenType != null) {\n                        sig.setCustomTokenValueType(tokenType);\n                    } else {\n                        sig.setCustomTokenValueType(WSConstants.WSS_SAML_KI_VALUE_TYPE);\n                    }\n                    sig.setSignatureAlgorithm(binding.getAlgorithmSuite().getAsymmetricSignature());\n                    sig.setSigCanonicalization(binding.getAlgorithmSuite().getC14n().getValue());\n                    \n                    Crypto crypto = secToken.getCrypto();\n                    String uname = null;\n                    try {\n                        uname = crypto.getX509Identifier(secToken.getX509Certificate());\n                    } catch (WSSecurityException e1) {\n                        LOG.log(Level.FINE, e1.getMessage(), e1);\n                        throw new Fault(e1);\n                    }\n\n                    String password = getPassword(uname, token, WSPasswordCallback.SIGNATURE);\n                    sig.setUserInfo(uname, password);\n                    try {\n                        sig.prepare(saaj.getSOAPPart(), secToken.getCrypto(), secHeader);\n                    } catch (WSSecurityException e) {\n                        LOG.log(Level.FINE, e.getMessage(), e);\n                        throw new Fault(e);\n                    }\n                    \n                    ret.add(new SupportingToken(token, sig));                \n                }\n\n            } else if (token instanceof X509Token) {\n                //We have to use a cert\n                //Prepare X509 signature\n                WSSecSignature sig = getSignatureBuilder(suppTokens, token, endorse);\n                Element bstElem = sig.getBinarySecurityTokenElement();\n                if (bstElem != null) {\n                    sig.prependBSTElementToHeader(secHeader);\n                }\n                if (suppTokens.isEncryptedToken()) {\n                    WSEncryptionPart part = new WSEncryptionPart(sig.getBSTTokenId(), \"Element\");\n                    encryptedTokensList.add(part);\n                }\n                ret.add(new SupportingToken(token, sig));\n            } else if (token instanceof KeyValueToken) {\n                WSSecSignature sig = getSignatureBuilder(suppTokens, token, endorse);\n                if (suppTokens.isEncryptedToken()) {\n                    WSEncryptionPart part = new WSEncryptionPart(sig.getBSTTokenId(), \"Element\");\n                    encryptedTokensList.add(part);\n                }\n                ret.add(new SupportingToken(token, sig));                \n            } else if (token instanceof SamlToken) {\n                SamlAssertionWrapper assertionWrapper = addSamlToken((SamlToken)token);\n                if (assertionWrapper != null) {\n                    Element assertionElement = assertionWrapper.toDOM(saaj.getSOAPPart());\n                    addSupportingElement(assertionElement);\n                    ret.add(new SupportingToken(token, assertionWrapper));\n                    if (suppTokens.isEncryptedToken()) {\n                        WSEncryptionPart part = new WSEncryptionPart(assertionWrapper.getId(), \"Element\");\n                        part.setElement(assertionElement);\n                        encryptedTokensList.add(part);\n                    }\n                }\n            }\n        }\n        return ret;\n    }","commit_id":"888bfa0ee1fcb1c649b8af7291bad431bb3f9474","url":"https://github.com/apache/cxf"},{"original_method":"public void handleMessage(SoapMessage message) throws Fault {\n            Collection<AssertionInfo> ais;\n            SOAPMessage saaj = message.getContent(SOAPMessage.class);\n\n            boolean mustUnderstand = \n                MessageUtils.getContextualBoolean(\n                    message, SecurityConstants.MUST_UNDERSTAND, true\n                );\n            String actor = (String)message.getContextualProperty(SecurityConstants.ACTOR);\n            \n            AssertionInfoMap aim = message.get(AssertionInfoMap.class);\n            // extract Assertion information\n            if (aim != null) {\n                AbstractBinding transport = null;\n                ais = getAllAssertionsByLocalname(aim, SPConstants.TRANSPORT_BINDING);\n                if (!ais.isEmpty()) {\n                    for (AssertionInfo ai : ais) {\n                        transport = (AbstractBinding)ai.getAssertion();\n                        ai.setAsserted(true);\n                    }                    \n                }\n                ais = getAllAssertionsByLocalname(aim, SPConstants.ASYMMETRIC_BINDING);\n                if (!ais.isEmpty()) {\n                    for (AssertionInfo ai : ais) {\n                        transport = (AbstractBinding)ai.getAssertion();\n                        ai.setAsserted(true);\n                    }                    \n                }\n                ais = getAllAssertionsByLocalname(aim, SPConstants.SYMMETRIC_BINDING);\n                if (!ais.isEmpty()) {\n                    for (AssertionInfo ai : ais) {\n                        transport = (AbstractBinding)ai.getAssertion();\n                        ai.setAsserted(true);\n                    }                    \n                }\n\n                if (transport == null && isRequestor(message)) {\n                    Policy policy = new Policy();\n                    transport = new TransportBinding(org.apache.wss4j.policy.SPConstants.SPVersion.SP11,\n                                                     policy);\n                }\n                \n                if (transport != null) {\n                    WSSecHeader secHeader = new WSSecHeader(actor, mustUnderstand);\n                    Element el = null;\n                    try {\n                        el = secHeader.insertSecurityHeader(saaj.getSOAPPart());\n                    } catch (WSSecurityException e) {\n                        throw new SoapFault(\n                            new Message(\"SECURITY_FAILED\", LOG), e, message.getVersion().getSender()\n                        );\n                    }\n                    try {\n                        //move to end\n                        SAAJUtils.getHeader(saaj).removeChild(el);\n                        SAAJUtils.getHeader(saaj).appendChild(el);\n                    } catch (SOAPException e) {\n                        //ignore\n                    }\n                    \n                    WSSConfig config = (WSSConfig)message.getContextualProperty(WSSConfig.class.getName());\n                    if (config == null) {\n                        config = WSSConfig.getNewInstance();\n                    }\n                    translateProperties(message);\n                    \n                    String asymSignatureAlgorithm = \n                        (String)message.getContextualProperty(SecurityConstants.ASYMMETRIC_SIGNATURE_ALGORITHM);\n                    if (asymSignatureAlgorithm != null && transport.getAlgorithmSuite() != null) {\n                        transport.getAlgorithmSuite().setAsymmetricSignature(asymSignatureAlgorithm);\n                    }\n\n                    if (transport instanceof TransportBinding) {\n                        new TransportBindingHandler(config, (TransportBinding)transport, saaj,\n                                                    secHeader, aim, message).handleBinding();\n                    } else if (transport instanceof SymmetricBinding) {\n                        new SymmetricBindingHandler(config, (SymmetricBinding)transport, saaj,\n                                                     secHeader, aim, message).handleBinding();\n                    } else {\n                        new AsymmetricBindingHandler(config, (AsymmetricBinding)transport, saaj,\n                                                     secHeader, aim, message).handleBinding();\n                    }\n                    \n                    if (el.getFirstChild() == null) {\n                        el.getParentNode().removeChild(el);\n                    }\n                }\n                \n                ais = getAllAssertionsByLocalname(aim, SPConstants.WSS10);\n                if (!ais.isEmpty()) {\n                    for (AssertionInfo ai : ais) {\n                        ai.setAsserted(true);\n                    }                    \n                }\n                ais = getAllAssertionsByLocalname(aim, SPConstants.WSS10);\n                if (!ais.isEmpty()) {\n                    for (AssertionInfo ai : ais) {\n                        ai.setAsserted(true);\n                    }                    \n                }\n\n            }\n            \n        }","id":15524,"modified_method":"public void handleMessage(SoapMessage message) throws Fault {\n            Collection<AssertionInfo> ais;\n            SOAPMessage saaj = message.getContent(SOAPMessage.class);\n\n            boolean mustUnderstand = \n                MessageUtils.getContextualBoolean(\n                    message, SecurityConstants.MUST_UNDERSTAND, true\n                );\n            String actor = (String)message.getContextualProperty(SecurityConstants.ACTOR);\n            \n            AssertionInfoMap aim = message.get(AssertionInfoMap.class);\n            // extract Assertion information\n            if (aim != null) {\n                AbstractBinding transport = null;\n                ais = getAllAssertionsByLocalname(aim, SPConstants.TRANSPORT_BINDING);\n                if (!ais.isEmpty()) {\n                    for (AssertionInfo ai : ais) {\n                        transport = (AbstractBinding)ai.getAssertion();\n                        ai.setAsserted(true);\n                    }                    \n                }\n                ais = getAllAssertionsByLocalname(aim, SPConstants.ASYMMETRIC_BINDING);\n                if (!ais.isEmpty()) {\n                    for (AssertionInfo ai : ais) {\n                        transport = (AbstractBinding)ai.getAssertion();\n                        ai.setAsserted(true);\n                    }                    \n                }\n                ais = getAllAssertionsByLocalname(aim, SPConstants.SYMMETRIC_BINDING);\n                if (!ais.isEmpty()) {\n                    for (AssertionInfo ai : ais) {\n                        transport = (AbstractBinding)ai.getAssertion();\n                        ai.setAsserted(true);\n                    }                    \n                }\n\n                if (transport == null && isRequestor(message)) {\n                    Policy policy = new Policy();\n                    transport = new TransportBinding(org.apache.wss4j.policy.SPConstants.SPVersion.SP11,\n                                                     policy);\n                }\n                \n                if (transport != null) {\n                    WSSecHeader secHeader = new WSSecHeader(actor, mustUnderstand);\n                    Element el = null;\n                    try {\n                        el = secHeader.insertSecurityHeader(saaj.getSOAPPart());\n                    } catch (WSSecurityException e) {\n                        throw new SoapFault(\n                            new Message(\"SECURITY_FAILED\", LOG), e, message.getVersion().getSender()\n                        );\n                    }\n                    try {\n                        //move to end\n                        SAAJUtils.getHeader(saaj).removeChild(el);\n                        SAAJUtils.getHeader(saaj).appendChild(el);\n                    } catch (SOAPException e) {\n                        //ignore\n                    }\n                    \n                    WSSConfig config = (WSSConfig)message.getContextualProperty(WSSConfig.class.getName());\n                    if (config == null) {\n                        config = WSSConfig.getNewInstance();\n                    }\n                    translateProperties(message);\n                    \n                    String asymSignatureAlgorithm = \n                        (String)message.getContextualProperty(SecurityConstants.ASYMMETRIC_SIGNATURE_ALGORITHM);\n                    if (asymSignatureAlgorithm != null && transport.getAlgorithmSuite() != null) {\n                        transport.getAlgorithmSuite().setAsymmetricSignature(asymSignatureAlgorithm);\n                    }\n\n                    if (transport instanceof TransportBinding) {\n                        new TransportBindingHandler(config, (TransportBinding)transport, saaj,\n                                                    secHeader, aim, message).handleBinding();\n                    } else if (transport instanceof SymmetricBinding) {\n                        new SymmetricBindingHandler(config, (SymmetricBinding)transport, saaj,\n                                                     secHeader, aim, message).handleBinding();\n                    } else {\n                        new AsymmetricBindingHandler(config, (AsymmetricBinding)transport, saaj,\n                                                     secHeader, aim, message).handleBinding();\n                    }\n                    \n                    if (el.getFirstChild() == null) {\n                        el.getParentNode().removeChild(el);\n                    }\n                }\n            }\n            \n        }","commit_id":"888bfa0ee1fcb1c649b8af7291bad431bb3f9474","url":"https://github.com/apache/cxf"},{"original_method":"/**\n     * Handle the non-endorsing supporting tokens\n     */\n    private void handleNonEndorsingSupportingTokens() throws Exception {\n        Collection<AssertionInfo> ais;\n        \n        ais = getAllAssertionsByLocalname(SPConstants.SIGNED_SUPPORTING_TOKENS);\n        if (!ais.isEmpty()) {\n            for (AssertionInfo ai : ais) {\n                SupportingTokens sgndSuppTokens = (SupportingTokens)ai.getAssertion();\n                if (sgndSuppTokens != null) {\n                    addSignedSupportingTokens(sgndSuppTokens);\n                }\n                ai.setAsserted(true);\n            }\n        }\n        \n        ais = getAllAssertionsByLocalname(SPConstants.SIGNED_ENCRYPTED_SUPPORTING_TOKENS);\n        if (!ais.isEmpty()) {\n            for (AssertionInfo ai : ais) {\n                SupportingTokens sgndSuppTokens = (SupportingTokens)ai.getAssertion();\n                if (sgndSuppTokens != null) {\n                    addSignedSupportingTokens(sgndSuppTokens);\n                }\n                ai.setAsserted(true);\n            }\n        }\n        \n        ais = getAllAssertionsByLocalname(SPConstants.ENCRYPTED_SUPPORTING_TOKENS);\n        if (!ais.isEmpty()) {\n            for (AssertionInfo ai : ais) {\n                SupportingTokens encrSuppTokens = (SupportingTokens)ai.getAssertion();\n                if (encrSuppTokens != null) {\n                    addSignedSupportingTokens(encrSuppTokens);\n                }\n                ai.setAsserted(true);\n            }\n        }\n        \n        ais = getAllAssertionsByLocalname(SPConstants.SUPPORTING_TOKENS);\n        if (!ais.isEmpty()) {\n            for (AssertionInfo ai : ais) {\n                SupportingTokens suppTokens = (SupportingTokens)ai.getAssertion();\n                if (suppTokens != null && suppTokens.getTokens() != null \n                    && suppTokens.getTokens().size() > 0) {\n                    handleSupportingTokens(suppTokens, false, new HashMap<AbstractToken, Object>());\n                }\n                ai.setAsserted(true);\n            }\n        }\n    }","id":15525,"modified_method":"/**\n     * Handle the non-endorsing supporting tokens\n     */\n    private void handleNonEndorsingSupportingTokens() throws Exception {\n        Collection<AssertionInfo> ais;\n        \n        ais = getAllAssertionsByLocalname(SPConstants.SIGNED_SUPPORTING_TOKENS);\n        if (!ais.isEmpty()) {\n            for (AssertionInfo ai : ais) {\n                SupportingTokens sgndSuppTokens = (SupportingTokens)ai.getAssertion();\n                if (sgndSuppTokens != null) {\n                    addSignedSupportingTokens(sgndSuppTokens);\n                }\n                ai.setAsserted(true);\n            }\n        }\n        \n        ais = getAllAssertionsByLocalname(SPConstants.SIGNED_ENCRYPTED_SUPPORTING_TOKENS);\n        if (!ais.isEmpty()) {\n            for (AssertionInfo ai : ais) {\n                SupportingTokens sgndSuppTokens = (SupportingTokens)ai.getAssertion();\n                if (sgndSuppTokens != null) {\n                    addSignedSupportingTokens(sgndSuppTokens);\n                }\n                ai.setAsserted(true);\n            }\n        }\n        \n        ais = getAllAssertionsByLocalname(SPConstants.ENCRYPTED_SUPPORTING_TOKENS);\n        if (!ais.isEmpty()) {\n            for (AssertionInfo ai : ais) {\n                SupportingTokens encrSuppTokens = (SupportingTokens)ai.getAssertion();\n                if (encrSuppTokens != null) {\n                    addSignedSupportingTokens(encrSuppTokens);\n                }\n                ai.setAsserted(true);\n            }\n        }\n        \n        ais = getAllAssertionsByLocalname(SPConstants.SUPPORTING_TOKENS);\n        if (!ais.isEmpty()) {\n            for (AssertionInfo ai : ais) {\n                SupportingTokens suppTokens = (SupportingTokens)ai.getAssertion();\n                if (suppTokens != null && suppTokens.getTokens() != null \n                    && suppTokens.getTokens().size() > 0) {\n                    handleSupportingTokens(suppTokens, false, new ArrayList<SupportingToken>());\n                }\n                ai.setAsserted(true);\n            }\n        }\n    }","commit_id":"888bfa0ee1fcb1c649b8af7291bad431bb3f9474","url":"https://github.com/apache/cxf"},{"original_method":"public void testLinkedSourceBelowMockRoot() throws IOException {\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Arrays.asList(\".\", \"linked_root\"));\n    map.put(\"content_roots\", Arrays.asList(\"linked_root/src\"));\n    doTest(map, myProjectRoot, Arrays.asList(\".\", \"linked_root\"));\n  }","id":15526,"modified_method":"public void testLinkedSourceBelowMockRoot() throws IOException {\n    VcsRootConfiguration vcsRootConfiguration =\n      new VcsRootConfiguration().contentRoots(Arrays.asList(\"linked_root/src\"))\n        .mock(Arrays.asList(\".\", \"linked_root\"));\n    doTest(vcsRootConfiguration, myProjectRoot, Arrays.asList(\".\", \"linked_root\"));\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void doTest(@NotNull Map<String, Collection<String>> map,\n                     @Nullable VirtualFile startDir,\n                     @NotNull Collection<String> expectedPaths)\n    throws IOException {\n    initProject(map.get(\"mock\"), Collections.<String>emptyList(), map.get(\"content_roots\"));\n\n    VcsRootDetectInfo info = detect(startDir);\n    assertRoots(expectedPaths, getPaths(\n      ContainerUtil.filter(info.getRoots(), new Condition<VcsRoot>() {\n        @Override\n        public boolean value(VcsRoot root) {\n          assert root.getVcs() != null;\n          return root.getVcs().getKeyInstanceMethod().equals(myVcs.getKeyInstanceMethod());\n        }\n      })));\n  }","id":15527,"modified_method":"public void doTest(@NotNull VcsRootConfiguration vcsRootConfiguration,\n                     @Nullable VirtualFile startDir,\n                     @NotNull Collection<String> expectedPaths)\n    throws IOException {\n    initProject(vcsRootConfiguration);\n    VcsRootDetectInfo info = detect(startDir);\n    assertRoots(expectedPaths, getPaths(\n      ContainerUtil.filter(info.getRoots(), new Condition<VcsRoot>() {\n        @Override\n        public boolean value(VcsRoot root) {\n          assert root.getVcs() != null;\n          return root.getVcs().getKeyInstanceMethod().equals(myVcs.getKeyInstanceMethod());\n        }\n      })\n    ));\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testMultipleAboveShouldBeDetectedAsOneAbove() throws IOException {\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Arrays.asList(\".\", myRepository.getName()));\n    map.put(\"content_roots\", Collections.<String>emptyList());\n    String subdir = \"insideRepo\";\n    cd(myRepository);\n    mkdir(subdir);\n    VirtualFile vfile = myRepository.findChild(subdir);\n    doTest(map, vfile, Arrays.asList(myRepository.getName()));\n  }","id":15528,"modified_method":"public void testMultipleAboveShouldBeDetectedAsOneAbove() throws IOException {\n    String subdir = \"insideRepo\";\n    cd(myRepository);\n    mkdir(subdir);\n    VirtualFile vfile = myRepository.findChild(subdir);\n    doTest(new VcsRootConfiguration().mock(Arrays.asList(\".\", myRepository.getName())), vfile, Arrays.asList(myRepository.getName()));\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testLinkedSourceRootAloneShouldBeDetected() throws IOException {\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Arrays.asList(\"linked_root\"));\n    map.put(\"content_roots\", Arrays.asList(\"linked_root\"));\n    doTest(map, myRepository, Arrays.asList(\"linked_root\"));\n  }","id":15529,"modified_method":"public void testLinkedSourceRootAloneShouldBeDetected() throws IOException {\n    VcsRootConfiguration vcsRootConfiguration =\n      new VcsRootConfiguration().mock(Arrays.asList(\"linked_root\"))\n        .contentRoots(Arrays.asList(\"linked_root\"));\n    doTest(vcsRootConfiguration, myRepository, Arrays.asList(\"linked_root\"));\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testUnrelatedRootShouldNotBeDetected() throws IOException {\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Arrays.asList(\"another\"));\n    map.put(\"content_roots\", Collections.<String>emptyList());\n    doTest(map, myRepository, Collections.<String>emptyList());\n  }","id":15530,"modified_method":"public void testUnrelatedRootShouldNotBeDetected() throws IOException {\n    doTest(new VcsRootConfiguration().mock(Arrays.asList(\"another\")), myRepository, Collections.<String>emptyList());\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testNoRootsInProject() throws IOException {\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Collections.<String>emptyList());\n    map.put(\"content_roots\", Collections.<String>emptyList());\n    doTest(map, null, Collections.<String>emptyList());\n  }","id":15531,"modified_method":"public void testNoRootsInProject() throws IOException {\n    doTest(new VcsRootConfiguration(), null, Collections.<String>emptyList());\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testLinkedSourceRootAndProjectRootShouldBeDetected() throws IOException {\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Arrays.asList(\".\", \"linked_root\"));\n    map.put(\"content_roots\", Arrays.asList(\"linked_root\"));\n    doTest(map, myProjectRoot, Arrays.asList(\".\", \"linked_root\"));\n  }","id":15532,"modified_method":"public void testLinkedSourceRootAndProjectRootShouldBeDetected() throws IOException {\n    VcsRootConfiguration vcsRootConfiguration =\n      new VcsRootConfiguration().mock(Arrays.asList(\".\", \"linked_root\"))\n        .contentRoots(Arrays.asList(\"linked_root\"));\n    doTest(vcsRootConfiguration, myProjectRoot, Arrays.asList(\".\", \"linked_root\"));\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testProjectUnderVcsAboveIt() throws IOException {\n    String subdir = \"insideRepo\";\n    cd(myRepository);\n    mkdir(subdir);\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Arrays.asList(myRepository.getName()));\n    map.put(\"content_roots\", Collections.<String>emptyList());\n    VirtualFile vfile = myRepository.findChild(subdir);\n    doTest(map, vfile, Arrays.asList(myRepository.getName())\n    );\n  }","id":15533,"modified_method":"public void testProjectUnderVcsAboveIt() throws IOException {\n    String subdir = \"insideRepo\";\n    cd(myRepository);\n    mkdir(subdir);\n    VirtualFile vfile = myRepository.findChild(subdir);\n    doTest(new VcsRootConfiguration().mock(Arrays.asList(myRepository.getName())), vfile, Arrays.asList(myRepository.getName())\n    );\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testOneAboveAndSeveralUnderProject() throws IOException {\n    String[] names = {\".\", myRepository.getName() + \"/community\", myRepository.getName() + \"/contrib\"};\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Arrays.asList(names));\n    map.put(\"content_roots\", Collections.<String>emptyList());\n    doTest(map, myRepository, Arrays.asList(names));\n  }","id":15534,"modified_method":"public void testOneAboveAndSeveralUnderProject() throws IOException {\n    String[] names = {\".\", myRepository.getName() + \"/community\", myRepository.getName() + \"/contrib\"};\n    doTest(new VcsRootConfiguration().mock(Arrays.asList(names)), myRepository, Arrays.asList(names));\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testOneAboveAndOneForProjectShouldShowOnlyProjectRoot() throws IOException {\n    String[] names = {myRepository.getName(), \".\"};\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Arrays.asList(names));\n    map.put(\"content_roots\", Collections.<String>emptyList());\n    doTest(map, myRepository, Arrays.asList(myRepository.getName()));\n  }","id":15535,"modified_method":"public void testOneAboveAndOneForProjectShouldShowOnlyProjectRoot() throws IOException {\n    String[] names = {myRepository.getName(), \".\"};\n    doTest(new VcsRootConfiguration().mock(Arrays.asList(names)), myRepository, Arrays.asList(myRepository.getName()));\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testOneAboveAndOneUnder() throws IOException {\n    String[] names = {myRepository.getName() + \"/community\", \".\"};\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Arrays.asList(names));\n    map.put(\"content_roots\", Collections.<String>emptyList());\n    doTest(map, myRepository, Arrays.asList(names));\n  }","id":15536,"modified_method":"public void testOneAboveAndOneUnder() throws IOException {\n    String[] names = {myRepository.getName() + \"/community\", \".\"};\n    doTest(new VcsRootConfiguration().mock(Arrays.asList(names)), myRepository, Arrays.asList(names));\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testProjectUnderSingleMockRoot() throws IOException {\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Arrays.asList(\".\"));\n    map.put(\"content_roots\", Collections.<String>emptyList());\n    doTest(map, myProjectRoot, Arrays.asList(\".\"));\n  }","id":15537,"modified_method":"public void testProjectUnderSingleMockRoot() throws IOException {\n    doTest(new VcsRootConfiguration().mock(Arrays.asList(\".\")), myProjectRoot, Arrays.asList(\".\"));\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testProjectWithAllSubdirsUnderMockRootShouldStillBeNotFullyControlled() throws IOException {\n    String[] dirNames = {\".idea\", \"src\", \"community\"};\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Arrays.asList(dirNames));\n    map.put(\"content_roots\", Collections.<String>emptyList());\n    doTest(map, myProjectRoot, Arrays.asList(dirNames));\n  }","id":15538,"modified_method":"public void testProjectWithAllSubdirsUnderMockRootShouldStillBeNotFullyControlled() throws IOException {\n    String[] dirNames = {\".idea\", \"src\", \"community\"};\n    doTest(new VcsRootConfiguration().mock(Arrays.asList(dirNames)), myProjectRoot, Arrays.asList(dirNames));\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testProjectWithMockRootUnderIt() throws IOException {\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Arrays.asList(\"community\"));\n    map.put(\"content_roots\", Collections.<String>emptyList());\n    cd(myProjectRoot);\n    mkdir(\"src\");\n    mkdir(\".idea\");\n    doTest(map, myProjectRoot, Arrays.asList(\"community\"));\n  }","id":15539,"modified_method":"public void testProjectWithMockRootUnderIt() throws IOException {\n    cd(myProjectRoot);\n    mkdir(\"src\");\n    mkdir(\".idea\");\n    doTest(new VcsRootConfiguration().mock(Arrays.asList(\"community\")), myProjectRoot, Arrays.asList(\"community\"));\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testDontScanDeeperThan2LevelsBelowAContentRoot() throws IOException {\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Arrays.asList(\"community\", \"content_root/lev1/lev2\", \"content_root2/lev1/lev2/lev3\"));\n    map.put(\"content_roots\", Arrays.asList(\"content_root\"));\n    doTest(map, myProjectRoot, Arrays.asList(\"community\", \"content_root/lev1/lev2\"));\n  }","id":15540,"modified_method":"public void testDontScanDeeperThan2LevelsBelowAContentRoot() throws IOException {\n    VcsRootConfiguration vcsRootConfiguration =\n      new VcsRootConfiguration().mock(Arrays.asList(\"community\", \"content_root/lev1/lev2\", \"content_root2/lev1/lev2/lev3\"))\n        .contentRoots(Arrays.asList(\"content_root\"));\n    doTest(vcsRootConfiguration,\n           myProjectRoot, Arrays.asList(\"community\", \"content_root/lev1/lev2\"));\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testIDEAProject() throws IOException {\n    String[] names = {\"community\", \"contrib\", \".\"};\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Arrays.asList(names));\n    map.put(\"content_roots\", Collections.<String>emptyList());\n    doTest(map, myProjectRoot, Arrays.asList(names));\n  }","id":15541,"modified_method":"public void testIDEAProject() throws IOException {\n    String[] names = {\"community\", \"contrib\", \".\"};\n    doTest(new VcsRootConfiguration().mock(Arrays.asList(names)), myProjectRoot, Arrays.asList(names));\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testOneVCSRootNoMockRootsThenError() throws IOException {\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"roots\", Arrays.asList(\".\"));\n    map.put(\"mock\", Collections.<String>emptyList());\n    map.put(\"content_roots\", Collections.<String>emptyList());\n    Map<String, Collection<String>> errorsMap = new HashMap<String, Collection<String>>();\n    errorsMap.put(\"extra\", Arrays.asList(\".\"));\n    doTest(map, errorsMap);\n  }","id":15542,"modified_method":"public void testOneVCSRootNoMockRootsThenError() throws IOException {\n\n    VcsRootConfiguration vcsRootConfiguration =\n      new VcsRootConfiguration().roots(Arrays.asList(\".\"))\n        .extraErrors(Arrays.asList(\".\"));\n    doTest(vcsRootConfiguration);\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testProjectRootForFolderMockRootForFullProjectContentRootLinkedSourceFolderBelowProjectThenErrors() throws IOException {\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Arrays.asList(\".\", \"content_root\", \"../linked_source_root\", \"folder\"));\n    map.put(\"roots\", Arrays.asList(PROJECT, \"folder\"));\n    map.put(\"content_roots\", Arrays.asList(\".\", \"content_root\", \"../linked_source_root\"));\n    Map<String, Collection<String>> errorsMap = new HashMap<String, Collection<String>>();\n    errorsMap.put(\"unreg\", Arrays.asList(\"content_root\", \"../linked_source_root\"));\n    doTest(map, errorsMap);\n  }","id":15543,"modified_method":"public void testProjectRootForFolderMockRootForFullProjectContentRootLinkedSourceFolderBelowProjectThenErrors() throws IOException {\n    VcsRootConfiguration vcsRootConfiguration =\n      new VcsRootConfiguration().mock(Arrays.asList(\".\", \"content_root\", \"../linked_source_root\", \"folder\"))\n        .roots(Arrays.asList(PROJECT, \"folder\"))\n        .contentRoots(Arrays.asList(\".\", \"content_root\", \"../linked_source_root\"))\n        .unregErrors(Arrays.asList(\"content_root\", \"../linked_source_root\"));\n    doTest(vcsRootConfiguration);\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testProjectRootFullUnderMockRootThenCorrect() throws IOException {\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Arrays.asList(\".\"));\n    map.put(\"roots\", Arrays.asList(\".\", PROJECT));\n    map.put(\"content_roots\", Collections.<String>emptyList());\n    doTest(map, Collections.<String, Collection<String>>emptyMap());\n  }","id":15544,"modified_method":"public void testProjectRootFullUnderMockRootThenCorrect() throws IOException {\n    VcsRootConfiguration vcsRootConfiguration =\n      new VcsRootConfiguration().mock(Arrays.asList(\".\"))\n        .roots(Arrays.asList(PROJECT));\n    doTest(vcsRootConfiguration);\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testNoRootsThenNoErrors() throws IOException {\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Collections.<String>emptyList());\n    map.put(\"roots\", Collections.<String>emptyList());\n    map.put(\"content_roots\", Collections.<String>emptyList());\n    doTest(map, Collections.<String, Collection<String>>emptyMap());\n  }","id":15545,"modified_method":"public void testNoRootsThenNoErrors() throws IOException {\n    doTest(new VcsRootConfiguration());\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testTwoRootsInMockRootOneMatchingInVCSThenError() throws IOException {\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Arrays.asList(\".\", \"community\"));\n    map.put(\"roots\", Arrays.asList(\".\"));\n    map.put(\"content_roots\", Collections.<String>emptyList());\n    Map<String, Collection<String>> errorsMap = new HashMap<String, Collection<String>>();\n    errorsMap.put(\"unreg\", Arrays.asList(\"community\"));\n    doTest(map, errorsMap);\n  }","id":15546,"modified_method":"public void testTwoRootsInMockRootOneMatchingInVCSThenError() throws IOException {\n    VcsRootConfiguration vcsRootConfiguration =\n      new VcsRootConfiguration().mock(Arrays.asList(\".\", \"community\"))\n        .roots(Arrays.asList(\".\"))\n        .unregErrors(Arrays.asList(\"community\"));\n    doTest(vcsRootConfiguration);\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testTwoRootsBothNotMatchingThenFourErrors() throws IOException {\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Arrays.asList(\".\", \"community\"));\n    map.put(\"roots\", Arrays.asList(\"another\", \"contrib\"));\n    map.put(\"content_roots\", Collections.<String>emptyList());\n    Map<String, Collection<String>> errorsMap = new HashMap<String, Collection<String>>();\n    errorsMap.put(\"extra\", Arrays.asList(\"contrib\", \"another\"));\n    errorsMap.put(\"unreg\", Arrays.asList(\"community\", \".\"));\n    doTest(map, errorsMap);\n  }","id":15547,"modified_method":"public void testTwoRootsBothNotMatchingThenFourErrors() throws IOException {\n    VcsRootConfiguration vcsRootConfiguration =\n      new VcsRootConfiguration().mock(Arrays.asList(\".\", \"community\"))\n        .roots(Arrays.asList(\"another\", \"contrib\"))\n        .unregErrors(Arrays.asList(\"community\", \".\")).extraErrors(Arrays.asList(\"contrib\", \"another\"));\n    doTest(vcsRootConfiguration);\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testProjectRootMockRootForAContentRootBelowProjectThenError() throws IOException {\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Arrays.asList(\"content_root\"));\n    map.put(\"roots\", Arrays.asList(PROJECT));\n    map.put(\"content_roots\", Arrays.asList(\"content_root\"));\n    Map<String, Collection<String>> errorsMap = new HashMap<String, Collection<String>>();\n    errorsMap.put(\"unreg\", Arrays.asList(\"content_root\"));\n    errorsMap.put(\"extra\", Arrays.asList(PROJECT));\n    doTest(map, errorsMap);\n  }","id":15548,"modified_method":"public void testProjectRootMockRootForAContentRootBelowProjectThenError() throws IOException {\n    VcsRootConfiguration vcsRootConfiguration =\n      new VcsRootConfiguration().mock(Arrays.asList(\"content_root\"))\n        .contentRoots(Arrays.asList(\"content_root\")).roots(Arrays.asList(PROJECT))\n        .unregErrors(Arrays.asList(\"content_root\")).extraErrors(Arrays.asList(PROJECT));\n    doTest(vcsRootConfiguration);\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testProjectRootMockRootForFullProjectContentRootLinkedSourceFolderBelowProjectThenErrors() throws IOException {\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Arrays.asList(\".\", \"content_root\", \"../linked_source_root\", \"folder\"));\n    map.put(\"roots\", Arrays.asList(PROJECT));\n    map.put(\"content_roots\", Arrays.asList(\".\", \"content_root\", \"../linked_source_root\"));\n    Map<String, Collection<String>> errorsMap = new HashMap<String, Collection<String>>();\n    errorsMap.put(\"unreg\", Arrays.asList(\"content_root\", \"../linked_source_root\", \"folder\"));\n    doTest(map, errorsMap);\n  }","id":15549,"modified_method":"public void testProjectRootMockRootForFullProjectContentRootLinkedSourceFolderBelowProjectThenErrors() throws IOException {\n    VcsRootConfiguration vcsRootConfiguration =\n      new VcsRootConfiguration().mock(Arrays.asList(\".\", \"content_root\", \"../linked_source_root\", \"folder\"))\n        .roots(Arrays.asList(PROJECT))\n        .contentRoots(Arrays.asList(\".\", \"content_root\", \"../linked_source_root\"))\n        .unregErrors(Arrays.asList(\"content_root\", \"../linked_source_root\", \"folder\"));\n    doTest(vcsRootConfiguration);\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testOneRootButDifferentThenTwoErrors() throws IOException {\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Arrays.asList(\".\"));\n    map.put(\"roots\", Arrays.asList(\"community\"));\n    map.put(\"content_roots\", Collections.<String>emptyList());\n    Map<String, Collection<String>> errorsMap = new HashMap<String, Collection<String>>();\n    errorsMap.put(\"extra\", Arrays.asList(\"community\"));\n    errorsMap.put(\"unreg\", Arrays.asList(\".\"));\n    doTest(map, errorsMap);\n  }","id":15550,"modified_method":"public void testOneRootButDifferentThenTwoErrors() throws IOException {\n    VcsRootConfiguration vcsRootConfiguration =\n      new VcsRootConfiguration().mock(Arrays.asList(\".\"))\n        .roots(Arrays.asList(\"community\"))\n        .unregErrors(Arrays.asList(\".\")).extraErrors(Arrays.asList(\"community\"));\n    doTest(vcsRootConfiguration);\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testProjectRootNoMockRootsThenErrorAboutExtraRoot() throws IOException {\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Collections.<String>emptyList());\n    map.put(\"roots\", Arrays.asList(PROJECT));\n    map.put(\"content_roots\", Collections.<String>emptyList());\n    Map<String, Collection<String>> errorsMap = new HashMap<String, Collection<String>>();\n    errorsMap.put(\"extra\", Arrays.asList(PROJECT));\n    doTest(map, errorsMap);\n  }","id":15551,"modified_method":"public void testProjectRootNoMockRootsThenErrorAboutExtraRoot() throws IOException {\n    VcsRootConfiguration vcsRootConfiguration =\n      new VcsRootConfiguration()\n        .roots(Arrays.asList(PROJECT))\n        .extraErrors(Arrays.asList(PROJECT));\n    doTest(vcsRootConfiguration);\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testTwoRootsOneMatchingOneDifferentThenTwoErrors() throws IOException {\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Arrays.asList(\".\", \"community\"));\n    map.put(\"roots\", Arrays.asList(\".\", \"contrib\"));\n    map.put(\"content_roots\", Collections.<String>emptyList());\n    Map<String, Collection<String>> errorsMap = new HashMap<String, Collection<String>>();\n    errorsMap.put(\"extra\", Arrays.asList(\"contrib\"));\n    errorsMap.put(\"unreg\", Arrays.asList(\"community\"));\n    doTest(map, errorsMap);\n  }","id":15552,"modified_method":"public void testTwoRootsOneMatchingOneDifferentThenTwoErrors() throws IOException {\n    VcsRootConfiguration vcsRootConfiguration =\n      new VcsRootConfiguration().mock(Arrays.asList(\".\", \"community\"))\n        .roots(Arrays.asList(\".\", \"contrib\"))\n        .unregErrors(Arrays.asList(\"community\")).extraErrors(Arrays.asList(\"contrib\"));\n    doTest(vcsRootConfiguration);\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testSameTwoRootsInBothThenNoErrors() throws IOException {\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Arrays.asList(\".\", \"community\"));\n    map.put(\"roots\", Arrays.asList(\".\", \"community\"));\n    map.put(\"content_roots\", Collections.<String>emptyList());\n    doTest(map, Collections.<String, Collection<String>>emptyMap());\n  }","id":15553,"modified_method":"public void testSameTwoRootsInBothThenNoErrors() throws IOException {\n    VcsRootConfiguration vcsRootConfiguration =\n      new VcsRootConfiguration().mock(Arrays.asList(\".\", \"community\"))\n        .roots(Arrays.asList(\".\", \"community\"));\n    doTest(vcsRootConfiguration);\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testProjectRootMockRootLikeInIDEAProjectThenError() throws IOException {\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Arrays.asList(\".\", \"community\", \"contrib\"));\n    map.put(\"roots\", Arrays.asList(PROJECT));\n    map.put(\"content_roots\", Arrays.asList(\".\", \"community\", \"contrib\"));\n    Map<String, Collection<String>> errorsMap = new HashMap<String, Collection<String>>();\n    errorsMap.put(\"unreg\", Arrays.asList(\"community\", \"contrib\"));\n    doTest(map, errorsMap);\n  }","id":15554,"modified_method":"public void testProjectRootMockRootLikeInIDEAProjectThenError() throws IOException {\n    VcsRootConfiguration vcsRootConfiguration =\n      new VcsRootConfiguration().mock(Arrays.asList(\".\", \"community\", \"contrib\")).roots(Arrays.asList(PROJECT))\n        .contentRoots(Arrays.asList(\".\", \"community\", \"contrib\")).unregErrors(Arrays.asList(\"community\", \"contrib\"));\n    doTest(vcsRootConfiguration);\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testOneMockRootNoVCSRootsThenError() throws IOException {\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Arrays.asList(\".\"));\n    map.put(\"roots\", Collections.<String>emptyList());\n    map.put(\"content_roots\", Collections.<String>emptyList());\n    Map<String, Collection<String>> errorsMap = new HashMap<String, Collection<String>>();\n    errorsMap.put(\"unreg\", Arrays.asList(\".\"));\n    doTest(map, errorsMap);\n  }","id":15555,"modified_method":"public void testOneMockRootNoVCSRootsThenError() throws IOException {\n    VcsRootConfiguration vcsRootConfiguration =\n      new VcsRootConfiguration().mock(Arrays.asList(\".\"))\n        .unregErrors(Arrays.asList(\".\"));\n    doTest(vcsRootConfiguration);\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testProjectRootMockRootBelowProjectFolderNotInAContentRootThenUnregisteredRootError() throws IOException {\n    // this is to be fixed: auto-detection of MockRoot repositories in subfolders for the <Project> mapping\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Arrays.asList(\"community\"));\n    map.put(\"roots\", Arrays.asList(PROJECT));\n    map.put(\"content_roots\", Arrays.asList(\".\"));\n    Map<String, Collection<String>> errorsMap = new HashMap<String, Collection<String>>();\n    errorsMap.put(\"unreg\", Arrays.asList(\"community\"));\n    errorsMap.put(\"extra\", Arrays.asList(PROJECT));\n    doTest(map, errorsMap);\n  }","id":15556,"modified_method":"public void testProjectRootMockRootBelowProjectFolderNotInAContentRootThenUnregisteredRootError() throws IOException {\n    // this is to be fixed: auto-detection of MockRoot repositories in subfolders for the <Project> mapping\n    VcsRootConfiguration vcsRootConfiguration =\n      new VcsRootConfiguration().mock(Arrays.asList(\"community\"))\n        .contentRoots(Arrays.asList(\".\")).roots(Arrays.asList(PROJECT))\n        .unregErrors(Arrays.asList(\"community\")).extraErrors(Arrays.asList(PROJECT));\n    doTest(vcsRootConfiguration);\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testSameOneRootInBothThenNoErrors() throws IOException {\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Arrays.asList(\".\"));\n    map.put(\"roots\", Arrays.asList(\".\"));\n    map.put(\"content_roots\", Collections.<String>emptyList());\n    doTest(map, Collections.<String, Collection<String>>emptyMap());\n  }","id":15557,"modified_method":"public void testSameOneRootInBothThenNoErrors() throws IOException {\n    VcsRootConfiguration vcsRootConfiguration =\n      new VcsRootConfiguration().mock(Arrays.asList(\".\"))\n        .roots(Arrays.asList(\".\"));\n    doTest(vcsRootConfiguration);\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testRealMockRootRootDeeperThanThreeLevelsShouldBeDetected() throws IOException {\n\n    Map<String, Collection<String>> map = new HashMap<String, Collection<String>>();\n    map.put(\"mock\", Arrays.asList(\".\", \"community\", \"contrib\", \"community/level1/level2/level3\"));\n    map.put(\"roots\", Arrays.asList(PROJECT, \"community/level1/level2/level3\"));\n    map.put(\"content_roots\", Arrays.asList(\".\", \"community\", \"contrib\"));\n    Map<String, Collection<String>> errorsMap = new HashMap<String, Collection<String>>();\n    errorsMap.put(\"unreg\", Arrays.asList(\"community\", \"contrib\"));\n    doTest(map, errorsMap);\n  }","id":15558,"modified_method":"public void testRealMockRootRootDeeperThanThreeLevelsShouldBeDetected() throws IOException {\n    VcsRootConfiguration vcsRootConfiguration =\n      new VcsRootConfiguration().mock(Arrays.asList(\".\", \"community\", \"contrib\", \"community/level1/level2/level3\"))\n        .contentRoots(Arrays.asList(\".\", \"community\", \"contrib\")).roots(Arrays.asList(PROJECT, \"community/level1/level2/level3\"))\n        .unregErrors(Arrays.asList(\"community\", \"contrib\"));\n    doTest(vcsRootConfiguration);\n  }","commit_id":"e78399c34f8c6ae789253af3bbe83e5f45d25bbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public float getAverageRemoveTime() {\n        if (getCacheRemoveTimeTakenNanos() == 0 || getCacheGets() == 0) {\n            return 0;\n        }\n        float avgRemoveTime = ((1f * getCacheRemoveTimeTakenNanos()) / getCacheGets()) / NANOSECONDS_IN_A_MICROSECOND;\n        return avgRemoveTime;\n    }","id":15559,"modified_method":"@Override\n    public float getAverageRemoveTime() {\n        final long cacheRemoveTimeTakenNanos = getCacheRemoveTimeTakenNanos();\n        final long cacheGets = getCacheGets();\n        if (cacheRemoveTimeTakenNanos == 0 || cacheGets == 0) {\n            return 0;\n        }\n        return ((1f * cacheRemoveTimeTakenNanos) / cacheGets) / NANOSECONDS_IN_A_MICROSECOND;\n    }","commit_id":"5dde24af87ee7042aa579e06958dea47cd8a6077","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public float getCacheHitPercentage() {\n        Long hits = getCacheHits();\n        if (hits == 0) {\n            return 0;\n        }\n        return (float) hits / getCacheGets() * FLOAT_HUNDRED;\n    }","id":15560,"modified_method":"@Override\n    public float getCacheHitPercentage() {\n        final long cacheHits = getCacheHits();\n        final long cacheGets = getCacheGets();\n        if (cacheHits == 0 || cacheGets == 0) {\n            return 0;\n        }\n        return (float) cacheHits / cacheGets * FLOAT_HUNDRED;\n    }","commit_id":"5dde24af87ee7042aa579e06958dea47cd8a6077","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public float getAveragePutTime() {\n        if (getCachePutTimeTakenNanos() == 0 || getCacheGets() == 0) {\n            return 0;\n        }\n        float avgPutTime = ((1f * getCachePutTimeTakenNanos()) / getCacheGets()) / NANOSECONDS_IN_A_MICROSECOND;\n        return avgPutTime;\n    }","id":15561,"modified_method":"@Override\n    public float getAveragePutTime() {\n        final long cachePutTimeTakenNanos = getCachePutTimeTakenNanos();\n        final long cacheGets = getCacheGets();\n        if (cachePutTimeTakenNanos == 0 || cacheGets == 0) {\n            return 0;\n        }\n        return ((1f * cachePutTimeTakenNanos) / cacheGets) / NANOSECONDS_IN_A_MICROSECOND;\n    }","commit_id":"5dde24af87ee7042aa579e06958dea47cd8a6077","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public float getAverageGetTime() {\n        if (getCacheGetTimeTakenNanos() == 0 || getCacheGets() == 0) {\n            return 0;\n        }\n        float avgGetTime = ((1f * getCacheGetTimeTakenNanos()) / getCacheGets()) / NANOSECONDS_IN_A_MICROSECOND;\n        return avgGetTime;\n    }","id":15562,"modified_method":"@Override\n    public float getAverageGetTime() {\n        final long cacheGetTimeTakenNanos = getCacheGetTimeTakenNanos();\n        final long cacheGets = getCacheGets();\n        if (cacheGetTimeTakenNanos == 0 || cacheGets == 0) {\n            return 0;\n        }\n        return ((1f * cacheGetTimeTakenNanos) / cacheGets) / NANOSECONDS_IN_A_MICROSECOND;\n    }","commit_id":"5dde24af87ee7042aa579e06958dea47cd8a6077","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public float getCacheMissPercentage() {\n        Long misses = getCacheMisses();\n        if (misses == 0) {\n            return 0;\n        }\n        return (float) misses / getCacheGets() * FLOAT_HUNDRED;\n    }","id":15563,"modified_method":"@Override\n    public float getCacheMissPercentage() {\n        final long cacheMisses = getCacheMisses();\n        final long cacheGets = getCacheGets();\n        if (cacheMisses == 0 || cacheGets == 0) {\n            return 0;\n        }\n        return (float) cacheMisses / cacheGets * FLOAT_HUNDRED;\n    }","commit_id":"5dde24af87ee7042aa579e06958dea47cd8a6077","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public synchronized <K, V, C extends Configuration<K, V>> Cache<K, V> createCache(String cacheName, C configuration)\n            throws IllegalArgumentException {\n        //TODO: WARNING important method, handles dynamic cache config\n        if (isClosed()) {\n            throw new IllegalStateException();\n        }\n        if (cacheName == null) {\n            throw new NullPointerException(\"cacheName must not be null\");\n        }\n        if (configuration == null) {\n            throw new NullPointerException(\"configuration must not be null\");\n        }\n        final String cacheNameWithPrefix = getCacheNameWithPrefix(cacheName);\n        final CacheConfig<K, V> cacheConfig = getCacheConfigLocal(cacheNameWithPrefix);\n        if (cacheConfig == null) {\n            final CacheConfig<K, V> newCacheConfig = createCacheConfig(cacheName, configuration);\n            //CREATE THE CONFIG ON PARTITION BY cacheNamePrefix using a request\n            final boolean created = createConfigOnPartition(newCacheConfig);\n            if (created) {\n                //single thread region because createConfigOnPartition is single threaded by partition thread\n                //CREATE ON OTHERS TOO\n                createConfigOnAllMembers(newCacheConfig);\n                //UPDATE LOCAL MEMBER\n                addCacheConfigIfAbsentToLocal(newCacheConfig);\n                //create proxy object\n                final ICache<K, V> cacheProxy = createCacheProxy(newCacheConfig);\n                //no need to a putIfAbsent as this is a single threaded region\n                caches.put(cacheNameWithPrefix, cacheProxy);\n                if (newCacheConfig.isStatisticsEnabled()) {\n                    enableStatistics(cacheName, true);\n                }\n                if (newCacheConfig.isManagementEnabled()) {\n                    enableManagement(cacheName, true);\n                }\n                //REGISTER LISTENERS\n                registerListeners(newCacheConfig, cacheProxy);\n                return cacheProxy;\n            } else {\n                //this node don't have the config, so grep it and spread that one to cluster\n                final CacheConfig<K, V> cacheConfigFromPartition = getCacheConfigFromPartition(cacheNameWithPrefix);\n                //ADD CONFIG ON EACH NODE\n                createConfigOnAllMembers(cacheConfigFromPartition);\n                //UPDATE LOCAL MEMBER\n                addCacheConfigIfAbsentToLocal(cacheConfigFromPartition);\n            }\n        }\n        throw new CacheException(\"A cache named \" + cacheName + \" already exists.\");\n    }","id":15564,"modified_method":"@Override\n    public <K, V, C extends Configuration<K, V>> Cache<K, V> createCache(String cacheName, C configuration)\n            throws IllegalArgumentException {\n        //TODO: WARNING important method, handles dynamic cache config\n        if (isClosed()) {\n            throw new IllegalStateException();\n        }\n        if (cacheName == null) {\n            throw new NullPointerException(\"cacheName must not be null\");\n        }\n        if (configuration == null) {\n            throw new NullPointerException(\"configuration must not be null\");\n        }\n        final String cacheNameWithPrefix = getCacheNameWithPrefix(cacheName);\n        final CacheConfig<K, V> cacheConfig = getCacheConfigLocal(cacheNameWithPrefix);\n        if (cacheConfig == null) {\n            final CacheConfig<K, V> newCacheConfig = createCacheConfig(cacheName, configuration);\n            //CREATE THE CONFIG ON PARTITION BY cacheNamePrefix using a request\n            final boolean created = createConfigOnPartition(newCacheConfig);\n            if (created) {\n                //single thread region because createConfigOnPartition is single threaded by partition thread\n                //CREATE ON OTHERS TOO\n                createConfigOnAllMembers(newCacheConfig);\n                //UPDATE LOCAL MEMBER\n                addCacheConfigIfAbsentToLocal(newCacheConfig);\n                //create proxy object\n                final ICache<K, V> cacheProxy = createCacheProxy(newCacheConfig);\n                //no need to a putIfAbsent as this is a single threaded region\n                caches.put(cacheNameWithPrefix, cacheProxy);\n                if (newCacheConfig.isStatisticsEnabled()) {\n                    enableStatistics(cacheName, true);\n                }\n                if (newCacheConfig.isManagementEnabled()) {\n                    enableManagement(cacheName, true);\n                }\n                //REGISTER LISTENERS\n                registerListeners(newCacheConfig, cacheProxy);\n                return cacheProxy;\n            } else {\n                //this node don't have the config, so grep it and spread that one to cluster\n                final CacheConfig<K, V> cacheConfigFromPartition = getCacheConfigFromPartition(cacheNameWithPrefix);\n                //ADD CONFIG ON EACH NODE\n                createConfigOnAllMembers(cacheConfigFromPartition);\n                //UPDATE LOCAL MEMBER\n                addCacheConfigIfAbsentToLocal(cacheConfigFromPartition);\n            }\n        }\n        throw new CacheException(\"A cache named \" + cacheName + \" already exists.\");\n    }","commit_id":"5dde24af87ee7042aa579e06958dea47cd8a6077","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public synchronized void destroyCache(String cacheName) {\n        if (isClosed()) {\n            throw new IllegalStateException();\n        }\n        if (cacheName == null) {\n            throw new NullPointerException();\n        }\n        final String cacheNameWithPrefix = getCacheNameWithPrefix(cacheName);\n        final ICache<?, ?> cache = caches.remove(cacheNameWithPrefix);\n        if (cache != null) {\n            cache.close();\n        }\n        removeCacheConfigFromLocal(cacheNameWithPrefix);\n    }","id":15565,"modified_method":"@Override\n    public void destroyCache(String cacheName) {\n        if (isClosed()) {\n            throw new IllegalStateException();\n        }\n        if (cacheName == null) {\n            throw new NullPointerException();\n        }\n        final String cacheNameWithPrefix = getCacheNameWithPrefix(cacheName);\n        final ICache<?, ?> cache = caches.remove(cacheNameWithPrefix);\n        if (cache != null) {\n            cache.close();\n        }\n        removeCacheConfigFromLocal(cacheNameWithPrefix);\n    }","commit_id":"5dde24af87ee7042aa579e06958dea47cd8a6077","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public float getAveragePutTime() {\n        if (getCachePutTimeTakenNanos() == 0 || getCacheGets() == 0) {\n            return 0;\n        }\n        float avgPutTime = ((1f * getCachePutTimeTakenNanos()) / getCacheGets()) / NANOSECONDS_IN_A_MICROSECOND;\n        return avgPutTime;\n    }","id":15566,"modified_method":"@Override\n    public float getAveragePutTime() {\n        final long cachePutTimeTakenNanos = getCachePutTimeTakenNanos();\n        final long cacheGets = getCacheGets();\n        if (cachePutTimeTakenNanos == 0 || cacheGets == 0) {\n            return 0;\n        }\n        return ((1f * cachePutTimeTakenNanos) / cacheGets) / NANOSECONDS_IN_A_MICROSECOND;\n    }","commit_id":"4638cac5063ece302f307d9efa3f866c571ea89e","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public float getCacheHitPercentage() {\n        Long hits = getCacheHits();\n        if (hits == 0) {\n            return 0;\n        }\n        return (float) hits / getCacheGets() * FLOAT_HUNDRED;\n    }","id":15567,"modified_method":"@Override\n    public float getCacheHitPercentage() {\n        final long cacheHits = getCacheHits();\n        final long cacheGets = getCacheGets();\n        if (cacheHits == 0 || cacheGets == 0) {\n            return 0;\n        }\n        return (float) cacheHits / cacheGets * FLOAT_HUNDRED;\n    }","commit_id":"4638cac5063ece302f307d9efa3f866c571ea89e","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public float getCacheMissPercentage() {\n        Long misses = getCacheMisses();\n        if (misses == 0) {\n            return 0;\n        }\n        return (float) misses / getCacheGets() * FLOAT_HUNDRED;\n    }","id":15568,"modified_method":"@Override\n    public float getCacheMissPercentage() {\n        final long cacheMisses = getCacheMisses();\n        final long cacheGets = getCacheGets();\n        if (cacheMisses == 0 || cacheGets == 0) {\n            return 0;\n        }\n        return (float) cacheMisses / cacheGets * FLOAT_HUNDRED;\n    }","commit_id":"4638cac5063ece302f307d9efa3f866c571ea89e","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public float getAverageRemoveTime() {\n        if (getCacheRemoveTimeTakenNanos() == 0 || getCacheGets() == 0) {\n            return 0;\n        }\n        float avgRemoveTime = ((1f * getCacheRemoveTimeTakenNanos()) / getCacheGets()) / NANOSECONDS_IN_A_MICROSECOND;\n        return avgRemoveTime;\n    }","id":15569,"modified_method":"@Override\n    public float getAverageRemoveTime() {\n        final long cacheRemoveTimeTakenNanos = getCacheRemoveTimeTakenNanos();\n        final long cacheGets = getCacheGets();\n        if (cacheRemoveTimeTakenNanos == 0 || cacheGets == 0) {\n            return 0;\n        }\n        return ((1f * cacheRemoveTimeTakenNanos) / cacheGets) / NANOSECONDS_IN_A_MICROSECOND;\n    }","commit_id":"4638cac5063ece302f307d9efa3f866c571ea89e","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public float getAverageGetTime() {\n        if (getCacheGetTimeTakenNanos() == 0 || getCacheGets() == 0) {\n            return 0;\n        }\n        float avgGetTime = ((1f * getCacheGetTimeTakenNanos()) / getCacheGets()) / NANOSECONDS_IN_A_MICROSECOND;\n        return avgGetTime;\n    }","id":15570,"modified_method":"@Override\n    public float getAverageGetTime() {\n        final long cacheGetTimeTakenNanos = getCacheGetTimeTakenNanos();\n        final long cacheGets = getCacheGets();\n        if (cacheGetTimeTakenNanos == 0 || cacheGets == 0) {\n            return 0;\n        }\n        return ((1f * cacheGetTimeTakenNanos) / cacheGets) / NANOSECONDS_IN_A_MICROSECOND;\n    }","commit_id":"4638cac5063ece302f307d9efa3f866c571ea89e","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public synchronized void destroyCache(String cacheName) {\n        if (isClosed()) {\n            throw new IllegalStateException();\n        }\n        if (cacheName == null) {\n            throw new NullPointerException();\n        }\n        final String cacheNameWithPrefix = getCacheNameWithPrefix(cacheName);\n        final ICache<?, ?> cache = caches.remove(cacheNameWithPrefix);\n        if (cache != null) {\n            cache.close();\n        }\n        removeCacheConfigFromLocal(cacheNameWithPrefix);\n    }","id":15571,"modified_method":"@Override\n    public void destroyCache(String cacheName) {\n        if (isClosed()) {\n            throw new IllegalStateException();\n        }\n        if (cacheName == null) {\n            throw new NullPointerException();\n        }\n        final String cacheNameWithPrefix = getCacheNameWithPrefix(cacheName);\n        final ICache<?, ?> cache = caches.remove(cacheNameWithPrefix);\n        if (cache != null) {\n            cache.close();\n        }\n        removeCacheConfigFromLocal(cacheNameWithPrefix);\n    }","commit_id":"4638cac5063ece302f307d9efa3f866c571ea89e","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public synchronized <K, V, C extends Configuration<K, V>> Cache<K, V> createCache(String cacheName, C configuration)\n            throws IllegalArgumentException {\n        //TODO: WARNING important method, handles dynamic cache config\n        if (isClosed()) {\n            throw new IllegalStateException();\n        }\n        if (cacheName == null) {\n            throw new NullPointerException(\"cacheName must not be null\");\n        }\n        if (configuration == null) {\n            throw new NullPointerException(\"configuration must not be null\");\n        }\n        final String cacheNameWithPrefix = getCacheNameWithPrefix(cacheName);\n        final CacheConfig<K, V> cacheConfig = getCacheConfigLocal(cacheNameWithPrefix);\n        if (cacheConfig == null) {\n            final CacheConfig<K, V> newCacheConfig = createCacheConfig(cacheName, configuration);\n            //CREATE THE CONFIG ON PARTITION BY cacheNamePrefix using a request\n            final boolean created = createConfigOnPartition(newCacheConfig);\n            if (created) {\n                //single thread region because createConfigOnPartition is single threaded by partition thread\n                //CREATE ON OTHERS TOO\n                createConfigOnAllMembers(newCacheConfig);\n                //UPDATE LOCAL MEMBER\n                addCacheConfigIfAbsentToLocal(newCacheConfig);\n                //create proxy object\n                final ICache<K, V> cacheProxy = createCacheProxy(newCacheConfig);\n                //no need to a putIfAbsent as this is a single threaded region\n                caches.put(cacheNameWithPrefix, cacheProxy);\n                if (newCacheConfig.isStatisticsEnabled()) {\n                    enableStatistics(cacheName, true);\n                }\n                if (newCacheConfig.isManagementEnabled()) {\n                    enableManagement(cacheName, true);\n                }\n                //REGISTER LISTENERS\n                registerListeners(newCacheConfig, cacheProxy);\n                return cacheProxy;\n            } else {\n                //this node don't have the config, so grep it and spread that one to cluster\n                final CacheConfig<K, V> cacheConfigFromPartition = getCacheConfigFromPartition(cacheNameWithPrefix);\n                //ADD CONFIG ON EACH NODE\n                createConfigOnAllMembers(cacheConfigFromPartition);\n                //UPDATE LOCAL MEMBER\n                addCacheConfigIfAbsentToLocal(cacheConfigFromPartition);\n            }\n        }\n        throw new CacheException(\"A cache named \" + cacheName + \" already exists.\");\n    }","id":15572,"modified_method":"@Override\n    public <K, V, C extends Configuration<K, V>> Cache<K, V> createCache(String cacheName, C configuration)\n            throws IllegalArgumentException {\n        //TODO: WARNING important method, handles dynamic cache config\n        if (isClosed()) {\n            throw new IllegalStateException();\n        }\n        if (cacheName == null) {\n            throw new NullPointerException(\"cacheName must not be null\");\n        }\n        if (configuration == null) {\n            throw new NullPointerException(\"configuration must not be null\");\n        }\n        final String cacheNameWithPrefix = getCacheNameWithPrefix(cacheName);\n        final CacheConfig<K, V> cacheConfig = getCacheConfigLocal(cacheNameWithPrefix);\n        if (cacheConfig == null) {\n            final CacheConfig<K, V> newCacheConfig = createCacheConfig(cacheName, configuration);\n            //CREATE THE CONFIG ON PARTITION BY cacheNamePrefix using a request\n            final boolean created = createConfigOnPartition(newCacheConfig);\n            if (created) {\n                //single thread region because createConfigOnPartition is single threaded by partition thread\n                //CREATE ON OTHERS TOO\n                createConfigOnAllMembers(newCacheConfig);\n                //UPDATE LOCAL MEMBER\n                addCacheConfigIfAbsentToLocal(newCacheConfig);\n                //create proxy object\n                final ICache<K, V> cacheProxy = createCacheProxy(newCacheConfig);\n                //no need to a putIfAbsent as this is a single threaded region\n                caches.put(cacheNameWithPrefix, cacheProxy);\n                if (newCacheConfig.isStatisticsEnabled()) {\n                    enableStatistics(cacheName, true);\n                }\n                if (newCacheConfig.isManagementEnabled()) {\n                    enableManagement(cacheName, true);\n                }\n                //REGISTER LISTENERS\n                registerListeners(newCacheConfig, cacheProxy);\n                return cacheProxy;\n            } else {\n                //this node don't have the config, so grep it and spread that one to cluster\n                final CacheConfig<K, V> cacheConfigFromPartition = getCacheConfigFromPartition(cacheNameWithPrefix);\n                //ADD CONFIG ON EACH NODE\n                createConfigOnAllMembers(cacheConfigFromPartition);\n                //UPDATE LOCAL MEMBER\n                addCacheConfigIfAbsentToLocal(cacheConfigFromPartition);\n            }\n        }\n        throw new CacheException(\"A cache named \" + cacheName + \" already exists.\");\n    }","commit_id":"4638cac5063ece302f307d9efa3f866c571ea89e","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"public boolean checkRecentlyFailed(int blockNum, ObjectContainer container, ClientContext context, KeysFetchingLocally keys, long now) {\n\t\tif(keys == null) \n\t\t\tmigrateToKeys(container);\n\t\telse {\n\t\t\tif(persistent) container.activate(keys, 1);\n\t\t}\n\t\tKey key = this.keys.getNodeKey(blockNum, null, true);\n\t\tlong timeout = keys.checkRecentlyFailed(key, realTimeFlag);\n\t\tif(timeout <= now) return false;\n\t\t// Concurrency is fine here, it won't go away before the given time.\n\t\tsetMaxCooldownWakeup(timeout, blockNum, this.getMaxRetries(container), container, context);\n\t\treturn true;\n\t}","id":15573,"modified_method":"public boolean checkRecentlyFailed(int blockNum, ObjectContainer container, ClientContext context, KeysFetchingLocally keys, long now) {\n\t\tif(keys == null) \n\t\t\tmigrateToKeys(container);\n\t\telse {\n\t\t\tif(persistent) container.activate(keys, 1);\n\t\t}\n\t\tKey key = this.keys.getNodeKey(blockNum, null, true);\n\t\tlong timeout = keys.checkRecentlyFailed(key, realTimeFlag);\n\t\tif(timeout <= now) return false;\n\t\tif(maxRetries == -1 || (maxRetries >= RequestScheduler.COOLDOWN_RETRIES)) {\n\t\t\t// Concurrency is fine here, it won't go away before the given time.\n\t\t\tsetMaxCooldownWakeup(timeout, blockNum, this.getMaxRetries(container), container, context);\n\t\t} else {\n\t\t\tonNonFatalFailure(new FetchException(FetchException.RECENTLY_FAILED), blockNum, container, context);\n\t\t}\n\t\treturn true;\n\t}","commit_id":"c654c362185f219a748a0f9d7a49b9a45f7f6327","url":"https://github.com/freenet/fred"},{"original_method":"/** Separate method because we will need to create the Key anyway for checking against\n\t * the KeysFetchingLocally, and we can reuse that in the created Block. Yes we don't \n\t * pass that in at the moment but we will in future. \n\t * future.\n\t * @param request\n\t * @param sched\n\t * @param getter \n\t * @param keysFetching \n\t * @param container\n\t * @param context\n\t * @return\n\t */\n\tpublic List<PersistentChosenBlock> makeBlocks(\n\t\t\tPersistentChosenRequest request, RequestScheduler sched,\n\t\t\tKeysFetchingLocally fetching, SplitFileFetcherSegmentGet getter, ObjectContainer container, ClientContext context) {\n\t\tlong now = System.currentTimeMillis();\n\t\tArrayList<PersistentChosenBlock> list = null;\n\t\tif(keys == null) \n\t\t\tmigrateToKeys(container);\n\t\telse {\n\t\t\tif(persistent) container.activate(keys, 1);\n\t\t}\n\t\tint maxTries = getMaxRetries(container);\n\t\tsynchronized(this) {\n\t\t\tif(startedDecode || isFinishing(container)) return null;\n\t\t\tfor(int i=0;i<dataBuckets.length+checkBuckets.length;i++) {\n\t\t\t\tif(foundKeys[i]) continue;\n\t\t\t\tif(getCooldownWakeup(i, maxTries, container, context) > now) continue;\n\t\t\t\t// Double check\n\t\t\t\tif(getBlockBucket(i, container) != null) continue;\n\t\t\t\t// Possible ...\n\t\t\t\tKey key = keys.getNodeKey(i, null, true);\n\t\t\t\tif(fetching.hasKey(key, getter, persistent, container)) continue;\n\t\t\t\tif(list == null) list = new ArrayList<PersistentChosenBlock>();\n\t\t\t\tClientCHK ckey = keys.getKey(i, null, true); // FIXME Duplicates the routingKey field\n\t\t\t\tlist.add(new PersistentChosenBlock(false, request, new SplitFileFetcherSegmentSendableRequestItem(i), key, ckey, sched));\n\t\t\t}\n\t\t}\n\t\tif(list == null) return null;\n\t\tfor(Iterator<PersistentChosenBlock> i = list.iterator();i.hasNext();) {\n\t\t\tPersistentChosenBlock block = i.next();\n\t\t\t// We must do the actual check outside the lock.\n\t\t\tlong l = fetching.checkRecentlyFailed(block.key, realTimeFlag);\n\t\t\tif(l < now) continue; // Okay\n\t\t\ti.remove();\n\t\t\t// Concurrency is fine here, it won't go away before the given time.\n\t\t\tsetMaxCooldownWakeup(l, ((SplitFileFetcherSegmentSendableRequestItem)block.token).blockNum, maxTries, container, context);\n\t\t}\n\t\treturn list;\n\t}","id":15574,"modified_method":"/** Separate method because we will need to create the Key anyway for checking against\n\t * the KeysFetchingLocally, and we can reuse that in the created Block. Yes we don't \n\t * pass that in at the moment but we will in future. \n\t * future.\n\t * @param request\n\t * @param sched\n\t * @param getter \n\t * @param keysFetching \n\t * @param container\n\t * @param context\n\t * @return\n\t */\n\tpublic List<PersistentChosenBlock> makeBlocks(\n\t\t\tPersistentChosenRequest request, RequestScheduler sched,\n\t\t\tKeysFetchingLocally fetching, SplitFileFetcherSegmentGet getter, ObjectContainer container, ClientContext context) {\n\t\tlong now = System.currentTimeMillis();\n\t\tArrayList<PersistentChosenBlock> list = null;\n\t\tif(keys == null) \n\t\t\tmigrateToKeys(container);\n\t\telse {\n\t\t\tif(persistent) container.activate(keys, 1);\n\t\t}\n\t\tint maxTries = getMaxRetries(container);\n\t\tsynchronized(this) {\n\t\t\tif(startedDecode || isFinishing(container)) return null;\n\t\t\tfor(int i=0;i<dataBuckets.length+checkBuckets.length;i++) {\n\t\t\t\tif(foundKeys[i]) continue;\n\t\t\t\tif(getCooldownWakeup(i, maxTries, container, context) > now) continue;\n\t\t\t\t// Double check\n\t\t\t\tif(getBlockBucket(i, container) != null) continue;\n\t\t\t\t// Possible ...\n\t\t\t\tKey key = keys.getNodeKey(i, null, true);\n\t\t\t\tif(fetching.hasKey(key, getter, persistent, container)) continue;\n\t\t\t\tif(list == null) list = new ArrayList<PersistentChosenBlock>();\n\t\t\t\tClientCHK ckey = keys.getKey(i, null, true); // FIXME Duplicates the routingKey field\n\t\t\t\tlist.add(new PersistentChosenBlock(false, request, new SplitFileFetcherSegmentSendableRequestItem(i), key, ckey, sched));\n\t\t\t}\n\t\t}\n\t\tif(list == null) return null;\n\t\tfor(Iterator<PersistentChosenBlock> i = list.iterator();i.hasNext();) {\n\t\t\tPersistentChosenBlock block = i.next();\n\t\t\t// We must do the actual check outside the lock.\n\t\t\tlong l = fetching.checkRecentlyFailed(block.key, realTimeFlag);\n\t\t\tif(l < now) continue; // Okay\n\t\t\ti.remove();\n\t\t\tif(maxRetries == -1 || (maxRetries >= RequestScheduler.COOLDOWN_RETRIES)) {\n\t\t\t\t// Concurrency is fine here, it won't go away before the given time.\n\t\t\t\tsetMaxCooldownWakeup(l, ((SplitFileFetcherSegmentSendableRequestItem)block.token).blockNum, maxTries, container, context);\n\t\t\t} else {\n\t\t\t\tonNonFatalFailure(new FetchException(FetchException.RECENTLY_FAILED), ((SplitFileFetcherSegmentSendableRequestItem)(block.token)).blockNum, container, context);\n\t\t\t}\n\t\t}\n\t\treturn list;\n\t}","commit_id":"c654c362185f219a748a0f9d7a49b9a45f7f6327","url":"https://github.com/freenet/fred"},{"original_method":"public boolean checkRecentlyFailed(int blockNum, ObjectContainer container, ClientContext context, KeysFetchingLocally keys, long now) {\n\t\tif(keys == null) \n\t\t\tmigrateToKeys(container);\n\t\telse {\n\t\t\tif(persistent) container.activate(keys, 1);\n\t\t}\n\t\tKey key = this.keys.getNodeKey(blockNum, null, true);\n\t\tlong timeout = keys.checkRecentlyFailed(key, realTimeFlag);\n\t\tif(timeout <= now) return false;\n\t\t// Concurrency is fine here, it won't go away before the given time.\n\t\tsetMaxCooldownWakeup(timeout, blockNum, this.getMaxRetries(container), container, context);\n\t\treturn true;\n\t}","id":15575,"modified_method":"public boolean checkRecentlyFailed(int blockNum, ObjectContainer container, ClientContext context, KeysFetchingLocally keys, long now) {\n\t\tif(keys == null) \n\t\t\tmigrateToKeys(container);\n\t\telse {\n\t\t\tif(persistent) container.activate(keys, 1);\n\t\t}\n\t\tKey key = this.keys.getNodeKey(blockNum, null, true);\n\t\tlong timeout = keys.checkRecentlyFailed(key, realTimeFlag);\n\t\tif(timeout <= now) return false;\n\t\tif(maxRetries == -1 || (maxRetries >= RequestScheduler.COOLDOWN_RETRIES)) {\n\t\t\t// Concurrency is fine here, it won't go away before the given time.\n\t\t\tsetMaxCooldownWakeup(timeout, blockNum, this.getMaxRetries(container), container, context);\n\t\t} else {\n\t\t\tonNonFatalFailure(new FetchException(FetchException.RECENTLY_FAILED), blockNum, container, context);\n\t\t}\n\t\treturn true;\n\t}","commit_id":"b155f66e08bb788c54aa16133c18c14c5bf50f14","url":"https://github.com/freenet/fred"},{"original_method":"/** Separate method because we will need to create the Key anyway for checking against\n\t * the KeysFetchingLocally, and we can reuse that in the created Block. Yes we don't \n\t * pass that in at the moment but we will in future. \n\t * future.\n\t * @param request\n\t * @param sched\n\t * @param getter \n\t * @param keysFetching \n\t * @param container\n\t * @param context\n\t * @return\n\t */\n\tpublic List<PersistentChosenBlock> makeBlocks(\n\t\t\tPersistentChosenRequest request, RequestScheduler sched,\n\t\t\tKeysFetchingLocally fetching, SplitFileFetcherSegmentGet getter, ObjectContainer container, ClientContext context) {\n\t\tlong now = System.currentTimeMillis();\n\t\tArrayList<PersistentChosenBlock> list = null;\n\t\tif(keys == null) \n\t\t\tmigrateToKeys(container);\n\t\telse {\n\t\t\tif(persistent) container.activate(keys, 1);\n\t\t}\n\t\tint maxTries = getMaxRetries(container);\n\t\tsynchronized(this) {\n\t\t\tif(startedDecode || isFinishing(container)) return null;\n\t\t\tfor(int i=0;i<dataBuckets.length+checkBuckets.length;i++) {\n\t\t\t\tif(foundKeys[i]) continue;\n\t\t\t\tif(getCooldownWakeup(i, maxTries, container, context) > now) continue;\n\t\t\t\t// Double check\n\t\t\t\tif(getBlockBucket(i, container) != null) continue;\n\t\t\t\t// Possible ...\n\t\t\t\tKey key = keys.getNodeKey(i, null, true);\n\t\t\t\tif(fetching.hasKey(key, getter, persistent, container)) continue;\n\t\t\t\tif(list == null) list = new ArrayList<PersistentChosenBlock>();\n\t\t\t\tClientCHK ckey = keys.getKey(i, null, true); // FIXME Duplicates the routingKey field\n\t\t\t\tlist.add(new PersistentChosenBlock(false, request, new SplitFileFetcherSegmentSendableRequestItem(i), key, ckey, sched));\n\t\t\t}\n\t\t}\n\t\tif(list == null) return null;\n\t\tfor(Iterator<PersistentChosenBlock> i = list.iterator();i.hasNext();) {\n\t\t\tPersistentChosenBlock block = i.next();\n\t\t\t// We must do the actual check outside the lock.\n\t\t\tlong l = fetching.checkRecentlyFailed(block.key, realTimeFlag);\n\t\t\tif(l < now) continue; // Okay\n\t\t\ti.remove();\n\t\t\t// Concurrency is fine here, it won't go away before the given time.\n\t\t\tsetMaxCooldownWakeup(l, ((SplitFileFetcherSegmentSendableRequestItem)block.token).blockNum, maxTries, container, context);\n\t\t}\n\t\treturn list;\n\t}","id":15576,"modified_method":"/** Separate method because we will need to create the Key anyway for checking against\n\t * the KeysFetchingLocally, and we can reuse that in the created Block. Yes we don't \n\t * pass that in at the moment but we will in future. \n\t * future.\n\t * @param request\n\t * @param sched\n\t * @param getter \n\t * @param keysFetching \n\t * @param container\n\t * @param context\n\t * @return\n\t */\n\tpublic List<PersistentChosenBlock> makeBlocks(\n\t\t\tPersistentChosenRequest request, RequestScheduler sched,\n\t\t\tKeysFetchingLocally fetching, SplitFileFetcherSegmentGet getter, ObjectContainer container, ClientContext context) {\n\t\tlong now = System.currentTimeMillis();\n\t\tArrayList<PersistentChosenBlock> list = null;\n\t\tif(keys == null) \n\t\t\tmigrateToKeys(container);\n\t\telse {\n\t\t\tif(persistent) container.activate(keys, 1);\n\t\t}\n\t\tint maxTries = getMaxRetries(container);\n\t\tsynchronized(this) {\n\t\t\tif(startedDecode || isFinishing(container)) return null;\n\t\t\tfor(int i=0;i<dataBuckets.length+checkBuckets.length;i++) {\n\t\t\t\tif(foundKeys[i]) continue;\n\t\t\t\tif(getCooldownWakeup(i, maxTries, container, context) > now) continue;\n\t\t\t\t// Double check\n\t\t\t\tif(getBlockBucket(i, container) != null) continue;\n\t\t\t\t// Possible ...\n\t\t\t\tKey key = keys.getNodeKey(i, null, true);\n\t\t\t\tif(fetching.hasKey(key, getter, persistent, container)) continue;\n\t\t\t\tif(list == null) list = new ArrayList<PersistentChosenBlock>();\n\t\t\t\tClientCHK ckey = keys.getKey(i, null, true); // FIXME Duplicates the routingKey field\n\t\t\t\tlist.add(new PersistentChosenBlock(false, request, new SplitFileFetcherSegmentSendableRequestItem(i), key, ckey, sched));\n\t\t\t}\n\t\t}\n\t\tif(list == null) return null;\n\t\tfor(Iterator<PersistentChosenBlock> i = list.iterator();i.hasNext();) {\n\t\t\tPersistentChosenBlock block = i.next();\n\t\t\t// We must do the actual check outside the lock.\n\t\t\tlong l = fetching.checkRecentlyFailed(block.key, realTimeFlag);\n\t\t\tif(l < now) continue; // Okay\n\t\t\ti.remove();\n\t\t\tif(maxRetries == -1 || (maxRetries >= RequestScheduler.COOLDOWN_RETRIES)) {\n\t\t\t\t// Concurrency is fine here, it won't go away before the given time.\n\t\t\t\tsetMaxCooldownWakeup(l, ((SplitFileFetcherSegmentSendableRequestItem)block.token).blockNum, maxTries, container, context);\n\t\t\t} else {\n\t\t\t\tonNonFatalFailure(new FetchException(FetchException.RECENTLY_FAILED), ((SplitFileFetcherSegmentSendableRequestItem)(block.token)).blockNum, container, context);\n\t\t\t}\n\t\t}\n\t\treturn list;\n\t}","commit_id":"b155f66e08bb788c54aa16133c18c14c5bf50f14","url":"https://github.com/freenet/fred"},{"original_method":"public static WorkItem readWorkItem(MarshallerReaderContext context) throws IOException {\r\n        ObjectInputStream stream = context.stream;\r\n        InternalWorkingMemory wm = context.wm;\r\n\r\n        WorkItemImpl workItem = new WorkItemImpl();\r\n        workItem.setId( stream.readLong() );\r\n        workItem.setProcessInstanceId( stream.readLong() );\r\n        workItem.setName( stream.readUTF() );\r\n        workItem.setState( stream.readInt() );\r\n\r\n        wm.getWorkItemManager().internalAddWorkItem( workItem );\r\n        return workItem;\r\n    }","id":15577,"modified_method":"public static WorkItem readWorkItem(MarshallerReaderContext context) throws IOException {\r\n        ObjectInputStream stream = context.stream;\r\n        InternalWorkingMemory wm = context.wm;\r\n\r\n        WorkItemImpl workItem = new WorkItemImpl();\r\n        workItem.setId( stream.readLong() );\r\n        workItem.setProcessInstanceId( stream.readLong() );\r\n        workItem.setName( stream.readUTF() );\r\n        workItem.setState( stream.readInt() );\r\n        \r\n        int nbParameters = stream.readInt();\r\n        \r\n        for ( int i = 0; i < nbParameters; i++ ) {\r\n        \tString name = stream.readUTF();\r\n        \ttry {\r\n        \t\tObject value = stream.readObject();\r\n            \tworkItem.setParameter(name, value);\r\n        \t} catch (ClassNotFoundException e) {\r\n        \t\tthrow new IllegalArgumentException( \"Could not reload parameter \" + name );\r\n        \t}\r\n        }\r\n\r\n        wm.getWorkItemManager().internalAddWorkItem( workItem );\r\n        return workItem;\r\n    }","commit_id":"5ca99a544e95144c590aed9037220ccbd6056b05","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public static NodeInstance readNodeInstance(MarshallerReaderContext context,\r\n    \t\t\t\t\t\t\t\t\t\t\tNodeInstanceContainer nodeInstanceContainer,\r\n                                                RuleFlowProcessInstance processInstance) throws IOException {\r\n        ObjectInputStream stream = context.stream;\r\n        NodeInstanceImpl nodeInstance = null;\r\n        long id = stream.readLong();\r\n        long nodeId = stream.readLong();\r\n        int nodeType = stream.readShort();\r\n        switch ( nodeType ) {\r\n            case PersisterEnums.RULE_SET_NODE_INSTANCE :\r\n                nodeInstance = new RuleSetNodeInstance();\r\n                break;\r\n            case PersisterEnums.HUMAN_TASK_NODE_INSTANCE :\r\n                nodeInstance = new HumanTaskNodeInstance();\r\n                ((HumanTaskNodeInstance) nodeInstance).internalSetWorkItemId( stream.readLong() );\r\n                break;\r\n            case PersisterEnums.WORK_ITEM_NODE_INSTANCE :\r\n                nodeInstance = new WorkItemNodeInstance();\r\n                ((WorkItemNodeInstance) nodeInstance).internalSetWorkItemId( stream.readLong() );\r\n                break;\r\n            case PersisterEnums.SUB_PROCESS_NODE_INSTANCE :\r\n                nodeInstance = new SubProcessNodeInstance();\r\n                ((SubProcessNodeInstance) nodeInstance).internalSetProcessInstanceId( stream.readLong() );\r\n                break;\r\n            case PersisterEnums.MILESTONE_NODE_INSTANCE :\r\n                nodeInstance = new MilestoneNodeInstance();\r\n                break;\r\n            case PersisterEnums.TIMER_NODE_INSTANCE :\r\n                nodeInstance = new TimerNodeInstance();\r\n                ((TimerNodeInstance) nodeInstance).internalSetTimerId( stream.readLong() );\r\n                break;\r\n            case PersisterEnums.JOIN_NODE_INSTANCE :\r\n                nodeInstance = new JoinInstance();\r\n                int number = stream.readInt();\r\n                if ( number > 0 ) {\r\n                    Map<Long, Integer> triggers = new HashMap<Long, Integer>();\r\n                    for ( int i = 0; i < number; i++ ) {\r\n                        long l = stream.readLong();\r\n                        int count = stream.readInt();\r\n                        triggers.put( l,\r\n                                      count );\r\n                    }\r\n                    ((JoinInstance) nodeInstance).internalSetTriggers( triggers );\r\n                }\r\n                break;\r\n            case PersisterEnums.COMPOSITE_NODE_INSTANCE :\r\n                nodeInstance = new CompositeContextNodeInstance();\r\n                int nbVariables = stream.readInt();\r\n                if ( nbVariables > 0 ) {\r\n                    VariableScopeInstance variableScopeInstance = (VariableScopeInstance)\r\n                    \tprocessInstance.getContextInstance( VariableScope.VARIABLE_SCOPE );\r\n                    for ( int i = 0; i < nbVariables; i++ ) {\r\n                        String name = stream.readUTF();\r\n                        try {\r\n                            Object value = stream.readObject();\r\n                            variableScopeInstance.setVariable( name, value );\r\n                        } catch ( ClassNotFoundException e ) {\r\n                            throw new IllegalArgumentException(\r\n                        \t\t\"Could not reload variable \" + name );\r\n                        }\r\n                    }\r\n                }\r\n                while ( stream.readShort() == PersisterEnums.NODE_INSTANCE ) {\r\n                    readNodeInstance( \r\n                \t\tcontext, \r\n                \t\t(CompositeContextNodeInstance) nodeInstance, \r\n                \t\tprocessInstance );\r\n                }\r\n                break;\r\n            case PersisterEnums.FOR_EACH_NODE_INSTANCE :\r\n                nodeInstance = new ForEachNodeInstance();\r\n                while ( stream.readShort() == PersisterEnums.NODE_INSTANCE ) {\r\n                    readNodeInstance( \r\n                \t\tcontext, \r\n                \t\t(ForEachNodeInstance) nodeInstance, \r\n                \t\tprocessInstance );\r\n                }\r\n                break;\r\n            default :\r\n                throw new IllegalArgumentException( \"Unknown node type: \" + nodeType );\r\n        }\r\n        nodeInstance.setNodeId( nodeId );\r\n        nodeInstance.setNodeInstanceContainer( nodeInstanceContainer );\r\n        nodeInstance.setProcessInstance( processInstance );\r\n        nodeInstance.setId( id );\r\n        if ( nodeInstance instanceof EventBasedNodeInstance ) {\r\n            ((EventBasedNodeInstance) nodeInstance).addEventListeners();\r\n        }\r\n        return nodeInstance;\r\n    }","id":15578,"modified_method":"public static NodeInstance readNodeInstance(MarshallerReaderContext context,\r\n    \t\t\t\t\t\t\t\t\t\t\tNodeInstanceContainer nodeInstanceContainer,\r\n                                                RuleFlowProcessInstance processInstance) throws IOException {\r\n        ObjectInputStream stream = context.stream;\r\n        NodeInstanceImpl nodeInstance = null;\r\n        long id = stream.readLong();\r\n        long nodeId = stream.readLong();\r\n        int nodeType = stream.readShort();\r\n        switch ( nodeType ) {\r\n            case PersisterEnums.RULE_SET_NODE_INSTANCE :\r\n                nodeInstance = new RuleSetNodeInstance();\r\n                break;\r\n            case PersisterEnums.HUMAN_TASK_NODE_INSTANCE :\r\n                nodeInstance = new HumanTaskNodeInstance();\r\n                ((HumanTaskNodeInstance) nodeInstance).internalSetWorkItemId( stream.readLong() );\r\n                break;\r\n            case PersisterEnums.WORK_ITEM_NODE_INSTANCE :\r\n                nodeInstance = new WorkItemNodeInstance();\r\n                ((WorkItemNodeInstance) nodeInstance).internalSetWorkItemId( stream.readLong() );\r\n                break;\r\n            case PersisterEnums.SUB_PROCESS_NODE_INSTANCE :\r\n                nodeInstance = new SubProcessNodeInstance();\r\n                ((SubProcessNodeInstance) nodeInstance).internalSetProcessInstanceId( stream.readLong() );\r\n                break;\r\n            case PersisterEnums.MILESTONE_NODE_INSTANCE :\r\n                nodeInstance = new MilestoneNodeInstance();\r\n                break;\r\n            case PersisterEnums.TIMER_NODE_INSTANCE :\r\n                nodeInstance = new TimerNodeInstance();\r\n                ((TimerNodeInstance) nodeInstance).internalSetTimerId( stream.readLong() );\r\n                break;\r\n            case PersisterEnums.JOIN_NODE_INSTANCE :\r\n                nodeInstance = new JoinInstance();\r\n                int number = stream.readInt();\r\n                if ( number > 0 ) {\r\n                    Map<Long, Integer> triggers = new HashMap<Long, Integer>();\r\n                    for ( int i = 0; i < number; i++ ) {\r\n                        long l = stream.readLong();\r\n                        int count = stream.readInt();\r\n                        triggers.put( l,\r\n                                      count );\r\n                    }\r\n                    ((JoinInstance) nodeInstance).internalSetTriggers( triggers );\r\n                }\r\n                break;\r\n            case PersisterEnums.COMPOSITE_NODE_INSTANCE :\r\n                nodeInstance = new CompositeContextNodeInstance();\r\n                break;\r\n            case PersisterEnums.FOR_EACH_NODE_INSTANCE :\r\n                nodeInstance = new ForEachNodeInstance();\r\n                break;\r\n            default :\r\n                throw new IllegalArgumentException( \"Unknown node type: \" + nodeType );\r\n        }\r\n        nodeInstance.setNodeId( nodeId );\r\n        nodeInstance.setNodeInstanceContainer( nodeInstanceContainer );\r\n        nodeInstance.setProcessInstance( processInstance );\r\n        nodeInstance.setId( id );\r\n        switch ( nodeType ) {\r\n\t        case PersisterEnums.COMPOSITE_NODE_INSTANCE :\r\n\t            int nbVariables = stream.readInt();\r\n\t            if ( nbVariables > 0 ) {\r\n\t            \tVariableScopeInstance variableScopeInstance = (VariableScopeInstance)\r\n\t                \t((CompositeContextNodeInstance) nodeInstance).getContextInstance(VariableScope.VARIABLE_SCOPE);\r\n\t                for ( int i = 0; i < nbVariables; i++ ) {\r\n\t                    String name = stream.readUTF();\r\n\t                    try {\r\n\t                        Object value = stream.readObject();\r\n\t                        variableScopeInstance.setVariable( name, value );\r\n\t                    } catch ( ClassNotFoundException e ) {\r\n\t                        throw new IllegalArgumentException(\r\n\t                    \t\t\"Could not reload variable \" + name );\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            while ( stream.readShort() == PersisterEnums.NODE_INSTANCE ) {\r\n\t                readNodeInstance( \r\n\t            \t\tcontext, \r\n\t            \t\t(CompositeContextNodeInstance) nodeInstance, \r\n\t            \t\tprocessInstance );\r\n\t            }\r\n\t            break;\r\n\t        case PersisterEnums.FOR_EACH_NODE_INSTANCE :\r\n\t            while ( stream.readShort() == PersisterEnums.NODE_INSTANCE ) {\r\n\t                readNodeInstance( \r\n\t            \t\tcontext, \r\n\t            \t\t(ForEachNodeInstance) nodeInstance, \r\n\t            \t\tprocessInstance );\r\n\t            }\r\n\t            break;\r\n\t        default :\r\n\t            // do nothing\r\n\t        }\r\n        if ( nodeInstance instanceof EventBasedNodeInstance ) {\r\n            ((EventBasedNodeInstance) nodeInstance).addEventListeners();\r\n        }\r\n        return nodeInstance;\r\n    }","commit_id":"5ca99a544e95144c590aed9037220ccbd6056b05","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public static void writeProcessInstance(MarshallerWriteContext context,\r\n                                            RuleFlowProcessInstance processInstance) throws IOException {\r\n        ObjectOutputStream stream = context.stream;\r\n        stream.writeLong( processInstance.getId() );\r\n        stream.writeUTF( processInstance.getProcessId() );\r\n        stream.writeInt( processInstance.getState() );\r\n        stream.writeLong( processInstance.getNodeInstanceCounter() );\r\n\r\n        VariableScopeInstance variableScopeInstance = (VariableScopeInstance) processInstance.getContextInstance( VariableScope.VARIABLE_SCOPE );\r\n        Map<String, Object> variables = variableScopeInstance.getVariables();\r\n        stream.writeInt( variables.size() );\r\n        for ( Map.Entry<String, Object> entry : variables.entrySet() ) {\r\n            stream.writeUTF( entry.getKey() );\r\n            stream.writeObject( entry.getValue() );\r\n        }\r\n        \r\n        SwimlaneContextInstance swimlaneContextInstance = (SwimlaneContextInstance) processInstance.getContextInstance( SwimlaneContext.SWIMLANE_SCOPE );\r\n        Map<String, String> swimlaneActors = swimlaneContextInstance.getSwimlaneActors();\r\n        stream.writeInt( swimlaneActors.size() );\r\n        for ( Map.Entry<String, String> entry : swimlaneActors.entrySet() ) {\r\n            stream.writeUTF( entry.getKey() );\r\n            stream.writeUTF( entry.getValue() );\r\n        }\r\n\r\n        for ( NodeInstance nodeInstance : processInstance.getNodeInstances() ) {\r\n            stream.writeShort( PersisterEnums.NODE_INSTANCE );\r\n            writeNodeInstance( context,\r\n                               nodeInstance );\r\n        }\r\n        stream.writeShort( PersisterEnums.END );\r\n    }","id":15579,"modified_method":"public static void writeProcessInstance(MarshallerWriteContext context,\r\n                                            RuleFlowProcessInstance processInstance) throws IOException {\r\n        ObjectOutputStream stream = context.stream;\r\n        stream.writeLong( processInstance.getId() );\r\n        stream.writeUTF( processInstance.getProcessId() );\r\n        stream.writeInt( processInstance.getState() );\r\n        stream.writeLong( processInstance.getNodeInstanceCounter() );\r\n\r\n        VariableScopeInstance variableScopeInstance = (VariableScopeInstance) processInstance.getContextInstance( VariableScope.VARIABLE_SCOPE );\r\n        Map<String, Object> variables = variableScopeInstance.getVariables();\r\n        List<String> keys = new ArrayList<String>(variables.keySet());\r\n        Collections.sort(keys, new Comparator<String>() {\r\n\t\t\tpublic int compare(String o1, String o2) {\r\n\t\t\t\treturn o1.compareTo(o2);\r\n\t\t\t}\r\n        });\r\n        stream.writeInt( keys.size() );\r\n        for ( String key : keys ) {\r\n            stream.writeUTF( key );\r\n            stream.writeObject( variables.get(key) );\r\n        }\r\n        \r\n        SwimlaneContextInstance swimlaneContextInstance = (SwimlaneContextInstance) processInstance.getContextInstance( SwimlaneContext.SWIMLANE_SCOPE );\r\n        Map<String, String> swimlaneActors = swimlaneContextInstance.getSwimlaneActors();\r\n        stream.writeInt( swimlaneActors.size() );\r\n        for ( Map.Entry<String, String> entry : swimlaneActors.entrySet() ) {\r\n            stream.writeUTF( entry.getKey() );\r\n            stream.writeUTF( entry.getValue() );\r\n        }\r\n\r\n        List<NodeInstance> nodeInstances = new ArrayList<NodeInstance>(processInstance.getNodeInstances());\r\n        Collections.sort(nodeInstances, new Comparator<NodeInstance>() {\r\n\t\t\tpublic int compare(NodeInstance o1, NodeInstance o2) {\r\n\t\t\t\treturn (int) (o1.getId() - o2.getId());\r\n\t\t\t}\r\n        });\r\n        for ( NodeInstance nodeInstance : nodeInstances ) {\r\n            stream.writeShort( PersisterEnums.NODE_INSTANCE );\r\n            writeNodeInstance( context,\r\n                               nodeInstance );\r\n        }\r\n        stream.writeShort( PersisterEnums.END );\r\n    }","commit_id":"5ca99a544e95144c590aed9037220ccbd6056b05","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public static void writeNodeInstance(MarshallerWriteContext context,\r\n                                         NodeInstance nodeInstance) throws IOException {\r\n        ObjectOutputStream stream = context.stream;\r\n        stream.writeLong( nodeInstance.getId() );\r\n        stream.writeLong( nodeInstance.getNodeId() );\r\n        if ( nodeInstance instanceof RuleSetNodeInstance ) {\r\n            stream.writeShort( PersisterEnums.RULE_SET_NODE_INSTANCE );\r\n        } else if ( nodeInstance instanceof HumanTaskNodeInstance ) {\r\n            stream.writeShort( PersisterEnums.HUMAN_TASK_NODE_INSTANCE );\r\n            stream.writeLong( ((HumanTaskNodeInstance) nodeInstance).getWorkItem().getId() );\r\n        } else if ( nodeInstance instanceof WorkItemNodeInstance ) {\r\n            stream.writeShort( PersisterEnums.WORK_ITEM_NODE_INSTANCE );\r\n            stream.writeLong( ((WorkItemNodeInstance) nodeInstance).getWorkItem().getId() );\r\n        } else if ( nodeInstance instanceof SubProcessNodeInstance ) {\r\n            stream.writeShort( PersisterEnums.SUB_PROCESS_NODE_INSTANCE );\r\n            stream.writeLong( ((SubProcessNodeInstance) nodeInstance).getProcessInstanceId() );\r\n        } else if ( nodeInstance instanceof MilestoneNodeInstance ) {\r\n            stream.writeShort( PersisterEnums.MILESTONE_NODE_INSTANCE );\r\n        } else if ( nodeInstance instanceof TimerNodeInstance ) {\r\n            stream.writeShort( PersisterEnums.TIMER_NODE_INSTANCE );\r\n            stream.writeLong( ((TimerNodeInstance) nodeInstance).getTimerId() );\r\n        } else if ( nodeInstance instanceof JoinInstance ) {\r\n            stream.writeShort( PersisterEnums.JOIN_NODE_INSTANCE );\r\n            Map<Long, Integer> triggers = ((JoinInstance) nodeInstance).getTriggers();\r\n            stream.writeInt( triggers.size() );\r\n            for ( Map.Entry<Long, Integer> entry : triggers.entrySet() ) {\r\n                stream.writeLong( entry.getKey() );\r\n                stream.writeInt( entry.getValue() );\r\n            }\r\n        } else if ( nodeInstance instanceof CompositeContextNodeInstance ) {\r\n            stream.writeShort( PersisterEnums.COMPOSITE_NODE_INSTANCE );\r\n            CompositeContextNodeInstance compositeNodeInstance = \r\n            \t(CompositeContextNodeInstance) nodeInstance;\r\n            VariableScopeInstance variableScopeInstance = (VariableScopeInstance)\r\n            \tcompositeNodeInstance.getContextInstance( VariableScope.VARIABLE_SCOPE );\r\n            Map<String, Object> variables = variableScopeInstance.getVariables();\r\n            stream.writeInt( variables.size() );\r\n            for ( Map.Entry<String, Object> entry : variables.entrySet() ) {\r\n                stream.writeUTF( entry.getKey() );\r\n                stream.writeObject( entry.getValue() );\r\n            }\r\n            for ( NodeInstance subNodeInstance : compositeNodeInstance.getNodeInstances() ) {\r\n                stream.writeShort( PersisterEnums.NODE_INSTANCE );\r\n                writeNodeInstance( context, subNodeInstance );\r\n            }\r\n            stream.writeShort( PersisterEnums.END );\r\n        } else if ( nodeInstance instanceof ForEachNodeInstance ) {\r\n            stream.writeShort( PersisterEnums.FOR_EACH_NODE_INSTANCE );\r\n            ForEachNodeInstance forEachNodeInstance = (ForEachNodeInstance) nodeInstance;\r\n            for ( NodeInstance subNodeInstance : forEachNodeInstance.getNodeInstances() ) {\r\n            \tif (subNodeInstance instanceof CompositeContextNodeInstance) {\r\n            \t\tstream.writeShort( PersisterEnums.NODE_INSTANCE );\r\n            \t\twriteNodeInstance( context, subNodeInstance );\r\n            \t}\r\n            }\r\n            stream.writeShort( PersisterEnums.END );\r\n        } else {\r\n        \t// TODO ForEachNodeInstance\r\n        \t// TODO timer manager\r\n            throw new IllegalArgumentException( \"Unknown node instance type: \" + nodeInstance );\r\n        }\r\n    }","id":15580,"modified_method":"public static void writeNodeInstance(MarshallerWriteContext context,\r\n                                         NodeInstance nodeInstance) throws IOException {\r\n        ObjectOutputStream stream = context.stream;\r\n        stream.writeLong( nodeInstance.getId() );\r\n        stream.writeLong( nodeInstance.getNodeId() );\r\n        if ( nodeInstance instanceof RuleSetNodeInstance ) {\r\n            stream.writeShort( PersisterEnums.RULE_SET_NODE_INSTANCE );\r\n        } else if ( nodeInstance instanceof HumanTaskNodeInstance ) {\r\n            stream.writeShort( PersisterEnums.HUMAN_TASK_NODE_INSTANCE );\r\n            stream.writeLong( ((HumanTaskNodeInstance) nodeInstance).getWorkItem().getId() );\r\n        } else if ( nodeInstance instanceof WorkItemNodeInstance ) {\r\n            stream.writeShort( PersisterEnums.WORK_ITEM_NODE_INSTANCE );\r\n            stream.writeLong( ((WorkItemNodeInstance) nodeInstance).getWorkItem().getId() );\r\n        } else if ( nodeInstance instanceof SubProcessNodeInstance ) {\r\n            stream.writeShort( PersisterEnums.SUB_PROCESS_NODE_INSTANCE );\r\n            stream.writeLong( ((SubProcessNodeInstance) nodeInstance).getProcessInstanceId() );\r\n        } else if ( nodeInstance instanceof MilestoneNodeInstance ) {\r\n            stream.writeShort( PersisterEnums.MILESTONE_NODE_INSTANCE );\r\n        } else if ( nodeInstance instanceof TimerNodeInstance ) {\r\n            stream.writeShort( PersisterEnums.TIMER_NODE_INSTANCE );\r\n            stream.writeLong( ((TimerNodeInstance) nodeInstance).getTimerId() );\r\n        } else if ( nodeInstance instanceof JoinInstance ) {\r\n            stream.writeShort( PersisterEnums.JOIN_NODE_INSTANCE );\r\n            Map<Long, Integer> triggers = ((JoinInstance) nodeInstance).getTriggers();\r\n            stream.writeInt( triggers.size() );\r\n            List<Long> keys = new ArrayList<Long>(triggers.keySet());\r\n            Collections.sort(keys, new Comparator<Long>(){\r\n\t\t\t\tpublic int compare(Long o1, Long o2) {\r\n\t\t\t\t\treturn o1.compareTo(o2);\r\n\t\t\t\t}\r\n            });\r\n            for ( Long key : keys ) {\r\n                stream.writeLong( key );\r\n                stream.writeInt( triggers.get(key) );\r\n            }\r\n        } else if ( nodeInstance instanceof CompositeContextNodeInstance ) {\r\n            stream.writeShort( PersisterEnums.COMPOSITE_NODE_INSTANCE );\r\n            CompositeContextNodeInstance compositeNodeInstance = \r\n            \t(CompositeContextNodeInstance) nodeInstance;\r\n            VariableScopeInstance variableScopeInstance = (VariableScopeInstance)\r\n            \tcompositeNodeInstance.getContextInstance( VariableScope.VARIABLE_SCOPE );\r\n            Map<String, Object> variables = variableScopeInstance.getVariables();\r\n            List<String> keys = new ArrayList<String>(variables.keySet());\r\n            Collections.sort(keys, new Comparator<String>() {\r\n    \t\t\tpublic int compare(String o1, String o2) {\r\n    \t\t\t\treturn o1.compareTo(o2);\r\n    \t\t\t}\r\n            });\r\n            stream.writeInt( keys.size() );\r\n            for ( String key : keys ) {\r\n                stream.writeUTF( key );\r\n                stream.writeObject( variables.get(key) );\r\n            }\r\n            List<NodeInstance> nodeInstances = new ArrayList<NodeInstance>(compositeNodeInstance.getNodeInstances());\r\n            Collections.sort(nodeInstances, new Comparator<NodeInstance>() {\r\n    \t\t\tpublic int compare(NodeInstance o1, NodeInstance o2) {\r\n    \t\t\t\treturn (int) (o1.getId() - o2.getId());\r\n    \t\t\t}\r\n            });\r\n            for ( NodeInstance subNodeInstance : nodeInstances ) {\r\n                stream.writeShort( PersisterEnums.NODE_INSTANCE );\r\n                writeNodeInstance( context, subNodeInstance );\r\n            }\r\n            stream.writeShort( PersisterEnums.END );\r\n        } else if ( nodeInstance instanceof ForEachNodeInstance ) {\r\n            stream.writeShort( PersisterEnums.FOR_EACH_NODE_INSTANCE );\r\n            ForEachNodeInstance forEachNodeInstance = (ForEachNodeInstance) nodeInstance;\r\n            List<NodeInstance> nodeInstances = new ArrayList<NodeInstance>(forEachNodeInstance.getNodeInstances());\r\n            Collections.sort(nodeInstances, new Comparator<NodeInstance>() {\r\n    \t\t\tpublic int compare(NodeInstance o1, NodeInstance o2) {\r\n    \t\t\t\treturn (int) (o1.getId() - o2.getId());\r\n    \t\t\t}\r\n            });\r\n            for ( NodeInstance subNodeInstance : nodeInstances ) {\r\n            \tif (subNodeInstance instanceof CompositeContextNodeInstance) {\r\n            \t\tstream.writeShort( PersisterEnums.NODE_INSTANCE );\r\n            \t\twriteNodeInstance( context, subNodeInstance );\r\n            \t}\r\n            }\r\n            stream.writeShort( PersisterEnums.END );\r\n        } else {\r\n        \t// TODO ForEachNodeInstance\r\n        \t// TODO timer manager\r\n            throw new IllegalArgumentException( \"Unknown node instance type: \" + nodeInstance );\r\n        }\r\n    }","commit_id":"5ca99a544e95144c590aed9037220ccbd6056b05","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public static void writeProcessInstances(MarshallerWriteContext context) throws IOException {\r\n        ObjectOutputStream stream = context.stream;\r\n\r\n        Collection<ProcessInstance> processInstances = context.wm.getProcessInstances();\r\n        for ( ProcessInstance processInstance : processInstances ) {\r\n            stream.writeShort( PersisterEnums.PROCESS_INSTANCE );\r\n            writeProcessInstance( context,\r\n                                  (RuleFlowProcessInstance) processInstance );\r\n        }\r\n        stream.writeShort( PersisterEnums.END );\r\n    }","id":15581,"modified_method":"public static void writeProcessInstances(MarshallerWriteContext context) throws IOException {\r\n        ObjectOutputStream stream = context.stream;\r\n        List<ProcessInstance> processInstances = new ArrayList<ProcessInstance>(context.wm.getProcessInstances());\r\n        Collections.sort(processInstances, new Comparator<ProcessInstance>() {\r\n\t\t\tpublic int compare(ProcessInstance o1, ProcessInstance o2) {\r\n\t\t\t\treturn (int) (o1.getId() - o2.getId());\r\n\t\t\t}\r\n        });\r\n        for ( ProcessInstance processInstance : processInstances ) {\r\n            stream.writeShort( PersisterEnums.PROCESS_INSTANCE );\r\n            writeProcessInstance( context,\r\n                                  (RuleFlowProcessInstance) processInstance );\r\n        }\r\n        stream.writeShort( PersisterEnums.END );\r\n    }","commit_id":"5ca99a544e95144c590aed9037220ccbd6056b05","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public static void writeWorkItem(MarshallerWriteContext context,\r\n                                     WorkItem workItem) throws IOException {\r\n        ObjectOutputStream stream = context.stream;\r\n        stream.writeLong( workItem.getId() );\r\n        stream.writeLong( workItem.getProcessInstanceId() );\r\n        stream.writeUTF( workItem.getName() );\r\n        stream.writeInt( workItem.getState() );\r\n    }","id":15582,"modified_method":"public static void writeWorkItem(MarshallerWriteContext context,\r\n                                     WorkItem workItem) throws IOException {\r\n        ObjectOutputStream stream = context.stream;\r\n        stream.writeLong( workItem.getId() );\r\n        stream.writeLong( workItem.getProcessInstanceId() );\r\n        stream.writeUTF( workItem.getName() );\r\n        stream.writeInt( workItem.getState() );\r\n        Map<String, Object> parameters = workItem.getParameters();\r\n        stream.writeInt(parameters.size());\r\n        for (Map.Entry<String, Object> entry: parameters.entrySet()) {\r\n        \tstream.writeUTF(entry.getKey());\r\n        \tstream.writeObject(entry.getValue());\r\n        }\r\n    }","commit_id":"5ca99a544e95144c590aed9037220ccbd6056b05","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public static void writeWorkItems(MarshallerWriteContext context) throws IOException {\r\n        ObjectOutputStream stream = context.stream;\r\n\r\n        Set<WorkItem> workItems = context.wm.getWorkItemManager().getWorkItems();\r\n        for ( WorkItem workItem : workItems ) {\r\n            stream.writeShort( PersisterEnums.WORK_ITEM );\r\n            writeWorkItem( context,\r\n                           workItem );\r\n        }\r\n        stream.writeShort( PersisterEnums.END );\r\n    }","id":15583,"modified_method":"public static void writeWorkItems(MarshallerWriteContext context) throws IOException {\r\n        ObjectOutputStream stream = context.stream;\r\n\r\n        List<WorkItem> workItems = new ArrayList<WorkItem>(context.wm.getWorkItemManager().getWorkItems());\r\n        Collections.sort(workItems, new Comparator<WorkItem>() {\r\n\t\t\tpublic int compare(WorkItem o1, WorkItem o2) {\r\n\t\t\t\treturn (int) (o2.getId() - o1.getId());\r\n\t\t\t}\r\n        });\r\n        for ( WorkItem workItem : workItems ) {\r\n            stream.writeShort( PersisterEnums.WORK_ITEM );\r\n            writeWorkItem( context,\r\n                           workItem );\r\n        }\r\n        stream.writeShort( PersisterEnums.END );\r\n    }","commit_id":"5ca99a544e95144c590aed9037220ccbd6056b05","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public static StatefulSession getSerialisedStatefulSession(StatefulSession session,\r\n                                                               RuleBase ruleBase,\r\n                                                               boolean dispose) throws Exception {\r\n        Marshaller marshaller = new DefaultMarshaller();\r\n\r\n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n        ruleBase.writeStatefulSession( session,\r\n                                       baos,\r\n                                       marshaller );\r\n\r\n        byte[] b1 = baos.toByteArray();\r\n        ByteArrayInputStream bais = new ByteArrayInputStream( b1 );\r\n        StatefulSession session2 = ruleBase.readStatefulSession( bais,\r\n                                                                true,\r\n                                                                marshaller );\r\n\r\n        // write methods allways needs a new marshaller for Identity strategies\r\n        marshaller = new DefaultMarshaller();        \r\n        baos = new ByteArrayOutputStream();\r\n        ruleBase.writeStatefulSession( session2,\r\n                                       baos,\r\n                                       marshaller );\r\n\r\n        byte[] b2 = baos.toByteArray();\r\n        // bytes should be the same.\r\n        if ( !areByteArraysEqual( b1,\r\n                                  b2 ) ) {\r\n            assert false : \"byte streams for serialisation test are not equal\";\r\n        }\r\n\r\n        session2.setGlobalResolver( session.getGlobalResolver() );\r\n\r\n        if ( dispose ) {\r\n            session.dispose();\r\n        }\r\n\r\n        return session2;\r\n    }","id":15584,"modified_method":"public static StatefulSession getSerialisedStatefulSession(StatefulSession session,\r\n                                                               RuleBase ruleBase,\r\n                                                               boolean dispose) throws Exception {\r\n        Marshaller marshaller = new DefaultMarshaller();\r\n\r\n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n        ruleBase.writeStatefulSession( session,\r\n                                       baos,\r\n                                       marshaller );\r\n\r\n        byte[] b1 = baos.toByteArray();\r\n        ByteArrayInputStream bais = new ByteArrayInputStream( b1 );\r\n        StatefulSession session2 = ruleBase.readStatefulSession( bais,\r\n                                                                true,\r\n                                                                marshaller );\r\n\r\n        // write methods allways needs a new marshaller for Identity strategies\r\n        marshaller = new DefaultMarshaller();        \r\n        baos = new ByteArrayOutputStream();\r\n        ruleBase.writeStatefulSession( session2,\r\n                                       baos,\r\n                                       marshaller );\r\n\r\n        byte[] b2 = baos.toByteArray();\r\n        // bytes should be the same.\r\n        if ( !areByteArraysEqual( b1,\r\n                                  b2 ) ) {\r\n            throw new IllegalArgumentException(\"byte streams for serialisation test are not equal\");\r\n        }\r\n\r\n        session2.setGlobalResolver( session.getGlobalResolver() );\r\n\r\n        if ( dispose ) {\r\n            session.dispose();\r\n        }\r\n\r\n        return session2;\r\n    }","commit_id":"5ca99a544e95144c590aed9037220ccbd6056b05","url":"https://github.com/droolsjbpm/drools"},{"original_method":"private boolean closeFile()\r\n\t{\r\n\t\tboolean retval=false;\r\n\t\t\r\n\t\ttry\r\n\t\t{\r\n\t\t\tdata.writer.close();\r\n\t\t\tif (meta.isZipped())\r\n\t\t\t{\r\n\t\t\t\t//System.out.println(\"close zip entry \");\r\n\t\t\t\tdata.zip.closeEntry();\r\n\t\t\t\t//System.out.println(\"finish file...\");\r\n\t\t\t\tdata.zip.finish();\r\n\t\t\t\tdata.zip.close();\r\n\t\t\t}\r\n\t\t\t//System.out.println(\"Closed file...\");\r\n\r\n\t\t\tretval=true;\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t}\r\n\r\n\t\treturn retval;\r\n\t}","id":15585,"modified_method":"private boolean closeFile()\r\n\t{\r\n\t\tboolean retval=false;\r\n\t\t\r\n\t\ttry\r\n\t\t{\r\n\t\t\tdata.writer.close();\r\n\t\t\tif (meta.getFileCompression() == \"Zip\")\r\n\t\t\t{\r\n\t\t\t\t//System.out.println(\"close zip entry \");\r\n\t\t\t\tdata.zip.closeEntry();\r\n\t\t\t\t//System.out.println(\"finish file...\");\r\n\t\t\t\tdata.zip.finish();\r\n\t\t\t\tdata.zip.close();\r\n\t\t\t}\r\n\t\t\tif (meta.getFileCompression() == \"GZip\")\r\n\t\t\t{\r\n\t\t\t\tdata.gzip.finish();\r\n\t\t\t}\r\n\t\t\t//System.out.println(\"Closed file...\");\r\n\r\n\t\t\tretval=true;\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t}\r\n\r\n\t\treturn retval;\r\n\t}","commit_id":"a24b300aee0018c5f034dfa0b8a66335d9241683","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public boolean openNewFile()\r\n\t{\r\n\t\tboolean retval=false;\r\n\t\tdata.writer=null;\r\n\t\t\r\n\t\ttry\r\n\t\t{\r\n            String filename = buildFilename(true);\r\n\t\t\tFile file = new File(filename);\r\n\r\n\t\t\t// Add this to the result file names...\r\n\t\t\tResultFile resultFile = new ResultFile(ResultFile.FILE_TYPE_GENERAL, file, getTransMeta().getName(), getStepname());\r\n\t\t\tresultFile.setComment(\"This file was created with a text file output step\");\r\n            addResultFile(resultFile);\r\n\r\n            OutputStream outputStream;\r\n\t\t\tif (meta.isZipped())\r\n\t\t\t{\r\n\t\t\t\tFileOutputStream fos = new FileOutputStream(file, meta.isFileAppended());\r\n\t\t\t\tdata.zip = new ZipOutputStream(fos);\r\n\t\t\t\tFile entry = new File(buildFilename(false));\r\n\t\t\t\tZipEntry zipentry = new ZipEntry(entry.getName());\r\n\t\t\t\tzipentry.setComment(\"Compressed by Kettle\");\r\n\t\t\t\tdata.zip.putNextEntry(zipentry);\r\n\t\t\t\toutputStream=data.zip;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tFileOutputStream fos=new FileOutputStream(file, meta.isFileAppended());\r\n\t\t\t\toutputStream=fos;\r\n\t\t\t}\r\n            if (meta.getEncoding()!=null && meta.getEncoding().length()>0)\r\n            {\r\n                log.logBasic(toString(), \"Opening output stream in encoding: \"+meta.getEncoding());\r\n                data.writer = new OutputStreamWriter(outputStream, meta.getEncoding());\r\n            }\r\n            else\r\n            {\r\n                log.logBasic(toString(), \"Opening output stream in default encoding\");\r\n                data.writer = new OutputStreamWriter(outputStream);\r\n            }\r\n            \r\n            logDetailed(\"Opened new file with name [\"+filename+\"]\");\r\n\t\t\t\t\t\t\r\n\t\t\tretval=true;\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tlogError(\"Error opening new file : \"+e.toString());\r\n\t\t}\r\n\t\t// System.out.println(\"end of newFile(), splitnr=\"+splitnr);\r\n\r\n\t\tdata.splitnr++;\r\n\r\n\t\treturn retval;\r\n\t}","id":15586,"modified_method":"public boolean openNewFile()\r\n\t{\r\n\t\tboolean retval=false;\r\n\t\tdata.writer=null;\r\n\t\t\r\n\t\ttry\r\n\t\t{\r\n            String filename = buildFilename(true);\r\n\t\t\tFile file = new File(filename);\r\n\r\n\t\t\t// Add this to the result file names...\r\n\t\t\tResultFile resultFile = new ResultFile(ResultFile.FILE_TYPE_GENERAL, file, getTransMeta().getName(), getStepname());\r\n\t\t\tresultFile.setComment(\"This file was created with a text file output step\");\r\n            addResultFile(resultFile);\r\n\r\n            OutputStream outputStream;\r\n            log.logBasic(toString(), \"Compression is |\" + meta.getFileCompression() + \"|\");\r\n\t\t\tif (meta.getFileCompression().equals(\"Zip\"))\r\n\t\t\t{\r\n\t            log.logBasic(toString(), \"Opening output stream in zipped mode\");\r\n\t\t\t\tFileOutputStream fos = new FileOutputStream(file, meta.isFileAppended());\r\n\t\t\t\tdata.zip = new ZipOutputStream(fos);\r\n\t\t\t\tFile entry = new File(buildFilename(false));\r\n\t\t\t\tZipEntry zipentry = new ZipEntry(entry.getName());\r\n\t\t\t\tzipentry.setComment(\"Compressed by Kettle\");\r\n\t\t\t\tdata.zip.putNextEntry(zipentry);\r\n\t\t\t\toutputStream=data.zip;\r\n\t\t\t}\r\n\t\t\telse if (meta.getFileCompression().equals(\"GZip\"))\r\n\t\t\t{\r\n\t            log.logBasic(toString(), \"Opening output stream in gzipped mode\");\r\n\t\t\t\tFileOutputStream fos = new FileOutputStream(file, meta.isFileAppended());\r\n\t\t\t\tdata.gzip = new GZIPOutputStream(fos);\r\n\t\t\t\toutputStream=data.gzip;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t            log.logBasic(toString(), \"Compression is \" + meta.getFileCompression());\r\n\t            log.logBasic(toString(), \"Opening output stream in nocompress mode\");\r\n\t\t\t\tFileOutputStream fos=new FileOutputStream(file, meta.isFileAppended());\r\n\t\t\t\toutputStream=fos;\r\n\t\t\t}\r\n            if (meta.getEncoding()!=null && meta.getEncoding().length()>0)\r\n            {\r\n                log.logBasic(toString(), \"Opening output stream in encoding: \"+meta.getEncoding());\r\n                data.writer = new OutputStreamWriter(outputStream, meta.getEncoding());\r\n            }\r\n            else\r\n            {\r\n                log.logBasic(toString(), \"Opening output stream in default encoding\");\r\n                data.writer = new OutputStreamWriter(outputStream);\r\n            }\r\n            \r\n            logDetailed(\"Opened new file with name [\"+filename+\"]\");\r\n\t\t\t\t\t\t\r\n\t\t\tretval=true;\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tlogError(\"Error opening new file : \"+e.toString());\r\n\t\t}\r\n\t\t// System.out.println(\"end of newFile(), splitnr=\"+splitnr);\r\n\r\n\t\tdata.splitnr++;\r\n\r\n\t\treturn retval;\r\n\t}","commit_id":"a24b300aee0018c5f034dfa0b8a66335d9241683","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\r\n\t * Copy information from the meta-data input to the dialog fields.\r\n\t */ \r\n\tpublic void getData()\r\n\t{\r\n\t\tif (input.getFileName()  != null) wFilename.setText(input.getFileName());\r\n\t\tif (input.getExtension() != null) wExtension.setText(input.getExtension());\r\n\t\tif (input.getSeparator() !=null) wSeparator.setText(input.getSeparator());\r\n\t\tif (input.getEnclosure() !=null) wEnclosure.setText(input.getEnclosure());\r\n\t\tif (input.getFileFormat()!=null) wFormat.setText(input.getFileFormat());\r\n        if (input.getEncoding()  !=null) wEncoding.setText(input.getEncoding());\r\n        if (input.getEndedLine() !=null) wEndedLine.setText(input.getEndedLine());\r\n        \r\n\t\twSplitEvery.setText(\"\"+input.getSplitEvery());\r\n\r\n        wEnclForced.setSelection(input.isEnclosureForced());\r\n\t\twHeader.setSelection(input.isHeaderEnabled());\r\n\t\twFooter.setSelection(input.isFooterEnabled());\r\n\t\twZipped.setSelection(input.isZipped());\r\n\t\twAddDate.setSelection(input.isDateInFilename());\r\n\t\twAddTime.setSelection(input.isTimeInFilename());\r\n\t\twAppend.setSelection(input.isFileAppended());\r\n\t\twAddStepnr.setSelection(input.isStepNrInFilename());\r\n\t\twPad.setSelection(input.isPadded());\r\n\t\t\r\n\t\tlog.logDebug(toString(), \"getting fields info...\");\r\n\t\t\r\n\t\tfor (int i=0;i<input.getOutputFields().length;i++)\r\n\t\t{\r\n\t\t    TextFileField field = input.getOutputFields()[i];\r\n\t\t    \r\n\t\t\tTableItem item = wFields.table.getItem(i);\r\n\t\t\tif (field.getName()!=null) item.setText(1, field.getName());\r\n\t\t\titem.setText(2, field.getTypeDesc());\r\n\t\t\tif (field.getFormat()!=null) item.setText(3, field.getFormat());\r\n\t\t\tif (field.getLength()!=-1) item.setText(4, \"\"+field.getLength());\r\n\t\t\tif (field.getPrecision()!=-1) item.setText(5, \"\"+field.getPrecision());\r\n\t\t\tif (field.getCurrencySymbol()!=null) item.setText(6, field.getCurrencySymbol());\r\n\t\t\tif (field.getDecimalSymbol()!=null) item.setText(7, field.getDecimalSymbol());\r\n\t\t\tif (field.getGroupingSymbol()!=null) item.setText(8, field.getGroupingSymbol());\r\n\t\t\tif (field.getNullString()!=null) item.setText(9, field.getNullString());\r\n\t\t}\r\n\t\t\r\n\t\twFields.optWidth(true);\r\n\t\twStepname.selectAll();\r\n\t}","id":15587,"modified_method":"/**\r\n\t * Copy information from the meta-data input to the dialog fields.\r\n\t */ \r\n\tpublic void getData()\r\n\t{\r\n\t\tif (input.getFileName()  != null) wFilename.setText(input.getFileName());\r\n\t\tif (input.getExtension() != null) wExtension.setText(input.getExtension());\r\n\t\tif (input.getSeparator() !=null) wSeparator.setText(input.getSeparator());\r\n\t\tif (input.getEnclosure() !=null) wEnclosure.setText(input.getEnclosure());\r\n\t\tif (input.getFileFormat()!=null) wFormat.setText(input.getFileFormat());\r\n\t\tif (input.getFileCompression()!=null) wCompression.setText(input.getFileCompression());\r\n        if (input.getEncoding()  !=null) wEncoding.setText(input.getEncoding());\r\n        if (input.getEndedLine() !=null) wEndedLine.setText(input.getEndedLine());\r\n        \r\n\t\twSplitEvery.setText(\"\"+input.getSplitEvery());\r\n\r\n        wEnclForced.setSelection(input.isEnclosureForced());\r\n\t\twHeader.setSelection(input.isHeaderEnabled());\r\n\t\twFooter.setSelection(input.isFooterEnabled());\r\n\t\twAddDate.setSelection(input.isDateInFilename());\r\n\t\twAddTime.setSelection(input.isTimeInFilename());\r\n\t\twAppend.setSelection(input.isFileAppended());\r\n\t\twAddStepnr.setSelection(input.isStepNrInFilename());\r\n\t\twPad.setSelection(input.isPadded());\r\n\t\t\r\n\t\tlog.logDebug(toString(), \"getting fields info...\");\r\n\t\t\r\n\t\tfor (int i=0;i<input.getOutputFields().length;i++)\r\n\t\t{\r\n\t\t    TextFileField field = input.getOutputFields()[i];\r\n\t\t    \r\n\t\t\tTableItem item = wFields.table.getItem(i);\r\n\t\t\tif (field.getName()!=null) item.setText(1, field.getName());\r\n\t\t\titem.setText(2, field.getTypeDesc());\r\n\t\t\tif (field.getFormat()!=null) item.setText(3, field.getFormat());\r\n\t\t\tif (field.getLength()!=-1) item.setText(4, \"\"+field.getLength());\r\n\t\t\tif (field.getPrecision()!=-1) item.setText(5, \"\"+field.getPrecision());\r\n\t\t\tif (field.getCurrencySymbol()!=null) item.setText(6, field.getCurrencySymbol());\r\n\t\t\tif (field.getDecimalSymbol()!=null) item.setText(7, field.getDecimalSymbol());\r\n\t\t\tif (field.getGroupingSymbol()!=null) item.setText(8, field.getGroupingSymbol());\r\n\t\t\tif (field.getNullString()!=null) item.setText(9, field.getNullString());\r\n\t\t}\r\n\t\t\r\n\t\twFields.optWidth(true);\r\n\t\twStepname.selectAll();\r\n\t}","commit_id":"a24b300aee0018c5f034dfa0b8a66335d9241683","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public String open()\r\n\t{\r\n        Shell parent = getParent();\r\n\t\tDisplay display = parent.getDisplay();\r\n\r\n        shell = new Shell(parent, SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX | SWT.MIN);\r\n \t\tprops.setLook(shell);\r\n\r\n\t\tModifyListener lsMod = new ModifyListener() \r\n\t\t{\r\n\t\t\tpublic void modifyText(ModifyEvent e) \r\n\t\t\t{\r\n\t\t\t\tinput.setChanged();\r\n\t\t\t}\r\n\t\t};\r\n\t\tchanged = input.hasChanged();\r\n\t\t\r\n\t\tFormLayout formLayout = new FormLayout ();\r\n\t\tformLayout.marginWidth  = Const.FORM_MARGIN;\r\n\t\tformLayout.marginHeight = Const.FORM_MARGIN;\r\n\r\n\t\tshell.setLayout(formLayout);\r\n\t\tshell.setText(Messages.getString(\"TextFileOutputDialog.DialogTitle\"));\r\n\t\t\r\n\t\tint middle = props.getMiddlePct();\r\n\t\tint margin = Const.MARGIN;\r\n\r\n\t\t// Stepname line\r\n\t\twlStepname=new Label(shell, SWT.RIGHT);\r\n\t\twlStepname.setText(Messages.getString(\"System.Label.StepName\"));\r\n \t\tprops.setLook(wlStepname);\r\n\t\tfdlStepname=new FormData();\r\n\t\tfdlStepname.left  = new FormAttachment(0, 0);\r\n\t\tfdlStepname.top   = new FormAttachment(0, margin);\r\n\t\tfdlStepname.right = new FormAttachment(middle, -margin);\r\n\t\twlStepname.setLayoutData(fdlStepname);\r\n\t\twStepname=new Text(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n\t\twStepname.setText(stepname);\r\n \t\tprops.setLook(wStepname);\r\n\t\twStepname.addModifyListener(lsMod);\r\n\t\tfdStepname=new FormData();\r\n\t\tfdStepname.left = new FormAttachment(middle, 0);\r\n\t\tfdStepname.top  = new FormAttachment(0, margin);\r\n\t\tfdStepname.right= new FormAttachment(100, 0);\r\n\t\twStepname.setLayoutData(fdStepname);\r\n\r\n\t\twTabFolder = new CTabFolder(shell, SWT.BORDER);\r\n \t\tprops.setLook(wTabFolder, Props.WIDGET_STYLE_TAB);\r\n\t\t\r\n\t\t//////////////////////////\r\n\t\t// START OF FILE TAB///\r\n\t\t///\r\n\t\twFileTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twFileTab.setText(Messages.getString(\"TextFileOutputDialog.FileTab.TabTitle\"));\r\n\t\t\r\n\t\tComposite wFileComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wFileComp);\r\n\r\n\t\tFormLayout fileLayout = new FormLayout();\r\n\t\tfileLayout.marginWidth  = 3;\r\n\t\tfileLayout.marginHeight = 3;\r\n\t\twFileComp.setLayout(fileLayout);\r\n\r\n\t\t// Filename line\r\n\t\twlFilename=new Label(wFileComp, SWT.RIGHT);\r\n\t\twlFilename.setText(Messages.getString(\"TextFileOutputDialog.Filename.Label\"));\r\n \t\tprops.setLook(wlFilename);\r\n\t\tfdlFilename=new FormData();\r\n\t\tfdlFilename.left = new FormAttachment(0, 0);\r\n\t\tfdlFilename.top  = new FormAttachment(0, margin);\r\n\t\tfdlFilename.right= new FormAttachment(middle, -margin);\r\n\t\twlFilename.setLayoutData(fdlFilename);\r\n\r\n\t\twbFilename=new Button(wFileComp, SWT.PUSH| SWT.CENTER);\r\n \t\tprops.setLook(wbFilename);\r\n\t\twbFilename.setText(Messages.getString(\"System.Button.Browse\"));\r\n\t\tfdbFilename=new FormData();\r\n\t\tfdbFilename.right= new FormAttachment(100, 0);\r\n\t\tfdbFilename.top  = new FormAttachment(0, 0);\r\n\t\twbFilename.setLayoutData(fdbFilename);\r\n\r\n\t\twbcFilename=new Button(wFileComp, SWT.PUSH| SWT.CENTER);\r\n \t\tprops.setLook(wbcFilename);\r\n\t\twbcFilename.setText(Messages.getString(\"System.Button.Variable\"));\r\n\t\tfdbcFilename=new FormData();\r\n\t\tfdbcFilename.right= new FormAttachment(wbFilename, -margin);\r\n\t\tfdbcFilename.top  = new FormAttachment(0, 0);\r\n\t\twbcFilename.setLayoutData(fdbcFilename);\r\n\r\n\t\twFilename=new Text(wFileComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wFilename);\r\n\t\twFilename.addModifyListener(lsMod);\r\n\t\tfdFilename=new FormData();\r\n\t\tfdFilename.left = new FormAttachment(middle, 0);\r\n\t\tfdFilename.top  = new FormAttachment(0, margin);\r\n\t\tfdFilename.right= new FormAttachment(wbcFilename, -margin);\r\n\t\twFilename.setLayoutData(fdFilename);\r\n\t\t\r\n\t\t// Whenever something changes, set the tooltip to the expanded version:\r\n\t\twFilename.addModifyListener(new ModifyListener()\r\n\t\t\t{\r\n\t\t\t\tpublic void modifyText(ModifyEvent e)\r\n\t\t\t\t{\r\n\t\t\t\t\twFilename.setToolTipText(StringUtil.environmentSubstitute( wFilename.getText() ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\t// Extension line\r\n\t\twlExtension=new Label(wFileComp, SWT.RIGHT);\r\n\t\twlExtension.setText(Messages.getString(\"System.Label.Extension\"));\r\n \t\tprops.setLook(wlExtension);\r\n\t\tfdlExtension=new FormData();\r\n\t\tfdlExtension.left = new FormAttachment(0, 0);\r\n\t\tfdlExtension.top  = new FormAttachment(wFilename, margin);\r\n\t\tfdlExtension.right= new FormAttachment(middle, -margin);\r\n\t\twlExtension.setLayoutData(fdlExtension);\r\n\t\twExtension=new Text(wFileComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n\t\twExtension.setText(\"\");\r\n \t\tprops.setLook(wExtension);\r\n\t\twExtension.addModifyListener(lsMod);\r\n\t\tfdExtension=new FormData();\r\n\t\tfdExtension.left = new FormAttachment(middle, 0);\r\n\t\tfdExtension.top  = new FormAttachment(wFilename, margin);\r\n\t\tfdExtension.right= new FormAttachment(wbcFilename, -margin);\r\n\t\twExtension.setLayoutData(fdExtension);\r\n\r\n\t\t// Create multi-part file?\r\n\t\twlAddStepnr=new Label(wFileComp, SWT.RIGHT);\r\n\t\twlAddStepnr.setText(Messages.getString(\"TextFileOutputDialog.AddStepnr.Label\"));\r\n \t\tprops.setLook(wlAddStepnr);\r\n\t\tfdlAddStepnr=new FormData();\r\n\t\tfdlAddStepnr.left = new FormAttachment(0, 0);\r\n\t\tfdlAddStepnr.top  = new FormAttachment(wExtension, margin);\r\n\t\tfdlAddStepnr.right= new FormAttachment(middle, -margin);\r\n\t\twlAddStepnr.setLayoutData(fdlAddStepnr);\r\n\t\twAddStepnr=new Button(wFileComp, SWT.CHECK);\r\n \t\tprops.setLook(wAddStepnr);\r\n\t\tfdAddStepnr=new FormData();\r\n\t\tfdAddStepnr.left = new FormAttachment(middle, 0);\r\n\t\tfdAddStepnr.top  = new FormAttachment(wExtension, margin);\r\n\t\tfdAddStepnr.right= new FormAttachment(100, 0);\r\n\t\twAddStepnr.setLayoutData(fdAddStepnr);\r\n\t\twAddStepnr.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tinput.setChanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\t// Create multi-part file?\r\n\t\twlAddDate=new Label(wFileComp, SWT.RIGHT);\r\n\t\twlAddDate.setText(Messages.getString(\"TextFileOutputDialog.AddDate.Label\"));\r\n \t\tprops.setLook(wlAddDate);\r\n\t\tfdlAddDate=new FormData();\r\n\t\tfdlAddDate.left = new FormAttachment(0, 0);\r\n\t\tfdlAddDate.top  = new FormAttachment(wAddStepnr, margin);\r\n\t\tfdlAddDate.right= new FormAttachment(middle, -margin);\r\n\t\twlAddDate.setLayoutData(fdlAddDate);\r\n\t\twAddDate=new Button(wFileComp, SWT.CHECK);\r\n \t\tprops.setLook(wAddDate);\r\n\t\tfdAddDate=new FormData();\r\n\t\tfdAddDate.left = new FormAttachment(middle, 0);\r\n\t\tfdAddDate.top  = new FormAttachment(wAddStepnr, margin);\r\n\t\tfdAddDate.right= new FormAttachment(100, 0);\r\n\t\twAddDate.setLayoutData(fdAddDate);\r\n\t\twAddDate.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tinput.setChanged();\r\n\t\t\t\t\t// System.out.println(\"wAddDate.getSelection()=\"+wAddDate.getSelection());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\t// Create multi-part file?\r\n\t\twlAddTime=new Label(wFileComp, SWT.RIGHT);\r\n\t\twlAddTime.setText(Messages.getString(\"TextFileOutputDialog.AddTime.Label\"));\r\n \t\tprops.setLook(wlAddTime);\r\n\t\tfdlAddTime=new FormData();\r\n\t\tfdlAddTime.left = new FormAttachment(0, 0);\r\n\t\tfdlAddTime.top  = new FormAttachment(wAddDate, margin);\r\n\t\tfdlAddTime.right= new FormAttachment(middle, -margin);\r\n\t\twlAddTime.setLayoutData(fdlAddTime);\r\n\t\twAddTime=new Button(wFileComp, SWT.CHECK);\r\n \t\tprops.setLook(wAddTime);\r\n\t\tfdAddTime=new FormData();\r\n\t\tfdAddTime.left = new FormAttachment(middle, 0);\r\n\t\tfdAddTime.top  = new FormAttachment(wAddDate, margin);\r\n\t\tfdAddTime.right= new FormAttachment(100, 0);\r\n\t\twAddTime.setLayoutData(fdAddTime);\r\n\t\twAddTime.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tinput.setChanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\twbShowFiles=new Button(wFileComp, SWT.PUSH| SWT.CENTER);\r\n \t\tprops.setLook(wbShowFiles);\r\n\t\twbShowFiles.setText(Messages.getString(\"TextFileOutputDialog.ShowFiles.Button\"));\r\n\t\tfdbShowFiles=new FormData();\r\n\t\tfdbShowFiles.left = new FormAttachment(middle, 0);\r\n\t\tfdbShowFiles.top  = new FormAttachment(wAddTime, margin*2);\r\n\t\twbShowFiles.setLayoutData(fdbShowFiles);\r\n\t\twbShowFiles.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tTextFileOutputMeta tfoi = new TextFileOutputMeta();\r\n\t\t\t\t\tgetInfo(tfoi);\r\n\t\t\t\t\tString files[] = tfoi.getFiles();\r\n\t\t\t\t\tif (files!=null && files.length>0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tEnterSelectionDialog esd = new EnterSelectionDialog(shell, props, files, Messages.getString(\"TextFileOutputDialog.SelectOutputFiles.DialogTitle\"), Messages.getString(\"TextFileOutputDialog.SelectOutputFiles.DialogMessage\"));\r\n\t\t\t\t\t\tesd.setViewOnly();\r\n\t\t\t\t\t\tesd.open();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\r\n\t\t\t\t\t\tmb.setMessage(Messages.getString(\"TextFileOutputDialog.NoFilesFound.DialogMessage\"));\r\n\t\t\t\t\t\tmb.setText(Messages.getString(\"System.DialogTitle.Error\"));\r\n\t\t\t\t\t\tmb.open(); \r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\r\n\t\t\r\n\t\tfdFileComp=new FormData();\r\n\t\tfdFileComp.left  = new FormAttachment(0, 0);\r\n\t\tfdFileComp.top   = new FormAttachment(0, 0);\r\n\t\tfdFileComp.right = new FormAttachment(100, 0);\r\n\t\tfdFileComp.bottom= new FormAttachment(100, 0);\r\n\t\twFileComp.setLayoutData(fdFileComp);\r\n\t\r\n\t\twFileComp.layout();\r\n\t\twFileTab.setControl(wFileComp);\r\n\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF FILE TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\r\n\t\t//////////////////////////\r\n\t\t// START OF CONTENT TAB///\r\n\t\t///\r\n\t\twContentTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twContentTab.setText(Messages.getString(\"TextFileOutputDialog.ContentTab.TabTitle\"));\r\n\r\n\t\tFormLayout contentLayout = new FormLayout ();\r\n\t\tcontentLayout.marginWidth  = 3;\r\n\t\tcontentLayout.marginHeight = 3;\r\n\t\t\r\n\t\tComposite wContentComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wContentComp);\r\n\t\twContentComp.setLayout(contentLayout);\r\n\r\n\r\n\t\t// Append to end of file?\r\n\t\twlAppend=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlAppend.setText(Messages.getString(\"TextFileOutputDialog.Append.Label\"));\r\n \t\tprops.setLook(wlAppend);\r\n\t\tfdlAppend=new FormData();\r\n\t\tfdlAppend.left = new FormAttachment(0, 0);\r\n\t\tfdlAppend.top  = new FormAttachment(0, 0);\r\n\t\tfdlAppend.right= new FormAttachment(middle, -margin);\r\n\t\twlAppend.setLayoutData(fdlAppend);\r\n\t\twAppend=new Button(wContentComp, SWT.CHECK);\r\n \t\tprops.setLook(wAppend);\r\n\t\tfdAppend=new FormData();\r\n\t\tfdAppend.left = new FormAttachment(middle, 0);\r\n\t\tfdAppend.top  = new FormAttachment(0, 0);\r\n\t\tfdAppend.right= new FormAttachment(100, 0);\r\n\t\twAppend.setLayoutData(fdAppend);\r\n\t\twAppend.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tinput.setChanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\t\r\n\t\twlSeparator=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlSeparator.setText(Messages.getString(\"TextFileOutputDialog.Separator.Label\"));\r\n \t\tprops.setLook(wlSeparator);\r\n\t\tfdlSeparator=new FormData();\r\n\t\tfdlSeparator.left = new FormAttachment(0, 0);\r\n\t\tfdlSeparator.top  = new FormAttachment(wAppend, margin);\r\n\t\tfdlSeparator.right= new FormAttachment(middle, -margin);\r\n\t\twlSeparator.setLayoutData(fdlSeparator);\r\n\r\n\t\twbSeparator=new Button(wContentComp, SWT.PUSH| SWT.CENTER);\r\n \t\tprops.setLook(wbSeparator);\r\n\t\twbSeparator.setText(Messages.getString(\"TextFileOutputDialog.Separator.Button\"));\r\n\t\tfdbSeparator=new FormData();\r\n\t\tfdbSeparator.right= new FormAttachment(100, 0);\r\n\t\tfdbSeparator.top  = new FormAttachment(wAppend, 0);\r\n\t\twbSeparator.setLayoutData(fdbSeparator);\r\n\t\twbSeparator.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent se) \r\n\t\t\t\t{\r\n\t\t\t\t\twSeparator.insert(\"\\t\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\twSeparator=new Text(wContentComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wSeparator);\r\n\t\twSeparator.addModifyListener(lsMod);\r\n\t\tfdSeparator=new FormData();\r\n\t\tfdSeparator.left = new FormAttachment(middle, 0);\r\n\t\tfdSeparator.top  = new FormAttachment(wAppend, margin);\r\n\t\tfdSeparator.right= new FormAttachment(wbSeparator, -margin);\r\n\t\twSeparator.setLayoutData(fdSeparator);\r\n\r\n\t\t// Enclosure line...\r\n\t\twlEnclosure=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlEnclosure.setText(Messages.getString(\"TextFileOutputDialog.Enclosure.Label\"));\r\n \t\tprops.setLook(wlEnclosure);\r\n\t\tfdlEnclosure=new FormData();\r\n\t\tfdlEnclosure.left = new FormAttachment(0, 0);\r\n\t\tfdlEnclosure.top  = new FormAttachment(wSeparator, margin);\r\n\t\tfdlEnclosure.right= new FormAttachment(middle, -margin);\r\n\t\twlEnclosure.setLayoutData(fdlEnclosure);\r\n\t\twEnclosure=new Text(wContentComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wEnclosure);\r\n\t\twEnclosure.addModifyListener(lsMod);\r\n\t\tfdEnclosure=new FormData();\r\n\t\tfdEnclosure.left = new FormAttachment(middle, 0);\r\n\t\tfdEnclosure.top  = new FormAttachment(wSeparator, margin);\r\n\t\tfdEnclosure.right= new FormAttachment(100, 0);\r\n\t\twEnclosure.setLayoutData(fdEnclosure);\r\n\r\n        wlEnclForced=new Label(wContentComp, SWT.RIGHT);\r\n        wlEnclForced.setText(Messages.getString(\"TextFileOutputDialog.EnclForced.Label\"));\r\n        props.setLook(wlEnclForced);\r\n        fdlEnclForced=new FormData();\r\n        fdlEnclForced.left = new FormAttachment(0, 0);\r\n        fdlEnclForced.top  = new FormAttachment(wEnclosure, margin);\r\n        fdlEnclForced.right= new FormAttachment(middle, -margin);\r\n        wlEnclForced.setLayoutData(fdlEnclForced);\r\n        wEnclForced=new Button(wContentComp, SWT.CHECK );\r\n        props.setLook(wEnclForced);\r\n        fdEnclForced=new FormData();\r\n        fdEnclForced.left = new FormAttachment(middle, 0);\r\n        fdEnclForced.top  = new FormAttachment(wEnclosure, margin);\r\n        fdEnclForced.right= new FormAttachment(100, 0);\r\n        wEnclForced.setLayoutData(fdEnclForced);\r\n        wEnclForced.addSelectionListener(new SelectionAdapter() \r\n            {\r\n                public void widgetSelected(SelectionEvent e) \r\n                {\r\n                    input.setChanged();\r\n                }\r\n            }\r\n        );\r\n\r\n\t\twlHeader=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlHeader.setText(Messages.getString(\"TextFileOutputDialog.Header.Label\"));\r\n \t\tprops.setLook(wlHeader);\r\n\t\tfdlHeader=new FormData();\r\n\t\tfdlHeader.left = new FormAttachment(0, 0);\r\n\t\tfdlHeader.top  = new FormAttachment(wEnclForced, margin);\r\n\t\tfdlHeader.right= new FormAttachment(middle, -margin);\r\n\t\twlHeader.setLayoutData(fdlHeader);\r\n\t\twHeader=new Button(wContentComp, SWT.CHECK );\r\n \t\tprops.setLook(wHeader);\r\n\t\tfdHeader=new FormData();\r\n\t\tfdHeader.left = new FormAttachment(middle, 0);\r\n\t\tfdHeader.top  = new FormAttachment(wEnclForced, margin);\r\n\t\tfdHeader.right= new FormAttachment(100, 0);\r\n\t\twHeader.setLayoutData(fdHeader);\r\n\t\twHeader.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tinput.setChanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\twlFooter=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlFooter.setText(Messages.getString(\"TextFileOutputDialog.Footer.Label\"));\r\n \t\tprops.setLook(wlFooter);\r\n\t\tfdlFooter=new FormData();\r\n\t\tfdlFooter.left = new FormAttachment(0, 0);\r\n\t\tfdlFooter.top  = new FormAttachment(wHeader, margin);\r\n\t\tfdlFooter.right= new FormAttachment(middle, -margin);\r\n\t\twlFooter.setLayoutData(fdlFooter);\r\n\t\twFooter=new Button(wContentComp, SWT.CHECK );\r\n \t\tprops.setLook(wFooter);\r\n\t\tfdFooter=new FormData();\r\n\t\tfdFooter.left = new FormAttachment(middle, 0);\r\n\t\tfdFooter.top  = new FormAttachment(wHeader, margin);\r\n\t\tfdFooter.right= new FormAttachment(100, 0);\r\n\t\twFooter.setLayoutData(fdFooter);\r\n\t\twFooter.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tinput.setChanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\twlZipped=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlZipped.setText(Messages.getString(\"TextFileOutputDialog.Zipped.Label\"));\r\n \t\tprops.setLook(wlZipped);\r\n\t\tfdlZipped=new FormData();\r\n\t\tfdlZipped.left = new FormAttachment(0, 0);\r\n\t\tfdlZipped.top  = new FormAttachment(wFooter, margin);\r\n\t\tfdlZipped.right= new FormAttachment(middle, -margin);\r\n\t\twlZipped.setLayoutData(fdlZipped);\r\n\t\twZipped=new Button(wContentComp, SWT.CHECK );\r\n \t\tprops.setLook(wZipped);\r\n\t\tfdZipped=new FormData();\r\n\t\tfdZipped.left = new FormAttachment(middle, 0);\r\n\t\tfdZipped.top  = new FormAttachment(wFooter, margin);\r\n\t\tfdZipped.right= new FormAttachment(100, 0);\r\n\t\twZipped.setLayoutData(fdZipped);\r\n\t\twZipped.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tinput.setChanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\twlFormat=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlFormat.setText(Messages.getString(\"TextFileOutputDialog.Format.Label\"));\r\n \t\tprops.setLook(wlFormat);\r\n\t\tfdlFormat=new FormData();\r\n\t\tfdlFormat.left = new FormAttachment(0, 0);\r\n\t\tfdlFormat.top  = new FormAttachment(wZipped, margin);\r\n\t\tfdlFormat.right= new FormAttachment(middle, -margin);\r\n\t\twlFormat.setLayoutData(fdlFormat);\r\n\t\twFormat=new CCombo(wContentComp, SWT.BORDER | SWT.READ_ONLY);\r\n\t\twFormat.setText(Messages.getString(\"TextFileOutputDialog.Format.Label\"));\r\n \t\tprops.setLook(wFormat);\r\n\r\n\t\twFormat.add(\"DOS\");\r\n\t\twFormat.add(\"Unix\");\r\n\t\twFormat.select(0);\r\n\t\twFormat.addModifyListener(lsMod);\r\n\t\tfdFormat=new FormData();\r\n\t\tfdFormat.left = new FormAttachment(middle, 0);\r\n\t\tfdFormat.top  = new FormAttachment(wZipped, margin);\r\n\t\tfdFormat.right= new FormAttachment(100, 0);\r\n\t\twFormat.setLayoutData(fdFormat);\r\n\r\n        wlEncoding=new Label(wContentComp, SWT.RIGHT);\r\n        wlEncoding.setText(Messages.getString(\"TextFileOutputDialog.Encoding.Label\"));\r\n        props.setLook(wlEncoding);\r\n        fdlEncoding=new FormData();\r\n        fdlEncoding.left = new FormAttachment(0, 0);\r\n        fdlEncoding.top  = new FormAttachment(wFormat, margin);\r\n        fdlEncoding.right= new FormAttachment(middle, -margin);\r\n        wlEncoding.setLayoutData(fdlEncoding);\r\n        wEncoding=new CCombo(wContentComp, SWT.BORDER | SWT.READ_ONLY);\r\n        wEncoding.setEditable(true);\r\n        props.setLook(wEncoding);\r\n        wEncoding.addModifyListener(lsMod);\r\n        fdEncoding=new FormData();\r\n        fdEncoding.left = new FormAttachment(middle, 0);\r\n        fdEncoding.top  = new FormAttachment(wFormat, margin);\r\n        fdEncoding.right= new FormAttachment(100, 0);\r\n        wEncoding.setLayoutData(fdEncoding);\r\n        wEncoding.addFocusListener(new FocusListener()\r\n            {\r\n                public void focusLost(org.eclipse.swt.events.FocusEvent e)\r\n                {\r\n                }\r\n            \r\n                public void focusGained(org.eclipse.swt.events.FocusEvent e)\r\n                {\r\n                    Cursor busy = new Cursor(shell.getDisplay(), SWT.CURSOR_WAIT);\r\n                    shell.setCursor(busy);\r\n                    setEncodings();\r\n                    shell.setCursor(null);\r\n                    busy.dispose();\r\n                }\r\n            }\r\n        );\r\n\r\n        \r\n\t\twlPad=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlPad.setText(Messages.getString(\"TextFileOutputDialog.Pad.Label\"));\r\n \t\tprops.setLook(wlPad);\r\n\t\tfdlPad=new FormData();\r\n\t\tfdlPad.left = new FormAttachment(0, 0);\r\n\t\tfdlPad.top  = new FormAttachment(wEncoding, margin);\r\n\t\tfdlPad.right= new FormAttachment(middle, -margin);\r\n\t\twlPad.setLayoutData(fdlPad);\r\n\t\twPad=new Button(wContentComp, SWT.CHECK );\r\n \t\tprops.setLook(wPad);\r\n\t\tfdPad=new FormData();\r\n\t\tfdPad.left = new FormAttachment(middle, 0);\r\n\t\tfdPad.top  = new FormAttachment(wEncoding, margin);\r\n\t\tfdPad.right= new FormAttachment(100, 0);\r\n\t\twPad.setLayoutData(fdPad);\r\n\t\twPad.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tinput.setChanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\r\n\t\twlSplitEvery=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlSplitEvery.setText(Messages.getString(\"TextFileOutputDialog.SplitEvery.Label\"));\r\n \t\tprops.setLook(wlSplitEvery);\r\n\t\tfdlSplitEvery=new FormData();\r\n\t\tfdlSplitEvery.left = new FormAttachment(0, 0);\r\n\t\tfdlSplitEvery.top  = new FormAttachment(wPad, margin);\r\n\t\tfdlSplitEvery.right= new FormAttachment(middle, -margin);\r\n\t\twlSplitEvery.setLayoutData(fdlSplitEvery);\r\n\t\twSplitEvery=new Text(wContentComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wSplitEvery);\r\n\t\twSplitEvery.addModifyListener(lsMod);\r\n\t\tfdSplitEvery=new FormData();\r\n\t\tfdSplitEvery.left = new FormAttachment(middle, 0);\r\n\t\tfdSplitEvery.top  = new FormAttachment(wPad, margin);\r\n\t\tfdSplitEvery.right= new FormAttachment(100, 0);\r\n\t\twSplitEvery.setLayoutData(fdSplitEvery);\r\n\r\n\t\t//Bruise:\r\n\t\twlEndedLine=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlEndedLine.setText(Messages.getString(\"TextFileOutputDialog.EndedLine.Label\"));\r\n \t\tprops.setLook(wlEndedLine);\r\n\t\tfdlEndedLine=new FormData();\r\n\t\tfdlEndedLine.left = new FormAttachment(0, 0);\r\n\t\tfdlEndedLine.top  = new FormAttachment(wSplitEvery, margin);\r\n\t\tfdlEndedLine.right= new FormAttachment(middle, -margin);\r\n\t\twlEndedLine.setLayoutData(fdlEndedLine);\r\n\t\twEndedLine=new Text(wContentComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wEndedLine);\r\n \t\twEndedLine.addModifyListener(lsMod);\r\n\t\tfdEndedLine=new FormData();\r\n\t\tfdEndedLine.left = new FormAttachment(middle, 0);\r\n\t\tfdEndedLine.top  = new FormAttachment(wSplitEvery, margin);\r\n\t\tfdEndedLine.right= new FormAttachment(100, 0);\r\n\t\twEndedLine.setLayoutData(fdEndedLine);\r\n\t\t\r\n\t\tfdContentComp = new FormData();\r\n\t\tfdContentComp.left  = new FormAttachment(0, 0);\r\n\t\tfdContentComp.top   = new FormAttachment(0, 0);\r\n\t\tfdContentComp.right = new FormAttachment(100, 0);\r\n\t\tfdContentComp.bottom= new FormAttachment(100, 0);\r\n\t\twContentComp.setLayoutData(fdContentComp);\r\n\r\n\t\twContentComp.layout();\r\n\t\twContentTab.setControl(wContentComp);\r\n\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF CONTENT TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\r\n\t\t// Fields tab...\r\n\t\t//\r\n\t\twFieldsTab = new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twFieldsTab.setText(Messages.getString(\"TextFileOutputDialog.FieldsTab.TabTitle\"));\r\n\t\t\r\n\t\tFormLayout fieldsLayout = new FormLayout ();\r\n\t\tfieldsLayout.marginWidth  = Const.FORM_MARGIN;\r\n\t\tfieldsLayout.marginHeight = Const.FORM_MARGIN;\r\n\t\t\r\n\t\tComposite wFieldsComp = new Composite(wTabFolder, SWT.NONE);\r\n\t\twFieldsComp.setLayout(fieldsLayout);\r\n \t\tprops.setLook(wFieldsComp);\r\n\r\n\t\twGet=new Button(wFieldsComp, SWT.PUSH);\r\n\t\twGet.setText(Messages.getString(\"System.Button.GetFields\"));\r\n\t\twGet.setToolTipText(Messages.getString(\"System.Tooltip.GetFields\"));\r\n\r\n\t\twMinWidth =new Button(wFieldsComp, SWT.PUSH);\r\n\t\twMinWidth.setText(Messages.getString(\"TextFileOutputDialog.MinWidth.Button\"));\r\n\t\twMinWidth.setToolTipText(Messages.getString(\"TextFileOutputDialog.MinWidth.Tooltip\"));\r\n\r\n\t\tsetButtonPositions(new Button[] { wGet, wMinWidth}, margin, null);\r\n\r\n\t\tfinal int FieldsCols=9;\r\n\t\tfinal int FieldsRows=input.getOutputFields().length;\r\n\t\t\r\n\t\t// Prepare a list of possible formats...\r\n\t\tString dats[] = Const.dateFormats;\r\n\t\tString nums[] = Const.numberFormats;\r\n\t\tint totsize = dats.length + nums.length;\r\n\t\tString formats[] = new String[totsize];\r\n\t\tfor (int x=0;x<dats.length;x++) formats[x] = dats[x];\r\n\t\tfor (int x=0;x<nums.length;x++) formats[dats.length+x] = nums[x];\r\n\t\t\r\n\t\tColumnInfo[] colinf=new ColumnInfo[FieldsCols];\r\n\t\tcolinf[0]=new ColumnInfo(Messages.getString(\"TextFileOutputDialog.NameColumn.Column\"),       ColumnInfo.COLUMN_TYPE_TEXT,   false);\r\n\t\tcolinf[1]=new ColumnInfo(Messages.getString(\"TextFileOutputDialog.TypeColumn.Column\"),       ColumnInfo.COLUMN_TYPE_CCOMBO, Value.getTypes() );\r\n\t\tcolinf[2]=new ColumnInfo(Messages.getString(\"TextFileOutputDialog.FormatColumn.Column\"),     ColumnInfo.COLUMN_TYPE_CCOMBO, formats);\r\n\t\tcolinf[3]=new ColumnInfo(Messages.getString(\"TextFileOutputDialog.LengthColumn.Column\"),     ColumnInfo.COLUMN_TYPE_TEXT,   false);\r\n\t\tcolinf[4]=new ColumnInfo(Messages.getString(\"TextFileOutputDialog.PrecisionColumn.Column\"),  ColumnInfo.COLUMN_TYPE_TEXT,   false);\r\n\t\tcolinf[5]=new ColumnInfo(Messages.getString(\"TextFileOutputDialog.CurrencyColumn.Column\"),   ColumnInfo.COLUMN_TYPE_TEXT,   false);\r\n\t\tcolinf[6]=new ColumnInfo(Messages.getString(\"TextFileOutputDialog.DecimalColumn.Column\"),    ColumnInfo.COLUMN_TYPE_TEXT,   false);\r\n\t\tcolinf[7]=new ColumnInfo(Messages.getString(\"TextFileOutputDialog.GroupColumn.Column\"),      ColumnInfo.COLUMN_TYPE_TEXT,   false);\r\n\t\tcolinf[8]=new ColumnInfo(Messages.getString(\"TextFileOutputDialog.NullColumn.Column\"),       ColumnInfo.COLUMN_TYPE_TEXT,   false);\r\n\t\t\r\n\t\twFields=new TableView(wFieldsComp, \r\n\t\t\t\t\t\t      SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI, \r\n\t\t\t\t\t\t      colinf, \r\n\t\t\t\t\t\t      FieldsRows,  \r\n\t\t\t\t\t\t      lsMod,\r\n\t\t\t\t\t\t\t  props\r\n\t\t\t\t\t\t      );\r\n\r\n\t\tfdFields=new FormData();\r\n\t\tfdFields.left  = new FormAttachment(0, 0);\r\n\t\tfdFields.top   = new FormAttachment(0, 0);\r\n\t\tfdFields.right = new FormAttachment(100, 0);\r\n\t\tfdFields.bottom= new FormAttachment(wGet, -margin);\r\n\t\twFields.setLayoutData(fdFields);\r\n\r\n\t\tfdFieldsComp=new FormData();\r\n\t\tfdFieldsComp.left  = new FormAttachment(0, 0);\r\n\t\tfdFieldsComp.top   = new FormAttachment(0, 0);\r\n\t\tfdFieldsComp.right = new FormAttachment(100, 0);\r\n\t\tfdFieldsComp.bottom= new FormAttachment(100, 0);\r\n\t\twFieldsComp.setLayoutData(fdFieldsComp);\r\n\r\n\t\twFieldsComp.layout();\r\n\t\twFieldsTab.setControl(wFieldsComp);\r\n\r\n\t\tfdTabFolder = new FormData();\r\n\t\tfdTabFolder.left  = new FormAttachment(0, 0);\r\n\t\tfdTabFolder.top   = new FormAttachment(wStepname, margin);\r\n\t\tfdTabFolder.right = new FormAttachment(100, 0);\r\n\t\tfdTabFolder.bottom= new FormAttachment(100, -50);\r\n\t\twTabFolder.setLayoutData(fdTabFolder);\r\n\t\t\r\n\t\twOK=new Button(shell, SWT.PUSH);\r\n\t\twOK.setText(Messages.getString(\"System.Button.OK\"));\r\n\r\n\t\twCancel=new Button(shell, SWT.PUSH);\r\n\t\twCancel.setText(Messages.getString(\"System.Button.Cancel\"));\r\n\r\n\t\tsetButtonPositions(new Button[] { wOK, wCancel }, margin, wTabFolder);\r\n\r\n\t\t// Add listeners\r\n\t\tlsOK       = new Listener() { public void handleEvent(Event e) { ok();       } };\r\n\t\tlsGet      = new Listener() { public void handleEvent(Event e) { get();      } };\r\n\t\tlsMinWidth    = new Listener() { public void handleEvent(Event e) { setMinimalWidth(); } };\r\n\t\tlsCancel   = new Listener() { public void handleEvent(Event e) { cancel();   } };\r\n\t\t\r\n\t\twOK.addListener    (SWT.Selection, lsOK    );\r\n\t\twGet.addListener   (SWT.Selection, lsGet   );\r\n\t\twMinWidth.addListener (SWT.Selection, lsMinWidth );\r\n\t\twCancel.addListener(SWT.Selection, lsCancel);\r\n\r\n\t\tlsDef=new SelectionAdapter() { public void widgetDefaultSelected(SelectionEvent e) { ok(); } };\r\n\r\n\t\twStepname.addSelectionListener( lsDef );\r\n\t\twFilename.addSelectionListener( lsDef );\r\n\t\twSeparator.addSelectionListener( lsDef );\r\n\r\n\t\t// Whenever something changes, set the tooltip to the expanded version:\r\n\t\twFilename.addModifyListener(new ModifyListener()\r\n\t\t\t{\r\n\t\t\t\tpublic void modifyText(ModifyEvent e)\r\n\t\t\t\t{\r\n\t\t\t\t\twFilename.setToolTipText(StringUtil.environmentSubstitute( wFilename.getText() ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\t\r\n\r\n\t\t// Listen to the Variable... button\r\n\t\twbcFilename.addSelectionListener(VariableButtonListenerFactory.getSelectionAdapter(shell, wFilename));\r\n\r\n\t\twbFilename.addSelectionListener\r\n\t\t(\r\n\t\t\tnew SelectionAdapter()\r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tFileDialog dialog = new FileDialog(shell, SWT.OPEN);\r\n\t\t\t\t\tdialog.setFilterExtensions(new String[] {\"*.txt\", \"*.csv\", \"*\"});\r\n\t\t\t\t\tif (wFilename.getText()!=null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdialog.setFileName(StringUtil.environmentSubstitute(wFilename.getText()));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdialog.setFilterNames(new String[] {Messages.getString(\"System.FileType.TextFiles\"), Messages.getString(\"System.FileType.CSVFiles\"), Messages.getString(\"System.FileType.AllFiles\")});\r\n\t\t\t\t\tif (dialog.open()!=null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twFilename.setText(dialog.getFilterPath()+System.getProperty(\"file.separator\")+dialog.getFileName());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\t\r\n\t\t// Detect X or ALT-F4 or something that kills this window...\r\n\t\tshell.addShellListener(\tnew ShellAdapter() { public void shellClosed(ShellEvent e) { cancel(); } } );\r\n\r\n\t\tlsResize = new Listener() \r\n\t\t{\r\n\t\t\tpublic void handleEvent(Event event) \r\n\t\t\t{\r\n\t\t\t\tPoint size = shell.getSize();\r\n\t\t\t\twFields.setSize(size.x-10, size.y-50);\r\n\t\t\t\twFields.table.setSize(size.x-10, size.y-50);\r\n\t\t\t\twFields.redraw();\r\n\t\t\t}\r\n\t\t};\r\n\t\tshell.addListener(SWT.Resize, lsResize);\r\n\r\n\t\twTabFolder.setSelection(0);\r\n\t\t\r\n\t\t// Set the shell size, based upon previous time...\r\n\t\tsetSize();\r\n\t\t\r\n\t\tgetData();\r\n\t\tinput.setChanged(changed);\r\n\t\t\r\n\t\tshell.open();\r\n\t\twhile (!shell.isDisposed())\r\n\t\t{\r\n\t\t\t\tif (!display.readAndDispatch()) display.sleep();\r\n\t\t}\r\n\t\treturn stepname;\r\n\t}","id":15588,"modified_method":"public String open()\r\n\t{\r\n        Shell parent = getParent();\r\n\t\tDisplay display = parent.getDisplay();\r\n\r\n        shell = new Shell(parent, SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX | SWT.MIN);\r\n \t\tprops.setLook(shell);\r\n\r\n\t\tModifyListener lsMod = new ModifyListener() \r\n\t\t{\r\n\t\t\tpublic void modifyText(ModifyEvent e) \r\n\t\t\t{\r\n\t\t\t\tinput.setChanged();\r\n\t\t\t}\r\n\t\t};\r\n\t\tchanged = input.hasChanged();\r\n\t\t\r\n\t\tFormLayout formLayout = new FormLayout ();\r\n\t\tformLayout.marginWidth  = Const.FORM_MARGIN;\r\n\t\tformLayout.marginHeight = Const.FORM_MARGIN;\r\n\r\n\t\tshell.setLayout(formLayout);\r\n\t\tshell.setText(Messages.getString(\"TextFileOutputDialog.DialogTitle\"));\r\n\t\t\r\n\t\tint middle = props.getMiddlePct();\r\n\t\tint margin = Const.MARGIN;\r\n\r\n\t\t// Stepname line\r\n\t\twlStepname=new Label(shell, SWT.RIGHT);\r\n\t\twlStepname.setText(Messages.getString(\"System.Label.StepName\"));\r\n \t\tprops.setLook(wlStepname);\r\n\t\tfdlStepname=new FormData();\r\n\t\tfdlStepname.left  = new FormAttachment(0, 0);\r\n\t\tfdlStepname.top   = new FormAttachment(0, margin);\r\n\t\tfdlStepname.right = new FormAttachment(middle, -margin);\r\n\t\twlStepname.setLayoutData(fdlStepname);\r\n\t\twStepname=new Text(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n\t\twStepname.setText(stepname);\r\n \t\tprops.setLook(wStepname);\r\n\t\twStepname.addModifyListener(lsMod);\r\n\t\tfdStepname=new FormData();\r\n\t\tfdStepname.left = new FormAttachment(middle, 0);\r\n\t\tfdStepname.top  = new FormAttachment(0, margin);\r\n\t\tfdStepname.right= new FormAttachment(100, 0);\r\n\t\twStepname.setLayoutData(fdStepname);\r\n\r\n\t\twTabFolder = new CTabFolder(shell, SWT.BORDER);\r\n \t\tprops.setLook(wTabFolder, Props.WIDGET_STYLE_TAB);\r\n\t\t\r\n\t\t//////////////////////////\r\n\t\t// START OF FILE TAB///\r\n\t\t///\r\n\t\twFileTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twFileTab.setText(Messages.getString(\"TextFileOutputDialog.FileTab.TabTitle\"));\r\n\t\t\r\n\t\tComposite wFileComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wFileComp);\r\n\r\n\t\tFormLayout fileLayout = new FormLayout();\r\n\t\tfileLayout.marginWidth  = 3;\r\n\t\tfileLayout.marginHeight = 3;\r\n\t\twFileComp.setLayout(fileLayout);\r\n\r\n\t\t// Filename line\r\n\t\twlFilename=new Label(wFileComp, SWT.RIGHT);\r\n\t\twlFilename.setText(Messages.getString(\"TextFileOutputDialog.Filename.Label\"));\r\n \t\tprops.setLook(wlFilename);\r\n\t\tfdlFilename=new FormData();\r\n\t\tfdlFilename.left = new FormAttachment(0, 0);\r\n\t\tfdlFilename.top  = new FormAttachment(0, margin);\r\n\t\tfdlFilename.right= new FormAttachment(middle, -margin);\r\n\t\twlFilename.setLayoutData(fdlFilename);\r\n\r\n\t\twbFilename=new Button(wFileComp, SWT.PUSH| SWT.CENTER);\r\n \t\tprops.setLook(wbFilename);\r\n\t\twbFilename.setText(Messages.getString(\"System.Button.Browse\"));\r\n\t\tfdbFilename=new FormData();\r\n\t\tfdbFilename.right= new FormAttachment(100, 0);\r\n\t\tfdbFilename.top  = new FormAttachment(0, 0);\r\n\t\twbFilename.setLayoutData(fdbFilename);\r\n\r\n\t\twbcFilename=new Button(wFileComp, SWT.PUSH| SWT.CENTER);\r\n \t\tprops.setLook(wbcFilename);\r\n\t\twbcFilename.setText(Messages.getString(\"System.Button.Variable\"));\r\n\t\tfdbcFilename=new FormData();\r\n\t\tfdbcFilename.right= new FormAttachment(wbFilename, -margin);\r\n\t\tfdbcFilename.top  = new FormAttachment(0, 0);\r\n\t\twbcFilename.setLayoutData(fdbcFilename);\r\n\r\n\t\twFilename=new Text(wFileComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wFilename);\r\n\t\twFilename.addModifyListener(lsMod);\r\n\t\tfdFilename=new FormData();\r\n\t\tfdFilename.left = new FormAttachment(middle, 0);\r\n\t\tfdFilename.top  = new FormAttachment(0, margin);\r\n\t\tfdFilename.right= new FormAttachment(wbcFilename, -margin);\r\n\t\twFilename.setLayoutData(fdFilename);\r\n\t\t\r\n\t\t// Whenever something changes, set the tooltip to the expanded version:\r\n\t\twFilename.addModifyListener(new ModifyListener()\r\n\t\t\t{\r\n\t\t\t\tpublic void modifyText(ModifyEvent e)\r\n\t\t\t\t{\r\n\t\t\t\t\twFilename.setToolTipText(StringUtil.environmentSubstitute( wFilename.getText() ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\t// Extension line\r\n\t\twlExtension=new Label(wFileComp, SWT.RIGHT);\r\n\t\twlExtension.setText(Messages.getString(\"System.Label.Extension\"));\r\n \t\tprops.setLook(wlExtension);\r\n\t\tfdlExtension=new FormData();\r\n\t\tfdlExtension.left = new FormAttachment(0, 0);\r\n\t\tfdlExtension.top  = new FormAttachment(wFilename, margin);\r\n\t\tfdlExtension.right= new FormAttachment(middle, -margin);\r\n\t\twlExtension.setLayoutData(fdlExtension);\r\n\t\twExtension=new Text(wFileComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n\t\twExtension.setText(\"\");\r\n \t\tprops.setLook(wExtension);\r\n\t\twExtension.addModifyListener(lsMod);\r\n\t\tfdExtension=new FormData();\r\n\t\tfdExtension.left = new FormAttachment(middle, 0);\r\n\t\tfdExtension.top  = new FormAttachment(wFilename, margin);\r\n\t\tfdExtension.right= new FormAttachment(wbcFilename, -margin);\r\n\t\twExtension.setLayoutData(fdExtension);\r\n\r\n\t\t// Create multi-part file?\r\n\t\twlAddStepnr=new Label(wFileComp, SWT.RIGHT);\r\n\t\twlAddStepnr.setText(Messages.getString(\"TextFileOutputDialog.AddStepnr.Label\"));\r\n \t\tprops.setLook(wlAddStepnr);\r\n\t\tfdlAddStepnr=new FormData();\r\n\t\tfdlAddStepnr.left = new FormAttachment(0, 0);\r\n\t\tfdlAddStepnr.top  = new FormAttachment(wExtension, margin);\r\n\t\tfdlAddStepnr.right= new FormAttachment(middle, -margin);\r\n\t\twlAddStepnr.setLayoutData(fdlAddStepnr);\r\n\t\twAddStepnr=new Button(wFileComp, SWT.CHECK);\r\n \t\tprops.setLook(wAddStepnr);\r\n\t\tfdAddStepnr=new FormData();\r\n\t\tfdAddStepnr.left = new FormAttachment(middle, 0);\r\n\t\tfdAddStepnr.top  = new FormAttachment(wExtension, margin);\r\n\t\tfdAddStepnr.right= new FormAttachment(100, 0);\r\n\t\twAddStepnr.setLayoutData(fdAddStepnr);\r\n\t\twAddStepnr.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tinput.setChanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\t// Create multi-part file?\r\n\t\twlAddDate=new Label(wFileComp, SWT.RIGHT);\r\n\t\twlAddDate.setText(Messages.getString(\"TextFileOutputDialog.AddDate.Label\"));\r\n \t\tprops.setLook(wlAddDate);\r\n\t\tfdlAddDate=new FormData();\r\n\t\tfdlAddDate.left = new FormAttachment(0, 0);\r\n\t\tfdlAddDate.top  = new FormAttachment(wAddStepnr, margin);\r\n\t\tfdlAddDate.right= new FormAttachment(middle, -margin);\r\n\t\twlAddDate.setLayoutData(fdlAddDate);\r\n\t\twAddDate=new Button(wFileComp, SWT.CHECK);\r\n \t\tprops.setLook(wAddDate);\r\n\t\tfdAddDate=new FormData();\r\n\t\tfdAddDate.left = new FormAttachment(middle, 0);\r\n\t\tfdAddDate.top  = new FormAttachment(wAddStepnr, margin);\r\n\t\tfdAddDate.right= new FormAttachment(100, 0);\r\n\t\twAddDate.setLayoutData(fdAddDate);\r\n\t\twAddDate.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tinput.setChanged();\r\n\t\t\t\t\t// System.out.println(\"wAddDate.getSelection()=\"+wAddDate.getSelection());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\t// Create multi-part file?\r\n\t\twlAddTime=new Label(wFileComp, SWT.RIGHT);\r\n\t\twlAddTime.setText(Messages.getString(\"TextFileOutputDialog.AddTime.Label\"));\r\n \t\tprops.setLook(wlAddTime);\r\n\t\tfdlAddTime=new FormData();\r\n\t\tfdlAddTime.left = new FormAttachment(0, 0);\r\n\t\tfdlAddTime.top  = new FormAttachment(wAddDate, margin);\r\n\t\tfdlAddTime.right= new FormAttachment(middle, -margin);\r\n\t\twlAddTime.setLayoutData(fdlAddTime);\r\n\t\twAddTime=new Button(wFileComp, SWT.CHECK);\r\n \t\tprops.setLook(wAddTime);\r\n\t\tfdAddTime=new FormData();\r\n\t\tfdAddTime.left = new FormAttachment(middle, 0);\r\n\t\tfdAddTime.top  = new FormAttachment(wAddDate, margin);\r\n\t\tfdAddTime.right= new FormAttachment(100, 0);\r\n\t\twAddTime.setLayoutData(fdAddTime);\r\n\t\twAddTime.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tinput.setChanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\twbShowFiles=new Button(wFileComp, SWT.PUSH| SWT.CENTER);\r\n \t\tprops.setLook(wbShowFiles);\r\n\t\twbShowFiles.setText(Messages.getString(\"TextFileOutputDialog.ShowFiles.Button\"));\r\n\t\tfdbShowFiles=new FormData();\r\n\t\tfdbShowFiles.left = new FormAttachment(middle, 0);\r\n\t\tfdbShowFiles.top  = new FormAttachment(wAddTime, margin*2);\r\n\t\twbShowFiles.setLayoutData(fdbShowFiles);\r\n\t\twbShowFiles.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tTextFileOutputMeta tfoi = new TextFileOutputMeta();\r\n\t\t\t\t\tgetInfo(tfoi);\r\n\t\t\t\t\tString files[] = tfoi.getFiles();\r\n\t\t\t\t\tif (files!=null && files.length>0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tEnterSelectionDialog esd = new EnterSelectionDialog(shell, props, files, Messages.getString(\"TextFileOutputDialog.SelectOutputFiles.DialogTitle\"), Messages.getString(\"TextFileOutputDialog.SelectOutputFiles.DialogMessage\"));\r\n\t\t\t\t\t\tesd.setViewOnly();\r\n\t\t\t\t\t\tesd.open();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\r\n\t\t\t\t\t\tmb.setMessage(Messages.getString(\"TextFileOutputDialog.NoFilesFound.DialogMessage\"));\r\n\t\t\t\t\t\tmb.setText(Messages.getString(\"System.DialogTitle.Error\"));\r\n\t\t\t\t\t\tmb.open(); \r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\r\n\t\t\r\n\t\tfdFileComp=new FormData();\r\n\t\tfdFileComp.left  = new FormAttachment(0, 0);\r\n\t\tfdFileComp.top   = new FormAttachment(0, 0);\r\n\t\tfdFileComp.right = new FormAttachment(100, 0);\r\n\t\tfdFileComp.bottom= new FormAttachment(100, 0);\r\n\t\twFileComp.setLayoutData(fdFileComp);\r\n\t\r\n\t\twFileComp.layout();\r\n\t\twFileTab.setControl(wFileComp);\r\n\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF FILE TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\r\n\t\t//////////////////////////\r\n\t\t// START OF CONTENT TAB///\r\n\t\t///\r\n\t\twContentTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twContentTab.setText(Messages.getString(\"TextFileOutputDialog.ContentTab.TabTitle\"));\r\n\r\n\t\tFormLayout contentLayout = new FormLayout ();\r\n\t\tcontentLayout.marginWidth  = 3;\r\n\t\tcontentLayout.marginHeight = 3;\r\n\t\t\r\n\t\tComposite wContentComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wContentComp);\r\n\t\twContentComp.setLayout(contentLayout);\r\n\r\n\r\n\t\t// Append to end of file?\r\n\t\twlAppend=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlAppend.setText(Messages.getString(\"TextFileOutputDialog.Append.Label\"));\r\n \t\tprops.setLook(wlAppend);\r\n\t\tfdlAppend=new FormData();\r\n\t\tfdlAppend.left = new FormAttachment(0, 0);\r\n\t\tfdlAppend.top  = new FormAttachment(0, 0);\r\n\t\tfdlAppend.right= new FormAttachment(middle, -margin);\r\n\t\twlAppend.setLayoutData(fdlAppend);\r\n\t\twAppend=new Button(wContentComp, SWT.CHECK);\r\n \t\tprops.setLook(wAppend);\r\n\t\tfdAppend=new FormData();\r\n\t\tfdAppend.left = new FormAttachment(middle, 0);\r\n\t\tfdAppend.top  = new FormAttachment(0, 0);\r\n\t\tfdAppend.right= new FormAttachment(100, 0);\r\n\t\twAppend.setLayoutData(fdAppend);\r\n\t\twAppend.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tinput.setChanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\t\r\n\t\twlSeparator=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlSeparator.setText(Messages.getString(\"TextFileOutputDialog.Separator.Label\"));\r\n \t\tprops.setLook(wlSeparator);\r\n\t\tfdlSeparator=new FormData();\r\n\t\tfdlSeparator.left = new FormAttachment(0, 0);\r\n\t\tfdlSeparator.top  = new FormAttachment(wAppend, margin);\r\n\t\tfdlSeparator.right= new FormAttachment(middle, -margin);\r\n\t\twlSeparator.setLayoutData(fdlSeparator);\r\n\r\n\t\twbSeparator=new Button(wContentComp, SWT.PUSH| SWT.CENTER);\r\n \t\tprops.setLook(wbSeparator);\r\n\t\twbSeparator.setText(Messages.getString(\"TextFileOutputDialog.Separator.Button\"));\r\n\t\tfdbSeparator=new FormData();\r\n\t\tfdbSeparator.right= new FormAttachment(100, 0);\r\n\t\tfdbSeparator.top  = new FormAttachment(wAppend, 0);\r\n\t\twbSeparator.setLayoutData(fdbSeparator);\r\n\t\twbSeparator.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent se) \r\n\t\t\t\t{\r\n\t\t\t\t\twSeparator.insert(\"\\t\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\twSeparator=new Text(wContentComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wSeparator);\r\n\t\twSeparator.addModifyListener(lsMod);\r\n\t\tfdSeparator=new FormData();\r\n\t\tfdSeparator.left = new FormAttachment(middle, 0);\r\n\t\tfdSeparator.top  = new FormAttachment(wAppend, margin);\r\n\t\tfdSeparator.right= new FormAttachment(wbSeparator, -margin);\r\n\t\twSeparator.setLayoutData(fdSeparator);\r\n\r\n\t\t// Enclosure line...\r\n\t\twlEnclosure=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlEnclosure.setText(Messages.getString(\"TextFileOutputDialog.Enclosure.Label\"));\r\n \t\tprops.setLook(wlEnclosure);\r\n\t\tfdlEnclosure=new FormData();\r\n\t\tfdlEnclosure.left = new FormAttachment(0, 0);\r\n\t\tfdlEnclosure.top  = new FormAttachment(wSeparator, margin);\r\n\t\tfdlEnclosure.right= new FormAttachment(middle, -margin);\r\n\t\twlEnclosure.setLayoutData(fdlEnclosure);\r\n\t\twEnclosure=new Text(wContentComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wEnclosure);\r\n\t\twEnclosure.addModifyListener(lsMod);\r\n\t\tfdEnclosure=new FormData();\r\n\t\tfdEnclosure.left = new FormAttachment(middle, 0);\r\n\t\tfdEnclosure.top  = new FormAttachment(wSeparator, margin);\r\n\t\tfdEnclosure.right= new FormAttachment(100, 0);\r\n\t\twEnclosure.setLayoutData(fdEnclosure);\r\n\r\n        wlEnclForced=new Label(wContentComp, SWT.RIGHT);\r\n        wlEnclForced.setText(Messages.getString(\"TextFileOutputDialog.EnclForced.Label\"));\r\n        props.setLook(wlEnclForced);\r\n        fdlEnclForced=new FormData();\r\n        fdlEnclForced.left = new FormAttachment(0, 0);\r\n        fdlEnclForced.top  = new FormAttachment(wEnclosure, margin);\r\n        fdlEnclForced.right= new FormAttachment(middle, -margin);\r\n        wlEnclForced.setLayoutData(fdlEnclForced);\r\n        wEnclForced=new Button(wContentComp, SWT.CHECK );\r\n        props.setLook(wEnclForced);\r\n        fdEnclForced=new FormData();\r\n        fdEnclForced.left = new FormAttachment(middle, 0);\r\n        fdEnclForced.top  = new FormAttachment(wEnclosure, margin);\r\n        fdEnclForced.right= new FormAttachment(100, 0);\r\n        wEnclForced.setLayoutData(fdEnclForced);\r\n        wEnclForced.addSelectionListener(new SelectionAdapter() \r\n            {\r\n                public void widgetSelected(SelectionEvent e) \r\n                {\r\n                    input.setChanged();\r\n                }\r\n            }\r\n        );\r\n\r\n\t\twlHeader=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlHeader.setText(Messages.getString(\"TextFileOutputDialog.Header.Label\"));\r\n \t\tprops.setLook(wlHeader);\r\n\t\tfdlHeader=new FormData();\r\n\t\tfdlHeader.left = new FormAttachment(0, 0);\r\n\t\tfdlHeader.top  = new FormAttachment(wEnclForced, margin);\r\n\t\tfdlHeader.right= new FormAttachment(middle, -margin);\r\n\t\twlHeader.setLayoutData(fdlHeader);\r\n\t\twHeader=new Button(wContentComp, SWT.CHECK );\r\n \t\tprops.setLook(wHeader);\r\n\t\tfdHeader=new FormData();\r\n\t\tfdHeader.left = new FormAttachment(middle, 0);\r\n\t\tfdHeader.top  = new FormAttachment(wEnclForced, margin);\r\n\t\tfdHeader.right= new FormAttachment(100, 0);\r\n\t\twHeader.setLayoutData(fdHeader);\r\n\t\twHeader.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tinput.setChanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\twlFooter=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlFooter.setText(Messages.getString(\"TextFileOutputDialog.Footer.Label\"));\r\n \t\tprops.setLook(wlFooter);\r\n\t\tfdlFooter=new FormData();\r\n\t\tfdlFooter.left = new FormAttachment(0, 0);\r\n\t\tfdlFooter.top  = new FormAttachment(wHeader, margin);\r\n\t\tfdlFooter.right= new FormAttachment(middle, -margin);\r\n\t\twlFooter.setLayoutData(fdlFooter);\r\n\t\twFooter=new Button(wContentComp, SWT.CHECK );\r\n \t\tprops.setLook(wFooter);\r\n\t\tfdFooter=new FormData();\r\n\t\tfdFooter.left = new FormAttachment(middle, 0);\r\n\t\tfdFooter.top  = new FormAttachment(wHeader, margin);\r\n\t\tfdFooter.right= new FormAttachment(100, 0);\r\n\t\twFooter.setLayoutData(fdFooter);\r\n\t\twFooter.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tinput.setChanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\twlFormat=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlFormat.setText(Messages.getString(\"TextFileOutputDialog.Format.Label\"));\r\n \t\tprops.setLook(wlFormat);\r\n\t\tfdlFormat=new FormData();\r\n\t\tfdlFormat.left = new FormAttachment(0, 0);\r\n\t\tfdlFormat.top  = new FormAttachment(wFooter, margin);\r\n\t\tfdlFormat.right= new FormAttachment(middle, -margin);\r\n\t\twlFormat.setLayoutData(fdlFormat);\r\n\t\twFormat=new CCombo(wContentComp, SWT.BORDER | SWT.READ_ONLY);\r\n\t\twFormat.setText(Messages.getString(\"TextFileOutputDialog.Format.Label\"));\r\n \t\tprops.setLook(wFormat);\r\n\r\n\t\twFormat.add(\"DOS\");\r\n\t\twFormat.add(\"Unix\");\r\n\t\twFormat.select(0);\r\n\t\twFormat.addModifyListener(lsMod);\r\n\t\tfdFormat=new FormData();\r\n\t\tfdFormat.left = new FormAttachment(middle, 0);\r\n\t\tfdFormat.top  = new FormAttachment(wFooter, margin);\r\n\t\tfdFormat.right= new FormAttachment(100, 0);\r\n\t\twFormat.setLayoutData(fdFormat);\r\n\r\n\t\twlCompression=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlCompression.setText(Messages.getString(\"TextFileOutputDialog.Compression.Label\"));\r\n \t\tprops.setLook(wlCompression);\r\n\t\tfdlCompression=new FormData();\r\n\t\tfdlCompression.left = new FormAttachment(0, 0);\r\n\t\tfdlCompression.top  = new FormAttachment(wFormat, margin);\r\n\t\tfdlCompression.right= new FormAttachment(middle, -margin);\r\n\t\twlCompression.setLayoutData(fdlCompression);\r\n\t\twCompression=new CCombo(wContentComp, SWT.BORDER | SWT.READ_ONLY);\r\n\t\twCompression.setText(Messages.getString(\"TextFileOutputDialog.Compression.Label\"));\r\n \t\tprops.setLook(wCompression);\r\n\r\n\t\twCompression.add(\"None\");\r\n\t\twCompression.add(\"Zip\");\r\n\t\twCompression.add(\"GZip\");\r\n\t\twCompression.select(0);\r\n\t\twCompression.addModifyListener(lsMod);\r\n\t\tfdCompression=new FormData();\r\n\t\tfdCompression.left = new FormAttachment(middle, 0);\r\n\t\tfdCompression.top  = new FormAttachment(wFormat, margin);\r\n\t\tfdCompression.right= new FormAttachment(100, 0);\r\n\t\twCompression.setLayoutData(fdCompression);\r\n\r\n        wlEncoding=new Label(wContentComp, SWT.RIGHT);\r\n        wlEncoding.setText(Messages.getString(\"TextFileOutputDialog.Encoding.Label\"));\r\n        props.setLook(wlEncoding);\r\n        fdlEncoding=new FormData();\r\n        fdlEncoding.left = new FormAttachment(0, 0);\r\n        fdlEncoding.top  = new FormAttachment(wFormat, margin);\r\n        fdlEncoding.right= new FormAttachment(middle, -margin);\r\n        wlEncoding.setLayoutData(fdlEncoding);\r\n        wEncoding=new CCombo(wContentComp, SWT.BORDER | SWT.READ_ONLY);\r\n        wEncoding.setEditable(true);\r\n        props.setLook(wEncoding);\r\n        wEncoding.addModifyListener(lsMod);\r\n        fdEncoding=new FormData();\r\n        fdEncoding.left = new FormAttachment(middle, 0);\r\n        fdEncoding.top  = new FormAttachment(wCompression, margin);\r\n        fdEncoding.right= new FormAttachment(100, 0);\r\n        wEncoding.setLayoutData(fdEncoding);\r\n        wEncoding.addFocusListener(new FocusListener()\r\n            {\r\n                public void focusLost(org.eclipse.swt.events.FocusEvent e)\r\n                {\r\n                }\r\n            \r\n                public void focusGained(org.eclipse.swt.events.FocusEvent e)\r\n                {\r\n                    Cursor busy = new Cursor(shell.getDisplay(), SWT.CURSOR_WAIT);\r\n                    shell.setCursor(busy);\r\n                    setEncodings();\r\n                    shell.setCursor(null);\r\n                    busy.dispose();\r\n                }\r\n            }\r\n        );\r\n\r\n        \r\n\t\twlPad=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlPad.setText(Messages.getString(\"TextFileOutputDialog.Pad.Label\"));\r\n \t\tprops.setLook(wlPad);\r\n\t\tfdlPad=new FormData();\r\n\t\tfdlPad.left = new FormAttachment(0, 0);\r\n\t\tfdlPad.top  = new FormAttachment(wEncoding, margin);\r\n\t\tfdlPad.right= new FormAttachment(middle, -margin);\r\n\t\twlPad.setLayoutData(fdlPad);\r\n\t\twPad=new Button(wContentComp, SWT.CHECK );\r\n \t\tprops.setLook(wPad);\r\n\t\tfdPad=new FormData();\r\n\t\tfdPad.left = new FormAttachment(middle, 0);\r\n\t\tfdPad.top  = new FormAttachment(wEncoding, margin);\r\n\t\tfdPad.right= new FormAttachment(100, 0);\r\n\t\twPad.setLayoutData(fdPad);\r\n\t\twPad.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tinput.setChanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\r\n\t\twlSplitEvery=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlSplitEvery.setText(Messages.getString(\"TextFileOutputDialog.SplitEvery.Label\"));\r\n \t\tprops.setLook(wlSplitEvery);\r\n\t\tfdlSplitEvery=new FormData();\r\n\t\tfdlSplitEvery.left = new FormAttachment(0, 0);\r\n\t\tfdlSplitEvery.top  = new FormAttachment(wPad, margin);\r\n\t\tfdlSplitEvery.right= new FormAttachment(middle, -margin);\r\n\t\twlSplitEvery.setLayoutData(fdlSplitEvery);\r\n\t\twSplitEvery=new Text(wContentComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wSplitEvery);\r\n\t\twSplitEvery.addModifyListener(lsMod);\r\n\t\tfdSplitEvery=new FormData();\r\n\t\tfdSplitEvery.left = new FormAttachment(middle, 0);\r\n\t\tfdSplitEvery.top  = new FormAttachment(wPad, margin);\r\n\t\tfdSplitEvery.right= new FormAttachment(100, 0);\r\n\t\twSplitEvery.setLayoutData(fdSplitEvery);\r\n\r\n\t\t//Bruise:\r\n\t\twlEndedLine=new Label(wContentComp, SWT.RIGHT);\r\n\t\twlEndedLine.setText(Messages.getString(\"TextFileOutputDialog.EndedLine.Label\"));\r\n \t\tprops.setLook(wlEndedLine);\r\n\t\tfdlEndedLine=new FormData();\r\n\t\tfdlEndedLine.left = new FormAttachment(0, 0);\r\n\t\tfdlEndedLine.top  = new FormAttachment(wSplitEvery, margin);\r\n\t\tfdlEndedLine.right= new FormAttachment(middle, -margin);\r\n\t\twlEndedLine.setLayoutData(fdlEndedLine);\r\n\t\twEndedLine=new Text(wContentComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wEndedLine);\r\n \t\twEndedLine.addModifyListener(lsMod);\r\n\t\tfdEndedLine=new FormData();\r\n\t\tfdEndedLine.left = new FormAttachment(middle, 0);\r\n\t\tfdEndedLine.top  = new FormAttachment(wSplitEvery, margin);\r\n\t\tfdEndedLine.right= new FormAttachment(100, 0);\r\n\t\twEndedLine.setLayoutData(fdEndedLine);\r\n\t\t\r\n\t\tfdContentComp = new FormData();\r\n\t\tfdContentComp.left  = new FormAttachment(0, 0);\r\n\t\tfdContentComp.top   = new FormAttachment(0, 0);\r\n\t\tfdContentComp.right = new FormAttachment(100, 0);\r\n\t\tfdContentComp.bottom= new FormAttachment(100, 0);\r\n\t\twContentComp.setLayoutData(fdContentComp);\r\n\r\n\t\twContentComp.layout();\r\n\t\twContentTab.setControl(wContentComp);\r\n\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF CONTENT TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\r\n\t\t// Fields tab...\r\n\t\t//\r\n\t\twFieldsTab = new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twFieldsTab.setText(Messages.getString(\"TextFileOutputDialog.FieldsTab.TabTitle\"));\r\n\t\t\r\n\t\tFormLayout fieldsLayout = new FormLayout ();\r\n\t\tfieldsLayout.marginWidth  = Const.FORM_MARGIN;\r\n\t\tfieldsLayout.marginHeight = Const.FORM_MARGIN;\r\n\t\t\r\n\t\tComposite wFieldsComp = new Composite(wTabFolder, SWT.NONE);\r\n\t\twFieldsComp.setLayout(fieldsLayout);\r\n \t\tprops.setLook(wFieldsComp);\r\n\r\n\t\twGet=new Button(wFieldsComp, SWT.PUSH);\r\n\t\twGet.setText(Messages.getString(\"System.Button.GetFields\"));\r\n\t\twGet.setToolTipText(Messages.getString(\"System.Tooltip.GetFields\"));\r\n\r\n\t\twMinWidth =new Button(wFieldsComp, SWT.PUSH);\r\n\t\twMinWidth.setText(Messages.getString(\"TextFileOutputDialog.MinWidth.Button\"));\r\n\t\twMinWidth.setToolTipText(Messages.getString(\"TextFileOutputDialog.MinWidth.Tooltip\"));\r\n\r\n\t\tsetButtonPositions(new Button[] { wGet, wMinWidth}, margin, null);\r\n\r\n\t\tfinal int FieldsCols=9;\r\n\t\tfinal int FieldsRows=input.getOutputFields().length;\r\n\t\t\r\n\t\t// Prepare a list of possible formats...\r\n\t\tString dats[] = Const.dateFormats;\r\n\t\tString nums[] = Const.numberFormats;\r\n\t\tint totsize = dats.length + nums.length;\r\n\t\tString formats[] = new String[totsize];\r\n\t\tfor (int x=0;x<dats.length;x++) formats[x] = dats[x];\r\n\t\tfor (int x=0;x<nums.length;x++) formats[dats.length+x] = nums[x];\r\n\t\t\r\n\t\tColumnInfo[] colinf=new ColumnInfo[FieldsCols];\r\n\t\tcolinf[0]=new ColumnInfo(Messages.getString(\"TextFileOutputDialog.NameColumn.Column\"),       ColumnInfo.COLUMN_TYPE_TEXT,   false);\r\n\t\tcolinf[1]=new ColumnInfo(Messages.getString(\"TextFileOutputDialog.TypeColumn.Column\"),       ColumnInfo.COLUMN_TYPE_CCOMBO, Value.getTypes() );\r\n\t\tcolinf[2]=new ColumnInfo(Messages.getString(\"TextFileOutputDialog.FormatColumn.Column\"),     ColumnInfo.COLUMN_TYPE_CCOMBO, formats);\r\n\t\tcolinf[3]=new ColumnInfo(Messages.getString(\"TextFileOutputDialog.LengthColumn.Column\"),     ColumnInfo.COLUMN_TYPE_TEXT,   false);\r\n\t\tcolinf[4]=new ColumnInfo(Messages.getString(\"TextFileOutputDialog.PrecisionColumn.Column\"),  ColumnInfo.COLUMN_TYPE_TEXT,   false);\r\n\t\tcolinf[5]=new ColumnInfo(Messages.getString(\"TextFileOutputDialog.CurrencyColumn.Column\"),   ColumnInfo.COLUMN_TYPE_TEXT,   false);\r\n\t\tcolinf[6]=new ColumnInfo(Messages.getString(\"TextFileOutputDialog.DecimalColumn.Column\"),    ColumnInfo.COLUMN_TYPE_TEXT,   false);\r\n\t\tcolinf[7]=new ColumnInfo(Messages.getString(\"TextFileOutputDialog.GroupColumn.Column\"),      ColumnInfo.COLUMN_TYPE_TEXT,   false);\r\n\t\tcolinf[8]=new ColumnInfo(Messages.getString(\"TextFileOutputDialog.NullColumn.Column\"),       ColumnInfo.COLUMN_TYPE_TEXT,   false);\r\n\t\t\r\n\t\twFields=new TableView(wFieldsComp, \r\n\t\t\t\t\t\t      SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI, \r\n\t\t\t\t\t\t      colinf, \r\n\t\t\t\t\t\t      FieldsRows,  \r\n\t\t\t\t\t\t      lsMod,\r\n\t\t\t\t\t\t\t  props\r\n\t\t\t\t\t\t      );\r\n\r\n\t\tfdFields=new FormData();\r\n\t\tfdFields.left  = new FormAttachment(0, 0);\r\n\t\tfdFields.top   = new FormAttachment(0, 0);\r\n\t\tfdFields.right = new FormAttachment(100, 0);\r\n\t\tfdFields.bottom= new FormAttachment(wGet, -margin);\r\n\t\twFields.setLayoutData(fdFields);\r\n\r\n\t\tfdFieldsComp=new FormData();\r\n\t\tfdFieldsComp.left  = new FormAttachment(0, 0);\r\n\t\tfdFieldsComp.top   = new FormAttachment(0, 0);\r\n\t\tfdFieldsComp.right = new FormAttachment(100, 0);\r\n\t\tfdFieldsComp.bottom= new FormAttachment(100, 0);\r\n\t\twFieldsComp.setLayoutData(fdFieldsComp);\r\n\r\n\t\twFieldsComp.layout();\r\n\t\twFieldsTab.setControl(wFieldsComp);\r\n\r\n\t\tfdTabFolder = new FormData();\r\n\t\tfdTabFolder.left  = new FormAttachment(0, 0);\r\n\t\tfdTabFolder.top   = new FormAttachment(wStepname, margin);\r\n\t\tfdTabFolder.right = new FormAttachment(100, 0);\r\n\t\tfdTabFolder.bottom= new FormAttachment(100, -50);\r\n\t\twTabFolder.setLayoutData(fdTabFolder);\r\n\t\t\r\n\t\twOK=new Button(shell, SWT.PUSH);\r\n\t\twOK.setText(Messages.getString(\"System.Button.OK\"));\r\n\r\n\t\twCancel=new Button(shell, SWT.PUSH);\r\n\t\twCancel.setText(Messages.getString(\"System.Button.Cancel\"));\r\n\r\n\t\tsetButtonPositions(new Button[] { wOK, wCancel }, margin, wTabFolder);\r\n\r\n\t\t// Add listeners\r\n\t\tlsOK       = new Listener() { public void handleEvent(Event e) { ok();       } };\r\n\t\tlsGet      = new Listener() { public void handleEvent(Event e) { get();      } };\r\n\t\tlsMinWidth    = new Listener() { public void handleEvent(Event e) { setMinimalWidth(); } };\r\n\t\tlsCancel   = new Listener() { public void handleEvent(Event e) { cancel();   } };\r\n\t\t\r\n\t\twOK.addListener    (SWT.Selection, lsOK    );\r\n\t\twGet.addListener   (SWT.Selection, lsGet   );\r\n\t\twMinWidth.addListener (SWT.Selection, lsMinWidth );\r\n\t\twCancel.addListener(SWT.Selection, lsCancel);\r\n\r\n\t\tlsDef=new SelectionAdapter() { public void widgetDefaultSelected(SelectionEvent e) { ok(); } };\r\n\r\n\t\twStepname.addSelectionListener( lsDef );\r\n\t\twFilename.addSelectionListener( lsDef );\r\n\t\twSeparator.addSelectionListener( lsDef );\r\n\r\n\t\t// Whenever something changes, set the tooltip to the expanded version:\r\n\t\twFilename.addModifyListener(new ModifyListener()\r\n\t\t\t{\r\n\t\t\t\tpublic void modifyText(ModifyEvent e)\r\n\t\t\t\t{\r\n\t\t\t\t\twFilename.setToolTipText(StringUtil.environmentSubstitute( wFilename.getText() ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\t\r\n\r\n\t\t// Listen to the Variable... button\r\n\t\twbcFilename.addSelectionListener(VariableButtonListenerFactory.getSelectionAdapter(shell, wFilename));\r\n\r\n\t\twbFilename.addSelectionListener\r\n\t\t(\r\n\t\t\tnew SelectionAdapter()\r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tFileDialog dialog = new FileDialog(shell, SWT.OPEN);\r\n\t\t\t\t\tdialog.setFilterExtensions(new String[] {\"*.txt\", \"*.csv\", \"*\"});\r\n\t\t\t\t\tif (wFilename.getText()!=null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdialog.setFileName(StringUtil.environmentSubstitute(wFilename.getText()));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdialog.setFilterNames(new String[] {Messages.getString(\"System.FileType.TextFiles\"), Messages.getString(\"System.FileType.CSVFiles\"), Messages.getString(\"System.FileType.AllFiles\")});\r\n\t\t\t\t\tif (dialog.open()!=null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twFilename.setText(dialog.getFilterPath()+System.getProperty(\"file.separator\")+dialog.getFileName());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\t\r\n\t\t// Detect X or ALT-F4 or something that kills this window...\r\n\t\tshell.addShellListener(\tnew ShellAdapter() { public void shellClosed(ShellEvent e) { cancel(); } } );\r\n\r\n\t\tlsResize = new Listener() \r\n\t\t{\r\n\t\t\tpublic void handleEvent(Event event) \r\n\t\t\t{\r\n\t\t\t\tPoint size = shell.getSize();\r\n\t\t\t\twFields.setSize(size.x-10, size.y-50);\r\n\t\t\t\twFields.table.setSize(size.x-10, size.y-50);\r\n\t\t\t\twFields.redraw();\r\n\t\t\t}\r\n\t\t};\r\n\t\tshell.addListener(SWT.Resize, lsResize);\r\n\r\n\t\twTabFolder.setSelection(0);\r\n\t\t\r\n\t\t// Set the shell size, based upon previous time...\r\n\t\tsetSize();\r\n\t\t\r\n\t\tgetData();\r\n\t\tinput.setChanged(changed);\r\n\t\t\r\n\t\tshell.open();\r\n\t\twhile (!shell.isDisposed())\r\n\t\t{\r\n\t\t\t\tif (!display.readAndDispatch()) display.sleep();\r\n\t\t}\r\n\t\treturn stepname;\r\n\t}","commit_id":"a24b300aee0018c5f034dfa0b8a66335d9241683","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void getInfo(TextFileOutputMeta tfoi)\r\n\t{\r\n\t\ttfoi.setFileName(   wFilename.getText() );\r\n\t\ttfoi.setFileFormat( wFormat.getText() );\r\n        tfoi.setEncoding( wEncoding.getText() );\r\n\t\ttfoi.setSeparator(  wSeparator.getText() );\r\n\t\ttfoi.setEnclosure(  wEnclosure.getText() );\r\n\t\ttfoi.setExtension(  wExtension.getText() );\r\n\t\ttfoi.setSplitEvery( Const.toInt(wSplitEvery.getText(), 0) );\r\n\t\ttfoi.setEndedLine( wEndedLine.getText() );\r\n\r\n        tfoi.setEnclosureForced( wEnclForced.getSelection() ); \r\n\t\ttfoi.setHeaderEnabled( wHeader.getSelection() ); \r\n\t\ttfoi.setFooterEnabled( wFooter.getSelection() );\r\n\t\ttfoi.setFileAppended( wAppend.getSelection() );\r\n\t\ttfoi.setStepNrInFilename( wAddStepnr.getSelection() );\r\n\t\ttfoi.setDateInFilename( wAddDate.getSelection() );\r\n\t\ttfoi.setTimeInFilename( wAddTime.getSelection() );\r\n\t\ttfoi.setZipped( wZipped.getSelection() );\r\n\t\ttfoi.setPadded( wPad.getSelection() );\r\n\r\n\t\tint i;\r\n\t\t//Table table = wFields.table;\r\n\t\t\r\n\t\tint nrfields = wFields.nrNonEmpty();\r\n\r\n\t\ttfoi.allocate(nrfields);\r\n\t\t\r\n\t\tfor (i=0;i<nrfields;i++)\r\n\t\t{\r\n\t\t    TextFileField field = new TextFileField();\r\n\t\t    \r\n\t\t\tTableItem item = wFields.getNonEmpty(i);\r\n\t\t\tfield.setName( item.getText(1) );\r\n\t\t\tfield.setType( item.getText(2) );\r\n\t\t\tfield.setFormat( item.getText(3) );\r\n\t\t\tfield.setLength( Const.toInt(item.getText(4), -1) );\r\n\t\t\tfield.setPrecision( Const.toInt(item.getText(5), -1) );\r\n\t\t\tfield.setCurrencySymbol( item.getText(6) );\r\n\t\t\tfield.setDecimalSymbol( item.getText(7) );\r\n\t\t\tfield.setGroupingSymbol( item.getText(8) );\r\n\t\t\tfield.setNullString( item.getText(9) );\r\n\t\t\t\r\n\t\t\ttfoi.getOutputFields()[i]  = field;\r\n\t\t}\r\n\t}","id":15589,"modified_method":"private void getInfo(TextFileOutputMeta tfoi)\r\n\t{\r\n\t\ttfoi.setFileName(   wFilename.getText() );\r\n\t\ttfoi.setFileFormat( wFormat.getText() );\r\n\t\ttfoi.setFileCompression( wCompression.getText() );\r\n        tfoi.setEncoding( wEncoding.getText() );\r\n\t\ttfoi.setSeparator(  wSeparator.getText() );\r\n\t\ttfoi.setEnclosure(  wEnclosure.getText() );\r\n\t\ttfoi.setExtension(  wExtension.getText() );\r\n\t\ttfoi.setSplitEvery( Const.toInt(wSplitEvery.getText(), 0) );\r\n\t\ttfoi.setEndedLine( wEndedLine.getText() );\r\n\r\n        tfoi.setEnclosureForced( wEnclForced.getSelection() ); \r\n\t\ttfoi.setHeaderEnabled( wHeader.getSelection() ); \r\n\t\ttfoi.setFooterEnabled( wFooter.getSelection() );\r\n\t\ttfoi.setFileAppended( wAppend.getSelection() );\r\n\t\ttfoi.setStepNrInFilename( wAddStepnr.getSelection() );\r\n\t\ttfoi.setDateInFilename( wAddDate.getSelection() );\r\n\t\ttfoi.setTimeInFilename( wAddTime.getSelection() );\r\n\t\ttfoi.setPadded( wPad.getSelection() );\r\n\r\n\t\tint i;\r\n\t\t//Table table = wFields.table;\r\n\t\t\r\n\t\tint nrfields = wFields.nrNonEmpty();\r\n\r\n\t\ttfoi.allocate(nrfields);\r\n\t\t\r\n\t\tfor (i=0;i<nrfields;i++)\r\n\t\t{\r\n\t\t    TextFileField field = new TextFileField();\r\n\t\t    \r\n\t\t\tTableItem item = wFields.getNonEmpty(i);\r\n\t\t\tfield.setName( item.getText(1) );\r\n\t\t\tfield.setType( item.getText(2) );\r\n\t\t\tfield.setFormat( item.getText(3) );\r\n\t\t\tfield.setLength( Const.toInt(item.getText(4), -1) );\r\n\t\t\tfield.setPrecision( Const.toInt(item.getText(5), -1) );\r\n\t\t\tfield.setCurrencySymbol( item.getText(6) );\r\n\t\t\tfield.setDecimalSymbol( item.getText(7) );\r\n\t\t\tfield.setGroupingSymbol( item.getText(8) );\r\n\t\t\tfield.setNullString( item.getText(9) );\r\n\t\t\t\r\n\t\t\ttfoi.getOutputFields()[i]  = field;\r\n\t\t}\r\n\t}","commit_id":"a24b300aee0018c5f034dfa0b8a66335d9241683","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void setDefault()\r\n\t{\r\n\t\tseparator  = \";\";\r\n\t\tenclosure  = \"\\\"\";\r\n        \r\n        enclosureForced  = false;\r\n\t\theaderEnabled    = true;\r\n\t\tfooterEnabled    = false;\r\n\t\tfileFormat       = \"DOS\";\r\n\t\tfileName         = \"file\";\r\n\t\textension        = \"txt\";\r\n\t\tstepNrInFilename = false;\r\n\t\tdateInFilename   = false;\r\n\t\ttimeInFilename   = false;\r\n\t\tzipped           = false;\r\n\t\tpadded           = false;\r\n\t\tsplitEvery       = 0;\r\n\r\n\t\tnewline = getNewLine(fileFormat);\r\n\t\t\t\r\n\t\tint i, nrfields=0;\r\n\t\t\r\n\t\tallocate(nrfields);\r\n\t\t\t\t\t\r\n\t\tfor (i=0;i<nrfields;i++)\r\n\t\t{\r\n\t\t\toutputFields[i] = new TextFileField();\r\n\r\n\t\t\toutputFields[i].setName( \"field\"+i );\t\t\t\t\r\n\t\t\toutputFields[i].setType( \"Number\" );\r\n\t\t\toutputFields[i].setFormat( \" 0,000,000.00;-0,000,000.00\" );\r\n\t\t\toutputFields[i].setCurrencySymbol( \"\" );\r\n\t\t\toutputFields[i].setDecimalSymbol( \",\" );\r\n\t\t\toutputFields[i].setGroupingSymbol(  \".\" );\r\n\t\t\toutputFields[i].setNullString( \"\" );\r\n\t\t\toutputFields[i].setLength( -1 );\r\n\t\t\toutputFields[i].setPrecision( -1 );\r\n\t\t}\r\n\t\tfileAppended=false;\r\n\t}","id":15590,"modified_method":"public void setDefault()\r\n\t{\r\n\t\tseparator  = \";\";\r\n\t\tenclosure  = \"\\\"\";\r\n        \r\n        enclosureForced  = false;\r\n\t\theaderEnabled    = true;\r\n\t\tfooterEnabled    = false;\r\n\t\tfileFormat       = \"DOS\";\r\n\t\tfileCompression  = \"None\";\r\n\t\tfileName         = \"file\";\r\n\t\textension        = \"txt\";\r\n\t\tstepNrInFilename = false;\r\n\t\tdateInFilename   = false;\r\n\t\ttimeInFilename   = false;\r\n\t\tpadded           = false;\r\n\t\tsplitEvery       = 0;\r\n\r\n\t\tnewline = getNewLine(fileFormat);\r\n\t\t\t\r\n\t\tint i, nrfields=0;\r\n\t\t\r\n\t\tallocate(nrfields);\r\n\t\t\t\t\t\r\n\t\tfor (i=0;i<nrfields;i++)\r\n\t\t{\r\n\t\t\toutputFields[i] = new TextFileField();\r\n\r\n\t\t\toutputFields[i].setName( \"field\"+i );\t\t\t\t\r\n\t\t\toutputFields[i].setType( \"Number\" );\r\n\t\t\toutputFields[i].setFormat( \" 0,000,000.00;-0,000,000.00\" );\r\n\t\t\toutputFields[i].setCurrencySymbol( \"\" );\r\n\t\t\toutputFields[i].setDecimalSymbol( \",\" );\r\n\t\t\toutputFields[i].setGroupingSymbol(  \".\" );\r\n\t\t\toutputFields[i].setNullString( \"\" );\r\n\t\t\toutputFields[i].setLength( -1 );\r\n\t\t\toutputFields[i].setPrecision( -1 );\r\n\t\t}\r\n\t\tfileAppended=false;\r\n\t}","commit_id":"a24b300aee0018c5f034dfa0b8a66335d9241683","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public String buildFilename(int stepnr, int splitnr, boolean ziparchive)\r\n\t{\r\n\t\tSimpleDateFormat daf     = new SimpleDateFormat();\r\n\r\n\t\t// Replace possible environment variables...\r\n\t\tString retval=StringUtil.environmentSubstitute( fileName );\r\n\t\t\r\n\t\tDate now = new Date();\r\n\t\t\r\n\t\tif (dateInFilename)\r\n\t\t{\r\n\t\t\tdaf.applyPattern(\"yyyMMdd\");\r\n\t\t\tString d = daf.format(now);\r\n\t\t\tretval+=\"_\"+d;\r\n\t\t}\r\n\t\tif (timeInFilename)\r\n\t\t{\r\n\t\t\tdaf.applyPattern(\"HHmmss\");\r\n\t\t\tString t = daf.format(now);\r\n\t\t\tretval+=\"_\"+t;\r\n\t\t}\r\n\t\tif (stepNrInFilename)\r\n\t\t{\r\n\t\t\tretval+=\"_\"+stepnr;\r\n\t\t}\r\n\t\tif (splitEvery>0)\r\n\t\t{\r\n\t\t\tretval+=\"_\"+splitnr;\r\n\t\t}\r\n\t\t\r\n\t\tif (zipped)\r\n\t\t{\r\n\t\t\tif (ziparchive)\r\n\t\t\t{\r\n\t\t\t\tretval+=\".zip\";\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (extension!=null && extension.length()!=0) \r\n\t\t\t\t{\r\n\t\t\t\t\tretval+=\".\"+extension;\r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (extension!=null && extension.length()!=0) \r\n\t\t\t{\r\n\t\t\t\tretval+=\".\"+extension;\r\n\t\t\t} \r\n\t\t}\r\n\t\treturn retval;\r\n\t}","id":15591,"modified_method":"public String buildFilename(int stepnr, int splitnr, boolean ziparchive)\r\n\t{\r\n\t\tSimpleDateFormat daf     = new SimpleDateFormat();\r\n\r\n\t\t// Replace possible environment variables...\r\n\t\tString retval=StringUtil.environmentSubstitute( fileName );\r\n\t\t\r\n\t\tDate now = new Date();\r\n\t\t\r\n\t\tif (dateInFilename)\r\n\t\t{\r\n\t\t\tdaf.applyPattern(\"yyyMMdd\");\r\n\t\t\tString d = daf.format(now);\r\n\t\t\tretval+=\"_\"+d;\r\n\t\t}\r\n\t\tif (timeInFilename)\r\n\t\t{\r\n\t\t\tdaf.applyPattern(\"HHmmss\");\r\n\t\t\tString t = daf.format(now);\r\n\t\t\tretval+=\"_\"+t;\r\n\t\t}\r\n\t\tif (stepNrInFilename)\r\n\t\t{\r\n\t\t\tretval+=\"_\"+stepnr;\r\n\t\t}\r\n\t\tif (splitEvery>0)\r\n\t\t{\r\n\t\t\tretval+=\"_\"+splitnr;\r\n\t\t}\r\n\t\t\r\n\t\tif (fileCompression.equals(\"Zip\"))\r\n\t\t{\r\n\t\t\tif (ziparchive)\r\n\t\t\t{\r\n\t\t\t\tretval+=\".zip\";\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (extension!=null && extension.length()!=0) \r\n\t\t\t\t{\r\n\t\t\t\t\tretval+=\".\"+extension;\r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (extension!=null && extension.length()!=0) \r\n\t\t\t{\r\n\t\t\t\tretval+=\".\"+extension;\r\n\t\t\t}\r\n\t\t\tif (fileCompression.equals(\"GZip\"))\r\n\t\t\t{\r\n\t\t\t\tretval += \".gz\";\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn retval;\r\n\t}","commit_id":"a24b300aee0018c5f034dfa0b8a66335d9241683","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void readData(Node stepnode)\r\n\t\tthrows KettleXMLException\r\n\t{\r\n\t\ttry\r\n\t\t{\r\n\t\t\tseparator = XMLHandler.getTagValue(stepnode, \"separator\");\r\n\t\t\tif (separator==null) separator=\"\";\r\n\t\t\t\r\n\t\t\tenclosure=XMLHandler.getTagValue(stepnode, \"enclosure\");\r\n\t\t\tif (enclosure==null) enclosure=\"\";\r\n\r\n            enclosureForced = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"enclosure_forced\"));\r\n\r\n\t\t\theaderEnabled    = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"header\"));\r\n\t\t\tfooterEnabled    = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"footer\"));\r\n\t\t\tfileFormat       = XMLHandler.getTagValue(stepnode, \"format\");\r\n            encoding         = XMLHandler.getTagValue(stepnode, \"encoding\");\r\n\r\n            endedLine  = XMLHandler.getTagValue(stepnode, \"endedLine\");\r\n\t\t\tif (endedLine==null) endedLine=\"\";\r\n\r\n\t\t\tfileName  = XMLHandler.getTagValue(stepnode, \"file\", \"name\");\r\n\t\t\textension = XMLHandler.getTagValue(stepnode, \"file\", \"extention\");\r\n\t\t\tfileAppended    = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"file\", \"append\"));\r\n\t\t\tstepNrInFilename     = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"file\", \"split\"));\r\n\t\t\tdateInFilename  = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"file\", \"add_date\"));\r\n\t\t\ttimeInFilename  = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"file\", \"add_time\"));\r\n\t\t\tzipped    = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"file\", \"zipped\"));\r\n\t\t\tpadded       = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"file\", \"pad\"));\r\n\t\t\tsplitEvery=Const.toInt(XMLHandler.getTagValue(stepnode, \"file\", \"splitevery\"), 0);\r\n\t\t\t\r\n\t\t\tnewline = getNewLine(fileFormat);\r\n\t\t\t\r\n\t\t\tNode fields = XMLHandler.getSubNode(stepnode, \"fields\");\r\n\t\t\tint nrfields= XMLHandler.countNodes(fields, \"field\");\r\n\t\r\n\t\t\tallocate(nrfields);\r\n\t\t\t\r\n\t\t\tfor (int i=0;i<nrfields;i++)\r\n\t\t\t{\r\n\t\t\t\tNode fnode = XMLHandler.getSubNodeByNr(fields, \"field\", i);\r\n\t\t\t\r\n\t\t\t\toutputFields[i] = new TextFileField();\r\n\t\t\t\toutputFields[i].setName( XMLHandler.getTagValue(fnode, \"name\") );\r\n\t\t\t\toutputFields[i].setType( XMLHandler.getTagValue(fnode, \"type\") );\r\n\t\t\t\toutputFields[i].setFormat( XMLHandler.getTagValue(fnode, \"format\") );\r\n\t\t\t\toutputFields[i].setCurrencySymbol( XMLHandler.getTagValue(fnode, \"currency\") );\r\n\t\t\t\toutputFields[i].setDecimalSymbol( XMLHandler.getTagValue(fnode, \"decimal\") );\r\n\t\t\t\toutputFields[i].setGroupingSymbol( XMLHandler.getTagValue(fnode, \"group\") );\r\n\t\t\t\toutputFields[i].setNullString( XMLHandler.getTagValue(fnode, \"nullif\") );\r\n\t\t\t\toutputFields[i].setLength( Const.toInt(XMLHandler.getTagValue(fnode, \"length\"), -1) );\r\n\t\t\t\toutputFields[i].setPrecision( Const.toInt(XMLHandler.getTagValue(fnode, \"precision\"), -1) );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow new KettleXMLException(\"Unable to load step info from XML\", e);\r\n\t\t}\r\n\t}","id":15592,"modified_method":"private void readData(Node stepnode)\r\n\t\tthrows KettleXMLException\r\n\t{\r\n\t\ttry\r\n\t\t{\r\n\t\t\tseparator = XMLHandler.getTagValue(stepnode, \"separator\");\r\n\t\t\tif (separator==null) separator=\"\";\r\n\t\t\t\r\n\t\t\tenclosure=XMLHandler.getTagValue(stepnode, \"enclosure\");\r\n\t\t\tif (enclosure==null) enclosure=\"\";\r\n\r\n            enclosureForced = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"enclosure_forced\"));\r\n\r\n\t\t\theaderEnabled    = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"header\"));\r\n\t\t\tfooterEnabled    = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"footer\"));\r\n\t\t\tfileFormat       = XMLHandler.getTagValue(stepnode, \"format\");\r\n\t\t\tfileCompression       = XMLHandler.getTagValue(stepnode, \"compression\");\r\n\t\t\tif (fileCompression == null) {\r\n\t\t\t  if (\"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"file\", \"zipped\")))\r\n\t\t\t\t\t  fileCompression = \"Zip\";\r\n\t\t\t  else\r\n\t\t\t\t  fileCompression = \"None\";\r\n\t\t\t}\r\n            encoding         = XMLHandler.getTagValue(stepnode, \"encoding\");\r\n\r\n            endedLine  = XMLHandler.getTagValue(stepnode, \"endedLine\");\r\n\t\t\tif (endedLine==null) endedLine=\"\";\r\n\r\n\t\t\tfileName  = XMLHandler.getTagValue(stepnode, \"file\", \"name\");\r\n\t\t\textension = XMLHandler.getTagValue(stepnode, \"file\", \"extention\");\r\n\t\t\tfileAppended    = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"file\", \"append\"));\r\n\t\t\tstepNrInFilename     = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"file\", \"split\"));\r\n\t\t\tdateInFilename  = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"file\", \"add_date\"));\r\n\t\t\ttimeInFilename  = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"file\", \"add_time\"));\r\n\t\t\tpadded       = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"file\", \"pad\"));\r\n\t\t\tsplitEvery=Const.toInt(XMLHandler.getTagValue(stepnode, \"file\", \"splitevery\"), 0);\r\n\t\t\t\r\n\t\t\tnewline = getNewLine(fileFormat);\r\n\t\t\t\r\n\t\t\tNode fields = XMLHandler.getSubNode(stepnode, \"fields\");\r\n\t\t\tint nrfields= XMLHandler.countNodes(fields, \"field\");\r\n\t\r\n\t\t\tallocate(nrfields);\r\n\t\t\t\r\n\t\t\tfor (int i=0;i<nrfields;i++)\r\n\t\t\t{\r\n\t\t\t\tNode fnode = XMLHandler.getSubNodeByNr(fields, \"field\", i);\r\n\t\t\t\r\n\t\t\t\toutputFields[i] = new TextFileField();\r\n\t\t\t\toutputFields[i].setName( XMLHandler.getTagValue(fnode, \"name\") );\r\n\t\t\t\toutputFields[i].setType( XMLHandler.getTagValue(fnode, \"type\") );\r\n\t\t\t\toutputFields[i].setFormat( XMLHandler.getTagValue(fnode, \"format\") );\r\n\t\t\t\toutputFields[i].setCurrencySymbol( XMLHandler.getTagValue(fnode, \"currency\") );\r\n\t\t\t\toutputFields[i].setDecimalSymbol( XMLHandler.getTagValue(fnode, \"decimal\") );\r\n\t\t\t\toutputFields[i].setGroupingSymbol( XMLHandler.getTagValue(fnode, \"group\") );\r\n\t\t\t\toutputFields[i].setNullString( XMLHandler.getTagValue(fnode, \"nullif\") );\r\n\t\t\t\toutputFields[i].setLength( Const.toInt(XMLHandler.getTagValue(fnode, \"length\"), -1) );\r\n\t\t\t\toutputFields[i].setPrecision( Const.toInt(XMLHandler.getTagValue(fnode, \"precision\"), -1) );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow new KettleXMLException(\"Unable to load step info from XML\", e);\r\n\t\t}\r\n\t}","commit_id":"a24b300aee0018c5f034dfa0b8a66335d9241683","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void saveRep(Repository rep, long id_transformation, long id_step)\r\n\t\tthrows KettleException\r\n\t{\r\n\t\ttry\r\n\t\t{\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"separator\",        separator);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"enclosure\",        enclosure);\r\n            rep.saveStepAttribute(id_transformation, id_step, \"enclosure_forced\", enclosureForced);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"header\",           headerEnabled);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"footer\",           footerEnabled);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"format\",           fileFormat);\r\n            rep.saveStepAttribute(id_transformation, id_step, \"encoding\",         encoding);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"file_name\",        fileName);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"file_extention\",   extension);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"file_append\",      fileAppended);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"file_split\",       splitEvery);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"file_add_stepnr\",  stepNrInFilename);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"file_add_date\",    dateInFilename);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"file_add_time\",    timeInFilename);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"file_zipped\",      zipped);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"file_pad\",         padded);\r\n\t\t\t\r\n\t\t\tfor (int i=0;i<outputFields.length;i++)\r\n\t\t\t{\r\n\t\t\t    TextFileField field = outputFields[i];\r\n\t\t\t    \r\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"field_name\",      field.getName());\r\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"field_type\",      field.getTypeDesc());\r\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"field_format\",    field.getFormat());\r\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"field_currency\",  field.getCurrencySymbol());\r\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"field_decimal\",   field.getDecimalSymbol());\r\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"field_group\",     field.getGroupingSymbol());\r\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"field_nullif\",    field.getNullString());\r\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"field_length\",    field.getLength());\r\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"field_precision\", field.getPrecision());\r\n\t\t\t}\r\n            rep.saveStepAttribute(id_transformation, id_step, \"endedLine\",         endedLine);\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow new KettleException(\"Unable to save step information to the repository for id_step=\"+id_step, e);\r\n\t\t}\r\n\t}","id":15593,"modified_method":"public void saveRep(Repository rep, long id_transformation, long id_step)\r\n\t\tthrows KettleException\r\n\t{\r\n\t\ttry\r\n\t\t{\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"separator\",        separator);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"enclosure\",        enclosure);\r\n            rep.saveStepAttribute(id_transformation, id_step, \"enclosure_forced\", enclosureForced);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"header\",           headerEnabled);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"footer\",           footerEnabled);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"format\",           fileFormat);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"compression\",      fileCompression);\r\n            rep.saveStepAttribute(id_transformation, id_step, \"encoding\",         encoding);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"file_name\",        fileName);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"file_extention\",   extension);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"file_append\",      fileAppended);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"file_split\",       splitEvery);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"file_add_stepnr\",  stepNrInFilename);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"file_add_date\",    dateInFilename);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"file_add_time\",    timeInFilename);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"file_pad\",         padded);\r\n\t\t\t\r\n\t\t\tfor (int i=0;i<outputFields.length;i++)\r\n\t\t\t{\r\n\t\t\t    TextFileField field = outputFields[i];\r\n\t\t\t    \r\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"field_name\",      field.getName());\r\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"field_type\",      field.getTypeDesc());\r\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"field_format\",    field.getFormat());\r\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"field_currency\",  field.getCurrencySymbol());\r\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"field_decimal\",   field.getDecimalSymbol());\r\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"field_group\",     field.getGroupingSymbol());\r\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"field_nullif\",    field.getNullString());\r\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"field_length\",    field.getLength());\r\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"field_precision\", field.getPrecision());\r\n\t\t\t}\r\n            rep.saveStepAttribute(id_transformation, id_step, \"endedLine\",         endedLine);\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow new KettleException(\"Unable to save step information to the repository for id_step=\"+id_step, e);\r\n\t\t}\r\n\t}","commit_id":"a24b300aee0018c5f034dfa0b8a66335d9241683","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public String getXML()\r\n\t{\r\n\t\tStringBuffer retval=new StringBuffer();\r\n\t\t\r\n\t\tretval.append(\"    \"+XMLHandler.addTagValue(\"separator\", separator));\r\n\t\tretval.append(\"    \"+XMLHandler.addTagValue(\"enclosure\", enclosure));\r\n        retval.append(\"    \"+XMLHandler.addTagValue(\"enclosure_forced\", enclosureForced));\r\n\t\tretval.append(\"    \"+XMLHandler.addTagValue(\"header\",    headerEnabled));\r\n\t\tretval.append(\"    \"+XMLHandler.addTagValue(\"footer\",    footerEnabled));\r\n\t\tretval.append(\"    \"+XMLHandler.addTagValue(\"format\",    fileFormat));\r\n        retval.append(\"    \"+XMLHandler.addTagValue(\"encoding\",  encoding));\r\n        retval.append(\"    \"+XMLHandler.addTagValue(\"endedLine\",  endedLine));\r\n\r\n\t\tretval.append(\"    <file>\"+Const.CR);\r\n\t\tretval.append(\"      \"+XMLHandler.addTagValue(\"name\",       fileName));\r\n\t\tretval.append(\"      \"+XMLHandler.addTagValue(\"extention\",  extension));\r\n\t\tretval.append(\"      \"+XMLHandler.addTagValue(\"append\",     fileAppended));\r\n\t\tretval.append(\"      \"+XMLHandler.addTagValue(\"split\",      stepNrInFilename));\r\n\t\tretval.append(\"      \"+XMLHandler.addTagValue(\"add_date\",   dateInFilename));\r\n\t\tretval.append(\"      \"+XMLHandler.addTagValue(\"add_time\",   timeInFilename));\r\n\t\tretval.append(\"      \"+XMLHandler.addTagValue(\"zipped\",     zipped));\r\n\t\tretval.append(\"      \"+XMLHandler.addTagValue(\"pad\",        padded));\r\n\t\tretval.append(\"      \"+XMLHandler.addTagValue(\"splitevery\", splitEvery));\r\n\t\tretval.append(\"      <\/file>\"+Const.CR);\r\n        \r\n\t\tretval.append(\"    <fields>\"+Const.CR);\r\n\t\tfor (int i=0;i<outputFields.length;i++)\r\n\t\t{\r\n\t\t    TextFileField field = outputFields[i];\r\n\t\t    \r\n\t\t\tif (field.getName()!=null && field.getName().length()!=0)\r\n\t\t\t{\r\n\t\t\t\tretval.append(\"      <field>\"+Const.CR);\r\n\t\t\t\tretval.append(\"        \"+XMLHandler.addTagValue(\"name\",      field.getName()));\r\n\t\t\t\tretval.append(\"        \"+XMLHandler.addTagValue(\"type\",      field.getTypeDesc()));\r\n\t\t\t\tretval.append(\"        \"+XMLHandler.addTagValue(\"format\",    field.getFormat()));\r\n\t\t\t\tretval.append(\"        \"+XMLHandler.addTagValue(\"currency\",  field.getCurrencySymbol()));\r\n\t\t\t\tretval.append(\"        \"+XMLHandler.addTagValue(\"decimal\",   field.getDecimalSymbol()));\r\n\t\t\t\tretval.append(\"        \"+XMLHandler.addTagValue(\"group\",     field.getGroupingSymbol()));\r\n\t\t\t\tretval.append(\"        \"+XMLHandler.addTagValue(\"nullif\",    field.getNullString()));\r\n\t\t\t\tretval.append(\"        \"+XMLHandler.addTagValue(\"length\",    field.getLength()));\r\n\t\t\t\tretval.append(\"        \"+XMLHandler.addTagValue(\"precision\", field.getPrecision()));\r\n\t\t\t\tretval.append(\"        <\/field>\"+Const.CR);\r\n\t\t\t}\r\n\t\t}\r\n\t\tretval.append(\"      <\/fields>\"+Const.CR);\r\n\r\n\t\treturn retval.toString();\r\n\t}","id":15594,"modified_method":"public String getXML()\r\n\t{\r\n\t\tStringBuffer retval=new StringBuffer();\r\n\t\t\r\n\t\tretval.append(\"    \"+XMLHandler.addTagValue(\"separator\", separator));\r\n\t\tretval.append(\"    \"+XMLHandler.addTagValue(\"enclosure\", enclosure));\r\n        retval.append(\"    \"+XMLHandler.addTagValue(\"enclosure_forced\", enclosureForced));\r\n\t\tretval.append(\"    \"+XMLHandler.addTagValue(\"header\",    headerEnabled));\r\n\t\tretval.append(\"    \"+XMLHandler.addTagValue(\"footer\",    footerEnabled));\r\n\t\tretval.append(\"    \"+XMLHandler.addTagValue(\"format\",    fileFormat));\r\n\t\tretval.append(\"    \"+XMLHandler.addTagValue(\"compression\",    fileCompression));\r\n        retval.append(\"    \"+XMLHandler.addTagValue(\"encoding\",  encoding));\r\n        retval.append(\"    \"+XMLHandler.addTagValue(\"endedLine\",  endedLine));\r\n\r\n\t\tretval.append(\"    <file>\"+Const.CR);\r\n\t\tretval.append(\"      \"+XMLHandler.addTagValue(\"name\",       fileName));\r\n\t\tretval.append(\"      \"+XMLHandler.addTagValue(\"extention\",  extension));\r\n\t\tretval.append(\"      \"+XMLHandler.addTagValue(\"append\",     fileAppended));\r\n\t\tretval.append(\"      \"+XMLHandler.addTagValue(\"split\",      stepNrInFilename));\r\n\t\tretval.append(\"      \"+XMLHandler.addTagValue(\"add_date\",   dateInFilename));\r\n\t\tretval.append(\"      \"+XMLHandler.addTagValue(\"add_time\",   timeInFilename));\r\n\t\tretval.append(\"      \"+XMLHandler.addTagValue(\"pad\",        padded));\r\n\t\tretval.append(\"      \"+XMLHandler.addTagValue(\"splitevery\", splitEvery));\r\n\t\tretval.append(\"      <\/file>\"+Const.CR);\r\n        \r\n\t\tretval.append(\"    <fields>\"+Const.CR);\r\n\t\tfor (int i=0;i<outputFields.length;i++)\r\n\t\t{\r\n\t\t    TextFileField field = outputFields[i];\r\n\t\t    \r\n\t\t\tif (field.getName()!=null && field.getName().length()!=0)\r\n\t\t\t{\r\n\t\t\t\tretval.append(\"      <field>\"+Const.CR);\r\n\t\t\t\tretval.append(\"        \"+XMLHandler.addTagValue(\"name\",      field.getName()));\r\n\t\t\t\tretval.append(\"        \"+XMLHandler.addTagValue(\"type\",      field.getTypeDesc()));\r\n\t\t\t\tretval.append(\"        \"+XMLHandler.addTagValue(\"format\",    field.getFormat()));\r\n\t\t\t\tretval.append(\"        \"+XMLHandler.addTagValue(\"currency\",  field.getCurrencySymbol()));\r\n\t\t\t\tretval.append(\"        \"+XMLHandler.addTagValue(\"decimal\",   field.getDecimalSymbol()));\r\n\t\t\t\tretval.append(\"        \"+XMLHandler.addTagValue(\"group\",     field.getGroupingSymbol()));\r\n\t\t\t\tretval.append(\"        \"+XMLHandler.addTagValue(\"nullif\",    field.getNullString()));\r\n\t\t\t\tretval.append(\"        \"+XMLHandler.addTagValue(\"length\",    field.getLength()));\r\n\t\t\t\tretval.append(\"        \"+XMLHandler.addTagValue(\"precision\", field.getPrecision()));\r\n\t\t\t\tretval.append(\"        <\/field>\"+Const.CR);\r\n\t\t\t}\r\n\t\t}\r\n\t\tretval.append(\"      <\/fields>\"+Const.CR);\r\n\r\n\t\treturn retval.toString();\r\n\t}","commit_id":"a24b300aee0018c5f034dfa0b8a66335d9241683","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void readRep(Repository rep, long id_step, ArrayList databases, Hashtable counters)\r\n\t\tthrows KettleException\r\n\t{\r\n\t\ttry\r\n\t\t{\r\n\t\t\tseparator       =      rep.getStepAttributeString (id_step, \"separator\");\r\n\t\t\tenclosure       =      rep.getStepAttributeString (id_step, \"enclosure\");\r\n            enclosureForced =      rep.getStepAttributeBoolean(id_step, \"enclosure_forced\");\r\n\t\t\theaderEnabled   =      rep.getStepAttributeBoolean(id_step, \"header\");\r\n\t\t\tfooterEnabled   =      rep.getStepAttributeBoolean(id_step, \"footer\");   \r\n\t\t\tfileFormat      =      rep.getStepAttributeString (id_step, \"format\");  \r\n            encoding        =      rep.getStepAttributeString (id_step, \"encoding\");\r\n            \r\n\t\t\tfileName        =      rep.getStepAttributeString (id_step, \"file_name\");  \r\n\t\t\textension       =      rep.getStepAttributeString (id_step, \"file_extention\");\r\n\t\t\tfileAppended          =      rep.getStepAttributeBoolean(id_step, \"file_append\");\r\n\t\t\tsplitEvery      = (int)rep.getStepAttributeInteger(id_step, \"file_split\");\r\n\t\t\tstepNrInFilename      =      rep.getStepAttributeBoolean(id_step, \"file_add_stepnr\");\r\n\t\t\tdateInFilename        =      rep.getStepAttributeBoolean(id_step, \"file_add_date\");\r\n\t\t\ttimeInFilename        =      rep.getStepAttributeBoolean(id_step, \"file_add_time\");\r\n\t\t\tzipped          =      rep.getStepAttributeBoolean(id_step, \"file_zipped\");\r\n\t\t\tpadded             =      rep.getStepAttributeBoolean(id_step, \"file_pad\");\r\n\t\r\n\t\t\tnewline = getNewLine(fileFormat);\r\n\t\t\t\r\n\t\t\tint nrfields = rep.countNrStepAttributes(id_step, \"field_name\");\r\n\t\t\t\r\n\t\t\tallocate(nrfields);\r\n\t\t\t\r\n\t\t\tfor (int i=0;i<nrfields;i++)\r\n\t\t\t{\r\n\t\t\t    outputFields[i] = new TextFileField();\r\n\r\n\t\t\t    outputFields[i].setName(    \t\trep.getStepAttributeString (id_step, i, \"field_name\") );\r\n\t\t\t    outputFields[i].setType( \t\t\trep.getStepAttributeString (id_step, i, \"field_type\") );\r\n\t\t\t    outputFields[i].setFormat(  \t\trep.getStepAttributeString (id_step, i, \"field_format\") );\r\n\t\t\t    outputFields[i].setCurrencySymbol(\trep.getStepAttributeString (id_step, i, \"field_currency\") );\r\n\t\t\t    outputFields[i].setDecimalSymbol(\trep.getStepAttributeString (id_step, i, \"field_decimal\") );\r\n\t\t\t    outputFields[i].setGroupingSymbol(\trep.getStepAttributeString (id_step, i, \"field_group\") );\r\n\t\t\t    outputFields[i].setNullString(\t\trep.getStepAttributeString (id_step, i, \"field_nullif\") );\r\n\t\t\t    outputFields[i].setLength(\t   (int)rep.getStepAttributeInteger(id_step, i, \"field_length\") );\r\n\t\t\t    outputFields[i].setPrecision(  (int)rep.getStepAttributeInteger(id_step, i, \"field_precision\") );\r\n\t\t\t}\r\n            endedLine        =      rep.getStepAttributeString (id_step, \"endedLine\");\r\n\t\t\t\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow new KettleException(\"Unexpected error reading step information from the repository\", e);\r\n\t\t}\r\n\t}","id":15595,"modified_method":"public void readRep(Repository rep, long id_step, ArrayList databases, Hashtable counters)\r\n\t\tthrows KettleException\r\n\t{\r\n\t\ttry\r\n\t\t{\r\n\t\t\tseparator       =      rep.getStepAttributeString (id_step, \"separator\");\r\n\t\t\tenclosure       =      rep.getStepAttributeString (id_step, \"enclosure\");\r\n            enclosureForced =      rep.getStepAttributeBoolean(id_step, \"enclosure_forced\");\r\n\t\t\theaderEnabled   =      rep.getStepAttributeBoolean(id_step, \"header\");\r\n\t\t\tfooterEnabled   =      rep.getStepAttributeBoolean(id_step, \"footer\");   \r\n\t\t\tfileFormat      =      rep.getStepAttributeString (id_step, \"format\");  \r\n\t\t\tfileCompression =      rep.getStepAttributeString (id_step, \"compression\");  \r\n            encoding        =      rep.getStepAttributeString (id_step, \"encoding\");\r\n            \r\n\t\t\tfileName        =      rep.getStepAttributeString (id_step, \"file_name\");  \r\n\t\t\textension       =      rep.getStepAttributeString (id_step, \"file_extention\");\r\n\t\t\tfileAppended          =      rep.getStepAttributeBoolean(id_step, \"file_append\");\r\n\t\t\tsplitEvery      = (int)rep.getStepAttributeInteger(id_step, \"file_split\");\r\n\t\t\tstepNrInFilename      =      rep.getStepAttributeBoolean(id_step, \"file_add_stepnr\");\r\n\t\t\tdateInFilename        =      rep.getStepAttributeBoolean(id_step, \"file_add_date\");\r\n\t\t\ttimeInFilename        =      rep.getStepAttributeBoolean(id_step, \"file_add_time\");\r\n\t\t\tpadded             =      rep.getStepAttributeBoolean(id_step, \"file_pad\");\r\n\t\r\n\t\t\tnewline = getNewLine(fileFormat);\r\n\t\t\t\r\n\t\t\tint nrfields = rep.countNrStepAttributes(id_step, \"field_name\");\r\n\t\t\t\r\n\t\t\tallocate(nrfields);\r\n\t\t\t\r\n\t\t\tfor (int i=0;i<nrfields;i++)\r\n\t\t\t{\r\n\t\t\t    outputFields[i] = new TextFileField();\r\n\r\n\t\t\t    outputFields[i].setName(    \t\trep.getStepAttributeString (id_step, i, \"field_name\") );\r\n\t\t\t    outputFields[i].setType( \t\t\trep.getStepAttributeString (id_step, i, \"field_type\") );\r\n\t\t\t    outputFields[i].setFormat(  \t\trep.getStepAttributeString (id_step, i, \"field_format\") );\r\n\t\t\t    outputFields[i].setCurrencySymbol(\trep.getStepAttributeString (id_step, i, \"field_currency\") );\r\n\t\t\t    outputFields[i].setDecimalSymbol(\trep.getStepAttributeString (id_step, i, \"field_decimal\") );\r\n\t\t\t    outputFields[i].setGroupingSymbol(\trep.getStepAttributeString (id_step, i, \"field_group\") );\r\n\t\t\t    outputFields[i].setNullString(\t\trep.getStepAttributeString (id_step, i, \"field_nullif\") );\r\n\t\t\t    outputFields[i].setLength(\t   (int)rep.getStepAttributeInteger(id_step, i, \"field_length\") );\r\n\t\t\t    outputFields[i].setPrecision(  (int)rep.getStepAttributeInteger(id_step, i, \"field_precision\") );\r\n\t\t\t}\r\n            endedLine        =      rep.getStepAttributeString (id_step, \"endedLine\");\r\n\t\t\t\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow new KettleException(\"Unexpected error reading step information from the repository\", e);\r\n\t\t}\r\n\t}","commit_id":"a24b300aee0018c5f034dfa0b8a66335d9241683","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void ok()\n\t{\n\t\tgetInfo(input);\n        \n        if (input.getName()!=null && input.getName().length()>0)\n        {\n            dispose();\n        }\n        else\n        {\n            MessageBox box = new MessageBox(shell, SWT.ICON_ERROR | SWT.OK );\n            box.setMessage(BaseMessages.getString(PKG, \"RepositoryDialog.Dialog.ErrorNoName.Message\")); //$NON-NLS-1$\n            box.setText(BaseMessages.getString(PKG, \"RepositoryDialog.Dialog.ErrorNoName.Title\")); //$NON-NLS-1$\n            box.open();\n       }\n\t}","id":15596,"modified_method":"private void ok() {\r\n    getInfo(input);\r\n    if (input.getConnection() != null) {\r\n      if (input.getName() != null && input.getName().length() > 0) {\r\n        if (input.getDescription() != null && input.getDescription().length() > 0) {\r\n          dispose();\r\n        } else {\r\n          MessageBox box = new MessageBox(shell, SWT.ICON_ERROR | SWT.OK);\r\n          box.setMessage(BaseMessages.getString(PKG, \"RepositoryDialog.Dialog.ErrorNoName.Message\")); //$NON-NLS-1$\r\n          box.setText(BaseMessages.getString(PKG, \"RepositoryDialog.Dialog.Error.Title\")); //$NON-NLS-1$\r\n          box.open();\r\n        }\r\n      } else {\r\n        MessageBox box = new MessageBox(shell, SWT.ICON_ERROR | SWT.OK);\r\n        box.setMessage(BaseMessages.getString(PKG, \"RepositoryDialog.Dialog.ErrorNoId.Message\")); //$NON-NLS-1$\r\n        box.setText(BaseMessages.getString(PKG, \"RepositoryDialog.Dialog.Error.Title\")); //$NON-NLS-1$\r\n        box.open();        \r\n      }\r\n    } else {\r\n      MessageBox box = new MessageBox(shell, SWT.ICON_ERROR | SWT.OK);\r\n      box.setMessage(BaseMessages.getString(PKG, \"RepositoryDialog.Dialog.ErrorNoConnection.Message\")); //$NON-NLS-1$\r\n      box.setText(BaseMessages.getString(PKG, \"RepositoryDialog.Dialog.Error.Title\")); //$NON-NLS-1$\r\n      box.open();      \r\n    }\r\n\r\n  }","commit_id":"76a32d8c41189135e602e44ba7d24493c7461bc3","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void getInfo(KettleDatabaseRepositoryMeta info)\n\t{\n\t\tinfo.setName(wName.getText());\n\t\tinfo.setDescription(wDescription.getText());\n\t\t\n\t\tint idx = wConnection.getSelectionIndex();\n\t\tif (idx>=0)\n\t\t{\n\t\t\tDatabaseMeta dbinfo = repositories.getDatabase(idx);\n            info.setConnection(dbinfo);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tinfo.setConnection(null);\n\t\t}\n\t}","id":15597,"modified_method":"private void getInfo(KettleDatabaseRepositoryMeta info) {\r\n    info.setName(wId.getText());\r\n    info.setDescription(wName.getText());\r\n\r\n    int idx = wConnection.getSelectionIndex();\r\n    if (idx >= 0) {\r\n      DatabaseMeta dbinfo = repositories.getDatabase(idx);\r\n      info.setConnection(dbinfo);\r\n    } else {\r\n      info.setConnection(null);\r\n    }\r\n  }","commit_id":"76a32d8c41189135e602e44ba7d24493c7461bc3","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\n\t * Copy information from the meta-data input to the dialog fields.\n\t */ \n\tpublic void getData()\n\t{\n\t\tif (input.getName()!=null) wName.setText(input.getName());\n\t\tif (input.getDescription()!=null) wDescription.setText(input.getDescription());\n\t\tif (input.getConnection()!=null) wConnection.setText(input.getConnection().getName());\t\n\t}","id":15598,"modified_method":"/**\r\n   * Copy information from the meta-data input to the dialog fields.\r\n   */\r\n  public void getData() {\r\n    if (input.getName() != null)\r\n      wId.setText(input.getName());\r\n    if (input.getDescription() != null)\r\n      wName.setText(input.getDescription());\r\n    if (input.getConnection() != null)\r\n      wConnection.setText(input.getConnection().getName());\r\n  }","commit_id":"76a32d8c41189135e602e44ba7d24493c7461bc3","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void ok()\n\t{\n\t\tgetInfo(input);\n        \n        if (input.getName()!=null && input.getName().length()>0)\n        {\n            dispose();\n        }\n        else\n        {\n            MessageBox box = new MessageBox(shell, SWT.ICON_ERROR | SWT.OK );\n            box.setMessage(BaseMessages.getString(PKG, \"KettleFileRepositoryDialog.Dialog.ErrorNoName.Message\")); //$NON-NLS-1$\n            box.setText(BaseMessages.getString(PKG, \"KettleFileRepositoryDialog.Dialog.ErrorNoName.Title\")); //$NON-NLS-1$\n            box.open();\n       }\n\t}","id":15599,"modified_method":"private void ok() {\n    getInfo(input);\n    if (input.getBaseDirectory() != null && input.getBaseDirectory().length() > 0) {\n      if (input.getName() != null && input.getName().length() > 0) {\n        if (input.getDescription() != null && input.getDescription().length() > 0) {\n          dispose();\n        } else {\n          MessageBox box = new MessageBox(shell, SWT.ICON_ERROR | SWT.OK);\n          box.setMessage(BaseMessages.getString(PKG, \"KettleFileRepositoryDialog.Dialog.ErrorNoName.Message\")); //$NON-NLS-1$\n          box.setText(BaseMessages.getString(PKG, \"KettleFileRepositoryDialog.Dialog.ErrorNoName.Title\")); //$NON-NLS-1$\n          box.open();\n        }\n      } else {\n        MessageBox box = new MessageBox(shell, SWT.ICON_ERROR | SWT.OK);\n        box.setMessage(BaseMessages.getString(PKG, \"KettleFileRepositoryDialog.Dialog.ErrorNoId.Message\")); //$NON-NLS-1$\n        box.setText(BaseMessages.getString(PKG, \"KettleFileRepositoryDialog.Dialog.ErrorNoId.Title\")); //$NON-NLS-1$\n        box.open();\n      }\n    } else {\n      MessageBox box = new MessageBox(shell, SWT.ICON_ERROR | SWT.OK);\n      box.setMessage(BaseMessages.getString(PKG, \"KettleFileRepositoryDialog.Dialog.ErrorNoBaseDir.Message\")); //$NON-NLS-1$\n      box.setText(BaseMessages.getString(PKG, \"KettleFileRepositoryDialog.Dialog.ErrorNoBaseDir.Title\")); //$NON-NLS-1$\n      box.open();\n    }\n  }","commit_id":"76a32d8c41189135e602e44ba7d24493c7461bc3","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\n\t * Copy information from the meta-data input to the dialog fields.\n\t */ \n\tpublic void getData()\n\t{\n\t\twName.setText(Const.NVL(input.getName(), \"\"));\n\t\twDescription.setText(Const.NVL(input.getDescription(), \"\"));\n\t\twBaseDir.setText(Const.NVL(input.getBaseDirectory(), \"\"));\t\n\t\twReadOnly.setSelection(input.isReadOnly());\n\t}","id":15600,"modified_method":"/**\n   * Copy information from the meta-data input to the dialog fields.\n   */\n  public void getData() {\n    wId.setText(Const.NVL(input.getName(), \"\"));\n    wName.setText(Const.NVL(input.getDescription(), \"\"));\n    wBaseDir.setText(Const.NVL(input.getBaseDirectory(), \"\"));\n    wReadOnly.setSelection(input.isReadOnly());\n  }","commit_id":"76a32d8c41189135e602e44ba7d24493c7461bc3","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void getInfo(KettleFileRepositoryMeta info)\n\t{\n\t\tinfo.setName(wName.getText());\n\t\tinfo.setDescription(wDescription.getText());\n\t\tinfo.setBaseDirectory(wBaseDir.getText());\n\t\tinfo.setReadOnly(wReadOnly.getSelection());\n\t}","id":15601,"modified_method":"private void getInfo(KettleFileRepositoryMeta info) {\n    info.setName(wId.getText());\n    info.setDescription(wName.getText());\n    info.setBaseDirectory(wBaseDir.getText());\n    info.setReadOnly(wReadOnly.getSelection());\n  }","commit_id":"76a32d8c41189135e602e44ba7d24493c7461bc3","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void editRepository() {\r\n    try {\r\n        PluginInterface plugin = null; \r\n        RepositoryMeta ri = input.searchRepository(model.getSelectedRepository().getName());\r\n        if (ri != null) {\r\n          plugin = PluginRegistry.getInstance().getPlugin(RepositoryPluginType.class, ri.getId());\r\n          if (plugin == null) {\r\n            throw new KettleException(\"Unable to find repository plugin for id [\" + ri.getId() + \"]\"); //$NON-NLS-1$ //$NON-NLS-2$\r\n          }\r\n        }\r\n          RepositoryDialogInterface dd = getRepositoryDialog(plugin, ri, input, this.shell);\r\n          if (dd.open() != null) {\r\n            fillRepositories();\r\n            int idx = input.indexOfRepository(ri);\r\n            model.setSelectedRepository(input.getRepository(idx));\r\n            writeData();\r\n          }\r\n    } catch (Exception e) {\r\n      log.logDetailed(\"Error edit repository : \" + e.getLocalizedMessage());\r\n      new ErrorDialog(shell, messages.getString(\"Dialog.Error\"), BaseMessages.getString(PKG, \"RepositoryLogin.ErrorEditingRepository\", e.getLocalizedMessage()), e); //$NON-NLS-1$ //$NON-NLS-2$\r\n    }\r\n  }","id":15602,"modified_method":"public void editRepository() {\r\n    try {\r\n        PluginInterface plugin = null; \r\n        RepositoryMeta ri = input.searchRepository(model.getSelectedRepository().getName());\r\n        if (ri != null) {\r\n          plugin = PluginRegistry.getInstance().getPlugin(RepositoryPluginType.class, ri.getId());\r\n          if (plugin == null) {\r\n            throw new KettleException(\"Unable to find repository plugin for id [\" + ri.getId() + \"]\"); //$NON-NLS-1$ //$NON-NLS-2$\r\n          }\r\n        }\r\n          RepositoryDialogInterface dd = getRepositoryDialog(plugin, ri, input, this.shell);\r\n          if (dd.open(MODE.EDIT) != null) {\r\n            fillRepositories();\r\n            int idx = input.indexOfRepository(ri);\r\n            model.setSelectedRepository(input.getRepository(idx));\r\n            writeData();\r\n          }\r\n    } catch (Exception e) {\r\n      log.logDetailed(\"Error edit repository : \" + e.getLocalizedMessage());\r\n      new ErrorDialog(shell, messages.getString(\"Dialog.Error\"), BaseMessages.getString(PKG, \"RepositoryLogin.ErrorEditingRepository\", e.getLocalizedMessage()), e); //$NON-NLS-1$ //$NON-NLS-2$\r\n    }\r\n  }","commit_id":"76a32d8c41189135e602e44ba7d24493c7461bc3","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void newRepository() {\r\n\tPluginRegistry registry = PluginRegistry.getInstance();\r\n\tClass<? extends PluginTypeInterface> pluginType = RepositoryPluginType.class;\r\n\tList<PluginInterface> plugins = registry.getPlugins(pluginType);\r\n\t\r\n\tString[] names = new String[plugins.size()];\r\n    for (int i = 0; i < names.length; i++) {\r\n      PluginInterface plugin = plugins.get(i);\r\n      names[i] = plugin.getName() + \" : \" + plugin.getDescription(); //$NON-NLS-1$\r\n    }\r\n\r\n    // TODO: make this a bit fancier!\r\n    //\r\n    EnterSelectionDialog selectRepositoryType = new EnterSelectionDialog(this.shell, names, \"Select the repository type\", \"Select the repository type to create\"); //$NON-NLS-1$//$NON-NLS-2$\r\n    String choice = selectRepositoryType.open();\r\n    if (choice != null) {\r\n      int index = selectRepositoryType.getSelectionNr();\r\n      PluginInterface plugin = plugins.get(index);\r\n      String id = plugin.getIds()[0];\r\n\r\n      try {\r\n        // With this ID we can create a new Repository object...\r\n        //\r\n        RepositoryMeta repositoryMeta = PluginRegistry.getInstance().loadClass(RepositoryPluginType.class, id, RepositoryMeta.class);\r\n        RepositoryDialogInterface dialog = getRepositoryDialog(plugin, repositoryMeta, input, this.shell);\r\n        RepositoryMeta meta = dialog.open();\r\n        if (meta != null) {\r\n          input.addRepository(meta);\r\n          fillRepositories();\r\n          model.setSelectedRepository(meta);\r\n          writeData();\r\n        }\r\n      } catch (Exception e) {\r\n        log.logDetailed(\"Error creating new repository: \" + e.getLocalizedMessage());\r\n        new ErrorDialog(shell, messages.getString(\"Dialog.Error\"), BaseMessages.getString(PKG, \"RepositoryLogin.ErrorCreatingRepository\", \"\"), e); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\r\n      }\r\n    }\r\n  }","id":15603,"modified_method":"public void newRepository() {\r\n\tPluginRegistry registry = PluginRegistry.getInstance();\r\n\tClass<? extends PluginTypeInterface> pluginType = RepositoryPluginType.class;\r\n\tList<PluginInterface> plugins = registry.getPlugins(pluginType);\r\n\t\r\n\tString[] names = new String[plugins.size()];\r\n    for (int i = 0; i < names.length; i++) {\r\n      PluginInterface plugin = plugins.get(i);\r\n      names[i] = plugin.getName() + \" : \" + plugin.getDescription(); //$NON-NLS-1$\r\n    }\r\n\r\n    // TODO: make this a bit fancier!\r\n    //\r\n    EnterSelectionDialog selectRepositoryType = new EnterSelectionDialog(this.shell, names, \"Select the repository type\", \"Select the repository type to create\"); //$NON-NLS-1$//$NON-NLS-2$\r\n    String choice = selectRepositoryType.open();\r\n    if (choice != null) {\r\n      int index = selectRepositoryType.getSelectionNr();\r\n      PluginInterface plugin = plugins.get(index);\r\n      String id = plugin.getIds()[0];\r\n\r\n      try {\r\n        // With this ID we can create a new Repository object...\r\n        //\r\n        RepositoryMeta repositoryMeta = PluginRegistry.getInstance().loadClass(RepositoryPluginType.class, id, RepositoryMeta.class);\r\n        RepositoryDialogInterface dialog = getRepositoryDialog(plugin, repositoryMeta, input, this.shell);\r\n        RepositoryMeta meta = dialog.open(MODE.ADD);\r\n        if (meta != null) {\r\n          // First check is the repository name does not in the repositories list. \r\n          // If it does then display a error to the user\r\n          if(input.searchRepository(meta.getName()) == null) {\r\n            input.addRepository(meta);\r\n            fillRepositories();\r\n            model.setSelectedRepository(meta);\r\n            writeData();            \r\n          } else {\r\n            MessageBox box = new MessageBox(shell, SWT.ICON_ERROR | SWT.OK);\r\n            box.setMessage(BaseMessages.getString(PKG, \"RepositoryDialog.Dialog.ErrorIdExist.Message\")); //$NON-NLS-1$\r\n            box.setText(BaseMessages.getString(PKG, \"RepositoryDialog.Dialog.Error.Title\")); //$NON-NLS-1$\r\n            box.open();                   \r\n          }\r\n        }\r\n      } catch (Exception e) {\r\n        log.logDetailed(\"Error creating new repository: \" + e.getLocalizedMessage());\r\n        new ErrorDialog(shell, messages.getString(\"Dialog.Error\"), BaseMessages.getString(PKG, \"RepositoryLogin.ErrorCreatingRepository\", \"\"), e); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\r\n      }\r\n    }\r\n  }","commit_id":"76a32d8c41189135e602e44ba7d24493c7461bc3","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\n     * This method is responsible for generating a snmpConflictsWithDb event and\n     * adding it to the event list.\n     *\n     * @param nodeEntry Entry of node for which a conflict exits\n     */\n    private void createSnmpConflictsWithDbEvent(DbNodeEntry nodeEntry) {\n        Event newEvent = new Event();\n\n        newEvent.setUei(EventConstants.SNMP_CONFLICTS_WITH_DB_EVENT_UEI);\n\n        newEvent.setSource(\"OpenNMS.Capsd\");\n\n        newEvent.setNodeid(nodeEntry.getNodeId());\n\n        newEvent.setHost(Capsd.getLocalHostAddress());\n\n        newEvent.setTime(EventConstants.formatToString(new java.util.Date()));\n\n        // Add appropriate parms\n        Parms eventParms = new Parms();\n        Parm eventParm = null;\n        Value parmValue = null;\n\n        // Add node label\n        String hostname = null;\n        if (nodeEntry.getLabel() == null) {\n            hostname = \"\";\n        } else {\n            hostname = nodeEntry.getLabel();\n        }\n\n        eventParm = new Parm();\n        eventParm.setParmName(EventConstants.PARM_NODE_LABEL);\n        parmValue = new Value();\n        parmValue.setContent(hostname);\n        eventParm.setValue(parmValue);\n        eventParms.addParm(eventParm);\n\n        // Add nodeSysName\n        if (nodeEntry.getSystemName() != null) {\n            eventParm = new Parm();\n            eventParm.setParmName(EventConstants.PARM_NODE_SYSNAME);\n            parmValue = new Value();\n            parmValue.setContent(nodeEntry.getSystemName());\n            eventParm.setValue(parmValue);\n            eventParms.addParm(eventParm);\n        }\n\n        // Add nodeSysDescription\n        if (nodeEntry.getSystemDescription() != null) {\n            eventParm = new Parm();\n            eventParm.setParmName(EventConstants.PARM_NODE_SYSDESCRIPTION);\n            parmValue = new Value();\n            parmValue.setContent(nodeEntry.getSystemDescription());\n            eventParm.setValue(parmValue);\n            eventParms.addParm(eventParm);\n        }\n\n        // Add Parms to the event\n        newEvent.setParms(eventParms);\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(newEvent);\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"snmpConflictsWithDbEvent: Created snmpConflictsWithDbEvent for nodeid: \" + nodeEntry.getNodeId());\n        }\n    }","id":15604,"modified_method":"/**\n     * This method is responsible for generating a snmpConflictsWithDb event and\n     * adding it to the event list.\n     *\n     * @param nodeEntry Entry of node for which a conflict exits\n     */\n    private void createSnmpConflictsWithDbEvent(DbNodeEntry nodeEntry) {\n        \n        EventBuilder bldr = nodeEventBuilder(EventConstants.SNMP_CONFLICTS_WITH_DB_EVENT_UEI, nodeEntry.getNodeId());\n\n        // Add node label\n        bldr.addParam(EventConstants.PARM_NODE_LABEL, nodeEntry.getLabel() == null ? \"\" : nodeEntry.getLabel());\n\n        // Add nodeSysName\n        if (nodeEntry.getSystemName() != null) {\n            bldr.addParam(EventConstants.PARM_NODE_SYSNAME, nodeEntry.getSystemName());\n        }\n\n        // Add nodeSysDescription\n        if (nodeEntry.getSystemDescription() != null) {\n            bldr.addParam(EventConstants.PARM_NODE_SYSDESCRIPTION, nodeEntry.getSystemDescription());\n        }\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(bldr.getEvent());\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"snmpConflictsWithDbEvent: Created snmpConflictsWithDbEvent for nodeid: \" + nodeEntry.getNodeId());\n        }\n    }","commit_id":"a81cc97bd6414d29e07753f7eea9fe24cc790441","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method is responsible for generating a interfaceReparented event and\n     * adding it to the event list.\n     * \n     * @param newNode\n     *            Entry of node under which the interface was added.\n     * @param oldNodeId\n     *            Node identifier of node from which the interface was removed.\n     * @param reparentedIf\n     *            Reparented interface\n     */\n    private void createInterfaceReparentedEvent(DbNodeEntry newNode, int oldNodeId, InetAddress reparentedIf) {\n        if (log().isDebugEnabled()) {\n            log().debug(\"createInterfaceReparentedEvent: ifAddr: \" + reparentedIf.getHostAddress() + \" oldNodeId: \" + oldNodeId + \" newNodeId: \" + newNode.getNodeId());\n        }\n\n        Event newEvent = new Event();\n\n        newEvent.setUei(EventConstants.INTERFACE_REPARENTED_EVENT_UEI);\n\n        newEvent.setSource(\"OpenNMS.Capsd\");\n\n        newEvent.setNodeid(newNode.getNodeId());\n\n        newEvent.setHost(Capsd.getLocalHostAddress());\n\n        newEvent.setInterface(reparentedIf.getHostAddress());\n\n        newEvent.setTime(EventConstants.formatToString(new java.util.Date()));\n\n        // Add appropriate parms\n        Parms eventParms = new Parms();\n        Parm eventParm = null;\n        Value parmValue = null;\n\n        // Add old node id\n        eventParm = new Parm();\n        eventParm.setParmName(EventConstants.PARM_OLD_NODEID);\n        parmValue = new Value();\n        parmValue.setContent(String.valueOf(oldNodeId));\n        eventParm.setValue(parmValue);\n        eventParms.addParm(eventParm);\n\n        // Add new node id\n        eventParm = new Parm();\n        eventParm.setParmName(EventConstants.PARM_NEW_NODEID);\n        parmValue = new Value();\n        parmValue.setContent(String.valueOf(newNode.getNodeId()));\n        eventParm.setValue(parmValue);\n        eventParms.addParm(eventParm);\n\n        // Add ip host name\n        String hostname = reparentedIf.getHostName();\n\n        eventParm = new Parm();\n        eventParm.setParmName(EventConstants.PARM_IP_HOSTNAME);\n        parmValue = new Value();\n        parmValue.setContent(hostname);\n        eventParm.setValue(parmValue);\n        eventParms.addParm(eventParm);\n\n        // Add node label and node label source\n        if (newNode.getLabel() != null) {\n            eventParm = new Parm();\n            eventParm.setParmName(EventConstants.PARM_NODE_LABEL);\n            parmValue = new Value();\n            parmValue.setContent(newNode.getLabel());\n            eventParm.setValue(parmValue);\n            eventParms.addParm(eventParm);\n\n            eventParm = new Parm();\n            eventParm.setParmName(EventConstants.PARM_NODE_LABEL_SOURCE);\n            parmValue = new Value();\n            parmValue.setContent(String.valueOf(newNode.getLabelSource()));\n            eventParm.setValue(parmValue);\n            eventParms.addParm(eventParm);\n        }\n\n        // Add nodeSysName\n        if (newNode.getSystemName() != null) {\n            eventParm = new Parm();\n            eventParm.setParmName(EventConstants.PARM_NODE_SYSNAME);\n            parmValue = new Value();\n            parmValue.setContent(newNode.getSystemName());\n            eventParm.setValue(parmValue);\n            eventParms.addParm(eventParm);\n        }\n\n        // Add nodeSysDescription\n        if (newNode.getSystemDescription() != null) {\n            eventParm = new Parm();\n            eventParm.setParmName(EventConstants.PARM_NODE_SYSDESCRIPTION);\n            parmValue = new Value();\n            parmValue.setContent(newNode.getSystemDescription());\n            eventParm.setValue(parmValue);\n            eventParms.addParm(eventParm);\n        }\n\n        // Add Parms to the event\n        newEvent.setParms(eventParms);\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(newEvent);\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"createInterfaceReparentedEvent: successfully created interfaceReparented event for nodeid/interface: \" + newNode.getNodeId() + \"/\" + reparentedIf.getHostAddress());\n        }\n    }","id":15605,"modified_method":"/**\n     * This method is responsible for generating a interfaceReparented event and\n     * adding it to the event list.\n     * \n     * @param newNode\n     *            Entry of node under which the interface was added.\n     * @param oldNodeId\n     *            Node identifier of node from which the interface was removed.\n     * @param reparentedIf\n     *            Reparented interface\n     */\n    private void createInterfaceReparentedEvent(DbNodeEntry newNode, int oldNodeId, InetAddress reparentedIf) {\n        if (log().isDebugEnabled()) {\n            log().debug(\"createInterfaceReparentedEvent: ifAddr: \" + reparentedIf.getHostAddress() + \" oldNodeId: \" + oldNodeId + \" newNodeId: \" + newNode.getNodeId());\n        }\n\n        \n        EventBuilder bldr = interfaceEventBuilder(EventConstants.INTERFACE_REPARENTED_EVENT_UEI, newNode.getNodeId(), reparentedIf.getHostAddress());\n\n        // Add old node id\n        bldr.addParam(EventConstants.PARM_OLD_NODEID, oldNodeId);\n\n        // Add new node id\n        bldr.addParam(EventConstants.PARM_NEW_NODEID, newNode.getNodeId());\n\n        // Add ip host name\n        bldr.addParam(EventConstants.PARM_IP_HOSTNAME, reparentedIf.getHostName());\n\n        // Add node label and node label source\n        if (newNode.getLabel() != null) {\n            bldr.addParam(EventConstants.PARM_NODE_LABEL, newNode.getLabel());\n            bldr.addParam(EventConstants.PARM_NODE_LABEL_SOURCE, newNode.getLabelSource());\n        }\n\n        // Add nodeSysName\n        if (newNode.getSystemName() != null) {\n            bldr.addParam(EventConstants.PARM_NODE_SYSNAME, newNode.getSystemName());\n        }\n\n        // Add nodeSysDescription\n        if (newNode.getSystemDescription() != null) {\n            bldr.addParam(EventConstants.PARM_NODE_SYSDESCRIPTION, newNode.getSystemDescription());\n        }\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(bldr.getEvent());\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"createInterfaceReparentedEvent: successfully created interfaceReparented event for nodeid/interface: \" + newNode.getNodeId() + \"/\" + reparentedIf.getHostAddress());\n        }\n    }","commit_id":"a81cc97bd6414d29e07753f7eea9fe24cc790441","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method is responsible for generating an ipHostNameChanged event and\n     * adding it to the event list.\n     * \n     * @param updatedEntry\n     *            updated IP interface database entry\n     * @param originalEntry\n     *            original IP interface database entry\n     */\n    private void createIpHostNameChangedEvent(DbIpInterfaceEntry updatedEntry, DbIpInterfaceEntry originalEntry) {\n        if (log().isDebugEnabled()) {\n            log().debug(\"createIpHostNameChangedEvent: nodeId: \" + updatedEntry.getNodeId() + \" oldHostName: \" + originalEntry.getHostname() + \" newHostName: \" + updatedEntry.getHostname());\n        }\n\n        Event newEvent = new Event();\n\n        newEvent.setUei(EventConstants.INTERFACE_IP_HOSTNAME_CHANGED_EVENT_UEI);\n\n        newEvent.setSource(\"OpenNMS.Capsd\");\n\n        newEvent.setNodeid(updatedEntry.getNodeId());\n\n        newEvent.setHost(Capsd.getLocalHostAddress());\n\n        newEvent.setInterface(updatedEntry.getIfAddress().getHostAddress());\n\n        newEvent.setTime(EventConstants.formatToString(new java.util.Date()));\n\n        // Add appropriate parms\n        Parms eventParms = new Parms();\n        Parm eventParm = null;\n        Value parmValue = null;\n\n        // Add old IP Hostname\n        if (originalEntry.getHostname() != null) {\n            eventParm = new Parm();\n            eventParm.setParmName(EventConstants.PARM_OLD_IP_HOSTNAME);\n            parmValue = new Value();\n            parmValue.setContent(originalEntry.getHostname());\n            eventParm.setValue(parmValue);\n            eventParms.addParm(eventParm);\n        }\n\n        // Add new IP Hostname\n        if (updatedEntry.getHostname() != null) {\n            eventParm = new Parm();\n            eventParm.setParmName(EventConstants.PARM_IP_HOSTNAME);\n            parmValue = new Value();\n            parmValue.setContent(updatedEntry.getHostname());\n            eventParm.setValue(parmValue);\n            eventParms.addParm(eventParm);\n        }\n\n        // Add Parms to the event\n        newEvent.setParms(eventParms);\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(newEvent);\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"createIpHostNameChangedEvent: successfully created ipHostNameChanged event for nodeid: \" + updatedEntry.getNodeId());\n        }\n    }","id":15606,"modified_method":"/**\n     * This method is responsible for generating an ipHostNameChanged event and\n     * adding it to the event list.\n     * \n     * @param updatedEntry\n     *            updated IP interface database entry\n     * @param originalEntry\n     *            original IP interface database entry\n     */\n    private void createIpHostNameChangedEvent(DbIpInterfaceEntry updatedEntry, DbIpInterfaceEntry originalEntry) {\n        if (log().isDebugEnabled()) {\n            log().debug(\"createIpHostNameChangedEvent: nodeId: \" + updatedEntry.getNodeId() + \" oldHostName: \" + originalEntry.getHostname() + \" newHostName: \" + updatedEntry.getHostname());\n        }\n\n        EventBuilder bldr = interfaceEventBuilder(EventConstants.INTERFACE_IP_HOSTNAME_CHANGED_EVENT_UEI, updatedEntry.getNodeId(), updatedEntry.getIfAddress().getHostAddress());\n        \n        // Add old IP Hostname\n        if (originalEntry.getHostname() != null) {\n            bldr.addParam(EventConstants.PARM_OLD_IP_HOSTNAME, originalEntry.getHostname());\n        }\n\n        // Add new IP Hostname\n        if (updatedEntry.getHostname() != null) {\n            bldr.addParam(EventConstants.PARM_IP_HOSTNAME, updatedEntry.getHostname());\n        }\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(bldr.getEvent());\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"createIpHostNameChangedEvent: successfully created ipHostNameChanged event for nodeid: \" + updatedEntry.getNodeId());\n        }\n    }","commit_id":"a81cc97bd6414d29e07753f7eea9fe24cc790441","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method is responsible for generating a nodeGainedService event and\n     * adding it to the event list.\n     * \n     * @param nodeEntry\n     *            Entry of node which has gained a service\n     * @param ifEntry\n     *            Entry of interface which has gained a service\n     * @param svcName\n     *            Service name\n     */\n    private void createNodeGainedServiceEvent(DbNodeEntry nodeEntry, DbIpInterfaceEntry ifEntry, String svcName) {\n        if (log().isDebugEnabled()) {\n            log().debug(\"createNodeGainedServiceEvent: nodeId: \" + ifEntry.getNodeId() + \" interface: \" + ifEntry.getIfAddress().getHostAddress() + \" service: \" + svcName);\n        }\n\n        Event newEvent = new Event();\n\n        newEvent.setUei(EventConstants.NODE_GAINED_SERVICE_EVENT_UEI);\n\n        newEvent.setSource(\"OpenNMS.Capsd\");\n\n        newEvent.setNodeid(ifEntry.getNodeId());\n\n        newEvent.setHost(Capsd.getLocalHostAddress());\n\n        newEvent.setInterface(ifEntry.getIfAddress().getHostAddress());\n\n        newEvent.setService(svcName);\n\n        newEvent.setTime(EventConstants.formatToString(new java.util.Date()));\n\n        // Add appropriate parms\n        Parms eventParms = new Parms();\n        Parm eventParm = null;\n        Value parmValue = null;\n\n        // Add ip host name\n        String hostname = null;\n        if (ifEntry.getHostname() == null) {\n            hostname = \"\";\n        } else {\n            hostname = ifEntry.getHostname();\n        }\n\n        eventParm = new Parm();\n        eventParm.setParmName(EventConstants.PARM_IP_HOSTNAME);\n        parmValue = new Value();\n        parmValue.setContent(hostname);\n        eventParm.setValue(parmValue);\n        eventParms.addParm(eventParm);\n\n        // Add nodeSysName\n        if (nodeEntry.getSystemName() != null) {\n            eventParm = new Parm();\n            eventParm.setParmName(EventConstants.PARM_NODE_SYSNAME);\n            parmValue = new Value();\n            parmValue.setContent(nodeEntry.getSystemName());\n            eventParm.setValue(parmValue);\n            eventParms.addParm(eventParm);\n        }\n\n        // Add nodeSysDescription\n        if (nodeEntry.getSystemDescription() != null) {\n            eventParm = new Parm();\n            eventParm.setParmName(EventConstants.PARM_NODE_SYSDESCRIPTION);\n            parmValue = new Value();\n            parmValue.setContent(nodeEntry.getSystemDescription());\n            eventParm.setValue(parmValue);\n            eventParms.addParm(eventParm);\n        }\n\n        // Add Parms to the event\n        newEvent.setParms(eventParms);\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(newEvent);\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"createNodeGainedServiceEvent: successfully created nodeGainedService event for nodeid: \" + ifEntry.getNodeId());\n        }\n    }","id":15607,"modified_method":"/**\n     * This method is responsible for generating a nodeGainedService event and\n     * adding it to the event list.\n     * \n     * @param nodeEntry\n     *            Entry of node which has gained a service\n     * @param ifEntry\n     *            Entry of interface which has gained a service\n     * @param svcName\n     *            Service name\n     */\n    private void createNodeGainedServiceEvent(DbNodeEntry nodeEntry, DbIpInterfaceEntry ifEntry, String svcName) {\n        if (log().isDebugEnabled()) {\n            log().debug(\"createNodeGainedServiceEvent: nodeId: \" + ifEntry.getNodeId() + \" interface: \" + ifEntry.getIfAddress().getHostAddress() + \" service: \" + svcName);\n        }\n\n        EventBuilder bldr = serviceEventBuilder(EventConstants.NODE_GAINED_SERVICE_EVENT_UEI, ifEntry.getNodeId(), ifEntry.getIfAddress().getHostAddress(), svcName);\n\n        // Add ip host name\n        bldr.addParam(EventConstants.PARM_IP_HOSTNAME, ifEntry.getHostname() == null ? \"\" : ifEntry.getHostname());\n\n        // Add nodeSysName\n        if (nodeEntry.getSystemName() != null) {\n            bldr.addParam(EventConstants.PARM_NODE_SYSNAME, nodeEntry.getSystemName());\n        }\n\n        // Add nodeSysDescription\n        if (nodeEntry.getSystemDescription() != null) {\n            bldr.addParam(EventConstants.PARM_NODE_SYSDESCRIPTION, nodeEntry.getSystemDescription());\n        }\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(bldr.getEvent());\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"createNodeGainedServiceEvent: successfully created nodeGainedService event for nodeid: \" + ifEntry.getNodeId());\n        }\n    }","commit_id":"a81cc97bd6414d29e07753f7eea9fe24cc790441","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method is responsible for generating a rescanCompleted event and\n     * adding it to the event list.\n     *\n     * @param nodeEntry Entry of node which was rescanned\n     */\n    private void createRescanCompletedEvent(DbNodeEntry nodeEntry) {\n        Event newEvent = new Event();\n\n        newEvent.setUei(EventConstants.RESCAN_COMPLETED_EVENT_UEI);\n\n        newEvent.setSource(\"OpenNMS.Capsd\");\n\n        newEvent.setNodeid(nodeEntry.getNodeId());\n\n        newEvent.setHost(Capsd.getLocalHostAddress());\n\n        newEvent.setTime(EventConstants.formatToString(new java.util.Date()));\n\n        // Add appropriate parms\n        Parms eventParms = new Parms();\n        Parm eventParm = null;\n        Value parmValue = null;\n\n        // Add node label\n        String hostname = null;\n        if (nodeEntry.getLabel() == null) {\n            hostname = \"\";\n        } else {\n            hostname = nodeEntry.getLabel();\n        }\n\n        eventParm = new Parm();\n        eventParm.setParmName(EventConstants.PARM_NODE_LABEL);\n        parmValue = new Value();\n        parmValue.setContent(hostname);\n        eventParm.setValue(parmValue);\n        eventParms.addParm(eventParm);\n\n        // Add Parms to the event\n        newEvent.setParms(eventParms);\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(newEvent);\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"rescanCompletedEvent: Created rescanCompletedEvent for nodeid: \" + nodeEntry.getNodeId());\n        }\n    }","id":15608,"modified_method":"/**\n     * This method is responsible for generating a rescanCompleted event and\n     * adding it to the event list.\n     *\n     * @param nodeEntry Entry of node which was rescanned\n     */\n    private void createRescanCompletedEvent(DbNodeEntry nodeEntry) {\n        \n        EventBuilder bldr = nodeEventBuilder(EventConstants.RESCAN_COMPLETED_EVENT_UEI, nodeEntry.getNodeId());\n\n        // Add node label\n        bldr.addParam(EventConstants.PARM_NODE_LABEL, nodeEntry.getLabel() == null ? \"\" : nodeEntry.getLabel());\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(bldr.getEvent());\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"rescanCompletedEvent: Created rescanCompletedEvent for nodeid: \" + nodeEntry.getNodeId());\n        }\n    }","commit_id":"a81cc97bd6414d29e07753f7eea9fe24cc790441","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method is responsible for generating a nodeInfoChanged event and\n     * adding it to the event list.\n     * \n     * @param updatedEntry\n     *            Updated node entry object\n     * @param originalEntry\n     *            Original node entry object\n     */\n    private void createNodeInfoChangedEvent(DbNodeEntry updatedEntry, DbNodeEntry originalEntry) {\n        if (log().isDebugEnabled()) {\n            log().debug(\"createNodeInfoChangedEvent: nodeId: \" + updatedEntry.getNodeId());\n        }\n\n        Event newEvent = new Event();\n\n        newEvent.setUei(EventConstants.NODE_INFO_CHANGED_EVENT_UEI);\n\n        newEvent.setSource(\"OpenNMS.Capsd\");\n\n        newEvent.setNodeid(updatedEntry.getNodeId());\n\n        newEvent.setHost(Capsd.getLocalHostAddress());\n\n        newEvent.setTime(EventConstants.formatToString(new java.util.Date()));\n\n        // Add appropriate parms\n        Parms eventParms = new Parms();\n        Parm eventParm = null;\n        Value parmValue = null;\n\n        // SysOID\n        if (updatedEntry.getSystemOID() != null) {\n            eventParm = new Parm();\n            eventParm.setParmName(EventConstants.PARM_NODE_SYSOID);\n            parmValue = new Value();\n            parmValue.setContent(updatedEntry.getSystemOID());\n            eventParm.setValue(parmValue);\n            eventParms.addParm(eventParm);\n        }\n\n        // SysName\n        if (updatedEntry.getSystemName() != null) {\n            eventParm = new Parm();\n            eventParm.setParmName(EventConstants.PARM_NODE_SYSNAME);\n            parmValue = new Value();\n            parmValue.setContent(updatedEntry.getSystemName());\n            eventParm.setValue(parmValue);\n            eventParms.addParm(eventParm);\n        }\n\n        // SysDescription\n        if (updatedEntry.getSystemDescription() != null) {\n            // Add new node label\n            eventParm = new Parm();\n            eventParm.setParmName(EventConstants.PARM_NODE_SYSDESCRIPTION);\n            parmValue = new Value();\n            parmValue.setContent(updatedEntry.getSystemDescription());\n            eventParm.setValue(parmValue);\n            eventParms.addParm(eventParm);\n        }\n\n        // SysLocation\n        if (updatedEntry.getSystemLocation() != null) {\n            // Add new node label\n            eventParm = new Parm();\n            eventParm.setParmName(EventConstants.PARM_NODE_SYSLOCATION);\n            parmValue = new Value();\n            parmValue.setContent(updatedEntry.getSystemLocation());\n            eventParm.setValue(parmValue);\n            eventParms.addParm(eventParm);\n        }\n\n        // SysContact\n        if (updatedEntry.getSystemContact() != null) {\n            // Add new node label\n            eventParm = new Parm();\n            eventParm.setParmName(EventConstants.PARM_NODE_SYSCONTACT);\n            parmValue = new Value();\n            parmValue.setContent(updatedEntry.getSystemContact());\n            eventParm.setValue(parmValue);\n            eventParms.addParm(eventParm);\n        }\n\n        // NetBIOS name\n        if (updatedEntry.getNetBIOSName() != null) {\n            // Add new node label\n            eventParm = new Parm();\n            eventParm.setParmName(EventConstants.PARM_NODE_NETBIOS_NAME);\n            parmValue = new Value();\n            parmValue.setContent(updatedEntry.getNetBIOSName());\n            eventParm.setValue(parmValue);\n            eventParms.addParm(eventParm);\n        }\n\n        // Domain name\n        if (updatedEntry.getDomainName() != null) {\n            // Add new node label\n            eventParm = new Parm();\n            eventParm.setParmName(EventConstants.PARM_NODE_DOMAIN_NAME);\n            parmValue = new Value();\n            parmValue.setContent(updatedEntry.getDomainName());\n            eventParm.setValue(parmValue);\n            eventParms.addParm(eventParm);\n        }\n\n        // Operating System\n        if (updatedEntry.getOS() != null) {\n            // Add new node label\n            eventParm = new Parm();\n            eventParm.setParmName(EventConstants.PARM_NODE_OPERATING_SYSTEM);\n            parmValue = new Value();\n            parmValue.setContent(updatedEntry.getOS());\n            eventParm.setValue(parmValue);\n            eventParms.addParm(eventParm);\n        }\n\n        // Add Parms to the event\n        newEvent.setParms(eventParms);\n\n        // / Add event to the list of events to be sent out.\n        m_eventList.add(newEvent);\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"createNodeInfoChangedEvent: successfully created nodeInfoChanged event for nodeid: \" + updatedEntry.getNodeId());\n        }\n    }","id":15609,"modified_method":"/**\n     * This method is responsible for generating a nodeInfoChanged event and\n     * adding it to the event list.\n     * \n     * @param updatedEntry\n     *            Updated node entry object\n     * @param originalEntry\n     *            Original node entry object\n     */\n    private void createNodeInfoChangedEvent(DbNodeEntry updatedEntry, DbNodeEntry originalEntry) {\n        if (log().isDebugEnabled()) {\n            log().debug(\"createNodeInfoChangedEvent: nodeId: \" + updatedEntry.getNodeId());\n        }\n\n        EventBuilder bldr = nodeEventBuilder(EventConstants.NODE_INFO_CHANGED_EVENT_UEI, updatedEntry.getNodeId());\n\n        // SysOID\n        if (updatedEntry.getSystemOID() != null) {\n            bldr.addParam(EventConstants.PARM_NODE_SYSOID, updatedEntry.getSystemOID());\n        }\n\n        // SysName\n        if (updatedEntry.getSystemName() != null) {\n            bldr.addParam(EventConstants.PARM_NODE_SYSNAME, updatedEntry.getSystemName());\n        }\n\n        // SysDescription\n        if (updatedEntry.getSystemDescription() != null) {\n            bldr.addParam(EventConstants.PARM_NODE_SYSDESCRIPTION, updatedEntry.getSystemDescription());\n        }\n\n        // SysLocation\n        if (updatedEntry.getSystemLocation() != null) {\n            bldr.addParam(EventConstants.PARM_NODE_SYSLOCATION, updatedEntry.getSystemLocation());\n        }\n\n        // SysContact\n        if (updatedEntry.getSystemContact() != null) {\n            bldr.addParam(EventConstants.PARM_NODE_SYSCONTACT, updatedEntry.getSystemContact());\n        }\n\n        // NetBIOS name\n        if (updatedEntry.getNetBIOSName() != null) {\n            bldr.addParam(EventConstants.PARM_NODE_NETBIOS_NAME, updatedEntry.getNetBIOSName());\n        }\n\n        // Domain name\n        if (updatedEntry.getDomainName() != null) {\n            bldr.addParam(EventConstants.PARM_NODE_DOMAIN_NAME, updatedEntry.getDomainName());\n        }\n\n        // Operating System\n        if (updatedEntry.getOS() != null) {\n            bldr.addParam(EventConstants.PARM_NODE_OPERATING_SYSTEM, updatedEntry.getOS());\n        }\n\n        // / Add event to the list of events to be sent out.\n        m_eventList.add(bldr.getEvent());\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"createNodeInfoChangedEvent: successfully created nodeInfoChanged event for nodeid: \" + updatedEntry.getNodeId());\n        }\n    }","commit_id":"a81cc97bd6414d29e07753f7eea9fe24cc790441","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method is responsible for generating a\n     * reinitializePrimarySnmpInterface event and adding it to the event list.\n     * \n     * @param nodeId\n     *            Nodeid of node being rescanned.\n     * @param primarySnmpIf\n     *            Primary SNMP interface address.\n     */\n    private void createReinitializePrimarySnmpInterfaceEvent(int nodeId, InetAddress primarySnmpIf) {\n        if (log().isDebugEnabled()) {\n            log().debug(\"reinitializePrimarySnmpInterface: nodeId: \" + nodeId + \" interface: \" + primarySnmpIf.getHostAddress());\n        }\n\n        Event newEvent = new Event();\n\n        newEvent.setUei(EventConstants.REINITIALIZE_PRIMARY_SNMP_INTERFACE_EVENT_UEI);\n\n        newEvent.setSource(\"OpenNMS.Capsd\");\n\n        newEvent.setNodeid(nodeId);\n\n        newEvent.setHost(Capsd.getLocalHostAddress());\n\n        newEvent.setInterface(primarySnmpIf.getHostAddress());\n\n        newEvent.setTime(EventConstants.formatToString(new java.util.Date()));\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(newEvent);\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"createReinitializePrimarySnmpInterfaceEvent: successfully created reinitializePrimarySnmpInterface event for interface: \" + primarySnmpIf.getHostAddress());\n        }\n    }","id":15610,"modified_method":"/**\n     * This method is responsible for generating a\n     * reinitializePrimarySnmpInterface event and adding it to the event list.\n     * \n     * @param nodeId\n     *            Nodeid of node being rescanned.\n     * @param primarySnmpIf\n     *            Primary SNMP interface address.\n     */\n    private void createReinitializePrimarySnmpInterfaceEvent(int nodeId, InetAddress primarySnmpIf) {\n        if (log().isDebugEnabled()) {\n            log().debug(\"reinitializePrimarySnmpInterface: nodeId: \" + nodeId + \" interface: \" + primarySnmpIf.getHostAddress());\n        }\n\n        EventBuilder bldr = interfaceEventBuilder(EventConstants.REINITIALIZE_PRIMARY_SNMP_INTERFACE_EVENT_UEI, nodeId, primarySnmpIf.getHostAddress());\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(bldr.getEvent());\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"createReinitializePrimarySnmpInterfaceEvent: successfully created reinitializePrimarySnmpInterface event for interface: \" + primarySnmpIf.getHostAddress());\n        }\n    }","commit_id":"a81cc97bd6414d29e07753f7eea9fe24cc790441","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method is responsible for generating a nodeGainedInterface event and\n     * adding it to the event list.\n     * \n     * @param ifEntry\n     *            Entry of new interface.\n     */\n    private void createNodeGainedInterfaceEvent(DbIpInterfaceEntry ifEntry) {\n        if (log().isDebugEnabled()) {\n            log().debug(\"createNodeGainedInterfaceEvent: nodeId: \" + ifEntry.getNodeId() + \" interface: \" + ifEntry.getIfAddress().getHostAddress());\n        }\n\n        Event newEvent = new Event();\n\n        newEvent.setUei(EventConstants.NODE_GAINED_INTERFACE_EVENT_UEI);\n\n        newEvent.setSource(\"OpenNMS.Capsd\");\n\n        newEvent.setNodeid(ifEntry.getNodeId());\n\n        newEvent.setHost(Capsd.getLocalHostAddress());\n\n        newEvent.setInterface(ifEntry.getIfAddress().getHostAddress());\n\n        newEvent.setTime(EventConstants.formatToString(new java.util.Date()));\n\n        // Add appropriate parms\n        Parms eventParms = new Parms();\n        Parm eventParm = null;\n        Value parmValue = null;\n\n        // Add ip host name\n        String hostname = null;\n        if (ifEntry.getHostname() == null) {\n            hostname = \"\";\n        } else {\n            hostname = ifEntry.getHostname();\n        }\n\n        eventParm = new Parm();\n        eventParm.setParmName(EventConstants.PARM_IP_HOSTNAME);\n        parmValue = new Value();\n        parmValue.setContent(hostname);\n        eventParm.setValue(parmValue);\n        eventParms.addParm(eventParm);\n\n        // Add discovery method\n        eventParm = new Parm();\n        eventParm.setParmName(EventConstants.PARM_METHOD);\n        parmValue = new Value();\n        parmValue.setContent(\"icmp\");\n        eventParm.setValue(parmValue);\n        eventParms.addParm(eventParm);\n\n        // Add Parms to the event\n        newEvent.setParms(eventParms);\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(newEvent);\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"createNodeGainedInterfaceEvent: successfully created nodeGainedInterface event for nodeid: \" + ifEntry.getNodeId());\n        }\n    }","id":15611,"modified_method":"/**\n     * This method is responsible for generating a nodeGainedInterface event and\n     * adding it to the event list.\n     * \n     * @param ifEntry\n     *            Entry of new interface.\n     */\n    private void createNodeGainedInterfaceEvent(DbIpInterfaceEntry ifEntry) {\n        if (log().isDebugEnabled()) {\n            log().debug(\"createNodeGainedInterfaceEvent: nodeId: \" + ifEntry.getNodeId() + \" interface: \" + ifEntry.getIfAddress().getHostAddress());\n        }\n\n        EventBuilder bldr = interfaceEventBuilder(EventConstants.NODE_GAINED_INTERFACE_EVENT_UEI, ifEntry.getNodeId(), ifEntry.getIfAddress().getHostAddress());\n\n        // Add ip host name\n        bldr.addParam(EventConstants.PARM_IP_HOSTNAME, ifEntry.getHostname() == null ? \"\" : ifEntry.getHostname());\n\n        // Add discovery method\n        bldr.addParam(EventConstants.PARM_METHOD, \"icmp\");\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(bldr.getEvent());\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"createNodeGainedInterfaceEvent: successfully created nodeGainedInterface event for nodeid: \" + ifEntry.getNodeId());\n        }\n    }","commit_id":"a81cc97bd6414d29e07753f7eea9fe24cc790441","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method is responsible for generating a interfaceIndexChanged event\n     * and adding it to the event list.\n     * \n     * @param updatedEntry\n     *            updated IP interface database entry\n     * @param originalEntry\n     *            original IP interface database entry\n     */\n    private void createInterfaceIndexChangedEvent(DbIpInterfaceEntry updatedEntry, DbIpInterfaceEntry originalEntry) {\n        if (log().isDebugEnabled()) {\n            log().debug(\"createInterfaceIndexChangedEvent: nodeId: \" + updatedEntry.getNodeId() + \" oldIfIndex: \" + originalEntry.getIfIndex() + \" newIfIndex: \" + updatedEntry.getIfIndex());\n        }\n\n        Event newEvent = new Event();\n\n        newEvent.setUei(EventConstants.INTERFACE_INDEX_CHANGED_EVENT_UEI);\n\n        newEvent.setSource(\"OpenNMS.Capsd\");\n\n        newEvent.setNodeid(updatedEntry.getNodeId());\n\n        newEvent.setHost(Capsd.getLocalHostAddress());\n\n        newEvent.setInterface(updatedEntry.getIfAddress().getHostAddress());\n\n        newEvent.setTime(EventConstants.formatToString(new java.util.Date()));\n\n        // Add appropriate parms\n        Parms eventParms = new Parms();\n        Parm eventParm = null;\n        Value parmValue = null;\n\n        // Add old interface index\n        eventParm = new Parm();\n        eventParm.setParmName(EventConstants.PARM_OLD_IFINDEX);\n        parmValue = new Value();\n        parmValue.setContent(String.valueOf(originalEntry.getIfIndex()));\n        eventParm.setValue(parmValue);\n        eventParms.addParm(eventParm);\n\n        // Add new interface index\n        eventParm = new Parm();\n        eventParm.setParmName(EventConstants.PARM_NEW_IFINDEX);\n        parmValue = new Value();\n        parmValue.setContent(String.valueOf(updatedEntry.getIfIndex()));\n        eventParm.setValue(parmValue);\n        eventParms.addParm(eventParm);\n\n        // Add Parms to the event\n        newEvent.setParms(eventParms);\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(newEvent);\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"createInterfaceIndexChangedEvent: successfully created interfaceIndexChanged event for nodeid: \" + updatedEntry.getNodeId());\n        }\n    }","id":15612,"modified_method":"/**\n     * This method is responsible for generating a interfaceIndexChanged event\n     * and adding it to the event list.\n     * \n     * @param updatedEntry\n     *            updated IP interface database entry\n     * @param originalEntry\n     *            original IP interface database entry\n     */\n    private void createInterfaceIndexChangedEvent(DbIpInterfaceEntry updatedEntry, DbIpInterfaceEntry originalEntry) {\n        if (log().isDebugEnabled()) {\n            log().debug(\"createInterfaceIndexChangedEvent: nodeId: \" + updatedEntry.getNodeId() + \" oldIfIndex: \" + originalEntry.getIfIndex() + \" newIfIndex: \" + updatedEntry.getIfIndex());\n        }\n\n        EventBuilder bldr = interfaceEventBuilder(EventConstants.INTERFACE_INDEX_CHANGED_EVENT_UEI, updatedEntry.getNodeId(), updatedEntry.getIfAddress().getHostAddress());\n\n        bldr.addParam(EventConstants.PARM_OLD_IFINDEX, originalEntry.getIfIndex());\n        bldr.addParam(EventConstants.PARM_NEW_IFINDEX, updatedEntry.getIfIndex());\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(bldr.getEvent());\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"createInterfaceIndexChangedEvent: successfully created interfaceIndexChanged event for nodeid: \" + updatedEntry.getNodeId());\n        }\n    }","commit_id":"a81cc97bd6414d29e07753f7eea9fe24cc790441","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method is responsible for generating a suspendPollingService event\n     * and adding it to the event list.\n     * \n     * @param nodeEntry\n     *            Entry of node for which a service is to be polled\n     * @param ifEntry\n     *            Entry of interface which a service is to be polled\n     * @param svcName\n     *            Service name\n     */\n    private void createSuspendPollingServiceEvent(DbNodeEntry nodeEntry, DbIpInterfaceEntry ifEntry, String svcName) {\n        Event newEvent = new Event();\n\n        newEvent.setUei(EventConstants.SUSPEND_POLLING_SERVICE_EVENT_UEI);\n\n        newEvent.setSource(\"OpenNMS.Capsd\");\n\n        newEvent.setNodeid(ifEntry.getNodeId());\n\n        newEvent.setHost(Capsd.getLocalHostAddress());\n\n        newEvent.setInterface(ifEntry.getIfAddress().getHostAddress());\n\n        newEvent.setService(svcName);\n\n        newEvent.setTime(EventConstants.formatToString(new java.util.Date()));\n\n        // Add appropriate parms\n        Parms eventParms = new Parms();\n        Parm eventParm = null;\n        Value parmValue = null;\n\n        // Add ip host name\n        String hostname = null;\n        if (ifEntry.getHostname() == null) {\n            hostname = \"\"; \n        } else {\n            hostname = ifEntry.getHostname();\n        }\n\n        eventParm = new Parm();\n        eventParm.setParmName(EventConstants.PARM_IP_HOSTNAME);\n        parmValue = new Value();\n        parmValue.setContent(hostname);\n        eventParm.setValue(parmValue);\n        eventParms.addParm(eventParm);\n\n        // Add nodeSysName\n        if (nodeEntry.getSystemName() != null) {\n            eventParm = new Parm();\n            eventParm.setParmName(EventConstants.PARM_NODE_SYSNAME);\n            parmValue = new Value();\n            parmValue.setContent(nodeEntry.getSystemName());\n            eventParm.setValue(parmValue);\n            eventParms.addParm(eventParm);\n        }\n\n        // Add nodeSysDescription\n        if (nodeEntry.getSystemDescription() != null) {\n            eventParm = new Parm();\n            eventParm.setParmName(EventConstants.PARM_NODE_SYSDESCRIPTION);\n            parmValue = new Value();\n            parmValue.setContent(nodeEntry.getSystemDescription());\n            eventParm.setValue(parmValue);\n            eventParms.addParm(eventParm);\n        }\n\n        // Add Parms to the event\n        newEvent.setParms(eventParms);\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(newEvent);\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"suspendPollingServiceEvent: Created suspendPollingService event for nodeid: \" + ifEntry.getNodeId() + \" interface: \" + ifEntry.getIfAddress().getHostAddress() + \" service: \" + svcName);\n        }\n    }","id":15613,"modified_method":"/**\n     * This method is responsible for generating a suspendPollingService event\n     * and adding it to the event list.\n     * \n     * @param nodeEntry\n     *            Entry of node for which a service is to be polled\n     * @param ifEntry\n     *            Entry of interface which a service is to be polled\n     * @param svcName\n     *            Service name\n     */\n    private void createSuspendPollingServiceEvent(DbNodeEntry nodeEntry, DbIpInterfaceEntry ifEntry, String svcName) {\n        \n        EventBuilder bldr = serviceEventBuilder(EventConstants.SUSPEND_POLLING_SERVICE_EVENT_UEI, ifEntry.getNodeId(), ifEntry.getIfAddress().getHostAddress(), svcName);\n\n        // Add ip host name\n        bldr.addParam(EventConstants.PARM_IP_HOSTNAME, ifEntry.getHostname() == null ? \"\" : ifEntry.getHostname());\n        \n        // Add nodeSysName\n        if (nodeEntry.getSystemName() != null) {\n            bldr.addParam(EventConstants.PARM_NODE_SYSNAME, nodeEntry.getSystemName());\n        }\n\n        // Add nodeSysDescription\n        if (nodeEntry.getSystemDescription() != null) {\n            bldr.addParam(EventConstants.PARM_NODE_SYSDESCRIPTION, nodeEntry.getSystemDescription());\n        }\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(bldr.getEvent());\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"suspendPollingServiceEvent: Created suspendPollingService event for nodeid: \" + ifEntry.getNodeId() + \" interface: \" + ifEntry.getIfAddress().getHostAddress() + \" service: \" + svcName);\n        }\n    }","commit_id":"a81cc97bd6414d29e07753f7eea9fe24cc790441","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method is responsible for generating a duplicateIpAddress event and\n     * adding it to the event list.\n     * \n     * @param ifEntry\n     *            Entry of new interface.\n     */\n    private void createDuplicateIpAddressEvent(DbIpInterfaceEntry ifEntry) {\n        if (log().isDebugEnabled()) {\n            log().debug(\"createDuplicateIpAddressEvent: nodeId: \" + ifEntry.getNodeId() + \" interface: \" + ifEntry.getIfAddress().getHostAddress());\n        }\n\n        Event newEvent = new Event();\n\n        newEvent.setUei(EventConstants.DUPLICATE_IPINTERFACE_EVENT_UEI);\n\n        newEvent.setSource(\"OpenNMS.Capsd\");\n\n        newEvent.setNodeid(ifEntry.getNodeId());\n\n        newEvent.setHost(Capsd.getLocalHostAddress());\n\n        newEvent.setInterface(ifEntry.getIfAddress().getHostAddress());\n\n        newEvent.setTime(EventConstants.formatToString(new java.util.Date()));\n\n        // Add appropriate parms\n        Parms eventParms = new Parms();\n        Parm eventParm = null;\n        Value parmValue = null;\n\n        // Add ip host name\n        String hostname = null;\n        if (ifEntry.getHostname() == null) {\n            hostname = \"\";\n        } else {\n            hostname = ifEntry.getHostname();\n        }\n\n        eventParm = new Parm();\n        eventParm.setParmName(EventConstants.PARM_IP_HOSTNAME);\n        parmValue = new Value();\n        parmValue.setContent(hostname);\n        eventParm.setValue(parmValue);\n        eventParms.addParm(eventParm);\n\n        // Add discovery method\n        eventParm = new Parm();\n        eventParm.setParmName(EventConstants.PARM_METHOD);\n        parmValue = new Value();\n        parmValue.setContent(\"icmp\");\n        eventParm.setValue(parmValue);\n        eventParms.addParm(eventParm);\n\n        // Add Parms to the event\n        newEvent.setParms(eventParms);\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(newEvent);\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"createDuplicateIpAddressEvent: successfully created duplicateIpAddress event for nodeid: \" + ifEntry.getNodeId());\n        }\n    }","id":15614,"modified_method":"/**\n     * This method is responsible for generating a duplicateIpAddress event and\n     * adding it to the event list.\n     * \n     * @param ifEntry\n     *            Entry of new interface.\n     */\n    private void createDuplicateIpAddressEvent(DbIpInterfaceEntry ifEntry) {\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"createDuplicateIpAddressEvent: nodeId: \" + ifEntry.getNodeId() + \" interface: \" + ifEntry.getIfAddress().getHostAddress());\n        }\n\n        EventBuilder bldr = interfaceEventBuilder(EventConstants.DUPLICATE_IPINTERFACE_EVENT_UEI, ifEntry.getNodeId(), ifEntry.getIfAddress().getHostAddress());\n\n        bldr.addParam(EventConstants.PARM_IP_HOSTNAME, ifEntry.getHostname() == null ? \"\" : ifEntry.getHostname());\n\n        // Add discovery method\n        bldr.addParam(EventConstants.PARM_METHOD, \"icmp\");\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(bldr.getEvent());\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"createDuplicateIpAddressEvent: successfully created duplicateIpAddress event for nodeid: \" + ifEntry.getNodeId());\n        }\n    }","commit_id":"a81cc97bd6414d29e07753f7eea9fe24cc790441","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method is responsible for generating a nodeLabelChanged event and\n     * adding it to the event list.\n     * \n     * @param updatedEntry\n     *            Updated node entry object\n     * @param originalEntry\n     *            Original node entry object\n     */\n    private void createNodeLabelChangedEvent(DbNodeEntry updatedEntry, DbNodeEntry originalEntry) {\n        if (log().isDebugEnabled()) {\n            log().debug(\"createNodeLabelChangedEvent: nodeId: \" + updatedEntry.getNodeId() + \" oldLabel: '\" + originalEntry.getLabel() + \"' oldSource: '\" + originalEntry.getLabelSource() + \"' newLabel: '\" + updatedEntry.getLabel() + \"' newLabelSource: '\" + updatedEntry.getLabelSource() + \"'\");\n        }\n\n        Event newEvent = new Event();\n\n        newEvent.setUei(EventConstants.NODE_LABEL_CHANGED_EVENT_UEI);\n\n        newEvent.setSource(\"OpenNMS.Capsd\");\n\n        newEvent.setNodeid(updatedEntry.getNodeId());\n\n        newEvent.setHost(Capsd.getLocalHostAddress());\n\n        newEvent.setTime(EventConstants.formatToString(new java.util.Date()));\n\n        // Add appropriate parms\n        Parms eventParms = new Parms();\n        Parm eventParm = null;\n        Value parmValue = null;\n\n        if (originalEntry.getLabel() != null) {\n            // Add old node label\n            eventParm = new Parm();\n            eventParm.setParmName(EventConstants.PARM_OLD_NODE_LABEL);\n            parmValue = new Value();\n            parmValue.setContent(originalEntry.getLabel());\n            eventParm.setValue(parmValue);\n            eventParms.addParm(eventParm);\n\n            // Add old node label source\n            eventParm = new Parm();\n            eventParm.setParmName(EventConstants.PARM_OLD_NODE_LABEL_SOURCE);\n            parmValue = new Value();\n            parmValue.setContent(String.valueOf(originalEntry.getLabelSource()));\n            eventParm.setValue(parmValue);\n            eventParms.addParm(eventParm);\n        }\n\n        if (updatedEntry.getLabel() != null) {\n            // Add new node label\n            eventParm = new Parm();\n            eventParm.setParmName(EventConstants.PARM_NEW_NODE_LABEL);\n            parmValue = new Value();\n            parmValue.setContent(updatedEntry.getLabel());\n            eventParm.setValue(parmValue);\n            eventParms.addParm(eventParm);\n\n            // Add new node label source\n            eventParm = new Parm();\n            eventParm.setParmName(EventConstants.PARM_NEW_NODE_LABEL_SOURCE);\n            parmValue = new Value();\n            parmValue.setContent(String.valueOf(updatedEntry.getLabelSource()));\n            eventParm.setValue(parmValue);\n            eventParms.addParm(eventParm);\n        }\n\n        // Add Parms to the event\n        newEvent.setParms(eventParms);\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(newEvent);\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"createNodeLabelChangedEvent: successfully created nodeLabelChanged event for nodeid: \" + updatedEntry.getNodeId());\n        }\n    }","id":15615,"modified_method":"/**\n     * This method is responsible for generating a nodeLabelChanged event and\n     * adding it to the event list.\n     * \n     * @param updatedEntry\n     *            Updated node entry object\n     * @param originalEntry\n     *            Original node entry object\n     */\n    private void createNodeLabelChangedEvent(DbNodeEntry updatedEntry, DbNodeEntry originalEntry) {\n        if (log().isDebugEnabled()) {\n            log().debug(\"createNodeLabelChangedEvent: nodeId: \" + updatedEntry.getNodeId() + \" oldLabel: '\" + originalEntry.getLabel() + \"' oldSource: '\" + originalEntry.getLabelSource() + \"' newLabel: '\" + updatedEntry.getLabel() + \"' newLabelSource: '\" + updatedEntry.getLabelSource() + \"'\");\n        }\n\n        EventBuilder bldr = nodeEventBuilder(EventConstants.NODE_LABEL_CHANGED_EVENT_UEI, updatedEntry.getNodeId());\n\n        if (originalEntry.getLabel() != null) {\n            bldr.addParam(EventConstants.PARM_OLD_NODE_LABEL, originalEntry.getLabel());\n            bldr.addParam(EventConstants.PARM_OLD_NODE_LABEL_SOURCE, originalEntry.getLabelSource());\n        }\n\n        if (updatedEntry.getLabel() != null) {\n            bldr.addParam(EventConstants.PARM_NEW_NODE_LABEL, updatedEntry.getLabel());\n            bldr.addParam(EventConstants.PARM_NEW_NODE_LABEL_SOURCE, updatedEntry.getLabelSource());\n        }\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(bldr.getEvent());\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"createNodeLabelChangedEvent: successfully created nodeLabelChanged event for nodeid: \" + updatedEntry.getNodeId());\n        }\n    }","commit_id":"a81cc97bd6414d29e07753f7eea9fe24cc790441","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method is responsible for generating a interfaceSupportsSNMPEvent\n     * event and adding it to the event list.\n     * \n     * @param ifEntry\n     *            Entry of interface which has gained a service\n     */\n    private void createInterfaceSupportsSNMPEvent(DbIpInterfaceEntry ifEntry) {\n        if (log().isDebugEnabled()) {\n            log().debug(\"createInterfaceSupportsSNMPEvent: nodeId: \" + ifEntry.getNodeId() + \" interface: \" + ifEntry.getIfAddress().getHostAddress());\n        }\n\n        Event newEvent = new Event();\n\n        newEvent.setUei(EventConstants.INTERFACE_SUPPORTS_SNMP_EVENT_UEI);\n\n        newEvent.setSource(\"OpenNMS.Capsd\");\n\n        newEvent.setNodeid(ifEntry.getNodeId());\n\n        newEvent.setHost(Capsd.getLocalHostAddress());\n\n        newEvent.setInterface(ifEntry.getIfAddress().getHostAddress());\n\n        newEvent.setTime(EventConstants.formatToString(new java.util.Date()));\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(newEvent);\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"interfaceSupportsSNMPEvent: successfully created interfaceSupportsSNMPEvent event for nodeid: \" + ifEntry.getNodeId());\n        }\n    }","id":15616,"modified_method":"/**\n     * This method is responsible for generating a interfaceSupportsSNMPEvent\n     * event and adding it to the event list.\n     * \n     * @param ifEntry\n     *            Entry of interface which has gained a service\n     */\n    private void createInterfaceSupportsSNMPEvent(DbIpInterfaceEntry ifEntry) {\n        if (log().isDebugEnabled()) {\n            log().debug(\"createInterfaceSupportsSNMPEvent: nodeId: \" + ifEntry.getNodeId() + \" interface: \" + ifEntry.getIfAddress().getHostAddress());\n        }\n        \n        EventBuilder bldr = interfaceEventBuilder(EventConstants.INTERFACE_SUPPORTS_SNMP_EVENT_UEI, ifEntry.getNodeId(), ifEntry.getIfAddress().getHostAddress());\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(bldr.getEvent());\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"interfaceSupportsSNMPEvent: successfully created interfaceSupportsSNMPEvent event for nodeid: \" + ifEntry.getNodeId());\n        }\n    }","commit_id":"a81cc97bd6414d29e07753f7eea9fe24cc790441","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method is responsible for generating a resumePollingService event\n     * and adding it to the event list.\n     * \n     * @param nodeEntry\n     *            Entry of node for which a service is to be polled\n     * @param ifEntry\n     *            Entry of interface which a service is to be polled\n     * @param svcName\n     *            Service name\n     */\n    private void createResumePollingServiceEvent(DbNodeEntry nodeEntry, DbIpInterfaceEntry ifEntry, String svcName) {\n        Event newEvent = new Event();\n\n        newEvent.setUei(EventConstants.RESUME_POLLING_SERVICE_EVENT_UEI);\n\n        newEvent.setSource(\"OpenNMS.Capsd\");\n\n        newEvent.setNodeid(ifEntry.getNodeId());\n\n        newEvent.setHost(Capsd.getLocalHostAddress());\n\n        newEvent.setInterface(ifEntry.getIfAddress().getHostAddress());\n\n        newEvent.setService(svcName);\n\n        newEvent.setTime(EventConstants.formatToString(new java.util.Date()));\n\n        // Add appropriate parms\n        Parms eventParms = new Parms();\n        Parm eventParm = null;\n        Value parmValue = null;\n\n        // Add ip host name\n        String hostname = null;\n        if (ifEntry.getHostname() == null) {\n            hostname = \"\";\n        } else {\n            hostname = ifEntry.getHostname();\n        }\n\n        eventParm = new Parm();\n        eventParm.setParmName(EventConstants.PARM_IP_HOSTNAME);\n        parmValue = new Value();\n        parmValue.setContent(hostname);\n        eventParm.setValue(parmValue);\n        eventParms.addParm(eventParm);\n\n        // Add nodeSysName\n        if (nodeEntry.getSystemName() != null) {\n            eventParm = new Parm();\n            eventParm.setParmName(EventConstants.PARM_NODE_SYSNAME);\n            parmValue = new Value();\n            parmValue.setContent(nodeEntry.getSystemName());\n            eventParm.setValue(parmValue);\n            eventParms.addParm(eventParm);\n        }\n\n        // Add nodeSysDescription\n        if (nodeEntry.getSystemDescription() != null) {\n            eventParm = new Parm();\n            eventParm.setParmName(EventConstants.PARM_NODE_SYSDESCRIPTION);\n            parmValue = new Value();\n            parmValue.setContent(nodeEntry.getSystemDescription());\n            eventParm.setValue(parmValue);\n            eventParms.addParm(eventParm);\n        }\n\n        // Add Parms to the event\n        newEvent.setParms(eventParms);\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(newEvent);\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"resumePollingServiceEvent: Created resumePollingService event for nodeid: \" + ifEntry.getNodeId() + \" interface: \" + ifEntry.getIfAddress().getHostAddress() + \" service: \" + svcName);\n        }\n    }","id":15617,"modified_method":"/**\n     * This method is responsible for generating a resumePollingService event\n     * and adding it to the event list.\n     * \n     * @param nodeEntry\n     *            Entry of node for which a service is to be polled\n     * @param ifEntry\n     *            Entry of interface which a service is to be polled\n     * @param svcName\n     *            Service name\n     */\n    private void createResumePollingServiceEvent(DbNodeEntry nodeEntry, DbIpInterfaceEntry ifEntry, String svcName) {\n        \n        EventBuilder bldr = serviceEventBuilder(EventConstants.RESUME_POLLING_SERVICE_EVENT_UEI, ifEntry.getNodeId(), ifEntry.getIfAddress().getHostAddress(), svcName);\n\n        // Add ip host name\n        bldr.addParam(EventConstants.PARM_IP_HOSTNAME, ifEntry.getHostname() == null ? \"\" : ifEntry.getHostname());\n\n        // Add nodeSysName\n        if (nodeEntry.getSystemName() != null) {\n            bldr.addParam(EventConstants.PARM_NODE_SYSNAME, nodeEntry.getSystemName());\n        }\n\n        // Add nodeSysDescription\n        if (nodeEntry.getSystemDescription() != null) {\n            bldr.addParam(EventConstants.PARM_NODE_SYSDESCRIPTION, nodeEntry.getSystemDescription());\n        }\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(bldr.getEvent());\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"resumePollingServiceEvent: Created resumePollingService event for nodeid: \" + ifEntry.getNodeId() + \" interface: \" + ifEntry.getIfAddress().getHostAddress() + \" service: \" + svcName);\n        }\n    }","commit_id":"a81cc97bd6414d29e07753f7eea9fe24cc790441","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method is responsible for generating a duplicateNodeDeleted event\n     * and adding it to the event list.\n     * \n     * @param deletedNode\n     *            Entry of duplciate node which was deleted.\n     */\n    private void createDuplicateNodeDeletedEvent(DbNodeEntry deletedNode) {\n        if (log().isDebugEnabled()) {\n            log().debug(\"createDuplicateNodeDeletedEvent: delete nodeid: \" + deletedNode.getNodeId());\n        }\n\n        Event newEvent = new Event();\n\n        newEvent.setUei(EventConstants.DUP_NODE_DELETED_EVENT_UEI);\n\n        newEvent.setSource(\"OpenNMS.Capsd\");\n\n        newEvent.setNodeid(deletedNode.getNodeId());\n\n        newEvent.setHost(Capsd.getLocalHostAddress());\n\n        newEvent.setTime(EventConstants.formatToString(new java.util.Date()));\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(newEvent);\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"createDuplicateNodeDeletedEvent: successfully created duplicateNodeDeleted event for nodeid: \" + deletedNode.getNodeId());\n        }\n    }","id":15618,"modified_method":"/**\n     * This method is responsible for generating a duplicateNodeDeleted event\n     * and adding it to the event list.\n     * \n     * @param deletedNode\n     *            Entry of duplciate node which was deleted.\n     */\n    private void createDuplicateNodeDeletedEvent(DbNodeEntry deletedNode) {\n        if (log().isDebugEnabled()) {\n            log().debug(\"createDuplicateNodeDeletedEvent: delete nodeid: \" + deletedNode.getNodeId());\n        }\n\n        EventBuilder bldr = nodeEventBuilder(EventConstants.DUP_NODE_DELETED_EVENT_UEI, deletedNode.getNodeId());\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(bldr.getEvent());\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"createDuplicateNodeDeletedEvent: successfully created duplicateNodeDeleted event for nodeid: \" + deletedNode.getNodeId());\n        }\n    }","commit_id":"a81cc97bd6414d29e07753f7eea9fe24cc790441","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method is responsible for generating a primarySnmpInterfaceChanged\n     * event and adding it to the event list.\n     * \n     * @param nodeId\n     *            Nodeid of node being rescanned.\n     * @param newPrimaryIf\n     *            new primary SNMP interface address\n     * @param oldPrimaryIf\n     *            old primary SNMP interface address\n     */\n    private void createPrimarySnmpInterfaceChangedEvent(int nodeId, InetAddress newPrimaryIf, InetAddress oldPrimaryIf) {\n        String oldPrimaryAddr = null;\n        if (oldPrimaryIf != null) {\n            oldPrimaryAddr = oldPrimaryIf.getHostAddress();\n        }\n\n        String newPrimaryAddr = null;\n        if (newPrimaryIf != null) {\n            newPrimaryAddr = newPrimaryIf.getHostAddress();\n        }\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"createPrimarySnmpInterfaceChangedEvent: nodeId: \" + nodeId + \"oldPrimarySnmpIf: '\" + oldPrimaryAddr + \"' newPrimarySnmpIf: '\" + newPrimaryAddr + \"'\");\n        }\n\n        Event newEvent = new Event();\n\n        newEvent.setUei(EventConstants.PRIMARY_SNMP_INTERFACE_CHANGED_EVENT_UEI);\n\n        newEvent.setSource(\"OpenNMS.Capsd\");\n\n        newEvent.setNodeid(nodeId);\n\n        newEvent.setInterface(newPrimaryAddr);\n\n        newEvent.setHost(Capsd.getLocalHostAddress());\n\n        newEvent.setService(\"SNMP\");\n\n        newEvent.setTime(EventConstants.formatToString(new java.util.Date()));\n\n        // Add appropriate parms\n        Parms eventParms = new Parms();\n        Parm eventParm = null;\n        Value parmValue = null;\n\n        if (oldPrimaryAddr != null) {\n            // Add old node label\n            eventParm = new Parm();\n            eventParm.setParmName(EventConstants.PARM_OLD_PRIMARY_SNMP_ADDRESS);\n            parmValue = new Value();\n            parmValue.setContent(oldPrimaryAddr);\n            eventParm.setValue(parmValue);\n            eventParms.addParm(eventParm);\n        }\n\n        if (newPrimaryAddr != null) {\n            // Add new node label\n            eventParm = new Parm();\n            eventParm.setParmName(EventConstants.PARM_NEW_PRIMARY_SNMP_ADDRESS);\n            parmValue = new Value();\n            parmValue.setContent(newPrimaryAddr);\n            eventParm.setValue(parmValue);\n            eventParms.addParm(eventParm);\n        }\n\n        // Add Parms to the event\n        newEvent.setParms(eventParms);\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(newEvent);\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"createPrimarySnmpInterfaceChangedEvent: successfully created primarySnmpInterfaceChanged event for nodeid: \" + nodeId);\n        }\n    }","id":15619,"modified_method":"/**\n     * This method is responsible for generating a primarySnmpInterfaceChanged\n     * event and adding it to the event list.\n     * \n     * @param nodeId\n     *            Nodeid of node being rescanned.\n     * @param newPrimaryIf\n     *            new primary SNMP interface address\n     * @param oldPrimaryIf\n     *            old primary SNMP interface address\n     */\n    private void createPrimarySnmpInterfaceChangedEvent(int nodeId, InetAddress newPrimaryIf, InetAddress oldPrimaryIf) {\n        String oldPrimaryAddr = null;\n        if (oldPrimaryIf != null) {\n            oldPrimaryAddr = oldPrimaryIf.getHostAddress();\n        }\n\n        String newPrimaryAddr = null;\n        if (newPrimaryIf != null) {\n            newPrimaryAddr = newPrimaryIf.getHostAddress();\n        }\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"createPrimarySnmpInterfaceChangedEvent: nodeId: \" + nodeId + \"oldPrimarySnmpIf: '\" + oldPrimaryAddr + \"' newPrimarySnmpIf: '\" + newPrimaryAddr + \"'\");\n        }\n\n        EventBuilder bldr = serviceEventBuilder(EventConstants.PRIMARY_SNMP_INTERFACE_CHANGED_EVENT_UEI, nodeId, newPrimaryAddr, \"SNMP\");\n\n        if (oldPrimaryAddr != null) {\n            bldr.addParam(EventConstants.PARM_OLD_PRIMARY_SNMP_ADDRESS, oldPrimaryAddr);\n        }\n\n        if (newPrimaryAddr != null) {\n            bldr.addParam(EventConstants.PARM_NEW_PRIMARY_SNMP_ADDRESS, newPrimaryAddr);\n        }\n\n        // Add event to the list of events to be sent out.\n        m_eventList.add(bldr.getEvent());\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"createPrimarySnmpInterfaceChangedEvent: successfully created primarySnmpInterfaceChanged event for nodeid: \" + nodeId);\n        }\n    }","commit_id":"a81cc97bd6414d29e07753f7eea9fe24cc790441","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Indexable(type = IndexableType.REINDEX)\n\t@Override\n\tpublic BlogsEntry updateEntry(\n\t\t\tlong userId, long entryId, String title, String subtitle,\n\t\t\tString description, String content, Date displayDate,\n\t\t\tboolean allowPingbacks, boolean allowTrackbacks,\n\t\t\tString[] trackbacks, String coverImageCaption,\n\t\t\tImageSelector coverImageImageSelector,\n\t\t\tImageSelector smallImageImageSelector,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\t// Entry\n\n\t\tBlogsEntry entry = blogsEntryPersistence.findByPrimaryKey(entryId);\n\n\t\tvalidate(title, content);\n\n\t\tString oldUrlTitle = entry.getUrlTitle();\n\n\t\tentry.setTitle(title);\n\t\tentry.setSubtitle(subtitle);\n\t\tentry.setUrlTitle(\n\t\t\tgetUniqueUrlTitle(entryId, title, oldUrlTitle, serviceContext));\n\t\tentry.setDescription(description);\n\t\tentry.setContent(content);\n\t\tentry.setDisplayDate(displayDate);\n\t\tentry.setAllowPingbacks(allowPingbacks);\n\t\tentry.setAllowTrackbacks(allowTrackbacks);\n\n\t\tif (entry.isPending() || entry.isDraft()) {\n\t\t}\n\t\telse {\n\t\t\tentry.setStatus(WorkflowConstants.STATUS_DRAFT);\n\t\t}\n\n\t\tentry.setExpandoBridgeAttributes(serviceContext);\n\n\t\tblogsEntryPersistence.update(entry);\n\n\t\t// Resources\n\n\t\tif ((serviceContext.getGroupPermissions() != null) ||\n\t\t\t(serviceContext.getGuestPermissions() != null)) {\n\n\t\t\tupdateEntryResources(entry, serviceContext.getModelPermissions());\n\t\t}\n\n\t\t// Asset\n\n\t\tupdateAsset(\n\t\t\tuserId, entry, serviceContext.getAssetCategoryIds(),\n\t\t\tserviceContext.getAssetTagNames(),\n\t\t\tserviceContext.getAssetLinkEntryIds());\n\n\t\t// Images\n\n\t\tlong coverImageFileEntryId = entry.getCoverImageFileEntryId();\n\t\tString coverImageURL = entry.getCoverImageURL();\n\n\t\tlong deletePreviousCoverImageFileEntryId = 0;\n\n\t\tif (coverImageImageSelector != null) {\n\t\t\tcoverImageFileEntryId = coverImageImageSelector.getImageId();\n\t\t\tcoverImageURL = coverImageImageSelector.getImageURL();\n\n\t\t\tif (coverImageImageSelector.getImageId() == 0) {\n\t\t\t\tif (entry.getCoverImageFileEntryId() != 0) {\n\t\t\t\t\tdeletePreviousCoverImageFileEntryId =\n\t\t\t\t\t\tentry.getCoverImageFileEntryId();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (coverImageImageSelector.getImageId() !=\n\t\t\t\t\t\tentry.getCoverImageFileEntryId()) {\n\n\t\t\t\tif (entry.getCoverImageFileEntryId() != 0) {\n\t\t\t\t\tdeletePreviousCoverImageFileEntryId =\n\t\t\t\t\t\tentry.getCoverImageFileEntryId();\n\t\t\t\t}\n\n\t\t\t\tif (coverImageImageSelector.getImageId() != 0) {\n\t\t\t\t\tcoverImageFileEntryId = addCoverImageFileEntry(\n\t\t\t\t\t\tuserId, entry.getGroupId(), entryId,\n\t\t\t\t\t\tcoverImageImageSelector);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tboolean smallImage = entry.isSmallImage();\n\t\tlong smallImageFileEntryId = entry.getSmallImageFileEntryId();\n\t\tString smallImageURL = entry.getSmallImageURL();\n\n\t\tlong deletePreviousSmallImageFileEntryId = 0;\n\n\t\tif (smallImageImageSelector != null) {\n\t\t\tsmallImage = !smallImageImageSelector.isRemoveSmallImage();\n\t\t\tsmallImageFileEntryId = smallImageImageSelector.getImageId();\n\t\t\tsmallImageURL = smallImageImageSelector.getImageURL();\n\n\t\t\tif (smallImageImageSelector.getImageId() == 0) {\n\t\t\t\tif (entry.getSmallImageFileEntryId() != 0) {\n\t\t\t\t\tdeletePreviousSmallImageFileEntryId =\n\t\t\t\t\t\tentry.getSmallImageFileEntryId();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (smallImageImageSelector.getImageId() !=\n\t\t\t\t\t\tentry.getSmallImageFileEntryId()) {\n\n\t\t\t\tif (entry.getSmallImageFileEntryId() != 0) {\n\t\t\t\t\tdeletePreviousSmallImageFileEntryId =\n\t\t\t\t\t\tentry.getSmallImageFileEntryId();\n\t\t\t\t}\n\n\t\t\t\tif (smallImageImageSelector.getImageId() != 0) {\n\t\t\t\t\tsmallImageFileEntryId = addSmallImageFileEntry(\n\t\t\t\t\t\tuserId, entry.getGroupId(), entry.getEntryId(),\n\t\t\t\t\t\tsmallImageImageSelector);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvalidate(smallImageFileEntryId);\n\n\t\tentry.setCoverImageCaption(coverImageCaption);\n\t\tentry.setCoverImageFileEntryId(coverImageFileEntryId);\n\t\tentry.setCoverImageURL(coverImageURL);\n\t\tentry.setSmallImage(smallImage);\n\t\tentry.setSmallImageFileEntryId(smallImageFileEntryId);\n\t\tentry.setSmallImageURL(smallImageURL);\n\n\t\tblogsEntryPersistence.update(entry);\n\n\t\t// Workflow\n\n\t\tboolean pingOldTrackbacks = false;\n\n\t\tif (!oldUrlTitle.equals(entry.getUrlTitle())) {\n\t\t\tpingOldTrackbacks = true;\n\t\t}\n\n\t\tserviceContext.setAttribute(\n\t\t\t\"pingOldTrackbacks\", String.valueOf(pingOldTrackbacks));\n\n\t\tif (ArrayUtil.isNotEmpty(trackbacks)) {\n\t\t\tserviceContext.setAttribute(\"trackbacks\", trackbacks);\n\t\t}\n\t\telse {\n\t\t\tserviceContext.setAttribute(\"trackbacks\", null);\n\t\t}\n\n\t\tentry = startWorkflowInstance(userId, entry, serviceContext);\n\n\t\tif (deletePreviousCoverImageFileEntryId != 0) {\n\t\t\tPortletFileRepositoryUtil.deletePortletFileEntry(\n\t\t\t\tdeletePreviousCoverImageFileEntryId);\n\t\t}\n\n\t\tif (deletePreviousSmallImageFileEntryId != 0) {\n\t\t\tPortletFileRepositoryUtil.deletePortletFileEntry(\n\t\t\t\tdeletePreviousSmallImageFileEntryId);\n\t\t}\n\n\t\tif ((coverImageImageSelector != null) &&\n\t\t\t(coverImageImageSelector.getImageId() != 0) &&\n\t\t\t(coverImageImageSelector.getImageId() !=\n\t\t\t\tentry.getCoverImageFileEntryId())) {\n\n\t\t\tlong coverImageSelectorImageId =\n\t\t\t\tsmallImageImageSelector.getImageId();\n\n\t\t\tFileEntry coverImageFileEntry =\n\t\t\t\tPortletFileRepositoryUtil.getPortletFileEntry(\n\t\t\t\t\tcoverImageSelectorImageId);\n\n\t\t\tif (coverImageFileEntry.isRepositoryCapabilityProvided(\n\t\t\t\t\tTemporaryFileEntriesCapability.class)) {\n\n\t\t\t\tPortletFileRepositoryUtil.deletePortletFileEntry(\n\t\t\t\t\tcoverImageImageSelector.getImageId());\n\t\t\t}\n\t\t}\n\n\t\tif ((smallImageImageSelector != null) &&\n\t\t\t(smallImageImageSelector.getImageId() != 0) &&\n\t\t\t(smallImageImageSelector.getImageId() !=\n\t\t\t\tentry.getCoverImageFileEntryId())) {\n\n\t\t\tlong smallImageSelectorImageId =\n\t\t\t\tsmallImageImageSelector.getImageId();\n\n\t\t\tFileEntry smallImageFileEntry =\n\t\t\t\tPortletFileRepositoryUtil.getPortletFileEntry(\n\t\t\t\t\tsmallImageSelectorImageId);\n\n\t\t\tif (smallImageFileEntry.isRepositoryCapabilityProvided(\n\t\t\t\t\tTemporaryFileEntriesCapability.class)) {\n\n\t\t\t\tPortletFileRepositoryUtil.deletePortletFileEntry(\n\t\t\t\t\tsmallImageImageSelector.getImageId());\n\t\t\t}\n\t\t}\n\n\t\treturn entry;\n\t}","id":15620,"modified_method":"@Indexable(type = IndexableType.REINDEX)\n\t@Override\n\tpublic BlogsEntry updateEntry(\n\t\t\tlong userId, long entryId, String title, String subtitle,\n\t\t\tString description, String content, Date displayDate,\n\t\t\tboolean allowPingbacks, boolean allowTrackbacks,\n\t\t\tString[] trackbacks, String coverImageCaption,\n\t\t\tImageSelector coverImageImageSelector,\n\t\t\tImageSelector smallImageImageSelector,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\t// Entry\n\n\t\tBlogsEntry entry = blogsEntryPersistence.findByPrimaryKey(entryId);\n\n\t\tvalidate(title, content);\n\n\t\tString oldUrlTitle = entry.getUrlTitle();\n\n\t\tentry.setTitle(title);\n\t\tentry.setSubtitle(subtitle);\n\t\tentry.setUrlTitle(\n\t\t\tgetUniqueUrlTitle(entryId, title, oldUrlTitle, serviceContext));\n\t\tentry.setDescription(description);\n\t\tentry.setContent(content);\n\t\tentry.setDisplayDate(displayDate);\n\t\tentry.setAllowPingbacks(allowPingbacks);\n\t\tentry.setAllowTrackbacks(allowTrackbacks);\n\n\t\tif (entry.isPending() || entry.isDraft()) {\n\t\t}\n\t\telse {\n\t\t\tentry.setStatus(WorkflowConstants.STATUS_DRAFT);\n\t\t}\n\n\t\tentry.setExpandoBridgeAttributes(serviceContext);\n\n\t\tblogsEntryPersistence.update(entry);\n\n\t\t// Resources\n\n\t\tif ((serviceContext.getGroupPermissions() != null) ||\n\t\t\t(serviceContext.getGuestPermissions() != null)) {\n\n\t\t\tupdateEntryResources(entry, serviceContext.getModelPermissions());\n\t\t}\n\n\t\t// Asset\n\n\t\tupdateAsset(\n\t\t\tuserId, entry, serviceContext.getAssetCategoryIds(),\n\t\t\tserviceContext.getAssetTagNames(),\n\t\t\tserviceContext.getAssetLinkEntryIds());\n\n\t\t// Images\n\n\t\tlong coverImageFileEntryId = entry.getCoverImageFileEntryId();\n\t\tString coverImageURL = entry.getCoverImageURL();\n\n\t\tlong deletePreviousCoverImageFileEntryId = 0;\n\n\t\tif (coverImageImageSelector != null) {\n\t\t\tcoverImageFileEntryId = coverImageImageSelector.getImageId();\n\t\t\tcoverImageURL = coverImageImageSelector.getImageURL();\n\n\t\t\tif (coverImageImageSelector.getImageId() == 0) {\n\t\t\t\tif (entry.getCoverImageFileEntryId() != 0) {\n\t\t\t\t\tdeletePreviousCoverImageFileEntryId =\n\t\t\t\t\t\tentry.getCoverImageFileEntryId();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (coverImageImageSelector.getImageId() !=\n\t\t\t\t\t\tentry.getCoverImageFileEntryId()) {\n\n\t\t\t\tif (entry.getCoverImageFileEntryId() != 0) {\n\t\t\t\t\tdeletePreviousCoverImageFileEntryId =\n\t\t\t\t\t\tentry.getCoverImageFileEntryId();\n\t\t\t\t}\n\n\t\t\t\tif (coverImageImageSelector.getImageId() != 0) {\n\t\t\t\t\tcoverImageFileEntryId = addCoverImageFileEntry(\n\t\t\t\t\t\tuserId, entry.getGroupId(), entryId,\n\t\t\t\t\t\tcoverImageImageSelector);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tboolean smallImage = entry.isSmallImage();\n\t\tlong smallImageFileEntryId = entry.getSmallImageFileEntryId();\n\t\tString smallImageURL = entry.getSmallImageURL();\n\n\t\tlong deletePreviousSmallImageFileEntryId = 0;\n\n\t\tif (smallImageImageSelector != null) {\n\t\t\tsmallImage = !smallImageImageSelector.isRemoveSmallImage();\n\t\t\tsmallImageFileEntryId = smallImageImageSelector.getImageId();\n\t\t\tsmallImageURL = smallImageImageSelector.getImageURL();\n\n\t\t\tif (smallImageImageSelector.getImageId() == 0) {\n\t\t\t\tif (entry.getSmallImageFileEntryId() != 0) {\n\t\t\t\t\tdeletePreviousSmallImageFileEntryId =\n\t\t\t\t\t\tentry.getSmallImageFileEntryId();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (smallImageImageSelector.getImageId() !=\n\t\t\t\t\t\tentry.getSmallImageFileEntryId()) {\n\n\t\t\t\tif (entry.getSmallImageFileEntryId() != 0) {\n\t\t\t\t\tdeletePreviousSmallImageFileEntryId =\n\t\t\t\t\t\tentry.getSmallImageFileEntryId();\n\t\t\t\t}\n\n\t\t\t\tif (smallImageImageSelector.getImageId() != 0) {\n\t\t\t\t\tsmallImageFileEntryId = addSmallImageFileEntry(\n\t\t\t\t\t\tuserId, entry.getGroupId(), entry.getEntryId(),\n\t\t\t\t\t\tsmallImageImageSelector);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvalidate(smallImageFileEntryId);\n\n\t\tentry.setCoverImageCaption(coverImageCaption);\n\t\tentry.setCoverImageFileEntryId(coverImageFileEntryId);\n\t\tentry.setCoverImageURL(coverImageURL);\n\t\tentry.setSmallImage(smallImage);\n\t\tentry.setSmallImageFileEntryId(smallImageFileEntryId);\n\t\tentry.setSmallImageURL(smallImageURL);\n\n\t\tblogsEntryPersistence.update(entry);\n\n\t\t// Workflow\n\n\t\tboolean pingOldTrackbacks = false;\n\n\t\tif (!oldUrlTitle.equals(entry.getUrlTitle())) {\n\t\t\tpingOldTrackbacks = true;\n\t\t}\n\n\t\tserviceContext.setAttribute(\n\t\t\t\"pingOldTrackbacks\", String.valueOf(pingOldTrackbacks));\n\n\t\tif (ArrayUtil.isNotEmpty(trackbacks)) {\n\t\t\tserviceContext.setAttribute(\"trackbacks\", trackbacks);\n\t\t}\n\t\telse {\n\t\t\tserviceContext.setAttribute(\"trackbacks\", null);\n\t\t}\n\n\t\tentry = startWorkflowInstance(userId, entry, serviceContext);\n\n\t\tif (deletePreviousCoverImageFileEntryId != 0) {\n\t\t\tPortletFileRepositoryUtil.deletePortletFileEntry(\n\t\t\t\tdeletePreviousCoverImageFileEntryId);\n\t\t}\n\n\t\tif (deletePreviousSmallImageFileEntryId != 0) {\n\t\t\tPortletFileRepositoryUtil.deletePortletFileEntry(\n\t\t\t\tdeletePreviousSmallImageFileEntryId);\n\t\t}\n\n\t\tif ((coverImageImageSelector != null) &&\n\t\t\t(coverImageImageSelector.getImageId() !=\n\t\t\t\tentry.getCoverImageFileEntryId())) {\n\n\t\t\tdeleteTempImageSelectorImage(coverImageImageSelector);\n\t\t}\n\n\t\tif ((smallImageImageSelector != null) &&\n\t\t\t(smallImageImageSelector.getImageId() !=\n\t\t\t\tentry.getCoverImageFileEntryId())) {\n\n\t\t\tdeleteTempImageSelectorImage(smallImageImageSelector);\n\t\t}\n\n\t\treturn entry;\n\t}","commit_id":"77df80984d01e58f67634aaace124ff879888562","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Indexable(type = IndexableType.REINDEX)\n\t@Override\n\tpublic BlogsEntry addEntry(\n\t\t\tlong userId, String title, String subtitle, String description,\n\t\t\tString content, Date displayDate, boolean allowPingbacks,\n\t\t\tboolean allowTrackbacks, String[] trackbacks,\n\t\t\tString coverImageCaption, ImageSelector coverImageImageSelector,\n\t\t\tImageSelector smallImageImageSelector,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\t// Entry\n\n\t\tUser user = userPersistence.findByPrimaryKey(userId);\n\t\tlong groupId = serviceContext.getScopeGroupId();\n\n\t\tlong entryId = counterLocalService.increment();\n\n\t\tvalidate(title, content);\n\n\t\tBlogsEntry entry = blogsEntryPersistence.create(entryId);\n\n\t\tentry.setUuid(serviceContext.getUuid());\n\t\tentry.setGroupId(groupId);\n\t\tentry.setCompanyId(user.getCompanyId());\n\t\tentry.setUserId(user.getUserId());\n\t\tentry.setUserName(user.getFullName());\n\t\tentry.setTitle(title);\n\t\tentry.setSubtitle(subtitle);\n\t\tentry.setUrlTitle(\n\t\t\tgetUniqueUrlTitle(entryId, title, null, serviceContext));\n\t\tentry.setDescription(description);\n\t\tentry.setContent(content);\n\t\tentry.setDisplayDate(displayDate);\n\t\tentry.setAllowPingbacks(allowPingbacks);\n\t\tentry.setAllowTrackbacks(allowTrackbacks);\n\t\tentry.setStatus(WorkflowConstants.STATUS_DRAFT);\n\t\tentry.setStatusByUserId(userId);\n\t\tentry.setStatusDate(serviceContext.getModifiedDate(null));\n\t\tentry.setExpandoBridgeAttributes(serviceContext);\n\n\t\tblogsEntryPersistence.update(entry);\n\n\t\t// Resources\n\n\t\tif (serviceContext.isAddGroupPermissions() ||\n\t\t\tserviceContext.isAddGuestPermissions()) {\n\n\t\t\taddEntryResources(\n\t\t\t\tentry, serviceContext.isAddGroupPermissions(),\n\t\t\t\tserviceContext.isAddGuestPermissions());\n\t\t}\n\t\telse {\n\t\t\taddEntryResources(entry, serviceContext.getModelPermissions());\n\t\t}\n\n\t\t// Asset\n\n\t\tupdateAsset(\n\t\t\tuserId, entry, serviceContext.getAssetCategoryIds(),\n\t\t\tserviceContext.getAssetTagNames(),\n\t\t\tserviceContext.getAssetLinkEntryIds());\n\n\t\t// Comment\n\n\t\taddDiscussion(entry, userId, groupId);\n\n\t\t// Images\n\n\t\tlong coverImageFileEntryId = 0;\n\t\tString coverImageURL = null;\n\n\t\tif (coverImageImageSelector != null) {\n\t\t\tcoverImageFileEntryId = coverImageImageSelector.getImageId();\n\t\t\tcoverImageURL = coverImageImageSelector.getImageURL();\n\t\t}\n\n\t\tif (coverImageFileEntryId != 0) {\n\t\t\tcoverImageFileEntryId = addCoverImageFileEntry(\n\t\t\t\tuserId, groupId, entryId, coverImageImageSelector);\n\t\t}\n\n\t\tboolean smallImage = false;\n\t\tlong smallImageFileEntryId = 0;\n\t\tString smallImageURL = null;\n\n\t\tif (smallImageImageSelector != null) {\n\t\t\tsmallImage = !smallImageImageSelector.isRemoveSmallImage();\n\t\t\tsmallImageFileEntryId = smallImageImageSelector.getImageId();\n\t\t\tsmallImageURL = smallImageImageSelector.getImageURL();\n\t\t}\n\n\t\tif (smallImageFileEntryId != 0) {\n\t\t\tsmallImageFileEntryId = addSmallImageFileEntry(\n\t\t\t\tuserId, groupId, entryId, smallImageImageSelector);\n\t\t}\n\n\t\tvalidate(smallImageFileEntryId);\n\n\t\tentry.setCoverImageCaption(coverImageCaption);\n\t\tentry.setCoverImageFileEntryId(coverImageFileEntryId);\n\t\tentry.setCoverImageURL(coverImageURL);\n\t\tentry.setSmallImage(smallImage);\n\t\tentry.setSmallImageFileEntryId(smallImageFileEntryId);\n\t\tentry.setSmallImageURL(smallImageURL);\n\n\t\tblogsEntryPersistence.update(entry);\n\n\t\t// Workflow\n\n\t\tif (ArrayUtil.isNotEmpty(trackbacks)) {\n\t\t\tserviceContext.setAttribute(\"trackbacks\", trackbacks);\n\t\t}\n\t\telse {\n\t\t\tserviceContext.setAttribute(\"trackbacks\", null);\n\t\t}\n\n\t\tentry = startWorkflowInstance(userId, entry, serviceContext);\n\n\t\tif ((coverImageImageSelector != null) &&\n\t\t\t(coverImageImageSelector.getImageId() != 0)) {\n\n\t\t\tlong coverImageSelectorImageId =\n\t\t\t\tcoverImageImageSelector.getImageId();\n\n\t\t\tFileEntry coverImageFileEntry =\n\t\t\t\tPortletFileRepositoryUtil.getPortletFileEntry(\n\t\t\t\t\tcoverImageSelectorImageId);\n\n\t\t\tif (coverImageFileEntry.isRepositoryCapabilityProvided(\n\t\t\t\t\tTemporaryFileEntriesCapability.class)) {\n\n\t\t\t\tPortletFileRepositoryUtil.deletePortletFileEntry(\n\t\t\t\t\tcoverImageImageSelector.getImageId());\n\t\t\t}\n\t\t}\n\n\t\tif ((smallImageImageSelector != null) &&\n\t\t\t(smallImageImageSelector.getImageId() != 0)) {\n\n\t\t\tlong smallImageSelectorImageId =\n\t\t\t\tsmallImageImageSelector.getImageId();\n\n\t\t\tFileEntry smallImageFileEntry =\n\t\t\t\tPortletFileRepositoryUtil.getPortletFileEntry(\n\t\t\t\t\tsmallImageSelectorImageId);\n\n\t\t\tif (smallImageFileEntry.isRepositoryCapabilityProvided(\n\t\t\t\t\tTemporaryFileEntriesCapability.class)) {\n\n\t\t\t\tPortletFileRepositoryUtil.deletePortletFileEntry(\n\t\t\t\t\tsmallImageImageSelector.getImageId());\n\t\t\t}\n\t\t}\n\n\t\treturn entry;\n\t}","id":15621,"modified_method":"@Indexable(type = IndexableType.REINDEX)\n\t@Override\n\tpublic BlogsEntry addEntry(\n\t\t\tlong userId, String title, String subtitle, String description,\n\t\t\tString content, Date displayDate, boolean allowPingbacks,\n\t\t\tboolean allowTrackbacks, String[] trackbacks,\n\t\t\tString coverImageCaption, ImageSelector coverImageImageSelector,\n\t\t\tImageSelector smallImageImageSelector,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\t// Entry\n\n\t\tUser user = userPersistence.findByPrimaryKey(userId);\n\t\tlong groupId = serviceContext.getScopeGroupId();\n\n\t\tlong entryId = counterLocalService.increment();\n\n\t\tvalidate(title, content);\n\n\t\tBlogsEntry entry = blogsEntryPersistence.create(entryId);\n\n\t\tentry.setUuid(serviceContext.getUuid());\n\t\tentry.setGroupId(groupId);\n\t\tentry.setCompanyId(user.getCompanyId());\n\t\tentry.setUserId(user.getUserId());\n\t\tentry.setUserName(user.getFullName());\n\t\tentry.setTitle(title);\n\t\tentry.setSubtitle(subtitle);\n\t\tentry.setUrlTitle(\n\t\t\tgetUniqueUrlTitle(entryId, title, null, serviceContext));\n\t\tentry.setDescription(description);\n\t\tentry.setContent(content);\n\t\tentry.setDisplayDate(displayDate);\n\t\tentry.setAllowPingbacks(allowPingbacks);\n\t\tentry.setAllowTrackbacks(allowTrackbacks);\n\t\tentry.setStatus(WorkflowConstants.STATUS_DRAFT);\n\t\tentry.setStatusByUserId(userId);\n\t\tentry.setStatusDate(serviceContext.getModifiedDate(null));\n\t\tentry.setExpandoBridgeAttributes(serviceContext);\n\n\t\tblogsEntryPersistence.update(entry);\n\n\t\t// Resources\n\n\t\tif (serviceContext.isAddGroupPermissions() ||\n\t\t\tserviceContext.isAddGuestPermissions()) {\n\n\t\t\taddEntryResources(\n\t\t\t\tentry, serviceContext.isAddGroupPermissions(),\n\t\t\t\tserviceContext.isAddGuestPermissions());\n\t\t}\n\t\telse {\n\t\t\taddEntryResources(entry, serviceContext.getModelPermissions());\n\t\t}\n\n\t\t// Asset\n\n\t\tupdateAsset(\n\t\t\tuserId, entry, serviceContext.getAssetCategoryIds(),\n\t\t\tserviceContext.getAssetTagNames(),\n\t\t\tserviceContext.getAssetLinkEntryIds());\n\n\t\t// Comment\n\n\t\taddDiscussion(entry, userId, groupId);\n\n\t\t// Images\n\n\t\tlong coverImageFileEntryId = 0;\n\t\tString coverImageURL = null;\n\n\t\tif (coverImageImageSelector != null) {\n\t\t\tcoverImageFileEntryId = coverImageImageSelector.getImageId();\n\t\t\tcoverImageURL = coverImageImageSelector.getImageURL();\n\t\t}\n\n\t\tif (coverImageFileEntryId != 0) {\n\t\t\tcoverImageFileEntryId = addCoverImageFileEntry(\n\t\t\t\tuserId, groupId, entryId, coverImageImageSelector);\n\t\t}\n\n\t\tboolean smallImage = false;\n\t\tlong smallImageFileEntryId = 0;\n\t\tString smallImageURL = null;\n\n\t\tif (smallImageImageSelector != null) {\n\t\t\tsmallImage = !smallImageImageSelector.isRemoveSmallImage();\n\t\t\tsmallImageFileEntryId = smallImageImageSelector.getImageId();\n\t\t\tsmallImageURL = smallImageImageSelector.getImageURL();\n\t\t}\n\n\t\tif (smallImageFileEntryId != 0) {\n\t\t\tsmallImageFileEntryId = addSmallImageFileEntry(\n\t\t\t\tuserId, groupId, entryId, smallImageImageSelector);\n\t\t}\n\n\t\tvalidate(smallImageFileEntryId);\n\n\t\tentry.setCoverImageCaption(coverImageCaption);\n\t\tentry.setCoverImageFileEntryId(coverImageFileEntryId);\n\t\tentry.setCoverImageURL(coverImageURL);\n\t\tentry.setSmallImage(smallImage);\n\t\tentry.setSmallImageFileEntryId(smallImageFileEntryId);\n\t\tentry.setSmallImageURL(smallImageURL);\n\n\t\tblogsEntryPersistence.update(entry);\n\n\t\t// Workflow\n\n\t\tif (ArrayUtil.isNotEmpty(trackbacks)) {\n\t\t\tserviceContext.setAttribute(\"trackbacks\", trackbacks);\n\t\t}\n\t\telse {\n\t\t\tserviceContext.setAttribute(\"trackbacks\", null);\n\t\t}\n\n\t\tentry = startWorkflowInstance(userId, entry, serviceContext);\n\n\t\tdeleteTempImageSelectorImage(coverImageImageSelector);\n\n\t\tdeleteTempImageSelectorImage(smallImageImageSelector);\n\n\t\treturn entry;\n\t}","commit_id":"77df80984d01e58f67634aaace124ff879888562","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public Iterable<JvmFeature> getAllFeatures(JvmTypeReference typeReference,\n\t\t\tIterable<JvmTypeReference> hierarchy) {\n\t\tif(extensionProvidingType == null)\n\t\t\treturn emptyList();\n\t\tList<JvmFeature> result = newArrayList();\n\t\tJvmType rawType = getTypeReferences().getRawType(extensionProvidingType);\n\t\tif (rawType instanceof JvmDeclaredType) {\n\t\t\tIterable<JvmFeature> candidates = ((JvmDeclaredType) rawType).getAllFeatures();\n\t\t\tcollectExtensionMethods(hierarchy, candidates, result);\n\t\t}\n\t\treturn result;\n\t}","id":15622,"modified_method":"public Iterable<JvmFeature> getAllFeatures(JvmTypeReference typeReference,\n\t\t\tIterable<JvmTypeReference> hierarchy) {\n\t\tif(extensionProvidingType == null)\n\t\t\treturn emptyList();\n\t\tList<JvmFeature> result = newArrayList();\n\t\tList<JvmType> rawTypes = getRawTypeHelper().getAllRawTypes(extensionProvidingType, null);\n\t\tfor(JvmType rawType: rawTypes) {\n\t\t\tif (rawType instanceof JvmDeclaredType) {\n\t\t\t\tIterable<JvmFeature> candidates = ((JvmDeclaredType) rawType).getAllFeatures();\n\t\t\t\tcollectExtensionMethods(hierarchy, candidates, result);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}","commit_id":"68523ea156cbb6f18b634468c9618dd503f42024","url":"https://github.com/eclipse/xtext"},{"original_method":"public Iterable<JvmFeature> getFeaturesByName(String name, JvmTypeReference declarator,\n\t\t\tIterable<JvmTypeReference> hierarchy) {\n\t\tif(extensionProvidingType == null)\n\t\t\treturn emptyList();\n\t\tList<JvmFeature> result = Lists.newArrayList();\n\t\tJvmType rawType = getTypeReferences().getRawType(extensionProvidingType);\n\t\tif (rawType instanceof JvmDeclaredType) {\n\t\t\tIterable<JvmFeature> candidates = ((JvmDeclaredType) rawType).findAllFeaturesByName(name);\n\t\t\tcollectExtensionMethods(hierarchy, candidates, result);\n\t\t}\n\t\treturn result;\n\t}","id":15623,"modified_method":"public Iterable<JvmFeature> getFeaturesByName(String name, JvmTypeReference declarator,\n\t\t\tIterable<JvmTypeReference> hierarchy) {\n\t\tif(extensionProvidingType == null)\n\t\t\treturn emptyList();\n\t\tList<JvmFeature> result = Lists.newArrayList();\n\t\tList<JvmType> rawTypes = getRawTypeHelper().getAllRawTypes(extensionProvidingType, null);\n\t\tfor(JvmType rawType: rawTypes) {\n\t\t\tif (rawType instanceof JvmDeclaredType) {\n\t\t\t\tIterable<JvmFeature> candidates = ((JvmDeclaredType) rawType).findAllFeaturesByName(name);\n\t\t\t\tcollectExtensionMethods(hierarchy, candidates, result);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}","commit_id":"68523ea156cbb6f18b634468c9618dd503f42024","url":"https://github.com/eclipse/xtext"},{"original_method":"public Iterable<JvmFeature> getAllFeatures(JvmTypeReference reference,\n\t\t\tIterable<JvmTypeReference> hierarchy) {\n\t\tJvmTypeReference typeReference = xtendField.getType();\n\t\tJvmType rawType = typeRefs.getRawType(typeReference);\n\t\tif (rawType instanceof JvmDeclaredType) {\n\t\t\tList<JvmFeature> result = newArrayList();\n\t\t\tIterable<JvmFeature> features = ((JvmDeclaredType) rawType).getAllFeatures();\n\t\t\tcollectExtensions(hierarchy, features, result);\n\t\t\treturn result;\n\t\t} else {\n\t\t\treturn Collections.emptyList();\n\t\t}\n\t}","id":15624,"modified_method":"public Iterable<JvmFeature> getAllFeatures(JvmTypeReference reference,\n\t\t\tIterable<JvmTypeReference> hierarchy) {\n\t\tJvmTypeReference typeReference = xtendField.getType();\n\t\tList<JvmType> rawTypes = getRawTypeHelper().getAllRawTypes(typeReference, xtendField.eResource());\n\t\tList<JvmFeature> result = newArrayList();\n\t\tfor(JvmType rawType: rawTypes) {\n\t\t\tif (rawType instanceof JvmDeclaredType) {\n\t\t\t\tIterable<JvmFeature> features = ((JvmDeclaredType) rawType).getAllFeatures();\n\t\t\t\tcollectExtensions(hierarchy, features, result);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}","commit_id":"68523ea156cbb6f18b634468c9618dd503f42024","url":"https://github.com/eclipse/xtext"},{"original_method":"public Iterable<JvmFeature> getFeaturesByName(String name, JvmTypeReference declarator,\n\t\t\tIterable<JvmTypeReference> hierarchy) {\n\t\tJvmTypeReference typeReference = xtendField.getType();\n\t\tJvmType rawType = typeRefs.getRawType(typeReference);\n\t\tif (rawType instanceof JvmDeclaredType) {\n\t\t\tList<JvmFeature> result = newArrayList();\n\t\t\tIterable<JvmFeature> features = ((JvmDeclaredType) rawType).findAllFeaturesByName(name);\n\t\t\tcollectExtensions(hierarchy, features, result);\n\t\t\treturn result;\n\t\t} else {\n\t\t\treturn Collections.emptyList();\n\t\t}\n\t}","id":15625,"modified_method":"public Iterable<JvmFeature> getFeaturesByName(String name, JvmTypeReference declarator,\n\t\t\tIterable<JvmTypeReference> hierarchy) {\n\t\tJvmTypeReference typeReference = xtendField.getType();\n\t\tList<JvmType> rawTypes = getRawTypeHelper().getAllRawTypes(typeReference, xtendField.eResource());\n\t\tList<JvmFeature> result = newArrayList();\n\t\tfor(JvmType rawType: rawTypes) {\n\t\t\tif (rawType instanceof JvmDeclaredType) {\n\t\t\t\tIterable<JvmFeature> features = ((JvmDeclaredType) rawType).findAllFeaturesByName(name);\n\t\t\t\tcollectExtensions(hierarchy, features, result);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}","commit_id":"68523ea156cbb6f18b634468c9618dd503f42024","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void collectExtensions(Iterable<JvmTypeReference> hierarchy, Iterable<JvmFeature> candidates,\n\t\t\tList<JvmFeature> result) {\n\t\tfor(JvmFeature feature: candidates) {\n\t\t\tif (feature instanceof JvmOperation) {\n\t\t\t\tfinal JvmOperation jvmOperation = (JvmOperation) feature;\n\t\t\t\tList<JvmFormalParameter> parameters = jvmOperation.getParameters();\n\t\t\t\tif (!jvmOperation.isStatic() && parameters.size()>0) {\n\t\t\t\t\tJvmFormalParameter parameter = parameters.get(0);\n\t\t\t\t\tJvmTypeReference parameterType = parameter.getParameterType();\n\t\t\t\t\tfor(JvmTypeReference superType: hierarchy) {\n\t\t\t\t\t\tif (parameter.getParameterType() != null && isCompatibleType(superType, parameterType)) {\n\t\t\t\t\t\t\tresult.add(feature);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":15626,"modified_method":"protected void collectExtensions(Iterable<JvmTypeReference> hierarchy, Iterable<JvmFeature> candidates,\n\t\t\tList<JvmFeature> result) {\n\t\tfor(JvmFeature feature: candidates) {\n\t\t\tif (feature instanceof JvmOperation) {\n\t\t\t\tfinal JvmOperation jvmOperation = (JvmOperation) feature;\n\t\t\t\tList<JvmFormalParameter> parameters = jvmOperation.getParameters();\n\t\t\t\tif (!jvmOperation.isStatic() && parameters.size()>0) {\n\t\t\t\t\tJvmFormalParameter parameter = parameters.get(0);\n\t\t\t\t\tJvmTypeReference parameterType = parameter.getParameterType();\n\t\t\t\t\tfor(JvmTypeReference superType: hierarchy) {\n\t\t\t\t\t\tif (parameter.getParameterType() != null && isSameTypeOrAssignableToUpperBound(superType, parameterType)) {\n\t\t\t\t\t\t\tresult.add(feature);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"68523ea156cbb6f18b634468c9618dd503f42024","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\tprotected void collectFeatures(String name, Iterable<JvmTypeReference> hierarchy, Collection<JvmFeature> result) {\n\t\tfinal Map<JvmTypeReference, Collection<String>> staticTypeNames = getVisibleTypesContainingStaticMethods(hierarchy);\n\t\tfor (final Map.Entry<JvmTypeReference, Collection<String>> e : staticTypeNames.entrySet()) {\n\t\t\t// optimization - we know that the list is the same for all types\n\t\t\tfor(final String staticTypeName: e.getValue()) {\n\t\t\t\tJvmTypeReference staticType = cache.get(Tuples.create(this, staticTypeName), context, new Provider<JvmTypeReference>() {\n\t\t\t\t\tpublic JvmTypeReference get() {\n\t\t\t\t\t\treturn getTypeReferences().getTypeForName(staticTypeName, context);\n\t\t\t\t\t}\n\t\t\t\t}) ;\n\t\t\t\tif (staticType != null) {\n\t\t\t\t\tJvmType rawType = getTypeReferences().getRawType(staticType);\n\t\t\t\t\tif (rawType instanceof JvmDeclaredType) {\n\t\t\t\t\t\tIterable<JvmFeature> features = name != null ? ((JvmDeclaredType) rawType).findAllFeaturesByName(name) : ((JvmDeclaredType) rawType).getAllFeatures();\n\t\t\t\t\t\tfor(JvmFeature feature: features) {\n\t\t\t\t\t\t\tif (feature instanceof JvmOperation) {\n\t\t\t\t\t\t\t\t// optimization is here\n\t\t\t\t\t\t\t\tif (e.getKey() == null) {\n\t\t\t\t\t\t\t\t\tif (isMatchingExtension(e.getKey(), (JvmOperation) feature)) {\n\t\t\t\t\t\t\t\t\t\tresult.add(feature);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tfor(JvmTypeReference key: hierarchy) {\n\t\t\t\t\t\t\t\t\t\t// and here\n\t\t\t\t\t\t\t\t\t\tif (isMatchingExtension(key, (JvmOperation) feature)) {\n\t\t\t\t\t\t\t\t\t\t\tresult.add(feature);\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t}","id":15627,"modified_method":"@Override\n\tprotected void collectFeatures(String name, Iterable<JvmTypeReference> hierarchy, Collection<JvmFeature> result) {\n\t\tfinal Map<JvmTypeReference, Collection<String>> staticTypeNames = getVisibleTypesContainingStaticMethods(hierarchy);\n\t\tfor (final Map.Entry<JvmTypeReference, Collection<String>> e : staticTypeNames.entrySet()) {\n\t\t\t// optimization - we know that the list is the same for all types\n\t\t\tfor(final String staticTypeName: e.getValue()) {\n\t\t\t\tJvmTypeReference staticType = cache.get(Tuples.create(this, staticTypeName), context, new Provider<JvmTypeReference>() {\n\t\t\t\t\tpublic JvmTypeReference get() {\n\t\t\t\t\t\treturn getTypeReferences().getTypeForName(staticTypeName, context);\n\t\t\t\t\t}\n\t\t\t\t}) ;\n\t\t\t\tif (staticType != null) {\n\t\t\t\t\tList<JvmType> rawTypes = getRawTypeHelper().getAllRawTypes(staticType, context);\n\t\t\t\t\tfor(JvmType rawType: rawTypes) {\n\t\t\t\t\t\tif (rawType instanceof JvmDeclaredType) {\n\t\t\t\t\t\t\tIterable<JvmFeature> features = name != null ? ((JvmDeclaredType) rawType).findAllFeaturesByName(name) : ((JvmDeclaredType) rawType).getAllFeatures();\n\t\t\t\t\t\t\tfor(JvmFeature feature: features) {\n\t\t\t\t\t\t\t\tif (feature instanceof JvmOperation) {\n\t\t\t\t\t\t\t\t\t// optimization is here\n\t\t\t\t\t\t\t\t\tif (e.getKey() == null) {\n\t\t\t\t\t\t\t\t\t\tif (isMatchingExtension(e.getKey(), (JvmOperation) feature)) {\n\t\t\t\t\t\t\t\t\t\t\tresult.add(feature);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tfor(JvmTypeReference key: hierarchy) {\n\t\t\t\t\t\t\t\t\t\t\t// and here\n\t\t\t\t\t\t\t\t\t\t\tif (isMatchingExtension(key, (JvmOperation) feature)) {\n\t\t\t\t\t\t\t\t\t\t\t\tresult.add(feature);\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t}","commit_id":"68523ea156cbb6f18b634468c9618dd503f42024","url":"https://github.com/eclipse/xtext"},{"original_method":"protected Pair<String, List<JvmType>> getSignature(JvmOperation operation) {\n\t\tString name = operation.getSimpleName();\n\t\tList<JvmType> parameterTypes = Lists.newArrayListWithExpectedSize(operation.getParameters().size());\n\t\tfor(JvmFormalParameter parameter: operation.getParameters()) {\n\t\t\tparameterTypes.add(typeReferences.getRawType(parameter.getParameterType()));\n\t\t}\n\t\treturn Tuples.create(name, parameterTypes);\n\t}","id":15628,"modified_method":"protected Signature getSignature(JvmOperation operation) {\n\t\treturn new Signature(operation);\n\t}","commit_id":"68523ea156cbb6f18b634468c9618dd503f42024","url":"https://github.com/eclipse/xtext"},{"original_method":"@Check\n\tpublic void checkDuplicateAndOverriddenFunctions(XtendClass xtendClass) {\n\t\tJvmParameterizedTypeReference typeReference = getTypesFactory().createJvmParameterizedTypeReference();\n\t\tfinal JvmGenericType inferredType = associations.getInferredType(xtendClass);\n\t\tif (inferredType != null) {\n\t\t\ttypeReference.setType(inferredType);\n\t\t\tfinal TypeArgumentContext typeArgumentContext = typeArgumentContextProvider.getReceiverContext(typeReference);\n\t\t\tMultimap<Pair<String, List<JvmType>>, JvmOperation> operationsPerSignature = HashMultimap.create();\n\t\t\tfor(JvmOperation operation: inferredType.getDeclaredOperations()) {\n\t\t\t\tPair<String,List<JvmType>> signature = getSignature(operation);\n\t\t\t\toperationsPerSignature.put(signature, operation);\n\t\t\t}\n\t\t\tfor(Collection<JvmOperation> operationsWithSameSignature: operationsPerSignature.asMap().values()) {\n\t\t\t\tif (operationsWithSameSignature.size() > 1) {\n\t\t\t\t\tMultimap<String, JvmOperation> operationsPerReadableSignature = HashMultimap.create();\n\t\t\t\t\tfor(JvmOperation operation: operationsWithSameSignature) {\n\t\t\t\t\t\tString readableSignature = getReadableSignature(operation, operation.getParameters());\n\t\t\t\t\t\toperationsPerReadableSignature.put(readableSignature, operation);\n\t\t\t\t\t}\n\t\t\t\t\tfor(Collection<JvmOperation> operationsWithSameReadableSignature: operationsPerReadableSignature.asMap().values()) {\n\t\t\t\t\t\tif (operationsWithSameReadableSignature.size() > 1) {\n\t\t\t\t\t\t\tfor(JvmOperation operation: operationsWithSameReadableSignature) {\n\t\t\t\t\t\t\t\tXtendFunction otherSource = associations.getXtendFunction(operation);\n\t\t\t\t\t\t\t\terror(\"Duplicate method \" + getReadableSignature(operation, operation.getParameters()) + \n\t\t\t\t\t\t\t\t\t\t\" in type \" + inferredType.getSimpleName(), \n\t\t\t\t\t\t\t\t\t\totherSource, XTEND_FUNCTION__NAME, DUPLICATE_METHOD);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfor(JvmOperation operation: operationsWithSameReadableSignature) {\n\t\t\t\t\t\t\t\tXtendFunction otherSource = associations.getXtendFunction(operation);\n\t\t\t\t\t\t\t\terror(\"Method  \" + getReadableSignature(operation, operation.getParameters()) +\n\t\t\t\t\t\t\t\t\t\t\" has the same erasure \" + getReadableErasure(operation, operation.getParameters()) +\n\t\t\t\t\t\t\t\t\t\t\" as another method in type \" + inferredType.getSimpleName(), \n\t\t\t\t\t\t\t\t\t\totherSource, XTEND_FUNCTION__NAME, DUPLICATE_METHOD);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (JvmOperation operation : filter(\n\t\t\t\t\tfeatureOverridesService.getAllJvmFeatures(inferredType, typeArgumentContext), JvmOperation.class)) {\n\t\t\t\tif (operation.getDeclaringType() != inferredType) {\n\t\t\t\t\tPair<String,List<JvmType>> signature = getSignature(operation);\n\t\t\t\t\tif (operationsPerSignature.containsKey(signature)) {\n\t\t\t\t\t\tCollection<JvmOperation> myOperations = operationsPerSignature.get(signature);\n\t\t\t\t\t\tif (myOperations.size() == 1) {\n\t\t\t\t\t\t\tJvmOperation myOperation = Iterables.getOnlyElement(myOperations);\n\t\t\t\t\t\t\tif (!featureOverridesService.isOverridden(myOperation, operation, typeArgumentContext, false)) {\n\t\t\t\t\t\t\t\tXtendFunction source = associations.getXtendFunction(myOperation);\n\t\t\t\t\t\t\t\terror(\"Name clash: The method \" + getReadableSignature(myOperation, myOperation.getParameters()) + \" of type \" +\n\t\t\t\t\t\t\t\t\t\tinferredType.getSimpleName() + \" has the same erasure as \" +\n\t\t\t\t\t\t\t\t\t\t// use source with other operations parameters to avoid confusion\n\t\t\t\t\t\t\t\t\t\t// due to name transformations in JVM model inference\n\t\t\t\t\t\t\t\t\t\tgetReadableSignature(operation, operation.getParameters()) + \" of type \" + \n\t\t\t\t\t\t\t\t\t\toperation.getDeclaringType().getSimpleName() +\n\t\t\t\t\t\t\t\t\t\t\" but does not override it.\", source, XTEND_FUNCTION__NAME, DUPLICATE_METHOD);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation.isAbstract() && !inferredType.isAbstract()) {\n\t\t\t\t\t\tboolean overridden = false;\n\t\t\t\t\t\tif (operationsPerSignature.containsKey(signature)) {\n\t\t\t\t\t\t\tfor(JvmOperation myOperation: operationsPerSignature.get(signature)) {\n\t\t\t\t\t\t\t\tif (featureOverridesService.isOverridden(myOperation, operation, typeArgumentContext, false)) {\n\t\t\t\t\t\t\t\t\toverridden = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} \n\t\t\t\t\t\tif (!overridden) {\n\t\t\t\t\t\t\terror(\"The class \" + inferredType.getSimpleName()\n\t\t\t\t\t\t\t\t+ \" must be defined abstract because it does not implement \" + \n\t\t\t\t\t\t\t\t\tgetReadableSignature(operation.getSimpleName(), Lists.transform(operation.getParameters(), new Function<JvmFormalParameter, JvmTypeReference>() {\n\t\t\t\t\t\t\t\t\t\tpublic JvmTypeReference apply(JvmFormalParameter from) {\n\t\t\t\t\t\t\t\t\t\t\tJvmTypeReference parameterType = from.getParameterType();\n\t\t\t\t\t\t\t\t\t\t\tJvmTypeReference result = typeArgumentContext.resolve(parameterType);\n\t\t\t\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t\txtendClass, XTEND_CLASS__NAME, CLASS_MUST_BE_ABSTRACT);\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":15629,"modified_method":"@Check\n\tpublic void checkDuplicateAndOverriddenFunctions(XtendClass xtendClass) {\n\t\tJvmParameterizedTypeReference typeReference = getTypesFactory().createJvmParameterizedTypeReference();\n\t\tfinal JvmGenericType inferredType = associations.getInferredType(xtendClass);\n\t\tif (inferredType != null) {\n\t\t\ttypeReference.setType(inferredType);\n\t\t\tfinal TypeArgumentContext typeArgumentContext = typeArgumentContextProvider.getReceiverContext(typeReference);\n\t\t\tMultimap<Object, JvmOperation> operationsPerErasure = HashMultimap.create();\n\t\t\tfor(JvmOperation operation: inferredType.getDeclaredOperations()) {\n\t\t\t\tSignature signature = getSignature(operation);\n\t\t\t\toperationsPerErasure.put(signature.getErasureKey(), operation);\n\t\t\t}\n\t\t\tfor(Collection<JvmOperation> operationsWithSameSignature: operationsPerErasure.asMap().values()) {\n\t\t\t\tif (operationsWithSameSignature.size() > 1) {\n\t\t\t\t\tMultimap<String, JvmOperation> operationsPerReadableSignature = HashMultimap.create();\n\t\t\t\t\tfor(JvmOperation operation: operationsWithSameSignature) {\n\t\t\t\t\t\tString readableSignature = getReadableSignature(operation, operation.getParameters());\n\t\t\t\t\t\toperationsPerReadableSignature.put(readableSignature, operation);\n\t\t\t\t\t}\n\t\t\t\t\tfor(Collection<JvmOperation> operationsWithSameReadableSignature: operationsPerReadableSignature.asMap().values()) {\n\t\t\t\t\t\tif (operationsWithSameReadableSignature.size() > 1) {\n\t\t\t\t\t\t\tfor(JvmOperation operation: operationsWithSameReadableSignature) {\n\t\t\t\t\t\t\t\tXtendFunction otherSource = associations.getXtendFunction(operation);\n\t\t\t\t\t\t\t\terror(\"Duplicate method \" + getReadableSignature(operation, operation.getParameters()) + \n\t\t\t\t\t\t\t\t\t\t\" in type \" + inferredType.getSimpleName(), \n\t\t\t\t\t\t\t\t\t\totherSource, XTEND_FUNCTION__NAME, DUPLICATE_METHOD);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfor(JvmOperation operation: operationsWithSameReadableSignature) {\n\t\t\t\t\t\t\t\tXtendFunction otherSource = associations.getXtendFunction(operation);\n\t\t\t\t\t\t\t\terror(\"Method  \" + getReadableSignature(operation, operation.getParameters()) +\n\t\t\t\t\t\t\t\t\t\t\" has the same erasure \" + getReadableErasure(operation, operation.getParameters()) +\n\t\t\t\t\t\t\t\t\t\t\" as another method in type \" + inferredType.getSimpleName(), \n\t\t\t\t\t\t\t\t\t\totherSource, XTEND_FUNCTION__NAME, DUPLICATE_METHOD);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (JvmOperation operation : filter(\n\t\t\t\t\tfeatureOverridesService.getAllJvmFeatures(inferredType, typeArgumentContext), JvmOperation.class)) {\n\t\t\t\tif (operation.getDeclaringType() != inferredType) {\n\t\t\t\t\tSignature signature = getSignature(operation);\n\t\t\t\t\t\n\t\t\t\t\tif (operationsPerErasure.containsKey(signature.getErasureKey())) {\n\t\t\t\t\t\tCollection<JvmOperation> myOperations = operationsPerErasure.get(signature.getErasureKey());\n\t\t\t\t\t\tif (myOperations.size() == 1) {\n\t\t\t\t\t\t\tJvmOperation myOperation = Iterables.getOnlyElement(myOperations);\n\t\t\t\t\t\t\tif (!featureOverridesService.isOverridden(myOperation, operation, typeArgumentContext, false)) {\n\t\t\t\t\t\t\t\tXtendFunction source = associations.getXtendFunction(myOperation);\n\t\t\t\t\t\t\t\terror(\"Name clash: The method \" + getReadableSignature(myOperation, myOperation.getParameters()) + \" of type \" +\n\t\t\t\t\t\t\t\t\t\tinferredType.getSimpleName() + \" has the same erasure as \" +\n\t\t\t\t\t\t\t\t\t\t// use source with other operations parameters to avoid confusion\n\t\t\t\t\t\t\t\t\t\t// due to name transformations in JVM model inference\n\t\t\t\t\t\t\t\t\t\tgetReadableSignature(operation, operation.getParameters()) + \" of type \" + \n\t\t\t\t\t\t\t\t\t\toperation.getDeclaringType().getSimpleName() +\n\t\t\t\t\t\t\t\t\t\t\" but does not override it.\", source, XTEND_FUNCTION__NAME, DUPLICATE_METHOD);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation.isAbstract() && !inferredType.isAbstract()) {\n\t\t\t\t\t\tboolean overridden = false;\n\t\t\t\t\t\tif (operationsPerErasure.containsKey(signature.getErasureKey())) {\n\t\t\t\t\t\t\tfor(JvmOperation myOperation: operationsPerErasure.get(signature.getErasureKey())) {\n\t\t\t\t\t\t\t\tif (featureOverridesService.isOverridden(myOperation, operation, typeArgumentContext, false)) {\n\t\t\t\t\t\t\t\t\toverridden = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} \n\t\t\t\t\t\tif (!overridden) {\n\t\t\t\t\t\t\terror(\"The class \" + inferredType.getSimpleName()\n\t\t\t\t\t\t\t\t+ \" must be defined abstract because it does not implement \" + \n\t\t\t\t\t\t\t\t\tgetReadableSignature(operation.getSimpleName(), Lists.transform(operation.getParameters(), new Function<JvmFormalParameter, JvmTypeReference>() {\n\t\t\t\t\t\t\t\t\t\tpublic JvmTypeReference apply(JvmFormalParameter from) {\n\t\t\t\t\t\t\t\t\t\t\tJvmTypeReference parameterType = from.getParameterType();\n\t\t\t\t\t\t\t\t\t\t\tJvmTypeReference result = typeArgumentContext.resolve(parameterType);\n\t\t\t\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t\txtendClass, XTEND_CLASS__NAME, CLASS_MUST_BE_ABSTRACT);\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"68523ea156cbb6f18b634468c9618dd503f42024","url":"https://github.com/eclipse/xtext"},{"original_method":"protected String getReadableErasure(JvmIdentifiableElement element, List<JvmFormalParameter> parameters) {\n\t\tif (element == null)\n\t\t\treturn \"null\";\n\t\tStringBuilder result = new StringBuilder(element.getSimpleName());\n\t\tresult.append('(');\n\t\tfor(int i = 0; i < parameters.size(); i++) {\n\t\t\tif (i != 0) {\n\t\t\t\tresult.append(\", \");\n\t\t\t}\n\t\t\tJvmTypeReference parameterType = parameters.get(i).getParameterType();\n\t\t\tJvmType rawType = typeReferences.getRawType(parameterType);\n\t\t\tif (rawType != null && !rawType.eIsProxy())\n\t\t\t\t// todo erasure of type parameters with / without upper bound \n\t\t\t\tresult.append(rawType.getSimpleName());\n\t\t\telse\n\t\t\t\tresult.append(\"null\");\n\t\t}\n\t\tresult.append(')');\n\t\treturn result.toString();\n\t}","id":15630,"modified_method":"protected String getReadableErasure(JvmIdentifiableElement element, List<JvmFormalParameter> parameters) {\n\t\tif (element == null)\n\t\t\treturn \"null\";\n\t\tStringBuilder result = new StringBuilder(element.getSimpleName());\n\t\tresult.append('(');\n\t\tfor(int i = 0; i < parameters.size(); i++) {\n\t\t\tif (i != 0) {\n\t\t\t\tresult.append(\", \");\n\t\t\t}\n\t\t\tList<JvmType> rawTypes = rawTypeHelper.getAllRawTypes(parameters.get(i).getParameterType(), element.eResource());\n\t\t\tif (!rawTypes.isEmpty()) {\n\t\t\t\t// see comments in https://bugs.eclipse.org/bugs/show_bug.cgi?id=357958\n\t\t\t\tresult.append(rawTypes.get(0).getSimpleName());\n\t\t\t} else {\n\t\t\t\tresult.append(\"null\");\n\t\t\t}\n\t\t}\n\t\tresult.append(')');\n\t\treturn result.toString();\n\t}","commit_id":"68523ea156cbb6f18b634468c9618dd503f42024","url":"https://github.com/eclipse/xtext"},{"original_method":"protected XbaseTypeConformanceComputer getTypeConformanceComputer() {\n\t\treturn typeConformanceComputer;\n\t}","id":15631,"modified_method":"protected TypeConformanceComputer getTypeConformanceComputer() {\n\t\treturn typeConformanceComputer;\n\t}","commit_id":"6e0c2ac66d57e4d1e3d1a0c51706dc1df706411c","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void collectFeatures(String name, Iterable<JvmTypeReference> hierarchy, Collection<JvmFeature> result) {\n\t\tfinal Map<JvmTypeReference, Collection<String>> staticTypeNames = getVisibleTypesContainingStaticMethods(hierarchy);\n\t\tfor (final Map.Entry<JvmTypeReference, Collection<String>> e : staticTypeNames.entrySet()) {\n\t\t\tfor(final String staticTypeName: e.getValue()) {\n\t\t\t\tJvmTypeReference staticType = cache.get(Tuples.create(this, staticTypeName), context, new Provider<JvmTypeReference>() {\n\t\t\t\t\tpublic JvmTypeReference get() {\n\t\t\t\t\t\treturn getTypeReferences().getTypeForName(staticTypeName, context);\n\t\t\t\t\t}\n\t\t\t\t}) ;\n\t\t\t\tif (staticType != null) {\n\t\t\t\t\tJvmType rawType = getTypeReferences().getRawType(staticType);\n\t\t\t\t\tif (rawType instanceof JvmDeclaredType) {\n\t\t\t\t\t\tIterable<JvmFeature> features = name != null ? ((JvmDeclaredType) rawType).findAllFeaturesByName(name) : ((JvmDeclaredType) rawType).getAllFeatures();\n\t\t\t\t\t\tfor(JvmFeature feature: features) {\n\t\t\t\t\t\t\tif (feature instanceof JvmOperation) {\n\t\t\t\t\t\t\t\tif (isMatchingExtension(e.getKey(), (JvmOperation) feature)) {\n\t\t\t\t\t\t\t\t\tresult.add(feature);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":15632,"modified_method":"protected void collectFeatures(String name, Iterable<JvmTypeReference> hierarchy, Collection<JvmFeature> result) {\n\t\tfinal Map<JvmTypeReference, Collection<String>> staticTypeNames = getVisibleTypesContainingStaticMethods(hierarchy);\n\t\tfor (final Map.Entry<JvmTypeReference, Collection<String>> e : staticTypeNames.entrySet()) {\n\t\t\tfor(final String staticTypeName: e.getValue()) {\n\t\t\t\tJvmTypeReference staticType = cache.get(Tuples.create(this, staticTypeName), context, new Provider<JvmTypeReference>() {\n\t\t\t\t\tpublic JvmTypeReference get() {\n\t\t\t\t\t\treturn getTypeReferences().getTypeForName(staticTypeName, context);\n\t\t\t\t\t}\n\t\t\t\t}) ;\n\t\t\t\tif (staticType != null) {\n\t\t\t\t\tList<JvmType> rawTypes = getRawTypeHelper().getAllRawTypes(staticType, context);\n\t\t\t\t\tfor(JvmType rawType: rawTypes) {\n\t\t\t\t\t\tif (rawType instanceof JvmDeclaredType) {\n\t\t\t\t\t\t\tIterable<JvmFeature> features = name != null ? ((JvmDeclaredType) rawType).findAllFeaturesByName(name) : ((JvmDeclaredType) rawType).getAllFeatures();\n\t\t\t\t\t\t\tfor(JvmFeature feature: features) {\n\t\t\t\t\t\t\t\tif (feature instanceof JvmOperation) {\n\t\t\t\t\t\t\t\t\tif (isMatchingExtension(e.getKey(), (JvmOperation) feature)) {\n\t\t\t\t\t\t\t\t\t\tresult.add(feature);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"6e0c2ac66d57e4d1e3d1a0c51706dc1df706411c","url":"https://github.com/eclipse/xtext"},{"original_method":"protected Iterable<JvmFeature> doGetFeaturesByName(String name, JvmTypeReference declarator,\n\t\t\tIterable<JvmTypeReference> hierarchy) {\n\t\tif (declarator == null)\n\t\t\treturn Collections.emptyList();\n\t\tList<JvmFeature> result = Lists.newArrayList();\n\t\tJvmType rawType = typeReferences.getRawType(declarator);\n\t\tif (rawType instanceof JvmDeclaredType) {\n\t\t\tcollectFeatures(name, rawType, result);\n\t\t} else if (rawType == null) { // TODO remove special treatment of multi types and other specialized type reference implementations\n\t\t\tfor(JvmTypeReference reference: hierarchy) {\n\t\t\t\tJvmType referenceRawType = typeReferences.getRawType(reference);\n\t\t\t\tcollectFeatures(name, referenceRawType, result);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\tfor(JvmTypeReference synonym: synonymesProvider.getSynonymTypes(declarator)) {\n\t\t\tJvmType synonymRawType = typeReferences.getRawType(synonym);\n\t\t\tcollectFeatures(name, synonymRawType, result);\n\t\t}\n\t\treturn result;\n\t}","id":15633,"modified_method":"protected Iterable<JvmFeature> doGetFeaturesByName(String name, JvmTypeReference declarator,\n\t\t\tIterable<JvmTypeReference> hierarchy) {\n\t\tif (declarator == null)\n\t\t\treturn Collections.emptyList();\n\t\tList<JvmFeature> result = Lists.newArrayList();\n\t\tList<JvmType> rawTypes = getRawTypeHelper().getAllRawTypes(declarator, null);\n\t\tfor(JvmType rawType: rawTypes) {\n\t\t\tif (rawType instanceof JvmDeclaredType) {\n\t\t\t\tcollectFeatures(name, rawType, result);\n\t\t\t}\n\t\t}\n\t\t// TODO : move synonym support to creation time of type references\n\t\tIterator<JvmTypeReference> synonymesIterator = synonymTypesProvider.getSynonymTypes(declarator).iterator();\n\t\twhile(synonymesIterator.hasNext()) {\n\t\t\tJvmTypeReference synonym = synonymesIterator.next();\n\t\t\tList<JvmType> synonymRawTypes = getRawTypeHelper().getAllRawTypes(synonym, declarator.eResource());\n\t\t\tfor(JvmType synonymRawType: synonymRawTypes) {\n\t\t\t\tif (synonymRawType instanceof JvmDeclaredType && !rawTypes.contains(synonymRawType)) {\n\t\t\t\t\tcollectFeatures(name, synonymRawType, result);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}","commit_id":"6e0c2ac66d57e4d1e3d1a0c51706dc1df706411c","url":"https://github.com/eclipse/xtext"},{"original_method":"public Iterable<JvmFeature> getAllFeatures(JvmTypeReference typeReference,\n\t\t\tIterable<JvmTypeReference> hierarchy) {\n\t\tif(extensionProvidingType == null)\n\t\t\treturn emptyList();\n\t\tList<JvmFeature> result = newArrayList();\n\t\tJvmType rawType = getTypeReferences().getRawType(extensionProvidingType);\n\t\tif (rawType instanceof JvmDeclaredType) {\n\t\t\tIterable<JvmFeature> candidates = ((JvmDeclaredType) rawType).getAllFeatures();\n\t\t\tcollectExtensionMethods(hierarchy, candidates, result);\n\t\t}\n\t\treturn result;\n\t}","id":15634,"modified_method":"public Iterable<JvmFeature> getAllFeatures(JvmTypeReference typeReference,\n\t\t\tIterable<JvmTypeReference> hierarchy) {\n\t\tif(extensionProvidingType == null)\n\t\t\treturn emptyList();\n\t\tList<JvmFeature> result = newArrayList();\n\t\tList<JvmType> rawTypes = getRawTypeHelper().getAllRawTypes(extensionProvidingType, null);\n\t\tfor(JvmType rawType: rawTypes) {\n\t\t\tif (rawType instanceof JvmDeclaredType) {\n\t\t\t\tIterable<JvmFeature> candidates = ((JvmDeclaredType) rawType).getAllFeatures();\n\t\t\t\tcollectExtensionMethods(hierarchy, candidates, result);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}","commit_id":"6e0c2ac66d57e4d1e3d1a0c51706dc1df706411c","url":"https://github.com/eclipse/xtext"},{"original_method":"public Iterable<JvmFeature> getFeaturesByName(String name, JvmTypeReference declarator,\n\t\t\tIterable<JvmTypeReference> hierarchy) {\n\t\tif(extensionProvidingType == null)\n\t\t\treturn emptyList();\n\t\tList<JvmFeature> result = Lists.newArrayList();\n\t\tJvmType rawType = getTypeReferences().getRawType(extensionProvidingType);\n\t\tif (rawType instanceof JvmDeclaredType) {\n\t\t\tIterable<JvmFeature> candidates = ((JvmDeclaredType) rawType).findAllFeaturesByName(name);\n\t\t\tcollectExtensionMethods(hierarchy, candidates, result);\n\t\t}\n\t\treturn result;\n\t}","id":15635,"modified_method":"public Iterable<JvmFeature> getFeaturesByName(String name, JvmTypeReference declarator,\n\t\t\tIterable<JvmTypeReference> hierarchy) {\n\t\tif(extensionProvidingType == null)\n\t\t\treturn emptyList();\n\t\tList<JvmFeature> result = Lists.newArrayList();\n\t\tList<JvmType> rawTypes = getRawTypeHelper().getAllRawTypes(extensionProvidingType, null);\n\t\tfor(JvmType rawType: rawTypes) {\n\t\t\tif (rawType instanceof JvmDeclaredType) {\n\t\t\t\tIterable<JvmFeature> candidates = ((JvmDeclaredType) rawType).findAllFeaturesByName(name);\n\t\t\t\tcollectExtensionMethods(hierarchy, candidates, result);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}","commit_id":"6e0c2ac66d57e4d1e3d1a0c51706dc1df706411c","url":"https://github.com/eclipse/xtext"},{"original_method":"public Iterable<JvmFeature> getAllFeatures(JvmTypeReference reference,\n\t\t\tIterable<JvmTypeReference> hierarchy) {\n\t\tJvmTypeReference typeReference = xtendField.getType();\n\t\tJvmType rawType = typeRefs.getRawType(typeReference);\n\t\tif (rawType instanceof JvmDeclaredType) {\n\t\t\tList<JvmFeature> result = newArrayList();\n\t\t\tIterable<JvmFeature> features = ((JvmDeclaredType) rawType).getAllFeatures();\n\t\t\tcollectExtensions(hierarchy, features, result);\n\t\t\treturn result;\n\t\t} else {\n\t\t\treturn Collections.emptyList();\n\t\t}\n\t}","id":15636,"modified_method":"public Iterable<JvmFeature> getAllFeatures(JvmTypeReference reference,\n\t\t\tIterable<JvmTypeReference> hierarchy) {\n\t\tJvmTypeReference typeReference = xtendField.getType();\n\t\tList<JvmType> rawTypes = getRawTypeHelper().getAllRawTypes(typeReference, xtendField.eResource());\n\t\tList<JvmFeature> result = newArrayList();\n\t\tfor(JvmType rawType: rawTypes) {\n\t\t\tif (rawType instanceof JvmDeclaredType) {\n\t\t\t\tIterable<JvmFeature> features = ((JvmDeclaredType) rawType).getAllFeatures();\n\t\t\t\tcollectExtensions(hierarchy, features, result);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}","commit_id":"6e0c2ac66d57e4d1e3d1a0c51706dc1df706411c","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void collectExtensions(Iterable<JvmTypeReference> hierarchy, Iterable<JvmFeature> candidates,\n\t\t\tList<JvmFeature> result) {\n\t\tfor(JvmFeature feature: candidates) {\n\t\t\tif (feature instanceof JvmOperation) {\n\t\t\t\tfinal JvmOperation jvmOperation = (JvmOperation) feature;\n\t\t\t\tList<JvmFormalParameter> parameters = jvmOperation.getParameters();\n\t\t\t\tif (!jvmOperation.isStatic() && parameters.size()>0) {\n\t\t\t\t\tJvmFormalParameter parameter = parameters.get(0);\n\t\t\t\t\tJvmTypeReference parameterType = parameter.getParameterType();\n\t\t\t\t\tfor(JvmTypeReference superType: hierarchy) {\n\t\t\t\t\t\tif (parameter.getParameterType() != null && isCompatibleType(superType, parameterType)) {\n\t\t\t\t\t\t\tresult.add(feature);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":15637,"modified_method":"protected void collectExtensions(Iterable<JvmTypeReference> hierarchy, Iterable<JvmFeature> candidates,\n\t\t\tList<JvmFeature> result) {\n\t\tfor(JvmFeature feature: candidates) {\n\t\t\tif (feature instanceof JvmOperation) {\n\t\t\t\tfinal JvmOperation jvmOperation = (JvmOperation) feature;\n\t\t\t\tList<JvmFormalParameter> parameters = jvmOperation.getParameters();\n\t\t\t\tif (!jvmOperation.isStatic() && parameters.size()>0) {\n\t\t\t\t\tJvmFormalParameter parameter = parameters.get(0);\n\t\t\t\t\tJvmTypeReference parameterType = parameter.getParameterType();\n\t\t\t\t\tfor(JvmTypeReference superType: hierarchy) {\n\t\t\t\t\t\tif (parameter.getParameterType() != null && isSameTypeOrAssignableToUpperBound(superType, parameterType)) {\n\t\t\t\t\t\t\tresult.add(feature);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"6e0c2ac66d57e4d1e3d1a0c51706dc1df706411c","url":"https://github.com/eclipse/xtext"},{"original_method":"public Iterable<JvmFeature> getFeaturesByName(String name, JvmTypeReference declarator,\n\t\t\tIterable<JvmTypeReference> hierarchy) {\n\t\tJvmTypeReference typeReference = xtendField.getType();\n\t\tJvmType rawType = typeRefs.getRawType(typeReference);\n\t\tif (rawType instanceof JvmDeclaredType) {\n\t\t\tList<JvmFeature> result = newArrayList();\n\t\t\tIterable<JvmFeature> features = ((JvmDeclaredType) rawType).findAllFeaturesByName(name);\n\t\t\tcollectExtensions(hierarchy, features, result);\n\t\t\treturn result;\n\t\t} else {\n\t\t\treturn Collections.emptyList();\n\t\t}\n\t}","id":15638,"modified_method":"public Iterable<JvmFeature> getFeaturesByName(String name, JvmTypeReference declarator,\n\t\t\tIterable<JvmTypeReference> hierarchy) {\n\t\tJvmTypeReference typeReference = xtendField.getType();\n\t\tList<JvmType> rawTypes = getRawTypeHelper().getAllRawTypes(typeReference, xtendField.eResource());\n\t\tList<JvmFeature> result = newArrayList();\n\t\tfor(JvmType rawType: rawTypes) {\n\t\t\tif (rawType instanceof JvmDeclaredType) {\n\t\t\t\tIterable<JvmFeature> features = ((JvmDeclaredType) rawType).findAllFeaturesByName(name);\n\t\t\t\tcollectExtensions(hierarchy, features, result);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}","commit_id":"6e0c2ac66d57e4d1e3d1a0c51706dc1df706411c","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\tprotected void collectFeatures(String name, Iterable<JvmTypeReference> hierarchy, Collection<JvmFeature> result) {\n\t\tfinal Map<JvmTypeReference, Collection<String>> staticTypeNames = getVisibleTypesContainingStaticMethods(hierarchy);\n\t\tfor (final Map.Entry<JvmTypeReference, Collection<String>> e : staticTypeNames.entrySet()) {\n\t\t\t// optimization - we know that the list is the same for all types\n\t\t\tfor(final String staticTypeName: e.getValue()) {\n\t\t\t\tJvmTypeReference staticType = cache.get(Tuples.create(this, staticTypeName), context, new Provider<JvmTypeReference>() {\n\t\t\t\t\tpublic JvmTypeReference get() {\n\t\t\t\t\t\treturn getTypeReferences().getTypeForName(staticTypeName, context);\n\t\t\t\t\t}\n\t\t\t\t}) ;\n\t\t\t\tif (staticType != null) {\n\t\t\t\t\tJvmType rawType = getTypeReferences().getRawType(staticType);\n\t\t\t\t\tif (rawType instanceof JvmDeclaredType) {\n\t\t\t\t\t\tIterable<JvmFeature> features = name != null ? ((JvmDeclaredType) rawType).findAllFeaturesByName(name) : ((JvmDeclaredType) rawType).getAllFeatures();\n\t\t\t\t\t\tfor(JvmFeature feature: features) {\n\t\t\t\t\t\t\tif (feature instanceof JvmOperation) {\n\t\t\t\t\t\t\t\t// optimization is here\n\t\t\t\t\t\t\t\tif (e.getKey() == null) {\n\t\t\t\t\t\t\t\t\tif (isMatchingExtension(e.getKey(), (JvmOperation) feature)) {\n\t\t\t\t\t\t\t\t\t\tresult.add(feature);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tfor(JvmTypeReference key: hierarchy) {\n\t\t\t\t\t\t\t\t\t\t// and here\n\t\t\t\t\t\t\t\t\t\tif (isMatchingExtension(key, (JvmOperation) feature)) {\n\t\t\t\t\t\t\t\t\t\t\tresult.add(feature);\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t}","id":15639,"modified_method":"@Override\n\tprotected void collectFeatures(String name, Iterable<JvmTypeReference> hierarchy, Collection<JvmFeature> result) {\n\t\tfinal Map<JvmTypeReference, Collection<String>> staticTypeNames = getVisibleTypesContainingStaticMethods(hierarchy);\n\t\tfor (final Map.Entry<JvmTypeReference, Collection<String>> e : staticTypeNames.entrySet()) {\n\t\t\t// optimization - we know that the list is the same for all types\n\t\t\tfor(final String staticTypeName: e.getValue()) {\n\t\t\t\tJvmTypeReference staticType = cache.get(Tuples.create(this, staticTypeName), context, new Provider<JvmTypeReference>() {\n\t\t\t\t\tpublic JvmTypeReference get() {\n\t\t\t\t\t\treturn getTypeReferences().getTypeForName(staticTypeName, context);\n\t\t\t\t\t}\n\t\t\t\t}) ;\n\t\t\t\tif (staticType != null) {\n\t\t\t\t\tList<JvmType> rawTypes = getRawTypeHelper().getAllRawTypes(staticType, context);\n\t\t\t\t\tfor(JvmType rawType: rawTypes) {\n\t\t\t\t\t\tif (rawType instanceof JvmDeclaredType) {\n\t\t\t\t\t\t\tIterable<JvmFeature> features = name != null ? ((JvmDeclaredType) rawType).findAllFeaturesByName(name) : ((JvmDeclaredType) rawType).getAllFeatures();\n\t\t\t\t\t\t\tfor(JvmFeature feature: features) {\n\t\t\t\t\t\t\t\tif (feature instanceof JvmOperation) {\n\t\t\t\t\t\t\t\t\t// optimization is here\n\t\t\t\t\t\t\t\t\tif (e.getKey() == null) {\n\t\t\t\t\t\t\t\t\t\tif (isMatchingExtension(e.getKey(), (JvmOperation) feature)) {\n\t\t\t\t\t\t\t\t\t\t\tresult.add(feature);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tfor(JvmTypeReference key: hierarchy) {\n\t\t\t\t\t\t\t\t\t\t\t// and here\n\t\t\t\t\t\t\t\t\t\t\tif (isMatchingExtension(key, (JvmOperation) feature)) {\n\t\t\t\t\t\t\t\t\t\t\t\tresult.add(feature);\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t}","commit_id":"6e0c2ac66d57e4d1e3d1a0c51706dc1df706411c","url":"https://github.com/eclipse/xtext"},{"original_method":"protected String getReadableErasure(JvmIdentifiableElement element, List<JvmFormalParameter> parameters) {\n\t\tif (element == null)\n\t\t\treturn \"null\";\n\t\tStringBuilder result = new StringBuilder(element.getSimpleName());\n\t\tresult.append('(');\n\t\tfor(int i = 0; i < parameters.size(); i++) {\n\t\t\tif (i != 0) {\n\t\t\t\tresult.append(\", \");\n\t\t\t}\n\t\t\tJvmTypeReference parameterType = parameters.get(i).getParameterType();\n\t\t\tJvmType rawType = typeReferences.getRawType(parameterType);\n\t\t\tif (rawType != null && !rawType.eIsProxy())\n\t\t\t\t// todo erasure of type parameters with / without upper bound \n\t\t\t\tresult.append(rawType.getSimpleName());\n\t\t\telse\n\t\t\t\tresult.append(\"null\");\n\t\t}\n\t\tresult.append(')');\n\t\treturn result.toString();\n\t}","id":15640,"modified_method":"protected String getReadableErasure(JvmIdentifiableElement element, List<JvmFormalParameter> parameters) {\n\t\tif (element == null)\n\t\t\treturn \"null\";\n\t\tStringBuilder result = new StringBuilder(element.getSimpleName());\n\t\tresult.append('(');\n\t\tfor(int i = 0; i < parameters.size(); i++) {\n\t\t\tif (i != 0) {\n\t\t\t\tresult.append(\", \");\n\t\t\t}\n\t\t\tList<JvmType> rawTypes = rawTypeHelper.getAllRawTypes(parameters.get(i).getParameterType(), element.eResource());\n\t\t\tif (!rawTypes.isEmpty()) {\n\t\t\t\t// see comments in https://bugs.eclipse.org/bugs/show_bug.cgi?id=357958\n\t\t\t\tresult.append(rawTypes.get(0).getSimpleName());\n\t\t\t} else {\n\t\t\t\tresult.append(\"null\");\n\t\t\t}\n\t\t}\n\t\tresult.append(')');\n\t\treturn result.toString();\n\t}","commit_id":"6e0c2ac66d57e4d1e3d1a0c51706dc1df706411c","url":"https://github.com/eclipse/xtext"},{"original_method":"@Check\n\tpublic void checkDuplicateAndOverriddenFunctions(XtendClass xtendClass) {\n\t\tJvmParameterizedTypeReference typeReference = getTypesFactory().createJvmParameterizedTypeReference();\n\t\tfinal JvmGenericType inferredType = associations.getInferredType(xtendClass);\n\t\tif (inferredType != null) {\n\t\t\ttypeReference.setType(inferredType);\n\t\t\tfinal TypeArgumentContext typeArgumentContext = typeArgumentContextProvider.getReceiverContext(typeReference);\n\t\t\tMultimap<Pair<String, List<JvmType>>, JvmOperation> operationsPerSignature = HashMultimap.create();\n\t\t\tfor(JvmOperation operation: inferredType.getDeclaredOperations()) {\n\t\t\t\tPair<String,List<JvmType>> signature = getSignature(operation);\n\t\t\t\toperationsPerSignature.put(signature, operation);\n\t\t\t}\n\t\t\tfor(Collection<JvmOperation> operationsWithSameSignature: operationsPerSignature.asMap().values()) {\n\t\t\t\tif (operationsWithSameSignature.size() > 1) {\n\t\t\t\t\tMultimap<String, JvmOperation> operationsPerReadableSignature = HashMultimap.create();\n\t\t\t\t\tfor(JvmOperation operation: operationsWithSameSignature) {\n\t\t\t\t\t\tString readableSignature = getReadableSignature(operation, operation.getParameters());\n\t\t\t\t\t\toperationsPerReadableSignature.put(readableSignature, operation);\n\t\t\t\t\t}\n\t\t\t\t\tfor(Collection<JvmOperation> operationsWithSameReadableSignature: operationsPerReadableSignature.asMap().values()) {\n\t\t\t\t\t\tif (operationsWithSameReadableSignature.size() > 1) {\n\t\t\t\t\t\t\tfor(JvmOperation operation: operationsWithSameReadableSignature) {\n\t\t\t\t\t\t\t\tXtendFunction otherSource = associations.getXtendFunction(operation);\n\t\t\t\t\t\t\t\terror(\"Duplicate method \" + getReadableSignature(operation, operation.getParameters()) + \n\t\t\t\t\t\t\t\t\t\t\" in type \" + inferredType.getSimpleName(), \n\t\t\t\t\t\t\t\t\t\totherSource, XTEND_FUNCTION__NAME, DUPLICATE_METHOD);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfor(JvmOperation operation: operationsWithSameReadableSignature) {\n\t\t\t\t\t\t\t\tXtendFunction otherSource = associations.getXtendFunction(operation);\n\t\t\t\t\t\t\t\terror(\"Method  \" + getReadableSignature(operation, operation.getParameters()) +\n\t\t\t\t\t\t\t\t\t\t\" has the same erasure \" + getReadableErasure(operation, operation.getParameters()) +\n\t\t\t\t\t\t\t\t\t\t\" as another method in type \" + inferredType.getSimpleName(), \n\t\t\t\t\t\t\t\t\t\totherSource, XTEND_FUNCTION__NAME, DUPLICATE_METHOD);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (JvmOperation operation : filter(\n\t\t\t\t\tfeatureOverridesService.getAllJvmFeatures(inferredType, typeArgumentContext), JvmOperation.class)) {\n\t\t\t\tif (operation.getDeclaringType() != inferredType) {\n\t\t\t\t\tPair<String,List<JvmType>> signature = getSignature(operation);\n\t\t\t\t\tif (operationsPerSignature.containsKey(signature)) {\n\t\t\t\t\t\tCollection<JvmOperation> myOperations = operationsPerSignature.get(signature);\n\t\t\t\t\t\tif (myOperations.size() == 1) {\n\t\t\t\t\t\t\tJvmOperation myOperation = Iterables.getOnlyElement(myOperations);\n\t\t\t\t\t\t\tif (!featureOverridesService.isOverridden(myOperation, operation, typeArgumentContext, false)) {\n\t\t\t\t\t\t\t\tXtendFunction source = associations.getXtendFunction(myOperation);\n\t\t\t\t\t\t\t\terror(\"Name clash: The method \" + getReadableSignature(myOperation, myOperation.getParameters()) + \" of type \" +\n\t\t\t\t\t\t\t\t\t\tinferredType.getSimpleName() + \" has the same erasure as \" +\n\t\t\t\t\t\t\t\t\t\t// use source with other operations parameters to avoid confusion\n\t\t\t\t\t\t\t\t\t\t// due to name transformations in JVM model inference\n\t\t\t\t\t\t\t\t\t\tgetReadableSignature(operation, operation.getParameters()) + \" of type \" + \n\t\t\t\t\t\t\t\t\t\toperation.getDeclaringType().getSimpleName() +\n\t\t\t\t\t\t\t\t\t\t\" but does not override it.\", source, XTEND_FUNCTION__NAME, DUPLICATE_METHOD);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation.isAbstract() && !inferredType.isAbstract()) {\n\t\t\t\t\t\tboolean overridden = false;\n\t\t\t\t\t\tif (operationsPerSignature.containsKey(signature)) {\n\t\t\t\t\t\t\tfor(JvmOperation myOperation: operationsPerSignature.get(signature)) {\n\t\t\t\t\t\t\t\tif (featureOverridesService.isOverridden(myOperation, operation, typeArgumentContext, false)) {\n\t\t\t\t\t\t\t\t\toverridden = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} \n\t\t\t\t\t\tif (!overridden) {\n\t\t\t\t\t\t\terror(\"The class \" + inferredType.getSimpleName()\n\t\t\t\t\t\t\t\t+ \" must be defined abstract because it does not implement \" + \n\t\t\t\t\t\t\t\t\tgetReadableSignature(operation.getSimpleName(), Lists.transform(operation.getParameters(), new Function<JvmFormalParameter, JvmTypeReference>() {\n\t\t\t\t\t\t\t\t\t\tpublic JvmTypeReference apply(JvmFormalParameter from) {\n\t\t\t\t\t\t\t\t\t\t\tJvmTypeReference parameterType = from.getParameterType();\n\t\t\t\t\t\t\t\t\t\t\tJvmTypeReference result = typeArgumentContext.resolve(parameterType);\n\t\t\t\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t\txtendClass, XTEND_CLASS__NAME, CLASS_MUST_BE_ABSTRACT);\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":15641,"modified_method":"@Check\n\tpublic void checkDuplicateAndOverriddenFunctions(XtendClass xtendClass) {\n\t\tJvmParameterizedTypeReference typeReference = getTypesFactory().createJvmParameterizedTypeReference();\n\t\tfinal JvmGenericType inferredType = associations.getInferredType(xtendClass);\n\t\tif (inferredType != null) {\n\t\t\ttypeReference.setType(inferredType);\n\t\t\tfinal TypeArgumentContext typeArgumentContext = typeArgumentContextProvider.getReceiverContext(typeReference);\n\t\t\tMultimap<Object, JvmOperation> operationsPerErasure = HashMultimap.create();\n\t\t\tfor(JvmOperation operation: inferredType.getDeclaredOperations()) {\n\t\t\t\tSignature signature = getSignature(operation);\n\t\t\t\toperationsPerErasure.put(signature.getErasureKey(), operation);\n\t\t\t}\n\t\t\tfor(Collection<JvmOperation> operationsWithSameSignature: operationsPerErasure.asMap().values()) {\n\t\t\t\tif (operationsWithSameSignature.size() > 1) {\n\t\t\t\t\tMultimap<String, JvmOperation> operationsPerReadableSignature = HashMultimap.create();\n\t\t\t\t\tfor(JvmOperation operation: operationsWithSameSignature) {\n\t\t\t\t\t\tString readableSignature = getReadableSignature(operation, operation.getParameters());\n\t\t\t\t\t\toperationsPerReadableSignature.put(readableSignature, operation);\n\t\t\t\t\t}\n\t\t\t\t\tfor(Collection<JvmOperation> operationsWithSameReadableSignature: operationsPerReadableSignature.asMap().values()) {\n\t\t\t\t\t\tif (operationsWithSameReadableSignature.size() > 1) {\n\t\t\t\t\t\t\tfor(JvmOperation operation: operationsWithSameReadableSignature) {\n\t\t\t\t\t\t\t\tXtendFunction otherSource = associations.getXtendFunction(operation);\n\t\t\t\t\t\t\t\terror(\"Duplicate method \" + getReadableSignature(operation, operation.getParameters()) + \n\t\t\t\t\t\t\t\t\t\t\" in type \" + inferredType.getSimpleName(), \n\t\t\t\t\t\t\t\t\t\totherSource, XTEND_FUNCTION__NAME, DUPLICATE_METHOD);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfor(JvmOperation operation: operationsWithSameReadableSignature) {\n\t\t\t\t\t\t\t\tXtendFunction otherSource = associations.getXtendFunction(operation);\n\t\t\t\t\t\t\t\terror(\"Method  \" + getReadableSignature(operation, operation.getParameters()) +\n\t\t\t\t\t\t\t\t\t\t\" has the same erasure \" + getReadableErasure(operation, operation.getParameters()) +\n\t\t\t\t\t\t\t\t\t\t\" as another method in type \" + inferredType.getSimpleName(), \n\t\t\t\t\t\t\t\t\t\totherSource, XTEND_FUNCTION__NAME, DUPLICATE_METHOD);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (JvmOperation operation : filter(\n\t\t\t\t\tfeatureOverridesService.getAllJvmFeatures(inferredType, typeArgumentContext), JvmOperation.class)) {\n\t\t\t\tif (operation.getDeclaringType() != inferredType) {\n\t\t\t\t\tSignature signature = getSignature(operation);\n\t\t\t\t\t\n\t\t\t\t\tif (operationsPerErasure.containsKey(signature.getErasureKey())) {\n\t\t\t\t\t\tCollection<JvmOperation> myOperations = operationsPerErasure.get(signature.getErasureKey());\n\t\t\t\t\t\tif (myOperations.size() == 1) {\n\t\t\t\t\t\t\tJvmOperation myOperation = Iterables.getOnlyElement(myOperations);\n\t\t\t\t\t\t\tif (!featureOverridesService.isOverridden(myOperation, operation, typeArgumentContext, false)) {\n\t\t\t\t\t\t\t\tXtendFunction source = associations.getXtendFunction(myOperation);\n\t\t\t\t\t\t\t\terror(\"Name clash: The method \" + getReadableSignature(myOperation, myOperation.getParameters()) + \" of type \" +\n\t\t\t\t\t\t\t\t\t\tinferredType.getSimpleName() + \" has the same erasure as \" +\n\t\t\t\t\t\t\t\t\t\t// use source with other operations parameters to avoid confusion\n\t\t\t\t\t\t\t\t\t\t// due to name transformations in JVM model inference\n\t\t\t\t\t\t\t\t\t\tgetReadableSignature(operation, operation.getParameters()) + \" of type \" + \n\t\t\t\t\t\t\t\t\t\toperation.getDeclaringType().getSimpleName() +\n\t\t\t\t\t\t\t\t\t\t\" but does not override it.\", source, XTEND_FUNCTION__NAME, DUPLICATE_METHOD);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation.isAbstract() && !inferredType.isAbstract()) {\n\t\t\t\t\t\tboolean overridden = false;\n\t\t\t\t\t\tif (operationsPerErasure.containsKey(signature.getErasureKey())) {\n\t\t\t\t\t\t\tfor(JvmOperation myOperation: operationsPerErasure.get(signature.getErasureKey())) {\n\t\t\t\t\t\t\t\tif (featureOverridesService.isOverridden(myOperation, operation, typeArgumentContext, false)) {\n\t\t\t\t\t\t\t\t\toverridden = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} \n\t\t\t\t\t\tif (!overridden) {\n\t\t\t\t\t\t\terror(\"The class \" + inferredType.getSimpleName()\n\t\t\t\t\t\t\t\t+ \" must be defined abstract because it does not implement \" + \n\t\t\t\t\t\t\t\t\tgetReadableSignature(operation.getSimpleName(), Lists.transform(operation.getParameters(), new Function<JvmFormalParameter, JvmTypeReference>() {\n\t\t\t\t\t\t\t\t\t\tpublic JvmTypeReference apply(JvmFormalParameter from) {\n\t\t\t\t\t\t\t\t\t\t\tJvmTypeReference parameterType = from.getParameterType();\n\t\t\t\t\t\t\t\t\t\t\tJvmTypeReference result = typeArgumentContext.resolve(parameterType);\n\t\t\t\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t\txtendClass, XTEND_CLASS__NAME, CLASS_MUST_BE_ABSTRACT);\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"6e0c2ac66d57e4d1e3d1a0c51706dc1df706411c","url":"https://github.com/eclipse/xtext"},{"original_method":"protected Pair<String, List<JvmType>> getSignature(JvmOperation operation) {\n\t\tString name = operation.getSimpleName();\n\t\tList<JvmType> parameterTypes = Lists.newArrayListWithExpectedSize(operation.getParameters().size());\n\t\tfor(JvmFormalParameter parameter: operation.getParameters()) {\n\t\t\tparameterTypes.add(typeReferences.getRawType(parameter.getParameterType()));\n\t\t}\n\t\treturn Tuples.create(name, parameterTypes);\n\t}","id":15642,"modified_method":"protected Signature getSignature(JvmOperation operation) {\n\t\treturn new Signature(operation);\n\t}","commit_id":"6e0c2ac66d57e4d1e3d1a0c51706dc1df706411c","url":"https://github.com/eclipse/xtext"},{"original_method":"public void testAddPageNP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Nested Portlets Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Nested Portlets Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Nested Portlets Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":15643,"modified_method":"public void testAddPageNP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Nested Portlets Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Nested Portlets Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Nested Portlets Test Page\",\n\t\t\tRuntimeVariables.replace(\"Nested Portlets Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"72d74933c353251bff8f98d46e86b302ca7093e2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageNP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Nested Portlets Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Nested Portlets Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Nested Portlets Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":15644,"modified_method":"public void testAddPageNP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Nested Portlets Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Nested Portlets Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Nested Portlets Test Page\",\n\t\t\tRuntimeVariables.replace(\"Nested Portlets Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"72d74933c353251bff8f98d46e86b302ca7093e2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageNP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Nested Portlets Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Nested Portlets Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Nested Portlets Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":15645,"modified_method":"public void testAddPageNP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Nested Portlets Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Nested Portlets Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Nested Portlets Test Page\",\n\t\t\tRuntimeVariables.replace(\"Nested Portlets Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"72d74933c353251bff8f98d46e86b302ca7093e2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletNP1() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Nested Portlets Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Nested Portlets Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"n\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Nested Portlets']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Nested Portlets']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":15646,"modified_method":"public void testAddPortletNP1() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Nested Portlets Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Nested Portlets Test Page\",\n\t\t\tRuntimeVariables.replace(\"Nested Portlets Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Nested Portlets']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Nested Portlets']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"72d74933c353251bff8f98d46e86b302ca7093e2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletNP2() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Nested Portlets Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Nested Portlets Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"n\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Nested Portlets']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Nested Portlets']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div[2]/section\"));\n\t}","id":15647,"modified_method":"public void testAddPortletNP2() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Nested Portlets Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Nested Portlets Test Page\",\n\t\t\tRuntimeVariables.replace(\"Nested Portlets Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Nested Portlets']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Nested Portlets']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/div/section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t}","commit_id":"72d74933c353251bff8f98d46e86b302ca7093e2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletNP3() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Nested Portlets Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Nested Portlets Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"n\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Nested Portlets']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Nested Portlets']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div[2]/section\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div[3]/section\"));\n\t}","id":15648,"modified_method":"public void testAddPortletNP3() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Nested Portlets Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Nested Portlets Test Page\",\n\t\t\tRuntimeVariables.replace(\"Nested Portlets Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Nested Portlets']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Nested Portlets']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/div/section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/div/section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div[3]/div/section\"));\n\t}","commit_id":"72d74933c353251bff8f98d46e86b302ca7093e2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletNP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Nested Portlets Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Nested Portlets Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"n\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Nested Portlets']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Nested Portlets']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":15649,"modified_method":"public void testAddPortletNP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Nested Portlets Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Nested Portlets Test Page\",\n\t\t\tRuntimeVariables.replace(\"Nested Portlets Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Nested Portlets']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Nested Portlets']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"72d74933c353251bff8f98d46e86b302ca7093e2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletNP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Nested Portlets Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Nested Portlets Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"n\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Nested Portlets']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Nested Portlets']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":15650,"modified_method":"public void testAddPortletNP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Nested Portlets Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Nested Portlets Test Page\",\n\t\t\tRuntimeVariables.replace(\"Nested Portlets Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Nested Portlets']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Nested Portlets']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"72d74933c353251bff8f98d46e86b302ca7093e2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemovePortletNP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Nested Portlets Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Nested Portlets Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"//section\"));\n\t}","id":15651,"modified_method":"public void testRemovePortletNP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Nested Portlets Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Nested Portlets Test Page\",\n\t\t\tRuntimeVariables.replace(\"Nested Portlets Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"//section\"));\n\t}","commit_id":"72d74933c353251bff8f98d46e86b302ca7093e2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":15652,"modified_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"72d74933c353251bff8f98d46e86b302ca7093e2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":15653,"modified_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"72d74933c353251bff8f98d46e86b302ca7093e2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":15654,"modified_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"72d74933c353251bff8f98d46e86b302ca7093e2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddAsteriskUserGroupName() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Group\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_125_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"Test*test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_125_description']\",\n\t\t\tRuntimeVariables.replace(\"This is an asterisk user group test.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid name.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","id":15655,"modified_method":"public void testAddAsteriskUserGroupName() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"link=Add\"));\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Group\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_125_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"Test*test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_125_description']\",\n\t\t\tRuntimeVariables.replace(\"This is an asterisk user group test.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid name.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"943e1452967f86421987797491e07332aba9ff4f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddCommaUserGroupName() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Group\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_125_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"Test,test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_125_description']\",\n\t\t\tRuntimeVariables.replace(\"This is a comma user group test.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid name.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","id":15656,"modified_method":"public void testAddCommaUserGroupName() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"link=Add\"));\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Group\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_125_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"Test,test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_125_description']\",\n\t\t\tRuntimeVariables.replace(\"This is a comma user group test.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid name.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"943e1452967f86421987797491e07332aba9ff4f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddDuplicateUserGroupName() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Group\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_125_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_125_description']\",\n\t\t\tRuntimeVariables.replace(\"This is a duplicate user group test.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a unique name.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","id":15657,"modified_method":"public void testAddDuplicateUserGroupName() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"link=Add\"));\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Group\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_125_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_125_description']\",\n\t\t\tRuntimeVariables.replace(\"This is a duplicate user group test.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a unique name.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"943e1452967f86421987797491e07332aba9ff4f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullUserGroupName() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Group\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_125_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_name']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_125_description']\",\n\t\t\tRuntimeVariables.replace(\"This is a null user group test.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//label/div\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"This field is required.\"),\n\t\t\tselenium.getText(\"//label/div\"));\n\t}","id":15658,"modified_method":"public void testAddNullUserGroupName() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"link=Add\"));\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Group\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_125_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_name']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_125_description']\",\n\t\t\tRuntimeVariables.replace(\"This is a null user group test.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//label/div\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"This field is required.\"),\n\t\t\tselenium.getText(\"//label/div\"));\n\t}","commit_id":"943e1452967f86421987797491e07332aba9ff4f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNumberUserGroupName() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Group\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_125_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"11111\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_125_description']\",\n\t\t\tRuntimeVariables.replace(\"This is a number user group test.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid name.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","id":15659,"modified_method":"public void testAddNumberUserGroupName() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"link=Add\"));\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Group\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_125_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"11111\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_125_description']\",\n\t\t\tRuntimeVariables.replace(\"This is a number user group test.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid name.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"943e1452967f86421987797491e07332aba9ff4f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddTemporaryUserGroup() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Group\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_125_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"Temporary\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_125_description']\",\n\t\t\tRuntimeVariables.replace(\"This is a temporary user group.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":15660,"modified_method":"public void testAddTemporaryUserGroup() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"link=Add\"));\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Group\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_125_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"Temporary\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_125_description']\",\n\t\t\tRuntimeVariables.replace(\"This is a temporary user group.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"943e1452967f86421987797491e07332aba9ff4f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddUser2() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@id='_125_prefixId']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_125_prefixId']\",\n\t\t\tRuntimeVariables.replace(\"label=Mrs.\"));\n\t\tselenium.type(\"//input[@id='_125_screenName']\",\n\t\t\tRuntimeVariables.replace(\"selenium02\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_emailAddress']\",\n\t\t\tRuntimeVariables.replace(\"test02@selenium.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_firstName']\",\n\t\t\tRuntimeVariables.replace(\"selen02\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_middleName']\",\n\t\t\tRuntimeVariables.replace(\"lenn\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_lastName']\",\n\t\t\tRuntimeVariables.replace(\"nium02\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_125_suffixId']\",\n\t\t\tRuntimeVariables.replace(\"label=Phd.\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=September\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayDay']\",\n\t\t\tRuntimeVariables.replace(\"label=24\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayYear']\",\n\t\t\tRuntimeVariables.replace(\"label=1984\"));\n\t\tselenium.select(\"//select[@id='_125_male']\",\n\t\t\tRuntimeVariables.replace(\"label=Female\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":15661,"modified_method":"public void testAddUser2() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@id='_125_prefixId']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_125_prefixId']\",\n\t\t\tRuntimeVariables.replace(\"label=Mrs.\"));\n\t\tselenium.type(\"//input[@id='_125_screenName']\",\n\t\t\tRuntimeVariables.replace(\"selenium02\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_emailAddress']\",\n\t\t\tRuntimeVariables.replace(\"test02@selenium.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_firstName']\",\n\t\t\tRuntimeVariables.replace(\"selen02\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_middleName']\",\n\t\t\tRuntimeVariables.replace(\"lenn\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_lastName']\",\n\t\t\tRuntimeVariables.replace(\"nium02\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_125_suffixId']\",\n\t\t\tRuntimeVariables.replace(\"label=Phd.\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=September\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayDay']\",\n\t\t\tRuntimeVariables.replace(\"label=24\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayYear']\",\n\t\t\tRuntimeVariables.replace(\"label=1984\"));\n\t\tselenium.select(\"//select[@id='_125_male']\",\n\t\t\tRuntimeVariables.replace(\"label=Female\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"943e1452967f86421987797491e07332aba9ff4f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddUserGroup() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Group\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_125_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_125_description']\",\n\t\t\tRuntimeVariables.replace(\"This is a selenium user group.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":15662,"modified_method":"public void testAddUserGroup() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"link=Add\"));\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Group\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_125_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_125_description']\",\n\t\t\tRuntimeVariables.replace(\"This is a selenium user group.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"943e1452967f86421987797491e07332aba9ff4f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddUser() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@id='_125_prefixId']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_125_prefixId']\",\n\t\t\tRuntimeVariables.replace(\"label=Mr.\"));\n\t\tselenium.type(\"//input[@id='_125_screenName']\",\n\t\t\tRuntimeVariables.replace(\"selenium01\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_emailAddress']\",\n\t\t\tRuntimeVariables.replace(\"test01@selenium.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_firstName']\",\n\t\t\tRuntimeVariables.replace(\"selen01\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_middleName']\",\n\t\t\tRuntimeVariables.replace(\"lenn\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_lastName']\",\n\t\t\tRuntimeVariables.replace(\"nium01\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_125_suffixId']\",\n\t\t\tRuntimeVariables.replace(\"label=Phd.\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=April\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayDay']\",\n\t\t\tRuntimeVariables.replace(\"label=10\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayYear']\",\n\t\t\tRuntimeVariables.replace(\"label=1986\"));\n\t\tselenium.select(\"//select[@id='_125_male']\",\n\t\t\tRuntimeVariables.replace(\"label=Male\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":15663,"modified_method":"public void testAddUser() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@id='_125_prefixId']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_125_prefixId']\",\n\t\t\tRuntimeVariables.replace(\"label=Mr.\"));\n\t\tselenium.type(\"//input[@id='_125_screenName']\",\n\t\t\tRuntimeVariables.replace(\"selenium01\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_emailAddress']\",\n\t\t\tRuntimeVariables.replace(\"test01@selenium.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_firstName']\",\n\t\t\tRuntimeVariables.replace(\"selen01\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_middleName']\",\n\t\t\tRuntimeVariables.replace(\"lenn\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_lastName']\",\n\t\t\tRuntimeVariables.replace(\"nium01\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_125_suffixId']\",\n\t\t\tRuntimeVariables.replace(\"label=Phd.\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=April\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayDay']\",\n\t\t\tRuntimeVariables.replace(\"label=10\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayYear']\",\n\t\t\tRuntimeVariables.replace(\"label=1986\"));\n\t\tselenium.select(\"//select[@id='_125_male']\",\n\t\t\tRuntimeVariables.replace(\"label=Male\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"943e1452967f86421987797491e07332aba9ff4f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testApplyUserGroup() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[1]/span[1]/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"View\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Groups\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//td[4]/span/ul/li/strong/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Assign Members\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//li[2]/span/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//li[2]/span/span/a\",\n\t\t\tRuntimeVariables.replace(\"Available\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@name='_125_keywords']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"selenium\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Update Associations']\",\n\t\t\tRuntimeVariables.replace(\"Update Associations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":15664,"modified_method":"public void testApplyUserGroup() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"View\"),\n\t\t\tselenium.getText(\"//div[1]/span[1]/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//div[1]/span[1]/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"View\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Groups\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//td[4]/span/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Assign Members\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Available\"),\n\t\t\tselenium.getText(\"link=Available\"));\n\t\tselenium.clickAt(\"link=Available\", RuntimeVariables.replace(\"Available\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\"//input[@name='_125_keywords']\"));\n\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"selenium\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Update Associations']\",\n\t\t\tRuntimeVariables.replace(\"Update Associations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"943e1452967f86421987797491e07332aba9ff4f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertApplyUserGroup() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[1]/span[1]/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"View\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Groups\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//td[4]/span/ul/li/strong/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"View Users\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"selenium01\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"selenium02\"),\n\t\t\tselenium.getText(\"//tr[4]/td[4]/a\"));\n\t}","id":15665,"modified_method":"public void testAssertApplyUserGroup() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"View\"),\n\t\t\tselenium.getText(\"//div[1]/span[1]/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//div[1]/span[1]/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"View\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Groups\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//td[4]/span/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Assign Members\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\"//input[@name='_125_keywords']\"));\n\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"selenium\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"selenium01\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"selenium02\"),\n\t\t\tselenium.getText(\"//tr[4]/td[3]\"));\n\t}","commit_id":"943e1452967f86421987797491e07332aba9ff4f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertCannotDeleteApplyUserGroup()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have entered invalid data. Please try again.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You cannot delete user groups that have users.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","id":15666,"modified_method":"public void testAssertCannotDeleteApplyUserGroup()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"View\"),\n\t\t\tselenium.getText(\"//div[1]/span[1]/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//div[1]/span[1]/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"View\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Groups\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You cannot delete user groups that have users.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"943e1452967f86421987797491e07332aba9ff4f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertRemoveApplyUserGroup() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//td[4]/span/ul/li/strong/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"View Users\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isTextPresent(\"//td[4]/a\"));\n\t\tassertFalse(selenium.isTextPresent(\"//tr[4]/td[4]/a\"));\n\t}","id":15667,"modified_method":"public void testAssertRemoveApplyUserGroup() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"View\"),\n\t\t\tselenium.getText(\"//div[1]/span[1]/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//div[1]/span[1]/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"View\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Groups\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//td[4]/span/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Assign Members\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\"//input[@name='_125_keywords']\"));\n\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"selenium\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isTextPresent(\"//tr[3]/td[3]\"));\n\t\tassertFalse(selenium.isTextPresent(\"//tr[4]/td[3]\"));\n\t}","commit_id":"943e1452967f86421987797491e07332aba9ff4f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteTemporaryUserGroup() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_125_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"Temporary\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Delete']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":15668,"modified_method":"public void testDeleteTemporaryUserGroup() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"View\"),\n\t\t\tselenium.getText(\"//div[1]/span[1]/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//div[1]/span[1]/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"View\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Groups\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_125_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"Temporary\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Delete']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"943e1452967f86421987797491e07332aba9ff4f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemoveApplyUserGroup() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//td[4]/span/ul/li/strong/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Assign Members\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Update Associations']\",\n\t\t\tRuntimeVariables.replace(\"Update Associations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":15669,"modified_method":"public void testRemoveApplyUserGroup() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"View\"),\n\t\t\tselenium.getText(\"//div[1]/span[1]/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//div[1]/span[1]/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"View\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Groups\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//td[4]/span/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Assign Members\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Available\"),\n\t\t\tselenium.getText(\"link=Available\"));\n\t\tselenium.clickAt(\"link=Available\", RuntimeVariables.replace(\"Available\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\"//input[@name='_125_keywords']\"));\n\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"selenium\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Update Associations']\",\n\t\t\tRuntimeVariables.replace(\"Update Associations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"943e1452967f86421987797491e07332aba9ff4f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSearchUserGroup() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_125_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"This is a selenium user group.\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"Selenium1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isTextPresent(\"//td[3]/a\"));\n\t}","id":15670,"modified_method":"public void testSearchUserGroup() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"View\"),\n\t\t\tselenium.getText(\"//div[1]/span[1]/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//div[1]/span[1]/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"View\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Groups\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_125_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"This is a selenium user group.\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"Selenium1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isTextPresent(\"//td[3]/a\"));\n\t}","commit_id":"943e1452967f86421987797491e07332aba9ff4f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDown() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[1]/span[1]/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"View\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"All Users\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@name='_125_keywords']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean basicVisible = selenium.isVisible(\"link=\\u00ab Basic\");\n\n\t\t\t\tif (!basicVisible) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"selenium\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean UserPresent = selenium.isElementPresent(\"_125_rowIds\");\n\n\t\t\t\tif (!UserPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Advanced \\u00bb\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//select[@id='_125_status']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.select(\"//select[@id='_125_status']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Inactive\"));\n\t\t\t\tselenium.clickAt(\"//div[2]/span[2]/span/input\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\tcase 3:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[1]/span[1]/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"View\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=User Groups\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"User Groups\"),\n\t\t\t\t\tselenium.getText(\"link=User Groups\"));\n\t\t\t\tselenium.clickAt(\"link=User Groups\",\n\t\t\t\t\tRuntimeVariables.replace(\"User Groups\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean UserGroupPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!UserGroupPresent) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":15671,"modified_method":"public void testTearDown() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=View\", RuntimeVariables.replace(\"View\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"All Users\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean basic1Visible = selenium.isVisible(\"link=\\u00ab Basic\");\n\n\t\t\t\tif (!basic1Visible) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"selenium\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean user1Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user1Deactivated) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean user2Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user2Deactivated) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean user3Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user3Deactivated) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean user4Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user4Deactivated) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean user5Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user5Deactivated) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\t\tselenium.clickAt(\"link=View\", RuntimeVariables.replace(\"View\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"All Users\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Advanced \\u00bb\",\n\t\t\t\t\tRuntimeVariables.replace(\"Advanced \\u00bb\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//select[@id='_125_status']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.select(\"//select[@id='_125_status']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Inactive\"));\n\t\t\t\tselenium.clickAt(\"//div[2]/span[2]/span/input\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean user1Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[2]\");\n\n\t\t\t\tif (!user1Deleted) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[2]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 8:\n\n\t\t\t\tboolean user2Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[2]\");\n\n\t\t\t\tif (!user2Deleted) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[2]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 9:\n\n\t\t\t\tboolean user3Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[2]\");\n\n\t\t\t\tif (!user3Deleted) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[2]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 10:\n\n\t\t\t\tboolean user4Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[2]\");\n\n\t\t\t\tif (!user4Deleted) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[2]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 11:\n\n\t\t\t\tboolean user5Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[2]\");\n\n\t\t\t\tif (!user5Deleted) {\n\t\t\t\t\tlabel = 12;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[2]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 12:\n\t\t\t\tselenium.clickAt(\"link=View\", RuntimeVariables.replace(\"View\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"All Users\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean basicVisible = selenium.isVisible(\"link=\\u00ab Basic\");\n\n\t\t\t\tif (!basicVisible) {\n\t\t\t\t\tlabel = 13;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\tcase 13:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=View\", RuntimeVariables.replace(\"View\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"User Groups\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean userGroup1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[2]/a\");\n\n\t\t\t\tif (!userGroup1Present) {\n\t\t\t\t\tlabel = 18;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@name='_125_allRowIds']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All Rows\"));\n\t\t\t\tassertTrue(selenium.isChecked(\"//input[@name='_125_allRowIds']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=View\", RuntimeVariables.replace(\"View\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"User Groups\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean userGroup2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[2]/a\");\n\n\t\t\t\tif (!userGroup2Present) {\n\t\t\t\t\tlabel = 17;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@name='_125_allRowIds']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All Rows\"));\n\t\t\t\tassertTrue(selenium.isChecked(\"//input[@name='_125_allRowIds']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=View\", RuntimeVariables.replace(\"View\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"User Groups\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean userGroup3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[2]/a\");\n\n\t\t\t\tif (!userGroup3Present) {\n\t\t\t\t\tlabel = 16;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@name='_125_allRowIds']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All Rows\"));\n\t\t\t\tassertTrue(selenium.isChecked(\"//input[@name='_125_allRowIds']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=View\", RuntimeVariables.replace(\"View\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"User Groups\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean userGroup4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[2]/a\");\n\n\t\t\t\tif (!userGroup4Present) {\n\t\t\t\t\tlabel = 15;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@name='_125_allRowIds']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All Rows\"));\n\t\t\t\tassertTrue(selenium.isChecked(\"//input[@name='_125_allRowIds']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=View\", RuntimeVariables.replace(\"View\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"User Groups\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean userGroup5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[2]/a\");\n\n\t\t\t\tif (!userGroup5Present) {\n\t\t\t\t\tlabel = 14;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@name='_125_allRowIds']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All Rows\"));\n\t\t\t\tassertTrue(selenium.isChecked(\"//input[@name='_125_allRowIds']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 14:\n\t\t\tcase 15:\n\t\t\tcase 16:\n\t\t\tcase 17:\n\t\t\tcase 18:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"943e1452967f86421987797491e07332aba9ff4f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private boolean unzipFile(FileObject sourceFileObject, String realTargetdirectory, String realWildcard,\r\n\t\t\tString realWildcardExclude, Result result, Job parentJob, FileObject fileObject, FileObject movetodir,\r\n\t\t\tString realMovetodirectory)\r\n\t{\r\n\t\tboolean retval=false;\r\n\t\tString unzipToFolder=realTargetdirectory;\r\n\t\ttry {\r\n\t\t\t\r\n\t\t\t if(log.isDetailed()) logDetailed(BaseMessages.getString(PKG, \"JobUnZip.Log.ProcessingFile\",sourceFileObject.toString()));\r\n\t\t\r\n\t\t\t // Do you create a root folder?\r\n\t\t\t //\r\n\t\t\t if(rootzip)\r\n\t\t\t {\r\n\t\t\t\tString shortSourceFilename = sourceFileObject.getName().getBaseName();\r\n\t        \tint lenstring=shortSourceFilename.length();\r\n\t        \tint lastindexOfDot=shortSourceFilename.lastIndexOf('.');\r\n\t        \tif(lastindexOfDot==-1) lastindexOfDot=lenstring;\r\n\t        \t\t\r\n\t        \tString foldername=realTargetdirectory + \"/\" + shortSourceFilename.substring(0, lastindexOfDot);\r\n\t\t\t\tFileObject rootfolder=KettleVFS.getFileObject(foldername, this);\r\n\t\t\t\tif(!rootfolder.exists())\r\n\t\t\t\t{\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t  rootfolder.createFolder();\r\n\t\t\t\t\t  if(log.isDetailed()) logDetailed(BaseMessages.getString(PKG, \"JobUnZip.Log.RootFolderCreated\",foldername));\r\n\t\t\t\t\t} catch(Exception e) {\r\n\t\t\t\t\t\t throw new Exception(BaseMessages.getString(PKG, \"JobUnZip.Error.CanNotCreateRootFolder\",foldername), e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tunzipToFolder=foldername;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t    // Try to read the entries from the VFS object...\r\n\t\t\t//\r\n\t\t\tString zipFilename = \"zip:\"+sourceFileObject.getName().getFriendlyURI();\r\n\t\t\tFileObject zipFile = KettleVFS.getFileObject(zipFilename, this);\r\n\t\t\tFileObject[] items = zipFile.findFiles(\r\n\t\t\t\t\tnew AllFileSelector()\r\n                        {\r\n                            public boolean traverseDescendents(FileSelectInfo info)\r\n                            {\r\n                                return true;\r\n                            }\r\n                            \r\n                            public boolean includeFile(FileSelectInfo info)\r\n                            {\r\n                                // Never return the parent directory of a file list.\r\n                            \tif (info.getDepth() == 0) {\r\n                                    return false;\r\n                                }\r\n                                \r\n                            \tFileObject fileObject = info.getFile();\r\n                            \treturn fileObject!=null;\r\n                            }\r\n                        }\r\n                    );\r\n\r\n\t\t\tPattern pattern = null;\r\n\t\t\tif (!Const.isEmpty(realWildcard)) \r\n\t\t\t{\r\n\t\t\t\tpattern = Pattern.compile(realWildcard);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tPattern patternexclude = null;\r\n\t\t\tif (!Const.isEmpty(realWildcardExclude)) \r\n\t\t\t{\r\n\t\t\t\tpatternexclude = Pattern.compile(realWildcardExclude);\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tfor (FileObject item : items) {\r\n\t\t\t\t\r\n\t\t\t\t\tif(successConditionBroken){\r\n\t\t\t\t\t  if(!successConditionBrokenExit){\r\n\t\t\t\t\t\tlogError(BaseMessages.getString(PKG, \"JobUnZip.Error.SuccessConditionbroken\",\"\"+NrErrors));\r\n\t\t\t\t\t\tsuccessConditionBrokenExit=true;\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t  return false;\r\n\t\t\t\t  }\r\n\t\t\t\t\t\r\n\t\t\t\t\t FileObject newFileObject=null;\r\n\t\t\t\t  try{\r\n\t\t\t\t\t  if(log.isDetailed()) logDetailed(BaseMessages.getString(PKG, \"JobUnZip.Log.ProcessingZipEntry\",item.getName().getURI(), sourceFileObject.toString()));\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t  // get real destination filename\r\n\t\t\t\t\t  //\r\n\t\t\t\t\t  String newFileName = unzipToFolder + Const.FILE_SEPARATOR + getTargetFilename(item.getName().getPath());\r\n\t\t\t\t\t  newFileObject = KettleVFS.getFileObject(newFileName, this);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t  if( item.getType().equals(FileType.FOLDER))\r\n\t\t\t\t\t  {\r\n\t\t\t\t\t\t // Directory \r\n\t\t\t\t\t\t //\r\n\t\t\t             if(log.isDetailed()) logDetailed(BaseMessages.getString(PKG, \"JobUnZip.CreatingDirectory.Label\",newFileName));\r\n\t\t\r\n\t\t\t             // Create Directory if necessary ...\r\n\t\t\t             //\r\n\t\t\t             if(!newFileObject.exists()) newFileObject.createFolder();\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t  else\r\n\t\t\t\t\t  {\r\n\t\t\t\t\t\t// File\r\n\t\t\t\t\t\t//\r\n\t\t\t\t\t\tboolean getIt = true;\r\n\t\t\t\t\t\tboolean getItexclude = false;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t    // First see if the file matches the regular expression!\r\n\t\t\t\t\t\t//\r\n\t\t\t\t\t\tif (pattern!=null)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tMatcher matcher = pattern.matcher(item.getName().getURI());\r\n\t\t\t\t\t\t\tgetIt = matcher.matches();\r\n\t\t\t\t\t\t}\r\n\t\t\r\n\t\t\t\t\t\tif (patternexclude!=null)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tMatcher matcherexclude = patternexclude.matcher(item.getName().getURI());\r\n\t\t\t\t\t\t\tgetItexclude = matcherexclude.matches();\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tboolean take=takeThisFile(item, newFileName);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (getIt && !getItexclude && take)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif(log.isDetailed()) logDetailed(BaseMessages.getString(PKG, \"JobUnZip.ExtractingEntry.Label\",item.getName().getURI(),newFileName));\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(iffileexist==IF_FILE_EXISTS_UNIQ)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t        \t\t// Create file with unique name\r\n\t\t\t\t        \t\t\r\n\t\t\t\t        \t\tint lenstring=newFileName.length();\r\n\t\t\t\t        \t\tint lastindexOfDot=newFileName.lastIndexOf('.');\r\n\t\t\t\t        \t\tif(lastindexOfDot==-1) lastindexOfDot=lenstring;\r\n\t\t\t\t        \t\t\r\n\t\t\t\t        \t\tnewFileName=newFileName.substring(0, lastindexOfDot)\r\n\t\t\t\t        \t\t+ StringUtil.getFormattedDateTimeNow(true) \r\n\t\t\t\t        \t\t+ newFileName.substring(lastindexOfDot, lenstring);\r\n\t\t\t\t        \t\t\r\n\t\t\t\t        \t\tif(log.isDebug()) logDebug(BaseMessages.getString(PKG, \"JobUnZip.Log.CreatingUniqFile\",newFileName));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// See if the folder to the target file exists...\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tif (!newFileObject.getParent().exists()) {\r\n\t\t\t\t\t\t\t\tnewFileObject.getParent().createFolder(); // creates the whole path.\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tInputStream is = null;\r\n\t\t\t\t\t\t\tOutputStream os = null;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t                  is = KettleVFS.getInputStream(item);\r\n\t\t\t                  os = KettleVFS.getOutputStream(newFileObject, false);\r\n\t\t\t                \r\n\t\t\t\t              if(is!=null)\r\n\t\t\t\t              {\r\n\t\t\t\t\t                byte[] buff=new byte[2048];\r\n\t\t\t\t                \tint len;\r\n\t\t\t\t                \t\r\n\t\t\t\t                \twhile((len=is.read(buff))>0)\r\n\t\t\t\t                \t{\r\n\t\t\t\t                \t\tos.write(buff,0,len);\r\n\t\t\t\t                \t}\r\n\t\t\t\t                  \r\n\t\t\t\t\t                // Add filename to result filenames\r\n\t\t\t\t\t                addFilenameToResultFilenames(result, parentJob, newFileName);\r\n\t\t\t\t              }\r\n\t\t\t\t\t\t\t} finally {\r\n\t\t\t                    if(is!=null) is.close();\r\n\t\t\t\t                if(os!=null) os.close();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}// end if take    \t\t\r\n\t\t\t\t\t }\r\n\t\t\t\t  } catch(Exception e)\r\n\t\t\t\t  {\r\n\t\t\t\t\t  updateErrors();\r\n\t\t\t\t\t  logError(BaseMessages.getString(PKG, \"JobUnZip.Error.CanNotProcessZipEntry\",item.getName().getURI(), sourceFileObject.toString()), e);\r\n\t\t\t\t  }\r\n\t\t\t\t  finally {\r\n\t\t\t\t\t  if(newFileObject!=null) {\r\n\t\t\t\t\t\t  try {\r\n\t\t\t\t\t\t\t  newFileObject.close(); }catch(Exception e){};// ignore this\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t  // Close file object\r\n\t\t\t\t\t  // close() does not release resources!\r\n\t\t\t\t\t  KettleVFS.getInstance().getFileSystemManager().closeFileSystem(item.getFileSystem()); \r\n\t\t\t\t\t  if(items!=null) items=null;\r\n\t\t\t\t  }\r\n\t         }// End for\r\n\r\n\t\t     // Here gc() is explicitly called if e.g. createfile is used in the same\r\n\t\t\t // job for the same file. The problem is that after creating the file the\r\n\t\t\t // file object is not properly garbaged collected and thus the file cannot\r\n\t\t\t // be deleted anymore. This is a known problem in the JVM.\r\n\t\t\t\t\r\n\t\t\t //System.gc();\r\n\t\t\t  \r\n\t\t\t  // Unzip done...\r\n\t\t\t  if (afterunzip==1)\r\n\t\t\t  {\r\n\t\t\t\t  // delete zip file\r\n\t\t\t\t  boolean deleted = fileObject.delete();\r\n\t\t\t\t  if ( ! deleted )\t\r\n\t\t\t\t  {\t\r\n\t\t\t\t\t  updateErrors();\r\n\t\t\t\t\t  logError(BaseMessages.getString(PKG, \"JobUnZip.Cant_Delete_File.Label\", sourceFileObject.toString()));\r\n\t\t\t\t   }\r\n\t\t\t\t   // File deleted\r\n\t\t\t\t   if(log.isDebug()) logDebug(BaseMessages.getString(PKG, \"JobUnZip.File_Deleted.Label\", sourceFileObject.toString()));\r\n\t\t\t  }\r\n\t\t\t  else if(afterunzip == 2)\r\n\t\t\t  {\r\n\t\t\t\t   FileObject destFile=null;\r\n\t\t\t\t   // Move File\t\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tString destinationFilename=movetodir+Const.FILE_SEPARATOR+ fileObject.getName().getBaseName();\r\n\t\t\t\t\t\tdestFile=KettleVFS.getFileObject(destinationFilename, this);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfileObject.moveTo(destFile);\r\n\r\n\t\t\t\t\t\t// File moved\r\n\t\t\t\t\t\tif(log.isDetailed()) logDetailed(BaseMessages.getString(PKG, \"JobUnZip.Log.FileMovedTo\",sourceFileObject.toString(),realMovetodirectory));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (Exception e) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tupdateErrors();\r\n\t\t\t\t\t\tlogError(BaseMessages.getString(PKG, \"JobUnZip.Cant_Move_File.Label\",sourceFileObject.toString(),realMovetodirectory,e.getMessage()));\r\n\t\t\t\t\t}finally\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif ( destFile != null ){\r\n\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\tdestFile.close();\r\n\t\t\t\t\t\t\t}catch ( IOException ex ) {};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t }\r\n\t\t\t  \r\n\t\t\t retval=true;\r\n\t\t}\r\n\t\tcatch (Exception e) \r\n\t\t{\r\n\t\t\tupdateErrors();\r\n   \t\t\tlog.logError(BaseMessages.getString(PKG, \"JobUnZip.Error.Label\"), BaseMessages.getString(PKG, \"JobUnZip.ErrorUnzip.Label\",sourceFileObject.toString(),e.getMessage()), e);\r\n\t\t}\r\n\r\n\t\treturn retval;\r\n\t}","id":15672,"modified_method":"private boolean unzipFile(FileObject sourceFileObject, String realTargetdirectory, String realWildcard,\r\n\t\t\tString realWildcardExclude, Result result, Job parentJob, FileObject fileObject, FileObject movetodir,\r\n\t\t\tString realMovetodirectory)\r\n\t{\r\n\t\tboolean retval=false;\r\n\t\tString unzipToFolder=realTargetdirectory;\r\n\t\ttry {\r\n\t\t\t\r\n\t\t\t if(log.isDetailed()) logDetailed(BaseMessages.getString(PKG, \"JobUnZip.Log.ProcessingFile\",sourceFileObject.toString()));\r\n\t\t\r\n\t\t\t // Do you create a root folder?\r\n\t\t\t //\r\n\t\t\t if(rootzip)\r\n\t\t\t {\r\n\t\t\t\tString shortSourceFilename = sourceFileObject.getName().getBaseName();\r\n\t        \tint lenstring=shortSourceFilename.length();\r\n\t        \tint lastindexOfDot=shortSourceFilename.lastIndexOf('.');\r\n\t        \tif(lastindexOfDot==-1) lastindexOfDot=lenstring;\r\n\t        \t\t\r\n\t        \tString foldername=realTargetdirectory + \"/\" + shortSourceFilename.substring(0, lastindexOfDot);\r\n\t\t\t\tFileObject rootfolder=KettleVFS.getFileObject(foldername, this);\r\n\t\t\t\tif(!rootfolder.exists())\r\n\t\t\t\t{\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t  rootfolder.createFolder();\r\n\t\t\t\t\t  if(log.isDetailed()) logDetailed(BaseMessages.getString(PKG, \"JobUnZip.Log.RootFolderCreated\",foldername));\r\n\t\t\t\t\t} catch(Exception e) {\r\n\t\t\t\t\t\t throw new Exception(BaseMessages.getString(PKG, \"JobUnZip.Error.CanNotCreateRootFolder\",foldername), e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tunzipToFolder=foldername;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t    // Try to read the entries from the VFS object...\r\n\t\t\t//\r\n\t\t\tString zipFilename = \"zip:\"+sourceFileObject.getName().getFriendlyURI();\r\n\t\t\tFileObject zipFile = KettleVFS.getFileObject(zipFilename, this);\r\n\t\t\tFileObject[] items = zipFile.findFiles(\r\n\t\t\t\t\tnew AllFileSelector()\r\n                        {\r\n                            public boolean traverseDescendents(FileSelectInfo info)\r\n                            {\r\n                                return true;\r\n                            }\r\n                            \r\n                            public boolean includeFile(FileSelectInfo info)\r\n                            {\r\n                                // Never return the parent directory of a file list.\r\n                            \tif (info.getDepth() == 0) {\r\n                                    return false;\r\n                                }\r\n                                \r\n                            \tFileObject fileObject = info.getFile();\r\n                            \treturn fileObject!=null;\r\n                            }\r\n                        }\r\n                    );\r\n\r\n\t\t\tPattern pattern = null;\r\n\t\t\tif (!Const.isEmpty(realWildcard)) \r\n\t\t\t{\r\n\t\t\t\tpattern = Pattern.compile(realWildcard);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tPattern patternexclude = null;\r\n\t\t\tif (!Const.isEmpty(realWildcardExclude)) \r\n\t\t\t{\r\n\t\t\t\tpatternexclude = Pattern.compile(realWildcardExclude);\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tfor (FileObject item : items) {\r\n\t\t\t\t\r\n\t\t\t\t\tif(successConditionBroken){\r\n\t\t\t\t\t  if(!successConditionBrokenExit){\r\n\t\t\t\t\t\tlogError(BaseMessages.getString(PKG, \"JobUnZip.Error.SuccessConditionbroken\",\"\"+NrErrors));\r\n\t\t\t\t\t\tsuccessConditionBrokenExit=true;\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t  return false;\r\n\t\t\t\t  }\r\n\t\t\t\t\t\r\n\t\t\t\t\t FileObject newFileObject=null;\r\n\t\t\t\t  try{\r\n\t\t\t\t\t  if(log.isDetailed()) logDetailed(BaseMessages.getString(PKG, \"JobUnZip.Log.ProcessingZipEntry\",item.getName().getURI(), sourceFileObject.toString()));\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t  // get real destination filename\r\n\t\t\t\t\t  //\r\n\t\t\t\t\t  String newFileName = unzipToFolder + Const.FILE_SEPARATOR + getTargetFilename(item);\r\n\t\t\t\t\t  newFileObject = KettleVFS.getFileObject(newFileName, this);\r\n\t\t\r\n\t\t\t\t\t  if( item.getType().equals(FileType.FOLDER))\r\n\t\t\t\t\t  {\r\n\t\t\t\t\t\t // Directory \r\n\t\t\t\t\t\t //\r\n\t\t\t             if(log.isDetailed()) logDetailed(BaseMessages.getString(PKG, \"JobUnZip.CreatingDirectory.Label\",newFileName));\r\n\t\t\r\n\t\t\t             // Create Directory if necessary ...\r\n\t\t\t             //\r\n\t\t\t             if(!newFileObject.exists()) newFileObject.createFolder();\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t  else\r\n\t\t\t\t\t  {\r\n\t\t\t\t\t\t// File\r\n\t\t\t\t\t\t//\r\n\t\t\t\t\t\tboolean getIt = true;\r\n\t\t\t\t\t\tboolean getItexclude = false;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t    // First see if the file matches the regular expression!\r\n\t\t\t\t\t\t//\r\n\t\t\t\t\t\tif (pattern!=null)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tMatcher matcher = pattern.matcher(item.getName().getURI());\r\n\t\t\t\t\t\t\tgetIt = matcher.matches();\r\n\t\t\t\t\t\t}\r\n\t\t\r\n\t\t\t\t\t\tif (patternexclude!=null)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tMatcher matcherexclude = patternexclude.matcher(item.getName().getURI());\r\n\t\t\t\t\t\t\tgetItexclude = matcherexclude.matches();\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tboolean take=takeThisFile(item, newFileName);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (getIt && !getItexclude && take)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif(log.isDetailed()) logDetailed(BaseMessages.getString(PKG, \"JobUnZip.ExtractingEntry.Label\",item.getName().getURI(),newFileName));\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(iffileexist==IF_FILE_EXISTS_UNIQ)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t        \t\t// Create file with unique name\r\n\t\t\t\t        \t\t\r\n\t\t\t\t        \t\tint lenstring=newFileName.length();\r\n\t\t\t\t        \t\tint lastindexOfDot=newFileName.lastIndexOf('.');\r\n\t\t\t\t        \t\tif(lastindexOfDot==-1) lastindexOfDot=lenstring;\r\n\t\t\t\t        \t\t\r\n\t\t\t\t        \t\tnewFileName=newFileName.substring(0, lastindexOfDot)\r\n\t\t\t\t        \t\t+ StringUtil.getFormattedDateTimeNow(true) \r\n\t\t\t\t        \t\t+ newFileName.substring(lastindexOfDot, lenstring);\r\n\t\t\t\t        \t\t\r\n\t\t\t\t        \t\tif(log.isDebug()) logDebug(BaseMessages.getString(PKG, \"JobUnZip.Log.CreatingUniqFile\",newFileName));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// See if the folder to the target file exists...\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tif (!newFileObject.getParent().exists()) {\r\n\t\t\t\t\t\t\t\tnewFileObject.getParent().createFolder(); // creates the whole path.\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tInputStream is = null;\r\n\t\t\t\t\t\t\tOutputStream os = null;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t                  is = KettleVFS.getInputStream(item);\r\n\t\t\t                  os = KettleVFS.getOutputStream(newFileObject, false);\r\n\t\t\t                \r\n\t\t\t\t              if(is!=null)\r\n\t\t\t\t              {\r\n\t\t\t\t\t                byte[] buff=new byte[2048];\r\n\t\t\t\t                \tint len;\r\n\t\t\t\t                \t\r\n\t\t\t\t                \twhile((len=is.read(buff))>0)\r\n\t\t\t\t                \t{\r\n\t\t\t\t                \t\tos.write(buff,0,len);\r\n\t\t\t\t                \t}\r\n\t\t\t\t                  \r\n\t\t\t\t\t                // Add filename to result filenames\r\n\t\t\t\t\t                addFilenameToResultFilenames(result, parentJob, newFileName);\r\n\t\t\t\t              }\r\n\t\t\t\t\t\t\t} finally {\r\n\t\t\t                    if(is!=null) is.close();\r\n\t\t\t\t                if(os!=null) os.close();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}// end if take    \t\t\r\n\t\t\t\t\t }\r\n\t\t\t\t  } catch(Exception e)\r\n\t\t\t\t  {\r\n\t\t\t\t\t  updateErrors();\r\n\t\t\t\t\t  logError(BaseMessages.getString(PKG, \"JobUnZip.Error.CanNotProcessZipEntry\",item.getName().getURI(), sourceFileObject.toString()), e);\r\n\t\t\t\t  }\r\n\t\t\t\t  finally {\r\n\t\t\t\t\t  if(newFileObject!=null) {\r\n\t\t\t\t\t\t  try {\r\n\t\t\t\t\t\t\t  newFileObject.close();\r\n\t\t\t\t\t\t\t  if(setOriginalModificationDate) {\r\n\t\t\t\t\t\t\t\t  // Change last modification date\r\n\t\t\t\t\t\t\t\t  newFileObject.getContent().setLastModifiedTime(item.getContent().getLastModifiedTime());\r\n\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t }catch(Exception e){};// ignore this\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t  // Close file object\r\n\t\t\t\t\t  // close() does not release resources!\r\n\t\t\t\t\t  KettleVFS.getInstance().getFileSystemManager().closeFileSystem(item.getFileSystem()); \r\n\t\t\t\t\t  if(items!=null) items=null;\r\n\t\t\t\t  }\r\n\t         }// End for\r\n\r\n\t\t     // Here gc() is explicitly called if e.g. createfile is used in the same\r\n\t\t\t // job for the same file. The problem is that after creating the file the\r\n\t\t\t // file object is not properly garbaged collected and thus the file cannot\r\n\t\t\t // be deleted anymore. This is a known problem in the JVM.\r\n\t\t\t\t\r\n\t\t\t //System.gc();\r\n\t\t\t  \r\n\t\t\t  // Unzip done...\r\n\t\t\t  if (afterunzip==1)\r\n\t\t\t  {\r\n\t\t\t\t  // delete zip file\r\n\t\t\t\t  boolean deleted = fileObject.delete();\r\n\t\t\t\t  if ( ! deleted )\t\r\n\t\t\t\t  {\t\r\n\t\t\t\t\t  updateErrors();\r\n\t\t\t\t\t  logError(BaseMessages.getString(PKG, \"JobUnZip.Cant_Delete_File.Label\", sourceFileObject.toString()));\r\n\t\t\t\t   }\r\n\t\t\t\t   // File deleted\r\n\t\t\t\t   if(log.isDebug()) logDebug(BaseMessages.getString(PKG, \"JobUnZip.File_Deleted.Label\", sourceFileObject.toString()));\r\n\t\t\t  }\r\n\t\t\t  else if(afterunzip == 2)\r\n\t\t\t  {\r\n\t\t\t\t   FileObject destFile=null;\r\n\t\t\t\t   // Move File\t\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tString destinationFilename=movetodir+Const.FILE_SEPARATOR+ fileObject.getName().getBaseName();\r\n\t\t\t\t\t\tdestFile=KettleVFS.getFileObject(destinationFilename, this);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfileObject.moveTo(destFile);\r\n\r\n\t\t\t\t\t\t// File moved\r\n\t\t\t\t\t\tif(log.isDetailed()) logDetailed(BaseMessages.getString(PKG, \"JobUnZip.Log.FileMovedTo\",sourceFileObject.toString(),realMovetodirectory));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (Exception e) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tupdateErrors();\r\n\t\t\t\t\t\tlogError(BaseMessages.getString(PKG, \"JobUnZip.Cant_Move_File.Label\",sourceFileObject.toString(),realMovetodirectory,e.getMessage()));\r\n\t\t\t\t\t}finally\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif ( destFile != null ){\r\n\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\tdestFile.close();\r\n\t\t\t\t\t\t\t}catch ( IOException ex ) {};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t }\r\n\t\t\t  \r\n\t\t\t retval=true;\r\n\t\t}\r\n\t\tcatch (Exception e) \r\n\t\t{\r\n\t\t\tupdateErrors();\r\n   \t\t\tlog.logError(BaseMessages.getString(PKG, \"JobUnZip.Error.Label\"), BaseMessages.getString(PKG, \"JobUnZip.ErrorUnzip.Label\",sourceFileObject.toString(),e.getMessage()), e);\r\n\t\t}\r\n\r\n\t\treturn retval;\r\n\t}","commit_id":"d8de35990548b21aefaefc482ada2dfc0f265d2a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void loadXML(Node entrynode, List<DatabaseMeta> databases, List<SlaveServer> slaveServers, Repository rep)\r\n\tthrows KettleXMLException\r\n {\r\n\t\ttry\r\n\t\t{\r\n\t\t\tsuper.loadXML(entrynode, databases, slaveServers);\r\n\t\t\tzipFilename = XMLHandler.getTagValue(entrynode, \"zipfilename\");\r\n\t\t\tafterunzip        = Const.toInt(XMLHandler.getTagValue(entrynode, \"afterunzip\"), -1);\r\n\r\n    \t\twildcard = XMLHandler.getTagValue(entrynode, \"wildcard\");\r\n\t\t\twildcardexclude = XMLHandler.getTagValue(entrynode, \"wildcardexclude\");\r\n\t\t\ttargetdirectory = XMLHandler.getTagValue(entrynode, \"targetdirectory\");\r\n\t\t\tmovetodirectory = XMLHandler.getTagValue(entrynode, \"movetodirectory\");\r\n\t\t\taddfiletoresult = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"addfiletoresult\"));\r\n\t\t\tisfromprevious = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"isfromprevious\"));\t\r\n\t\t\tadddate = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"adddate\"));\t\r\n\t\t\taddtime = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"addtime\"));\t\r\n\t\t\tSpecifyFormat = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"SpecifyFormat\"));\t\r\n\t\t\tdate_time_format = XMLHandler.getTagValue(entrynode, \"date_time_format\");\r\n\t\t\trootzip = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"rootzip\"));\r\n\t\t\tcreatefolder = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"createfolder\"));\r\n\t\t\tnr_limit = XMLHandler.getTagValue(entrynode, \"nr_limit\");\r\n\t\t\twildcardSource = XMLHandler.getTagValue(entrynode, \"wildcardSource\");\r\n\t\t\tsuccess_condition          = XMLHandler.getTagValue(entrynode, \"success_condition\");\r\n\t\t\tif(Const.isEmpty(success_condition)) success_condition=SUCCESS_IF_NO_ERRORS;\r\n\t\t\tiffileexist   = getIfFileExistsInt(XMLHandler.getTagValue(entrynode, \"iffileexists\"));\t\r\n\t\t\tcreateMoveToDirectory = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"create_move_to_directory\"));\r\n\t\t\t\r\n\t\t}\r\n\t\tcatch(KettleXMLException xe)\r\n\t\t{\r\n\t\t\tthrow new KettleXMLException(\"Unable to load job entry of type 'unzip' from XML node\", xe);\r\n\t\t}\r\n\t}","id":15673,"modified_method":"public void loadXML(Node entrynode, List<DatabaseMeta> databases, List<SlaveServer> slaveServers, Repository rep)\r\n\tthrows KettleXMLException\r\n {\r\n\t\ttry\r\n\t\t{\r\n\t\t\tsuper.loadXML(entrynode, databases, slaveServers);\r\n\t\t\tzipFilename = XMLHandler.getTagValue(entrynode, \"zipfilename\");\r\n\t\t\tafterunzip        = Const.toInt(XMLHandler.getTagValue(entrynode, \"afterunzip\"), -1);\r\n\r\n    \t\twildcard = XMLHandler.getTagValue(entrynode, \"wildcard\");\r\n\t\t\twildcardexclude = XMLHandler.getTagValue(entrynode, \"wildcardexclude\");\r\n\t\t\ttargetdirectory = XMLHandler.getTagValue(entrynode, \"targetdirectory\");\r\n\t\t\tmovetodirectory = XMLHandler.getTagValue(entrynode, \"movetodirectory\");\r\n\t\t\taddfiletoresult = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"addfiletoresult\"));\r\n\t\t\tisfromprevious = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"isfromprevious\"));\t\r\n\t\t\tadddate = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"adddate\"));\t\r\n\t\t\taddtime = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"addtime\"));\t\r\n\t\t\taddOriginalTimestamp = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"addOriginalTimestamp\"));\r\n\t\t\tSpecifyFormat = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"SpecifyFormat\"));\t\r\n\t\t\tdate_time_format = XMLHandler.getTagValue(entrynode, \"date_time_format\");\r\n\t\t\trootzip = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"rootzip\"));\r\n\t\t\tcreatefolder = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"createfolder\"));\r\n\t\t\tnr_limit = XMLHandler.getTagValue(entrynode, \"nr_limit\");\r\n\t\t\twildcardSource = XMLHandler.getTagValue(entrynode, \"wildcardSource\");\r\n\t\t\tsuccess_condition          = XMLHandler.getTagValue(entrynode, \"success_condition\");\r\n\t\t\tif(Const.isEmpty(success_condition)) success_condition=SUCCESS_IF_NO_ERRORS;\r\n\t\t\tiffileexist   = getIfFileExistsInt(XMLHandler.getTagValue(entrynode, \"iffileexists\"));\t\r\n\t\t\tcreateMoveToDirectory = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"create_move_to_directory\"));\r\n\t\t\tsetOriginalModificationDate = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"setOriginalModificationDate\"));\r\n\t\t}\r\n\t\tcatch(KettleXMLException xe)\r\n\t\t{\r\n\t\t\tthrow new KettleXMLException(\"Unable to load job entry of type 'unzip' from XML node\", xe);\r\n\t\t}\r\n\t}","commit_id":"d8de35990548b21aefaefc482ada2dfc0f265d2a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void saveRep(Repository rep, ObjectId id_job)\r\n\t\tthrows KettleException\r\n\t{\r\n\t\ttry\r\n\t\t{\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"zipfilename\", zipFilename);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"afterunzip\", afterunzip);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"wildcard\", wildcard);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"wildcardexclude\", wildcardexclude);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"targetdirectory\", targetdirectory);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"movetodirectory\", movetodirectory);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"addfiletoresult\", addfiletoresult);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"isfromprevious\", isfromprevious);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"addtime\", addtime);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"adddate\", adddate);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"SpecifyFormat\", SpecifyFormat);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"date_time_format\", date_time_format);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"rootzip\", rootzip);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"createfolder\", createfolder);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"nr_limit\", nr_limit);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"wildcardSource\", wildcardSource);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"success_condition\",    success_condition);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"iffileexists\", getIfFileExistsCode(iffileexist));\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"create_move_to_directory\", createMoveToDirectory);\r\n\t\t}\r\n\t\tcatch(KettleDatabaseException dbe)\r\n\t\t{\r\n\t\t\tthrow new KettleException(\"Unable to save job entry of type 'unzip' to the repository for id_job=\"+id_job, dbe);\r\n\t\t}\r\n\t}","id":15674,"modified_method":"public void saveRep(Repository rep, ObjectId id_job)\r\n\t\tthrows KettleException\r\n\t{\r\n\t\ttry\r\n\t\t{\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"zipfilename\", zipFilename);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"afterunzip\", afterunzip);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"wildcard\", wildcard);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"wildcardexclude\", wildcardexclude);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"targetdirectory\", targetdirectory);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"movetodirectory\", movetodirectory);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"addfiletoresult\", addfiletoresult);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"isfromprevious\", isfromprevious);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"addtime\", addtime);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"adddate\", adddate);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"addOriginalTimestamp\", addOriginalTimestamp);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"SpecifyFormat\", SpecifyFormat);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"date_time_format\", date_time_format);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"rootzip\", rootzip);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"createfolder\", createfolder);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"nr_limit\", nr_limit);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"wildcardSource\", wildcardSource);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"success_condition\",    success_condition);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"iffileexists\", getIfFileExistsCode(iffileexist));\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"create_move_to_directory\", createMoveToDirectory);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getObjectId(), \"setOriginalModificationDate\", setOriginalModificationDate);\r\n\t\t}\r\n\t\tcatch(KettleDatabaseException dbe)\r\n\t\t{\r\n\t\t\tthrow new KettleException(\"Unable to save job entry of type 'unzip' to the repository for id_job=\"+id_job, dbe);\r\n\t\t}\r\n\t}","commit_id":"d8de35990548b21aefaefc482ada2dfc0f265d2a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public JobEntryUnZip(String n)\r\n\t{\r\n\t\tsuper(n, \"\");\r\n\t\tzipFilename=null;\r\n\t\tafterunzip=0;\r\n\t\twildcard=null;\r\n\t\twildcardexclude=null;\r\n\t\ttargetdirectory=null;\r\n\t\tmovetodirectory=null;\r\n\t\taddfiletoresult = false;\r\n\t\tisfromprevious = false;\r\n\t\tadddate=false;\r\n\t\taddtime=false;\r\n\t\tSpecifyFormat=false;\r\n\t\trootzip=false;\r\n\t\tcreatefolder=false;\r\n\t\tnr_limit=\"10\";\r\n\t\twildcardSource=null;\r\n\t\tiffileexist=IF_FILE_EXISTS_SKIP;\r\n\t\tsuccess_condition=SUCCESS_IF_NO_ERRORS;\r\n\t\tcreateMoveToDirectory=false;\r\n\t\tsetID(-1L);\r\n\t}","id":15675,"modified_method":"public JobEntryUnZip(String n)\r\n\t{\r\n\t\tsuper(n, \"\");\r\n\t\tzipFilename=null;\r\n\t\tafterunzip=0;\r\n\t\twildcard=null;\r\n\t\twildcardexclude=null;\r\n\t\ttargetdirectory=null;\r\n\t\tmovetodirectory=null;\r\n\t\taddfiletoresult = false;\r\n\t\tisfromprevious = false;\r\n\t\tadddate=false;\r\n\t\taddtime=false;\r\n\t\tSpecifyFormat=false;\r\n\t\trootzip=false;\r\n\t\tcreatefolder=false;\r\n\t\tnr_limit=\"10\";\r\n\t\twildcardSource=null;\r\n\t\tiffileexist=IF_FILE_EXISTS_SKIP;\r\n\t\tsuccess_condition=SUCCESS_IF_NO_ERRORS;\r\n\t\tcreateMoveToDirectory=false;\r\n\t\t\r\n\t\taddOriginalTimestamp=false;\r\n\t\tsetOriginalModificationDate=false;\r\n\t\t\r\n\t\tsetID(-1L);\r\n\t}","commit_id":"d8de35990548b21aefaefc482ada2dfc0f265d2a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public String getXML()\r\n\t{\r\n        StringBuffer retval = new StringBuffer(50);\r\n\t\t\r\n\t\tretval.append(super.getXML());\t\t\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"zipfilename\",      zipFilename));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"wildcard\",         wildcard));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"wildcardexclude\",  wildcardexclude));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"targetdirectory\",  targetdirectory));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"movetodirectory\",  movetodirectory));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"afterunzip\",  afterunzip));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"addfiletoresult\",  addfiletoresult));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"isfromprevious\",  isfromprevious));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"adddate\",  adddate));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"addtime\",  addtime));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"SpecifyFormat\",  SpecifyFormat));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"date_time_format\",  date_time_format));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"rootzip\",  rootzip));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"createfolder\",  createfolder));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"nr_limit\",  nr_limit));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"wildcardSource\",  wildcardSource));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"success_condition\", success_condition));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"iffileexists\", getIfFileExistsCode(iffileexist))); \r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"create_move_to_directory\",  createMoveToDirectory));\r\n\t\t\r\n\t\treturn retval.toString();\r\n\t}","id":15676,"modified_method":"public String getXML()\r\n\t{\r\n        StringBuffer retval = new StringBuffer(50);\r\n\t\t\r\n\t\tretval.append(super.getXML());\t\t\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"zipfilename\",      zipFilename));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"wildcard\",         wildcard));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"wildcardexclude\",  wildcardexclude));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"targetdirectory\",  targetdirectory));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"movetodirectory\",  movetodirectory));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"afterunzip\",  afterunzip));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"addfiletoresult\",  addfiletoresult));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"isfromprevious\",  isfromprevious));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"adddate\",  adddate));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"addtime\",  addtime));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"addOriginalTimestamp\",  addOriginalTimestamp));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"SpecifyFormat\",  SpecifyFormat));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"date_time_format\",  date_time_format));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"rootzip\",  rootzip));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"createfolder\",  createfolder));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"nr_limit\",  nr_limit));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"wildcardSource\",  wildcardSource));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"success_condition\", success_condition));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"iffileexists\", getIfFileExistsCode(iffileexist))); \r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"create_move_to_directory\",  createMoveToDirectory));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"setOriginalModificationDate\",  setOriginalModificationDate));\r\n\t\treturn retval.toString();\r\n\t}","commit_id":"d8de35990548b21aefaefc482ada2dfc0f265d2a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\r\n     * @param string the filename from the FTP server\r\n     * \r\n     * @return the calculated target filename\r\n     */\r\n\tprotected String getTargetFilename(String filename)\r\n    {\r\n\t\t\r\n        String retval=\"\";\r\n\t\t// Replace possible environment variables...\r\n\t\tif(filename!=null) retval=filename;\r\n\t\t\r\n\t\tint lenstring=retval.length();\r\n\t\tint lastindexOfDot=retval.lastIndexOf('.');\r\n\t\tif(lastindexOfDot==-1) lastindexOfDot=lenstring;\r\n\t\t\r\n\t\tretval=retval.substring(0, lastindexOfDot);\r\n\t\t\r\n\t\tSimpleDateFormat daf     = new SimpleDateFormat();\r\n\t\tDate now = new Date();\r\n\t\t\r\n\t\tif(SpecifyFormat && !Const.isEmpty(date_time_format))\r\n\t\t{\r\n\t\t\tdaf.applyPattern(date_time_format);\r\n\t\t\tString dt = daf.format(now);\r\n\t\t\tretval+=dt;\r\n\t\t}else\r\n\t\t{\r\n\t\t\r\n\t\t\tif (adddate)\r\n\t\t\t{\r\n\t\t\t\tdaf.applyPattern(\"yyyyMMdd\");\r\n\t\t\t\tString d = daf.format(now);\r\n\t\t\t\tretval+=\"_\"+d;\r\n\t\t\t}\r\n\t\t\tif (addtime)\r\n\t\t\t{\r\n\t\t\t\tdaf.applyPattern(\"HHmmssSSS\");\r\n\t\t\t\tString t = daf.format(now);\r\n\t\t\t\tretval+=\"_\"+t;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tretval+=filename.substring(lastindexOfDot, lenstring);\r\n\r\n\t\treturn retval;\r\n\r\n        \r\n    }","id":15677,"modified_method":"/**\r\n     * @param string the filename from\r\n     * \r\n     * @return the calculated target filename\r\n     */\r\n\tprotected String getTargetFilename(FileObject file) throws FileSystemException\r\n    {\r\n\t\t\r\n        String retval=\"\";\r\n        String filename=file.getName().getPath();\r\n\t\t// Replace possible environment variables...\r\n\t\tif(filename!=null) retval=filename;\r\n\t\tif(file.getType()!= FileType.FILE) return retval;\r\n\t\t\r\n\t\tint lenstring=retval.length();\r\n\t\tint lastindexOfDot=retval.lastIndexOf('.');\r\n\t\tif(lastindexOfDot==-1) lastindexOfDot=lenstring;\r\n\t\t\r\n\t\tretval=retval.substring(0, lastindexOfDot);\r\n\t\tif(!SpecifyFormat && !adddate && !addtime) return retval;\r\n\t\t\r\n\t\t\r\n\t\tif(daf==null) daf  = new SimpleDateFormat();\r\n\t\t\r\n\t\tDate timestamp = new Date();\r\n\t\tif(addOriginalTimestamp) timestamp=new Date(file.getContent().getLastModifiedTime());\r\n\t\t\r\n\t\tif(SpecifyFormat && !Const.isEmpty(date_time_format)){\r\n\t\t\tif(!dateFormatSet) daf.applyPattern(date_time_format);\r\n\t\t\tString dt = daf.format(timestamp);\r\n\t\t\tretval+=dt;\r\n\t\t}else {\r\n\t\t\r\n\t\t\tif (adddate) {\r\n\t\t\t\tif(!dateFormatSet) daf.applyPattern(\"yyyyMMdd\");\r\n\t\t\t\tString d = daf.format(timestamp);\r\n\t\t\t\tretval+=\"_\"+d;\r\n\t\t\t}\r\n\t\t\tif (addtime) {\r\n\t\t\t\tif(!dateFormatSet) daf.applyPattern(\"HHmmssSSS\");\r\n\t\t\t\tString t = daf.format(timestamp);\r\n\t\t\t\tretval+=\"_\"+t;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(daf!=null) dateFormatSet=true;\r\n\t\tretval+=filename.substring(lastindexOfDot, lenstring);\r\n\r\n\t\treturn retval;\r\n\r\n        \r\n    }","commit_id":"d8de35990548b21aefaefc482ada2dfc0f265d2a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void loadRep(Repository rep, ObjectId id_jobentry, List<DatabaseMeta> databases, List<SlaveServer> slaveServers) throws KettleException\r\n    {\r\n\t\ttry\r\n\t\t{\r\n\t\t\tzipFilename = rep.getJobEntryAttributeString(id_jobentry, \"zipfilename\");\r\n\t\t\tafterunzip=(int) rep.getJobEntryAttributeInteger(id_jobentry, \"afterunzip\");\r\n\t\t\twildcard = rep.getJobEntryAttributeString(id_jobentry, \"wildcard\");\r\n\t\t\twildcardexclude = rep.getJobEntryAttributeString(id_jobentry, \"wildcardexclude\");\r\n\t\t\ttargetdirectory = rep.getJobEntryAttributeString(id_jobentry, \"targetdirectory\");\r\n\t\t\tmovetodirectory = rep.getJobEntryAttributeString(id_jobentry, \"movetodirectory\");\r\n\t\t\taddfiletoresult=rep.getJobEntryAttributeBoolean(id_jobentry, \"addfiletoresult\");\r\n\t\t\tisfromprevious=rep.getJobEntryAttributeBoolean(id_jobentry, \"isfromprevious\");\r\n\t\t\tadddate=rep.getJobEntryAttributeBoolean(id_jobentry, \"adddate\");\r\n\t\t\taddtime=rep.getJobEntryAttributeBoolean(id_jobentry, \"adddate\");\r\n\t\t\tSpecifyFormat=rep.getJobEntryAttributeBoolean(id_jobentry, \"SpecifyFormat\");\r\n\t\t\tdate_time_format = rep.getJobEntryAttributeString(id_jobentry, \"date_time_format\");\r\n\t\t\trootzip=rep.getJobEntryAttributeBoolean(id_jobentry, \"rootzip\");\r\n\t\t\tcreatefolder=rep.getJobEntryAttributeBoolean(id_jobentry, \"createfolder\");\r\n\t\t\tnr_limit=rep.getJobEntryAttributeString(id_jobentry, \"nr_limit\");\r\n\t\t\twildcardSource=rep.getJobEntryAttributeString(id_jobentry, \"wildcardSource\");\r\n\t\t\tsuccess_condition  = rep.getJobEntryAttributeString(id_jobentry, \"success_condition\");\r\n\t\t\tif(Const.isEmpty(success_condition)) success_condition=SUCCESS_IF_NO_ERRORS;\r\n\t\t\tiffileexist    = getIfFileExistsInt(rep.getJobEntryAttributeString(id_jobentry,\"iffileexists\") );\r\n\t\t\tcreateMoveToDirectory=rep.getJobEntryAttributeBoolean(id_jobentry, \"create_move_to_directory\");\r\n\t\t}\r\n\r\n\t\tcatch(KettleException dbe)\r\n\t\t{\r\n\t\t\tthrow new KettleException(\"Unable to load job entry of type 'unzip' from the repository for id_jobentry=\"+id_jobentry, dbe);\r\n\t\t}\r\n\t}","id":15678,"modified_method":"public void loadRep(Repository rep, ObjectId id_jobentry, List<DatabaseMeta> databases, List<SlaveServer> slaveServers) throws KettleException\r\n    {\r\n\t\ttry\r\n\t\t{\r\n\t\t\tzipFilename = rep.getJobEntryAttributeString(id_jobentry, \"zipfilename\");\r\n\t\t\tafterunzip=(int) rep.getJobEntryAttributeInteger(id_jobentry, \"afterunzip\");\r\n\t\t\twildcard = rep.getJobEntryAttributeString(id_jobentry, \"wildcard\");\r\n\t\t\twildcardexclude = rep.getJobEntryAttributeString(id_jobentry, \"wildcardexclude\");\r\n\t\t\ttargetdirectory = rep.getJobEntryAttributeString(id_jobentry, \"targetdirectory\");\r\n\t\t\tmovetodirectory = rep.getJobEntryAttributeString(id_jobentry, \"movetodirectory\");\r\n\t\t\taddfiletoresult=rep.getJobEntryAttributeBoolean(id_jobentry, \"addfiletoresult\");\r\n\t\t\tisfromprevious=rep.getJobEntryAttributeBoolean(id_jobentry, \"isfromprevious\");\r\n\t\t\tadddate=rep.getJobEntryAttributeBoolean(id_jobentry, \"adddate\");\r\n\t\t\taddtime=rep.getJobEntryAttributeBoolean(id_jobentry, \"addtime\");\r\n\t\t\taddOriginalTimestamp=rep.getJobEntryAttributeBoolean(id_jobentry, \"addOriginalTimestamp\");\r\n\t\t\tSpecifyFormat=rep.getJobEntryAttributeBoolean(id_jobentry, \"SpecifyFormat\");\r\n\t\t\tdate_time_format = rep.getJobEntryAttributeString(id_jobentry, \"date_time_format\");\r\n\t\t\trootzip=rep.getJobEntryAttributeBoolean(id_jobentry, \"rootzip\");\r\n\t\t\tcreatefolder=rep.getJobEntryAttributeBoolean(id_jobentry, \"createfolder\");\r\n\t\t\tnr_limit=rep.getJobEntryAttributeString(id_jobentry, \"nr_limit\");\r\n\t\t\twildcardSource=rep.getJobEntryAttributeString(id_jobentry, \"wildcardSource\");\r\n\t\t\tsuccess_condition  = rep.getJobEntryAttributeString(id_jobentry, \"success_condition\");\r\n\t\t\tif(Const.isEmpty(success_condition)) success_condition=SUCCESS_IF_NO_ERRORS;\r\n\t\t\tiffileexist    = getIfFileExistsInt(rep.getJobEntryAttributeString(id_jobentry,\"iffileexists\") );\r\n\t\t\tcreateMoveToDirectory=rep.getJobEntryAttributeBoolean(id_jobentry, \"create_move_to_directory\");\r\n\t\t\tsetOriginalModificationDate=rep.getJobEntryAttributeBoolean(id_jobentry, \"setOriginalModificationDate\");\r\n\t\t}\r\n\r\n\t\tcatch(KettleException dbe)\r\n\t\t{\r\n\t\t\tthrow new KettleException(\"Unable to load job entry of type 'unzip' from the repository for id_jobentry=\"+id_jobentry, dbe);\r\n\t\t}\r\n\t}","commit_id":"d8de35990548b21aefaefc482ada2dfc0f265d2a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void ok()\r\n\t{\r\n\t   if(Const.isEmpty(wName.getText())) \r\n         {\r\n\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\r\n\t\t\tmb.setText(BaseMessages.getString(PKG, \"System.StepJobEntryNameMissing.Title\"));\r\n\t\t\tmb.setMessage(BaseMessages.getString(PKG, \"System.JobEntryNameMissing.Msg\"));\r\n\t\t\tmb.open(); \r\n\t\t\treturn;\r\n         }\r\n\t\tjobEntry.setName(wName.getText());\r\n\t\tjobEntry.setZipFilename(wZipFilename.getText());\r\n\t\tjobEntry.setWildcardSource(wWildcardSource.getText());\r\n\r\n\t\tjobEntry.setWildcard(wWildcard.getText());\r\n\t\tjobEntry.setWildcardExclude(wWildcardExclude.getText());\r\n\t\tjobEntry.setSourceDirectory(wTargetDirectory.getText());\r\n\r\n\t\tjobEntry.setMoveToDirectory(wMovetoDirectory.getText());\r\n\t\t\r\n\t\t\r\n\t\tjobEntry.afterunzip = wAfterUnZip.getSelectionIndex();\r\n\t\t\r\n\t\tjobEntry.setAddFileToResult(wAddFileToResult.getSelection());\r\n\t\t\r\n\t\tjobEntry.setDatafromprevious(wArgsPrevious.getSelection());\r\n\t\tjobEntry.setDateInFilename( wAddDate.getSelection() );\r\n\t\tjobEntry.setTimeInFilename( wAddTime.getSelection() );\r\n\t\tjobEntry.setSpecifyFormat(wSpecifyFormat.getSelection());\r\n\t\tjobEntry.setDateTimeFormat(wDateTimeFormat.getText());\r\n\t\t\r\n\t\tjobEntry.setCreateRootFolder(wRootZip.getSelection());\r\n\t\tjobEntry.setCreateFolder(wCreateFolder.getSelection());\r\n\t\tjobEntry.setLimit(wNrErrorsLessThan.getText());\r\n\t\t\r\n\t\tif(wSuccessCondition.getSelectionIndex()==1)\r\n\t\t\tjobEntry.setSuccessCondition(jobEntry.SUCCESS_IF_AT_LEAST_X_FILES_UN_ZIPPED);\r\n\t\telse if(wSuccessCondition.getSelectionIndex()==2)\r\n\t\t\tjobEntry.setSuccessCondition(jobEntry.SUCCESS_IF_ERRORS_LESS);\r\n\t\telse\r\n\t\t\tjobEntry.setSuccessCondition(jobEntry.SUCCESS_IF_NO_ERRORS);\t\r\n\t\t\r\n\t\tjobEntry.setIfFileExists(wIfFileExists.getSelectionIndex());\t\r\n\t\tjobEntry.setCreateMoveToDirectory(wcreateMoveToDirectory.getSelection());\r\n\t\tdispose();\r\n\t}","id":15679,"modified_method":"private void ok()\r\n\t{\r\n\t   if(Const.isEmpty(wName.getText())) \r\n         {\r\n\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\r\n\t\t\tmb.setText(BaseMessages.getString(PKG, \"System.StepJobEntryNameMissing.Title\"));\r\n\t\t\tmb.setMessage(BaseMessages.getString(PKG, \"System.JobEntryNameMissing.Msg\"));\r\n\t\t\tmb.open(); \r\n\t\t\treturn;\r\n         }\r\n\t\tjobEntry.setName(wName.getText());\r\n\t\tjobEntry.setZipFilename(wZipFilename.getText());\r\n\t\tjobEntry.setWildcardSource(wWildcardSource.getText());\r\n\r\n\t\tjobEntry.setWildcard(wWildcard.getText());\r\n\t\tjobEntry.setWildcardExclude(wWildcardExclude.getText());\r\n\t\tjobEntry.setSourceDirectory(wTargetDirectory.getText());\r\n\r\n\t\tjobEntry.setMoveToDirectory(wMovetoDirectory.getText());\r\n\t\t\r\n\t\t\r\n\t\tjobEntry.afterunzip = wAfterUnZip.getSelectionIndex();\r\n\t\t\r\n\t\tjobEntry.setAddFileToResult(wAddFileToResult.getSelection());\r\n\t\t\r\n\t\tjobEntry.setDatafromprevious(wArgsPrevious.getSelection());\r\n\t\tjobEntry.setDateInFilename( wAddDate.getSelection() );\r\n\t\tjobEntry.setTimeInFilename( wAddTime.getSelection() );\r\n\t\tjobEntry.setSpecifyFormat(wSpecifyFormat.getSelection());\r\n\t\tjobEntry.setDateTimeFormat(wDateTimeFormat.getText());\r\n\t\t\r\n\t\tjobEntry.setCreateRootFolder(wRootZip.getSelection());\r\n\t\tjobEntry.setCreateFolder(wCreateFolder.getSelection());\r\n\t\tjobEntry.setLimit(wNrErrorsLessThan.getText());\r\n\t\t\r\n\t\tif(wSuccessCondition.getSelectionIndex()==1)\r\n\t\t\tjobEntry.setSuccessCondition(jobEntry.SUCCESS_IF_AT_LEAST_X_FILES_UN_ZIPPED);\r\n\t\telse if(wSuccessCondition.getSelectionIndex()==2)\r\n\t\t\tjobEntry.setSuccessCondition(jobEntry.SUCCESS_IF_ERRORS_LESS);\r\n\t\telse\r\n\t\t\tjobEntry.setSuccessCondition(jobEntry.SUCCESS_IF_NO_ERRORS);\t\r\n\t\t\r\n\t\tjobEntry.setIfFileExists(wIfFileExists.getSelectionIndex());\t\r\n\t\tjobEntry.setCreateMoveToDirectory(wcreateMoveToDirectory.getSelection());\r\n\t\tjobEntry.setAddOriginalTimestamp(wAddOriginalTimestamp.getSelection());\r\n\t\tjobEntry.setOriginalModificationDate(wSetModificationDateToOriginal.getSelection());\r\n\t\tdispose();\r\n\t}","commit_id":"d8de35990548b21aefaefc482ada2dfc0f265d2a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\r\n\t * Copy information from the meta-data input to the dialog fields.\r\n\t */\r\n\tpublic void getData()\r\n\t{\r\n\t\tif (jobEntry.getName()    != null) wName.setText( jobEntry.getName() );\r\n\t\twName.selectAll();\r\n\t\tif (jobEntry.getZipFilename()!= null) wZipFilename.setText( jobEntry.getZipFilename() );\r\n\t\tif (jobEntry.getWildcardSource()!= null) wWildcardSource.setText( jobEntry.getWildcardSource() );\r\n\r\n\t\tif (jobEntry.getWildcard()!= null) wWildcard.setText( jobEntry.getWildcard() );\r\n\t\tif (jobEntry.getWildcardExclude()!= null) wWildcardExclude.setText( jobEntry.getWildcardExclude() );\r\n\t\tif (jobEntry.getSourceDirectory()!= null) wTargetDirectory.setText( jobEntry.getSourceDirectory() );\r\n\t\tif (jobEntry.getMoveToDirectory()!= null) wMovetoDirectory.setText( jobEntry.getMoveToDirectory() );\r\n\r\n\t\tif (jobEntry.afterunzip>=0)\r\n\t\t{\r\n\t\t\twAfterUnZip.select(jobEntry.afterunzip );\r\n\t\t}\r\n\r\n\t\telse\r\n\t\t{\r\n\t\t\twAfterUnZip.select(0 ); // NOTHING\r\n\t\t}\r\n\t\t\r\n\t\twAddFileToResult.setSelection(jobEntry.isAddFileToResult());\r\n\t\twArgsPrevious.setSelection(jobEntry.getDatafromprevious());\r\n\t\twAddDate.setSelection(jobEntry.isDateInFilename());\r\n\t\twAddTime.setSelection(jobEntry.isTimeInFilename());\r\n\t\t\r\n\t\tif (jobEntry.getDateTimeFormat()!= null) wDateTimeFormat.setText( jobEntry.getDateTimeFormat() );\r\n\t\twSpecifyFormat.setSelection(jobEntry.isSpecifyFormat());\r\n\t\t\r\n\t\twRootZip.setSelection(jobEntry.isCreateRootFolder());\r\n\t\twCreateFolder.setSelection(jobEntry.isCreateFolder());\r\n\t\t\r\n    \tif (jobEntry.getLimit()!= null) \r\n\t\t\twNrErrorsLessThan.setText( jobEntry.getLimit());\r\n\t\telse\r\n\t\t\twNrErrorsLessThan.setText(\"10\");\r\n    \t\r\n\t\tif(jobEntry.getSuccessCondition()!=null)\r\n\t\t{\r\n\t\t\tif(jobEntry.getSuccessCondition().equals(jobEntry.SUCCESS_IF_AT_LEAST_X_FILES_UN_ZIPPED))\r\n\t\t\t\twSuccessCondition.select(1);\r\n\t\t\telse if(jobEntry.getSuccessCondition().equals(jobEntry.SUCCESS_IF_ERRORS_LESS))\r\n\t\t\t\twSuccessCondition.select(2);\r\n\t\t\telse\r\n\t\t\t\twSuccessCondition.select(0);\t\r\n\t\t}else wSuccessCondition.select(0);\r\n\t\t\r\n\t\twIfFileExists.select(jobEntry.getIfFileExist());\r\n\t\twcreateMoveToDirectory.setSelection(jobEntry.isCreateMoveToDirectory());\r\n\t}","id":15680,"modified_method":"/**\r\n\t * Copy information from the meta-data input to the dialog fields.\r\n\t */\r\n\tpublic void getData()\r\n\t{\r\n\t\tif (jobEntry.getName()    != null) wName.setText( jobEntry.getName() );\r\n\t\twName.selectAll();\r\n\t\tif (jobEntry.getZipFilename()!= null) wZipFilename.setText( jobEntry.getZipFilename() );\r\n\t\tif (jobEntry.getWildcardSource()!= null) wWildcardSource.setText( jobEntry.getWildcardSource() );\r\n\r\n\t\tif (jobEntry.getWildcard()!= null) wWildcard.setText( jobEntry.getWildcard() );\r\n\t\tif (jobEntry.getWildcardExclude()!= null) wWildcardExclude.setText( jobEntry.getWildcardExclude() );\r\n\t\tif (jobEntry.getSourceDirectory()!= null) wTargetDirectory.setText( jobEntry.getSourceDirectory() );\r\n\t\tif (jobEntry.getMoveToDirectory()!= null) wMovetoDirectory.setText( jobEntry.getMoveToDirectory() );\r\n\r\n\t\tif (jobEntry.afterunzip>=0)\r\n\t\t{\r\n\t\t\twAfterUnZip.select(jobEntry.afterunzip );\r\n\t\t}\r\n\r\n\t\telse\r\n\t\t{\r\n\t\t\twAfterUnZip.select(0 ); // NOTHING\r\n\t\t}\r\n\t\t\r\n\t\twAddFileToResult.setSelection(jobEntry.isAddFileToResult());\r\n\t\twArgsPrevious.setSelection(jobEntry.getDatafromprevious());\r\n\t\twAddDate.setSelection(jobEntry.isDateInFilename());\r\n\t\twAddTime.setSelection(jobEntry.isTimeInFilename());\r\n\t\t\r\n\t\tif (jobEntry.getDateTimeFormat()!= null) wDateTimeFormat.setText( jobEntry.getDateTimeFormat() );\r\n\t\twSpecifyFormat.setSelection(jobEntry.isSpecifyFormat());\r\n\t\t\r\n\t\twRootZip.setSelection(jobEntry.isCreateRootFolder());\r\n\t\twCreateFolder.setSelection(jobEntry.isCreateFolder());\r\n\t\t\r\n    \tif (jobEntry.getLimit()!= null) \r\n\t\t\twNrErrorsLessThan.setText( jobEntry.getLimit());\r\n\t\telse\r\n\t\t\twNrErrorsLessThan.setText(\"10\");\r\n    \t\r\n\t\tif(jobEntry.getSuccessCondition()!=null)\r\n\t\t{\r\n\t\t\tif(jobEntry.getSuccessCondition().equals(jobEntry.SUCCESS_IF_AT_LEAST_X_FILES_UN_ZIPPED))\r\n\t\t\t\twSuccessCondition.select(1);\r\n\t\t\telse if(jobEntry.getSuccessCondition().equals(jobEntry.SUCCESS_IF_ERRORS_LESS))\r\n\t\t\t\twSuccessCondition.select(2);\r\n\t\t\telse\r\n\t\t\t\twSuccessCondition.select(0);\t\r\n\t\t}else wSuccessCondition.select(0);\r\n\t\t\r\n\t\twAddOriginalTimestamp.setSelection(jobEntry.isOriginalTimestamp());\r\n\t\twSetModificationDateToOriginal.setSelection(jobEntry.isOriginalModificationDate());\r\n\t\twIfFileExists.select(jobEntry.getIfFileExist());\r\n\t\twcreateMoveToDirectory.setSelection(jobEntry.isCreateMoveToDirectory());\r\n\t}","commit_id":"d8de35990548b21aefaefc482ada2dfc0f265d2a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void setDateTimeFormat()\r\n\t{\r\n\t\tif(wSpecifyFormat.getSelection())\r\n\t\t{\r\n\t\t\twAddDate.setSelection(false);\t\r\n\t\t\twAddTime.setSelection(false);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\twDateTimeFormat.setEnabled(wSpecifyFormat.getSelection());\r\n\t\twlDateTimeFormat.setEnabled(wSpecifyFormat.getSelection());\r\n\t\twAddDate.setEnabled(!wSpecifyFormat.getSelection());\r\n\t\twlAddDate.setEnabled(!wSpecifyFormat.getSelection());\r\n\t\twAddTime.setEnabled(!wSpecifyFormat.getSelection());\r\n\t\twlAddTime.setEnabled(!wSpecifyFormat.getSelection());\r\n\t\t\r\n\t}","id":15681,"modified_method":"private void setDateTimeFormat()\r\n\t{\r\n\t\tif(wSpecifyFormat.getSelection())\r\n\t\t{\r\n\t\t\twAddDate.setSelection(false);\t\r\n\t\t\twAddTime.setSelection(false);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\twDateTimeFormat.setEnabled(wSpecifyFormat.getSelection());\r\n\t\twlDateTimeFormat.setEnabled(wSpecifyFormat.getSelection());\r\n\t\twAddDate.setEnabled(!wSpecifyFormat.getSelection());\r\n\t\twlAddDate.setEnabled(!wSpecifyFormat.getSelection());\r\n\t\twAddTime.setEnabled(!wSpecifyFormat.getSelection());\r\n\t\twlAddTime.setEnabled(!wSpecifyFormat.getSelection());\r\n\t\tsetDateTime();\r\n\t}","commit_id":"d8de35990548b21aefaefc482ada2dfc0f265d2a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public JobEntryInterface open()\r\n\t{\r\n\t\tShell parent = getParent();\r\n\t\tDisplay display = parent.getDisplay();\r\n\r\n        shell = new Shell(parent, props.getJobsDialogStyle());\r\n        props.setLook(shell);\r\n        JobDialog.setShellImage(shell, jobEntry);\r\n        \r\n\r\n\t\tModifyListener lsMod = new ModifyListener()\r\n\t\t{\r\n\t\t\tpublic void modifyText(ModifyEvent e)\r\n\t\t\t{\r\n\t\t\t\tjobEntry.setChanged();\r\n\t\t\t}\r\n\t\t};\r\n\t\tchanged = jobEntry.hasChanged();\r\n\r\n\t\tFormLayout formLayout = new FormLayout ();\r\n\t\tformLayout.marginWidth  = Const.FORM_MARGIN;\r\n\t\tformLayout.marginHeight = Const.FORM_MARGIN;\r\n\r\n\t\tshell.setLayout(formLayout);\r\n\t\tshell.setText(BaseMessages.getString(PKG, \"JobUnZip.Title\"));\r\n\r\n\t\tint middle = props.getMiddlePct();\r\n\t\tint margin = Const.MARGIN;\r\n\r\n\t\t// ZipFilename line\r\n\t\twlName=new Label(shell, SWT.RIGHT);\r\n\t\twlName.setText(BaseMessages.getString(PKG, \"JobUnZip.Name.Label\"));\r\n \t\tprops.setLook(wlName);\r\n\t\tfdlName=new FormData();\r\n\t\tfdlName.left = new FormAttachment(0, 0);\r\n\t\tfdlName.right= new FormAttachment(middle, -margin);\r\n\t\tfdlName.top  = new FormAttachment(0, margin);\r\n\t\twlName.setLayoutData(fdlName);\r\n\t\twName=new Text(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wName);\r\n\t\twName.addModifyListener(lsMod);\r\n\t\tfdName=new FormData();\r\n\t\tfdName.left = new FormAttachment(middle, 0);\r\n\t\tfdName.top  = new FormAttachment(0, margin);\r\n\t\tfdName.right= new FormAttachment(100, 0);\r\n\t\twName.setLayoutData(fdName);\r\n\t\t\r\n        wTabFolder = new CTabFolder(shell, SWT.BORDER);\r\n \t\tprops.setLook(wTabFolder, Props.WIDGET_STYLE_TAB);\r\n\t\t\r\n\t\t  //////////////////////////\r\n\t\t// START OF GENERAL TAB   ///\r\n\t\t//////////////////////////\r\n\r\n\t\twGeneralTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twGeneralTab.setText(BaseMessages.getString(PKG, \"JobUnZip.Tab.General.Label\"));\r\n\t\t\r\n\t\twGeneralComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wGeneralComp);\r\n\r\n\t\tFormLayout generalLayout = new FormLayout();\r\n\t\tgeneralLayout.marginWidth  = 3;\r\n\t\tgeneralLayout.marginHeight = 3;\r\n\t\twGeneralComp.setLayout(generalLayout);\r\n\t\t\r\n\t\t\r\n\t\t  // file source grouping?\r\n        // ////////////////////////\r\n        // START OF file source GROUP///\r\n        // /\r\n        wSource = new Group(wGeneralComp, SWT.SHADOW_NONE);\r\n        props.setLook(wSource);\r\n        wSource.setText(BaseMessages.getString(PKG, \"JobUnZip.Source.Group.Label\"));\r\n\r\n        FormLayout groupSourceLayout = new FormLayout();\r\n        groupSourceLayout.marginWidth = 10;\r\n        groupSourceLayout.marginHeight = 10;\r\n\r\n        wSource.setLayout(groupSourceLayout);\r\n        \r\n       //Args from previous\r\n\t\twlArgsPrevious = new Label(wSource, SWT.RIGHT);\r\n\t\twlArgsPrevious.setText(BaseMessages.getString(PKG, \"JobUnZip.ArgsPrevious.Label\"));\r\n\t\tprops.setLook(wlArgsPrevious);\r\n\t\tfdlArgsPrevious = new FormData();\r\n\t\tfdlArgsPrevious.left = new FormAttachment(0, 0);\r\n\t\tfdlArgsPrevious.top = new FormAttachment(0, margin);\r\n\t\tfdlArgsPrevious.right = new FormAttachment(middle, -margin);\r\n\t\twlArgsPrevious.setLayoutData(fdlArgsPrevious);\r\n\t\twArgsPrevious = new Button(wSource, SWT.CHECK);\r\n\t\tprops.setLook(wArgsPrevious);\r\n\t\twArgsPrevious.setToolTipText(BaseMessages.getString(PKG, \"JobUnZip.ArgsPrevious.Tooltip\"));\r\n\t\tfdArgsPrevious = new FormData();\r\n\t\tfdArgsPrevious.left = new FormAttachment(middle, 0);\r\n\t\tfdArgsPrevious.top = new FormAttachment(0, margin);\r\n\t\tfdArgsPrevious.right = new FormAttachment(100, 0);\r\n\t\twArgsPrevious.setLayoutData(fdArgsPrevious);\r\n\t\twArgsPrevious.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\tsetArgdPrevious();\r\n\t\t\t\tjobEntry.setChanged();\r\n\t\t\t}\r\n\t\t});\r\n        \r\n\t\t\r\n\t\t\r\n\t\t// ZipFilename line\r\n\t\twlZipFilename=new Label(wSource, SWT.RIGHT);\r\n\t\twlZipFilename.setText(BaseMessages.getString(PKG, \"JobUnZip.ZipFilename.Label\"));\r\n\t\tprops.setLook(wlZipFilename);\r\n\t\tfdlZipFilename=new FormData();\r\n\t\tfdlZipFilename.left = new FormAttachment(0, 0);\r\n\t\tfdlZipFilename.top  = new FormAttachment(wArgsPrevious, margin);\r\n\t\tfdlZipFilename.right= new FormAttachment(middle, -margin);\r\n\t\twlZipFilename.setLayoutData(fdlZipFilename);\r\n\t\t\r\n\t\t\r\n\t\t// Browse Source folders button ...\r\n\t\twbSourceDirectory=new Button(wSource, SWT.PUSH| SWT.CENTER);\r\n\t\tprops.setLook(wbSourceDirectory);\r\n\t\twbSourceDirectory.setText(BaseMessages.getString(PKG, \"JobUnZip.BrowseFolders.Label\"));\r\n\t\tfdbSourceDirectory=new FormData();\r\n\t\tfdbSourceDirectory.right= new FormAttachment(100, 0);\r\n\t\tfdbSourceDirectory.top  = new FormAttachment(wArgsPrevious, margin);\r\n\t\twbSourceDirectory.setLayoutData(fdbSourceDirectory);\r\n\t\t\r\n\t\twbSourceDirectory.addSelectionListener\r\n\t\t(\r\n\t\t\tnew SelectionAdapter()\r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t\t{\r\n\t\t\t\t\tDirectoryDialog ddialog = new DirectoryDialog(shell, SWT.OPEN);\r\n\t\t\t\t\tif (wZipFilename.getText()!=null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tddialog.setFilterPath(jobMeta.environmentSubstitute(wZipFilename.getText()) );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t // Calling open() will open and run the dialog.\r\n\t\t\t        // It will return the selected directory, or\r\n\t\t\t        // null if user cancels\r\n\t\t\t        String dir = ddialog.open();\r\n\t\t\t        if (dir != null) {\r\n\t\t\t          // Set the text box to the new selection\r\n\t\t\t        \twZipFilename.setText(dir);\r\n\t\t\t        }\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\t\r\n\t\t// Browse files...\r\n\t\twbZipFilename=new Button(wSource, SWT.PUSH| SWT.CENTER);\r\n\t\tprops.setLook(wbZipFilename);\r\n\t\twbZipFilename.setText(BaseMessages.getString(PKG, \"JobUnZip.BrowseFiles.Label\"));\r\n\t\tfdbZipFilename=new FormData();\r\n\t\tfdbZipFilename.right= new FormAttachment(wbSourceDirectory, -margin);\r\n\t\tfdbZipFilename.top  = new FormAttachment(wArgsPrevious, margin);\r\n\t\twbZipFilename.setLayoutData(fdbZipFilename);\r\n\t\t\r\n\t\twZipFilename=new TextVar(jobMeta, wSource, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n\t\tprops.setLook(wZipFilename);\r\n\t\twZipFilename.addModifyListener(lsMod);\r\n\t\tfdZipFilename=new FormData();\r\n\t\tfdZipFilename.left = new FormAttachment(middle, 0);\r\n\t\tfdZipFilename.top  = new FormAttachment(wArgsPrevious, margin);\r\n\r\n\t\tfdZipFilename.right= new FormAttachment(wbZipFilename, -margin);\r\n\t\twZipFilename.setLayoutData(fdZipFilename);\r\n\r\n\t\t// Whenever something changes, set the tooltip to the expanded version:\r\n\t\twZipFilename.addModifyListener(new ModifyListener()\r\n\t\t\t{\r\n\t\t\t\tpublic void modifyText(ModifyEvent e)\r\n\t\t\t\t{\r\n\t\t\t\t\twZipFilename.setToolTipText(jobMeta.environmentSubstitute( wZipFilename.getText() ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\twbZipFilename.addSelectionListener\r\n\t\t(\r\n\t\t\tnew SelectionAdapter()\r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t\t{\r\n\t\t\t\t\tFileDialog dialog = new FileDialog(shell, SWT.OPEN);\r\n\t\t\t\t\t//dialog.setFilterExtensions(new String[] {\"*\"});\r\n\t\t\t\t\tdialog.setFilterExtensions(new String[] {\"*.zip;*.ZIP\",\"*.jar;*.JAR\", \"*\"});\r\n\t\t\t\t\tif (wZipFilename.getText()!=null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdialog.setFileName(jobMeta.environmentSubstitute(wZipFilename.getText()) );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdialog.setFilterNames(FILETYPES);\r\n\t\t\t\t\tif (dialog.open()!=null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twZipFilename.setText(dialog.getFilterPath()+Const.FILE_SEPARATOR+dialog.getFileName());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\r\n\t\t// WildcardSource line\r\n\t\twlWildcardSource = new Label(wSource, SWT.RIGHT);\r\n\t\twlWildcardSource.setText(BaseMessages.getString(PKG, \"JobUnZip.WildcardSource.Label\"));\r\n\t\tprops.setLook(wlWildcardSource);\r\n\t\tfdlWildcardSource = new FormData();\r\n\t\tfdlWildcardSource.left = new FormAttachment(0, 0);\r\n\t\tfdlWildcardSource.top = new FormAttachment(wZipFilename, margin);\r\n\t\tfdlWildcardSource.right = new FormAttachment(middle, -margin);\r\n\t\twlWildcardSource.setLayoutData(fdlWildcardSource);\r\n\t\twWildcardSource = new TextVar(jobMeta, wSource, SWT.SINGLE | SWT.LEFT | SWT.BORDER, BaseMessages.getString(PKG, \"JobUnZip.WildcardSource.Tooltip\"));\r\n\t\tprops.setLook(wWildcardSource);\r\n\t\twWildcardSource.addModifyListener(lsMod);\r\n\t\tfdWildcardSource = new FormData();\r\n\t\tfdWildcardSource.left = new FormAttachment(middle, 0);\r\n\t\tfdWildcardSource.top = new FormAttachment(wZipFilename, margin);\r\n\t\tfdWildcardSource.right = new FormAttachment(100, 0);\r\n\t\twWildcardSource.setLayoutData(fdWildcardSource);\r\n\t\t\r\n        fdSource = new FormData();\r\n        fdSource.left = new FormAttachment(0, margin);\r\n        fdSource.top = new FormAttachment(wName, margin);\r\n        fdSource.right = new FormAttachment(100, -margin);\r\n        wSource.setLayoutData(fdSource);\r\n        // ///////////////////////////////////////////////////////////\r\n        // / END OF FILE SOURCE\r\n        // ///////////////////////////////////////////////////////////\r\n\r\n        \r\n\r\n\t      // ////////////////////////\r\n\t      // START OF UNZIPPED FILES GROUP///\r\n\t      // /\r\n\t      wUnzippedFiles = new Group(wGeneralComp, SWT.SHADOW_NONE);\r\n\t      props.setLook(wUnzippedFiles);\r\n\t      wUnzippedFiles.setText(BaseMessages.getString(PKG, \"JobUnZip.UnzippedFiles.Group.Label\"));\r\n\t\r\n\t      FormLayout groupLayoutUnzipped = new FormLayout();\r\n\t      groupLayoutUnzipped.marginWidth = 10;\r\n\t      groupLayoutUnzipped.marginHeight = 10;\r\n\t\r\n\t      wUnzippedFiles.setLayout(groupLayoutUnzipped);\r\n\t        \r\n        //  Use zipfile name as root directory\r\n\t\twlRootZip = new Label(wUnzippedFiles, SWT.RIGHT);\r\n\t\twlRootZip.setText(BaseMessages.getString(PKG, \"JobUnZip.RootZip.Label\"));\r\n\t\tprops.setLook(wlRootZip);\r\n\t\tfdlRootZip = new FormData();\r\n\t\tfdlRootZip.left = new FormAttachment(0, 0);\r\n\t\tfdlRootZip.top = new FormAttachment(wSource, margin);\r\n\t\tfdlRootZip.right = new FormAttachment(middle, -margin);\r\n\t\twlRootZip.setLayoutData(fdlRootZip);\r\n\t\twRootZip = new Button(wUnzippedFiles, SWT.CHECK);\r\n\t\tprops.setLook(wRootZip);\r\n\t\twRootZip.setToolTipText(BaseMessages.getString(PKG, \"JobUnZip.RootZip.Tooltip\"));\r\n\t\tfdRootZip = new FormData();\r\n\t\tfdRootZip.left = new FormAttachment(middle, 0);\r\n\t\tfdRootZip.top = new FormAttachment(wSource, margin);\r\n\t\tfdRootZip.right = new FormAttachment(100, 0);\r\n\t\twRootZip.setLayoutData(fdRootZip);\r\n\t\twRootZip.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\tjobEntry.setChanged();\r\n\t\t\t}\r\n\t\t});\r\n        \r\n\t\t\r\n\t\t\r\n\t\t// TargetDirectory line\r\n\t\twlTargetDirectory = new Label(wUnzippedFiles, SWT.RIGHT);\r\n\t\twlTargetDirectory.setText(BaseMessages.getString(PKG, \"JobUnZip.TargetDir.Label\"));\r\n\t\tprops.setLook(wlTargetDirectory);\r\n\t\tfdlTargetDirectory = new FormData();\r\n\t\tfdlTargetDirectory.left = new FormAttachment(0, 0);\r\n\t\tfdlTargetDirectory.top = new FormAttachment(wRootZip, margin);\r\n\t\tfdlTargetDirectory.right = new FormAttachment(middle, -margin);\r\n\t\twlTargetDirectory.setLayoutData(fdlTargetDirectory);\r\n\t\t\r\n        \r\n        // Browse folders button ...\r\n\t\twbTargetDirectory=new Button(wUnzippedFiles, SWT.PUSH| SWT.CENTER);\r\n\t\tprops.setLook(wbTargetDirectory);\r\n\t\twbTargetDirectory.setText(BaseMessages.getString(PKG, \"JobUnZip.BrowseFolders.Label\"));\r\n\t\tfdbTargetDirectory=new FormData();\r\n\t\tfdbTargetDirectory.right= new FormAttachment(100, 0);\r\n\t\tfdbTargetDirectory.top  = new FormAttachment(wRootZip, margin);\r\n\t\twbTargetDirectory.setLayoutData(fdbTargetDirectory);\r\n\t\t\r\n\t\twTargetDirectory = new TextVar(jobMeta, wUnzippedFiles, SWT.SINGLE | SWT.LEFT | SWT.BORDER, BaseMessages.getString(PKG, \"JobUnZip.TargetDir.Tooltip\"));\r\n\t\tprops.setLook(wTargetDirectory);\r\n\t\twTargetDirectory.addModifyListener(lsMod);\r\n\t\tfdTargetDirectory = new FormData();\r\n\t\tfdTargetDirectory.left = new FormAttachment(middle, 0);\r\n\t\tfdTargetDirectory.top = new FormAttachment(wRootZip, margin);\r\n\t\tfdTargetDirectory.right = new FormAttachment(wbTargetDirectory, -margin);\r\n\t\twTargetDirectory.setLayoutData(fdTargetDirectory);\r\n\t\t\r\n\t\t// Create Folder\r\n\t\twlCreateFolder=new Label(wUnzippedFiles, SWT.RIGHT);\r\n\t\twlCreateFolder.setText(BaseMessages.getString(PKG, \"JobUnZip.CreateFolder.Label\"));\r\n \t\tprops.setLook(wlCreateFolder);\r\n\t\tfdlCreateFolder=new FormData();\r\n\t\tfdlCreateFolder.left = new FormAttachment(0, 0);\r\n\t\tfdlCreateFolder.top  = new FormAttachment(wTargetDirectory, margin);\r\n\t\tfdlCreateFolder.right= new FormAttachment(middle, -margin);\r\n\t\twlCreateFolder.setLayoutData(fdlCreateFolder);\r\n\t\twCreateFolder=new Button(wUnzippedFiles, SWT.CHECK );\r\n\t\twCreateFolder.setToolTipText(BaseMessages.getString(PKG, \"JobUnZip.CreateFolder.Tooltip\"));\r\n \t\tprops.setLook(wCreateFolder);\r\n\t\tfdCreateFolder=new FormData();\r\n\t\tfdCreateFolder.left = new FormAttachment(middle, 0);\r\n\t\tfdCreateFolder.top  = new FormAttachment(wTargetDirectory, margin);\r\n\t\tfdCreateFolder.right= new FormAttachment(100, 0);\r\n\t\twCreateFolder.setLayoutData(fdCreateFolder);\r\n\t\twCreateFolder.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tjobEntry.setChanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\t\r\n\t\t// Wildcard line\r\n\t\twlWildcard = new Label(wUnzippedFiles, SWT.RIGHT);\r\n\t\twlWildcard.setText(BaseMessages.getString(PKG, \"JobUnZip.Wildcard.Label\"));\r\n\t\tprops.setLook(wlWildcard);\r\n\t\tfdlWildcard = new FormData();\r\n\t\tfdlWildcard.left = new FormAttachment(0, 0);\r\n\t\tfdlWildcard.top = new FormAttachment(wCreateFolder, margin);\r\n\t\tfdlWildcard.right = new FormAttachment(middle, -margin);\r\n\t\twlWildcard.setLayoutData(fdlWildcard);\r\n\t\twWildcard = new TextVar(jobMeta, wUnzippedFiles, SWT.SINGLE | SWT.LEFT | SWT.BORDER, BaseMessages.getString(PKG, \"JobUnZip.Wildcard.Tooltip\"));\r\n\t\tprops.setLook(wWildcard);\r\n\t\twWildcard.addModifyListener(lsMod);\r\n\t\tfdWildcard = new FormData();\r\n\t\tfdWildcard.left = new FormAttachment(middle, 0);\r\n\t\tfdWildcard.top = new FormAttachment(wCreateFolder, margin);\r\n\t\tfdWildcard.right = new FormAttachment(100, 0);\r\n\t\twWildcard.setLayoutData(fdWildcard);\r\n\t\t\r\n\t\t// Wildcard to exclude\r\n\t\twlWildcardExclude = new Label(wUnzippedFiles, SWT.RIGHT);\r\n\t\twlWildcardExclude.setText(BaseMessages.getString(PKG, \"JobUnZip.WildcardExclude.Label\"));\r\n\t\tprops.setLook(wlWildcardExclude);\r\n\t\tfdlWildcardExclude = new FormData();\r\n\t\tfdlWildcardExclude.left = new FormAttachment(0, 0);\r\n\t\tfdlWildcardExclude.top = new FormAttachment(wWildcard, margin);\r\n\t\tfdlWildcardExclude.right = new FormAttachment(middle, -margin);\r\n\t\twlWildcardExclude.setLayoutData(fdlWildcardExclude);\r\n\t\twWildcardExclude = new TextVar(jobMeta, wUnzippedFiles, SWT.SINGLE | SWT.LEFT | SWT.BORDER, BaseMessages.getString(PKG, \"JobUnZip.WildcardExclude.Tooltip\"));\r\n\t\tprops.setLook(wWildcardExclude);\r\n\t\twWildcardExclude.addModifyListener(lsMod);\r\n\t\tfdWildcardExclude = new FormData();\r\n\t\tfdWildcardExclude.left = new FormAttachment(middle, 0);\r\n\t\tfdWildcardExclude.top = new FormAttachment(wWildcard, margin);\r\n\t\tfdWildcardExclude.right = new FormAttachment(100, 0);\r\n\t\twWildcardExclude.setLayoutData(fdWildcardExclude);\r\n\t\t\r\n\t\t// Create multi-part file?\r\n\t\twlAddDate=new Label(wUnzippedFiles, SWT.RIGHT);\r\n\t\twlAddDate.setText(BaseMessages.getString(PKG, \"JobUnZip.AddDate.Label\"));\r\n \t\tprops.setLook(wlAddDate);\r\n\t\tfdlAddDate=new FormData();\r\n\t\tfdlAddDate.left = new FormAttachment(0, 0);\r\n\t\tfdlAddDate.top  = new FormAttachment(wWildcardExclude, margin);\r\n\t\tfdlAddDate.right= new FormAttachment(middle, -margin);\r\n\t\twlAddDate.setLayoutData(fdlAddDate);\r\n\t\twAddDate=new Button(wUnzippedFiles, SWT.CHECK);\r\n \t\tprops.setLook(wAddDate);\r\n \t\twAddDate.setToolTipText(BaseMessages.getString(PKG, \"JobUnZip.AddDate.Tooltip\"));\r\n\t\tfdAddDate=new FormData();\r\n\t\tfdAddDate.left = new FormAttachment(middle, 0);\r\n\t\tfdAddDate.top  = new FormAttachment(wWildcardExclude, margin);\r\n\t\tfdAddDate.right= new FormAttachment(100, 0);\r\n\t\twAddDate.setLayoutData(fdAddDate);\r\n\t\twAddDate.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tjobEntry.setChanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\t// Create multi-part file?\r\n\t\twlAddTime=new Label(wUnzippedFiles, SWT.RIGHT);\r\n\t\twlAddTime.setText(BaseMessages.getString(PKG, \"JobUnZip.AddTime.Label\"));\r\n \t\tprops.setLook(wlAddTime);\r\n\t\tfdlAddTime=new FormData();\r\n\t\tfdlAddTime.left = new FormAttachment(0, 0);\r\n\t\tfdlAddTime.top  = new FormAttachment(wAddDate, margin);\r\n\t\tfdlAddTime.right= new FormAttachment(middle, -margin);\r\n\t\twlAddTime.setLayoutData(fdlAddTime);\r\n\t\twAddTime=new Button(wUnzippedFiles, SWT.CHECK);\r\n \t\tprops.setLook(wAddTime);\r\n \t\twAddTime.setToolTipText(BaseMessages.getString(PKG, \"JobUnZip.AddTime.Tooltip\"));\r\n\t\tfdAddTime=new FormData();\r\n\t\tfdAddTime.left = new FormAttachment(middle, 0);\r\n\t\tfdAddTime.top  = new FormAttachment(wAddDate, margin);\r\n\t\tfdAddTime.right= new FormAttachment(100, 0);\r\n\t\twAddTime.setLayoutData(fdAddTime);\r\n\t\twAddTime.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tjobEntry.setChanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\t\r\n\t\t// Specify date time format?\r\n\t\twlSpecifyFormat=new Label(wUnzippedFiles, SWT.RIGHT);\r\n\t\twlSpecifyFormat.setText(BaseMessages.getString(PKG, \"JobUnZip.SpecifyFormat.Label\"));\r\n\t\tprops.setLook(wlSpecifyFormat);\r\n\t\tfdlSpecifyFormat=new FormData();\r\n\t\tfdlSpecifyFormat.left = new FormAttachment(0, 0);\r\n\t\tfdlSpecifyFormat.top  = new FormAttachment(wAddTime, margin);\r\n\t\tfdlSpecifyFormat.right= new FormAttachment(middle, -margin);\r\n\t\twlSpecifyFormat.setLayoutData(fdlSpecifyFormat);\r\n\t\twSpecifyFormat=new Button(wUnzippedFiles, SWT.CHECK);\r\n\t\tprops.setLook(wSpecifyFormat);\r\n\t\twSpecifyFormat.setToolTipText(BaseMessages.getString(PKG, \"JobUnZip.SpecifyFormat.Tooltip\"));\r\n\t    fdSpecifyFormat=new FormData();\r\n\t\tfdSpecifyFormat.left = new FormAttachment(middle, 0);\r\n\t\tfdSpecifyFormat.top  = new FormAttachment(wAddTime, margin);\r\n\t\tfdSpecifyFormat.right= new FormAttachment(100, 0);\r\n\t\twSpecifyFormat.setLayoutData(fdSpecifyFormat);\r\n\t\twSpecifyFormat.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tjobEntry.setChanged();\r\n\t\t\t\t\tsetDateTimeFormat();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\t\r\n\t\t//\tPrepare a list of possible DateTimeFormats...\r\n\t\tString dats[] = Const.getDateFormats();\r\n\t\t\r\n \t\t// DateTimeFormat\r\n\t\twlDateTimeFormat=new Label(wUnzippedFiles, SWT.RIGHT);\r\n        wlDateTimeFormat.setText(BaseMessages.getString(PKG, \"JobUnZip.DateTimeFormat.Label\"));\r\n        props.setLook(wlDateTimeFormat);\r\n        fdlDateTimeFormat=new FormData();\r\n        fdlDateTimeFormat.left = new FormAttachment(0, 0);\r\n        fdlDateTimeFormat.top  = new FormAttachment(wSpecifyFormat, margin);\r\n        fdlDateTimeFormat.right= new FormAttachment(middle, -margin);\r\n        wlDateTimeFormat.setLayoutData(fdlDateTimeFormat);\r\n        wDateTimeFormat=new CCombo(wUnzippedFiles, SWT.BORDER | SWT.READ_ONLY);\r\n        wDateTimeFormat.setEditable(true);\r\n        props.setLook(wDateTimeFormat);\r\n        wDateTimeFormat.addModifyListener(lsMod);\r\n        fdDateTimeFormat=new FormData();\r\n        fdDateTimeFormat.left = new FormAttachment(middle, 0);\r\n        fdDateTimeFormat.top  = new FormAttachment(wSpecifyFormat, margin);\r\n        fdDateTimeFormat.right= new FormAttachment(100, 0);\r\n        wDateTimeFormat.setLayoutData(fdDateTimeFormat);\r\n        for (int x=0;x<dats.length;x++) wDateTimeFormat.add(dats[x]);\r\n        \r\n\t\t\r\n\t\t // If File Exists\r\n\t\twlIfFileExists = new Label(wUnzippedFiles, SWT.RIGHT);\r\n\t\twlIfFileExists.setText(BaseMessages.getString(PKG, \"JobUnZip.IfFileExists.Label\"));\r\n\t\tprops.setLook(wlIfFileExists);\r\n\t\tfdlIfFileExists = new FormData();\r\n\t\tfdlIfFileExists.left = new FormAttachment(0, 0);\r\n\t\tfdlIfFileExists.right = new FormAttachment(middle, -margin);\r\n\t\tfdlIfFileExists.top = new FormAttachment(wDateTimeFormat, margin);\r\n\t\twlIfFileExists.setLayoutData(fdlIfFileExists);\r\n\t\twIfFileExists = new CCombo(wUnzippedFiles, SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);\r\n\t\twIfFileExists.setItems(JobEntryUnZip.typeIfFileExistsDesc);\r\n\t\twIfFileExists.select(0); // +1: starts at -1\r\n\t\tprops.setLook(wIfFileExists);\r\n\r\n\t\tfdIfFileExists = new FormData();\r\n\t\tfdIfFileExists.left = new FormAttachment(middle, 0);\r\n\t\tfdIfFileExists.top = new FormAttachment(wDateTimeFormat, margin);\r\n\t\tfdIfFileExists.right = new FormAttachment(100, 0);\r\n\t\twIfFileExists.setLayoutData(fdIfFileExists);\r\n\t\t\r\n\t\twIfFileExists.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\r\n\t\t//After Zipping\r\n\t\twlAfterUnZip = new Label(wUnzippedFiles, SWT.RIGHT);\r\n\t\twlAfterUnZip.setText(BaseMessages.getString(PKG, \"JobUnZip.AfterUnZip.Label\"));\r\n\t\tprops.setLook(wlAfterUnZip);\r\n\t\tfdlAfterUnZip = new FormData();\r\n\t\tfdlAfterUnZip.left = new FormAttachment(0, 0);\r\n\t\tfdlAfterUnZip.right = new FormAttachment(middle, 0);\r\n\t\tfdlAfterUnZip.top = new FormAttachment(wIfFileExists, margin);\r\n\t\twlAfterUnZip.setLayoutData(fdlAfterUnZip);\r\n\t\twAfterUnZip = new CCombo(wUnzippedFiles, SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);\r\n\t\twAfterUnZip.add(BaseMessages.getString(PKG, \"JobUnZip.Do_Nothing_AfterUnZip.Label\"));\r\n\t\twAfterUnZip.add(BaseMessages.getString(PKG, \"JobUnZip.Delete_Files_AfterUnZip.Label\"));\r\n\t\twAfterUnZip.add(BaseMessages.getString(PKG, \"JobUnZip.Move_Files_AfterUnZip.Label\"));\r\n\r\n\t\twAfterUnZip.select(0); // +1: starts at -1\r\n\r\n\t\tprops.setLook(wAfterUnZip);\r\n\t\tfdAfterUnZip= new FormData();\r\n\t\tfdAfterUnZip.left = new FormAttachment(middle, 0);\r\n\t\tfdAfterUnZip.top = new FormAttachment(wIfFileExists, margin);\r\n\t\tfdAfterUnZip.right = new FormAttachment(100, 0);\r\n\t\twAfterUnZip.setLayoutData(fdAfterUnZip);\r\n\r\n\r\n\t\twAfterUnZip.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\tAfterUnZipActivate();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// moveTo Directory\r\n\t\twlMovetoDirectory = new Label(wUnzippedFiles, SWT.RIGHT);\r\n\t\twlMovetoDirectory.setText(BaseMessages.getString(PKG, \"JobUnZip.MovetoDirectory.Label\"));\r\n\t\tprops.setLook(wlMovetoDirectory);\r\n\t\tfdlMovetoDirectory = new FormData();\r\n\t\tfdlMovetoDirectory.left = new FormAttachment(0, 0);\r\n\t\tfdlMovetoDirectory.top = new FormAttachment(wAfterUnZip, margin);\r\n\t\tfdlMovetoDirectory.right = new FormAttachment(middle, -margin);\r\n\t\twlMovetoDirectory.setLayoutData(fdlMovetoDirectory);\r\n\t\twMovetoDirectory = new TextVar(jobMeta, wUnzippedFiles, SWT.SINGLE | SWT.LEFT | SWT.BORDER, BaseMessages.getString(PKG, \"JobUnZip.MovetoDirectory.Tooltip\"));\r\n\t\tprops.setLook(wMovetoDirectory);\r\n\t\t\r\n\t    // Browse folders button ...\r\n\t\twbMovetoDirectory=new Button(wUnzippedFiles, SWT.PUSH| SWT.CENTER);\r\n\t\tprops.setLook(wbMovetoDirectory);\r\n\t\twbMovetoDirectory.setText(BaseMessages.getString(PKG, \"JobUnZip.BrowseFolders.Label\"));\r\n\t\tfdbMovetoDirectory=new FormData();\r\n\t\tfdbMovetoDirectory.right= new FormAttachment(100, 0);\r\n\t\tfdbMovetoDirectory.top  = new FormAttachment(wAfterUnZip, margin);\r\n\t\twbMovetoDirectory.setLayoutData(fdbMovetoDirectory);\r\n\t\t\r\n\t\twMovetoDirectory.addModifyListener(lsMod);\r\n\t\tfdMovetoDirectory = new FormData();\r\n\t\tfdMovetoDirectory.left = new FormAttachment(middle, 0);\r\n\t\tfdMovetoDirectory.top = new FormAttachment(wAfterUnZip, margin);\r\n\t\tfdMovetoDirectory.right = new FormAttachment(wbMovetoDirectory, -margin);\r\n\t\twMovetoDirectory.setLayoutData(fdMovetoDirectory);\r\n\t\t\r\n\t\t\r\n\t\t//create move to folder\r\n\t\twlcreateMoveToDirectory = new Label(wUnzippedFiles, SWT.RIGHT);\r\n\t\twlcreateMoveToDirectory.setText(BaseMessages.getString(PKG, \"JobUnZip.createMoveToFolder.Label\"));\r\n\t\tprops.setLook(wlcreateMoveToDirectory);\r\n\t\tfdlcreateMoveToDirectory = new FormData();\r\n\t\tfdlcreateMoveToDirectory.left = new FormAttachment(0, 0);\r\n\t\tfdlcreateMoveToDirectory.top = new FormAttachment(wMovetoDirectory, margin);\r\n\t\tfdlcreateMoveToDirectory.right = new FormAttachment(middle, -margin);\r\n\t\twlcreateMoveToDirectory.setLayoutData(fdlcreateMoveToDirectory);\r\n\t\twcreateMoveToDirectory = new Button(wUnzippedFiles, SWT.CHECK);\r\n\t\tprops.setLook(wcreateMoveToDirectory);\r\n\t\twcreateMoveToDirectory.setToolTipText(BaseMessages.getString(PKG, \"JobUnZip.createMoveToFolder.Tooltip\"));\r\n\t\tfdcreateMoveToDirectory = new FormData();\r\n\t\tfdcreateMoveToDirectory.left = new FormAttachment(middle, 0);\r\n\t\tfdcreateMoveToDirectory.top = new FormAttachment(wMovetoDirectory, margin);\r\n\t\tfdcreateMoveToDirectory.right = new FormAttachment(100, 0);\r\n\t\twcreateMoveToDirectory.setLayoutData(fdcreateMoveToDirectory);\r\n\t\twcreateMoveToDirectory.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\tjobEntry.setChanged();\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\tfdUnzippedFiles = new FormData();\r\n        fdUnzippedFiles.left = new FormAttachment(0, margin);\r\n        fdUnzippedFiles.top = new FormAttachment(wSource, margin);\r\n        fdUnzippedFiles.right = new FormAttachment(100, -margin);\r\n        wUnzippedFiles.setLayoutData(fdUnzippedFiles);\r\n        // ///////////////////////////////////////////////////////////\r\n        // / END OF UNZIPPED FILES\r\n        // ///////////////////////////////////////////////////////////     \r\n\t\t\r\n\t\tfdGeneralComp=new FormData();\r\n\t\tfdGeneralComp.left  = new FormAttachment(0, 0);\r\n\t\tfdGeneralComp.top   = new FormAttachment(0, 0);\r\n\t\tfdGeneralComp.right = new FormAttachment(100, 0);\r\n\t\tfdGeneralComp.bottom= new FormAttachment(500, -margin);\r\n\t\twGeneralComp.setLayoutData(fdGeneralComp);\r\n\t\t\r\n\t\twGeneralComp.layout();\r\n\t\twGeneralTab.setControl(wGeneralComp);\r\n \t\tprops.setLook(wGeneralComp);\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF GENERAL TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n        \r\n        //////////////////////////\r\n\t\t// START OF ADVANCED TAB   ///\r\n\t\t//////////////////////////\r\n\t\t\r\n\t\twAdvancedTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twAdvancedTab.setText(BaseMessages.getString(PKG, \"JobUnZip.Tab.Advanced.Label\"));\r\n\t\t\r\n\t\twAdvancedComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wAdvancedComp);\r\n\r\n\t\tFormLayout advancedLayout = new FormLayout();\r\n\t\tadvancedLayout.marginWidth  = 3;\r\n\t\tadvancedLayout.marginHeight = 3;\r\n\t\twAdvancedComp.setLayout(advancedLayout);\r\n\t\t\r\n\t\t  // file result grouping?\r\n        // ////////////////////////\r\n        // START OF LOGGING GROUP///\r\n        // /\r\n        wFileResult = new Group(wAdvancedComp, SWT.SHADOW_NONE);\r\n        props.setLook(wFileResult);\r\n        wFileResult.setText(BaseMessages.getString(PKG, \"JobUnZip.FileResult.Group.Label\"));\r\n\r\n        FormLayout groupLayout = new FormLayout();\r\n        groupLayout.marginWidth = 10;\r\n        groupLayout.marginHeight = 10;\r\n\r\n        wFileResult.setLayout(groupLayout);\r\n        \r\n        \r\n    \t//Add file to result\r\n\t\twlAddFileToResult = new Label(wFileResult, SWT.RIGHT);\r\n\t\twlAddFileToResult.setText(BaseMessages.getString(PKG, \"JobUnZip.AddFileToResult.Label\"));\r\n\t\tprops.setLook(wlAddFileToResult);\r\n\t\tfdlAddFileToResult = new FormData();\r\n\t\tfdlAddFileToResult.left = new FormAttachment(0, 0);\r\n\t\tfdlAddFileToResult.top = new FormAttachment(wSource, margin);\r\n\t\tfdlAddFileToResult.right = new FormAttachment(middle, -margin);\r\n\t\twlAddFileToResult.setLayoutData(fdlAddFileToResult);\r\n\t\twAddFileToResult = new Button(wFileResult, SWT.CHECK);\r\n\t\tprops.setLook(wAddFileToResult);\r\n\t\twAddFileToResult.setToolTipText(BaseMessages.getString(PKG, \"JobUnZip.AddFileToResult.Tooltip\"));\r\n\t\tfdAddFileToResult = new FormData();\r\n\t\tfdAddFileToResult.left = new FormAttachment(middle, 0);\r\n\t\tfdAddFileToResult.top = new FormAttachment(wSource, margin);\r\n\t\tfdAddFileToResult.right = new FormAttachment(100, 0);\r\n\t\twAddFileToResult.setLayoutData(fdAddFileToResult);\r\n\t\twAddFileToResult.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\tjobEntry.setChanged();\r\n\t\t\t}\r\n\t\t});\r\n        \r\n\t\t\r\n        fdFileResult = new FormData();\r\n        fdFileResult.left = new FormAttachment(0, margin);\r\n        fdFileResult.top = new FormAttachment(wUnzippedFiles, margin);\r\n        fdFileResult.right = new FormAttachment(100, -margin);\r\n        wFileResult.setLayoutData(fdFileResult);\r\n        // ///////////////////////////////////////////////////////////\r\n        // / END OF FILE RESULT\r\n        // ///////////////////////////////////////////////////////////\r\n\r\n        \r\n        // SuccessOngrouping?\r\n\t     // ////////////////////////\r\n\t     // START OF SUCCESS ON GROUP///\r\n\t     // /\r\n\t    wSuccessOn= new Group(wAdvancedComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wSuccessOn);\r\n\t    wSuccessOn.setText(BaseMessages.getString(PKG, \"JobUnZip.SuccessOn.Group.Label\"));\r\n\r\n\t    FormLayout successongroupLayout = new FormLayout();\r\n\t    successongroupLayout.marginWidth = 10;\r\n\t    successongroupLayout.marginHeight = 10;\r\n\r\n\t    wSuccessOn.setLayout(successongroupLayout);\r\n\t    \r\n\r\n\t    //Success Condition\r\n\t  \twlSuccessCondition = new Label(wSuccessOn, SWT.RIGHT);\r\n\t  \twlSuccessCondition.setText(BaseMessages.getString(PKG, \"JobUnZip.SuccessCondition.Label\") + \" \");\r\n\t  \tprops.setLook(wlSuccessCondition);\r\n\t  \tfdlSuccessCondition = new FormData();\r\n\t  \tfdlSuccessCondition.left = new FormAttachment(0, 0);\r\n\t  \tfdlSuccessCondition.right = new FormAttachment(middle, 0);\r\n\t  \tfdlSuccessCondition.top = new FormAttachment(wFileResult, margin);\r\n\t  \twlSuccessCondition.setLayoutData(fdlSuccessCondition);\r\n\t  \twSuccessCondition = new CCombo(wSuccessOn, SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);\r\n\t  \twSuccessCondition.add(BaseMessages.getString(PKG, \"JobUnZip.SuccessWhenAllWorksFine.Label\"));\r\n\t  \twSuccessCondition.add(BaseMessages.getString(PKG, \"JobUnZip.SuccessWhenAtLeat.Label\"));\r\n\t  \twSuccessCondition.add(BaseMessages.getString(PKG, \"JobUnZip.SuccessWhenNrErrorsLessThan.Label\"));\r\n\t  \twSuccessCondition.select(0); // +1: starts at -1\r\n\t  \t\r\n\t\tprops.setLook(wSuccessCondition);\r\n\t\tfdSuccessCondition= new FormData();\r\n\t\tfdSuccessCondition.left = new FormAttachment(middle, 0);\r\n\t\tfdSuccessCondition.top = new FormAttachment(wFileResult, margin);\r\n\t\tfdSuccessCondition.right = new FormAttachment(100, 0);\r\n\t\twSuccessCondition.setLayoutData(fdSuccessCondition);\r\n\t\twSuccessCondition.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\tactiveSuccessCondition();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Success when number of errors less than\r\n\t\twlNrErrorsLessThan= new Label(wSuccessOn, SWT.RIGHT);\r\n\t\twlNrErrorsLessThan.setText(BaseMessages.getString(PKG, \"JobUnZip.NrBadFormedLessThan.Label\") + \" \");\r\n\t\tprops.setLook(wlNrErrorsLessThan);\r\n\t\tfdlNrErrorsLessThan= new FormData();\r\n\t\tfdlNrErrorsLessThan.left = new FormAttachment(0, 0);\r\n\t\tfdlNrErrorsLessThan.top = new FormAttachment(wSuccessCondition, margin);\r\n\t\tfdlNrErrorsLessThan.right = new FormAttachment(middle, -margin);\r\n\t\twlNrErrorsLessThan.setLayoutData(fdlNrErrorsLessThan);\r\n\t\t\r\n\t\t\r\n\t\twNrErrorsLessThan= new TextVar(jobMeta,wSuccessOn, SWT.SINGLE | SWT.LEFT | SWT.BORDER, \r\n\t\t\t\tBaseMessages.getString(PKG, \"JobUnZip.NrBadFormedLessThan.Tooltip\"));\r\n\t\tprops.setLook(wNrErrorsLessThan);\r\n\t\twNrErrorsLessThan.addModifyListener(lsMod);\r\n\t\tfdNrErrorsLessThan= new FormData();\r\n\t\tfdNrErrorsLessThan.left = new FormAttachment(middle, 0);\r\n\t\tfdNrErrorsLessThan.top = new FormAttachment(wSuccessCondition, margin);\r\n\t\tfdNrErrorsLessThan.right = new FormAttachment(100, -margin);\r\n\t\twNrErrorsLessThan.setLayoutData(fdNrErrorsLessThan);\r\n\t\t\r\n\t\r\n\t    fdSuccessOn= new FormData();\r\n\t    fdSuccessOn.left = new FormAttachment(0, margin);\r\n\t    fdSuccessOn.top = new FormAttachment(wFileResult, margin);\r\n\t    fdSuccessOn.right = new FormAttachment(100, -margin);\r\n\t    wSuccessOn.setLayoutData(fdSuccessOn);\r\n\t     // ///////////////////////////////////////////////////////////\r\n\t     // / END OF Success ON GROUP\r\n\t     // ///////////////////////////////////////////////////////////\r\n\r\n\t\tfdAdvancedComp=new FormData();\r\n\t\tfdAdvancedComp.left  = new FormAttachment(0, 0);\r\n\t\tfdAdvancedComp.top   = new FormAttachment(0, 0);\r\n\t\tfdAdvancedComp.right = new FormAttachment(100, 0);\r\n\t\tfdAdvancedComp.bottom= new FormAttachment(500, -margin);\r\n\t\twAdvancedComp.setLayoutData(fdAdvancedComp);\r\n\t\t\r\n\t\twAdvancedComp.layout();\r\n\t\twAdvancedTab.setControl(wAdvancedComp);\r\n \t\tprops.setLook(wAdvancedComp);\r\n \t\t \t\t\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF Advanced TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\r\n\t\tfdTabFolder = new FormData();\r\n\t\tfdTabFolder.left  = new FormAttachment(0, 0);\r\n\t\tfdTabFolder.top   = new FormAttachment(wName, margin);\r\n\t\tfdTabFolder.right = new FormAttachment(100, 0);\r\n\t\tfdTabFolder.bottom= new FormAttachment(100, -50);\r\n\t\twTabFolder.setLayoutData(fdTabFolder);\r\n\r\n        \r\n        wOK = new Button(shell, SWT.PUSH);\r\n        wOK.setText(BaseMessages.getString(PKG, \"System.Button.OK\"));\r\n        wCancel = new Button(shell, SWT.PUSH);\r\n        wCancel.setText(BaseMessages.getString(PKG, \"System.Button.Cancel\"));\r\n        \r\n        BaseStepDialog.positionBottomButtons(shell, new Button[] { wOK, wCancel }, margin, wTabFolder);\r\n\r\n\t\t// Add listeners\r\n\t\tlsCancel   = new Listener() { public void handleEvent(Event e) { cancel(); } };\r\n\t\tlsOK       = new Listener() { public void handleEvent(Event e) { ok();     } };\r\n\r\n\t\twCancel.addListener(SWT.Selection, lsCancel);\r\n\t\twOK.addListener    (SWT.Selection, lsOK    );\r\n\r\n\t\tlsDef=new SelectionAdapter() { public void widgetDefaultSelected(SelectionEvent e) { ok(); } };\r\n\r\n\t\t\r\n\t\twbTargetDirectory.addSelectionListener\r\n\t\t\t(\r\n\t\t\t\tnew SelectionAdapter()\r\n\t\t\t\t{\r\n\t\t\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tDirectoryDialog ddialog = new DirectoryDialog(shell, SWT.OPEN);\r\n\t\t\t\t\t\tif (wTargetDirectory.getText()!=null)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tddialog.setFilterPath(jobMeta.environmentSubstitute(wTargetDirectory.getText()) );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t // Calling open() will open and run the dialog.\r\n\t\t\t\t        // It will return the selected directory, or\r\n\t\t\t\t        // null if user cancels\r\n\t\t\t\t        String dir = ddialog.open();\r\n\t\t\t\t        if (dir != null) {\r\n\t\t\t\t          // Set the text box to the new selection\r\n\t\t\t\t        \twTargetDirectory.setText(dir);\r\n\t\t\t\t        }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\t\r\n\t\t\r\n\t\twbMovetoDirectory.addSelectionListener\r\n\t\t(\r\n\t\t\tnew SelectionAdapter()\r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t\t{\r\n\t\t\t\t\tDirectoryDialog ddialog = new DirectoryDialog(shell, SWT.OPEN);\r\n\t\t\t\t\tif (wMovetoDirectory.getText()!=null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tddialog.setFilterPath(jobMeta.environmentSubstitute(wMovetoDirectory.getText()) );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t // Calling open() will open and run the dialog.\r\n\t\t\t        // It will return the selected directory, or\r\n\t\t\t        // null if user cancels\r\n\t\t\t        String dir = ddialog.open();\r\n\t\t\t        if (dir != null) {\r\n\t\t\t          // Set the text box to the new selection\r\n\t\t\t        \twMovetoDirectory.setText(dir);\r\n\t\t\t        }\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\t\r\n\t\twName.addSelectionListener( lsDef );\r\n\t\twZipFilename.addSelectionListener( lsDef );\r\n\r\n\t\t// Detect X or ALT-F4 or something that kills this window...\r\n\t\tshell.addShellListener(\tnew ShellAdapter() { public void shellClosed(ShellEvent e) { cancel(); } } );\r\n\r\n\t\tgetData();\r\n\t\tsetArgdPrevious();\r\n\t\tAfterUnZipActivate();\r\n\t\tsetDateTimeFormat();\r\n\t\tactiveSuccessCondition();\r\n        wTabFolder.setSelection(0);\r\n\t\tBaseStepDialog.setSize(shell);\r\n\r\n\t\tshell.open();\r\n\t\twhile (!shell.isDisposed())\r\n\t\t{\r\n\t\t\t\tif (!display.readAndDispatch()) display.sleep();\r\n\t\t}\r\n\t\treturn jobEntry;\r\n\t}","id":15682,"modified_method":"public JobEntryInterface open()\r\n\t{\r\n\t\tShell parent = getParent();\r\n\t\tDisplay display = parent.getDisplay();\r\n\r\n        shell = new Shell(parent, props.getJobsDialogStyle());\r\n        props.setLook(shell);\r\n        JobDialog.setShellImage(shell, jobEntry);\r\n        \r\n\r\n\t\tModifyListener lsMod = new ModifyListener()\r\n\t\t{\r\n\t\t\tpublic void modifyText(ModifyEvent e)\r\n\t\t\t{\r\n\t\t\t\tjobEntry.setChanged();\r\n\t\t\t}\r\n\t\t};\r\n\t\tchanged = jobEntry.hasChanged();\r\n\r\n\t\tFormLayout formLayout = new FormLayout ();\r\n\t\tformLayout.marginWidth  = Const.FORM_MARGIN;\r\n\t\tformLayout.marginHeight = Const.FORM_MARGIN;\r\n\r\n\t\tshell.setLayout(formLayout);\r\n\t\tshell.setText(BaseMessages.getString(PKG, \"JobUnZip.Title\"));\r\n\r\n\t\tint middle = props.getMiddlePct();\r\n\t\tint margin = Const.MARGIN;\r\n\r\n\t\t// ZipFilename line\r\n\t\twlName=new Label(shell, SWT.RIGHT);\r\n\t\twlName.setText(BaseMessages.getString(PKG, \"JobUnZip.Name.Label\"));\r\n \t\tprops.setLook(wlName);\r\n\t\tfdlName=new FormData();\r\n\t\tfdlName.left = new FormAttachment(0, 0);\r\n\t\tfdlName.right= new FormAttachment(middle, -margin);\r\n\t\tfdlName.top  = new FormAttachment(0, margin);\r\n\t\twlName.setLayoutData(fdlName);\r\n\t\twName=new Text(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wName);\r\n\t\twName.addModifyListener(lsMod);\r\n\t\tfdName=new FormData();\r\n\t\tfdName.left = new FormAttachment(middle, 0);\r\n\t\tfdName.top  = new FormAttachment(0, margin);\r\n\t\tfdName.right= new FormAttachment(100, 0);\r\n\t\twName.setLayoutData(fdName);\r\n\t\t\r\n        wTabFolder = new CTabFolder(shell, SWT.BORDER);\r\n \t\tprops.setLook(wTabFolder, Props.WIDGET_STYLE_TAB);\r\n\t\t\r\n\t\t  //////////////////////////\r\n\t\t// START OF GENERAL TAB   ///\r\n\t\t//////////////////////////\r\n\r\n\t\twGeneralTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twGeneralTab.setText(BaseMessages.getString(PKG, \"JobUnZip.Tab.General.Label\"));\r\n\t\t\r\n\t\twGeneralComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wGeneralComp);\r\n\r\n\t\tFormLayout generalLayout = new FormLayout();\r\n\t\tgeneralLayout.marginWidth  = 3;\r\n\t\tgeneralLayout.marginHeight = 3;\r\n\t\twGeneralComp.setLayout(generalLayout);\r\n\t\t\r\n\t\t\r\n\t\t  // file source grouping?\r\n        // ////////////////////////\r\n        // START OF file source GROUP///\r\n        // /\r\n        wSource = new Group(wGeneralComp, SWT.SHADOW_NONE);\r\n        props.setLook(wSource);\r\n        wSource.setText(BaseMessages.getString(PKG, \"JobUnZip.Source.Group.Label\"));\r\n\r\n        FormLayout groupSourceLayout = new FormLayout();\r\n        groupSourceLayout.marginWidth = 10;\r\n        groupSourceLayout.marginHeight = 10;\r\n\r\n        wSource.setLayout(groupSourceLayout);\r\n        \r\n       //Args from previous\r\n\t\twlArgsPrevious = new Label(wSource, SWT.RIGHT);\r\n\t\twlArgsPrevious.setText(BaseMessages.getString(PKG, \"JobUnZip.ArgsPrevious.Label\"));\r\n\t\tprops.setLook(wlArgsPrevious);\r\n\t\tfdlArgsPrevious = new FormData();\r\n\t\tfdlArgsPrevious.left = new FormAttachment(0, 0);\r\n\t\tfdlArgsPrevious.top = new FormAttachment(0, margin);\r\n\t\tfdlArgsPrevious.right = new FormAttachment(middle, -margin);\r\n\t\twlArgsPrevious.setLayoutData(fdlArgsPrevious);\r\n\t\twArgsPrevious = new Button(wSource, SWT.CHECK);\r\n\t\tprops.setLook(wArgsPrevious);\r\n\t\twArgsPrevious.setToolTipText(BaseMessages.getString(PKG, \"JobUnZip.ArgsPrevious.Tooltip\"));\r\n\t\tfdArgsPrevious = new FormData();\r\n\t\tfdArgsPrevious.left = new FormAttachment(middle, 0);\r\n\t\tfdArgsPrevious.top = new FormAttachment(0, margin);\r\n\t\tfdArgsPrevious.right = new FormAttachment(100, 0);\r\n\t\twArgsPrevious.setLayoutData(fdArgsPrevious);\r\n\t\twArgsPrevious.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\tsetArgdPrevious();\r\n\t\t\t\tjobEntry.setChanged();\r\n\t\t\t}\r\n\t\t});\r\n        \r\n\t\t\r\n\t\t\r\n\t\t// ZipFilename line\r\n\t\twlZipFilename=new Label(wSource, SWT.RIGHT);\r\n\t\twlZipFilename.setText(BaseMessages.getString(PKG, \"JobUnZip.ZipFilename.Label\"));\r\n\t\tprops.setLook(wlZipFilename);\r\n\t\tfdlZipFilename=new FormData();\r\n\t\tfdlZipFilename.left = new FormAttachment(0, 0);\r\n\t\tfdlZipFilename.top  = new FormAttachment(wArgsPrevious, margin);\r\n\t\tfdlZipFilename.right= new FormAttachment(middle, -margin);\r\n\t\twlZipFilename.setLayoutData(fdlZipFilename);\r\n\t\t\r\n\t\t\r\n\t\t// Browse Source folders button ...\r\n\t\twbSourceDirectory=new Button(wSource, SWT.PUSH| SWT.CENTER);\r\n\t\tprops.setLook(wbSourceDirectory);\r\n\t\twbSourceDirectory.setText(BaseMessages.getString(PKG, \"JobUnZip.BrowseFolders.Label\"));\r\n\t\tfdbSourceDirectory=new FormData();\r\n\t\tfdbSourceDirectory.right= new FormAttachment(100, 0);\r\n\t\tfdbSourceDirectory.top  = new FormAttachment(wArgsPrevious, margin);\r\n\t\twbSourceDirectory.setLayoutData(fdbSourceDirectory);\r\n\t\t\r\n\t\twbSourceDirectory.addSelectionListener\r\n\t\t(\r\n\t\t\tnew SelectionAdapter()\r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t\t{\r\n\t\t\t\t\tDirectoryDialog ddialog = new DirectoryDialog(shell, SWT.OPEN);\r\n\t\t\t\t\tif (wZipFilename.getText()!=null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tddialog.setFilterPath(jobMeta.environmentSubstitute(wZipFilename.getText()) );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t // Calling open() will open and run the dialog.\r\n\t\t\t        // It will return the selected directory, or\r\n\t\t\t        // null if user cancels\r\n\t\t\t        String dir = ddialog.open();\r\n\t\t\t        if (dir != null) {\r\n\t\t\t          // Set the text box to the new selection\r\n\t\t\t        \twZipFilename.setText(dir);\r\n\t\t\t        }\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\t\r\n\t\t// Browse files...\r\n\t\twbZipFilename=new Button(wSource, SWT.PUSH| SWT.CENTER);\r\n\t\tprops.setLook(wbZipFilename);\r\n\t\twbZipFilename.setText(BaseMessages.getString(PKG, \"JobUnZip.BrowseFiles.Label\"));\r\n\t\tfdbZipFilename=new FormData();\r\n\t\tfdbZipFilename.right= new FormAttachment(wbSourceDirectory, -margin);\r\n\t\tfdbZipFilename.top  = new FormAttachment(wArgsPrevious, margin);\r\n\t\twbZipFilename.setLayoutData(fdbZipFilename);\r\n\t\t\r\n\t\twZipFilename=new TextVar(jobMeta, wSource, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n\t\tprops.setLook(wZipFilename);\r\n\t\twZipFilename.addModifyListener(lsMod);\r\n\t\tfdZipFilename=new FormData();\r\n\t\tfdZipFilename.left = new FormAttachment(middle, 0);\r\n\t\tfdZipFilename.top  = new FormAttachment(wArgsPrevious, margin);\r\n\r\n\t\tfdZipFilename.right= new FormAttachment(wbZipFilename, -margin);\r\n\t\twZipFilename.setLayoutData(fdZipFilename);\r\n\r\n\t\t// Whenever something changes, set the tooltip to the expanded version:\r\n\t\twZipFilename.addModifyListener(new ModifyListener()\r\n\t\t\t{\r\n\t\t\t\tpublic void modifyText(ModifyEvent e)\r\n\t\t\t\t{\r\n\t\t\t\t\twZipFilename.setToolTipText(jobMeta.environmentSubstitute( wZipFilename.getText() ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\twbZipFilename.addSelectionListener\r\n\t\t(\r\n\t\t\tnew SelectionAdapter()\r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t\t{\r\n\t\t\t\t\tFileDialog dialog = new FileDialog(shell, SWT.OPEN);\r\n\t\t\t\t\t//dialog.setFilterExtensions(new String[] {\"*\"});\r\n\t\t\t\t\tdialog.setFilterExtensions(new String[] {\"*.zip;*.ZIP\",\"*.jar;*.JAR\", \"*\"});\r\n\t\t\t\t\tif (wZipFilename.getText()!=null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdialog.setFileName(jobMeta.environmentSubstitute(wZipFilename.getText()) );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdialog.setFilterNames(FILETYPES);\r\n\t\t\t\t\tif (dialog.open()!=null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twZipFilename.setText(dialog.getFilterPath()+Const.FILE_SEPARATOR+dialog.getFileName());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\r\n\t\t// WildcardSource line\r\n\t\twlWildcardSource = new Label(wSource, SWT.RIGHT);\r\n\t\twlWildcardSource.setText(BaseMessages.getString(PKG, \"JobUnZip.WildcardSource.Label\"));\r\n\t\tprops.setLook(wlWildcardSource);\r\n\t\tfdlWildcardSource = new FormData();\r\n\t\tfdlWildcardSource.left = new FormAttachment(0, 0);\r\n\t\tfdlWildcardSource.top = new FormAttachment(wZipFilename, margin);\r\n\t\tfdlWildcardSource.right = new FormAttachment(middle, -margin);\r\n\t\twlWildcardSource.setLayoutData(fdlWildcardSource);\r\n\t\twWildcardSource = new TextVar(jobMeta, wSource, SWT.SINGLE | SWT.LEFT | SWT.BORDER, BaseMessages.getString(PKG, \"JobUnZip.WildcardSource.Tooltip\"));\r\n\t\tprops.setLook(wWildcardSource);\r\n\t\twWildcardSource.addModifyListener(lsMod);\r\n\t\tfdWildcardSource = new FormData();\r\n\t\tfdWildcardSource.left = new FormAttachment(middle, 0);\r\n\t\tfdWildcardSource.top = new FormAttachment(wZipFilename, margin);\r\n\t\tfdWildcardSource.right = new FormAttachment(100, 0);\r\n\t\twWildcardSource.setLayoutData(fdWildcardSource);\r\n\t\t\r\n        fdSource = new FormData();\r\n        fdSource.left = new FormAttachment(0, margin);\r\n        fdSource.top = new FormAttachment(wName, margin);\r\n        fdSource.right = new FormAttachment(100, -margin);\r\n        wSource.setLayoutData(fdSource);\r\n        // ///////////////////////////////////////////////////////////\r\n        // / END OF FILE SOURCE\r\n        // ///////////////////////////////////////////////////////////\r\n\r\n        \r\n\r\n\t      // ////////////////////////\r\n\t      // START OF UNZIPPED FILES GROUP///\r\n\t      // /\r\n\t      wUnzippedFiles = new Group(wGeneralComp, SWT.SHADOW_NONE);\r\n\t      props.setLook(wUnzippedFiles);\r\n\t      wUnzippedFiles.setText(BaseMessages.getString(PKG, \"JobUnZip.UnzippedFiles.Group.Label\"));\r\n\t\r\n\t      FormLayout groupLayoutUnzipped = new FormLayout();\r\n\t      groupLayoutUnzipped.marginWidth = 10;\r\n\t      groupLayoutUnzipped.marginHeight = 10;\r\n\t\r\n\t      wUnzippedFiles.setLayout(groupLayoutUnzipped);\r\n\t        \r\n        //  Use zipfile name as root directory\r\n\t\twlRootZip = new Label(wUnzippedFiles, SWT.RIGHT);\r\n\t\twlRootZip.setText(BaseMessages.getString(PKG, \"JobUnZip.RootZip.Label\"));\r\n\t\tprops.setLook(wlRootZip);\r\n\t\tfdlRootZip = new FormData();\r\n\t\tfdlRootZip.left = new FormAttachment(0, 0);\r\n\t\tfdlRootZip.top = new FormAttachment(wSource, margin);\r\n\t\tfdlRootZip.right = new FormAttachment(middle, -margin);\r\n\t\twlRootZip.setLayoutData(fdlRootZip);\r\n\t\twRootZip = new Button(wUnzippedFiles, SWT.CHECK);\r\n\t\tprops.setLook(wRootZip);\r\n\t\twRootZip.setToolTipText(BaseMessages.getString(PKG, \"JobUnZip.RootZip.Tooltip\"));\r\n\t\tfdRootZip = new FormData();\r\n\t\tfdRootZip.left = new FormAttachment(middle, 0);\r\n\t\tfdRootZip.top = new FormAttachment(wSource, margin);\r\n\t\tfdRootZip.right = new FormAttachment(100, 0);\r\n\t\twRootZip.setLayoutData(fdRootZip);\r\n\t\twRootZip.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\tjobEntry.setChanged();\r\n\t\t\t}\r\n\t\t});\r\n        \r\n\t\t\r\n\t\t\r\n\t\t// TargetDirectory line\r\n\t\twlTargetDirectory = new Label(wUnzippedFiles, SWT.RIGHT);\r\n\t\twlTargetDirectory.setText(BaseMessages.getString(PKG, \"JobUnZip.TargetDir.Label\"));\r\n\t\tprops.setLook(wlTargetDirectory);\r\n\t\tfdlTargetDirectory = new FormData();\r\n\t\tfdlTargetDirectory.left = new FormAttachment(0, 0);\r\n\t\tfdlTargetDirectory.top = new FormAttachment(wRootZip, margin);\r\n\t\tfdlTargetDirectory.right = new FormAttachment(middle, -margin);\r\n\t\twlTargetDirectory.setLayoutData(fdlTargetDirectory);\r\n\t\t\r\n        \r\n        // Browse folders button ...\r\n\t\twbTargetDirectory=new Button(wUnzippedFiles, SWT.PUSH| SWT.CENTER);\r\n\t\tprops.setLook(wbTargetDirectory);\r\n\t\twbTargetDirectory.setText(BaseMessages.getString(PKG, \"JobUnZip.BrowseFolders.Label\"));\r\n\t\tfdbTargetDirectory=new FormData();\r\n\t\tfdbTargetDirectory.right= new FormAttachment(100, 0);\r\n\t\tfdbTargetDirectory.top  = new FormAttachment(wRootZip, margin);\r\n\t\twbTargetDirectory.setLayoutData(fdbTargetDirectory);\r\n\t\t\r\n\t\twTargetDirectory = new TextVar(jobMeta, wUnzippedFiles, SWT.SINGLE | SWT.LEFT | SWT.BORDER, BaseMessages.getString(PKG, \"JobUnZip.TargetDir.Tooltip\"));\r\n\t\tprops.setLook(wTargetDirectory);\r\n\t\twTargetDirectory.addModifyListener(lsMod);\r\n\t\tfdTargetDirectory = new FormData();\r\n\t\tfdTargetDirectory.left = new FormAttachment(middle, 0);\r\n\t\tfdTargetDirectory.top = new FormAttachment(wRootZip, margin);\r\n\t\tfdTargetDirectory.right = new FormAttachment(wbTargetDirectory, -margin);\r\n\t\twTargetDirectory.setLayoutData(fdTargetDirectory);\r\n\t\t\r\n\t\t// Create Folder\r\n\t\twlCreateFolder=new Label(wUnzippedFiles, SWT.RIGHT);\r\n\t\twlCreateFolder.setText(BaseMessages.getString(PKG, \"JobUnZip.CreateFolder.Label\"));\r\n \t\tprops.setLook(wlCreateFolder);\r\n\t\tfdlCreateFolder=new FormData();\r\n\t\tfdlCreateFolder.left = new FormAttachment(0, 0);\r\n\t\tfdlCreateFolder.top  = new FormAttachment(wTargetDirectory, margin);\r\n\t\tfdlCreateFolder.right= new FormAttachment(middle, -margin);\r\n\t\twlCreateFolder.setLayoutData(fdlCreateFolder);\r\n\t\twCreateFolder=new Button(wUnzippedFiles, SWT.CHECK );\r\n\t\twCreateFolder.setToolTipText(BaseMessages.getString(PKG, \"JobUnZip.CreateFolder.Tooltip\"));\r\n \t\tprops.setLook(wCreateFolder);\r\n\t\tfdCreateFolder=new FormData();\r\n\t\tfdCreateFolder.left = new FormAttachment(middle, 0);\r\n\t\tfdCreateFolder.top  = new FormAttachment(wTargetDirectory, margin);\r\n\t\tfdCreateFolder.right= new FormAttachment(100, 0);\r\n\t\twCreateFolder.setLayoutData(fdCreateFolder);\r\n\t\twCreateFolder.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tjobEntry.setChanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\t\r\n\t\t// Wildcard line\r\n\t\twlWildcard = new Label(wUnzippedFiles, SWT.RIGHT);\r\n\t\twlWildcard.setText(BaseMessages.getString(PKG, \"JobUnZip.Wildcard.Label\"));\r\n\t\tprops.setLook(wlWildcard);\r\n\t\tfdlWildcard = new FormData();\r\n\t\tfdlWildcard.left = new FormAttachment(0, 0);\r\n\t\tfdlWildcard.top = new FormAttachment(wCreateFolder, margin);\r\n\t\tfdlWildcard.right = new FormAttachment(middle, -margin);\r\n\t\twlWildcard.setLayoutData(fdlWildcard);\r\n\t\twWildcard = new TextVar(jobMeta, wUnzippedFiles, SWT.SINGLE | SWT.LEFT | SWT.BORDER, BaseMessages.getString(PKG, \"JobUnZip.Wildcard.Tooltip\"));\r\n\t\tprops.setLook(wWildcard);\r\n\t\twWildcard.addModifyListener(lsMod);\r\n\t\tfdWildcard = new FormData();\r\n\t\tfdWildcard.left = new FormAttachment(middle, 0);\r\n\t\tfdWildcard.top = new FormAttachment(wCreateFolder, margin);\r\n\t\tfdWildcard.right = new FormAttachment(100, 0);\r\n\t\twWildcard.setLayoutData(fdWildcard);\r\n\t\t\r\n\t\t// Wildcard to exclude\r\n\t\twlWildcardExclude = new Label(wUnzippedFiles, SWT.RIGHT);\r\n\t\twlWildcardExclude.setText(BaseMessages.getString(PKG, \"JobUnZip.WildcardExclude.Label\"));\r\n\t\tprops.setLook(wlWildcardExclude);\r\n\t\tfdlWildcardExclude = new FormData();\r\n\t\tfdlWildcardExclude.left = new FormAttachment(0, 0);\r\n\t\tfdlWildcardExclude.top = new FormAttachment(wWildcard, margin);\r\n\t\tfdlWildcardExclude.right = new FormAttachment(middle, -margin);\r\n\t\twlWildcardExclude.setLayoutData(fdlWildcardExclude);\r\n\t\twWildcardExclude = new TextVar(jobMeta, wUnzippedFiles, SWT.SINGLE | SWT.LEFT | SWT.BORDER, BaseMessages.getString(PKG, \"JobUnZip.WildcardExclude.Tooltip\"));\r\n\t\tprops.setLook(wWildcardExclude);\r\n\t\twWildcardExclude.addModifyListener(lsMod);\r\n\t\tfdWildcardExclude = new FormData();\r\n\t\tfdWildcardExclude.left = new FormAttachment(middle, 0);\r\n\t\tfdWildcardExclude.top = new FormAttachment(wWildcard, margin);\r\n\t\tfdWildcardExclude.right = new FormAttachment(100, 0);\r\n\t\twWildcardExclude.setLayoutData(fdWildcardExclude);\r\n\t\t\r\n\t\t// Create multi-part file?\r\n\t\twlAddDate=new Label(wUnzippedFiles, SWT.RIGHT);\r\n\t\twlAddDate.setText(BaseMessages.getString(PKG, \"JobUnZip.AddDate.Label\"));\r\n \t\tprops.setLook(wlAddDate);\r\n\t\tfdlAddDate=new FormData();\r\n\t\tfdlAddDate.left = new FormAttachment(0, 0);\r\n\t\tfdlAddDate.top  = new FormAttachment(wWildcardExclude, margin);\r\n\t\tfdlAddDate.right= new FormAttachment(middle, -margin);\r\n\t\twlAddDate.setLayoutData(fdlAddDate);\r\n\t\twAddDate=new Button(wUnzippedFiles, SWT.CHECK);\r\n \t\tprops.setLook(wAddDate);\r\n \t\twAddDate.setToolTipText(BaseMessages.getString(PKG, \"JobUnZip.AddDate.Tooltip\"));\r\n\t\tfdAddDate=new FormData();\r\n\t\tfdAddDate.left = new FormAttachment(middle, 0);\r\n\t\tfdAddDate.top  = new FormAttachment(wWildcardExclude, margin);\r\n\t\tfdAddDate.right= new FormAttachment(100, 0);\r\n\t\twAddDate.setLayoutData(fdAddDate);\r\n\t\twAddDate.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tjobEntry.setChanged();\r\n\t\t\t\t\tsetDateTime();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\t// Create multi-part file?\r\n\t\twlAddTime=new Label(wUnzippedFiles, SWT.RIGHT);\r\n\t\twlAddTime.setText(BaseMessages.getString(PKG, \"JobUnZip.AddTime.Label\"));\r\n \t\tprops.setLook(wlAddTime);\r\n\t\tfdlAddTime=new FormData();\r\n\t\tfdlAddTime.left = new FormAttachment(0, 0);\r\n\t\tfdlAddTime.top  = new FormAttachment(wAddDate, margin);\r\n\t\tfdlAddTime.right= new FormAttachment(middle, -margin);\r\n\t\twlAddTime.setLayoutData(fdlAddTime);\r\n\t\twAddTime=new Button(wUnzippedFiles, SWT.CHECK);\r\n \t\tprops.setLook(wAddTime);\r\n \t\twAddTime.setToolTipText(BaseMessages.getString(PKG, \"JobUnZip.AddTime.Tooltip\"));\r\n\t\tfdAddTime=new FormData();\r\n\t\tfdAddTime.left = new FormAttachment(middle, 0);\r\n\t\tfdAddTime.top  = new FormAttachment(wAddDate, margin);\r\n\t\tfdAddTime.right= new FormAttachment(100, 0);\r\n\t\twAddTime.setLayoutData(fdAddTime);\r\n\t\twAddTime.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tjobEntry.setChanged();\r\n\t\t\t\t\tsetDateTime();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\t\r\n\t\t// Specify date time format?\r\n\t\twlSpecifyFormat=new Label(wUnzippedFiles, SWT.RIGHT);\r\n\t\twlSpecifyFormat.setText(BaseMessages.getString(PKG, \"JobUnZip.SpecifyFormat.Label\"));\r\n\t\tprops.setLook(wlSpecifyFormat);\r\n\t\tfdlSpecifyFormat=new FormData();\r\n\t\tfdlSpecifyFormat.left = new FormAttachment(0, 0);\r\n\t\tfdlSpecifyFormat.top  = new FormAttachment(wAddTime, margin);\r\n\t\tfdlSpecifyFormat.right= new FormAttachment(middle, -margin);\r\n\t\twlSpecifyFormat.setLayoutData(fdlSpecifyFormat);\r\n\t\twSpecifyFormat=new Button(wUnzippedFiles, SWT.CHECK);\r\n\t\tprops.setLook(wSpecifyFormat);\r\n\t\twSpecifyFormat.setToolTipText(BaseMessages.getString(PKG, \"JobUnZip.SpecifyFormat.Tooltip\"));\r\n\t    fdSpecifyFormat=new FormData();\r\n\t\tfdSpecifyFormat.left = new FormAttachment(middle, 0);\r\n\t\tfdSpecifyFormat.top  = new FormAttachment(wAddTime, margin);\r\n\t\tfdSpecifyFormat.right= new FormAttachment(100, 0);\r\n\t\twSpecifyFormat.setLayoutData(fdSpecifyFormat);\r\n\t\twSpecifyFormat.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tjobEntry.setChanged();\r\n\t\t\t\t\tsetDateTimeFormat();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\r\n\t\t//\tPrepare a list of possible DateTimeFormats...\r\n\t\tString dats[] = Const.getDateFormats();\r\n\t\t\r\n \t\t// DateTimeFormat\r\n\t\twlDateTimeFormat=new Label(wUnzippedFiles, SWT.RIGHT);\r\n        wlDateTimeFormat.setText(BaseMessages.getString(PKG, \"JobUnZip.DateTimeFormat.Label\"));\r\n        props.setLook(wlDateTimeFormat);\r\n        fdlDateTimeFormat=new FormData();\r\n        fdlDateTimeFormat.left = new FormAttachment(0, 0);\r\n        fdlDateTimeFormat.top  = new FormAttachment(wSpecifyFormat, margin);\r\n        fdlDateTimeFormat.right= new FormAttachment(middle, -margin);\r\n        wlDateTimeFormat.setLayoutData(fdlDateTimeFormat);\r\n        wDateTimeFormat=new CCombo(wUnzippedFiles, SWT.BORDER | SWT.READ_ONLY);\r\n        wDateTimeFormat.setEditable(true);\r\n        props.setLook(wDateTimeFormat);\r\n        wDateTimeFormat.addModifyListener(lsMod);\r\n        fdDateTimeFormat=new FormData();\r\n        fdDateTimeFormat.left = new FormAttachment(middle, 0);\r\n        fdDateTimeFormat.top  = new FormAttachment(wSpecifyFormat, margin);\r\n        fdDateTimeFormat.right= new FormAttachment(100, 0);\r\n        wDateTimeFormat.setLayoutData(fdDateTimeFormat);\r\n        for (int x=0;x<dats.length;x++) wDateTimeFormat.add(dats[x]);\r\n        \r\n\r\n\t\twlAddOriginalTimestamp=new Label(wUnzippedFiles, SWT.RIGHT);\r\n\t\twlAddOriginalTimestamp.setText(BaseMessages.getString(PKG, \"JobUnZip.AddOriginalTimestamp.Label\"));\r\n \t\tprops.setLook(wlAddOriginalTimestamp);\r\n\t\tfdlAddOriginalTimestamp=new FormData();\r\n\t\tfdlAddOriginalTimestamp.left = new FormAttachment(0, 0);\r\n\t\tfdlAddOriginalTimestamp.top  = new FormAttachment(wDateTimeFormat, margin);\r\n\t\tfdlAddOriginalTimestamp.right= new FormAttachment(middle, -margin);\r\n\t\twlAddOriginalTimestamp.setLayoutData(fdlAddOriginalTimestamp);\r\n\t\twAddOriginalTimestamp=new Button(wUnzippedFiles, SWT.CHECK);\r\n \t\tprops.setLook(wAddOriginalTimestamp);\r\n \t\twAddOriginalTimestamp.setToolTipText(BaseMessages.getString(PKG, \"JobUnZip.AddOriginalTimestamp.Tooltip\"));\r\n\t\tfdAddOriginalTimestamp=new FormData();\r\n\t\tfdAddOriginalTimestamp.left = new FormAttachment(middle, 0);\r\n\t\tfdAddOriginalTimestamp.top  = new FormAttachment(wDateTimeFormat, margin);\r\n\t\tfdAddOriginalTimestamp.right= new FormAttachment(100, 0);\r\n\t\twAddOriginalTimestamp.setLayoutData(fdAddOriginalTimestamp);\r\n\t\twAddOriginalTimestamp.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tjobEntry.setChanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\t\r\n        \r\n\t\t\r\n\t\t// Create multi-part file?\r\n\t\twlSetModificationDateToOriginal=new Label(wUnzippedFiles, SWT.RIGHT);\r\n\t\twlSetModificationDateToOriginal.setText(BaseMessages.getString(PKG, \"JobUnZip.SetModificationDateToOriginal.Label\"));\r\n \t\tprops.setLook(wlSetModificationDateToOriginal);\r\n\t\tfdlSetModificationDateToOriginal=new FormData();\r\n\t\tfdlSetModificationDateToOriginal.left = new FormAttachment(0, 0);\r\n\t\tfdlSetModificationDateToOriginal.top  = new FormAttachment(wAddOriginalTimestamp, margin);\r\n\t\tfdlSetModificationDateToOriginal.right= new FormAttachment(middle, -margin);\r\n\t\twlSetModificationDateToOriginal.setLayoutData(fdlSetModificationDateToOriginal);\r\n\t\twSetModificationDateToOriginal=new Button(wUnzippedFiles, SWT.CHECK);\r\n \t\tprops.setLook(wSetModificationDateToOriginal);\r\n \t\twSetModificationDateToOriginal.setToolTipText(BaseMessages.getString(PKG, \"JobUnZip.SetModificationDateToOriginal.Tooltip\"));\r\n\t\tfdSetModificationDateToOriginal=new FormData();\r\n\t\tfdSetModificationDateToOriginal.left = new FormAttachment(middle, 0);\r\n\t\tfdSetModificationDateToOriginal.top  = new FormAttachment(wAddOriginalTimestamp, margin);\r\n\t\tfdSetModificationDateToOriginal.right= new FormAttachment(100, 0);\r\n\t\twSetModificationDateToOriginal.setLayoutData(fdSetModificationDateToOriginal);\r\n\t\twSetModificationDateToOriginal.addSelectionListener(new SelectionAdapter() \r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tjobEntry.setChanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\t // If File Exists\r\n\t\twlIfFileExists = new Label(wUnzippedFiles, SWT.RIGHT);\r\n\t\twlIfFileExists.setText(BaseMessages.getString(PKG, \"JobUnZip.IfFileExists.Label\"));\r\n\t\tprops.setLook(wlIfFileExists);\r\n\t\tfdlIfFileExists = new FormData();\r\n\t\tfdlIfFileExists.left = new FormAttachment(0, 0);\r\n\t\tfdlIfFileExists.right = new FormAttachment(middle, -margin);\r\n\t\tfdlIfFileExists.top = new FormAttachment(wSetModificationDateToOriginal, margin);\r\n\t\twlIfFileExists.setLayoutData(fdlIfFileExists);\r\n\t\twIfFileExists = new CCombo(wUnzippedFiles, SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);\r\n\t\twIfFileExists.setItems(JobEntryUnZip.typeIfFileExistsDesc);\r\n\t\twIfFileExists.select(0); // +1: starts at -1\r\n\t\tprops.setLook(wIfFileExists);\r\n\r\n\t\tfdIfFileExists = new FormData();\r\n\t\tfdIfFileExists.left = new FormAttachment(middle, 0);\r\n\t\tfdIfFileExists.top = new FormAttachment(wSetModificationDateToOriginal, margin);\r\n\t\tfdIfFileExists.right = new FormAttachment(100, 0);\r\n\t\twIfFileExists.setLayoutData(fdIfFileExists);\r\n\t\t\r\n\t\twIfFileExists.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\r\n\t\t//After Zipping\r\n\t\twlAfterUnZip = new Label(wUnzippedFiles, SWT.RIGHT);\r\n\t\twlAfterUnZip.setText(BaseMessages.getString(PKG, \"JobUnZip.AfterUnZip.Label\"));\r\n\t\tprops.setLook(wlAfterUnZip);\r\n\t\tfdlAfterUnZip = new FormData();\r\n\t\tfdlAfterUnZip.left = new FormAttachment(0, 0);\r\n\t\tfdlAfterUnZip.right = new FormAttachment(middle, 0);\r\n\t\tfdlAfterUnZip.top = new FormAttachment(wIfFileExists, margin);\r\n\t\twlAfterUnZip.setLayoutData(fdlAfterUnZip);\r\n\t\twAfterUnZip = new CCombo(wUnzippedFiles, SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);\r\n\t\twAfterUnZip.add(BaseMessages.getString(PKG, \"JobUnZip.Do_Nothing_AfterUnZip.Label\"));\r\n\t\twAfterUnZip.add(BaseMessages.getString(PKG, \"JobUnZip.Delete_Files_AfterUnZip.Label\"));\r\n\t\twAfterUnZip.add(BaseMessages.getString(PKG, \"JobUnZip.Move_Files_AfterUnZip.Label\"));\r\n\r\n\t\twAfterUnZip.select(0); // +1: starts at -1\r\n\r\n\t\tprops.setLook(wAfterUnZip);\r\n\t\tfdAfterUnZip= new FormData();\r\n\t\tfdAfterUnZip.left = new FormAttachment(middle, 0);\r\n\t\tfdAfterUnZip.top = new FormAttachment(wIfFileExists, margin);\r\n\t\tfdAfterUnZip.right = new FormAttachment(100, 0);\r\n\t\twAfterUnZip.setLayoutData(fdAfterUnZip);\r\n\r\n\r\n\t\twAfterUnZip.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\tAfterUnZipActivate();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// moveTo Directory\r\n\t\twlMovetoDirectory = new Label(wUnzippedFiles, SWT.RIGHT);\r\n\t\twlMovetoDirectory.setText(BaseMessages.getString(PKG, \"JobUnZip.MovetoDirectory.Label\"));\r\n\t\tprops.setLook(wlMovetoDirectory);\r\n\t\tfdlMovetoDirectory = new FormData();\r\n\t\tfdlMovetoDirectory.left = new FormAttachment(0, 0);\r\n\t\tfdlMovetoDirectory.top = new FormAttachment(wAfterUnZip, margin);\r\n\t\tfdlMovetoDirectory.right = new FormAttachment(middle, -margin);\r\n\t\twlMovetoDirectory.setLayoutData(fdlMovetoDirectory);\r\n\t\twMovetoDirectory = new TextVar(jobMeta, wUnzippedFiles, SWT.SINGLE | SWT.LEFT | SWT.BORDER, BaseMessages.getString(PKG, \"JobUnZip.MovetoDirectory.Tooltip\"));\r\n\t\tprops.setLook(wMovetoDirectory);\r\n\t\t\r\n\t    // Browse folders button ...\r\n\t\twbMovetoDirectory=new Button(wUnzippedFiles, SWT.PUSH| SWT.CENTER);\r\n\t\tprops.setLook(wbMovetoDirectory);\r\n\t\twbMovetoDirectory.setText(BaseMessages.getString(PKG, \"JobUnZip.BrowseFolders.Label\"));\r\n\t\tfdbMovetoDirectory=new FormData();\r\n\t\tfdbMovetoDirectory.right= new FormAttachment(100, 0);\r\n\t\tfdbMovetoDirectory.top  = new FormAttachment(wAfterUnZip, margin);\r\n\t\twbMovetoDirectory.setLayoutData(fdbMovetoDirectory);\r\n\t\t\r\n\t\twMovetoDirectory.addModifyListener(lsMod);\r\n\t\tfdMovetoDirectory = new FormData();\r\n\t\tfdMovetoDirectory.left = new FormAttachment(middle, 0);\r\n\t\tfdMovetoDirectory.top = new FormAttachment(wAfterUnZip, margin);\r\n\t\tfdMovetoDirectory.right = new FormAttachment(wbMovetoDirectory, -margin);\r\n\t\twMovetoDirectory.setLayoutData(fdMovetoDirectory);\r\n\t\t\r\n\t\t\r\n\t\t//create move to folder\r\n\t\twlcreateMoveToDirectory = new Label(wUnzippedFiles, SWT.RIGHT);\r\n\t\twlcreateMoveToDirectory.setText(BaseMessages.getString(PKG, \"JobUnZip.createMoveToFolder.Label\"));\r\n\t\tprops.setLook(wlcreateMoveToDirectory);\r\n\t\tfdlcreateMoveToDirectory = new FormData();\r\n\t\tfdlcreateMoveToDirectory.left = new FormAttachment(0, 0);\r\n\t\tfdlcreateMoveToDirectory.top = new FormAttachment(wMovetoDirectory, margin);\r\n\t\tfdlcreateMoveToDirectory.right = new FormAttachment(middle, -margin);\r\n\t\twlcreateMoveToDirectory.setLayoutData(fdlcreateMoveToDirectory);\r\n\t\twcreateMoveToDirectory = new Button(wUnzippedFiles, SWT.CHECK);\r\n\t\tprops.setLook(wcreateMoveToDirectory);\r\n\t\twcreateMoveToDirectory.setToolTipText(BaseMessages.getString(PKG, \"JobUnZip.createMoveToFolder.Tooltip\"));\r\n\t\tfdcreateMoveToDirectory = new FormData();\r\n\t\tfdcreateMoveToDirectory.left = new FormAttachment(middle, 0);\r\n\t\tfdcreateMoveToDirectory.top = new FormAttachment(wMovetoDirectory, margin);\r\n\t\tfdcreateMoveToDirectory.right = new FormAttachment(100, 0);\r\n\t\twcreateMoveToDirectory.setLayoutData(fdcreateMoveToDirectory);\r\n\t\twcreateMoveToDirectory.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\tjobEntry.setChanged();\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tfdUnzippedFiles = new FormData();\r\n        fdUnzippedFiles.left = new FormAttachment(0, margin);\r\n        fdUnzippedFiles.top = new FormAttachment(wSource, margin);\r\n        fdUnzippedFiles.right = new FormAttachment(100, -margin);\r\n        wUnzippedFiles.setLayoutData(fdUnzippedFiles);\r\n        // ///////////////////////////////////////////////////////////\r\n        // / END OF UNZIPPED FILES\r\n        // ///////////////////////////////////////////////////////////     \r\n\t\t\r\n\t\tfdGeneralComp=new FormData();\r\n\t\tfdGeneralComp.left  = new FormAttachment(0, 0);\r\n\t\tfdGeneralComp.top   = new FormAttachment(0, 0);\r\n\t\tfdGeneralComp.right = new FormAttachment(100, 0);\r\n\t\tfdGeneralComp.bottom= new FormAttachment(500, -margin);\r\n\t\twGeneralComp.setLayoutData(fdGeneralComp);\r\n\t\t\r\n\t\twGeneralComp.layout();\r\n\t\twGeneralTab.setControl(wGeneralComp);\r\n \t\tprops.setLook(wGeneralComp);\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF GENERAL TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n        \r\n        //////////////////////////\r\n\t\t// START OF ADVANCED TAB   ///\r\n\t\t//////////////////////////\r\n\t\t\r\n\t\twAdvancedTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twAdvancedTab.setText(BaseMessages.getString(PKG, \"JobUnZip.Tab.Advanced.Label\"));\r\n\t\t\r\n\t\twAdvancedComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wAdvancedComp);\r\n\r\n\t\tFormLayout advancedLayout = new FormLayout();\r\n\t\tadvancedLayout.marginWidth  = 3;\r\n\t\tadvancedLayout.marginHeight = 3;\r\n\t\twAdvancedComp.setLayout(advancedLayout);\r\n\t\t\r\n\t\t  // file result grouping?\r\n        // ////////////////////////\r\n        // START OF LOGGING GROUP///\r\n        // /\r\n        wFileResult = new Group(wAdvancedComp, SWT.SHADOW_NONE);\r\n        props.setLook(wFileResult);\r\n        wFileResult.setText(BaseMessages.getString(PKG, \"JobUnZip.FileResult.Group.Label\"));\r\n\r\n        FormLayout groupLayout = new FormLayout();\r\n        groupLayout.marginWidth = 10;\r\n        groupLayout.marginHeight = 10;\r\n\r\n        wFileResult.setLayout(groupLayout);\r\n        \r\n        \r\n    \t//Add file to result\r\n\t\twlAddFileToResult = new Label(wFileResult, SWT.RIGHT);\r\n\t\twlAddFileToResult.setText(BaseMessages.getString(PKG, \"JobUnZip.AddFileToResult.Label\"));\r\n\t\tprops.setLook(wlAddFileToResult);\r\n\t\tfdlAddFileToResult = new FormData();\r\n\t\tfdlAddFileToResult.left = new FormAttachment(0, 0);\r\n\t\tfdlAddFileToResult.top = new FormAttachment(wSource, margin);\r\n\t\tfdlAddFileToResult.right = new FormAttachment(middle, -margin);\r\n\t\twlAddFileToResult.setLayoutData(fdlAddFileToResult);\r\n\t\twAddFileToResult = new Button(wFileResult, SWT.CHECK);\r\n\t\tprops.setLook(wAddFileToResult);\r\n\t\twAddFileToResult.setToolTipText(BaseMessages.getString(PKG, \"JobUnZip.AddFileToResult.Tooltip\"));\r\n\t\tfdAddFileToResult = new FormData();\r\n\t\tfdAddFileToResult.left = new FormAttachment(middle, 0);\r\n\t\tfdAddFileToResult.top = new FormAttachment(wSource, margin);\r\n\t\tfdAddFileToResult.right = new FormAttachment(100, 0);\r\n\t\twAddFileToResult.setLayoutData(fdAddFileToResult);\r\n\t\twAddFileToResult.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\tjobEntry.setChanged();\r\n\t\t\t}\r\n\t\t});\r\n        \r\n\t\t\r\n        fdFileResult = new FormData();\r\n        fdFileResult.left = new FormAttachment(0, margin);\r\n        fdFileResult.top = new FormAttachment(wUnzippedFiles, margin);\r\n        fdFileResult.right = new FormAttachment(100, -margin);\r\n        wFileResult.setLayoutData(fdFileResult);\r\n        // ///////////////////////////////////////////////////////////\r\n        // / END OF FILE RESULT\r\n        // ///////////////////////////////////////////////////////////\r\n\r\n        \r\n        // SuccessOngrouping?\r\n\t     // ////////////////////////\r\n\t     // START OF SUCCESS ON GROUP///\r\n\t     // /\r\n\t    wSuccessOn= new Group(wAdvancedComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wSuccessOn);\r\n\t    wSuccessOn.setText(BaseMessages.getString(PKG, \"JobUnZip.SuccessOn.Group.Label\"));\r\n\r\n\t    FormLayout successongroupLayout = new FormLayout();\r\n\t    successongroupLayout.marginWidth = 10;\r\n\t    successongroupLayout.marginHeight = 10;\r\n\r\n\t    wSuccessOn.setLayout(successongroupLayout);\r\n\t    \r\n\r\n\t    //Success Condition\r\n\t  \twlSuccessCondition = new Label(wSuccessOn, SWT.RIGHT);\r\n\t  \twlSuccessCondition.setText(BaseMessages.getString(PKG, \"JobUnZip.SuccessCondition.Label\") + \" \");\r\n\t  \tprops.setLook(wlSuccessCondition);\r\n\t  \tfdlSuccessCondition = new FormData();\r\n\t  \tfdlSuccessCondition.left = new FormAttachment(0, 0);\r\n\t  \tfdlSuccessCondition.right = new FormAttachment(middle, 0);\r\n\t  \tfdlSuccessCondition.top = new FormAttachment(wFileResult, margin);\r\n\t  \twlSuccessCondition.setLayoutData(fdlSuccessCondition);\r\n\t  \twSuccessCondition = new CCombo(wSuccessOn, SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);\r\n\t  \twSuccessCondition.add(BaseMessages.getString(PKG, \"JobUnZip.SuccessWhenAllWorksFine.Label\"));\r\n\t  \twSuccessCondition.add(BaseMessages.getString(PKG, \"JobUnZip.SuccessWhenAtLeat.Label\"));\r\n\t  \twSuccessCondition.add(BaseMessages.getString(PKG, \"JobUnZip.SuccessWhenNrErrorsLessThan.Label\"));\r\n\t  \twSuccessCondition.select(0); // +1: starts at -1\r\n\t  \t\r\n\t\tprops.setLook(wSuccessCondition);\r\n\t\tfdSuccessCondition= new FormData();\r\n\t\tfdSuccessCondition.left = new FormAttachment(middle, 0);\r\n\t\tfdSuccessCondition.top = new FormAttachment(wFileResult, margin);\r\n\t\tfdSuccessCondition.right = new FormAttachment(100, 0);\r\n\t\twSuccessCondition.setLayoutData(fdSuccessCondition);\r\n\t\twSuccessCondition.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\tactiveSuccessCondition();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Success when number of errors less than\r\n\t\twlNrErrorsLessThan= new Label(wSuccessOn, SWT.RIGHT);\r\n\t\twlNrErrorsLessThan.setText(BaseMessages.getString(PKG, \"JobUnZip.NrBadFormedLessThan.Label\") + \" \");\r\n\t\tprops.setLook(wlNrErrorsLessThan);\r\n\t\tfdlNrErrorsLessThan= new FormData();\r\n\t\tfdlNrErrorsLessThan.left = new FormAttachment(0, 0);\r\n\t\tfdlNrErrorsLessThan.top = new FormAttachment(wSuccessCondition, margin);\r\n\t\tfdlNrErrorsLessThan.right = new FormAttachment(middle, -margin);\r\n\t\twlNrErrorsLessThan.setLayoutData(fdlNrErrorsLessThan);\r\n\t\t\r\n\t\t\r\n\t\twNrErrorsLessThan= new TextVar(jobMeta,wSuccessOn, SWT.SINGLE | SWT.LEFT | SWT.BORDER, \r\n\t\t\t\tBaseMessages.getString(PKG, \"JobUnZip.NrBadFormedLessThan.Tooltip\"));\r\n\t\tprops.setLook(wNrErrorsLessThan);\r\n\t\twNrErrorsLessThan.addModifyListener(lsMod);\r\n\t\tfdNrErrorsLessThan= new FormData();\r\n\t\tfdNrErrorsLessThan.left = new FormAttachment(middle, 0);\r\n\t\tfdNrErrorsLessThan.top = new FormAttachment(wSuccessCondition, margin);\r\n\t\tfdNrErrorsLessThan.right = new FormAttachment(100, -margin);\r\n\t\twNrErrorsLessThan.setLayoutData(fdNrErrorsLessThan);\r\n\t\t\r\n\t\r\n\t    fdSuccessOn= new FormData();\r\n\t    fdSuccessOn.left = new FormAttachment(0, margin);\r\n\t    fdSuccessOn.top = new FormAttachment(wFileResult, margin);\r\n\t    fdSuccessOn.right = new FormAttachment(100, -margin);\r\n\t    wSuccessOn.setLayoutData(fdSuccessOn);\r\n\t     // ///////////////////////////////////////////////////////////\r\n\t     // / END OF Success ON GROUP\r\n\t     // ///////////////////////////////////////////////////////////\r\n\r\n\t\tfdAdvancedComp=new FormData();\r\n\t\tfdAdvancedComp.left  = new FormAttachment(0, 0);\r\n\t\tfdAdvancedComp.top   = new FormAttachment(0, 0);\r\n\t\tfdAdvancedComp.right = new FormAttachment(100, 0);\r\n\t\tfdAdvancedComp.bottom= new FormAttachment(500, -margin);\r\n\t\twAdvancedComp.setLayoutData(fdAdvancedComp);\r\n\t\t\r\n\t\twAdvancedComp.layout();\r\n\t\twAdvancedTab.setControl(wAdvancedComp);\r\n \t\tprops.setLook(wAdvancedComp);\r\n \t\t \t\t\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF Advanced TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\r\n\t\tfdTabFolder = new FormData();\r\n\t\tfdTabFolder.left  = new FormAttachment(0, 0);\r\n\t\tfdTabFolder.top   = new FormAttachment(wName, margin);\r\n\t\tfdTabFolder.right = new FormAttachment(100, 0);\r\n\t\tfdTabFolder.bottom= new FormAttachment(100, -50);\r\n\t\twTabFolder.setLayoutData(fdTabFolder);\r\n\r\n        \r\n        wOK = new Button(shell, SWT.PUSH);\r\n        wOK.setText(BaseMessages.getString(PKG, \"System.Button.OK\"));\r\n        wCancel = new Button(shell, SWT.PUSH);\r\n        wCancel.setText(BaseMessages.getString(PKG, \"System.Button.Cancel\"));\r\n        \r\n        BaseStepDialog.positionBottomButtons(shell, new Button[] { wOK, wCancel }, margin, wTabFolder);\r\n\r\n\t\t// Add listeners\r\n\t\tlsCancel   = new Listener() { public void handleEvent(Event e) { cancel(); } };\r\n\t\tlsOK       = new Listener() { public void handleEvent(Event e) { ok();     } };\r\n\r\n\t\twCancel.addListener(SWT.Selection, lsCancel);\r\n\t\twOK.addListener    (SWT.Selection, lsOK    );\r\n\r\n\t\tlsDef=new SelectionAdapter() { public void widgetDefaultSelected(SelectionEvent e) { ok(); } };\r\n\r\n\t\t\r\n\t\twbTargetDirectory.addSelectionListener\r\n\t\t\t(\r\n\t\t\t\tnew SelectionAdapter()\r\n\t\t\t\t{\r\n\t\t\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tDirectoryDialog ddialog = new DirectoryDialog(shell, SWT.OPEN);\r\n\t\t\t\t\t\tif (wTargetDirectory.getText()!=null)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tddialog.setFilterPath(jobMeta.environmentSubstitute(wTargetDirectory.getText()) );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t // Calling open() will open and run the dialog.\r\n\t\t\t\t        // It will return the selected directory, or\r\n\t\t\t\t        // null if user cancels\r\n\t\t\t\t        String dir = ddialog.open();\r\n\t\t\t\t        if (dir != null) {\r\n\t\t\t\t          // Set the text box to the new selection\r\n\t\t\t\t        \twTargetDirectory.setText(dir);\r\n\t\t\t\t        }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\t\r\n\t\t\r\n\t\twbMovetoDirectory.addSelectionListener\r\n\t\t(\r\n\t\t\tnew SelectionAdapter()\r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t\t{\r\n\t\t\t\t\tDirectoryDialog ddialog = new DirectoryDialog(shell, SWT.OPEN);\r\n\t\t\t\t\tif (wMovetoDirectory.getText()!=null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tddialog.setFilterPath(jobMeta.environmentSubstitute(wMovetoDirectory.getText()) );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t // Calling open() will open and run the dialog.\r\n\t\t\t        // It will return the selected directory, or\r\n\t\t\t        // null if user cancels\r\n\t\t\t        String dir = ddialog.open();\r\n\t\t\t        if (dir != null) {\r\n\t\t\t          // Set the text box to the new selection\r\n\t\t\t        \twMovetoDirectory.setText(dir);\r\n\t\t\t        }\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\t\r\n\t\twName.addSelectionListener( lsDef );\r\n\t\twZipFilename.addSelectionListener( lsDef );\r\n\r\n\t\t// Detect X or ALT-F4 or something that kills this window...\r\n\t\tshell.addShellListener(\tnew ShellAdapter() { public void shellClosed(ShellEvent e) { cancel(); } } );\r\n\r\n\t\tgetData();\r\n\t\tsetArgdPrevious();\r\n\t\tAfterUnZipActivate();\r\n\t\tsetDateTimeFormat();\r\n\t\tactiveSuccessCondition();\r\n        wTabFolder.setSelection(0);\r\n\t\tBaseStepDialog.setSize(shell);\r\n\r\n\t\tshell.open();\r\n\t\twhile (!shell.isDisposed())\r\n\t\t{\r\n\t\t\t\tif (!display.readAndDispatch()) display.sleep();\r\n\t\t}\r\n\t\treturn jobEntry;\r\n\t}","commit_id":"d8de35990548b21aefaefc482ada2dfc0f265d2a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void loadConfiguration() throws IOException {\n\n    // FIXME: disabling a rule X in language Y should not disable it in all\n    // languages - need to add a language parameter\n\n    FileInputStream fis = null;\n    try {\n      fis = new FileInputStream(configFile);\n      final Properties props = new Properties();\n      props.load(fis);\n      final String val = (String) props.get(DISABLED_RULES_CONFIG_KEY);\n      if (val != null) {\n        final String[] ids = val.split(\",\");\n        disabledRuleIds.addAll(Arrays.asList(ids));\n      }\n\n      final String enRul = (String) props.get(ENABLED_RULES_CONFIG_KEY);\n      if (enRul != null) {\n        final String[] ids = enRul.split(\",\");\n        enabledRuleIds.addAll(Arrays.asList(ids));\n      }\n\n      final String cat = (String) props.get(DISABLED_CATEGORIES_CONFIG_KEY);\n      if (cat != null) {\n        final String[] names = cat.split(\",\");\n        disabledCategoryNames.addAll(Arrays.asList(names));\n      }\n\n      final String motherTongueStr = (String) props\n          .get(MOTHER_TONGUE_CONFIG_KEY);\n      if (motherTongueStr != null) {\n        motherTongue = Language.getLanguageForShortName(motherTongueStr);\n      }\n      final String runServerString = (String) props.get(SERVER_RUN_CONFIG_KEY);\n      if (runServerString != null) {\n        runServer = runServerString.equals(\"true\");\n      }\n      final String serverPortString = (String) props\n          .get(SERVER_PORT_CONFIG_KEY);\n      if (serverPortString != null) {\n        serverPort = Integer.parseInt(serverPortString);\n      }\n    } catch (final FileNotFoundException e) {\n      // file not found: okay, leave disabledRuleIds empty\n    } finally {\n      if (fis != null) {\n        fis.close();\n      }\n    }\n  }","id":15683,"modified_method":"private void loadConfiguration() throws IOException {\n\n    // FIXME: disabling a rule X in language Y should not disable it in all\n    // languages - need to add a language parameter\n\n    FileInputStream fis = null;\n    try {\n      fis = new FileInputStream(configFile);\n      final Properties props = new Properties();\n      props.load(fis);\n\n      disabledRuleIds.addAll(getListFromProperties(props, DISABLED_RULES_CONFIG_KEY));\n      enabledRuleIds.addAll(getListFromProperties(props, ENABLED_RULES_CONFIG_KEY));\n      disabledCategoryNames.addAll(getListFromProperties(props, DISABLED_CATEGORIES_CONFIG_KEY));\n      \n      final String motherTongueStr = (String) props.get(MOTHER_TONGUE_CONFIG_KEY);\n      if (motherTongueStr != null) {\n        motherTongue = Language.getLanguageForShortName(motherTongueStr);\n      }\n      final String runServerString = (String) props.get(SERVER_RUN_CONFIG_KEY);\n      if (runServerString != null) {\n        runServer = runServerString.equals(\"true\");\n      }\n      final String serverPortString = (String) props.get(SERVER_PORT_CONFIG_KEY);\n      if (serverPortString != null) {\n        serverPort = Integer.parseInt(serverPortString);\n      }\n    } catch (final FileNotFoundException e) {\n      // file not found: okay, leave disabledRuleIds empty\n    } finally {\n      if (fis != null) {\n        fis.close();\n      }\n    }\n  }","commit_id":"ef5a091f8ec22713b66d8202658cbd4324214a4f","url":"https://github.com/languagetool-org/languagetool"},{"original_method":"public void saveConfiguration() throws IOException {\n    final Properties props = new Properties();\n\n    if (disabledRuleIds == null) {\n      props.setProperty(DISABLED_RULES_CONFIG_KEY, \"\");\n    } else {\n      final StringBuilder sb = new StringBuilder();\n      for (final Iterator<String> iter = disabledRuleIds.iterator(); iter\n          .hasNext();) {\n        final String id = iter.next();\n        sb.append(id);\n        if (iter.hasNext()) {\n          sb.append(',');\n        }\n      }\n      props.setProperty(DISABLED_RULES_CONFIG_KEY, sb.toString());\n    }\n\n    if (enabledRuleIds == null) {\n      props.setProperty(ENABLED_RULES_CONFIG_KEY, \"\");\n    } else {\n      final StringBuilder sb = new StringBuilder();\n      for (final Iterator<String> iter = enabledRuleIds.iterator(); iter.hasNext();) {\n        final String id = iter.next();\n        sb.append(id);\n        if (iter.hasNext()) {\n          sb.append(',');\n        }\n      }\n      props.setProperty(ENABLED_RULES_CONFIG_KEY, sb.toString());\n    }\n\n    if (disabledCategoryNames == null) {\n      props.setProperty(DISABLED_CATEGORIES_CONFIG_KEY, \"\");\n    } else {\n      final StringBuilder sb = new StringBuilder();\n      for (final Iterator<String> iter = disabledCategoryNames.iterator(); iter\n          .hasNext();) {\n        final String name = iter.next();\n        sb.append(name);\n        if (iter.hasNext()) {\n          sb.append(',');\n        }\n      }\n      props.setProperty(DISABLED_CATEGORIES_CONFIG_KEY, sb.toString());\n    }\n\n    if (motherTongue != null) {\n      props.setProperty(MOTHER_TONGUE_CONFIG_KEY, motherTongue.getShortName());\n    }\n    props.setProperty(SERVER_RUN_CONFIG_KEY, Boolean.valueOf(runServer).toString());\n    props.setProperty(SERVER_PORT_CONFIG_KEY, Integer.valueOf(serverPort).toString());\n    final FileOutputStream fos = new FileOutputStream(configFile);\n    try {\n      props.store(fos, \"LanguageTool configuration\");\n    } finally {\n      fos.close();\n    }\n  }","id":15684,"modified_method":"public void saveConfiguration() throws IOException {\n    final Properties props = new Properties();\n    addListToProperties(props, DISABLED_RULES_CONFIG_KEY, disabledRuleIds);\n    addListToProperties(props, ENABLED_RULES_CONFIG_KEY, enabledRuleIds);\n    addListToProperties(props, DISABLED_CATEGORIES_CONFIG_KEY, disabledCategoryNames);\n    if (motherTongue != null) {\n      props.setProperty(MOTHER_TONGUE_CONFIG_KEY, motherTongue.getShortName());\n    }\n    props.setProperty(SERVER_RUN_CONFIG_KEY, Boolean.valueOf(runServer).toString());\n    props.setProperty(SERVER_PORT_CONFIG_KEY, Integer.valueOf(serverPort).toString());\n    final FileOutputStream fos = new FileOutputStream(configFile);\n    try {\n      props.store(fos, \"LanguageTool configuration\");\n    } finally {\n      fos.close();\n    }\n  }","commit_id":"ef5a091f8ec22713b66d8202658cbd4324214a4f","url":"https://github.com/languagetool-org/languagetool"},{"original_method":"private void backpropDerivativesAndError(Tree tree, \n                                           TwoDimensionalMap<String, String, SimpleMatrix> binaryTD,\n                                           TwoDimensionalMap<String, String, SimpleMatrix> binaryCD,\n                                           TwoDimensionalMap<String, String, SimpleTensor> binaryTensorTD,\n                                           Map<String, SimpleMatrix> unaryCD,\n                                           Map<String, SimpleMatrix> wordVectorD,\n                                           SimpleMatrix deltaUp) {\n    if (tree.isLeaf()) {\n      return;\n    }\n\n    SimpleMatrix currentVector = RNNCoreAnnotations.getNodeVector(tree);\n    String category = tree.label().value();\n    category = model.basicCategory(category);\n\n    // TODO: factor this out somewhere?\n    SimpleMatrix goldLabel = new SimpleMatrix(model.numClasses, 1);\n    goldLabel.set(RNNCoreAnnotations.getGoldClass(tree), 1.0);\n\n    SimpleMatrix predictions = RNNCoreAnnotations.getPredictions(tree);\n\n    SimpleMatrix deltaClass = predictions.minus(goldLabel);\n    SimpleMatrix localCD = deltaClass.mult(RNNUtils.concatenateWithBias(currentVector).transpose());\n\n    double error = -(RNNUtils.elementwiseApplyLog(predictions).elementMult(goldLabel).elementSum());\n    RNNCoreAnnotations.setPredictionError(tree, error);\n\n    if (tree.isPreTerminal()) { // below us is a word vector\n      unaryCD.put(category, unaryCD.get(category).plus(localCD));\n\n      String word = tree.children()[0].label().value();\n      word = model.getVocabWord(word);\n\n      SimpleMatrix deltaFromClass = model.getUnaryClassification(category).transpose().mult(deltaClass);\n      SimpleMatrix deltaFull = deltaFromClass.extractMatrix(0, model.op.numHid, 0, 1).plus(deltaUp);\n\n      SimpleMatrix currentVectorDerivative = RNNUtils.elementwiseApplyTanhDerivative(currentVector);\n      SimpleMatrix wordDerivative = deltaFull.elementMult(currentVectorDerivative);\n      wordVectorD.put(word, wordVectorD.get(word).plus(wordDerivative));\n    } else {\n      // Otherwise, this must be a binary node\n      String leftCategory = model.basicCategory(tree.children()[0].label().value());\n      String rightCategory = model.basicCategory(tree.children()[1].label().value());\n      binaryCD.put(leftCategory, rightCategory, binaryCD.get(leftCategory, rightCategory).plus(localCD));\n      \n      SimpleMatrix deltaFromClass = model.getBinaryClassification(leftCategory, rightCategory).transpose().mult(deltaClass);\n      SimpleMatrix deltaFull = deltaFromClass.extractMatrix(0, model.op.numHid, 0, 1).plus(deltaUp);\n      \n      SimpleMatrix leftVector = RNNCoreAnnotations.getNodeVector(tree.children()[0]);\n      SimpleMatrix rightVector = RNNCoreAnnotations.getNodeVector(tree.children()[1]);\n      SimpleMatrix childrenVector = RNNUtils.concatenateWithBias(leftVector, rightVector);\n      SimpleMatrix W_df = deltaFull.mult(childrenVector.transpose());\n      binaryTD.put(leftCategory, rightCategory, binaryTD.get(leftCategory, rightCategory).plus(W_df));\n      SimpleMatrix deltaDown;\n      if (model.op.useTensors) {\n        SimpleTensor Wt_df = getTensorGradient(deltaFull, leftVector, rightVector);\n        binaryTensorTD.put(leftCategory, rightCategory, binaryTensorTD.get(leftCategory, rightCategory).plus(Wt_df));\n        deltaDown = computeTensorDeltaDown(deltaFull, leftVector, rightVector, model.getBinaryTransform(leftCategory, rightCategory), model.getBinaryTensor(leftCategory, rightCategory));\n      } else {\n        deltaDown = model.getBinaryTransform(leftCategory, rightCategory).transpose().mult(deltaFull);\n      }\n\n      SimpleMatrix leftDerivative = RNNUtils.elementwiseApplyTanhDerivative(leftVector);\n      SimpleMatrix rightDerivative = RNNUtils.elementwiseApplyTanhDerivative(rightVector);\n      SimpleMatrix leftDeltaDown = deltaDown.extractMatrix(0, deltaFull.numRows(), 0, 1);\n      SimpleMatrix rightDeltaDown = deltaDown.extractMatrix(deltaFull.numRows(), deltaFull.numRows() * 2, 0, 1);\n      backpropDerivativesAndError(tree.children()[0], binaryTD, binaryCD, binaryTensorTD, unaryCD, wordVectorD, leftDerivative.elementMult(leftDeltaDown));\n      backpropDerivativesAndError(tree.children()[1], binaryTD, binaryCD, binaryTensorTD, unaryCD, wordVectorD, rightDerivative.elementMult(rightDeltaDown));\n    }\n  }","id":15685,"modified_method":"private void backpropDerivativesAndError(Tree tree, \n                                           TwoDimensionalMap<String, String, SimpleMatrix> binaryTD,\n                                           TwoDimensionalMap<String, String, SimpleMatrix> binaryCD,\n                                           TwoDimensionalMap<String, String, SimpleTensor> binaryTensorTD,\n                                           Map<String, SimpleMatrix> unaryCD,\n                                           Map<String, SimpleMatrix> wordVectorD,\n                                           SimpleMatrix deltaUp) {\n    if (tree.isLeaf()) {\n      return;\n    }\n\n    SimpleMatrix currentVector = RNNCoreAnnotations.getNodeVector(tree);\n    String category = tree.label().value();\n    category = model.basicCategory(category);\n\n    // TODO: factor this out somewhere?\n    SimpleMatrix goldLabel = new SimpleMatrix(model.numClasses, 1);\n    goldLabel.set(RNNCoreAnnotations.getGoldClass(tree), 1.0);\n\n    SimpleMatrix predictions = RNNCoreAnnotations.getPredictions(tree);\n\n    SimpleMatrix deltaClass = predictions.minus(goldLabel);\n    SimpleMatrix localCD = deltaClass.mult(RNNUtils.concatenateWithBias(currentVector).transpose());\n\n    double error = -(RNNUtils.elementwiseApplyLog(predictions).elementMult(goldLabel).elementSum());\n    RNNCoreAnnotations.setPredictionError(tree, error);\n\n    if (tree.isPreTerminal()) { // below us is a word vector\n      unaryCD.put(category, unaryCD.get(category).plus(localCD));\n\n      String word = tree.children()[0].label().value();\n      word = model.getVocabWord(word);\n\n      //SimpleMatrix currentVectorDerivative = RNNUtils.elementwiseApplyTanhDerivative(currentVector);\n      //SimpleMatrix deltaFromClass = model.getUnaryClassification(category).transpose().mult(deltaClass);\n      //SimpleMatrix deltaFull = deltaFromClass.extractMatrix(0, model.op.numHid, 0, 1).plus(deltaUp);\n      //SimpleMatrix wordDerivative = deltaFull.elementMult(currentVectorDerivative);\n      //wordVectorD.put(word, wordVectorD.get(word).plus(wordDerivative));\n\n      SimpleMatrix currentVectorDerivative = RNNUtils.elementwiseApplyTanhDerivative(currentVector);\n      SimpleMatrix deltaFromClass = model.getUnaryClassification(category).transpose().mult(deltaClass);\n      deltaFromClass = deltaFromClass.extractMatrix(0, model.op.numHid, 0, 1).elementMult(currentVectorDerivative);\n      SimpleMatrix deltaFull = deltaFromClass.plus(deltaUp);\n      wordVectorD.put(word, wordVectorD.get(word).plus(deltaFull));\n    } else {\n      // Otherwise, this must be a binary node\n      String leftCategory = model.basicCategory(tree.children()[0].label().value());\n      String rightCategory = model.basicCategory(tree.children()[1].label().value());\n      binaryCD.put(leftCategory, rightCategory, binaryCD.get(leftCategory, rightCategory).plus(localCD));\n      \n      SimpleMatrix currentVectorDerivative = RNNUtils.elementwiseApplyTanhDerivative(currentVector);\n      SimpleMatrix deltaFromClass = model.getBinaryClassification(leftCategory, rightCategory).transpose().mult(deltaClass);\n      deltaFromClass = deltaFromClass.extractMatrix(0, model.op.numHid, 0, 1).elementMult(currentVectorDerivative);\n      SimpleMatrix deltaFull = deltaFromClass.plus(deltaUp);\n      \n      SimpleMatrix leftVector = RNNCoreAnnotations.getNodeVector(tree.children()[0]);\n      SimpleMatrix rightVector = RNNCoreAnnotations.getNodeVector(tree.children()[1]);\n      SimpleMatrix childrenVector = RNNUtils.concatenateWithBias(leftVector, rightVector);\n      SimpleMatrix W_df = deltaFull.mult(childrenVector.transpose());\n      binaryTD.put(leftCategory, rightCategory, binaryTD.get(leftCategory, rightCategory).plus(W_df));\n      SimpleMatrix deltaDown;\n      if (model.op.useTensors) {\n        SimpleTensor Wt_df = getTensorGradient(deltaFull, leftVector, rightVector);\n        binaryTensorTD.put(leftCategory, rightCategory, binaryTensorTD.get(leftCategory, rightCategory).plus(Wt_df));\n        deltaDown = computeTensorDeltaDown(deltaFull, leftVector, rightVector, model.getBinaryTransform(leftCategory, rightCategory), model.getBinaryTensor(leftCategory, rightCategory));\n      } else {\n        deltaDown = model.getBinaryTransform(leftCategory, rightCategory).transpose().mult(deltaFull);\n      }\n\n      SimpleMatrix leftDerivative = RNNUtils.elementwiseApplyTanhDerivative(leftVector);\n      SimpleMatrix rightDerivative = RNNUtils.elementwiseApplyTanhDerivative(rightVector);\n      SimpleMatrix leftDeltaDown = deltaDown.extractMatrix(0, deltaFull.numRows(), 0, 1);\n      SimpleMatrix rightDeltaDown = deltaDown.extractMatrix(deltaFull.numRows(), deltaFull.numRows() * 2, 0, 1);\n      backpropDerivativesAndError(tree.children()[0], binaryTD, binaryCD, binaryTensorTD, unaryCD, wordVectorD, leftDerivative.elementMult(leftDeltaDown));\n      backpropDerivativesAndError(tree.children()[1], binaryTD, binaryCD, binaryTensorTD, unaryCD, wordVectorD, rightDerivative.elementMult(rightDeltaDown));\n    }\n  }","commit_id":"6787c557aff48b810b88680f30aeaec51e31cecf","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private void backpropDerivativesAndError(Tree tree, \n                                           TwoDimensionalMap<String, String, SimpleMatrix> binaryTD,\n                                           TwoDimensionalMap<String, String, SimpleMatrix> binaryCD,\n                                           TwoDimensionalMap<String, String, SimpleTensor> binaryTensorTD,\n                                           Map<String, SimpleMatrix> unaryCD,\n                                           Map<String, SimpleMatrix> wordVectorD,\n                                           SimpleMatrix deltaUp) {\n    if (tree.isLeaf()) {\n      return;\n    }\n\n    SimpleMatrix currentVector = RNNCoreAnnotations.getNodeVector(tree);\n    String category = tree.label().value();\n    category = model.basicCategory(category);\n\n    // TODO: factor this out somewhere?\n    SimpleMatrix goldLabel = new SimpleMatrix(model.numClasses, 1);\n    goldLabel.set(RNNCoreAnnotations.getGoldClass(tree), 1.0);\n\n    SimpleMatrix predictions = RNNCoreAnnotations.getPredictions(tree);\n\n    SimpleMatrix deltaClass = predictions.minus(goldLabel);\n    SimpleMatrix localCD = deltaClass.mult(RNNUtils.concatenateWithBias(currentVector).transpose());\n\n    double error = -(RNNUtils.elementwiseApplyLog(predictions).elementMult(goldLabel).elementSum());\n    RNNCoreAnnotations.setPredictionError(tree, error);\n\n    if (tree.isPreTerminal()) { // below us is a word vector\n      unaryCD.put(category, unaryCD.get(category).plus(localCD));\n\n      String word = tree.children()[0].label().value();\n      word = model.getVocabWord(word);\n\n      SimpleMatrix deltaFromClass = model.getUnaryClassification(category).transpose().mult(deltaClass);\n      SimpleMatrix deltaFull = deltaFromClass.extractMatrix(0, model.op.numHid, 0, 1).plus(deltaUp);\n\n      SimpleMatrix currentVectorDerivative = RNNUtils.elementwiseApplyTanhDerivative(currentVector);\n      SimpleMatrix wordDerivative = deltaFull.elementMult(currentVectorDerivative);\n      wordVectorD.put(word, wordVectorD.get(word).plus(wordDerivative));\n    } else {\n      // Otherwise, this must be a binary node\n      String leftCategory = model.basicCategory(tree.children()[0].label().value());\n      String rightCategory = model.basicCategory(tree.children()[1].label().value());\n      binaryCD.put(leftCategory, rightCategory, binaryCD.get(leftCategory, rightCategory).plus(localCD));\n      \n      SimpleMatrix deltaFromClass = model.getBinaryClassification(leftCategory, rightCategory).transpose().mult(deltaClass);\n      SimpleMatrix deltaFull = deltaFromClass.extractMatrix(0, model.op.numHid, 0, 1).plus(deltaUp);\n      \n      SimpleMatrix leftVector = RNNCoreAnnotations.getNodeVector(tree.children()[0]);\n      SimpleMatrix rightVector = RNNCoreAnnotations.getNodeVector(tree.children()[1]);\n      SimpleMatrix childrenVector = RNNUtils.concatenateWithBias(leftVector, rightVector);\n      SimpleMatrix W_df = deltaFull.mult(childrenVector.transpose());\n      binaryTD.put(leftCategory, rightCategory, binaryTD.get(leftCategory, rightCategory).plus(W_df));\n      SimpleMatrix deltaDown;\n      if (model.op.useTensors) {\n        SimpleTensor Wt_df = getTensorGradient(deltaFull, leftVector, rightVector);\n        binaryTensorTD.put(leftCategory, rightCategory, binaryTensorTD.get(leftCategory, rightCategory).plus(Wt_df));\n        deltaDown = computeTensorDeltaDown(deltaFull, leftVector, rightVector, model.getBinaryTransform(leftCategory, rightCategory), model.getBinaryTensor(leftCategory, rightCategory));\n      } else {\n        deltaDown = model.getBinaryTransform(leftCategory, rightCategory).transpose().mult(deltaFull);\n      }\n\n      SimpleMatrix leftDerivative = RNNUtils.elementwiseApplyTanhDerivative(leftVector);\n      SimpleMatrix rightDerivative = RNNUtils.elementwiseApplyTanhDerivative(rightVector);\n      SimpleMatrix leftDeltaDown = deltaDown.extractMatrix(0, deltaFull.numRows(), 0, 1);\n      SimpleMatrix rightDeltaDown = deltaDown.extractMatrix(deltaFull.numRows(), deltaFull.numRows() * 2, 0, 1);\n      backpropDerivativesAndError(tree.children()[0], binaryTD, binaryCD, binaryTensorTD, unaryCD, wordVectorD, leftDerivative.elementMult(leftDeltaDown));\n      backpropDerivativesAndError(tree.children()[1], binaryTD, binaryCD, binaryTensorTD, unaryCD, wordVectorD, rightDerivative.elementMult(rightDeltaDown));\n    }\n  }","id":15686,"modified_method":"private void backpropDerivativesAndError(Tree tree, \n                                           TwoDimensionalMap<String, String, SimpleMatrix> binaryTD,\n                                           TwoDimensionalMap<String, String, SimpleMatrix> binaryCD,\n                                           TwoDimensionalMap<String, String, SimpleTensor> binaryTensorTD,\n                                           Map<String, SimpleMatrix> unaryCD,\n                                           Map<String, SimpleMatrix> wordVectorD,\n                                           SimpleMatrix deltaUp) {\n    if (tree.isLeaf()) {\n      return;\n    }\n\n    SimpleMatrix currentVector = RNNCoreAnnotations.getNodeVector(tree);\n    String category = tree.label().value();\n    category = model.basicCategory(category);\n\n    // TODO: factor this out somewhere?\n    SimpleMatrix goldLabel = new SimpleMatrix(model.numClasses, 1);\n    goldLabel.set(RNNCoreAnnotations.getGoldClass(tree), 1.0);\n\n    SimpleMatrix predictions = RNNCoreAnnotations.getPredictions(tree);\n\n    SimpleMatrix deltaClass = predictions.minus(goldLabel);\n    SimpleMatrix localCD = deltaClass.mult(RNNUtils.concatenateWithBias(currentVector).transpose());\n\n    double error = -(RNNUtils.elementwiseApplyLog(predictions).elementMult(goldLabel).elementSum());\n    RNNCoreAnnotations.setPredictionError(tree, error);\n\n    if (tree.isPreTerminal()) { // below us is a word vector\n      unaryCD.put(category, unaryCD.get(category).plus(localCD));\n\n      String word = tree.children()[0].label().value();\n      word = model.getVocabWord(word);\n\n      //SimpleMatrix currentVectorDerivative = RNNUtils.elementwiseApplyTanhDerivative(currentVector);\n      //SimpleMatrix deltaFromClass = model.getUnaryClassification(category).transpose().mult(deltaClass);\n      //SimpleMatrix deltaFull = deltaFromClass.extractMatrix(0, model.op.numHid, 0, 1).plus(deltaUp);\n      //SimpleMatrix wordDerivative = deltaFull.elementMult(currentVectorDerivative);\n      //wordVectorD.put(word, wordVectorD.get(word).plus(wordDerivative));\n\n      SimpleMatrix currentVectorDerivative = RNNUtils.elementwiseApplyTanhDerivative(currentVector);\n      SimpleMatrix deltaFromClass = model.getUnaryClassification(category).transpose().mult(deltaClass);\n      deltaFromClass = deltaFromClass.extractMatrix(0, model.op.numHid, 0, 1).elementMult(currentVectorDerivative);\n      SimpleMatrix deltaFull = deltaFromClass.plus(deltaUp);\n      wordVectorD.put(word, wordVectorD.get(word).plus(deltaFull));\n    } else {\n      // Otherwise, this must be a binary node\n      String leftCategory = model.basicCategory(tree.children()[0].label().value());\n      String rightCategory = model.basicCategory(tree.children()[1].label().value());\n      binaryCD.put(leftCategory, rightCategory, binaryCD.get(leftCategory, rightCategory).plus(localCD));\n      \n      SimpleMatrix currentVectorDerivative = RNNUtils.elementwiseApplyTanhDerivative(currentVector);\n      SimpleMatrix deltaFromClass = model.getBinaryClassification(leftCategory, rightCategory).transpose().mult(deltaClass);\n      deltaFromClass = deltaFromClass.extractMatrix(0, model.op.numHid, 0, 1).elementMult(currentVectorDerivative);\n      SimpleMatrix deltaFull = deltaFromClass.plus(deltaUp);\n      \n      SimpleMatrix leftVector = RNNCoreAnnotations.getNodeVector(tree.children()[0]);\n      SimpleMatrix rightVector = RNNCoreAnnotations.getNodeVector(tree.children()[1]);\n      SimpleMatrix childrenVector = RNNUtils.concatenateWithBias(leftVector, rightVector);\n      SimpleMatrix W_df = deltaFull.mult(childrenVector.transpose());\n      binaryTD.put(leftCategory, rightCategory, binaryTD.get(leftCategory, rightCategory).plus(W_df));\n      SimpleMatrix deltaDown;\n      if (model.op.useTensors) {\n        SimpleTensor Wt_df = getTensorGradient(deltaFull, leftVector, rightVector);\n        binaryTensorTD.put(leftCategory, rightCategory, binaryTensorTD.get(leftCategory, rightCategory).plus(Wt_df));\n        deltaDown = computeTensorDeltaDown(deltaFull, leftVector, rightVector, model.getBinaryTransform(leftCategory, rightCategory), model.getBinaryTensor(leftCategory, rightCategory));\n      } else {\n        deltaDown = model.getBinaryTransform(leftCategory, rightCategory).transpose().mult(deltaFull);\n      }\n\n      SimpleMatrix leftDerivative = RNNUtils.elementwiseApplyTanhDerivative(leftVector);\n      SimpleMatrix rightDerivative = RNNUtils.elementwiseApplyTanhDerivative(rightVector);\n      SimpleMatrix leftDeltaDown = deltaDown.extractMatrix(0, deltaFull.numRows(), 0, 1);\n      SimpleMatrix rightDeltaDown = deltaDown.extractMatrix(deltaFull.numRows(), deltaFull.numRows() * 2, 0, 1);\n      backpropDerivativesAndError(tree.children()[0], binaryTD, binaryCD, binaryTensorTD, unaryCD, wordVectorD, leftDerivative.elementMult(leftDeltaDown));\n      backpropDerivativesAndError(tree.children()[1], binaryTD, binaryCD, binaryTensorTD, unaryCD, wordVectorD, rightDerivative.elementMult(rightDeltaDown));\n    }\n  }","commit_id":"0fd04fda9ee52cc3950bdd17cb76ae60fb6165fc","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private void backpropDerivativesAndError(Tree tree, \n                                           TwoDimensionalMap<String, String, SimpleMatrix> binaryTD,\n                                           TwoDimensionalMap<String, String, SimpleMatrix> binaryCD,\n                                           TwoDimensionalMap<String, String, SimpleTensor> binaryTensorTD,\n                                           Map<String, SimpleMatrix> unaryCD,\n                                           Map<String, SimpleMatrix> wordVectorD,\n                                           SimpleMatrix deltaUp) {\n    if (tree.isLeaf()) {\n      return;\n    }\n\n    SimpleMatrix currentVector = RNNCoreAnnotations.getNodeVector(tree);\n    String category = tree.label().value();\n    category = model.basicCategory(category);\n\n    // TODO: factor this out somewhere?\n    SimpleMatrix goldLabel = new SimpleMatrix(model.numClasses, 1);\n    goldLabel.set(RNNCoreAnnotations.getGoldClass(tree), 1.0);\n\n    SimpleMatrix predictions = RNNCoreAnnotations.getPredictions(tree);\n\n    SimpleMatrix deltaClass = predictions.minus(goldLabel);\n    SimpleMatrix localCD = deltaClass.mult(RNNUtils.concatenateWithBias(currentVector).transpose());\n\n    double error = -(RNNUtils.elementwiseApplyLog(predictions).elementMult(goldLabel).elementSum());\n    RNNCoreAnnotations.setPredictionError(tree, error);\n\n    if (tree.isPreTerminal()) { // below us is a word vector\n      unaryCD.put(category, unaryCD.get(category).plus(localCD));\n\n      String word = tree.children()[0].label().value();\n      word = model.getVocabWord(word);\n\n      SimpleMatrix deltaFromClass = model.getUnaryClassification(category).transpose().mult(deltaClass);\n      SimpleMatrix deltaFull = deltaFromClass.extractMatrix(0, model.op.numHid, 0, 1).plus(deltaUp);\n\n      SimpleMatrix currentVectorDerivative = RNNUtils.elementwiseApplyTanhDerivative(currentVector);\n      SimpleMatrix wordDerivative = deltaFull.elementMult(currentVectorDerivative);\n      wordVectorD.put(word, wordVectorD.get(word).plus(wordDerivative));\n    } else {\n      // Otherwise, this must be a binary node\n      String leftCategory = model.basicCategory(tree.children()[0].label().value());\n      String rightCategory = model.basicCategory(tree.children()[1].label().value());\n      binaryCD.put(leftCategory, rightCategory, binaryCD.get(leftCategory, rightCategory).plus(localCD));\n      \n      SimpleMatrix deltaFromClass = model.getBinaryClassification(leftCategory, rightCategory).transpose().mult(deltaClass);\n      SimpleMatrix deltaFull = deltaFromClass.extractMatrix(0, model.op.numHid, 0, 1).plus(deltaUp);\n      \n      SimpleMatrix leftVector = RNNCoreAnnotations.getNodeVector(tree.children()[0]);\n      SimpleMatrix rightVector = RNNCoreAnnotations.getNodeVector(tree.children()[1]);\n      SimpleMatrix childrenVector = RNNUtils.concatenateWithBias(leftVector, rightVector);\n      SimpleMatrix W_df = deltaFull.mult(childrenVector.transpose());\n      binaryTD.put(leftCategory, rightCategory, binaryTD.get(leftCategory, rightCategory).plus(W_df));\n      SimpleMatrix deltaDown;\n      if (model.op.useTensors) {\n        SimpleTensor Wt_df = getTensorGradient(deltaFull, leftVector, rightVector);\n        binaryTensorTD.put(leftCategory, rightCategory, binaryTensorTD.get(leftCategory, rightCategory).plus(Wt_df));\n        deltaDown = computeTensorDeltaDown(deltaFull, leftVector, rightVector, model.getBinaryTransform(leftCategory, rightCategory), model.getBinaryTensor(leftCategory, rightCategory));\n      } else {\n        deltaDown = model.getBinaryTransform(leftCategory, rightCategory).transpose().mult(deltaFull);\n      }\n\n      SimpleMatrix leftDerivative = RNNUtils.elementwiseApplyTanhDerivative(leftVector);\n      SimpleMatrix rightDerivative = RNNUtils.elementwiseApplyTanhDerivative(rightVector);\n      SimpleMatrix leftDeltaDown = deltaDown.extractMatrix(0, deltaFull.numRows(), 0, 1);\n      SimpleMatrix rightDeltaDown = deltaDown.extractMatrix(deltaFull.numRows(), deltaFull.numRows() * 2, 0, 1);\n      backpropDerivativesAndError(tree.children()[0], binaryTD, binaryCD, binaryTensorTD, unaryCD, wordVectorD, leftDerivative.elementMult(leftDeltaDown));\n      backpropDerivativesAndError(tree.children()[1], binaryTD, binaryCD, binaryTensorTD, unaryCD, wordVectorD, rightDerivative.elementMult(rightDeltaDown));\n    }\n  }","id":15687,"modified_method":"private void backpropDerivativesAndError(Tree tree, \n                                           TwoDimensionalMap<String, String, SimpleMatrix> binaryTD,\n                                           TwoDimensionalMap<String, String, SimpleMatrix> binaryCD,\n                                           TwoDimensionalMap<String, String, SimpleTensor> binaryTensorTD,\n                                           Map<String, SimpleMatrix> unaryCD,\n                                           Map<String, SimpleMatrix> wordVectorD,\n                                           SimpleMatrix deltaUp) {\n    if (tree.isLeaf()) {\n      return;\n    }\n\n    SimpleMatrix currentVector = RNNCoreAnnotations.getNodeVector(tree);\n    String category = tree.label().value();\n    category = model.basicCategory(category);\n\n    // TODO: factor this out somewhere?\n    SimpleMatrix goldLabel = new SimpleMatrix(model.numClasses, 1);\n    goldLabel.set(RNNCoreAnnotations.getGoldClass(tree), 1.0);\n\n    SimpleMatrix predictions = RNNCoreAnnotations.getPredictions(tree);\n\n    SimpleMatrix deltaClass = predictions.minus(goldLabel);\n    SimpleMatrix localCD = deltaClass.mult(RNNUtils.concatenateWithBias(currentVector).transpose());\n\n    double error = -(RNNUtils.elementwiseApplyLog(predictions).elementMult(goldLabel).elementSum());\n    RNNCoreAnnotations.setPredictionError(tree, error);\n\n    if (tree.isPreTerminal()) { // below us is a word vector\n      unaryCD.put(category, unaryCD.get(category).plus(localCD));\n\n      String word = tree.children()[0].label().value();\n      word = model.getVocabWord(word);\n\n      //SimpleMatrix currentVectorDerivative = RNNUtils.elementwiseApplyTanhDerivative(currentVector);\n      //SimpleMatrix deltaFromClass = model.getUnaryClassification(category).transpose().mult(deltaClass);\n      //SimpleMatrix deltaFull = deltaFromClass.extractMatrix(0, model.op.numHid, 0, 1).plus(deltaUp);\n      //SimpleMatrix wordDerivative = deltaFull.elementMult(currentVectorDerivative);\n      //wordVectorD.put(word, wordVectorD.get(word).plus(wordDerivative));\n\n      SimpleMatrix currentVectorDerivative = RNNUtils.elementwiseApplyTanhDerivative(currentVector);\n      SimpleMatrix deltaFromClass = model.getUnaryClassification(category).transpose().mult(deltaClass);\n      deltaFromClass = deltaFromClass.extractMatrix(0, model.op.numHid, 0, 1).elementMult(currentVectorDerivative);\n      SimpleMatrix deltaFull = deltaFromClass.plus(deltaUp);\n      wordVectorD.put(word, wordVectorD.get(word).plus(deltaFull));\n    } else {\n      // Otherwise, this must be a binary node\n      String leftCategory = model.basicCategory(tree.children()[0].label().value());\n      String rightCategory = model.basicCategory(tree.children()[1].label().value());\n      binaryCD.put(leftCategory, rightCategory, binaryCD.get(leftCategory, rightCategory).plus(localCD));\n      \n      SimpleMatrix currentVectorDerivative = RNNUtils.elementwiseApplyTanhDerivative(currentVector);\n      SimpleMatrix deltaFromClass = model.getBinaryClassification(leftCategory, rightCategory).transpose().mult(deltaClass);\n      deltaFromClass = deltaFromClass.extractMatrix(0, model.op.numHid, 0, 1).elementMult(currentVectorDerivative);\n      SimpleMatrix deltaFull = deltaFromClass.plus(deltaUp);\n      \n      SimpleMatrix leftVector = RNNCoreAnnotations.getNodeVector(tree.children()[0]);\n      SimpleMatrix rightVector = RNNCoreAnnotations.getNodeVector(tree.children()[1]);\n      SimpleMatrix childrenVector = RNNUtils.concatenateWithBias(leftVector, rightVector);\n      SimpleMatrix W_df = deltaFull.mult(childrenVector.transpose());\n      binaryTD.put(leftCategory, rightCategory, binaryTD.get(leftCategory, rightCategory).plus(W_df));\n      SimpleMatrix deltaDown;\n      if (model.op.useTensors) {\n        SimpleTensor Wt_df = getTensorGradient(deltaFull, leftVector, rightVector);\n        binaryTensorTD.put(leftCategory, rightCategory, binaryTensorTD.get(leftCategory, rightCategory).plus(Wt_df));\n        deltaDown = computeTensorDeltaDown(deltaFull, leftVector, rightVector, model.getBinaryTransform(leftCategory, rightCategory), model.getBinaryTensor(leftCategory, rightCategory));\n      } else {\n        deltaDown = model.getBinaryTransform(leftCategory, rightCategory).transpose().mult(deltaFull);\n      }\n\n      SimpleMatrix leftDerivative = RNNUtils.elementwiseApplyTanhDerivative(leftVector);\n      SimpleMatrix rightDerivative = RNNUtils.elementwiseApplyTanhDerivative(rightVector);\n      SimpleMatrix leftDeltaDown = deltaDown.extractMatrix(0, deltaFull.numRows(), 0, 1);\n      SimpleMatrix rightDeltaDown = deltaDown.extractMatrix(deltaFull.numRows(), deltaFull.numRows() * 2, 0, 1);\n      backpropDerivativesAndError(tree.children()[0], binaryTD, binaryCD, binaryTensorTD, unaryCD, wordVectorD, leftDerivative.elementMult(leftDeltaDown));\n      backpropDerivativesAndError(tree.children()[1], binaryTD, binaryCD, binaryTensorTD, unaryCD, wordVectorD, rightDerivative.elementMult(rightDeltaDown));\n    }\n  }","commit_id":"0b57e784358d0f004ff3eff9a5367f483faf024d","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public void testAddPageMB() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":15688,"modified_method":"public void testAddPageMB() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"5f95926ae0293bce477a97da56b0b549449d98e7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletMB() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"m\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Message Boards']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Message Boards']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":15689,"modified_method":"public void testAddPortletMB() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Message Boards']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Message Boards']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"5f95926ae0293bce477a97da56b0b549449d98e7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertImportLAR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st Cat\\u00e9gory\\nThis is a t\\u00e9st cat\\u00e9gory!\"),\n\t\t\tselenium.getText(\"//td[1]/a[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\\nThis is a t\\u00e9st cat\\u00e9gory edited!\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 Edited\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[2]/div[2]/div/div[1]/table/tbody/tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[4]/td[1]/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\"),\n\t\t\tselenium.getText(\"//td[2]/div[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is a second reply message.\"),\n\t\t\tselenium.getText(\"//div[5]/table/tbody/tr[1]/td[2]/div[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is a third reply message.\"),\n\t\t\tselenium.getText(\"//div[6]/table/tbody/tr[1]/td[2]/div[2]\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//tr[4]/td[1]/a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Moved to Sujr\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t}","id":15690,"modified_method":"public void testAssertImportLAR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st Cat\\u00e9gory\\nThis is a t\\u00e9st cat\\u00e9gory!\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"2\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"2\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"4\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\\nThis is a t\\u00e9st cat\\u00e9gory edited!\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//tr[4]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//tr[4]/td[4]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a[1]\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st Cat\\u00e9gory\\nThis is a t\\u00e9st cat\\u00e9gory!\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"2\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"4\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 Edited\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[2]/div[2]/div/div[1]/table/tbody/tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[2]/div[2]/div/div[1]/table/tbody/tr[3]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[2]/div[2]/div/div[1]/table/tbody/tr[3]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[4]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"3\"),\n\t\t\tselenium.getText(\"//tr[4]/td[4]/a\"));\n\t\tselenium.clickAt(\"//tr[4]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='thread-body'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is a second reply message.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='thread-body'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is a third reply message.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='thread-body'])[3]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a/strong\"));\n\t\tselenium.clickAt(\"//tr[4]/td[1]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Moved to Sujr\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\", RuntimeVariables.replace(\"Moved to Sujr\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Trust and paths will be straightened.\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t}","commit_id":"5f95926ae0293bce477a97da56b0b549449d98e7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTest(AddCategoryTests.suite());\n\t\ttestSuite.addTest(AddCategoryMultipleTests.suite());\n\t\ttestSuite.addTest(AddCategoryNameNullTests.suite());\n\t\ttestSuite.addTest(AddSubcategoryTests.suite());\n\t\ttestSuite.addTest(AddSubcategoryMultipleTests.suite());\n\t\ttestSuite.addTest(AddSubcategoryNameNullTests.suite());\n\t\ttestSuite.addTest(DeleteCategoryTests.suite());\n\t\ttestSuite.addTest(EditCategoryTests.suite());\n\n\t\treturn testSuite;\n\t}","id":15691,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTest(AddCategoryTests.suite());\n\t\ttestSuite.addTest(AddCategoryMultipleTests.suite());\n\t\ttestSuite.addTest(AddCategoryNameNullTests.suite());\n\t\ttestSuite.addTest(AddMBCategoryNameUtf8Tests.suite());\n\t\ttestSuite.addTest(AddSubcategoryTests.suite());\n\t\ttestSuite.addTest(AddSubcategoryMultipleTests.suite());\n\t\ttestSuite.addTest(AddSubcategoryNameNullTests.suite());\n\t\ttestSuite.addTest(DeleteCategoryTests.suite());\n\t\ttestSuite.addTest(EditCategoryTests.suite());\n\n\t\treturn testSuite;\n\t}","commit_id":"5f95926ae0293bce477a97da56b0b549449d98e7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testImportLAR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\messageboards\\\\lar\\\\importlar\\\\dependencies\\\\Message_Boards-Selenium.portlet.lar\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\"_86_DELETE_PORTLET_DATACheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_86_DELETE_PORTLET_DATACheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tassertTrue(selenium.isChecked(\"_86_DELETE_PORTLET_DATACheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\"_86_PORTLET_DATACheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_86_PORTLET_DATACheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tassertTrue(selenium.isChecked(\"_86_PORTLET_DATACheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Import']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div\"));\n\t}","id":15692,"modified_method":"public void testImportLAR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[6]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[4]/div/ul/li[6]/a\",\n\t\t\tRuntimeVariables.replace(\"Manage Content\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//ul[@class='category-portlets']/li[6]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Message Boards\"),\n\t\t\tselenium.getText(\"//ul[@class='category-portlets']/li[6]/a\"));\n\t\tselenium.clickAt(\"//ul[@class='category-portlets']/li[6]/a\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[2]/div/div/div/div/div/div/section/header/menu/span/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//div[2]/div/div/div/div/div/div/section/header/menu/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//a[@id='_162_xafr']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Export / Import\"),\n\t\t\tselenium.getText(\"//a[@id='_162_xafr']\"));\n\t\tselenium.clickAt(\"//a[@id='_162_xafr']\",\n\t\t\tRuntimeVariables.replace(\"Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_86_importFileName']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\messageboards\\\\lar\\\\importlar\\\\dependencies\\\\Message_Boards-Selenium.portlet.lar\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_DELETE_PORTLET_DATACheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_86_DELETE_PORTLET_DATACheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Delete portlet data before importing.\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_DELETE_PORTLET_DATACheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_PORTLET_DATACheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_86_PORTLET_DATACheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Data\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_86_PORTLET_DATACheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Import']\",\n\t\t\tRuntimeVariables.replace(\"Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"5f95926ae0293bce477a97da56b0b549449d98e7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownMBCategory() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean category1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!category1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean category2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!category2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean category3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!category3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean category4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!category4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean category5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!category5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":15693,"modified_method":"public void testTearDownMBCategory() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean category1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!category1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[5]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean category2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!category2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[5]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean category3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!category3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[5]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean category4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!category4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[5]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean category5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!category5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[5]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"5f95926ae0293bce477a97da56b0b549449d98e7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownMBMessage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean mbMessage1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!mbMessage1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean mbMessage2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!mbMessage2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean mbMessage3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!mbMessage3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean mbMessage4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!mbMessage4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean mbMessage5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!mbMessage5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":15694,"modified_method":"public void testTearDownMBMessage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean mbMessage1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!mbMessage1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean mbMessage2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!mbMessage2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean mbMessage3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!mbMessage3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean mbMessage4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!mbMessage4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean mbMessage5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!mbMessage5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"5f95926ae0293bce477a97da56b0b549449d98e7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":15695,"modified_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"5f95926ae0293bce477a97da56b0b549449d98e7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWikiPageAttachment2Site() throws Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Wiki Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[4]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1 Attachment\"),\n\t\t\tselenium.getText(\"//div[6]/div[1]/span[2]/a/span\"));\n\t\tselenium.clickAt(\"//div[6]/div[1]/span[2]/a/span\",\n\t\t\tRuntimeVariables.replace(\"1 Attachment\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Attachments']\",\n\t\t\tRuntimeVariables.replace(\"Add Attachments\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.windowFocus();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//a[@class='use-fallback using-new-uploader']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//a[@class='use-fallback using-new-uploader']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_36_file1']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input[@id='_36_file1']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\liferay-portal\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portal\\\\controlpanel\\\\socialactivity\\\\wikipage\\\\dependencies\\\\Wiki_Attachment2.jpg\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki_Attachment2.jpg\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Showing 2 result.\"),\n\t\t\tselenium.getText(\"//div[@class='search-results']\"));\n\t}","id":15696,"modified_method":"public void testAddWikiPageAttachment2Site() throws Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Wiki Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Wiki Page Title')]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Wiki Page Title')]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1 Attachment\"),\n\t\t\tselenium.getText(\"//div[6]/div[1]/span[2]/a/span\"));\n\t\tselenium.clickAt(\"//div[6]/div[1]/span[2]/a/span\",\n\t\t\tRuntimeVariables.replace(\"1 Attachment\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Attachments']\",\n\t\t\tRuntimeVariables.replace(\"Add Attachments\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.windowFocus();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//a[@class='use-fallback using-new-uploader']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//a[@class='use-fallback using-new-uploader']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_36_file1']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input[@id='_36_file1']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portal\\\\controlpanel\\\\socialactivity\\\\usecase\\\\wikipage\\\\dependencies\\\\Wiki_Attachment2.jpg\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki_Attachment.jpg\"),\n\t\t\tselenium.getText(\"//td[contains(.,'Wiki_Attachment')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki_Attachment2.jpg\"),\n\t\t\tselenium.getText(\"//td[contains(.,'Wiki_Attachment2')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Showing 2 results.\"),\n\t\t\tselenium.getText(\"//div[@class='search-results']\"));\n\t}","commit_id":"f764148d3961a34ac6939850c3bac986f5aadb92","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWikiPageSite() throws Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Wiki Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page does not exist yet. Use the form below to create it.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tThread.sleep(5000);\n\t\tselenium.type(\"//input[@id='_36_title']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__36_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__36_editor']/iframe\");\n\t\tselenium.type(\"//body\", RuntimeVariables.replace(\"Wiki Page Content\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[4]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":15697,"modified_method":"public void testAddWikiPageSite() throws Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Wiki Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page does not exist yet. Use the form below to create it.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.type(\"//input[@id='_36_title']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//textarea[@id='_36_editor' and @style='display: none;']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//a[@class='cke_button_source cke_on']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__36_editor']/textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//td[@id='cke_contents__36_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//textarea[@id='_36_editor' and @style='display: none;']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[@id='cke_contents__36_editor']/iframe\"));\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__36_editor']/iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Wiki Page Content\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\"//body\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//tr/td[contains(.,'Wiki Page Title')]/a\"));\n\t\tselenium.clickAt(\"//tr/td[contains(.,'Wiki Page Title')]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"f764148d3961a34ac6939850c3bac986f5aadb92","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletAddCounter1WikiPageUpdates()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=User Statistics Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=User Statistics Test Page\",\n\t\t\tRuntimeVariables.replace(\"User Statistics Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\"));\n\t\tselenium.click(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//iframe[@id='_180_configurationIframeDialog']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id='_180_configurationIframeDialog']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//select[@id='_86_displayActivityCounterName0']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.select(\"//select[@id='_86_displayActivityCounterName0']\",\n\t\t\tRuntimeVariables.replace(\"label=User's Wiki Page Updates\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"User's Wiki Page Updates\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_86_displayActivityCounterName0']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":15698,"modified_method":"public void testConfigurePortletAddCounter1WikiPageUpdates()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=User Statistics Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=User Statistics Test Page\",\n\t\t\tRuntimeVariables.replace(\"User Statistics Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"User Statistics\"),\n\t\t\tselenium.getText(\"//span[@class='portlet-title-text']\"));\n\t\tselenium.clickAt(\"//span[@class='portlet-title-text']\",\n\t\t\tRuntimeVariables.replace(\"User Statistics\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@class='yui3-dd-shim']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\"));\n\t\tselenium.click(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//iframe[@id='_180_configurationIframeDialog']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id='_180_configurationIframeDialog']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//select[@id='_86_displayActivityCounterName0']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.select(\"//select[@id='_86_displayActivityCounterName0']\",\n\t\t\tRuntimeVariables.replace(\"User's Wiki Page Updates\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"User's Wiki Page Updates\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_86_displayActivityCounterName0']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f764148d3961a34ac6939850c3bac986f5aadb92","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletAddCounter2Attachments()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=User Statistics Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=User Statistics Test Page\",\n\t\t\tRuntimeVariables.replace(\"User Statistics Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\"));\n\t\tselenium.click(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//iframe[@id='_180_configurationIframeDialog']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id='_180_configurationIframeDialog']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//button[contains(@class,'add-row')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//button[contains(@class,'add-row')]\",\n\t\t\tRuntimeVariables.replace(\"+\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//select[@id='_86_displayActivityCounterName2']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.select(\"//select[@id='_86_displayActivityCounterName2']\",\n\t\t\tRuntimeVariables.replace(\"label=User's Attachments\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"User's Attachments\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_86_displayActivityCounterName2']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":15699,"modified_method":"public void testConfigurePortletAddCounter2Attachments()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=User Statistics Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=User Statistics Test Page\",\n\t\t\tRuntimeVariables.replace(\"User Statistics Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"User Statistics\"),\n\t\t\tselenium.getText(\"//span[@class='portlet-title-text']\"));\n\t\tselenium.clickAt(\"//span[@class='portlet-title-text']\",\n\t\t\tRuntimeVariables.replace(\"User Statistics\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@class='yui3-dd-shim']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\"));\n\t\tselenium.click(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//iframe[@id='_180_configurationIframeDialog']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id='_180_configurationIframeDialog']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//button[contains(@class,'add-row')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//button[contains(@class,'add-row')]\",\n\t\t\tRuntimeVariables.replace(\"+\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//select[@id='_86_displayActivityCounterName2']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.select(\"//select[@id='_86_displayActivityCounterName2']\",\n\t\t\tRuntimeVariables.replace(\"User's Attachments\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"User's Attachments\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_86_displayActivityCounterName2']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f764148d3961a34ac6939850c3bac986f5aadb92","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletAddCounter3Comments()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=User Statistics Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=User Statistics Test Page\",\n\t\t\tRuntimeVariables.replace(\"User Statistics Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\"));\n\t\tselenium.click(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//iframe[@id='_180_configurationIframeDialog']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id='_180_configurationIframeDialog']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//button[contains(@class,'add-row')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//button[contains(@class,'add-row')]\",\n\t\t\tRuntimeVariables.replace(\"+\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//select[@id='_86_displayActivityCounterName3']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.select(\"//select[@id='_86_displayActivityCounterName3']\",\n\t\t\tRuntimeVariables.replace(\"label=User's Comments\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"User's Comments\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_86_displayActivityCounterName3']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":15700,"modified_method":"public void testConfigurePortletAddCounter3Comments()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=User Statistics Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=User Statistics Test Page\",\n\t\t\tRuntimeVariables.replace(\"User Statistics Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"User Statistics\"),\n\t\t\tselenium.getText(\"//span[@class='portlet-title-text']\"));\n\t\tselenium.clickAt(\"//span[@class='portlet-title-text']\",\n\t\t\tRuntimeVariables.replace(\"User Statistics\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@class='yui3-dd-shim']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\"));\n\t\tselenium.click(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//iframe[@id='_180_configurationIframeDialog']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id='_180_configurationIframeDialog']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//button[contains(@class,'add-row')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//button[contains(@class,'add-row')]\",\n\t\t\tRuntimeVariables.replace(\"+\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//select[@id='_86_displayActivityCounterName3']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.select(\"//select[@id='_86_displayActivityCounterName3']\",\n\t\t\tRuntimeVariables.replace(\"User's Comments\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"User's Comments\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_86_displayActivityCounterName3']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f764148d3961a34ac6939850c3bac986f5aadb92","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletAddCounter4Subscriptions()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=User Statistics Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=User Statistics Test Page\",\n\t\t\tRuntimeVariables.replace(\"User Statistics Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\"));\n\t\tselenium.click(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//iframe[@id='_180_configurationIframeDialog']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id='_180_configurationIframeDialog']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//button[contains(@class,'add-row')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//button[contains(@class,'add-row')]\",\n\t\t\tRuntimeVariables.replace(\"+\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//select[@id='_86_displayActivityCounterName4']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.select(\"//select[@id='_86_displayActivityCounterName4']\",\n\t\t\tRuntimeVariables.replace(\"label=User's Subscriptions\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"User's Subscriptions\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_86_displayActivityCounterName4']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":15701,"modified_method":"public void testConfigurePortletAddCounter4Subscriptions()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=User Statistics Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=User Statistics Test Page\",\n\t\t\tRuntimeVariables.replace(\"User Statistics Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"User Statistics\"),\n\t\t\tselenium.getText(\"//span[@class='portlet-title-text']\"));\n\t\tselenium.clickAt(\"//span[@class='portlet-title-text']\",\n\t\t\tRuntimeVariables.replace(\"User Statistics\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@class='yui3-dd-shim']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\"));\n\t\tselenium.click(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//iframe[@id='_180_configurationIframeDialog']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id='_180_configurationIframeDialog']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//button[contains(@class,'add-row')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//button[contains(@class,'add-row')]\",\n\t\t\tRuntimeVariables.replace(\"+\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//select[@id='_86_displayActivityCounterName4']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.select(\"//select[@id='_86_displayActivityCounterName4']\",\n\t\t\tRuntimeVariables.replace(\"User's Subscriptions\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"User's Subscriptions\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_86_displayActivityCounterName4']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f764148d3961a34ac6939850c3bac986f5aadb92","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletAddCounter5WikiPage()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=User Statistics Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=User Statistics Test Page\",\n\t\t\tRuntimeVariables.replace(\"User Statistics Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\"));\n\t\tselenium.click(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//iframe[@id='_180_configurationIframeDialog']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id='_180_configurationIframeDialog']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//button[contains(@class,'add-row')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//button[contains(@class,'add-row')]\",\n\t\t\tRuntimeVariables.replace(\"+\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//select[@id='_86_displayActivityCounterName5']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.select(\"//select[@id='_86_displayActivityCounterName5']\",\n\t\t\tRuntimeVariables.replace(\"label=User's Wiki Pages\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"User's Wiki Pages\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_86_displayActivityCounterName5']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":15702,"modified_method":"public void testConfigurePortletAddCounter5WikiPage()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=User Statistics Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=User Statistics Test Page\",\n\t\t\tRuntimeVariables.replace(\"User Statistics Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"User Statistics\"),\n\t\t\tselenium.getText(\"//span[@class='portlet-title-text']\"));\n\t\tselenium.clickAt(\"//span[@class='portlet-title-text']\",\n\t\t\tRuntimeVariables.replace(\"User Statistics\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@class='yui3-dd-shim']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\"));\n\t\tselenium.click(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//iframe[@id='_180_configurationIframeDialog']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id='_180_configurationIframeDialog']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//button[contains(@class,'add-row')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//button[contains(@class,'add-row')]\",\n\t\t\tRuntimeVariables.replace(\"+\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//select[@id='_86_displayActivityCounterName5']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.select(\"//select[@id='_86_displayActivityCounterName5']\",\n\t\t\tRuntimeVariables.replace(\"User's Wiki Pages\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"User's Wiki Pages\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_86_displayActivityCounterName5']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f764148d3961a34ac6939850c3bac986f5aadb92","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletShowHeaderTextOff()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/site-name/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=User Statistics Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=User Statistics Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"User Statistics Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\"));\n\t\t\t\tselenium.click(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//iframe[@id='_180_configurationIframeDialog']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[@id='_180_configurationIframeDialog']\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//input[@id='_86_showHeaderTextCheckbox']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tboolean showHeaderTextChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showHeaderTextCheckbox']\");\n\n\t\t\t\tif (!showHeaderTextChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_showHeaderTextCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Show Header Text\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showHeaderTextCheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showHeaderTextCheckbox']\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":15703,"modified_method":"public void testConfigurePortletShowHeaderTextOff()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/site-name/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=User Statistics Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=User Statistics Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"User Statistics Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"User Statistics\"),\n\t\t\t\t\tselenium.getText(\"//span[@class='portlet-title-text']\"));\n\t\t\t\tselenium.clickAt(\"//span[@class='portlet-title-text']\",\n\t\t\t\t\tRuntimeVariables.replace(\"User Statistics\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='yui3-dd-shim']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\"));\n\t\t\t\tselenium.click(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//iframe[@id='_180_configurationIframeDialog']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[@id='_180_configurationIframeDialog']\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//input[@id='_86_showHeaderTextCheckbox']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tboolean showHeaderTextChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showHeaderTextCheckbox']\");\n\n\t\t\t\tif (!showHeaderTextChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_showHeaderTextCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Show Header Text\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showHeaderTextCheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showHeaderTextCheckbox']\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f764148d3961a34ac6939850c3bac986f5aadb92","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletShowTotalsOff() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/site-name/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=User Statistics Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=User Statistics Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"User Statistics Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\"));\n\t\t\t\tselenium.click(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//iframe[@id='_180_configurationIframeDialog']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[@id='_180_configurationIframeDialog']\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//input[@id='_86_showTotalsCheckbox']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tboolean showTotalsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showTotalsCheckbox']\");\n\n\t\t\t\tif (!showTotalsChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_showTotalsCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Show Totals\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showTotalsCheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showTotalsCheckbox']\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":15704,"modified_method":"public void testConfigurePortletShowTotalsOff() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/site-name/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=User Statistics Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=User Statistics Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"User Statistics Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"User Statistics\"),\n\t\t\t\t\tselenium.getText(\"//span[@class='portlet-title-text']\"));\n\t\t\t\tselenium.clickAt(\"//span[@class='portlet-title-text']\",\n\t\t\t\t\tRuntimeVariables.replace(\"User Statistics\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='yui3-dd-shim']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\"));\n\t\t\t\tselenium.click(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//iframe[@id='_180_configurationIframeDialog']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[@id='_180_configurationIframeDialog']\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//input[@id='_86_showTotalsCheckbox']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tboolean showTotalsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showTotalsCheckbox']\");\n\n\t\t\t\tif (!showTotalsChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_showTotalsCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Show Totals\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showTotalsCheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showTotalsCheckbox']\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f764148d3961a34ac6939850c3bac986f5aadb92","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditWikiPageSite() throws Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Wiki Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[4]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//a[@id='_36_mefv']/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//a[@id='_36_mefv']/span\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__36_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[@id='cke_contents__36_editor']/iframe\"));\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__36_editor']/iframe\");\n\t\tThread.sleep(5000);\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Content Edit\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.click(RuntimeVariables.replace(\"_36_publishButton\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"Your request completed successfully.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//section/div/div/div/div[1]\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Content Edit\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":15705,"modified_method":"public void testEditWikiPageSite() throws Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Wiki Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Wiki Page Title')]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Wiki Page Title')]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\"//div[contains(.,'Edit')]/span/a/span\"));\n\t\tselenium.clickAt(\"//div[contains(.,'Edit')]/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//textarea[@id='_36_editor' and @style='display: none;']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//a[@class='cke_button_source cke_on']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__36_editor']/textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//td[@id='cke_contents__36_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Content Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//textarea[@id='_36_editor' and @style='display: none;']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[@id='cke_contents__36_editor']/iframe\"));\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__36_editor']/iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Wiki Page Content Edit\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\"//body\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Content Edit\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"f764148d3961a34ac6939850c3bac986f5aadb92","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEnableSocialActivityWikiPageSite()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Social Activity\",\n\t\t\tRuntimeVariables.replace(\"Social Activity\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Wiki Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Wiki Page\", RuntimeVariables.replace(\"Wiki Page\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//input[@id='_179_com.liferay.portlet.wiki.model.WikiPage.enabledCheckbox']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_179_com.liferay.portlet.wiki.model.WikiPage.enabledCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_179_com.liferay.portlet.wiki.model.WikiPage.enabledCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"WikiPage\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_179_com.liferay.portlet.wiki.model.WikiPage.enabledCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_179_com.liferay.portlet.wiki.model.WikiPage.enabledCheckbox']\"));\n\t}","id":15706,"modified_method":"public void testEnableSocialActivityWikiPageSite()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Social Activity\",\n\t\t\tRuntimeVariables.replace(\"Social Activity\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//input[@id='_179_com.liferay.portlet.wiki.model.WikiPage.enabledCheckbox']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_179_com.liferay.portlet.wiki.model.WikiPage.enabledCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_179_com.liferay.portlet.wiki.model.WikiPage.enabledCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"WikiPage\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_179_com.liferay.portlet.wiki.model.WikiPage.enabledCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_179_com.liferay.portlet.wiki.model.WikiPage.enabledCheckbox']\"));\n\t}","commit_id":"f764148d3961a34ac6939850c3bac986f5aadb92","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testUser_CommentWikiPageSite() throws Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Wiki Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[4]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\"link=Be the first.\"));\n\t\tselenium.clickAt(\"link=Be the first.\",\n\t\t\tRuntimeVariables.replace(\"Be the first.\"));\n\t\tselenium.type(\"_36_postReplyBody0\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Reply\"));\n\t\tselenium.click(\"//div/span[1]/span/input\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[9]/div/div[2]/div[1]\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[9]/div/div[2]/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Reply\"),\n\t\t\tselenium.getText(\"//div/div[3]/div/div[1]\"));\n\t}","id":15707,"modified_method":"public void testUser_CommentWikiPageSite() throws Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Wiki Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Wiki Page Title')]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Wiki Page Title')]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[contains(@class,'add-comment')]/div/a\t\"));\n\t\tselenium.clickAt(\"//fieldset[contains(@class,'add-comment')]/div/a\t\",\n\t\t\tRuntimeVariables.replace(\"Be the first.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//textarea[@name='_36_postReplyBody0']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//textarea[@name='_36_postReplyBody0']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Comment\"));\n\t\tselenium.clickAt(\"//input[@value='Reply']\",\n\t\t\tRuntimeVariables.replace(\"Reply\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@id='_36_discussion-status-messages']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@id='_36_discussion-status-messages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"userfn userln\"),\n\t\t\tselenium.getText(\"//span[@class='user-name']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Comment\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-discussion-message']\"));\n\t}","commit_id":"f764148d3961a34ac6939850c3bac986f5aadb92","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testUser_ReadWikiPageSite() throws Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Wiki Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[4]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":15708,"modified_method":"public void testUser_ReadWikiPageSite() throws Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Wiki Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Wiki Page Title')]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Wiki Page Title')]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"f764148d3961a34ac6939850c3bac986f5aadb92","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testUser_SubscribeWikiPageSite() throws Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Wiki Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[4]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//fieldset/div/span/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//fieldset/div/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Subscribe to Comments\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[9]/div/div[2]/div[1]\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[9]/div/div[2]/div[1]\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//fieldset/div/span/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Unsubscribe from Comments\"),\n\t\t\tselenium.getText(\"//fieldset/div/span/a/span\"));\n\t}","id":15709,"modified_method":"public void testUser_SubscribeWikiPageSite() throws Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Wiki Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Wiki Page Title')]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Wiki Page Title')]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//span[@class='subscribe-link']/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//span[@class='subscribe-link']/a/span\",\n\t\t\tRuntimeVariables.replace(\"Subscribe to Comments\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@id='_36_discussion-status-messages']\t\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@id='_36_discussion-status-messages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Unsubscribe from Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t}","commit_id":"f764148d3961a34ac6939850c3bac986f5aadb92","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testUser_ViewUserStatisticsCommentWikiPage()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=User Statistics Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=User Statistics Test Page\",\n\t\t\tRuntimeVariables.replace(\"User Statistics Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td/div[1]/a/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"exact:Rank: 1\"),\n\t\t\tselenium.getText(\"//td/div/div/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Contribution Score: 4\"),\n\t\t\tselenium.getText(\"//td/div/div/div[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Participation Score: 27\"),\n\t\t\tselenium.getText(\"//td/div/div/div[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Wiki Pages: 2\"),\n\t\t\tselenium.getText(\"//td/div[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Attachments: 2\"),\n\t\t\tselenium.getText(\"//td/div[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Wiki Page Updates: 1\"),\n\t\t\tselenium.getText(\"//td/div[5]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User User\"),\n\t\t\tselenium.getText(\"//tr[2]/td/div[1]/a/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"exact:Rank: 2\"),\n\t\t\tselenium.getText(\"//tr[2]/td/div[1]/div/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Contribution Score: 0\"),\n\t\t\tselenium.getText(\"//tr[2]/td/div[1]/div/div[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Participation Score: 15\"),\n\t\t\tselenium.getText(\"//tr[2]/td/div[1]/div/div[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Comments: 1\"),\n\t\t\tselenium.getText(\"//tr[2]/td/div[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Subscriptions: 1\"),\n\t\t\tselenium.getText(\"//tr[2]/td/div[4]\"));\n\t}","id":15710,"modified_method":"public void testUser_ViewUserStatisticsCommentWikiPage()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=User Statistics Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=User Statistics Test Page\",\n\t\t\tRuntimeVariables.replace(\"User Statistics Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Joe Bloggs\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"xPath=(//span[@class='user-name'])[1]\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"xPath=(//span[@class='user-name'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Rank: 1\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='user-rank'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Contribution Score: 4\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='contribution-score'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Participation Score: 28\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='participation-score'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Wiki Pages: 1\"),\n\t\t\tselenium.getText(\"//div[@class='social-counter-user.wikis']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Attachments: 2\"),\n\t\t\tselenium.getText(\"//div[@class='social-counter-user.attachments']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"userfn userln\"),\n\t\t\tselenium.getText(\"xPath=(//span[@class='user-name'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Rank: 2\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='user-rank'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Contribution Score: 0\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='contribution-score'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Participation Score: 17\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='participation-score'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Comments: 1\"),\n\t\t\tselenium.getText(\"//div[@class='social-counter-user.comments']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Subscriptions: 1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='social-counter-user.subscriptions']\t\"));\n\t}","commit_id":"f764148d3961a34ac6939850c3bac986f5aadb92","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testUser_ViewUserStatisticsReadWikiPage()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=User Statistics Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=User Statistics Test Page\",\n\t\t\tRuntimeVariables.replace(\"User Statistics Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td/div[1]/a/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"exact:Rank: 1\"),\n\t\t\tselenium.getText(\"//td/div/div/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Contribution Score: 2\"),\n\t\t\tselenium.getText(\"//td/div/div/div[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Participation Score: 27\"),\n\t\t\tselenium.getText(\"//td/div/div/div[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Wiki Pages: 2\"),\n\t\t\tselenium.getText(\"//td/div[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Attachments: 2\"),\n\t\t\tselenium.getText(\"//td/div[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Wiki Page Updates: 1\"),\n\t\t\tselenium.getText(\"//td/div[5]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User User\"),\n\t\t\tselenium.getText(\"//tr[2]/td/div[1]/a/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"exact:Rank: 2\"),\n\t\t\tselenium.getText(\"//tr[2]/td/div[1]/div/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Contribution Score: 0\"),\n\t\t\tselenium.getText(\"//tr[2]/td/div[1]/div/div[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Participation Score: 6\"),\n\t\t\tselenium.getText(\"//tr[2]/td/div[1]/div/div[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Subscriptions: 1\"),\n\t\t\tselenium.getText(\"//tr[2]/td/div[3]\"));\n\t}","id":15711,"modified_method":"public void testUser_ViewUserStatisticsReadWikiPage()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=User Statistics Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=User Statistics Test Page\",\n\t\t\tRuntimeVariables.replace(\"User Statistics Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Joe Bloggs\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"xPath=(//span[@class='user-name'])[1]\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"xPath=(//span[@class='user-name'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Rank: 1\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='user-rank'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Contribution Score: 0\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='contribution-score'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Participation Score: 28\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='participation-score'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Wiki Pages: 1\"),\n\t\t\tselenium.getText(\"//div[@class='social-counter-user.wikis']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Attachments: 2\"),\n\t\t\tselenium.getText(\"//div[@class='social-counter-user.attachments']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"userfn userln\"),\n\t\t\tselenium.getText(\"xPath=(//span[@class='user-name'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Rank: 2\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='user-rank'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Contribution Score: 0\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='contribution-score'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Participation Score: 4\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='participation-score'])[2]\"));\n\t}","commit_id":"f764148d3961a34ac6939850c3bac986f5aadb92","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testUser_ViewUserStatisticsSubscribeWikiPage()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=User Statistics Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=User Statistics Test Page\",\n\t\t\tRuntimeVariables.replace(\"User Statistics Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td/div[1]/a/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"exact:Rank: 1\"),\n\t\t\tselenium.getText(\"//td/div/div/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Contribution Score: 2\"),\n\t\t\tselenium.getText(\"//td/div/div/div[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Participation Score: 27\"),\n\t\t\tselenium.getText(\"//td/div/div/div[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Wiki Pages: 2\"),\n\t\t\tselenium.getText(\"//td/div[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Attachments: 2\"),\n\t\t\tselenium.getText(\"//td/div[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Wiki Page Updates: 1\"),\n\t\t\tselenium.getText(\"//td/div[5]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User User\"),\n\t\t\tselenium.getText(\"//tr[2]/td/div[1]/a/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"exact:Rank: 2\"),\n\t\t\tselenium.getText(\"//tr[2]/td/div[1]/div/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Contribution Score: 0\"),\n\t\t\tselenium.getText(\"//tr[2]/td/div[1]/div/div[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Participation Score: 6\"),\n\t\t\tselenium.getText(\"//tr[2]/td/div[1]/div/div[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Subscriptions: 1\"),\n\t\t\tselenium.getText(\"//tr[2]/td/div[3]\"));\n\t}","id":15712,"modified_method":"public void testUser_ViewUserStatisticsSubscribeWikiPage()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=User Statistics Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=User Statistics Test Page\",\n\t\t\tRuntimeVariables.replace(\"User Statistics Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Joe Bloggs\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"xPath=(//span[@class='user-name'])[1]\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"xPath=(//span[@class='user-name'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Rank: 1\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='user-rank'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Contribution Score: 2\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='contribution-score'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Participation Score: 28\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='participation-score'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Wiki Pages: 1\"),\n\t\t\tselenium.getText(\"//div[@class='social-counter-user.wikis']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Attachments: 2\"),\n\t\t\tselenium.getText(\"//div[@class='social-counter-user.attachments']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"userfn userln\"),\n\t\t\tselenium.getText(\"xPath=(//span[@class='user-name'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Rank: 2\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='user-rank'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Contribution Score: 0\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='contribution-score'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Participation Score: 10\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='participation-score'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Subscriptions: 1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='social-counter-user.subscriptions']\t\"));\n\t}","commit_id":"f764148d3961a34ac6939850c3bac986f5aadb92","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewUserStatisticsAddWikiPageAttachment2()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=User Statistics Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=User Statistics Test Page\",\n\t\t\tRuntimeVariables.replace(\"User Statistics Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//div/a/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"exact:Rank: 1\"),\n\t\t\tselenium.getText(\"//td/div/div/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Contribution Score: 0\"),\n\t\t\tselenium.getText(\"//td/div/div/div[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Participation Score: 21\"),\n\t\t\tselenium.getText(\"//td/div/div/div[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Wiki Pages: 2\"),\n\t\t\tselenium.getText(\"//td/div[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Attachments: 2\"),\n\t\t\tselenium.getText(\"//td/div[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Wiki Page Updates: 1\"),\n\t\t\tselenium.getText(\"//td/div[5]\"));\n\t}","id":15713,"modified_method":"public void testViewUserStatisticsAddWikiPageAttachment2()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=User Statistics Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=User Statistics Test Page\",\n\t\t\tRuntimeVariables.replace(\"User Statistics Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Joe Bloggs\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//span[@class='user-name']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//span[@class='user-name']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Rank: 1\"),\n\t\t\tselenium.getText(\"//div[@class='user-rank']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Contribution Score: 0\"),\n\t\t\tselenium.getText(\"//div[@class='contribution-score']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Participation Score: 28\"),\n\t\t\tselenium.getText(\"//div[@class='participation-score']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Wiki Pages: 1\"),\n\t\t\tselenium.getText(\"//div[@class='social-counter-user.wikis']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Attachments: 2\"),\n\t\t\tselenium.getText(\"//div[@class='social-counter-user.attachments']\"));\n\t}","commit_id":"f764148d3961a34ac6939850c3bac986f5aadb92","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewUserStatisticsAddWikiPageSite()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=User Statistics Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=User Statistics Test Page\",\n\t\t\tRuntimeVariables.replace(\"User Statistics Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//div/a/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"exact:Rank: 1\"),\n\t\t\tselenium.getText(\"//td/div/div/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Contribution Score: 0\"),\n\t\t\tselenium.getText(\"//td/div/div/div[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Participation Score: 13\"),\n\t\t\tselenium.getText(\"//td/div/div/div[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Wiki Pages: 2\"),\n\t\t\tselenium.getText(\"//td/div[3]\"));\n\t}","id":15714,"modified_method":"public void testViewUserStatisticsAddWikiPageSite()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=User Statistics Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=User Statistics Test Page\",\n\t\t\tRuntimeVariables.replace(\"User Statistics Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Joe Bloggs\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//span[@class='user-name']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//span[@class='user-name']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Rank: 1\"),\n\t\t\tselenium.getText(\"//div[@class='user-rank']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Contribution Score: 0\"),\n\t\t\tselenium.getText(\"//div[@class='contribution-score']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Participation Score: 16\"),\n\t\t\tselenium.getText(\"//div[@class='participation-score']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Wiki Pages: 1\"),\n\t\t\tselenium.getText(\"//div[@class='social-counter-user.wikis']\"));\n\t}","commit_id":"f764148d3961a34ac6939850c3bac986f5aadb92","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewUserStatisticsEditWikiPageSite()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=User Statistics Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=User Statistics Test Page\",\n\t\t\tRuntimeVariables.replace(\"User Statistics Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//div/a/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"exact:Rank: 1\"),\n\t\t\tselenium.getText(\"//td/div/div/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Contribution Score: 0\"),\n\t\t\tselenium.getText(\"//td/div/div/div[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Participation Score: 17\"),\n\t\t\tselenium.getText(\"//td/div/div/div[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Wiki Pages: 2\"),\n\t\t\tselenium.getText(\"//td/div[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Wiki Page Updates: 1\"),\n\t\t\tselenium.getText(\"//td/div[4]\"));\n\t}","id":15715,"modified_method":"public void testViewUserStatisticsEditWikiPageSite()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=User Statistics Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=User Statistics Test Page\",\n\t\t\tRuntimeVariables.replace(\"User Statistics Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Joe Bloggs\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"xPath=(//span[@class='user-name'])[1]\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"xPath=(//span[@class='user-name'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Rank: 1\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='user-rank'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Contribution Score: 4\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='contribution-score'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Participation Score: 38\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='participation-score'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Wiki Pages: 2\"),\n\t\t\tselenium.getText(\"//div[@class='social-counter-user.wikis']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Attachments: 2\"),\n\t\t\tselenium.getText(\"//div[@class='social-counter-user.attachments']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"userfn userln\"),\n\t\t\tselenium.getText(\"xPath=(//span[@class='user-name'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Rank: 2\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='user-rank'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Contribution Score: 0\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='contribution-score'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Participation Score: 17\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='participation-score'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Comments: 1\"),\n\t\t\tselenium.getText(\"//div[@class='social-counter-user.comments']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User's Subscriptions: 1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='social-counter-user.subscriptions']\t\"));\n\t}","commit_id":"f764148d3961a34ac6939850c3bac986f5aadb92","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddSiteTest.class);\n\t\ttestSuite.addTestSuite(AddPageWikiSiteTest.class);\n\t\ttestSuite.addTestSuite(AddPortletWikiSiteTest.class);\n\t\ttestSuite.addTestSuite(AddPageUSSiteTest.class);\n\t\ttestSuite.addTestSuite(AddPortletUSSiteTest.class);\n\t\ttestSuite.addTestSuite(EnableSocialActivityWikiPageSiteTest.class);\n\t\ttestSuite.addTestSuite(ConfigurePortletShowHeaderTextOffTest.class);\n\t\ttestSuite.addTestSuite(ConfigurePortletShowTotalsOffTest.class);\n\t\ttestSuite.addTestSuite(ConfigurePortletAddCounter1WikiPageUpdatesTest.class);\n\t\ttestSuite.addTestSuite(ConfigurePortletAddCounter2AttachmentsTest.class);\n\t\ttestSuite.addTestSuite(ConfigurePortletAddCounter3CommentsTest.class);\n\t\ttestSuite.addTestSuite(ConfigurePortletAddCounter4SubscriptionsTest.class);\n\t\ttestSuite.addTestSuite(ConfigurePortletAddCounter5WikiPageTest.class);\n\t\ttestSuite.addTestSuite(AddWikiPageSiteTest.class);\n\t\ttestSuite.addTestSuite(ViewUserStatisticsAddWikiPageSiteTest.class);\n\t\ttestSuite.addTestSuite(AddWikiPageAttachmentSiteTest.class);\n\t\ttestSuite.addTestSuite(ViewUserStatisticsAddWikiPageAttachmentTest.class);\n\t\ttestSuite.addTestSuite(AddWikiPageAttachment2SiteTest.class);\n\t\ttestSuite.addTestSuite(ViewUserStatisticsAddWikiPageAttachment2Test.class);\n\t\ttestSuite.addTestSuite(AddUserTest.class);\n\t\ttestSuite.addTestSuite(EditUserPasswordTest.class);\n\t\ttestSuite.addTestSuite(AddMembersSiteUserTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(User_SignInTest.class);\n\t\ttestSuite.addTestSuite(User_ReadWikiPageSiteTest.class);\n\t\ttestSuite.addTestSuite(User_ViewUserStatisticsReadWikiPageTest.class);\n\t\ttestSuite.addTestSuite(User_SubscribeWikiPageSiteTest.class);\n\t\ttestSuite.addTestSuite(User_ViewUserStatisticsSubscribeWikiPageTest.class);\n\t\ttestSuite.addTestSuite(User_CommentWikiPageSiteTest.class);\n\t\ttestSuite.addTestSuite(User_ViewUserStatisticsCommentWikiPageTest.class);\n\t\ttestSuite.addTestSuite(User_SignOutTest.class);\n\t\ttestSuite.addTestSuite(SignInTest.class);\n\t\ttestSuite.addTestSuite(EditWikiPageSiteTest.class);\n\t\ttestSuite.addTestSuite(ViewUserStatisticsEditWikiPageSiteTest.class);\n\t\ttestSuite.addTestSuite(TearDownSiteTest.class);\n\t\ttestSuite.addTestSuite(TearDownUserTest.class);\n\n\t\treturn testSuite;\n\t}","id":15716,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddSiteTest.class);\n\t\ttestSuite.addTestSuite(AddPageWikiSiteTest.class);\n\t\ttestSuite.addTestSuite(AddPortletWikiSiteTest.class);\n\t\ttestSuite.addTestSuite(AddPageUSSiteTest.class);\n\t\ttestSuite.addTestSuite(AddPortletUSSiteTest.class);\n\t\ttestSuite.addTestSuite(EnableSocialActivityWikiPageSiteTest.class);\n\t\ttestSuite.addTestSuite(ConfigurePortletShowHeaderTextOffTest.class);\n\t\ttestSuite.addTestSuite(ConfigurePortletShowTotalsOffTest.class);\n\t\ttestSuite.addTestSuite(ConfigurePortletAddCounter1WikiPageUpdatesTest.class);\n\t\ttestSuite.addTestSuite(ConfigurePortletAddCounter2AttachmentsTest.class);\n\t\ttestSuite.addTestSuite(ConfigurePortletAddCounter3CommentsTest.class);\n\t\ttestSuite.addTestSuite(ConfigurePortletAddCounter4SubscriptionsTest.class);\n\t\ttestSuite.addTestSuite(ConfigurePortletAddCounter5WikiPageTest.class);\n\t\ttestSuite.addTestSuite(AddWikiPageSiteTest.class);\n\t\ttestSuite.addTestSuite(ViewUserStatisticsAddWikiPageSiteTest.class);\n\t\ttestSuite.addTestSuite(AddWikiPageAttachment1SiteTest.class);\n\t\ttestSuite.addTestSuite(ViewUserStatisticsAddWikiPageAttachment1Test.class);\n\t\ttestSuite.addTestSuite(AddWikiPageAttachment2SiteTest.class);\n\t\ttestSuite.addTestSuite(ViewUserStatisticsAddWikiPageAttachment2Test.class);\n\t\ttestSuite.addTestSuite(AddUserTest.class);\n\t\ttestSuite.addTestSuite(EditUserPasswordTest.class);\n\t\ttestSuite.addTestSuite(AddMembersSiteUserTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(User_SignInTest.class);\n\t\ttestSuite.addTestSuite(User_ReadWikiPageSiteTest.class);\n\t\ttestSuite.addTestSuite(User_ViewUserStatisticsReadWikiPageTest.class);\n\t\ttestSuite.addTestSuite(User_SubscribeWikiPageSiteTest.class);\n\t\ttestSuite.addTestSuite(User_ViewUserStatisticsSubscribeWikiPageTest.class);\n\t\ttestSuite.addTestSuite(User_CommentWikiPageSiteTest.class);\n\t\ttestSuite.addTestSuite(User_ViewUserStatisticsCommentWikiPageTest.class);\n\t\ttestSuite.addTestSuite(User_SignOutTest.class);\n\t\ttestSuite.addTestSuite(SignInTest.class);\n\t\ttestSuite.addTestSuite(EditWikiPageSiteTest.class);\n\t\ttestSuite.addTestSuite(ViewUserStatisticsEditWikiPageSiteTest.class);\n\t\ttestSuite.addTestSuite(TearDownSiteTest.class);\n\t\ttestSuite.addTestSuite(TearDownUserTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"f764148d3961a34ac6939850c3bac986f5aadb92","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n   * Write out an answer, and update statistics.\n   */\n  private void writeAnswer(String[] strs, String clAnswer, Distribution<String> cntr, Counter<String> contingency, Classifier<String,String> c, double sim) {\n    String goldAnswer = strs[globalFlags.goldAnswerColumn];\n    String printedText = \"\";\n    if (globalFlags.displayedColumn >= 0) {\n      printedText = strs[globalFlags.displayedColumn];\n    }\n    String results;\n    if (globalFlags.displayAllAnswers) {\n      // sort the labels by probability\n      TreeSet<Pair<Double,String>> sortedLabels = new TreeSet<Pair<Double,String>>();\n      for (String key : cntr.keySet()) {\n        sortedLabels.add(new Pair<Double,String>(cntr.probabilityOf(key), key));\n      }\n      StringBuilder builder = new StringBuilder();\n      for (Pair<Double,String> pair : sortedLabels.descendingSet()) {\n        if (builder.length() > 0) {\n          builder.append(\"\\t\");\n        }\n        builder.append(pair.first().toString()).append('\\t').append(pair.second());\n      }\n      results = builder.toString();\n    } else {\n      if ( ! goldAnswer.equals(clAnswer)) {\n        results = clAnswer + '\\t' + nf.format(cntr.probabilityOf(clAnswer) + '\\t' + nf.format(cntr.probabilityOf(goldAnswer)));\n      } else {\n\tresults = clAnswer + '\\t' + nf.format(cntr.probabilityOf(clAnswer));\n      }\n    }\n\n    String line;\n    if (\"\".equals(printedText)) {\n      line = goldAnswer + '\\t' + results;\n     } else {\n      line = printedText + '\\t' + goldAnswer + '\\t' + results;\n    }\n    System.out.println(line);\n    // NB: This next bit judges correctness by surface String equality, not our internal indices, so strs has to be right even for svmlightFormat\n    for (String next : c.labels()) {\n      if (next.equals(goldAnswer)) {\n        if (next.equals(clAnswer)) {\n          contingency.incrementCount(next + \"|TP\");\n        } else {\n          contingency.incrementCount(next + \"|FN\");\n        }\n      } else {\n        if (next.equals(clAnswer)) {\n          contingency.incrementCount(next + \"|FP\");\n        } else {\n          contingency.incrementCount(next + \"|TN\");\n        }\n      }\n    }\n    if (globalFlags.groupingColumn >= 0 && globalFlags.rankingAccuracyClass != null) {\n      String group = strs[globalFlags.groupingColumn];\n      // System.err.println(\"Group is \" + group);\n      if (group.equals(lastGroup)) {\n        numInGroup++;\n        double prob = cntr.probabilityOf(globalFlags.rankingAccuracyClass);\n        // System.err.println(\"  same group; prob is \" + prob);\n        if (prob > bestProb) {\n          bestProb = prob;\n          bestSim = sim;\n          // System.err.println(\"  better prob than before\");\n          currentHighestProbCorrect = goldAnswer.equals(globalFlags.rankingAccuracyClass);\n        }\n        if (globalFlags.rankingAccuracyClass.equals(goldAnswer)) {\n          foundAnswerInGroup = true;\n        }\n      } else {\n        finishRanking(contingency, bestSim);\n        numGroups++;\n        lastGroup = group;\n        bestProb = cntr.probabilityOf(globalFlags.rankingAccuracyClass);\n        bestSim = sim;\n        // System.err.println(\"  different; prob is \" + bestProb);\n        numInGroup = 1;\n        currentHighestProbCorrect = goldAnswer.equals(globalFlags.rankingAccuracyClass);\n        foundAnswerInGroup = globalFlags.rankingAccuracyClass.equals(goldAnswer);\n      }\n    }\n  }","id":15717,"modified_method":"/**\n   * Write out an answer, and update statistics.\n   */\n  private void writeAnswer(String[] strs, String clAnswer, Distribution<String> cntr, Counter<String> contingency, Classifier<String,String> c, double sim) {\n    String goldAnswer = strs[globalFlags.goldAnswerColumn];\n    String printedText = \"\";\n    if (globalFlags.displayedColumn >= 0) {\n      printedText = strs[globalFlags.displayedColumn];\n    }\n    String results;\n    if (globalFlags.displayAllAnswers) {\n      // sort the labels by probability\n      TreeSet<Pair<Double,String>> sortedLabels = new TreeSet<Pair<Double,String>>();\n      for (String key : cntr.keySet()) {\n        sortedLabels.add(new Pair<Double,String>(cntr.probabilityOf(key), key));\n      }\n      StringBuilder builder = new StringBuilder();\n      for (Pair<Double,String> pair : sortedLabels.descendingSet()) {\n        if (builder.length() > 0) {\n          builder.append(\"\\t\");\n        }\n        builder.append(pair.first().toString()).append('\\t').append(pair.second());\n      }\n      results = builder.toString();\n    } else {\n      results = clAnswer + '\\t' + cntr.probabilityOf(clAnswer);\n    }\n\n    String line;\n    if (\"\".equals(printedText)) {\n      line = goldAnswer + '\\t' + results;\n     } else {\n      line = printedText + '\\t' + goldAnswer + '\\t' + results;\n    }\n    System.out.println(line);\n    // NB: This next bit judges correctness by surface String equality, not our internal indices, so strs has to be right even for svmlightFormat\n    for (String next : c.labels()) {\n      if (next.equals(goldAnswer)) {\n        if (next.equals(clAnswer)) {\n          contingency.incrementCount(next + \"|TP\");\n        } else {\n          contingency.incrementCount(next + \"|FN\");\n        }\n      } else {\n        if (next.equals(clAnswer)) {\n          contingency.incrementCount(next + \"|FP\");\n        } else {\n          contingency.incrementCount(next + \"|TN\");\n        }\n      }\n    }\n    if (globalFlags.groupingColumn >= 0 && globalFlags.rankingAccuracyClass != null) {\n      String group = strs[globalFlags.groupingColumn];\n      // System.err.println(\"Group is \" + group);\n      if (group.equals(lastGroup)) {\n        numInGroup++;\n        double prob = cntr.probabilityOf(globalFlags.rankingAccuracyClass);\n        // System.err.println(\"  same group; prob is \" + prob);\n        if (prob > bestProb) {\n          bestProb = prob;\n          bestSim = sim;\n          // System.err.println(\"  better prob than before\");\n          currentHighestProbCorrect = goldAnswer.equals(globalFlags.rankingAccuracyClass);\n        }\n        if (globalFlags.rankingAccuracyClass.equals(goldAnswer)) {\n          foundAnswerInGroup = true;\n        }\n      } else {\n        finishRanking(contingency, bestSim);\n        numGroups++;\n        lastGroup = group;\n        bestProb = cntr.probabilityOf(globalFlags.rankingAccuracyClass);\n        bestSim = sim;\n        // System.err.println(\"  different; prob is \" + bestProb);\n        numInGroup = 1;\n        currentHighestProbCorrect = goldAnswer.equals(globalFlags.rankingAccuracyClass);\n        foundAnswerInGroup = globalFlags.rankingAccuracyClass.equals(goldAnswer);\n      }\n    }\n  }","commit_id":"f395f9357ef39e7003a345ff8841c36259af1ae1","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Write out an answer, and update statistics.\n   */\n  private void writeAnswer(String[] strs, String clAnswer, Distribution<String> cntr, Counter<String> contingency, Classifier<String,String> c, double sim) {\n    String goldAnswer = strs[globalFlags.goldAnswerColumn];\n    String printedText = \"\";\n    if (globalFlags.displayedColumn >= 0) {\n      printedText = strs[globalFlags.displayedColumn];\n    }\n    String results;\n    if (globalFlags.displayAllAnswers) {\n      // sort the labels by probability\n      TreeSet<Pair<Double,String>> sortedLabels = new TreeSet<Pair<Double,String>>();\n      for (String key : cntr.keySet()) {\n        sortedLabels.add(new Pair<Double,String>(cntr.probabilityOf(key), key));\n      }\n      StringBuilder builder = new StringBuilder();\n      for (Pair<Double,String> pair : sortedLabels.descendingSet()) {\n        if (builder.length() > 0) {\n          builder.append(\"\\t\");\n        }\n        builder.append(pair.first().toString()).append('\\t').append(pair.second());\n      }\n      results = builder.toString();\n    } else {\n      if ( ! goldAnswer.equals(clAnswer)) {\n        results = clAnswer + '\\t' + nf.format(cntr.probabilityOf(clAnswer) + '\\t' + nf.format(cntr.probabilityOf(goldAnswer)));\n      } else {\n\tresults = clAnswer + '\\t' + nf.format(cntr.probabilityOf(clAnswer));\n      }\n    }\n\n    String line;\n    if (\"\".equals(printedText)) {\n      line = goldAnswer + '\\t' + results;\n     } else {\n      line = printedText + '\\t' + goldAnswer + '\\t' + results;\n    }\n    System.out.println(line);\n    // NB: This next bit judges correctness by surface String equality, not our internal indices, so strs has to be right even for svmlightFormat\n    for (String next : c.labels()) {\n      if (next.equals(goldAnswer)) {\n        if (next.equals(clAnswer)) {\n          contingency.incrementCount(next + \"|TP\");\n        } else {\n          contingency.incrementCount(next + \"|FN\");\n        }\n      } else {\n        if (next.equals(clAnswer)) {\n          contingency.incrementCount(next + \"|FP\");\n        } else {\n          contingency.incrementCount(next + \"|TN\");\n        }\n      }\n    }\n    if (globalFlags.groupingColumn >= 0 && globalFlags.rankingAccuracyClass != null) {\n      String group = strs[globalFlags.groupingColumn];\n      // System.err.println(\"Group is \" + group);\n      if (group.equals(lastGroup)) {\n        numInGroup++;\n        double prob = cntr.probabilityOf(globalFlags.rankingAccuracyClass);\n        // System.err.println(\"  same group; prob is \" + prob);\n        if (prob > bestProb) {\n          bestProb = prob;\n          bestSim = sim;\n          // System.err.println(\"  better prob than before\");\n          currentHighestProbCorrect = goldAnswer.equals(globalFlags.rankingAccuracyClass);\n        }\n        if (globalFlags.rankingAccuracyClass.equals(goldAnswer)) {\n          foundAnswerInGroup = true;\n        }\n      } else {\n        finishRanking(contingency, bestSim);\n        numGroups++;\n        lastGroup = group;\n        bestProb = cntr.probabilityOf(globalFlags.rankingAccuracyClass);\n        bestSim = sim;\n        // System.err.println(\"  different; prob is \" + bestProb);\n        numInGroup = 1;\n        currentHighestProbCorrect = goldAnswer.equals(globalFlags.rankingAccuracyClass);\n        foundAnswerInGroup = globalFlags.rankingAccuracyClass.equals(goldAnswer);\n      }\n    }\n  }","id":15718,"modified_method":"/**\n   * Write out an answer, and update statistics.\n   */\n  private void writeAnswer(String[] strs, String clAnswer, Distribution<String> cntr, Counter<String> contingency, Classifier<String,String> c, double sim) {\n    String goldAnswer = strs[globalFlags.goldAnswerColumn];\n    String printedText = \"\";\n    if (globalFlags.displayedColumn >= 0) {\n      printedText = strs[globalFlags.displayedColumn];\n    }\n    String results;\n    if (globalFlags.displayAllAnswers) {\n      // sort the labels by probability\n      TreeSet<Pair<Double,String>> sortedLabels = new TreeSet<Pair<Double,String>>();\n      for (String key : cntr.keySet()) {\n        sortedLabels.add(new Pair<Double,String>(cntr.probabilityOf(key), key));\n      }\n      StringBuilder builder = new StringBuilder();\n      for (Pair<Double,String> pair : sortedLabels.descendingSet()) {\n        if (builder.length() > 0) {\n          builder.append(\"\\t\");\n        }\n        builder.append(pair.first().toString()).append('\\t').append(pair.second());\n      }\n      results = builder.toString();\n    } else {\n      results = clAnswer + '\\t' + cntr.probabilityOf(clAnswer);\n    }\n\n    String line;\n    if (\"\".equals(printedText)) {\n      line = goldAnswer + '\\t' + results;\n     } else {\n      line = printedText + '\\t' + goldAnswer + '\\t' + results;\n    }\n    System.out.println(line);\n    // NB: This next bit judges correctness by surface String equality, not our internal indices, so strs has to be right even for svmlightFormat\n    for (String next : c.labels()) {\n      if (next.equals(goldAnswer)) {\n        if (next.equals(clAnswer)) {\n          contingency.incrementCount(next + \"|TP\");\n        } else {\n          contingency.incrementCount(next + \"|FN\");\n        }\n      } else {\n        if (next.equals(clAnswer)) {\n          contingency.incrementCount(next + \"|FP\");\n        } else {\n          contingency.incrementCount(next + \"|TN\");\n        }\n      }\n    }\n    if (globalFlags.groupingColumn >= 0 && globalFlags.rankingAccuracyClass != null) {\n      String group = strs[globalFlags.groupingColumn];\n      // System.err.println(\"Group is \" + group);\n      if (group.equals(lastGroup)) {\n        numInGroup++;\n        double prob = cntr.probabilityOf(globalFlags.rankingAccuracyClass);\n        // System.err.println(\"  same group; prob is \" + prob);\n        if (prob > bestProb) {\n          bestProb = prob;\n          bestSim = sim;\n          // System.err.println(\"  better prob than before\");\n          currentHighestProbCorrect = goldAnswer.equals(globalFlags.rankingAccuracyClass);\n        }\n        if (globalFlags.rankingAccuracyClass.equals(goldAnswer)) {\n          foundAnswerInGroup = true;\n        }\n      } else {\n        finishRanking(contingency, bestSim);\n        numGroups++;\n        lastGroup = group;\n        bestProb = cntr.probabilityOf(globalFlags.rankingAccuracyClass);\n        bestSim = sim;\n        // System.err.println(\"  different; prob is \" + bestProb);\n        numInGroup = 1;\n        currentHighestProbCorrect = goldAnswer.equals(globalFlags.rankingAccuracyClass);\n        foundAnswerInGroup = globalFlags.rankingAccuracyClass.equals(goldAnswer);\n      }\n    }\n  }","commit_id":"fa497f7142e1238123987aab171a280cfcdc9ab2","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Write out an answer, and update statistics.\n   */\n  private void writeAnswer(String[] strs, String clAnswer, Distribution<String> cntr, Counter<String> contingency, Classifier<String,String> c, double sim) {\n    String goldAnswer = strs[globalFlags.goldAnswerColumn];\n    String printedText = \"\";\n    if (globalFlags.displayedColumn >= 0) {\n      printedText = strs[globalFlags.displayedColumn];\n    }\n    String results;\n    if (globalFlags.displayAllAnswers) {\n      // sort the labels by probability\n      TreeSet<Pair<Double,String>> sortedLabels = new TreeSet<Pair<Double,String>>();\n      for (String key : cntr.keySet()) {\n        sortedLabels.add(new Pair<Double,String>(cntr.probabilityOf(key), key));\n      }\n      StringBuilder builder = new StringBuilder();\n      for (Pair<Double,String> pair : sortedLabels.descendingSet()) {\n        if (builder.length() > 0) {\n          builder.append(\"\\t\");\n        }\n        builder.append(pair.first().toString()).append('\\t').append(pair.second());\n      }\n      results = builder.toString();\n    } else {\n      if ( ! goldAnswer.equals(clAnswer)) {\n        results = clAnswer + '\\t' + nf.format(cntr.probabilityOf(clAnswer) + '\\t' + nf.format(cntr.probabilityOf(goldAnswer)));\n      } else {\n\tresults = clAnswer + '\\t' + nf.format(cntr.probabilityOf(clAnswer));\n      }\n    }\n\n    String line;\n    if (\"\".equals(printedText)) {\n      line = goldAnswer + '\\t' + results;\n     } else {\n      line = printedText + '\\t' + goldAnswer + '\\t' + results;\n    }\n    System.out.println(line);\n    // NB: This next bit judges correctness by surface String equality, not our internal indices, so strs has to be right even for svmlightFormat\n    for (String next : c.labels()) {\n      if (next.equals(goldAnswer)) {\n        if (next.equals(clAnswer)) {\n          contingency.incrementCount(next + \"|TP\");\n        } else {\n          contingency.incrementCount(next + \"|FN\");\n        }\n      } else {\n        if (next.equals(clAnswer)) {\n          contingency.incrementCount(next + \"|FP\");\n        } else {\n          contingency.incrementCount(next + \"|TN\");\n        }\n      }\n    }\n    if (globalFlags.groupingColumn >= 0 && globalFlags.rankingAccuracyClass != null) {\n      String group = strs[globalFlags.groupingColumn];\n      // System.err.println(\"Group is \" + group);\n      if (group.equals(lastGroup)) {\n        numInGroup++;\n        double prob = cntr.probabilityOf(globalFlags.rankingAccuracyClass);\n        // System.err.println(\"  same group; prob is \" + prob);\n        if (prob > bestProb) {\n          bestProb = prob;\n          bestSim = sim;\n          // System.err.println(\"  better prob than before\");\n          currentHighestProbCorrect = goldAnswer.equals(globalFlags.rankingAccuracyClass);\n        }\n        if (globalFlags.rankingAccuracyClass.equals(goldAnswer)) {\n          foundAnswerInGroup = true;\n        }\n      } else {\n        finishRanking(contingency, bestSim);\n        numGroups++;\n        lastGroup = group;\n        bestProb = cntr.probabilityOf(globalFlags.rankingAccuracyClass);\n        bestSim = sim;\n        // System.err.println(\"  different; prob is \" + bestProb);\n        numInGroup = 1;\n        currentHighestProbCorrect = goldAnswer.equals(globalFlags.rankingAccuracyClass);\n        foundAnswerInGroup = globalFlags.rankingAccuracyClass.equals(goldAnswer);\n      }\n    }\n  }","id":15719,"modified_method":"/**\n   * Write out an answer, and update statistics.\n   */\n  private void writeAnswer(String[] strs, String clAnswer, Distribution<String> cntr, Counter<String> contingency, Classifier<String,String> c, double sim) {\n    String goldAnswer = strs[globalFlags.goldAnswerColumn];\n    String printedText = \"\";\n    if (globalFlags.displayedColumn >= 0) {\n      printedText = strs[globalFlags.displayedColumn];\n    }\n    String results;\n    if (globalFlags.displayAllAnswers) {\n      // sort the labels by probability\n      TreeSet<Pair<Double,String>> sortedLabels = new TreeSet<Pair<Double,String>>();\n      for (String key : cntr.keySet()) {\n        sortedLabels.add(new Pair<Double,String>(cntr.probabilityOf(key), key));\n      }\n      StringBuilder builder = new StringBuilder();\n      for (Pair<Double,String> pair : sortedLabels.descendingSet()) {\n        if (builder.length() > 0) {\n          builder.append(\"\\t\");\n        }\n        builder.append(pair.first().toString()).append('\\t').append(pair.second());\n      }\n      results = builder.toString();\n    } else {\n      results = clAnswer + '\\t' + cntr.probabilityOf(clAnswer);\n    }\n\n    String line;\n    if (\"\".equals(printedText)) {\n      line = goldAnswer + '\\t' + results;\n     } else {\n      line = printedText + '\\t' + goldAnswer + '\\t' + results;\n    }\n    System.out.println(line);\n    // NB: This next bit judges correctness by surface String equality, not our internal indices, so strs has to be right even for svmlightFormat\n    for (String next : c.labels()) {\n      if (next.equals(goldAnswer)) {\n        if (next.equals(clAnswer)) {\n          contingency.incrementCount(next + \"|TP\");\n        } else {\n          contingency.incrementCount(next + \"|FN\");\n        }\n      } else {\n        if (next.equals(clAnswer)) {\n          contingency.incrementCount(next + \"|FP\");\n        } else {\n          contingency.incrementCount(next + \"|TN\");\n        }\n      }\n    }\n    if (globalFlags.groupingColumn >= 0 && globalFlags.rankingAccuracyClass != null) {\n      String group = strs[globalFlags.groupingColumn];\n      // System.err.println(\"Group is \" + group);\n      if (group.equals(lastGroup)) {\n        numInGroup++;\n        double prob = cntr.probabilityOf(globalFlags.rankingAccuracyClass);\n        // System.err.println(\"  same group; prob is \" + prob);\n        if (prob > bestProb) {\n          bestProb = prob;\n          bestSim = sim;\n          // System.err.println(\"  better prob than before\");\n          currentHighestProbCorrect = goldAnswer.equals(globalFlags.rankingAccuracyClass);\n        }\n        if (globalFlags.rankingAccuracyClass.equals(goldAnswer)) {\n          foundAnswerInGroup = true;\n        }\n      } else {\n        finishRanking(contingency, bestSim);\n        numGroups++;\n        lastGroup = group;\n        bestProb = cntr.probabilityOf(globalFlags.rankingAccuracyClass);\n        bestSim = sim;\n        // System.err.println(\"  different; prob is \" + bestProb);\n        numInGroup = 1;\n        currentHighestProbCorrect = goldAnswer.equals(globalFlags.rankingAccuracyClass);\n        foundAnswerInGroup = globalFlags.rankingAccuracyClass.equals(goldAnswer);\n      }\n    }\n  }","commit_id":"05b10aa71ac6ad051b329bb6ce25a674beea3d24","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public void start() {\n    super.start();\n    try {\n      logSchema = new LogSchema().getAvroSchema();\n      FileMetaDataManager fileMetaDataManager = new FileMetaDataManager(tableUtil,\n                                                                        txClient,\n                                                                        locationFactory);\n\n      AvroFileWriter avroFileWriter = new AvroFileWriter(fileMetaDataManager, logBaseDir,\n                                                         logSchema,\n                                                         maxLogFileSizeBytes, syncIntervalBytes,\n                                                         inactiveIntervalMs);\n      logFileWriter = new SimpleLogFileWriter(avroFileWriter, checkpointIntervalMs);\n\n      LogCleanup logCleanup = new LogCleanup(fileMetaDataManager, logBaseDir, retentionDurationMs);\n      scheduledExecutor.scheduleAtFixedRate(logCleanup, 10,\n                                            logCleanupIntervalMins, TimeUnit.MINUTES);\n    } catch (Exception e) {\n      close();\n      throw Throwables.propagate(e);\n    }\n  }","id":15720,"modified_method":"@Override\n  public void start() {\n    super.start();\n    try {\n      logSchema = new LogSchema().getAvroSchema();\n      FileMetaDataManager fileMetaDataManager = new FileMetaDataManager(tableUtil,\n                                                                        txExecutorFactory,\n                                                                        locationFactory);\n\n      AvroFileWriter avroFileWriter = new AvroFileWriter(fileMetaDataManager, logBaseDir,\n                                                         logSchema,\n                                                         maxLogFileSizeBytes, syncIntervalBytes,\n                                                         inactiveIntervalMs);\n      logFileWriter = new SimpleLogFileWriter(avroFileWriter, checkpointIntervalMs);\n\n      LogCleanup logCleanup = new LogCleanup(fileMetaDataManager, logBaseDir, retentionDurationMs);\n      scheduledExecutor.scheduleAtFixedRate(logCleanup, 10,\n                                            logCleanupIntervalMins, TimeUnit.MINUTES);\n    } catch (Exception e) {\n      close();\n      throw Throwables.propagate(e);\n    }\n  }","commit_id":"9d47a52c531458434dd522aff05bee870fd84915","url":"https://github.com/caskdata/cdap"},{"original_method":"@Inject\n  public FileLogAppender(CConfiguration cConfig,\n                         DatasetFramework dsFramework,\n                         TransactionSystemClient txClient,\n                         LocationFactory locationFactory) {\n    setName(APPENDER_NAME);\n\n    this.tableUtil = new LogSaverTableUtil(dsFramework, cConfig);\n    this.txClient = txClient;\n    this.locationFactory = locationFactory;\n\n    String baseDir = cConfig.get(LoggingConfiguration.LOG_BASE_DIR);\n    Preconditions.checkNotNull(baseDir, \"Log base dir cannot be null\");\n    this.logBaseDir = locationFactory.create(baseDir);\n\n    this.syncIntervalBytes = cConfig.getInt(LoggingConfiguration.LOG_FILE_SYNC_INTERVAL_BYTES, 50 * 1024);\n    Preconditions.checkArgument(this.syncIntervalBytes > 0,\n                                \"Log file sync interval is invalid: %s\", this.syncIntervalBytes);\n\n    long retentionDurationDays = cConfig.getLong(LoggingConfiguration.LOG_RETENTION_DURATION_DAYS, -1);\n    Preconditions.checkArgument(retentionDurationDays > 0,\n                                \"Log file retention duration is invalid: %s\", retentionDurationDays);\n    this.retentionDurationMs = TimeUnit.MILLISECONDS.convert(retentionDurationDays, TimeUnit.DAYS);\n\n    maxLogFileSizeBytes = cConfig.getLong(LoggingConfiguration.LOG_MAX_FILE_SIZE_BYTES, 20 * 1024 * 1024);\n    Preconditions.checkArgument(maxLogFileSizeBytes > 0,\n                                \"Max log file size is invalid: %s\", maxLogFileSizeBytes);\n\n    inactiveIntervalMs = cConfig.getLong(LoggingConfiguration.LOG_SAVER_INACTIVE_FILE_INTERVAL_MS,\n                                              LoggingConfiguration.DEFAULT_LOG_SAVER_INACTIVE_FILE_INTERVAL_MS);\n    Preconditions.checkArgument(inactiveIntervalMs > 0,\n                                \"Inactive interval is invalid: %s\", inactiveIntervalMs);\n\n    checkpointIntervalMs = cConfig.getLong(LoggingConfiguration.LOG_SAVER_CHECKPOINT_INTERVAL_MS,\n                                                LoggingConfiguration.DEFAULT_LOG_SAVER_CHECKPOINT_INTERVAL_MS);\n    Preconditions.checkArgument(checkpointIntervalMs > 0,\n                                \"Checkpoint interval is invalid: %s\", checkpointIntervalMs);\n\n    logCleanupIntervalMins = cConfig.getInt(LoggingConfiguration.LOG_CLEANUP_RUN_INTERVAL_MINS,\n                                            LoggingConfiguration.DEFAULT_LOG_CLEANUP_RUN_INTERVAL_MINS);\n    Preconditions.checkArgument(logCleanupIntervalMins > 0,\n                                \"Log cleanup run interval is invalid: %s\", logCleanupIntervalMins);\n\n    this.scheduledExecutor =\n      MoreExecutors.listeningDecorator(Executors.newSingleThreadScheduledExecutor(\n        Threads.createDaemonThreadFactory(\"file-log-appender\")));\n  }","id":15721,"modified_method":"@Inject\n  public FileLogAppender(CConfiguration cConfig,\n                         DatasetFramework dsFramework,\n                         TransactionExecutorFactory txExecutorFactory,\n                         LocationFactory locationFactory) {\n    setName(APPENDER_NAME);\n\n    this.tableUtil = new LogSaverTableUtil(dsFramework, cConfig);\n    this.txExecutorFactory = txExecutorFactory;\n    this.locationFactory = locationFactory;\n\n    String baseDir = cConfig.get(LoggingConfiguration.LOG_BASE_DIR);\n    Preconditions.checkNotNull(baseDir, \"Log base dir cannot be null\");\n    this.logBaseDir = locationFactory.create(baseDir);\n\n    this.syncIntervalBytes = cConfig.getInt(LoggingConfiguration.LOG_FILE_SYNC_INTERVAL_BYTES, 50 * 1024);\n    Preconditions.checkArgument(this.syncIntervalBytes > 0,\n                                \"Log file sync interval is invalid: %s\", this.syncIntervalBytes);\n\n    long retentionDurationDays = cConfig.getLong(LoggingConfiguration.LOG_RETENTION_DURATION_DAYS, -1);\n    Preconditions.checkArgument(retentionDurationDays > 0,\n                                \"Log file retention duration is invalid: %s\", retentionDurationDays);\n    this.retentionDurationMs = TimeUnit.MILLISECONDS.convert(retentionDurationDays, TimeUnit.DAYS);\n\n    maxLogFileSizeBytes = cConfig.getLong(LoggingConfiguration.LOG_MAX_FILE_SIZE_BYTES, 20 * 1024 * 1024);\n    Preconditions.checkArgument(maxLogFileSizeBytes > 0,\n                                \"Max log file size is invalid: %s\", maxLogFileSizeBytes);\n\n    inactiveIntervalMs = cConfig.getLong(LoggingConfiguration.LOG_SAVER_INACTIVE_FILE_INTERVAL_MS,\n                                              LoggingConfiguration.DEFAULT_LOG_SAVER_INACTIVE_FILE_INTERVAL_MS);\n    Preconditions.checkArgument(inactiveIntervalMs > 0,\n                                \"Inactive interval is invalid: %s\", inactiveIntervalMs);\n\n    checkpointIntervalMs = cConfig.getLong(LoggingConfiguration.LOG_SAVER_CHECKPOINT_INTERVAL_MS,\n                                                LoggingConfiguration.DEFAULT_LOG_SAVER_CHECKPOINT_INTERVAL_MS);\n    Preconditions.checkArgument(checkpointIntervalMs > 0,\n                                \"Checkpoint interval is invalid: %s\", checkpointIntervalMs);\n\n    logCleanupIntervalMins = cConfig.getInt(LoggingConfiguration.LOG_CLEANUP_RUN_INTERVAL_MINS,\n                                            LoggingConfiguration.DEFAULT_LOG_CLEANUP_RUN_INTERVAL_MINS);\n    Preconditions.checkArgument(logCleanupIntervalMins > 0,\n                                \"Log cleanup run interval is invalid: %s\", logCleanupIntervalMins);\n\n    this.scheduledExecutor =\n      MoreExecutors.listeningDecorator(Executors.newSingleThreadScheduledExecutor(\n        Threads.createDaemonThreadFactory(\"file-log-appender\")));\n  }","commit_id":"9d47a52c531458434dd522aff05bee870fd84915","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testDeleteEmptyDir1() throws Exception {\n    FileSystem fileSystem = FileSystem.get(new Configuration());\n\n    // Create base dir\n    Location baseDir = locationFactory.create(TEMP_FOLDER.newFolder().toURI());\n\n    // Create dirs with files\n    Set<Location> files = Sets.newHashSet();\n    Set<Location> nonEmptyDirs = Sets.newHashSet();\n    for (int i = 0; i < 5; ++i) {\n      files.add(createFile(baseDir.append(String.valueOf(i))));\n\n      Location dir1 = createDir(baseDir.append(\"abc\"));\n      files.add(dir1);\n      nonEmptyDirs.add(dir1);\n      files.add(createFile(baseDir.append(\"abc/\" + i)));\n      files.add(createFile(baseDir.append(\"abc/def/\" + i)));\n\n      Location dir2 = createDir(baseDir.append(\"def\"));\n      files.add(dir2);\n      nonEmptyDirs.add(dir2);\n      files.add(createFile(baseDir.append(\"def/\" + i)));\n      files.add(createFile(baseDir.append(\"def/hij/\" + i)));\n    }\n\n    // Create empty dirs\n    Set<Location> emptyDirs = Sets.newHashSet();\n    for (int i = 0; i < 5; ++i) {\n      emptyDirs.add(createDir(baseDir.append(\"dir_\" + i)));\n      emptyDirs.add(createDir(baseDir.append(\"dir_\" + i + \"/emptyDir1\")));\n      emptyDirs.add(createDir(baseDir.append(\"dir_\" + i + \"/emptyDir2\")));\n\n      emptyDirs.add(createDir(baseDir.append(\"abc/dir_\" + i)));\n      emptyDirs.add(createDir(baseDir.append(\"abc/def/dir_\" + i)));\n\n      emptyDirs.add(createDir(baseDir.append(\"def/dir_\" + i)));\n      emptyDirs.add(createDir(baseDir.append(\"def/hij/dir_\" + i)));\n    }\n\n    LogCleanup logCleanup = new LogCleanup(null, baseDir, RETENTION_DURATION_MS);\n    for (Location location : Sets.newHashSet(Iterables.concat(nonEmptyDirs, emptyDirs))) {\n      logCleanup.deleteEmptyDir(location);\n    }\n\n    // Assert non-empty dirs (and their files) are still present\n    for (Location location : files) {\n      Assert.assertTrue(\"Location \" + location.toURI() + \" is deleted!\", location.exists());\n    }\n\n    // Assert empty dirs are deleted\n    for (Location location : emptyDirs) {\n      Assert.assertFalse(\"Dir \" + location.toURI() + \" is still present!\", location.exists());\n    }\n\n    // Assert base dir exists\n    Assert.assertTrue(baseDir.exists());\n\n    fileSystem.close();\n  }","id":15722,"modified_method":"@Test\n  public void testDeleteEmptyDir1() throws Exception {\n    // Create base dir\n    Location baseDir = injector.getInstance(LocationFactory.class).create(TEMP_FOLDER.newFolder().toURI());\n\n    // Create dirs with files\n    Set<Location> files = Sets.newHashSet();\n    Set<Location> nonEmptyDirs = Sets.newHashSet();\n    for (int i = 0; i < 5; ++i) {\n      files.add(createFile(baseDir.append(String.valueOf(i))));\n\n      Location dir1 = createDir(baseDir.append(\"abc\"));\n      files.add(dir1);\n      nonEmptyDirs.add(dir1);\n      files.add(createFile(baseDir.append(\"abc/\" + i)));\n      files.add(createFile(baseDir.append(\"abc/def/\" + i)));\n\n      Location dir2 = createDir(baseDir.append(\"def\"));\n      files.add(dir2);\n      nonEmptyDirs.add(dir2);\n      files.add(createFile(baseDir.append(\"def/\" + i)));\n      files.add(createFile(baseDir.append(\"def/hij/\" + i)));\n    }\n\n    // Create empty dirs\n    Set<Location> emptyDirs = Sets.newHashSet();\n    for (int i = 0; i < 5; ++i) {\n      emptyDirs.add(createDir(baseDir.append(\"dir_\" + i)));\n      emptyDirs.add(createDir(baseDir.append(\"dir_\" + i + \"/emptyDir1\")));\n      emptyDirs.add(createDir(baseDir.append(\"dir_\" + i + \"/emptyDir2\")));\n\n      emptyDirs.add(createDir(baseDir.append(\"abc/dir_\" + i)));\n      emptyDirs.add(createDir(baseDir.append(\"abc/def/dir_\" + i)));\n\n      emptyDirs.add(createDir(baseDir.append(\"def/dir_\" + i)));\n      emptyDirs.add(createDir(baseDir.append(\"def/hij/dir_\" + i)));\n    }\n\n    LogCleanup logCleanup = new LogCleanup(null, baseDir, RETENTION_DURATION_MS);\n    for (Location location : Sets.newHashSet(Iterables.concat(nonEmptyDirs, emptyDirs))) {\n      logCleanup.deleteEmptyDir(location);\n    }\n\n    // Assert non-empty dirs (and their files) are still present\n    for (Location location : files) {\n      Assert.assertTrue(\"Location \" + location.toURI() + \" is deleted!\", location.exists());\n    }\n\n    // Assert empty dirs are deleted\n    for (Location location : emptyDirs) {\n      Assert.assertFalse(\"Dir \" + location.toURI() + \" is still present!\", location.exists());\n    }\n\n    // Assert base dir exists\n    Assert.assertTrue(baseDir.exists());\n  }","commit_id":"9d47a52c531458434dd522aff05bee870fd84915","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testDeleteEmptyDir2() throws Exception {\n    FileSystem fileSystem = FileSystem.get(new Configuration());\n\n    // Create base dir\n    Location baseDir = locationFactory.create(TEMP_FOLDER.newFolder().toURI());\n\n    LogCleanup logCleanup = new LogCleanup(null, baseDir, RETENTION_DURATION_MS);\n\n    logCleanup.deleteEmptyDir(baseDir);\n    // Assert base dir exists\n    Assert.assertTrue(baseDir.exists());\n\n    Location rootPath = locationFactory.create(\"/\");\n    rootPath.mkdirs();\n    Assert.assertTrue(rootPath.exists());\n    logCleanup.deleteEmptyDir(rootPath);\n    // Assert root still exists\n    Assert.assertTrue(rootPath.exists());\n\n    Location tmpPath = locationFactory.create(\"/tmp\");\n    tmpPath.mkdirs();\n    Assert.assertTrue(tmpPath.exists());\n    logCleanup.deleteEmptyDir(tmpPath);\n    // Assert tmp still exists\n    Assert.assertTrue(tmpPath.exists());\n\n    fileSystem.close();\n  }","id":15723,"modified_method":"@Test\n  public void testDeleteEmptyDir2() throws Exception {\n    // Create base dir\n    LocationFactory locationFactory = injector.getInstance(LocationFactory.class);\n    Location baseDir = locationFactory.create(TEMP_FOLDER.newFolder().toURI());\n\n    LogCleanup logCleanup = new LogCleanup(null, baseDir, RETENTION_DURATION_MS);\n\n    logCleanup.deleteEmptyDir(baseDir);\n    // Assert base dir exists\n    Assert.assertTrue(baseDir.exists());\n\n    Location rootPath = locationFactory.create(\"/\");\n    rootPath.mkdirs();\n    Assert.assertTrue(rootPath.exists());\n    logCleanup.deleteEmptyDir(rootPath);\n    // Assert root still exists\n    Assert.assertTrue(rootPath.exists());\n\n    Location tmpPath = locationFactory.create(\"/tmp\");\n    tmpPath.mkdirs();\n    Assert.assertTrue(tmpPath.exists());\n    logCleanup.deleteEmptyDir(tmpPath);\n    // Assert tmp still exists\n    Assert.assertTrue(tmpPath.exists());\n  }","commit_id":"9d47a52c531458434dd522aff05bee870fd84915","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testCleanup() throws Exception {\n    DatasetFramework dsFramework = new InMemoryDatasetFramework(new InMemoryDefinitionRegistryFactory());\n    dsFramework.addModule(Id.DatasetModule.from(Constants.SYSTEM_NAMESPACE_ID, \"table\"),\n                          new InMemoryTableModule());\n\n    CConfiguration cConf = CConfiguration.create();\n\n    Configuration conf = HBaseConfiguration.create();\n    CConfigurationUtil.copyTxProperties(cConf, conf);\n    TransactionManager txManager = new TransactionManager(conf);\n    txManager.startAndWait();\n    TransactionSystemClient txClient = new InMemoryTxSystemClient(txManager);\n    FileMetaDataManager fileMetaDataManager =\n      new FileMetaDataManager(new LogSaverTableUtil(dsFramework, cConf), txClient, locationFactory);\n\n    // Create base dir\n    Location baseDir = locationFactory.create(TEMP_FOLDER.newFolder().toURI());\n\n    // Deletion boundary\n    long deletionBoundary = System.currentTimeMillis() - RETENTION_DURATION_MS;\n    LOG.info(\"deletionBoundary = {}\", deletionBoundary);\n\n    // Setup directories\n    LoggingContext dummyContext = new FlowletLoggingContext(\"act\", \"app\", \"flw\", \"flwt\");\n\n    Location contextDir = baseDir.append(\"act/app/flw\");\n    List<Location> toDelete = Lists.newArrayList();\n    for (int i = 0; i < 5; ++i) {\n      toDelete.add(contextDir.append(\"2012-12-1\" + i + \"/del-1\"));\n      toDelete.add(contextDir.append(\"2012-12-1\" + i + \"/del-2\"));\n      toDelete.add(contextDir.append(\"2012-12-1\" + i + \"/del-3\"));\n      toDelete.add(contextDir.append(\"2012-12-1\" + i + \"/del-4\"));\n\n      toDelete.add(contextDir.append(\"del-1\"));\n    }\n\n    Assert.assertFalse(toDelete.isEmpty());\n\n    List<Location> notDelete = Lists.newArrayList();\n    for (int i = 0; i < 5; ++i) {\n      toDelete.add(contextDir.append(\"2012-12-2\" + i + \"/del-5\"));\n      notDelete.add(contextDir.append(\"2012-12-2\" + i + \"/nodel-1\"));\n      notDelete.add(contextDir.append(\"2012-12-2\" + i + \"/nodel-2\"));\n      notDelete.add(contextDir.append(\"2012-12-2\" + i + \"/nodel-3\"));\n    }\n\n    Assert.assertFalse(notDelete.isEmpty());\n\n    int counter = 0;\n    for (Location location : toDelete) {\n      fileMetaDataManager.writeMetaData(dummyContext, deletionBoundary - counter - 10000,\n                                        createFile(location));\n      counter++;\n    }\n\n    for (Location location : notDelete) {\n      fileMetaDataManager.writeMetaData(dummyContext, deletionBoundary + counter + 10000,\n                                        createFile(location));\n      counter++;\n    }\n\n    Assert.assertEquals(locationListsToString(toDelete, notDelete),\n      toDelete.size() + notDelete.size(), fileMetaDataManager.listFiles(dummyContext).size());\n\n    LogCleanup logCleanup = new LogCleanup(fileMetaDataManager, baseDir, RETENTION_DURATION_MS);\n    logCleanup.run();\n    logCleanup.run();\n\n    for (Location location : toDelete) {\n      Assert.assertFalse(\"Location \" + location.toURI() + \" is not deleted!\", location.exists());\n    }\n\n    for (Location location : notDelete) {\n      Assert.assertTrue(\"Location \" + location.toURI() + \" is deleted!\", location.exists());\n    }\n\n    for (int i = 0; i < 5; ++i) {\n      Location delDir = contextDir.append(\"2012-12-1\" + i);\n      Assert.assertFalse(\"Location \" + delDir.toURI() + \" is not deleted!\", delDir.exists());\n    }\n  }","id":15724,"modified_method":"@Test\n  public void testCleanup() throws Exception {\n    FileMetaDataManager fileMetaDataManager = injector.getInstance(FileMetaDataManager.class);\n\n    // Create base dir\n    LocationFactory locationFactory = injector.getInstance(LocationFactory.class);\n    Location baseDir = locationFactory.create(TEMP_FOLDER.newFolder().toURI());\n\n    // Deletion boundary\n    long deletionBoundary = System.currentTimeMillis() - RETENTION_DURATION_MS;\n    LOG.info(\"deletionBoundary = {}\", deletionBoundary);\n\n    // Setup directories\n    LoggingContext dummyContext = new FlowletLoggingContext(\"act\", \"app\", \"flw\", \"flwt\");\n\n    Location contextDir = baseDir.append(\"act/app/flw\");\n    List<Location> toDelete = Lists.newArrayList();\n    for (int i = 0; i < 5; ++i) {\n      toDelete.add(contextDir.append(\"2012-12-1\" + i + \"/del-1\"));\n      toDelete.add(contextDir.append(\"2012-12-1\" + i + \"/del-2\"));\n      toDelete.add(contextDir.append(\"2012-12-1\" + i + \"/del-3\"));\n      toDelete.add(contextDir.append(\"2012-12-1\" + i + \"/del-4\"));\n\n      toDelete.add(contextDir.append(\"del-1\"));\n    }\n\n    Assert.assertFalse(toDelete.isEmpty());\n\n    List<Location> notDelete = Lists.newArrayList();\n    for (int i = 0; i < 5; ++i) {\n      toDelete.add(contextDir.append(\"2012-12-2\" + i + \"/del-5\"));\n      notDelete.add(contextDir.append(\"2012-12-2\" + i + \"/nodel-1\"));\n      notDelete.add(contextDir.append(\"2012-12-2\" + i + \"/nodel-2\"));\n      notDelete.add(contextDir.append(\"2012-12-2\" + i + \"/nodel-3\"));\n    }\n\n    Assert.assertFalse(notDelete.isEmpty());\n\n    int counter = 0;\n    for (Location location : toDelete) {\n      fileMetaDataManager.writeMetaData(dummyContext, deletionBoundary - counter - 10000,\n                                        createFile(location));\n      counter++;\n    }\n\n    for (Location location : notDelete) {\n      fileMetaDataManager.writeMetaData(dummyContext, deletionBoundary + counter + 10000,\n                                        createFile(location));\n      counter++;\n    }\n\n    Assert.assertEquals(locationListsToString(toDelete, notDelete),\n      toDelete.size() + notDelete.size(), fileMetaDataManager.listFiles(dummyContext).size());\n\n    LogCleanup logCleanup = new LogCleanup(fileMetaDataManager, baseDir, RETENTION_DURATION_MS);\n    logCleanup.run();\n    logCleanup.run();\n\n    for (Location location : toDelete) {\n      Assert.assertFalse(\"Location \" + location.toURI() + \" is not deleted!\", location.exists());\n    }\n\n    for (Location location : notDelete) {\n      Assert.assertTrue(\"Location \" + location.toURI() + \" is deleted!\", location.exists());\n    }\n\n    for (int i = 0; i < 5; ++i) {\n      Location delDir = contextDir.append(\"2012-12-1\" + i);\n      Assert.assertFalse(\"Location \" + delDir.toURI() + \" is not deleted!\", delDir.exists());\n    }\n  }","commit_id":"9d47a52c531458434dd522aff05bee870fd84915","url":"https://github.com/caskdata/cdap"},{"original_method":"@BeforeClass\n  public static void init() throws IOException {\n    locationFactory = new LocalLocationFactory(TEMP_FOLDER.newFolder());\n  }","id":15725,"modified_method":"@BeforeClass\n  public static void init() throws Exception {\n    Configuration hConf = HBaseConfiguration.create();\n    CConfiguration cConf = CConfiguration.create();\n    cConf.set(Constants.CFG_LOCAL_DATA_DIR, TEMP_FOLDER.newFolder().getAbsolutePath());\n    injector = Guice.createInjector(\n      new ConfigModule(cConf, hConf),\n      new LocationRuntimeModule().getInMemoryModules(),\n      new TransactionModules().getInMemoryModules(),\n      new AbstractModule() {\n        @Override\n        protected void configure() {\n          bind(DatasetFramework.class)\n            .toInstance(new InMemoryDatasetFramework(new InMemoryDefinitionRegistryFactory()));\n        }\n      });\n\n    txManager = injector.getInstance(TransactionManager.class);\n    txManager.startAndWait();\n\n    DatasetFramework dsFramework = injector.getInstance(DatasetFramework.class);\n    dsFramework.addModule(Id.DatasetModule.from(Constants.SYSTEM_NAMESPACE_ID, \"table\"),\n                          new InMemoryTableModule());\n  }","commit_id":"9d47a52c531458434dd522aff05bee870fd84915","url":"https://github.com/caskdata/cdap"},{"original_method":"@Inject\n  public LogSaver(LogSaverTableUtil tableUtil, TransactionExecutorFactory txExecutorFactory,\n                  KafkaClientService kafkaClient, CConfiguration cConfig,\n                  LocationFactory locationFactory) throws Exception {\n    LOG.info(\"Initializing LogSaver...\");\n\n    this.topic = KafkaTopic.getTopic();\n    LOG.info(String.format(\"Kafka topic is %s\", this.topic));\n    this.serializer = new LoggingEventSerializer();\n\n    this.checkpointManager = new CheckpointManager(tableUtil, txExecutorFactory, topic);\n    FileMetaDataManager fileMetaDataManager = new FileMetaDataManager(tableUtil, txExecutorFactory, locationFactory);\n    this.messageTable = TreeBasedTable.create();\n\n    this.kafkaClient = kafkaClient;\n\n    String baseDir = cConfig.get(LoggingConfiguration.LOG_BASE_DIR);\n    Preconditions.checkNotNull(baseDir, \"Log base dir cannot be null\");\n    Location logBaseDir = locationFactory.create(baseDir);\n    LOG.info(String.format(\"Log base dir is %s\", logBaseDir.toURI()));\n\n    long retentionDurationDays = cConfig.getLong(LoggingConfiguration.LOG_RETENTION_DURATION_DAYS,\n                                                 LoggingConfiguration.DEFAULT_LOG_RETENTION_DURATION_DAYS);\n    Preconditions.checkArgument(retentionDurationDays > 0,\n                                \"Log file retention duration is invalid: %s\", retentionDurationDays);\n    long retentionDurationMs = TimeUnit.MILLISECONDS.convert(retentionDurationDays, TimeUnit.DAYS);\n\n    long maxLogFileSizeBytes = cConfig.getLong(LoggingConfiguration.LOG_MAX_FILE_SIZE_BYTES, 20 * 1024 * 1024);\n    Preconditions.checkArgument(maxLogFileSizeBytes > 0,\n                                \"Max log file size is invalid: %s\", maxLogFileSizeBytes);\n\n    int syncIntervalBytes = cConfig.getInt(LoggingConfiguration.LOG_FILE_SYNC_INTERVAL_BYTES, 50 * 1024);\n    Preconditions.checkArgument(syncIntervalBytes > 0,\n                                \"Log file sync interval is invalid: %s\", syncIntervalBytes);\n\n    long checkpointIntervalMs = cConfig.getLong(LoggingConfiguration.LOG_SAVER_CHECKPOINT_INTERVAL_MS,\n                                                LoggingConfiguration.DEFAULT_LOG_SAVER_CHECKPOINT_INTERVAL_MS);\n    Preconditions.checkArgument(checkpointIntervalMs > 0,\n                                \"Checkpoint interval is invalid: %s\", checkpointIntervalMs);\n\n    long inactiveIntervalMs = cConfig.getLong(LoggingConfiguration.LOG_SAVER_INACTIVE_FILE_INTERVAL_MS,\n                                              LoggingConfiguration.DEFAULT_LOG_SAVER_INACTIVE_FILE_INTERVAL_MS);\n    Preconditions.checkArgument(inactiveIntervalMs > 0,\n                                \"Inactive interval is invalid: %s\", inactiveIntervalMs);\n\n    this.eventBucketIntervalMs = cConfig.getLong(LoggingConfiguration.LOG_SAVER_EVENT_BUCKET_INTERVAL_MS,\n                                                 LoggingConfiguration.DEFAULT_LOG_SAVER_EVENT_BUCKET_INTERVAL_MS);\n    Preconditions.checkArgument(this.eventBucketIntervalMs > 0,\n                                \"Event bucket interval is invalid: %s\", this.eventBucketIntervalMs);\n\n    this.maxNumberOfBucketsInTable = cConfig.getLong\n      (LoggingConfiguration.LOG_SAVER_MAXIMUM_INMEMORY_EVENT_BUCKETS,\n       LoggingConfiguration.DEFAULT_LOG_SAVER_MAXIMUM_INMEMORY_EVENT_BUCKETS);\n    Preconditions.checkArgument(this.maxNumberOfBucketsInTable > 0,\n                                \"Maximum number of event buckets in memory is invalid: %s\",\n                                this.maxNumberOfBucketsInTable);\n\n\n    long topicCreationSleepMs = cConfig.getLong(LoggingConfiguration.LOG_SAVER_TOPIC_WAIT_SLEEP_MS,\n                                                LoggingConfiguration.DEFAULT_LOG_SAVER_TOPIC_WAIT_SLEEP_MS);\n    Preconditions.checkArgument(topicCreationSleepMs > 0,\n                                \"Topic creation wait sleep is invalid: %s\", topicCreationSleepMs);\n\n    logCleanupIntervalMins = cConfig.getInt(LoggingConfiguration.LOG_CLEANUP_RUN_INTERVAL_MINS,\n                                            LoggingConfiguration.DEFAULT_LOG_CLEANUP_RUN_INTERVAL_MINS);\n    Preconditions.checkArgument(logCleanupIntervalMins > 0,\n                                \"Log cleanup run interval is invalid: %s\", logCleanupIntervalMins);\n\n    AvroFileWriter avroFileWriter = new AvroFileWriter(fileMetaDataManager,\n                                                       logBaseDir,\n                                                       serializer.getAvroSchema(),\n                                                       maxLogFileSizeBytes, syncIntervalBytes,\n                                                       inactiveIntervalMs);\n\n    this.logFileWriter = new CheckpointingLogFileWriter(avroFileWriter, checkpointManager, checkpointIntervalMs);\n\n    this.scheduledExecutor =\n      MoreExecutors.listeningDecorator(Executors.newSingleThreadScheduledExecutor(\n        Threads.createDaemonThreadFactory(\"log-saver-main\")));\n    this.logCleanup = new LogCleanup(fileMetaDataManager, logBaseDir, retentionDurationMs);\n\n    this.kafkaCancelMap = new HashMap<Integer, Cancellable>();\n    this.kafkaCancelCallbackLatchMap = new HashMap<Integer, CountDownLatch>();\n  }","id":15726,"modified_method":"@Inject\n  public LogSaver(CheckpointManager checkpointManager,\n                  FileMetaDataManager fileMetaDataManager, KafkaClientService kafkaClient,\n                  CConfiguration cConfig, LocationFactory locationFactory) throws Exception {\n    LOG.info(\"Initializing LogSaver...\");\n\n    this.topic = KafkaTopic.getTopic();\n    LOG.info(String.format(\"Kafka topic is %s\", this.topic));\n    this.serializer = new LoggingEventSerializer();\n\n    this.checkpointManager = checkpointManager;\n    this.messageTable = TreeBasedTable.create();\n\n    this.kafkaClient = kafkaClient;\n\n    String baseDir = cConfig.get(LoggingConfiguration.LOG_BASE_DIR);\n    Preconditions.checkNotNull(baseDir, \"Log base dir cannot be null\");\n    Location logBaseDir = locationFactory.create(baseDir);\n    LOG.info(String.format(\"Log base dir is %s\", logBaseDir.toURI()));\n\n    long retentionDurationDays = cConfig.getLong(LoggingConfiguration.LOG_RETENTION_DURATION_DAYS,\n                                                 LoggingConfiguration.DEFAULT_LOG_RETENTION_DURATION_DAYS);\n    Preconditions.checkArgument(retentionDurationDays > 0,\n                                \"Log file retention duration is invalid: %s\", retentionDurationDays);\n    long retentionDurationMs = TimeUnit.MILLISECONDS.convert(retentionDurationDays, TimeUnit.DAYS);\n\n    long maxLogFileSizeBytes = cConfig.getLong(LoggingConfiguration.LOG_MAX_FILE_SIZE_BYTES, 20 * 1024 * 1024);\n    Preconditions.checkArgument(maxLogFileSizeBytes > 0,\n                                \"Max log file size is invalid: %s\", maxLogFileSizeBytes);\n\n    int syncIntervalBytes = cConfig.getInt(LoggingConfiguration.LOG_FILE_SYNC_INTERVAL_BYTES, 50 * 1024);\n    Preconditions.checkArgument(syncIntervalBytes > 0,\n                                \"Log file sync interval is invalid: %s\", syncIntervalBytes);\n\n    long checkpointIntervalMs = cConfig.getLong(LoggingConfiguration.LOG_SAVER_CHECKPOINT_INTERVAL_MS,\n                                                LoggingConfiguration.DEFAULT_LOG_SAVER_CHECKPOINT_INTERVAL_MS);\n    Preconditions.checkArgument(checkpointIntervalMs > 0,\n                                \"Checkpoint interval is invalid: %s\", checkpointIntervalMs);\n\n    long inactiveIntervalMs = cConfig.getLong(LoggingConfiguration.LOG_SAVER_INACTIVE_FILE_INTERVAL_MS,\n                                              LoggingConfiguration.DEFAULT_LOG_SAVER_INACTIVE_FILE_INTERVAL_MS);\n    Preconditions.checkArgument(inactiveIntervalMs > 0,\n                                \"Inactive interval is invalid: %s\", inactiveIntervalMs);\n\n    this.eventBucketIntervalMs = cConfig.getLong(LoggingConfiguration.LOG_SAVER_EVENT_BUCKET_INTERVAL_MS,\n                                                 LoggingConfiguration.DEFAULT_LOG_SAVER_EVENT_BUCKET_INTERVAL_MS);\n    Preconditions.checkArgument(this.eventBucketIntervalMs > 0,\n                                \"Event bucket interval is invalid: %s\", this.eventBucketIntervalMs);\n\n    this.maxNumberOfBucketsInTable = cConfig.getLong\n      (LoggingConfiguration.LOG_SAVER_MAXIMUM_INMEMORY_EVENT_BUCKETS,\n       LoggingConfiguration.DEFAULT_LOG_SAVER_MAXIMUM_INMEMORY_EVENT_BUCKETS);\n    Preconditions.checkArgument(this.maxNumberOfBucketsInTable > 0,\n                                \"Maximum number of event buckets in memory is invalid: %s\",\n                                this.maxNumberOfBucketsInTable);\n\n\n    long topicCreationSleepMs = cConfig.getLong(LoggingConfiguration.LOG_SAVER_TOPIC_WAIT_SLEEP_MS,\n                                                LoggingConfiguration.DEFAULT_LOG_SAVER_TOPIC_WAIT_SLEEP_MS);\n    Preconditions.checkArgument(topicCreationSleepMs > 0,\n                                \"Topic creation wait sleep is invalid: %s\", topicCreationSleepMs);\n\n    logCleanupIntervalMins = cConfig.getInt(LoggingConfiguration.LOG_CLEANUP_RUN_INTERVAL_MINS,\n                                            LoggingConfiguration.DEFAULT_LOG_CLEANUP_RUN_INTERVAL_MINS);\n    Preconditions.checkArgument(logCleanupIntervalMins > 0,\n                                \"Log cleanup run interval is invalid: %s\", logCleanupIntervalMins);\n\n    AvroFileWriter avroFileWriter = new AvroFileWriter(fileMetaDataManager,\n                                                       logBaseDir,\n                                                       serializer.getAvroSchema(),\n                                                       maxLogFileSizeBytes, syncIntervalBytes,\n                                                       inactiveIntervalMs);\n\n    this.logFileWriter = new CheckpointingLogFileWriter(avroFileWriter, checkpointManager, checkpointIntervalMs);\n\n    this.scheduledExecutor =\n      MoreExecutors.listeningDecorator(Executors.newSingleThreadScheduledExecutor(\n        Threads.createDaemonThreadFactory(\"log-saver-main\")));\n    this.logCleanup = new LogCleanup(fileMetaDataManager, logBaseDir, retentionDurationMs);\n\n    this.kafkaCancelMap = new HashMap<Integer, Cancellable>();\n    this.kafkaCancelCallbackLatchMap = new HashMap<Integer, CountDownLatch>();\n  }","commit_id":"9d47a52c531458434dd522aff05bee870fd84915","url":"https://github.com/caskdata/cdap"},{"original_method":"private void testLogRead(LoggingContext loggingContext) throws Exception {\n    LOG.info(\"Verifying logging context {}\", loggingContext.getLogPathFragment());\n    DistributedLogReader distributedLogReader =\n      new DistributedLogReader(dsFramework, txClient, cConf, new LocalLocationFactory());\n\n    LogCallback logCallback1 = new LogCallback();\n    distributedLogReader.getLog(loggingContext, 0, Long.MAX_VALUE, Filter.EMPTY_FILTER, logCallback1);\n    List<LogEvent> allEvents = logCallback1.getEvents();\n\n    Assert.assertEquals(60, allEvents.size());\n    for (int i = 0; i < 60; ++i) {\n      Assert.assertEquals(String.format(\"Test log message %d arg1 arg2\", i),\n                          allEvents.get(i).getLoggingEvent().getFormattedMessage());\n      if (loggingContext instanceof ServiceLoggingContext) {\n        Assert.assertEquals(\n          loggingContext.getSystemTagsMap().get(SystemLoggingContext.TAG_SYSTEM_ID).getValue(),\n          allEvents.get(i).getLoggingEvent().getMDCPropertyMap().get(SystemLoggingContext.TAG_SYSTEM_ID));\n        Assert.assertEquals(\n          loggingContext.getSystemTagsMap().get(ComponentLoggingContext.TAG_COMPONENT_ID).getValue(),\n          allEvents.get(i).getLoggingEvent().getMDCPropertyMap().get(ComponentLoggingContext.TAG_COMPONENT_ID));\n        Assert.assertEquals(\n          loggingContext.getSystemTagsMap().get(ServiceLoggingContext.TAG_SERVICE_ID).getValue(),\n          allEvents.get(i).getLoggingEvent().getMDCPropertyMap().get(ServiceLoggingContext.TAG_SERVICE_ID));\n      } else {\n        Assert.assertEquals(\n          loggingContext.getSystemTagsMap().get(NamespaceLoggingContext.TAG_NAMESPACE_ID).getValue(),\n          allEvents.get(i).getLoggingEvent().getMDCPropertyMap().get(NamespaceLoggingContext.TAG_NAMESPACE_ID));\n        Assert.assertEquals(\n          loggingContext.getSystemTagsMap().get(ApplicationLoggingContext.TAG_APPLICATION_ID).getValue(),\n          allEvents.get(i).getLoggingEvent().getMDCPropertyMap().get(ApplicationLoggingContext.TAG_APPLICATION_ID));\n        Assert.assertEquals(\n          loggingContext.getSystemTagsMap().get(FlowletLoggingContext.TAG_FLOW_ID).getValue(),\n          allEvents.get(i).getLoggingEvent().getMDCPropertyMap().get(FlowletLoggingContext.TAG_FLOW_ID));\n      }\n    }\n\n    LogCallback logCallback2 = new LogCallback();\n    distributedLogReader.getLog(loggingContext, allEvents.get(10).getLoggingEvent().getTimeStamp(),\n                                allEvents.get(20).getLoggingEvent().getTimeStamp(), Filter.EMPTY_FILTER, logCallback2);\n    List<LogEvent> events = logCallback2.getEvents();\n    Assert.assertEquals(10, events.size());\n    Assert.assertEquals(\"Test log message 10 arg1 arg2\", events.get(0).getLoggingEvent().getFormattedMessage());\n    Assert.assertEquals(\"Test log message 19 arg1 arg2\", events.get(9).getLoggingEvent().getFormattedMessage());\n\n    LogCallback logCallback3 = new LogCallback();\n    distributedLogReader.getLog(loggingContext, allEvents.get(5).getLoggingEvent().getTimeStamp(),\n                                allEvents.get(55).getLoggingEvent().getTimeStamp(), Filter.EMPTY_FILTER, logCallback3);\n    events = logCallback3.getEvents();\n    Assert.assertEquals(50, events.size());\n    Assert.assertEquals(\"Test log message 5 arg1 arg2\", events.get(0).getLoggingEvent().getFormattedMessage());\n    Assert.assertEquals(\"Test log message 54 arg1 arg2\", events.get(49).getLoggingEvent().getFormattedMessage());\n\n    LogCallback logCallback4 = new LogCallback();\n    distributedLogReader.getLog(loggingContext, allEvents.get(30).getLoggingEvent().getTimeStamp(),\n                                allEvents.get(53).getLoggingEvent().getTimeStamp(), Filter.EMPTY_FILTER, logCallback4);\n    events = logCallback4.getEvents();\n    Assert.assertEquals(23, events.size());\n    Assert.assertEquals(\"Test log message 30 arg1 arg2\", events.get(0).getLoggingEvent().getFormattedMessage());\n    Assert.assertEquals(\"Test log message 52 arg1 arg2\", events.get(22).getLoggingEvent().getFormattedMessage());\n\n    LogCallback logCallback5 = new LogCallback();\n    distributedLogReader.getLog(loggingContext, allEvents.get(35).getLoggingEvent().getTimeStamp(),\n                                allEvents.get(38).getLoggingEvent().getTimeStamp(), Filter.EMPTY_FILTER, logCallback5);\n    events = logCallback5.getEvents();\n    Assert.assertEquals(3, events.size());\n    Assert.assertEquals(\"Test log message 35 arg1 arg2\", events.get(0).getLoggingEvent().getFormattedMessage());\n    Assert.assertEquals(\"Test log message 37 arg1 arg2\", events.get(2).getLoggingEvent().getFormattedMessage());\n\n    LogCallback logCallback6 = new LogCallback();\n    distributedLogReader.getLog(loggingContext, allEvents.get(53).getLoggingEvent().getTimeStamp(),\n                                allEvents.get(59).getLoggingEvent().getTimeStamp(), Filter.EMPTY_FILTER, logCallback6);\n    events = logCallback6.getEvents();\n    Assert.assertEquals(6, events.size());\n    Assert.assertEquals(\"Test log message 53 arg1 arg2\", events.get(0).getLoggingEvent().getFormattedMessage());\n    Assert.assertEquals(\"Test log message 58 arg1 arg2\", events.get(5).getLoggingEvent().getFormattedMessage());\n\n    LogCallback logCallback7 = new LogCallback();\n    distributedLogReader.getLog(loggingContext, allEvents.get(59).getLoggingEvent().getTimeStamp(),\n                                allEvents.get(59).getLoggingEvent().getTimeStamp(), Filter.EMPTY_FILTER, logCallback7);\n    events = logCallback7.getEvents();\n    Assert.assertEquals(0, events.size());\n\n    LogCallback logCallback8 = new LogCallback();\n    distributedLogReader.getLog(loggingContext, allEvents.get(0).getLoggingEvent().getTimeStamp(),\n                                allEvents.get(0).getLoggingEvent().getTimeStamp(), Filter.EMPTY_FILTER, logCallback8);\n    events = logCallback8.getEvents();\n    Assert.assertEquals(0, events.size());\n\n    LogCallback logCallback9 = new LogCallback();\n    distributedLogReader.getLog(loggingContext, allEvents.get(20).getLoggingEvent().getTimeStamp(),\n                                allEvents.get(20).getLoggingEvent().getTimeStamp(), Filter.EMPTY_FILTER, logCallback9);\n    events = logCallback9.getEvents();\n    Assert.assertEquals(0, events.size());\n\n    LogCallback logCallback10 = new LogCallback();\n    distributedLogReader.getLog(loggingContext, allEvents.get(32).getLoggingEvent().getTimeStamp() - 999999,\n                                allEvents.get(45).getLoggingEvent().getTimeStamp(), Filter.EMPTY_FILTER, logCallback10);\n    events = logCallback10.getEvents();\n    Assert.assertTrue(events.size() > 13);\n    Assert.assertEquals(\"Test log message 32 arg1 arg2\",\n                        events.get(events.size() - 13).getLoggingEvent().getFormattedMessage());\n    Assert.assertEquals(\"Test log message 44 arg1 arg2\",\n                        events.get(events.size() - 1).getLoggingEvent().getFormattedMessage());\n\n    LogCallback logCallback11 = new LogCallback();\n    distributedLogReader.getLog(loggingContext, allEvents.get(18).getLoggingEvent().getTimeStamp(),\n                                allEvents.get(34).getLoggingEvent().getTimeStamp() + 999999,\n                                Filter.EMPTY_FILTER, logCallback11);\n    events = logCallback11.getEvents();\n    Assert.assertTrue(events.size() > 16);\n    Assert.assertEquals(\"Test log message 18 arg1 arg2\", events.get(0).getLoggingEvent().getFormattedMessage());\n    Assert.assertEquals(\"Test log message 33 arg1 arg2\",\n                        events.get(events.size() - 1 - (events.size() - 16)).getLoggingEvent().getFormattedMessage());\n  }","id":15727,"modified_method":"private void testLogRead(LoggingContext loggingContext) throws Exception {\n    LOG.info(\"Verifying logging context {}\", loggingContext.getLogPathFragment());\n    DistributedLogReader distributedLogReader = injector.getInstance(DistributedLogReader.class);\n\n    LogCallback logCallback1 = new LogCallback();\n    distributedLogReader.getLog(loggingContext, 0, Long.MAX_VALUE, Filter.EMPTY_FILTER, logCallback1);\n    List<LogEvent> allEvents = logCallback1.getEvents();\n\n    Assert.assertEquals(60, allEvents.size());\n    for (int i = 0; i < 60; ++i) {\n      Assert.assertEquals(String.format(\"Test log message %d arg1 arg2\", i),\n                          allEvents.get(i).getLoggingEvent().getFormattedMessage());\n      if (loggingContext instanceof ServiceLoggingContext) {\n        Assert.assertEquals(\n          loggingContext.getSystemTagsMap().get(SystemLoggingContext.TAG_SYSTEM_ID).getValue(),\n          allEvents.get(i).getLoggingEvent().getMDCPropertyMap().get(SystemLoggingContext.TAG_SYSTEM_ID));\n        Assert.assertEquals(\n          loggingContext.getSystemTagsMap().get(ComponentLoggingContext.TAG_COMPONENT_ID).getValue(),\n          allEvents.get(i).getLoggingEvent().getMDCPropertyMap().get(ComponentLoggingContext.TAG_COMPONENT_ID));\n        Assert.assertEquals(\n          loggingContext.getSystemTagsMap().get(ServiceLoggingContext.TAG_SERVICE_ID).getValue(),\n          allEvents.get(i).getLoggingEvent().getMDCPropertyMap().get(ServiceLoggingContext.TAG_SERVICE_ID));\n      } else {\n        Assert.assertEquals(\n          loggingContext.getSystemTagsMap().get(NamespaceLoggingContext.TAG_NAMESPACE_ID).getValue(),\n          allEvents.get(i).getLoggingEvent().getMDCPropertyMap().get(NamespaceLoggingContext.TAG_NAMESPACE_ID));\n        Assert.assertEquals(\n          loggingContext.getSystemTagsMap().get(ApplicationLoggingContext.TAG_APPLICATION_ID).getValue(),\n          allEvents.get(i).getLoggingEvent().getMDCPropertyMap().get(ApplicationLoggingContext.TAG_APPLICATION_ID));\n        Assert.assertEquals(\n          loggingContext.getSystemTagsMap().get(FlowletLoggingContext.TAG_FLOW_ID).getValue(),\n          allEvents.get(i).getLoggingEvent().getMDCPropertyMap().get(FlowletLoggingContext.TAG_FLOW_ID));\n      }\n    }\n\n    LogCallback logCallback2 = new LogCallback();\n    distributedLogReader.getLog(loggingContext, allEvents.get(10).getLoggingEvent().getTimeStamp(),\n                                allEvents.get(20).getLoggingEvent().getTimeStamp(), Filter.EMPTY_FILTER, logCallback2);\n    List<LogEvent> events = logCallback2.getEvents();\n    Assert.assertEquals(10, events.size());\n    Assert.assertEquals(\"Test log message 10 arg1 arg2\", events.get(0).getLoggingEvent().getFormattedMessage());\n    Assert.assertEquals(\"Test log message 19 arg1 arg2\", events.get(9).getLoggingEvent().getFormattedMessage());\n\n    LogCallback logCallback3 = new LogCallback();\n    distributedLogReader.getLog(loggingContext, allEvents.get(5).getLoggingEvent().getTimeStamp(),\n                                allEvents.get(55).getLoggingEvent().getTimeStamp(), Filter.EMPTY_FILTER, logCallback3);\n    events = logCallback3.getEvents();\n    Assert.assertEquals(50, events.size());\n    Assert.assertEquals(\"Test log message 5 arg1 arg2\", events.get(0).getLoggingEvent().getFormattedMessage());\n    Assert.assertEquals(\"Test log message 54 arg1 arg2\", events.get(49).getLoggingEvent().getFormattedMessage());\n\n    LogCallback logCallback4 = new LogCallback();\n    distributedLogReader.getLog(loggingContext, allEvents.get(30).getLoggingEvent().getTimeStamp(),\n                                allEvents.get(53).getLoggingEvent().getTimeStamp(), Filter.EMPTY_FILTER, logCallback4);\n    events = logCallback4.getEvents();\n    Assert.assertEquals(23, events.size());\n    Assert.assertEquals(\"Test log message 30 arg1 arg2\", events.get(0).getLoggingEvent().getFormattedMessage());\n    Assert.assertEquals(\"Test log message 52 arg1 arg2\", events.get(22).getLoggingEvent().getFormattedMessage());\n\n    LogCallback logCallback5 = new LogCallback();\n    distributedLogReader.getLog(loggingContext, allEvents.get(35).getLoggingEvent().getTimeStamp(),\n                                allEvents.get(38).getLoggingEvent().getTimeStamp(), Filter.EMPTY_FILTER, logCallback5);\n    events = logCallback5.getEvents();\n    Assert.assertEquals(3, events.size());\n    Assert.assertEquals(\"Test log message 35 arg1 arg2\", events.get(0).getLoggingEvent().getFormattedMessage());\n    Assert.assertEquals(\"Test log message 37 arg1 arg2\", events.get(2).getLoggingEvent().getFormattedMessage());\n\n    LogCallback logCallback6 = new LogCallback();\n    distributedLogReader.getLog(loggingContext, allEvents.get(53).getLoggingEvent().getTimeStamp(),\n                                allEvents.get(59).getLoggingEvent().getTimeStamp(), Filter.EMPTY_FILTER, logCallback6);\n    events = logCallback6.getEvents();\n    Assert.assertEquals(6, events.size());\n    Assert.assertEquals(\"Test log message 53 arg1 arg2\", events.get(0).getLoggingEvent().getFormattedMessage());\n    Assert.assertEquals(\"Test log message 58 arg1 arg2\", events.get(5).getLoggingEvent().getFormattedMessage());\n\n    LogCallback logCallback7 = new LogCallback();\n    distributedLogReader.getLog(loggingContext, allEvents.get(59).getLoggingEvent().getTimeStamp(),\n                                allEvents.get(59).getLoggingEvent().getTimeStamp(), Filter.EMPTY_FILTER, logCallback7);\n    events = logCallback7.getEvents();\n    Assert.assertEquals(0, events.size());\n\n    LogCallback logCallback8 = new LogCallback();\n    distributedLogReader.getLog(loggingContext, allEvents.get(0).getLoggingEvent().getTimeStamp(),\n                                allEvents.get(0).getLoggingEvent().getTimeStamp(), Filter.EMPTY_FILTER, logCallback8);\n    events = logCallback8.getEvents();\n    Assert.assertEquals(0, events.size());\n\n    LogCallback logCallback9 = new LogCallback();\n    distributedLogReader.getLog(loggingContext, allEvents.get(20).getLoggingEvent().getTimeStamp(),\n                                allEvents.get(20).getLoggingEvent().getTimeStamp(), Filter.EMPTY_FILTER, logCallback9);\n    events = logCallback9.getEvents();\n    Assert.assertEquals(0, events.size());\n\n    LogCallback logCallback10 = new LogCallback();\n    distributedLogReader.getLog(loggingContext, allEvents.get(32).getLoggingEvent().getTimeStamp() - 999999,\n                                allEvents.get(45).getLoggingEvent().getTimeStamp(), Filter.EMPTY_FILTER, logCallback10);\n    events = logCallback10.getEvents();\n    Assert.assertTrue(events.size() > 13);\n    Assert.assertEquals(\"Test log message 32 arg1 arg2\",\n                        events.get(events.size() - 13).getLoggingEvent().getFormattedMessage());\n    Assert.assertEquals(\"Test log message 44 arg1 arg2\",\n                        events.get(events.size() - 1).getLoggingEvent().getFormattedMessage());\n\n    LogCallback logCallback11 = new LogCallback();\n    distributedLogReader.getLog(loggingContext, allEvents.get(18).getLoggingEvent().getTimeStamp(),\n                                allEvents.get(34).getLoggingEvent().getTimeStamp() + 999999,\n                                Filter.EMPTY_FILTER, logCallback11);\n    events = logCallback11.getEvents();\n    Assert.assertTrue(events.size() > 16);\n    Assert.assertEquals(\"Test log message 18 arg1 arg2\", events.get(0).getLoggingEvent().getFormattedMessage());\n    Assert.assertEquals(\"Test log message 33 arg1 arg2\",\n                        events.get(events.size() - 1 - (events.size() - 16)).getLoggingEvent().getFormattedMessage());\n  }","commit_id":"9d47a52c531458434dd522aff05bee870fd84915","url":"https://github.com/caskdata/cdap"},{"original_method":"private static String getLatestFile(String logBaseDir, String filePattern) throws Exception {\n    String date = new SimpleDateFormat(\"yyyy-MM-dd\").format(new Date());\n    File dir = new File(logBaseDir, String.format(filePattern, date));\n\n    if (!dir.exists()) {\n      return null;\n    }\n\n    File[] files = FileUtil.listFiles(dir);\n    if (files.length == 0) {\n      return null;\n    }\n\n    SortedMap<Long, String> map = Maps.newTreeMap();\n    for (File file : files) {\n      String filename = FilenameUtils.getBaseName(file.getAbsolutePath());\n      map.put(Long.parseLong(filename), file.getAbsolutePath());\n    }\n    return map.get(map.lastKey());\n  }","id":15728,"modified_method":"private static Location getLatestFile(Location logBaseDir, String filePattern) throws Exception {\n    String date = new SimpleDateFormat(\"yyyy-MM-dd\").format(new Date());\n    Location dir = logBaseDir.append(String.format(filePattern, date));\n\n    if (!dir.exists()) {\n      return null;\n    }\n\n    List<Location> files = dir.list();\n    if (files.isEmpty()) {\n      return null;\n    }\n\n    SortedMap<Long, Location> map = Maps.newTreeMap();\n    for (Location file : files) {\n      String filename = FilenameUtils.getBaseName(file.getName());\n      map.put(Long.parseLong(filename), file);\n    }\n    return map.get(map.lastKey());\n  }","commit_id":"9d47a52c531458434dd522aff05bee870fd84915","url":"https://github.com/caskdata/cdap"},{"original_method":"@AfterClass\n  public static void testCheckpoint() throws Exception {\n    CheckpointManager checkpointManager = new CheckpointManager(tableUtil, txClient, KafkaTopic.getTopic());\n    Assert.assertEquals(120, checkpointManager.getCheckpoint(0));\n    Assert.assertEquals(60, checkpointManager.getCheckpoint(1));\n  }","id":15729,"modified_method":"@AfterClass\n  public static void testCheckpoint() throws Exception {\n    CheckpointManager checkpointManager = injector.getInstance(CheckpointManager.class);\n    Assert.assertEquals(120, checkpointManager.getCheckpoint(0));\n    Assert.assertEquals(60, checkpointManager.getCheckpoint(1));\n\n    txManager.stopAndWait();\n  }","commit_id":"9d47a52c531458434dd522aff05bee870fd84915","url":"https://github.com/caskdata/cdap"},{"original_method":"@BeforeClass\n  public static void startLogSaver() throws Exception {\n    dsFramework = new InMemoryDatasetFramework(new InMemoryDefinitionRegistryFactory());\n    dsFramework.addModule(Id.DatasetModule.from(Constants.SYSTEM_NAMESPACE_ID, \"table\"),\n                          new InMemoryTableModule());\n\n    String logBaseDir = temporaryFolder.newFolder().getAbsolutePath();\n    LOG.info(\"Log base dir {}\", logBaseDir);\n\n    cConf = CConfiguration.create();\n    cConf.set(Constants.CFG_LOCAL_DATA_DIR, temporaryFolder.newFolder().getAbsolutePath());\n    cConf.set(LoggingConfiguration.KAFKA_SEED_BROKERS, \"localhost:\" + getKafkaPort());\n    cConf.set(LoggingConfiguration.NUM_PARTITIONS, \"2\");\n    cConf.set(LoggingConfiguration.KAFKA_PRODUCER_TYPE, \"sync\");\n    cConf.set(LoggingConfiguration.KAFKA_PROCUDER_BUFFER_MS, \"100\");\n    cConf.set(LoggingConfiguration.LOG_BASE_DIR, logBaseDir);\n    cConf.set(LoggingConfiguration.LOG_RETENTION_DURATION_DAYS, \"10\");\n    cConf.set(LoggingConfiguration.LOG_MAX_FILE_SIZE_BYTES, \"10240\");\n    cConf.set(LoggingConfiguration.LOG_FILE_SYNC_INTERVAL_BYTES, \"5120\");\n    cConf.set(LoggingConfiguration.LOG_SAVER_EVENT_BUCKET_INTERVAL_MS, \"100\");\n    cConf.set(LoggingConfiguration.LOG_SAVER_MAXIMUM_INMEMORY_EVENT_BUCKETS, \"2\");\n    cConf.set(LoggingConfiguration.LOG_SAVER_TOPIC_WAIT_SLEEP_MS, \"10\");\n\n    Configuration conf = HBaseConfiguration.create();\n    CConfigurationUtil.copyTxProperties(cConf, conf);\n    TransactionManager txManager = new TransactionManager(conf);\n    txManager.startAndWait();\n    txClient = new InMemoryTxSystemClient(txManager);\n\n    ZKClientService zkClientService = ZKClientServices.delegate(\n      ZKClients.reWatchOnExpire(\n        ZKClients.retryOnFailure(\n          ZKClientService.Builder.of(getZkConnectString()).build(),\n          RetryStrategies.exponentialDelay(500, 2000, TimeUnit.MILLISECONDS)\n        )\n      ));\n    zkClientService.startAndWait();\n\n    KafkaClientService kafkaClient = new ZKKafkaClientService(zkClientService);\n    kafkaClient.startAndWait();\n\n    tableUtil = new LogSaverTableUtil(dsFramework, cConf);\n    LogSaver logSaver =\n      new LogSaver(tableUtil, txClient, kafkaClient,\n                   cConf, new LocalLocationFactory());\n\n    logSaver.startAndWait();\n\n    MultiLeaderElection multiElection = new MultiLeaderElection(zkClientService, \"log-saver\", 2, logSaver);\n    multiElection.setLeaderElectionSleepMs(1);\n    multiElection.startAndWait();\n\n    // Sleep a while to let Kafka server fully initialized.\n    TimeUnit.SECONDS.sleep(5);\n\n    publishLogs();\n\n    waitTillLogSaverDone(logBaseDir, \"ACCT_1/APP_1/flow-FLOW_1/%s\", \"Test log message 59 arg1 arg2\");\n    waitTillLogSaverDone(logBaseDir, \"ACCT_2/APP_2/flow-FLOW_2/%s\", \"Test log message 59 arg1 arg2\");\n    waitTillLogSaverDone(logBaseDir, \"cdap/services/service-metrics/%s\", \"Test log message 59 arg1 arg2\");\n\n    logSaver.stopAndWait();\n    multiElection.stopAndWait();\n    kafkaClient.stopAndWait();\n    zkClientService.stopAndWait();\n  }","id":15730,"modified_method":"@BeforeClass\n  public static void startLogSaver() throws Exception {\n    CConfiguration cConf = CConfiguration.create();\n    cConf.set(Constants.CFG_LOCAL_DATA_DIR, temporaryFolder.newFolder().getAbsolutePath());\n    cConf.set(Constants.Zookeeper.QUORUM, getZkConnectString());\n    cConf.unset(KafkaConstants.ConfigKeys.ZOOKEEPER_NAMESPACE_CONFIG);\n    cConf.set(LoggingConfiguration.KAFKA_SEED_BROKERS, \"localhost:\" + getKafkaPort());\n    cConf.set(LoggingConfiguration.NUM_PARTITIONS, \"2\");\n    cConf.set(LoggingConfiguration.KAFKA_PRODUCER_TYPE, \"sync\");\n    cConf.set(LoggingConfiguration.KAFKA_PROCUDER_BUFFER_MS, \"100\");\n    cConf.set(LoggingConfiguration.LOG_RETENTION_DURATION_DAYS, \"10\");\n    cConf.set(LoggingConfiguration.LOG_MAX_FILE_SIZE_BYTES, \"10240\");\n    cConf.set(LoggingConfiguration.LOG_FILE_SYNC_INTERVAL_BYTES, \"5120\");\n    cConf.set(LoggingConfiguration.LOG_SAVER_EVENT_BUCKET_INTERVAL_MS, \"100\");\n    cConf.set(LoggingConfiguration.LOG_SAVER_MAXIMUM_INMEMORY_EVENT_BUCKETS, \"2\");\n    cConf.set(LoggingConfiguration.LOG_SAVER_TOPIC_WAIT_SLEEP_MS, \"10\");\n\n    Configuration hConf = HBaseConfiguration.create();\n\n    injector = Guice.createInjector(\n      new ConfigModule(cConf, hConf),\n      new ZKClientModule(),\n      new KafkaClientModule(),\n      new LocationRuntimeModule().getInMemoryModules(),\n      new TransactionModules().getInMemoryModules(),\n      new AbstractModule() {\n        @Override\n        protected void configure() {\n          bind(DatasetFramework.class)\n            .toInstance(new InMemoryDatasetFramework(new InMemoryDefinitionRegistryFactory()));\n        }\n      });\n\n    txManager = injector.getInstance(TransactionManager.class);\n    txManager.startAndWait();\n\n    DatasetFramework dsFramework = injector.getInstance(DatasetFramework.class);\n    dsFramework.addModule(Id.DatasetModule.from(Constants.SYSTEM_NAMESPACE_ID, \"table\"),\n                          new InMemoryTableModule());\n\n    ZKClientService zkClientService = injector.getInstance(ZKClientService.class);\n    zkClientService.startAndWait();\n\n    KafkaClientService kafkaClient = injector.getInstance(KafkaClientService.class);\n    kafkaClient.startAndWait();\n\n    LogSaver logSaver = injector.getInstance(LogSaver.class);\n    logSaver.startAndWait();\n\n    MultiLeaderElection multiElection = new MultiLeaderElection(zkClientService, \"log-saver\", 2, logSaver);\n    multiElection.setLeaderElectionSleepMs(1);\n    multiElection.startAndWait();\n\n    // Sleep a while to let Kafka server fully initialized.\n    TimeUnit.SECONDS.sleep(5);\n\n    publishLogs();\n\n    LocationFactory locationFactory = injector.getInstance(LocationFactory.class);\n    Location logBaseDir = locationFactory.create(cConf.get(LoggingConfiguration.LOG_BASE_DIR));\n\n    waitTillLogSaverDone(logBaseDir, \"ACCT_1/APP_1/flow-FLOW_1/%s\", \"Test log message 59 arg1 arg2\");\n    waitTillLogSaverDone(logBaseDir, \"ACCT_2/APP_2/flow-FLOW_2/%s\", \"Test log message 59 arg1 arg2\");\n    waitTillLogSaverDone(logBaseDir, \"cdap/services/service-metrics/%s\", \"Test log message 59 arg1 arg2\");\n\n    logSaver.stopAndWait();\n    multiElection.stopAndWait();\n    kafkaClient.stopAndWait();\n    zkClientService.stopAndWait();\n  }","commit_id":"9d47a52c531458434dd522aff05bee870fd84915","url":"https://github.com/caskdata/cdap"},{"original_method":"private static void publishLogs() throws Exception {\n    KafkaLogAppender appender = new KafkaLogAppender(cConf);\n    new LogAppenderInitializer(appender).initialize(\"LogSaverTest\");\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    StatusPrinter.setPrintStream(new PrintStream(bos));\n    StatusPrinter.print((LoggerContext) LoggerFactory.getILoggerFactory());\n\n    ListeningExecutorService executor = MoreExecutors.listeningDecorator(Executors.newFixedThreadPool(2));\n    List<ListenableFuture<?>> futures = Lists.newArrayList();\n    futures.add(executor.submit(new LogPublisher(new FlowletLoggingContext(\"ACCT_1\", \"APP_1\", \"FLOW_1\", \"FLOWLET_1\"))));\n    futures.add(executor.submit(new LogPublisher(new FlowletLoggingContext(\"ACCT_2\", \"APP_2\", \"FLOW_2\", \"FLOWLET_2\"))));\n    futures.add(executor.submit(new LogPublisher(new ServiceLoggingContext(\"cdap\", \"services\", \"metrics\"))));\n\n    Futures.allAsList(futures).get();\n\n    System.out.println(bos.toString());\n\n    appender.stop();\n  }","id":15731,"modified_method":"private static void publishLogs() throws Exception {\n    KafkaLogAppender appender = injector.getInstance(KafkaLogAppender.class);\n    new LogAppenderInitializer(appender).initialize(\"LogSaverTest\");\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    StatusPrinter.setPrintStream(new PrintStream(bos));\n    StatusPrinter.print((LoggerContext) LoggerFactory.getILoggerFactory());\n\n    ListeningExecutorService executor = MoreExecutors.listeningDecorator(Executors.newFixedThreadPool(2));\n    List<ListenableFuture<?>> futures = Lists.newArrayList();\n    futures.add(executor.submit(new LogPublisher(new FlowletLoggingContext(\"ACCT_1\", \"APP_1\", \"FLOW_1\", \"FLOWLET_1\"))));\n    futures.add(executor.submit(new LogPublisher(new FlowletLoggingContext(\"ACCT_2\", \"APP_2\", \"FLOW_2\", \"FLOWLET_2\"))));\n    futures.add(executor.submit(new LogPublisher(new ServiceLoggingContext(\"cdap\", \"services\", \"metrics\"))));\n\n    Futures.allAsList(futures).get();\n\n    System.out.println(bos.toString());\n\n    appender.stop();\n  }","commit_id":"9d47a52c531458434dd522aff05bee870fd84915","url":"https://github.com/caskdata/cdap"},{"original_method":"private static void waitTillLogSaverDone(String logBaseDir, String filePattern, String logLine) throws Exception {\n    long start = System.currentTimeMillis();\n\n    LocationFactory locationFactory = new LocalLocationFactory();\n\n    while (true) {\n      String latestFile = getLatestFile(logBaseDir, filePattern);\n      if (latestFile != null) {\n        AvroFileLogReader logReader = new AvroFileLogReader(new LogSchema().getAvroSchema());\n        LogCallback logCallback = new LogCallback();\n        logCallback.init();\n        logReader.readLog(locationFactory.create(latestFile), Filter.EMPTY_FILTER, 0,\n                          Long.MAX_VALUE, Integer.MAX_VALUE, logCallback);\n        logCallback.close();\n        List<LogEvent> events = logCallback.getEvents();\n        if (events.size() > 0) {\n          LogEvent event = events.get(events.size() - 1);\n          if (event.getLoggingEvent().getFormattedMessage().equals(logLine)) {\n            break;\n          }\n        }\n      }\n\n      Assert.assertTrue(\"Time exceeded\", System.currentTimeMillis() - start < 30 * 1000);\n      TimeUnit.MILLISECONDS.sleep(30);\n    }\n\n    LOG.info(\"Done waiting!\");\n    TimeUnit.SECONDS.sleep(1);\n  }","id":15732,"modified_method":"private static void waitTillLogSaverDone(Location logBaseDir, String filePattern, String logLine) throws Exception {\n    long start = System.currentTimeMillis();\n\n    while (true) {\n      Location latestFile = getLatestFile(logBaseDir, filePattern);\n      if (latestFile != null) {\n        AvroFileLogReader logReader = new AvroFileLogReader(new LogSchema().getAvroSchema());\n        LogCallback logCallback = new LogCallback();\n        logCallback.init();\n        logReader.readLog(latestFile, Filter.EMPTY_FILTER, 0, Long.MAX_VALUE, Integer.MAX_VALUE, logCallback);\n        logCallback.close();\n        List<LogEvent> events = logCallback.getEvents();\n        if (events.size() > 0) {\n          LogEvent event = events.get(events.size() - 1);\n          if (event.getLoggingEvent().getFormattedMessage().equals(logLine)) {\n            break;\n          }\n        }\n      }\n\n      Assert.assertTrue(\"Time exceeded\", System.currentTimeMillis() - start < 30 * 1000);\n      TimeUnit.MILLISECONDS.sleep(30);\n    }\n\n    LOG.info(\"Done waiting!\");\n    TimeUnit.SECONDS.sleep(1);\n  }","commit_id":"9d47a52c531458434dd522aff05bee870fd84915","url":"https://github.com/caskdata/cdap"},{"original_method":"@AfterClass\n  public static void cleanUp() throws Exception {\n    FileUtils.deleteDirectory(new File(logBaseDir));\n  }","id":15733,"modified_method":"@AfterClass\n  public static void cleanUp() throws Exception {\n    txManager.stopAndWait();\n  }","commit_id":"9d47a52c531458434dd522aff05bee870fd84915","url":"https://github.com/caskdata/cdap"},{"original_method":"@BeforeClass\n  public static void setUpContext() throws Exception {\n    dsFramework = new InMemoryDatasetFramework(new InMemoryDefinitionRegistryFactory());\n    dsFramework.addModule(Id.DatasetModule.from(Constants.SYSTEM_NAMESPACE_ID, \"table\"),\n                          new InMemoryTableModule());\n\n    LoggingContextAccessor.setLoggingContext(new FlowletLoggingContext(\"TFL_ACCT_1\", \"APP_1\", \"FLOW_1\", \"FLOWLET_1\"));\n    logBaseDir = \"/tmp/log_files_\" + new Random(System.currentTimeMillis()).nextLong();\n\n\n    CConfiguration cConf = CConfiguration.create();\n    cConf.set(LoggingConfiguration.LOG_BASE_DIR, logBaseDir);\n    cConf.setInt(LoggingConfiguration.LOG_MAX_FILE_SIZE_BYTES, 20 * 1024);\n\n\n    Configuration conf = HBaseConfiguration.create();\n    CConfigurationUtil.copyTxProperties(cConf, conf);\n    TransactionManager txManager = new TransactionManager(conf);\n    txManager.startAndWait();\n    txClient = new InMemoryTxSystemClient(txManager);\n\n    LogAppender appender = new AsyncLogAppender(new FileLogAppender(cConf, dsFramework, txClient,\n                                                                         new LocalLocationFactory()));\n    new LogAppenderInitializer(appender).initialize(\"TestFileLogging\");\n\n    Logger logger = LoggerFactory.getLogger(\"TestFileLogging\");\n    for (int i = 0; i < 60; ++i) {\n      Exception e1 = new Exception(\"Test Exception1\");\n      Exception e2 = new Exception(\"Test Exception2\", e1);\n      logger.warn(\"Test log message \" + i + \" {} {}\", \"arg1\", \"arg2\", e2);\n    }\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    StatusPrinter.setPrintStream(new PrintStream(bos));\n    StatusPrinter.print((LoggerContext) LoggerFactory.getILoggerFactory());\n    System.out.println(bos.toString());\n\n    appender.stop();\n  }","id":15734,"modified_method":"@BeforeClass\n  public static void setUpContext() throws Exception {\n    Configuration hConf = HBaseConfiguration.create();\n    CConfiguration cConf = CConfiguration.create();\n    cConf.set(Constants.CFG_LOCAL_DATA_DIR, TMP_FOLDER.newFolder().getAbsolutePath());\n    cConf.setInt(LoggingConfiguration.LOG_MAX_FILE_SIZE_BYTES, 20 * 1024);\n\n    injector = Guice.createInjector(\n      new ConfigModule(cConf, hConf),\n      new LocationRuntimeModule().getInMemoryModules(),\n      new TransactionModules().getInMemoryModules(),\n      new LoggingModules().getInMemoryModules(),\n      new AbstractModule() {\n        @Override\n        protected void configure() {\n          bind(DatasetFramework.class)\n            .toInstance(new InMemoryDatasetFramework(new InMemoryDefinitionRegistryFactory()));\n        }\n      });\n\n    txManager = injector.getInstance(TransactionManager.class);\n    txManager.startAndWait();\n\n    DatasetFramework dsFramework = injector.getInstance(DatasetFramework.class);\n    dsFramework.addModule(Id.DatasetModule.from(Constants.SYSTEM_NAMESPACE_ID, \"table\"),\n                          new InMemoryTableModule());\n\n    LoggingContextAccessor.setLoggingContext(new FlowletLoggingContext(\"TFL_ACCT_1\", \"APP_1\", \"FLOW_1\", \"FLOWLET_1\"));\n\n    LogAppender appender = injector.getInstance(LogAppender.class);\n    new LogAppenderInitializer(appender).initialize(\"TestFileLogging\");\n\n    Logger logger = LoggerFactory.getLogger(\"TestFileLogging\");\n    for (int i = 0; i < 60; ++i) {\n      Exception e1 = new Exception(\"Test Exception1\");\n      Exception e2 = new Exception(\"Test Exception2\", e1);\n      logger.warn(\"Test log message \" + i + \" {} {}\", \"arg1\", \"arg2\", e2);\n    }\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    StatusPrinter.setPrintStream(new PrintStream(bos));\n    StatusPrinter.print((LoggerContext) LoggerFactory.getILoggerFactory());\n    System.out.println(bos.toString());\n\n    appender.stop();\n  }","commit_id":"9d47a52c531458434dd522aff05bee870fd84915","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testGetLog() throws Exception {\n    CConfiguration cConf = CConfiguration.create();\n    cConf.set(LoggingConfiguration.LOG_BASE_DIR, logBaseDir);\n\n    LoggingContext loggingContext = new FlowletLoggingContext(\"TFL_ACCT_1\", \"APP_1\", \"FLOW_1\", \"\");\n    StandaloneLogReader logTail =\n      new StandaloneLogReader(cConf, dsFramework, txClient, new LocalLocationFactory());\n    LoggingTester.LogCallback logCallback1 = new LoggingTester.LogCallback();\n    logTail.getLogPrev(loggingContext, -1, 60, Filter.EMPTY_FILTER,\n                       logCallback1);\n    List<LogEvent> allEvents = logCallback1.getEvents();\n    Assert.assertEquals(60, allEvents.size());\n\n    LoggingTester.LogCallback logCallback2 = new LoggingTester.LogCallback();\n    logTail.getLog(loggingContext, allEvents.get(10).getLoggingEvent().getTimeStamp(),\n                   allEvents.get(15).getLoggingEvent().getTimeStamp(), Filter.EMPTY_FILTER, logCallback2);\n    List<LogEvent> events = logCallback2.getEvents();\n    Assert.assertEquals(5, events.size());\n    Assert.assertEquals(allEvents.get(10).getLoggingEvent().getFormattedMessage(),\n                        events.get(0).getLoggingEvent().getFormattedMessage());\n    Assert.assertEquals(allEvents.get(14).getLoggingEvent().getFormattedMessage(),\n                        events.get(4).getLoggingEvent().getFormattedMessage());\n\n    LoggingTester.LogCallback logCallback3 = new LoggingTester.LogCallback();\n    logTail.getLog(loggingContext, allEvents.get(0).getLoggingEvent().getTimeStamp(),\n                   allEvents.get(59).getLoggingEvent().getTimeStamp(), Filter.EMPTY_FILTER, logCallback3);\n    events = logCallback3.getEvents();\n    Assert.assertEquals(59, events.size());\n    Assert.assertEquals(allEvents.get(0).getLoggingEvent().getFormattedMessage(),\n                        events.get(0).getLoggingEvent().getFormattedMessage());\n    Assert.assertEquals(allEvents.get(58).getLoggingEvent().getFormattedMessage(),\n                        events.get(58).getLoggingEvent().getFormattedMessage());\n\n    LoggingTester.LogCallback logCallback4 = new LoggingTester.LogCallback();\n    logTail.getLog(loggingContext, allEvents.get(12).getLoggingEvent().getTimeStamp(),\n                   allEvents.get(41).getLoggingEvent().getTimeStamp(), Filter.EMPTY_FILTER, logCallback4);\n    events = logCallback4.getEvents();\n    Assert.assertEquals(29, events.size());\n    Assert.assertEquals(allEvents.get(12).getLoggingEvent().getFormattedMessage(),\n                        events.get(0).getLoggingEvent().getFormattedMessage());\n    Assert.assertEquals(allEvents.get(40).getLoggingEvent().getFormattedMessage(),\n                        events.get(28).getLoggingEvent().getFormattedMessage());\n\n    LoggingTester.LogCallback logCallback5 = new LoggingTester.LogCallback();\n    logTail.getLog(loggingContext, allEvents.get(22).getLoggingEvent().getTimeStamp(),\n                   allEvents.get(38).getLoggingEvent().getTimeStamp(), Filter.EMPTY_FILTER, logCallback5);\n    events = logCallback5.getEvents();\n    Assert.assertEquals(16, events.size());\n    Assert.assertEquals(allEvents.get(22).getLoggingEvent().getFormattedMessage(),\n                        events.get(0).getLoggingEvent().getFormattedMessage());\n    Assert.assertEquals(allEvents.get(37).getLoggingEvent().getFormattedMessage(),\n                        events.get(15).getLoggingEvent().getFormattedMessage());\n\n    LoggingTester.LogCallback logCallback6 = new LoggingTester.LogCallback();\n    logTail.getLog(loggingContext, allEvents.get(41).getLoggingEvent().getTimeStamp(),\n                   allEvents.get(59).getLoggingEvent().getTimeStamp(), Filter.EMPTY_FILTER, logCallback6);\n    events = logCallback6.getEvents();\n    Assert.assertEquals(18, events.size());\n    Assert.assertEquals(allEvents.get(41).getLoggingEvent().getFormattedMessage(),\n                        events.get(0).getLoggingEvent().getFormattedMessage());\n    Assert.assertEquals(allEvents.get(58).getLoggingEvent().getFormattedMessage(),\n                        events.get(17).getLoggingEvent().getFormattedMessage());\n\n  }","id":15735,"modified_method":"@Test\n  public void testGetLog() throws Exception {\n    LoggingContext loggingContext = new FlowletLoggingContext(\"TFL_ACCT_1\", \"APP_1\", \"FLOW_1\", \"\");\n    StandaloneLogReader logTail = injector.getInstance(StandaloneLogReader.class);\n    LoggingTester.LogCallback logCallback1 = new LoggingTester.LogCallback();\n    logTail.getLogPrev(loggingContext, -1, 60, Filter.EMPTY_FILTER,\n                       logCallback1);\n    List<LogEvent> allEvents = logCallback1.getEvents();\n    Assert.assertEquals(60, allEvents.size());\n\n    LoggingTester.LogCallback logCallback2 = new LoggingTester.LogCallback();\n    logTail.getLog(loggingContext, allEvents.get(10).getLoggingEvent().getTimeStamp(),\n                   allEvents.get(15).getLoggingEvent().getTimeStamp(), Filter.EMPTY_FILTER, logCallback2);\n    List<LogEvent> events = logCallback2.getEvents();\n    Assert.assertEquals(5, events.size());\n    Assert.assertEquals(allEvents.get(10).getLoggingEvent().getFormattedMessage(),\n                        events.get(0).getLoggingEvent().getFormattedMessage());\n    Assert.assertEquals(allEvents.get(14).getLoggingEvent().getFormattedMessage(),\n                        events.get(4).getLoggingEvent().getFormattedMessage());\n\n    LoggingTester.LogCallback logCallback3 = new LoggingTester.LogCallback();\n    logTail.getLog(loggingContext, allEvents.get(0).getLoggingEvent().getTimeStamp(),\n                   allEvents.get(59).getLoggingEvent().getTimeStamp(), Filter.EMPTY_FILTER, logCallback3);\n    events = logCallback3.getEvents();\n    Assert.assertEquals(59, events.size());\n    Assert.assertEquals(allEvents.get(0).getLoggingEvent().getFormattedMessage(),\n                        events.get(0).getLoggingEvent().getFormattedMessage());\n    Assert.assertEquals(allEvents.get(58).getLoggingEvent().getFormattedMessage(),\n                        events.get(58).getLoggingEvent().getFormattedMessage());\n\n    LoggingTester.LogCallback logCallback4 = new LoggingTester.LogCallback();\n    logTail.getLog(loggingContext, allEvents.get(12).getLoggingEvent().getTimeStamp(),\n                   allEvents.get(41).getLoggingEvent().getTimeStamp(), Filter.EMPTY_FILTER, logCallback4);\n    events = logCallback4.getEvents();\n    Assert.assertEquals(29, events.size());\n    Assert.assertEquals(allEvents.get(12).getLoggingEvent().getFormattedMessage(),\n                        events.get(0).getLoggingEvent().getFormattedMessage());\n    Assert.assertEquals(allEvents.get(40).getLoggingEvent().getFormattedMessage(),\n                        events.get(28).getLoggingEvent().getFormattedMessage());\n\n    LoggingTester.LogCallback logCallback5 = new LoggingTester.LogCallback();\n    logTail.getLog(loggingContext, allEvents.get(22).getLoggingEvent().getTimeStamp(),\n                   allEvents.get(38).getLoggingEvent().getTimeStamp(), Filter.EMPTY_FILTER, logCallback5);\n    events = logCallback5.getEvents();\n    Assert.assertEquals(16, events.size());\n    Assert.assertEquals(allEvents.get(22).getLoggingEvent().getFormattedMessage(),\n                        events.get(0).getLoggingEvent().getFormattedMessage());\n    Assert.assertEquals(allEvents.get(37).getLoggingEvent().getFormattedMessage(),\n                        events.get(15).getLoggingEvent().getFormattedMessage());\n\n    LoggingTester.LogCallback logCallback6 = new LoggingTester.LogCallback();\n    logTail.getLog(loggingContext, allEvents.get(41).getLoggingEvent().getTimeStamp(),\n                   allEvents.get(59).getLoggingEvent().getTimeStamp(), Filter.EMPTY_FILTER, logCallback6);\n    events = logCallback6.getEvents();\n    Assert.assertEquals(18, events.size());\n    Assert.assertEquals(allEvents.get(41).getLoggingEvent().getFormattedMessage(),\n                        events.get(0).getLoggingEvent().getFormattedMessage());\n    Assert.assertEquals(allEvents.get(58).getLoggingEvent().getFormattedMessage(),\n                        events.get(17).getLoggingEvent().getFormattedMessage());\n\n  }","commit_id":"9d47a52c531458434dd522aff05bee870fd84915","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testGetLogPrev() throws Exception {\n    CConfiguration cConf = CConfiguration.create();\n    cConf.set(LoggingConfiguration.LOG_BASE_DIR, logBaseDir);\n\n    LoggingContext loggingContext = new FlowletLoggingContext(\"TFL_ACCT_1\", \"APP_1\", \"FLOW_1\", \"\");\n    StandaloneLogReader logReader =\n      new StandaloneLogReader(cConf, dsFramework, txClient, new LocalLocationFactory());\n    LoggingTester tester = new LoggingTester();\n    tester.testGetPrev(logReader, loggingContext);\n    logReader.close();\n  }","id":15736,"modified_method":"@Test\n  public void testGetLogPrev() throws Exception {\n    LoggingContext loggingContext = new FlowletLoggingContext(\"TFL_ACCT_1\", \"APP_1\", \"FLOW_1\", \"\");\n    StandaloneLogReader logReader = injector.getInstance(StandaloneLogReader.class);\n    LoggingTester tester = new LoggingTester();\n    tester.testGetPrev(logReader, loggingContext);\n    logReader.close();\n  }","commit_id":"9d47a52c531458434dd522aff05bee870fd84915","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testGetLogNext() throws Exception {\n    CConfiguration cConf = CConfiguration.create();\n    cConf.set(LoggingConfiguration.LOG_BASE_DIR, logBaseDir);\n\n    LoggingContext loggingContext = new FlowletLoggingContext(\"TFL_ACCT_1\", \"APP_1\", \"FLOW_1\", \"\");\n    StandaloneLogReader logReader =\n      new StandaloneLogReader(cConf, dsFramework, txClient, new LocalLocationFactory());\n    LoggingTester tester = new LoggingTester();\n    tester.testGetNext(logReader, loggingContext);\n    logReader.close();\n  }","id":15737,"modified_method":"@Test\n  public void testGetLogNext() throws Exception {\n    LoggingContext loggingContext = new FlowletLoggingContext(\"TFL_ACCT_1\", \"APP_1\", \"FLOW_1\", \"\");\n    StandaloneLogReader logReader = injector.getInstance(StandaloneLogReader.class);\n    LoggingTester tester = new LoggingTester();\n    tester.testGetNext(logReader, loggingContext);\n    logReader.close();\n  }","commit_id":"9d47a52c531458434dd522aff05bee870fd84915","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testGetPrev() throws Exception {\n    LoggingContext loggingContext = new FlowletLoggingContext(\"TFL_ACCT_1\", \"APP_1\", \"FLOW_1\", \"\");\n    DistributedLogReader logReader =\n      new DistributedLogReader(dsFramework, txClient, cConf, new LocalLocationFactory());\n    LoggingTester tester = new LoggingTester();\n    tester.testGetPrev(logReader, loggingContext);\n    logReader.close();\n  }","id":15738,"modified_method":"@Test\n  public void testGetPrev() throws Exception {\n    LoggingContext loggingContext = new FlowletLoggingContext(\"TFL_ACCT_1\", \"APP_1\", \"FLOW_1\", \"\");\n    DistributedLogReader logReader = injector.getInstance(DistributedLogReader.class);\n    LoggingTester tester = new LoggingTester();\n    tester.testGetPrev(logReader, loggingContext);\n    logReader.close();\n  }","commit_id":"9d47a52c531458434dd522aff05bee870fd84915","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testGetNext() throws Exception {\n    LoggingContext loggingContext = new FlowletLoggingContext(\"TFL_ACCT_1\", \"APP_1\", \"FLOW_1\", \"\");\n    DistributedLogReader logReader =\n      new DistributedLogReader(dsFramework, txClient, cConf, new LocalLocationFactory());\n    LoggingTester tester = new LoggingTester();\n    tester.testGetNext(logReader, loggingContext);\n    logReader.close();\n  }","id":15739,"modified_method":"@Test\n  public void testGetNext() throws Exception {\n    LoggingContext loggingContext = new FlowletLoggingContext(\"TFL_ACCT_1\", \"APP_1\", \"FLOW_1\", \"\");\n    DistributedLogReader logReader = injector.getInstance(DistributedLogReader.class);\n    LoggingTester tester = new LoggingTester();\n    tester.testGetNext(logReader, loggingContext);\n    logReader.close();\n  }","commit_id":"9d47a52c531458434dd522aff05bee870fd84915","url":"https://github.com/caskdata/cdap"},{"original_method":"@BeforeClass\n  public static void init() throws Exception {\n    dsFramework = new InMemoryDatasetFramework(new InMemoryDefinitionRegistryFactory());\n    dsFramework.addModule(Id.DatasetModule.from(Constants.SYSTEM_NAMESPACE_ID, \"table\"),\n                          new InMemoryTableModule());\n\n    Configuration txConf = HBaseConfiguration.create();\n    TransactionManager txManager = new TransactionManager(txConf);\n    txManager.startAndWait();\n    txClient = new InMemoryTxSystemClient(txManager);\n\n    cConf = CConfiguration.create();\n    cConf.set(LoggingConfiguration.KAFKA_SEED_BROKERS, \"localhost:\" + KafkaTestBase.getKafkaPort());\n    cConf.set(LoggingConfiguration.NUM_PARTITIONS, \"2\");\n    cConf.set(LoggingConfiguration.KAFKA_PRODUCER_TYPE, \"sync\");\n\n    LogAppender appender = new KafkaLogAppender(cConf);\n    new LogAppenderInitializer(appender).initialize(\"TestKafkaLogging\");\n\n    Logger logger = LoggerFactory.getLogger(\"TestKafkaLogging\");\n    Exception e1 = new Exception(\"Test Exception1\");\n    Exception e2 = new Exception(\"Test Exception2\", e1);\n\n    LoggingContextAccessor.setLoggingContext(new FlowletLoggingContext(\"TFL_ACCT_2\", \"APP_1\", \"FLOW_1\", \"FLOWLET_1\"));\n    for (int i = 0; i < 40; ++i) {\n      logger.warn(\"ACCT_2 Test log message \" + i + \" {} {}\", \"arg1\", \"arg2\", e2);\n    }\n\n    LoggingContextAccessor.setLoggingContext(new FlowletLoggingContext(\"TFL_ACCT_1\", \"APP_1\", \"FLOW_1\", \"FLOWLET_1\"));\n    for (int i = 0; i < 20; ++i) {\n      logger.warn(\"Test log message \" + i + \" {} {}\", \"arg1\", \"arg2\", e2);\n    }\n\n    LoggingContextAccessor.setLoggingContext(new FlowletLoggingContext(\"TFL_ACCT_2\", \"APP_1\", \"FLOW_1\", \"FLOWLET_1\"));\n    for (int i = 40; i < 80; ++i) {\n      logger.warn(\"ACCT_2 Test log message \" + i + \" {} {}\", \"arg1\", \"arg2\", e2);\n    }\n\n    LoggingContextAccessor.setLoggingContext(new FlowletLoggingContext(\"TFL_ACCT_1\", \"APP_1\", \"FLOW_1\", \"FLOWLET_1\"));\n    for (int i = 20; i < 40; ++i) {\n      logger.warn(\"Test log message \" + i + \" {} {}\", \"arg1\", \"arg2\", e2);\n    }\n\n    LoggingContextAccessor.setLoggingContext(new FlowletLoggingContext(\"TFL_ACCT_1\", \"APP_1\", \"FLOW_1\", \"FLOWLET_1\"));\n    for (int i = 40; i < 60; ++i) {\n      logger.warn(\"Test log message \" + i + \" {} {}\", \"arg1\", \"arg2\", e2);\n    }\n\n    LoggingContextAccessor.setLoggingContext(new FlowletLoggingContext(\"TFL_ACCT_2\", \"APP_1\", \"FLOW_1\", \"FLOWLET_1\"));\n    for (int i = 80; i < 120; ++i) {\n      logger.warn(\"ACCT_2 Test log message \" + i + \" {} {}\", \"arg1\", \"arg2\", e2);\n    }\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    StatusPrinter.setPrintStream(new PrintStream(bos));\n    StatusPrinter.print((LoggerContext) LoggerFactory.getILoggerFactory());\n    System.out.println(bos.toString());\n\n    appender.stop();\n  }","id":15740,"modified_method":"@BeforeClass\n  public static void init() throws Exception {\n    Configuration hConf = HBaseConfiguration.create();\n    CConfiguration cConf = CConfiguration.create();\n    cConf.set(LoggingConfiguration.KAFKA_SEED_BROKERS, \"localhost:\" + KafkaTestBase.getKafkaPort());\n    cConf.set(LoggingConfiguration.NUM_PARTITIONS, \"2\");\n    cConf.set(LoggingConfiguration.KAFKA_PRODUCER_TYPE, \"sync\");\n    cConf.set(Constants.CFG_LOCAL_DATA_DIR, TMP_FOLDER.newFolder().getAbsolutePath());\n    injector = Guice.createInjector(\n      new ConfigModule(cConf, hConf),\n      new LocationRuntimeModule().getInMemoryModules(),\n      new TransactionModules().getInMemoryModules(),\n      new AbstractModule() {\n        @Override\n        protected void configure() {\n          bind(DatasetFramework.class)\n            .toInstance(new InMemoryDatasetFramework(new InMemoryDefinitionRegistryFactory()));\n        }\n      });\n\n    txManager = injector.getInstance(TransactionManager.class);\n    txManager.startAndWait();\n\n    DatasetFramework dsFramework = injector.getInstance(DatasetFramework.class);\n    dsFramework.addModule(Id.DatasetModule.from(Constants.SYSTEM_NAMESPACE_ID, \"table\"),\n                          new InMemoryTableModule());\n\n    LogAppender appender = injector.getInstance(KafkaLogAppender.class);\n    new LogAppenderInitializer(appender).initialize(\"TestKafkaLogging\");\n\n    Logger logger = LoggerFactory.getLogger(\"TestKafkaLogging\");\n    Exception e1 = new Exception(\"Test Exception1\");\n    Exception e2 = new Exception(\"Test Exception2\", e1);\n\n    LoggingContextAccessor.setLoggingContext(new FlowletLoggingContext(\"TFL_ACCT_2\", \"APP_1\", \"FLOW_1\", \"FLOWLET_1\"));\n    for (int i = 0; i < 40; ++i) {\n      logger.warn(\"ACCT_2 Test log message \" + i + \" {} {}\", \"arg1\", \"arg2\", e2);\n    }\n\n    LoggingContextAccessor.setLoggingContext(new FlowletLoggingContext(\"TFL_ACCT_1\", \"APP_1\", \"FLOW_1\", \"FLOWLET_1\"));\n    for (int i = 0; i < 20; ++i) {\n      logger.warn(\"Test log message \" + i + \" {} {}\", \"arg1\", \"arg2\", e2);\n    }\n\n    LoggingContextAccessor.setLoggingContext(new FlowletLoggingContext(\"TFL_ACCT_2\", \"APP_1\", \"FLOW_1\", \"FLOWLET_1\"));\n    for (int i = 40; i < 80; ++i) {\n      logger.warn(\"ACCT_2 Test log message \" + i + \" {} {}\", \"arg1\", \"arg2\", e2);\n    }\n\n    LoggingContextAccessor.setLoggingContext(new FlowletLoggingContext(\"TFL_ACCT_1\", \"APP_1\", \"FLOW_1\", \"FLOWLET_1\"));\n    for (int i = 20; i < 40; ++i) {\n      logger.warn(\"Test log message \" + i + \" {} {}\", \"arg1\", \"arg2\", e2);\n    }\n\n    LoggingContextAccessor.setLoggingContext(new FlowletLoggingContext(\"TFL_ACCT_1\", \"APP_1\", \"FLOW_1\", \"FLOWLET_1\"));\n    for (int i = 40; i < 60; ++i) {\n      logger.warn(\"Test log message \" + i + \" {} {}\", \"arg1\", \"arg2\", e2);\n    }\n\n    LoggingContextAccessor.setLoggingContext(new FlowletLoggingContext(\"TFL_ACCT_2\", \"APP_1\", \"FLOW_1\", \"FLOWLET_1\"));\n    for (int i = 80; i < 120; ++i) {\n      logger.warn(\"ACCT_2 Test log message \" + i + \" {} {}\", \"arg1\", \"arg2\", e2);\n    }\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    StatusPrinter.setPrintStream(new PrintStream(bos));\n    StatusPrinter.print((LoggerContext) LoggerFactory.getILoggerFactory());\n    System.out.println(bos.toString());\n\n    appender.stop();\n  }","commit_id":"9d47a52c531458434dd522aff05bee870fd84915","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testResilientLogging() throws Exception {\n    Configuration hConf = new Configuration();\n    CConfiguration cConf = CConfiguration.create();\n\n    File datasetDir = new File(tmpFolder.newFolder(), \"datasetUser\");\n    //noinspection ResultOfMethodCallIgnored\n    datasetDir.mkdirs();\n\n    cConf.set(Constants.Dataset.Manager.OUTPUT_DIR, datasetDir.getAbsolutePath());\n    cConf.set(Constants.Dataset.Manager.ADDRESS, \"localhost\");\n\n    cConf.set(Constants.Dataset.Executor.ADDRESS, \"localhost\");\n    cConf.setInt(Constants.Dataset.Executor.PORT, Networks.getRandomPort());\n\n    Injector injector = Guice.createInjector(\n      new ConfigModule(cConf, hConf),\n      new IOModule(), new ZKClientModule(),\n      new KafkaClientModule(),\n      new DiscoveryRuntimeModule().getInMemoryModules(),\n      new LocationRuntimeModule().getInMemoryModules(),\n      new DataFabricModules().getInMemoryModules(),\n      new DataSetsModules().getLocalModule(),\n      // NOTE: we want real service, but we don't need persistence\n      Modules.override(new DataSetServiceModules().getLocalModule()).with(new AbstractModule() {\n        @Override\n        protected void configure() {\n          bind(new TypeLiteral<Map<String, ? extends DatasetModule>>() {\n          })\n            .annotatedWith(Names.named(\"defaultDatasetModules\"))\n            .toInstance(DataSetServiceModules.INMEMORY_DATASET_MODULES);\n        }\n      }),\n      new AuthModule(),\n      new TransactionMetricsModule(),\n      new ExploreClientModule(),\n      new LoggingModules().getInMemoryModules());\n\n    TransactionManager txManager = injector.getInstance(TransactionManager.class);\n    txManager.startAndWait();\n\n    DatasetFramework dsFramework = injector.getInstance(DatasetFramework.class);\n    DatasetOpExecutorService opExecutorService = injector.getInstance(DatasetOpExecutorService.class);\n    opExecutorService.startAndWait();\n\n    TransactionSystemClient txSystemClient = injector.getInstance(TransactionSystemClient.class);\n\n    // Start the logging before starting the service.\n    LoggingContextAccessor.setLoggingContext(new FlowletLoggingContext(\"TRL_ACCT_1\", \"APP_1\", \"FLOW_1\", \"FLOWLET_1\"));\n    String logBaseDir = \"/tmp/log_files_\" + new Random(System.currentTimeMillis()).nextLong();\n\n    cConf.set(LoggingConfiguration.LOG_BASE_DIR, logBaseDir);\n    cConf.setInt(LoggingConfiguration.LOG_MAX_FILE_SIZE_BYTES, 20 * 1024);\n    LogAppender appender = injector.getInstance(LogAppender.class);\n    new LogAppenderInitializer(appender).initialize(\"TestResilientLogging\");\n\n    Logger logger = LoggerFactory.getLogger(\"TestResilientLogging\");\n    for (int i = 0; i < 5; ++i) {\n      Exception e1 = new Exception(\"Test Exception1\");\n      Exception e2 = new Exception(\"Test Exception2\", e1);\n      logger.warn(\"Test log message \" + i + \" {} {}\", \"arg1\", \"arg2\", e2);\n    }\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    StatusPrinter.setPrintStream(new PrintStream(bos));\n    StatusPrinter.print((LoggerContext) LoggerFactory.getILoggerFactory());\n    System.out.println(bos.toString());\n\n    // Start dataset service, wait for it to be discoverable\n    DatasetService dsService = injector.getInstance(DatasetService.class);\n    dsService.startAndWait();\n\n    final CountDownLatch startLatch = new CountDownLatch(1);\n    DiscoveryServiceClient discoveryClient = injector.getInstance(DiscoveryServiceClient.class);\n    discoveryClient.discover(Constants.Service.DATASET_MANAGER).watchChanges(new ServiceDiscovered.ChangeListener() {\n      @Override\n      public void onChange(ServiceDiscovered serviceDiscovered) {\n        if (!Iterables.isEmpty(serviceDiscovered)) {\n          startLatch.countDown();\n        }\n      }\n    }, Threads.SAME_THREAD_EXECUTOR);\n\n    startLatch.await(5, TimeUnit.SECONDS);\n\n    // Do some more logging after the service is started.\n    for (int i = 5; i < 10; ++i) {\n      Exception e1 = new Exception(\"Test Exception1\");\n      Exception e2 = new Exception(\"Test Exception2\", e1);\n      logger.warn(\"Test log message \" + i + \" {} {}\", \"arg1\", \"arg2\", e2);\n    }\n\n    appender.stop();\n\n    // Verify - we should have at least 5 events.\n    LoggingContext loggingContext = new FlowletLoggingContext(\"TRL_ACCT_1\", \"APP_1\", \"FLOW_1\", \"\");\n    StandaloneLogReader logTail =\n      new StandaloneLogReader(cConf, dsFramework, txSystemClient, new LocalLocationFactory());\n    LoggingTester.LogCallback logCallback1 = new LoggingTester.LogCallback();\n    logTail.getLogPrev(loggingContext, -1, 10, Filter.EMPTY_FILTER,\n                       logCallback1);\n    List<LogEvent> allEvents = logCallback1.getEvents();\n    Assert.assertTrue(allEvents.size() >= 5);\n\n    // Finally - stop all services\n    Services.chainStop(dsService, opExecutorService, txManager);\n  }","id":15741,"modified_method":"@Test\n  public void testResilientLogging() throws Exception {\n    Configuration hConf = new Configuration();\n    CConfiguration cConf = CConfiguration.create();\n\n    File datasetDir = new File(tmpFolder.newFolder(), \"datasetUser\");\n    //noinspection ResultOfMethodCallIgnored\n    datasetDir.mkdirs();\n\n    cConf.set(Constants.Dataset.Manager.OUTPUT_DIR, datasetDir.getAbsolutePath());\n    cConf.set(Constants.Dataset.Manager.ADDRESS, \"localhost\");\n\n    cConf.set(Constants.Dataset.Executor.ADDRESS, \"localhost\");\n    cConf.setInt(Constants.Dataset.Executor.PORT, Networks.getRandomPort());\n\n    Injector injector = Guice.createInjector(\n      new ConfigModule(cConf, hConf),\n      new IOModule(), new ZKClientModule(),\n      new KafkaClientModule(),\n      new DiscoveryRuntimeModule().getInMemoryModules(),\n      new LocationRuntimeModule().getInMemoryModules(),\n      new DataFabricModules().getInMemoryModules(),\n      new DataSetsModules().getLocalModule(),\n      // NOTE: we want real service, but we don't need persistence\n      Modules.override(new DataSetServiceModules().getLocalModule()).with(new AbstractModule() {\n        @Override\n        protected void configure() {\n          bind(new TypeLiteral<Map<String, ? extends DatasetModule>>() {\n          })\n            .annotatedWith(Names.named(\"defaultDatasetModules\"))\n            .toInstance(DataSetServiceModules.INMEMORY_DATASET_MODULES);\n        }\n      }),\n      new AuthModule(),\n      new TransactionMetricsModule(),\n      new ExploreClientModule(),\n      new LoggingModules().getInMemoryModules());\n\n    TransactionManager txManager = injector.getInstance(TransactionManager.class);\n    txManager.startAndWait();\n\n    DatasetOpExecutorService opExecutorService = injector.getInstance(DatasetOpExecutorService.class);\n    opExecutorService.startAndWait();\n\n    // Start the logging before starting the service.\n    LoggingContextAccessor.setLoggingContext(new FlowletLoggingContext(\"TRL_ACCT_1\", \"APP_1\", \"FLOW_1\", \"FLOWLET_1\"));\n    String logBaseDir = \"/tmp/log_files_\" + new Random(System.currentTimeMillis()).nextLong();\n\n    cConf.set(LoggingConfiguration.LOG_BASE_DIR, logBaseDir);\n    cConf.setInt(LoggingConfiguration.LOG_MAX_FILE_SIZE_BYTES, 20 * 1024);\n    LogAppender appender = injector.getInstance(LogAppender.class);\n    new LogAppenderInitializer(appender).initialize(\"TestResilientLogging\");\n\n    Logger logger = LoggerFactory.getLogger(\"TestResilientLogging\");\n    for (int i = 0; i < 5; ++i) {\n      Exception e1 = new Exception(\"Test Exception1\");\n      Exception e2 = new Exception(\"Test Exception2\", e1);\n      logger.warn(\"Test log message \" + i + \" {} {}\", \"arg1\", \"arg2\", e2);\n    }\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    StatusPrinter.setPrintStream(new PrintStream(bos));\n    StatusPrinter.print((LoggerContext) LoggerFactory.getILoggerFactory());\n    System.out.println(bos.toString());\n\n    // Start dataset service, wait for it to be discoverable\n    DatasetService dsService = injector.getInstance(DatasetService.class);\n    dsService.startAndWait();\n\n    final CountDownLatch startLatch = new CountDownLatch(1);\n    DiscoveryServiceClient discoveryClient = injector.getInstance(DiscoveryServiceClient.class);\n    discoveryClient.discover(Constants.Service.DATASET_MANAGER).watchChanges(new ServiceDiscovered.ChangeListener() {\n      @Override\n      public void onChange(ServiceDiscovered serviceDiscovered) {\n        if (!Iterables.isEmpty(serviceDiscovered)) {\n          startLatch.countDown();\n        }\n      }\n    }, Threads.SAME_THREAD_EXECUTOR);\n\n    startLatch.await(5, TimeUnit.SECONDS);\n\n    // Do some more logging after the service is started.\n    for (int i = 5; i < 10; ++i) {\n      Exception e1 = new Exception(\"Test Exception1\");\n      Exception e2 = new Exception(\"Test Exception2\", e1);\n      logger.warn(\"Test log message \" + i + \" {} {}\", \"arg1\", \"arg2\", e2);\n    }\n\n    appender.stop();\n\n    // Verify - we should have at least 5 events.\n    LoggingContext loggingContext = new FlowletLoggingContext(\"TRL_ACCT_1\", \"APP_1\", \"FLOW_1\", \"\");\n    StandaloneLogReader logTail = injector.getInstance(StandaloneLogReader.class);\n    LoggingTester.LogCallback logCallback1 = new LoggingTester.LogCallback();\n    logTail.getLogPrev(loggingContext, -1, 10, Filter.EMPTY_FILTER,\n                       logCallback1);\n    List<LogEvent> allEvents = logCallback1.getEvents();\n    Assert.assertTrue(allEvents.size() >= 5);\n\n    // Finally - stop all services\n    Services.chainStop(dsService, opExecutorService, txManager);\n  }","commit_id":"9d47a52c531458434dd522aff05bee870fd84915","url":"https://github.com/caskdata/cdap"},{"original_method":"private void doCheckoutNewBranch(@NotNull final String name) {\n    GitCheckoutNewBranchOperation operation = new GitCheckoutNewBranchOperation(myProject, myRepositories, name, getCurrentBranch());\n    new GitMultiRootOperationExecutor(myProject, myRepositories).execute(operation);\n  }","id":15742,"modified_method":"private void doCheckoutNewBranch(@NotNull final String name, @NotNull ProgressIndicator indicator) {\n    new GitCheckoutNewBranchOperation(myProject, myRepositories, name, getCurrentBranch(), indicator).execute();\n  }","commit_id":"87e2ecad73b20fa22fc06038ced2da080e650c5a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void doCheckout(@NotNull ProgressIndicator indicator, @NotNull String reference, @Nullable String newBranch) {\n    GitMultiRootOperationExecutor executor = new GitMultiRootOperationExecutor(myProject, myRepositories);\n    GitCheckoutOperation operation = new GitCheckoutOperation(myProject, myRepositories, reference, newBranch, getCurrentBranch(), executor, indicator);\n    executor.execute(operation);\n  }","id":15743,"modified_method":"private void doCheckout(@NotNull ProgressIndicator indicator, @NotNull String reference, @Nullable String newBranch) {\n    new GitCheckoutOperation(myProject, myRepositories, reference, newBranch, getCurrentBranch(), indicator).execute();\n  }","commit_id":"87e2ecad73b20fa22fc06038ced2da080e650c5a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Checks out a new branch in background.\n   * If there are unmerged files, proposes to resolve the conflicts and tries to check out again.\n   * Doesn't check the name of new branch for validity - do this before calling this method, otherwise a standard error dialog will be shown.\n   *\n   * @param name Name of the new branch to check out.\n   */\n  public void checkoutNewBranch(@NotNull final String name) {\n    new CommonBackgroundTask(myProject, \"Checking out new branch \" + name, myCallInAwtAfterExecution) {\n      @Override public void execute(@NotNull ProgressIndicator indicator) {\n        doCheckoutNewBranch(name);\n      }\n    }.runInBackground();\n  }","id":15744,"modified_method":"/**\n   * Checks out a new branch in background.\n   * If there are unmerged files, proposes to resolve the conflicts and tries to check out again.\n   * Doesn't check the name of new branch for validity - do this before calling this method, otherwise a standard error dialog will be shown.\n   *\n   * @param name Name of the new branch to check out.\n   */\n  public void checkoutNewBranch(@NotNull final String name) {\n    new CommonBackgroundTask(myProject, \"Checking out new branch \" + name, myCallInAwtAfterExecution) {\n      @Override public void execute(@NotNull ProgressIndicator indicator) {\n        doCheckoutNewBranch(name, indicator);\n      }\n    }.runInBackground();\n  }","commit_id":"87e2ecad73b20fa22fc06038ced2da080e650c5a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public GitCheckoutNewBranchOperation(@NotNull Project project,\n                                       @NotNull Collection<GitRepository> repositories,\n                                       @NotNull String newBranchName,\n                                       @NotNull String previousBranch) {\n    myRepositories = repositories;\n    myNewBranchName = newBranchName;\n    myProject = project;\n    myPreviousBranch = previousBranch;\n  }","id":15745,"modified_method":"public GitCheckoutNewBranchOperation(@NotNull Project project, @NotNull Collection<GitRepository> repositories,\n                                       @NotNull String newBranchName, @NotNull String previousBranch,\n                                       @NotNull ProgressIndicator indicator) {\n    super(project, repositories, indicator);\n    myNewBranchName = newBranchName;\n    myProject = project;\n    myPreviousBranch = previousBranch;\n  }","commit_id":"87e2ecad73b20fa22fc06038ced2da080e650c5a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public boolean rollbackable() {\n    return true;\n  }","id":15746,"modified_method":"@Override\n  protected void rollback() {\n    GitCompoundResult checkoutResult = new GitCompoundResult(myProject);\n    GitCompoundResult deleteResult = new GitCompoundResult(myProject);\n    Collection<GitRepository> repositories = getSuccessfulRepositories();\n    for (GitRepository repository : repositories) {\n      GitCommandResult result = Git.checkout(repository, myPreviousBranch, null);\n      checkoutResult.append(repository, result);\n      if (result.success()) {\n        deleteResult.append(repository, Git.branchDelete(repository, myNewBranchName, false));\n      }\n      refresh(repository);\n    }\n    if (checkoutResult.totalSuccess() && deleteResult.totalSuccess()) {\n      GitUIUtil.notify(GitVcs.NOTIFICATION_GROUP_ID, myProject, \"Rollback successful\",\n                       String.format(\"Checked out %s and deleted %s on %s %s\", code(myPreviousBranch), code(myNewBranchName),\n                                     StringUtil.pluralize(\"root\", repositories.size()), successfulRepositoriesJoined()),\n                       NotificationType.INFORMATION, null);\n    }\n    else {\n      StringBuilder message = new StringBuilder();\n      if (!checkoutResult.totalSuccess()) {\n        message.append(\"Errors during checkout: \");\n        message.append(checkoutResult.getErrorOutputWithReposIndication());\n      }\n      if (!deleteResult.totalSuccess()) {\n        message.append(\"Errors during deleting \").append(code(myNewBranchName));\n        message.append(deleteResult.getErrorOutputWithReposIndication());\n      }\n      GitUIUtil.notify(GitVcs.IMPORTANT_ERROR_NOTIFICATION, myProject, \"Error during rollback\", message.toString(), NotificationType.ERROR, null);\n    }\n  }","commit_id":"87e2ecad73b20fa22fc06038ced2da080e650c5a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  @Override\n  public GitBranchOperationResult execute(@NotNull GitRepository repository) {\n    GitSimpleEventDetector unmergedDetector = new GitSimpleEventDetector(GitSimpleEventDetector.Event.UNMERGED);\n    GitCommandResult result = Git.checkoutNewBranch(repository, myNewBranchName, unmergedDetector);\n    if (result.success()) {\n      return GitBranchOperationResult.success();\n    }\n    else if (unmergedDetector.hasHappened()) {\n      return GitBranchOperationResult.resolvable();\n    }\n    else {\n      return GitBranchOperationResult.error(\"Couldn't create new branch \" + myNewBranchName, result.getErrorOutputAsJoinedString());\n    }\n  }","id":15747,"modified_method":"private static void refresh(@NotNull GitRepository repository) {\n    repository.update(GitRepository.TrackedTopic.ALL_CURRENT, GitRepository.TrackedTopic.CONFIG, GitRepository.TrackedTopic.BRANCHES);\n  }","commit_id":"87e2ecad73b20fa22fc06038ced2da080e650c5a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Saves local changes. In case of error shows a notification and returns false.\n   */\n  private static GitBranchOperationResult save(@NotNull Collection<GitRepository> repositories, @NotNull GitChangesSaver saver) {\n    try {\n      saver.saveLocalChanges(GitUtil.getRoots(repositories));\n      return GitBranchOperationResult.success();\n    } catch (VcsException e) {\n      LOG.info(\"Couldn't save local changes\", e);\n      return GitBranchOperationResult.error(\"Git checkout failed\",\n               String.format(\"Tried to save uncommitted changes in %s before checkout, but failed with an error.<br/>%s\",\n                             saver.getSaverName(), StringUtil.join(e.getMessages())));\n    }\n  }","id":15748,"modified_method":"/**\n   * Saves local changes. In case of error shows a notification and returns false.\n   */\n  private boolean save(@NotNull Collection<GitRepository> repositories, @NotNull GitChangesSaver saver) {\n    try {\n      saver.saveLocalChanges(GitUtil.getRoots(repositories));\n      return true;\n    } catch (VcsException e) {\n      LOG.info(\"Couldn't save local changes\", e);\n      notifyError(\"Couldn't save uncommitted changes.\",\n                  String.format(\"Tried to save uncommitted changes in %s before checkout, but failed with an error.<br/>%s\",\n                                saver.getSaverName(), StringUtil.join(e.getMessages())));\n      return false;\n    }\n  }","commit_id":"87e2ecad73b20fa22fc06038ced2da080e650c5a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private GitBranchOperationResult smartCheckout(@NotNull final Collection<GitRepository> repositories, @NotNull final String reference, @Nullable final String newBranch, @NotNull ProgressIndicator indicator) {\n    final GitChangesSaver saver = configureSaver(reference, indicator);\n\n    final AtomicReference<GitBranchOperationResult> result = new AtomicReference<GitBranchOperationResult>();\n    GitComplexProcess.Operation checkoutOperation = new GitComplexProcess.Operation() {\n      @Override public void run(ContinuationContext context) {\n        GitBranchOperationResult saveResult = save(repositories, saver);\n        if (saveResult.isSuccess()) {\n          try {\n            result.set(justCheckout(repositories, reference, newBranch));\n          } finally {\n            saver.restoreLocalChanges(context);\n          }\n        }\n      }\n    };\n    GitComplexProcess.execute(myProject, \"checkout\", checkoutOperation);\n    return result.get();\n  }","id":15749,"modified_method":"private boolean smartCheckout(@NotNull final Collection<GitRepository> repositories, @NotNull final String reference, @Nullable final String newBranch, @NotNull ProgressIndicator indicator) {\n    final GitChangesSaver saver = configureSaver(reference, indicator);\n\n    final AtomicBoolean result = new AtomicBoolean();\n    GitComplexProcess.Operation checkoutOperation = new GitComplexProcess.Operation() {\n      @Override public void run(ContinuationContext context) {\n        boolean savedSuccessfully = save(repositories, saver);\n        if (savedSuccessfully) {\n          try {\n            result.set(checkoutOrNotify(repositories, reference, newBranch));\n          } finally {\n            saver.restoreLocalChanges(context);\n          }\n        }\n      }\n    };\n    GitComplexProcess.execute(myProject, \"checkout\", checkoutOperation);\n    return result.get();\n  }","commit_id":"87e2ecad73b20fa22fc06038ced2da080e650c5a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public boolean rollbackable() {\n    return true;\n  }","id":15750,"modified_method":"@Override\n  protected void rollback() {\n    GitCompoundResult compoundResult = new GitCompoundResult(myProject);\n    for (GitRepository repository : getSuccessfulRepositories()) {\n      GitCommandResult result = Git.checkout(repository, myPreviousBranch, null);\n      compoundResult.append(repository, result);\n      refresh(repository);\n    }\n    if (!compoundResult.totalSuccess()) {\n      GitUIUtil.notify(GitVcs.IMPORTANT_ERROR_NOTIFICATION, myProject, \"Error during rolling checkout back\",\n                       compoundResult.getErrorOutputWithReposIndication(), NotificationType.ERROR, null);\n    }\n  }","commit_id":"87e2ecad73b20fa22fc06038ced2da080e650c5a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public GitCheckoutOperation(@NotNull Project project, @NotNull Collection<GitRepository> repositories, @NotNull String startPointReference, @Nullable String newBranch, @NotNull String previousBranch, @NotNull GitMultiRootOperationExecutor executor, @NotNull ProgressIndicator indicator) {\n    myStartPointReference = startPointReference;\n    myNewBranch = newBranch;\n    myPreviousBranch = previousBranch;\n    myProject = project;\n    myRepositories = repositories;\n    myExecutor = executor;\n    myIndicator = indicator;\n  }","id":15751,"modified_method":"public GitCheckoutOperation(@NotNull Project project, @NotNull Collection<GitRepository> repositories,\n                              @NotNull String startPointReference, @Nullable String newBranch, @NotNull String previousBranch, \n                              @NotNull ProgressIndicator indicator) {\n    super(project, repositories, indicator);\n    myStartPointReference = startPointReference;\n    myNewBranch = newBranch;\n    myPreviousBranch = previousBranch;\n  }","commit_id":"87e2ecad73b20fa22fc06038ced2da080e650c5a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Checks out or shows an error message.\n   */\n  private GitBranchOperationResult justCheckout(@NotNull Collection<GitRepository> repositories, @NotNull String reference, @Nullable String newBranch) {\n    GitCompoundResult compoundResult = new GitCompoundResult(myProject);\n    for (GitRepository repository : repositories) {\n      compoundResult.append(repository, Git.checkout(repository, reference, newBranch));\n    }\n    if (compoundResult.totalSuccess()) {\n      return GitBranchOperationResult.success();\n    }\n    return GitBranchOperationResult.error(\"Couldn't checkout \" + reference, compoundResult.getErrorOutputWithReposIndication());\n  }","id":15752,"modified_method":"/**\n   * Checks out or shows an error message.\n   */\n  private boolean checkoutOrNotify(@NotNull Collection<GitRepository> repositories,\n                                                    @NotNull String reference,\n                                                    @Nullable String newBranch) {\n    GitCompoundResult compoundResult = new GitCompoundResult(myProject);\n    for (GitRepository repository : repositories) {\n      compoundResult.append(repository, Git.checkout(repository, reference, newBranch));\n    }\n    if (compoundResult.totalSuccess()) {\n      return true;\n    }\n    notifyError(\"Couldn't checkout \" + reference, compoundResult.getErrorOutputWithReposIndication());\n    return false;\n  }","commit_id":"87e2ecad73b20fa22fc06038ced2da080e650c5a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  private List<String> getMergedToBranches(String branchName) {\n    List<String> mergedToBranches = null;\n    for (GitRepository repository : myRepositories) {\n      List<String> branches = getMergedToBranches(repository, branchName);\n      if (mergedToBranches == null) {\n        mergedToBranches = branches;\n      } \n      else {\n        mergedToBranches.retainAll(branches);\n      }\n    }\n    return mergedToBranches != null ? mergedToBranches : new ArrayList<String>();\n  }","id":15753,"modified_method":"@NotNull\n  private List<String> getMergedToBranches(String branchName) {\n    List<String> mergedToBranches = null;\n    for (GitRepository repository : getRepositories()) {\n      List<String> branches = getMergedToBranches(repository, branchName);\n      if (mergedToBranches == null) {\n        mergedToBranches = branches;\n      } \n      else {\n        mergedToBranches.retainAll(branches);\n      }\n    }\n    return mergedToBranches != null ? mergedToBranches : new ArrayList<String>();\n  }","commit_id":"87e2ecad73b20fa22fc06038ced2da080e650c5a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Shows a dialog \"the branch is not fully merged\" with the list of unmerged commits.\n   * User may still want to force delete the branch.\n   * In multi-repository setup collects unmerged commits for all given repositories.\n   * @return true if the branch should be force deleted.\n   */\n  private boolean showNotFullyMergedDialog(@NotNull final String branchName, @NotNull Collection<GitRepository> repositories) {\n    final List<String> mergedToBranches = getMergedToBranches(branchName);\n\n    final Map<GitRepository, List<GitCommit>> history = new HashMap<GitRepository, List<GitCommit>>();\n    for (GitRepository repository : myRepositories) {\n      // we don't confuse user with the absence of repositories that have succeeded, just show no commits for them (and don't query for log)\n      if (repositories.contains(repository)) {\n        history.put(repository, getUnmergedCommits(repository, branchName));\n      }\n      else {\n        history.put(repository, Collections.<GitCommit>emptyList());\n      }\n    }\n\n    final AtomicBoolean forceDelete = new AtomicBoolean();\n    UIUtil.invokeAndWaitIfNeeded(new Runnable() {\n      @Override\n      public void run() {\n        forceDelete.set(GitBranchIsNotFullyMergedDialog.showAndGetAnswer(myProject, history, branchName, mergedToBranches, myCurrentBranch));\n      }\n    });\n    return forceDelete.get();\n  }","id":15754,"modified_method":"/**\n   * Shows a dialog \"the branch is not fully merged\" with the list of unmerged commits.\n   * User may still want to force delete the branch.\n   * In multi-repository setup collects unmerged commits for all given repositories.\n   * @return true if the branch should be force deleted.\n   */\n  private boolean showNotFullyMergedDialog(@NotNull final String branchName, @NotNull Collection<GitRepository> repositories) {\n    final List<String> mergedToBranches = getMergedToBranches(branchName);\n\n    final Map<GitRepository, List<GitCommit>> history = new HashMap<GitRepository, List<GitCommit>>();\n    for (GitRepository repository : getRepositories()) {\n      // we don't confuse user with the absence of repositories that have succeeded, just show no commits for them (and don't query for log)\n      if (repositories.contains(repository)) {\n        history.put(repository, getUnmergedCommits(repository, branchName));\n      }\n      else {\n        history.put(repository, Collections.<GitCommit>emptyList());\n      }\n    }\n\n    final AtomicBoolean forceDelete = new AtomicBoolean();\n    UIUtil.invokeAndWaitIfNeeded(new Runnable() {\n      @Override\n      public void run() {\n        forceDelete.set(GitBranchIsNotFullyMergedDialog.showAndGetAnswer(myProject, history, branchName, mergedToBranches, myCurrentBranch));\n      }\n    });\n    return forceDelete.get();\n  }","commit_id":"87e2ecad73b20fa22fc06038ced2da080e650c5a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void execute() {\n    Collection<GitRepository> succeeded = new ArrayList<GitRepository>();\n    for (GitRepository repository : myRepositories) {\n      GitSimpleEventDetector notFullyMergedDetector = new GitSimpleEventDetector(GitSimpleEventDetector.Event.BRANCH_NOT_FULLY_MERGED);\n      GitCommandResult result = Git.branchDelete(repository, myBranchName, false, notFullyMergedDetector);\n      if (result.success()) {\n        succeeded.add(repository);\n      }\n      else if (notFullyMergedDetector.hasHappened()) {\n        Collection<GitRepository> remainingRepos = filterOut(myRepositories, succeeded);\n        boolean forceDelete = showNotFullyMergedDialog(myBranchName, remainingRepos);\n        if (forceDelete) {\n          GitCompoundResult compoundResult = forceDelete(myBranchName, remainingRepos);\n          if (compoundResult.totalSuccess()) {\n            break;\n          }\n          else {\n            notifyError(succeeded, compoundResult);\n            return;\n          }\n        }\n        else {\n          if (succeeded.isEmpty()) {\n            GitMultiRootOperationExecutor\n              .showFatalError(getErrorTitle(), \"The branch is not fully merged to the current branch.\", myProject);\n          }\n          else {\n            StringBuilder message = new StringBuilder();\n            message.append(\"Successfully removed in \").append(GitMultiRootOperationExecutor.joinRepositoryUrls(succeeded, \"<br/>\"))\n              .append(\"The branch is not fully merged to the current branch in other repositories.\");\n            GitMultiRootOperationExecutor.showFatalError(getErrorTitle() + \" in some repositories\", message.toString(), myProject);\n          }\n          return;\n        }\n      }\n      else {\n        GitMultiRootOperationExecutor.showFatalError(getErrorTitle(), result.getErrorOutputAsHtmlString(), myProject);\n        return;\n      }\n    }\n    GitMultiRootOperationExecutor.notifySuccess(getSuccessMessage(), myProject);\n  }","id":15755,"modified_method":"@Override\n  public void execute() {\n    boolean fatalErrorHappened = false;\n    while (hasMoreRepositories() && !fatalErrorHappened) {\n      final GitRepository repository = next();\n\n      GitSimpleEventDetector notFullyMergedDetector = new GitSimpleEventDetector(GitSimpleEventDetector.Event.BRANCH_NOT_FULLY_MERGED);\n      GitCommandResult result = Git.branchDelete(repository, myBranchName, false, notFullyMergedDetector);\n\n      if (result.success()) {\n        refresh(repository);\n        markSuccessful(repository);\n      }\n      else if (notFullyMergedDetector.hasHappened()) {\n        Collection<GitRepository> remainingRepositories = getRemainingRepositories();\n        boolean forceDelete = showNotFullyMergedDialog(myBranchName, remainingRepositories);\n        if (forceDelete) {\n          GitCompoundResult compoundResult = forceDelete(myBranchName, remainingRepositories);\n          if (compoundResult.totalSuccess()) {\n            GitRepository[] remainingRepositoriesArray = ArrayUtil.toObjectArray(remainingRepositories, GitRepository.class);\n            markSuccessful(remainingRepositoriesArray);\n            refresh(remainingRepositoriesArray);\n          }\n          else {\n            fatalError(getErrorTitle(), compoundResult.getErrorOutputWithReposIndication());\n            return;\n          }\n        }\n        else {\n          fatalError(getErrorTitle(), \"This branch is not fully merged to \" + myCurrentBranch);\n          fatalErrorHappened = true;\n        }\n      }\n      else {\n        fatalError(getErrorTitle(), result.getErrorOutputAsJoinedString());\n        fatalErrorHappened = true;\n      }\n    }\n\n    if (!fatalErrorHappened) {\n      notifySuccess();\n    }\n  }","commit_id":"87e2ecad73b20fa22fc06038ced2da080e650c5a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public GitDeleteBranchOperation(@NotNull Project project, @NotNull Collection<GitRepository> repositories, @NotNull String branchName, @NotNull String currentBranch, @NotNull ProgressIndicator indicator) {\n    myProject = project;\n    myRepositories = repositories;\n    myBranchName = branchName;\n    myCurrentBranch = currentBranch;\n    myIndicator = indicator;\n  }","id":15756,"modified_method":"public GitDeleteBranchOperation(@NotNull Project project, @NotNull Collection<GitRepository> repositories,\n                                  @NotNull String branchName, @NotNull String currentBranch, @NotNull ProgressIndicator indicator) {\n    super(project, repositories, indicator);\n    myBranchName = branchName;\n    myCurrentBranch = currentBranch;\n  }","commit_id":"87e2ecad73b20fa22fc06038ced2da080e650c5a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Displays notification about {@code untracked files would be overwritten by checkout} error.\n   * Clicking on the link in the notification opens a simple dialog with the list of these files.\n   * @param operation the name of the Git operation that caused the error: {@code rebase, merge, checkout}.\n   */\n  public static void notifyUntrackedFilesOverwrittenBy(final @NotNull Project project, final @NotNull Collection<VirtualFile> untrackedFiles, @NotNull String operation) {\n    final String notificationTitle = StringUtil.capitalize(operation) + \" error\";\n    final String description1 = \" untracked working tree files would be overwritten by \" + operation + \".\";\n    final String description2 = \"Please move or remove them before you can \" + operation + \".\";\n    final String notificationDesc = \"Some\" + description1 + \"<br/>\" + description2 + \" <a href=''>View them<\/a>\";\n    final String dialogDesc = \"These\" + description1 + \"\\n\" + description2;\n\n    GitVcs.IMPORTANT_ERROR_NOTIFICATION.createNotification(notificationTitle, notificationDesc, NotificationType.ERROR, new NotificationListener() {\n      @Override public void hyperlinkUpdate(@NotNull Notification notification, @NotNull HyperlinkEvent event) {\n        SelectFilesDialog dlg = new SelectFilesDialog(project, new ArrayList<VirtualFile>(untrackedFiles), dialogDesc, null, false, false) {\n          @Override protected Action[] createActions() {\n            return new Action[]{getOKAction()};\n          }\n        };\n        dlg.setTitle(\"Untracked Files Preventing Rebase\");\n        dlg.show();\n      }\n    }).notify(project);\n\n  }","id":15757,"modified_method":"/**\n   * Displays notification about {@code untracked files would be overwritten by checkout} error.\n   * Clicking on the link in the notification opens a simple dialog with the list of these files.\n   * @param operation the name of the Git operation that caused the error: {@code rebase, merge, checkout}.\n   */\n  public static void notifyUntrackedFilesOverwrittenBy(final @NotNull Project project, final @NotNull Collection<VirtualFile> untrackedFiles, @NotNull final String operation) {\n    final String notificationTitle = StringUtil.capitalize(operation) + \" error\";\n    final String notificationDesc = createUntrackedFilesOverwrittenDescription(operation, false);\n    final String dialogDesc = createUntrackedFilesOverwrittenDescription(operation, true);\n\n    GitVcs.IMPORTANT_ERROR_NOTIFICATION.createNotification(notificationTitle, notificationDesc, NotificationType.ERROR, new NotificationListener() {\n      @Override public void hyperlinkUpdate(@NotNull Notification notification, @NotNull HyperlinkEvent event) {\n        SelectFilesDialog dlg = new SelectFilesDialog(project, new ArrayList<VirtualFile>(untrackedFiles), dialogDesc, null, false, false) {\n          @Override protected Action[] createActions() {\n            return new Action[]{getOKAction()};\n          }\n        };\n        dlg.setTitle(\"Untracked Files Preventing \" + StringUtil.capitalize(operation));\n        dlg.show();\n      }\n    }).notify(project);\n\n  }","commit_id":"87e2ecad73b20fa22fc06038ced2da080e650c5a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void buildInitialFoldings(final Editor editor) {\n    final Project project = editor.getProject();\n    if (project == null || !project.equals(myProject)) return;\n\n    final Document document = editor.getDocument();\n    //Do not save/restore folding for code fragments\n    final PsiFile file = PsiDocumentManager.getInstance(myProject).getPsiFile(document);\n    if (file == null || !file.getViewProvider().isPhysical() && !ApplicationManager.getApplication().isUnitTestMode()) return;\n\n    if (!((FoldingModelEx)editor.getFoldingModel()).isFoldingEnabled()) return;\n    if (project.isDisposed() || editor.isDisposed() || !file.isValid()) return;\n\n    PsiDocumentManager.getInstance(myProject).commitDocument(document);\n\n    Runnable operation = new Runnable() {\n      public void run() {\n        Runnable runnable = updateFoldRegions(editor, true, true);\n        if (runnable != null) {\n          runnable.run();\n        }\n\n        DocumentFoldingInfo documentFoldingInfo = getDocumentFoldingInfo(document);\n        Editor[] editors = EditorFactory.getInstance().getEditors(document, myProject);\n        for (Editor otherEditor : editors) {\n          if (otherEditor == editor) continue;\n          documentFoldingInfo.loadFromEditor(otherEditor);\n          break;\n        }\n        documentFoldingInfo.setToEditor(editor);\n\n        documentFoldingInfo.clear();\n      }\n    };\n    editor.getFoldingModel().runBatchFoldingOperationDoNotCollapseCaret(operation);\n  }","id":15758,"modified_method":"@Override\n  public void buildInitialFoldings(@NotNull final Editor editor) {\n    final Project project = editor.getProject();\n    if (project == null || !project.equals(myProject)) return;\n\n    final Document document = editor.getDocument();\n    //Do not save/restore folding for code fragments\n    final PsiFile file = PsiDocumentManager.getInstance(myProject).getPsiFile(document);\n    if (file == null || !file.getViewProvider().isPhysical() && !ApplicationManager.getApplication().isUnitTestMode()) return;\n\n    if (!((FoldingModelEx)editor.getFoldingModel()).isFoldingEnabled()) return;\n    if (project.isDisposed() || editor.isDisposed() || !file.isValid()) return;\n\n    PsiDocumentManager.getInstance(myProject).commitDocument(document);\n\n    Runnable operation = new Runnable() {\n      @Override\n      public void run() {\n        Runnable runnable = updateFoldRegions(editor, true, true);\n        if (runnable != null) {\n          runnable.run();\n        }\n\n        DocumentFoldingInfo documentFoldingInfo = getDocumentFoldingInfo(document);\n        Editor[] editors = EditorFactory.getInstance().getEditors(document, myProject);\n        for (Editor otherEditor : editors) {\n          if (otherEditor == editor) continue;\n          documentFoldingInfo.loadFromEditor(otherEditor);\n          break;\n        }\n        documentFoldingInfo.setToEditor(editor);\n\n        documentFoldingInfo.clear();\n      }\n    };\n    editor.getFoldingModel().runBatchFoldingOperationDoNotCollapseCaret(operation);\n  }","commit_id":"357748f5be93b3d624c856453d3b47c50fd90f60","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void forceDefaultState(@NotNull final Editor editor) {\n    PsiDocumentManager.getInstance(myProject).commitDocument(editor.getDocument());\n    Runnable runnable = updateFoldRegions(editor, true, false);\n    if (runnable != null) {\n      runnable.run();\n    }\n\n    final FoldRegion[] regions = editor.getFoldingModel().getAllFoldRegions();\n    editor.getFoldingModel().runBatchFoldingOperation(new Runnable() {\n      public void run() {\n        EditorFoldingInfo foldingInfo = EditorFoldingInfo.get(editor);\n        for (FoldRegion region : regions) {\n          PsiElement element = foldingInfo.getPsiElement(region);\n          if (element != null) {\n            region.setExpanded(!FoldingPolicy.isCollapseByDefault(element));\n          }\n        }\n      }\n    });\n  }","id":15759,"modified_method":"@Override\n  public void forceDefaultState(@NotNull final Editor editor) {\n    PsiDocumentManager.getInstance(myProject).commitDocument(editor.getDocument());\n    Runnable runnable = updateFoldRegions(editor, true, false);\n    if (runnable != null) {\n      runnable.run();\n    }\n\n    final FoldRegion[] regions = editor.getFoldingModel().getAllFoldRegions();\n    editor.getFoldingModel().runBatchFoldingOperation(new Runnable() {\n      @Override\n      public void run() {\n        EditorFoldingInfo foldingInfo = EditorFoldingInfo.get(editor);\n        for (FoldRegion region : regions) {\n          PsiElement element = foldingInfo.getPsiElement(region);\n          if (element != null) {\n            region.setExpanded(!FoldingPolicy.isCollapseByDefault(element));\n          }\n        }\n      }\n    });\n  }","commit_id":"357748f5be93b3d624c856453d3b47c50fd90f60","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void projectOpened() {\n    final EditorMouseMotionAdapter myMouseMotionListener = new EditorMouseMotionAdapter() {\n      LightweightHint myCurrentHint = null;\n      FoldRegion myCurrentFold = null;\n\n      public void mouseMoved(EditorMouseEvent e) {\n        if (myProject.isDisposed()) return;\n        HintManager hintManager = HintManager.getInstance();\n        if (hintManager != null && hintManager.hasShownHintsThatWillHideByOtherHint(false)) {\n          return;\n        } \n\n        if (e.getArea() != EditorMouseEventArea.FOLDING_OUTLINE_AREA) return;\n        LightweightHint hint = null;\n        try {\n          Editor editor = e.getEditor();\n          if (PsiDocumentManager.getInstance(myProject).isUncommited(editor.getDocument())) return;\n\n          MouseEvent mouseEvent = e.getMouseEvent();\n          FoldRegion fold = ((EditorEx)editor).getGutterComponentEx().findFoldingAnchorAt(mouseEvent.getX(), mouseEvent.getY());\n\n          if (fold == null || !fold.isValid()) return;\n          if (fold == myCurrentFold && myCurrentHint != null) {\n            hint = myCurrentHint;\n            return;\n          }\n\n          TextRange psiElementRange = EditorFoldingInfo.get(editor).getPsiElementRange(fold);\n          if (psiElementRange == null) return;\n\n          int textOffset = psiElementRange.getStartOffset();\n          // There is a possible case that target PSI element's offset is less than fold region offset (e.g. complete method is\n          // returned as PSI element for fold region that corresponds to java method code block). We don't want to show any hint\n          // if start of the current fold region is displayed.\n          Point foldStartXY = editor.visualPositionToXY(editor.offsetToVisualPosition(Math.max(textOffset, fold.getStartOffset())));\n          Rectangle visibleArea = editor.getScrollingModel().getVisibleArea();\n          if (visibleArea.y > foldStartXY.y) {\n            if (myCurrentHint != null) {\n              myCurrentHint.hide();\n              myCurrentHint = null;\n            }\n            \n            \n            // We want to show a hint with the top fold region content that is above the current viewport position.\n            // However, there is a possible case that complete region has a big height and only a little bottom part\n            // is shown at the moment. We can't just show hint with the whole top content because it would hide actual\n            // editor content, hence, we show max(2; available visual lines number) instead.\n            // P.S. '2' is used here in assumption that many java methods have javadocs which first line is just '/**'.\n            // So, it's not too useful to show only it even when available vertical space is not big enough.\n            int availableVisualLines = 2;\n            JComponent editorComponent = editor.getComponent();\n            Container editorComponentParent = editorComponent.getParent();\n            if (editorComponentParent != null) {\n              Container contentPane = editorComponent.getRootPane().getContentPane();\n              if (contentPane != null) {\n                int y = SwingUtilities.convertPoint(editorComponentParent, editorComponent.getLocation(), contentPane).y;\n                int visualLines = y / editor.getLineHeight();\n                availableVisualLines = Math.max(availableVisualLines, visualLines);\n              }\n            }\n            int startVisualLine = editor.offsetToVisualPosition(textOffset).line;\n            int desiredEndVisualLine = Math.max(0, editor.xyToVisualPosition(new Point(0, visibleArea.y)).line - 1);\n            int endVisualLine = startVisualLine + availableVisualLines;\n            if (endVisualLine > desiredEndVisualLine) {\n              endVisualLine = desiredEndVisualLine;\n            }\n\n            // Show only the non-displayed top part of the target fold region\n            int endOffset = editor.logicalPositionToOffset(editor.visualToLogicalPosition(new VisualPosition(endVisualLine, 0)));\n            TextRange textRange = new TextRange(textOffset, endOffset);\n            hint = EditorFragmentComponent.showEditorFragmentHint(editor, textRange, true, true);\n            myCurrentFold = fold;\n            myCurrentHint = hint;\n          }\n        }\n        finally {\n          if (hint == null) {\n            if (myCurrentHint != null) {\n              myCurrentHint.hide();\n              myCurrentHint = null;\n            }\n            myCurrentFold = null;\n          }\n        }\n      }\n    };\n\n    StartupManager.getInstance(myProject).registerPostStartupActivity(new DumbAwareRunnable() {\n      public void run() {\n        EditorFactory.getInstance().getEventMulticaster().addEditorMouseMotionListener(myMouseMotionListener, myProject);\n      }\n    });\n  }","id":15760,"modified_method":"@Override\n  public void projectOpened() {\n    final EditorMouseMotionAdapter myMouseMotionListener = new EditorMouseMotionAdapter() {\n      LightweightHint myCurrentHint = null;\n      FoldRegion myCurrentFold = null;\n\n      @Override\n      public void mouseMoved(EditorMouseEvent e) {\n        if (myProject.isDisposed()) return;\n        HintManager hintManager = HintManager.getInstance();\n        if (hintManager != null && hintManager.hasShownHintsThatWillHideByOtherHint(false)) {\n          return;\n        } \n\n        if (e.getArea() != EditorMouseEventArea.FOLDING_OUTLINE_AREA) return;\n        LightweightHint hint = null;\n        try {\n          Editor editor = e.getEditor();\n          if (PsiDocumentManager.getInstance(myProject).isUncommited(editor.getDocument())) return;\n\n          MouseEvent mouseEvent = e.getMouseEvent();\n          FoldRegion fold = ((EditorEx)editor).getGutterComponentEx().findFoldingAnchorAt(mouseEvent.getX(), mouseEvent.getY());\n\n          if (fold == null || !fold.isValid()) return;\n          if (fold == myCurrentFold && myCurrentHint != null) {\n            hint = myCurrentHint;\n            return;\n          }\n\n          TextRange psiElementRange = EditorFoldingInfo.get(editor).getPsiElementRange(fold);\n          if (psiElementRange == null) return;\n\n          int textOffset = psiElementRange.getStartOffset();\n          // There is a possible case that target PSI element's offset is less than fold region offset (e.g. complete method is\n          // returned as PSI element for fold region that corresponds to java method code block). We don't want to show any hint\n          // if start of the current fold region is displayed.\n          Point foldStartXY = editor.visualPositionToXY(editor.offsetToVisualPosition(Math.max(textOffset, fold.getStartOffset())));\n          Rectangle visibleArea = editor.getScrollingModel().getVisibleArea();\n          if (visibleArea.y > foldStartXY.y) {\n            if (myCurrentHint != null) {\n              myCurrentHint.hide();\n              myCurrentHint = null;\n            }\n            \n            \n            // We want to show a hint with the top fold region content that is above the current viewport position.\n            // However, there is a possible case that complete region has a big height and only a little bottom part\n            // is shown at the moment. We can't just show hint with the whole top content because it would hide actual\n            // editor content, hence, we show max(2; available visual lines number) instead.\n            // P.S. '2' is used here in assumption that many java methods have javadocs which first line is just '/**'.\n            // So, it's not too useful to show only it even when available vertical space is not big enough.\n            int availableVisualLines = 2;\n            JComponent editorComponent = editor.getComponent();\n            Container editorComponentParent = editorComponent.getParent();\n            if (editorComponentParent != null) {\n              Container contentPane = editorComponent.getRootPane().getContentPane();\n              if (contentPane != null) {\n                int y = SwingUtilities.convertPoint(editorComponentParent, editorComponent.getLocation(), contentPane).y;\n                int visualLines = y / editor.getLineHeight();\n                availableVisualLines = Math.max(availableVisualLines, visualLines);\n              }\n            }\n            int startVisualLine = editor.offsetToVisualPosition(textOffset).line;\n            int desiredEndVisualLine = Math.max(0, editor.xyToVisualPosition(new Point(0, visibleArea.y)).line - 1);\n            int endVisualLine = startVisualLine + availableVisualLines;\n            if (endVisualLine > desiredEndVisualLine) {\n              endVisualLine = desiredEndVisualLine;\n            }\n\n            // Show only the non-displayed top part of the target fold region\n            int endOffset = editor.logicalPositionToOffset(editor.visualToLogicalPosition(new VisualPosition(endVisualLine, 0)));\n            TextRange textRange = new TextRange(textOffset, endOffset);\n            hint = EditorFragmentComponent.showEditorFragmentHint(editor, textRange, true, true);\n            myCurrentFold = fold;\n            myCurrentHint = hint;\n          }\n        }\n        finally {\n          if (hint == null) {\n            if (myCurrentHint != null) {\n              myCurrentHint.hide();\n              myCurrentHint = null;\n            }\n            myCurrentFold = null;\n          }\n        }\n      }\n    };\n\n    StartupManager.getInstance(myProject).registerPostStartupActivity(new DumbAwareRunnable() {\n      @Override\n      public void run() {\n        EditorFactory.getInstance().getEventMulticaster().addEditorMouseMotionListener(myMouseMotionListener, myProject);\n      }\n    });\n  }","commit_id":"357748f5be93b3d624c856453d3b47c50fd90f60","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"CodeFoldingManagerImpl(Project project) {\n    myProject = project;\n    project.getMessageBus().connect().subscribe(DocumentBulkUpdateListener.TOPIC, new DocumentBulkUpdateListener.Adapter() {\n      public void updateStarted(@NotNull final Document doc) {\n        resetFoldingInfo(doc);\n      }\n    });\n  }","id":15761,"modified_method":"CodeFoldingManagerImpl(Project project) {\n    myProject = project;\n    project.getMessageBus().connect().subscribe(DocumentBulkUpdateListener.TOPIC, new DocumentBulkUpdateListener.Adapter() {\n      @Override\n      public void updateStarted(@NotNull final Document doc) {\n        resetFoldingInfo(doc);\n      }\n    });\n  }","commit_id":"357748f5be93b3d624c856453d3b47c50fd90f60","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void writeExternal(Element element) throws WriteExternalException {\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n    if (myPsiElementsOrRangeMarkers.isEmpty()){\n      throw new WriteExternalException();\n    }\n\n    String date = null;\n    for(int i = 0; i < myPsiElementsOrRangeMarkers.size(); i++){\n      Object o = myPsiElementsOrRangeMarkers.get(i);\n      Boolean state = myExpandedStates.get(i);\n      if (o instanceof PsiElement){\n        PsiElement psiElement = (PsiElement)o;\n        if (!psiElement.isValid()) continue;\n        String signature = FoldingPolicy.getSignature(psiElement);\n        if (signature == null) continue;\n\n        PsiElement restoredElement = FoldingPolicy.restoreBySignature(psiElement.getContainingFile(), signature);\n        if (!psiElement.equals(restoredElement)){\n          StringBuilder trace = new StringBuilder();\n          PsiElement restoredAgain = FoldingPolicy.restoreBySignature(psiElement.getContainingFile(), signature, trace);\n          LOG.error(\"element: \" + psiElement +\"(\" + psiElement.getText() + \"); restoredElement: \" + restoredElement\n                    + \"; signature: '\" + signature + \"'; file: \" + psiElement.getContainingFile() + \"; restored again: \"\n                    + restoredAgain + \"; restore produces same results: \" + (restoredAgain == restoredElement) + \"; trace:\\n\" + trace);\n        }\n\n        Element e = new Element(ELEMENT_TAG);\n        e.setAttribute(SIGNATURE_ATT, signature);\n        e.setAttribute(EXPANDED_ATT, state.toString());\n        element.addContent(e);\n      } else {\n        RangeMarker marker = (RangeMarker) o;\n        Element e = new Element(MARKER_TAG);\n        if (date == null) {\n          date = getTimeStamp();\n        }\n        if (date.isEmpty()) continue;\n\n        e.setAttribute(DATE_ATT, date);\n        e.setAttribute(EXPANDED_ATT, state.toString());\n        String signature = Integer.valueOf(marker.getStartOffset()) + \":\" + Integer.valueOf(marker.getEndOffset());\n        e.setAttribute(SIGNATURE_ATT, signature);\n        String placeHolderText = myPlaceholderTexts.get(marker);\n        e.setAttribute(PLACEHOLDER_ATT, placeHolderText);\n        element.addContent(e);\n      }\n    }\n  }","id":15762,"modified_method":"@Override\n  public void writeExternal(Element element) throws WriteExternalException {\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n    if (myPsiElements.isEmpty() && myRangeMarkers.isEmpty()){\n      throw new WriteExternalException();\n    }\n\n    for (SmartPsiElementPointer<PsiElement> ptr : myPsiElements) {\n      PsiElement psiElement = ptr.getElement();\n      if (psiElement == null || !psiElement.isValid()) {\n        continue;\n      }\n      FoldingInfo fi = psiElement.getUserData(FOLDING_INFO_KEY);\n      boolean state = fi != null && fi.expanded;\n      String signature = FoldingPolicy.getSignature(psiElement);\n      if (signature == null) {\n        continue;\n      }\n\n      PsiElement restoredElement = FoldingPolicy.restoreBySignature(psiElement.getContainingFile(), signature);\n      if (!psiElement.equals(restoredElement)) {\n        StringBuilder trace = new StringBuilder();\n        PsiElement restoredAgain = FoldingPolicy.restoreBySignature(psiElement.getContainingFile(), signature, trace);\n        LOG.error(\"element: \" + psiElement + \"(\" + psiElement.getText() + \"); restoredElement: \" + restoredElement\n                  + \"; signature: '\" + signature + \"'; file: \" + psiElement.getContainingFile() + \"; restored again: \"\n                  + restoredAgain + \"; restore produces same results: \" + (restoredAgain == restoredElement) + \"; trace:\\n\" + trace);\n      }\n\n      Element e = new Element(ELEMENT_TAG);\n      e.setAttribute(SIGNATURE_ATT, signature);\n      e.setAttribute(EXPANDED_ATT, Boolean.toString(state));\n      element.addContent(e);\n    }\n    String date = null;\n    for (RangeMarker marker : myRangeMarkers) {\n      FoldingInfo fi = marker.getUserData(FOLDING_INFO_KEY);\n      boolean state = fi != null && fi.expanded;\n\n      Element e = new Element(MARKER_TAG);\n      if (date == null) {\n        date = getTimeStamp();\n      }\n      if (date.isEmpty()) {\n        continue;\n      }\n\n      e.setAttribute(DATE_ATT, date);\n      e.setAttribute(EXPANDED_ATT, Boolean.toString(state));\n      String signature = Integer.valueOf(marker.getStartOffset()) + \":\" + Integer.valueOf(marker.getEndOffset());\n      e.setAttribute(SIGNATURE_ATT, signature);\n      String placeHolderText = fi == null ? DEFAULT_PLACEHOLDER : fi.placeHolder;\n      e.setAttribute(PLACEHOLDER_ATT, placeHolderText);\n      element.addContent(e);\n    }\n  }","commit_id":"357748f5be93b3d624c856453d3b47c50fd90f60","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void loadFromEditor(Editor editor) {\n    LOG.assertTrue(!editor.isDisposed());\n    clear();\n\n    PsiDocumentManager.getInstance(myProject).commitDocument(editor.getDocument());\n\n    EditorFoldingInfo info = EditorFoldingInfo.get(editor);\n    FoldRegion[] foldRegions = editor.getFoldingModel().getAllFoldRegions();\n    for (FoldRegion region : foldRegions) {\n      PsiElement element = info.getPsiElement(region);\n      boolean expanded = region.isExpanded();\n      boolean collapseByDefault = element != null &&\n                                  FoldingPolicy.isCollapseByDefault(element) &&\n                                  !FoldingUtil.caretInsideRange(editor, TextRange.create(region));\n      if (collapseByDefault == expanded || element == null) {\n        if (element != null) {\n          myPsiElementsOrRangeMarkers.add(element);\n        }\n        else if (region.isValid()) {\n          RangeMarker marker = editor.getDocument().createRangeMarker(region.getStartOffset(), region.getEndOffset());\n          myPsiElementsOrRangeMarkers.add(marker);\n          String placeholderText = region.getPlaceholderText();\n          myPlaceholderTexts.put(marker, placeholderText);\n        }\n        myExpandedStates.add(expanded ? Boolean.TRUE : Boolean.FALSE);\n      }\n    }\n  }","id":15763,"modified_method":"void loadFromEditor(@NotNull Editor editor) {\n    LOG.assertTrue(!editor.isDisposed());\n    clear();\n\n    PsiDocumentManager documentManager = PsiDocumentManager.getInstance(myProject);\n    documentManager.commitDocument(editor.getDocument());\n    PsiFile file = documentManager.getPsiFile(editor.getDocument());\n\n    SmartPointerManager smartPointerManager = SmartPointerManager.getInstance(myProject);\n    EditorFoldingInfo info = EditorFoldingInfo.get(editor);\n    FoldRegion[] foldRegions = editor.getFoldingModel().getAllFoldRegions();\n    for (FoldRegion region : foldRegions) {\n      PsiElement element = info.getPsiElement(region);\n      boolean expanded = region.isExpanded();\n      boolean collapseByDefault = element != null &&\n                                  FoldingPolicy.isCollapseByDefault(element) &&\n                                  !FoldingUtil.caretInsideRange(editor, TextRange.create(region));\n      if (collapseByDefault == expanded || element == null) {\n        FoldingInfo fi = new FoldingInfo(region.getPlaceholderText(), expanded);\n        if (element != null) {\n          myPsiElements.add(smartPointerManager.createSmartPsiElementPointer(element, file));\n          element.putUserData(FOLDING_INFO_KEY, fi);\n        }\n        else if (region.isValid()) {\n          myRangeMarkers.add(region);\n          region.putUserData(FOLDING_INFO_KEY, fi);\n        }\n      }\n    }\n  }","commit_id":"357748f5be93b3d624c856453d3b47c50fd90f60","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public int hashCode() {\n    int result = myProject != null ? myProject.hashCode() : 0;\n    result = 31 * result + (myFile != null ? myFile.hashCode() : 0);\n    result = 31 * result + (myPsiElementsOrRangeMarkers != null ? myPsiElementsOrRangeMarkers.hashCode() : 0);\n    result = 31 * result + (myExpandedStates != null ? myExpandedStates.hashCode() : 0);\n    result = 31 * result + (myPlaceholderTexts != null ? myPlaceholderTexts.hashCode() : 0);\n    return result;\n  }","id":15764,"modified_method":"@Override\n  public int hashCode() {\n    int result = myProject.hashCode();\n    result = 31 * result + (myFile != null ? myFile.hashCode() : 0);\n    result = 31 * result + myPsiElements.hashCode();\n    result = 31 * result + myRangeMarkers.hashCode();\n    return result;\n  }","commit_id":"357748f5be93b3d624c856453d3b47c50fd90f60","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"void setToEditor(Editor editor) {\n    LOG.assertTrue(ApplicationManager.getApplication().isReadAccessAllowed());\n    final PsiManager psiManager = PsiManager.getInstance(myProject);\n    if (psiManager.isDisposed()) return;\n\n    if (!myFile.isValid()) return;\n    final PsiFile psiFile = psiManager.findFile(myFile);\n    if (psiFile == null) return;\n\n    Map<PsiElement, FoldingDescriptor> ranges = null;\n    for(int i = 0; i < myPsiElementsOrRangeMarkers.size(); i++){\n      Object o = myPsiElementsOrRangeMarkers.get(i);\n      if (o instanceof PsiElement) {\n        PsiElement element = (PsiElement)o;\n        if (!element.isValid()) continue;\n\n        if (ranges == null) ranges = buildRanges(editor, psiFile);\n        FoldingDescriptor descriptor = ranges.get(element);\n        if (descriptor == null) continue;\n\n        TextRange range = descriptor.getRange();\n        FoldRegion region = FoldingUtil.findFoldRegion(editor, range.getStartOffset(), range.getEndOffset());\n        if (region != null) {\n          boolean state = myExpandedStates.get(i).booleanValue();\n          region.setExpanded(state);\n        }\n      }\n      else if (o instanceof RangeMarker) {\n        RangeMarker marker = (RangeMarker)o;\n        if (!marker.isValid()) continue;\n        FoldRegion region = FoldingUtil.findFoldRegion(editor, marker.getStartOffset(), marker.getEndOffset());\n        if (region == null) {\n          String placeHolderText = myPlaceholderTexts.get(marker);\n          region = editor.getFoldingModel().addFoldRegion(marker.getStartOffset(), marker.getEndOffset(), placeHolderText);\n          if (region == null) return;\n        }\n\n        boolean state = myExpandedStates.get(i).booleanValue();\n        region.setExpanded(state);\n      }\n      else{\n        LOG.error(\"o = \" + o);\n      }\n    }\n  }","id":15765,"modified_method":"void setToEditor(@NotNull Editor editor) {\n    LOG.assertTrue(ApplicationManager.getApplication().isReadAccessAllowed());\n    final PsiManager psiManager = PsiManager.getInstance(myProject);\n    if (psiManager.isDisposed()) return;\n\n    if (!myFile.isValid()) return;\n    final PsiFile psiFile = psiManager.findFile(myFile);\n    if (psiFile == null) return;\n\n    Map<PsiElement, FoldingDescriptor> ranges = null;\n    for (SmartPsiElementPointer<PsiElement> ptr: myPsiElements) {\n      PsiElement element = ptr.getElement();\n      if (element == null || !element.isValid()) {\n        continue;\n      }\n\n      if (ranges == null) {\n        ranges = buildRanges(editor, psiFile);\n      }\n      FoldingDescriptor descriptor = ranges.get(element);\n      if (descriptor == null) {\n        continue;\n      }\n\n      TextRange range = descriptor.getRange();\n      FoldRegion region = FoldingUtil.findFoldRegion(editor, range.getStartOffset(), range.getEndOffset());\n      if (region != null) {\n        FoldingInfo fi = element.getUserData(FOLDING_INFO_KEY);\n        boolean state = fi != null && fi.expanded;\n        region.setExpanded(state);\n      }\n    }\n    for (RangeMarker marker : myRangeMarkers) {\n      if (!marker.isValid()) {\n        continue;\n      }\n      FoldRegion region = FoldingUtil.findFoldRegion(editor, marker.getStartOffset(), marker.getEndOffset());\n      if (region == null) {\n        FoldingInfo info = marker.getUserData(FOLDING_INFO_KEY);\n        region = editor.getFoldingModel().addFoldRegion(marker.getStartOffset(), marker.getEndOffset(), info.placeHolder);\n        if (region == null) {\n          return;\n        }\n      }\n\n      FoldingInfo fi = region.getUserData(FOLDING_INFO_KEY);\n      boolean state = fi != null && fi.expanded;\n      region.setExpanded(state);\n    }\n  }","commit_id":"357748f5be93b3d624c856453d3b47c50fd90f60","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public DocumentFoldingInfo(Project project, Document document) {\n    myProject = project;\n    myFile = FileDocumentManager.getInstance().getFile(document);\n  }","id":15766,"modified_method":"DocumentFoldingInfo(@NotNull Project project, @NotNull Document document) {\n    myProject = project;\n    myFile = FileDocumentManager.getInstance().getFile(document);\n  }","commit_id":"357748f5be93b3d624c856453d3b47c50fd90f60","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void clear() {\n    myPsiElementsOrRangeMarkers.clear();\n    myExpandedStates.clear();\n    myPlaceholderTexts.clear();\n  }","id":15767,"modified_method":"void clear() {\n    myPsiElements.clear();\n    for (RangeMarker marker : myRangeMarkers) {\n      if (!(marker instanceof FoldRegion)) marker.dispose();\n    }\n    myRangeMarkers.clear();\n  }","commit_id":"357748f5be93b3d624c856453d3b47c50fd90f60","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public boolean equals(Object o) {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n\n    DocumentFoldingInfo info = (DocumentFoldingInfo)o;\n\n    if (myExpandedStates != null ? !myExpandedStates.equals(info.myExpandedStates) : info.myExpandedStates != null) {\n      return false;\n    }\n    if (myFile != null ? !myFile.equals(info.myFile) : info.myFile != null) {\n      return false;\n    }\n    if (myPlaceholderTexts != null ? !myPlaceholderTexts.equals(info.myPlaceholderTexts) : info.myPlaceholderTexts != null) {\n      return false;\n    }\n    if (myProject != null ? !myProject.equals(info.myProject) : info.myProject != null) {\n      return false;\n    }\n    if (myPsiElementsOrRangeMarkers != null\n        ? !myPsiElementsOrRangeMarkers.equals(info.myPsiElementsOrRangeMarkers)\n        : info.myPsiElementsOrRangeMarkers != null)\n    {\n      return false;\n    }\n\n    return true;\n  }","id":15768,"modified_method":"@Override\n  public boolean equals(Object o) {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n\n    DocumentFoldingInfo info = (DocumentFoldingInfo)o;\n\n    if (myFile != null ? !myFile.equals(info.myFile) : info.myFile != null) {\n      return false;\n    }\n    if (!myProject.equals(info.myProject) || !myPsiElements.equals(info.myPsiElements)) {\n      return false;\n    }\n\n    if (myRangeMarkers.size() != info.myRangeMarkers.size()) return false;\n    for (int i = 0; i < myRangeMarkers.size(); i++) {\n      RangeMarker marker = myRangeMarkers.get(i);\n      RangeMarker other = info.myRangeMarkers.get(i);\n      if (marker == other || !marker.isValid() || !other.isValid()) {\n        continue;\n      }\n      if (!TextRange.areSegmentsEqual(marker, other)) return false;\n\n      FoldingInfo fi = marker.getUserData(FOLDING_INFO_KEY);\n      FoldingInfo ofi = other.getUserData(FOLDING_INFO_KEY);\n      if (!Comparing.equal(fi, ofi)) return false;\n    }\n    return true;\n  }","commit_id":"357748f5be93b3d624c856453d3b47c50fd90f60","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void readExternal(Element element) {\n    myPsiElementsOrRangeMarkers.clear();\n    myExpandedStates.clear();\n\n    if (!myFile.isValid()) return;\n\n    final Document document = FileDocumentManager.getInstance().getDocument(myFile);\n    if (document == null) return;\n\n    PsiFile psiFile = PsiDocumentManager.getInstance(myProject).getPsiFile(document);\n    if (psiFile == null || !psiFile.getViewProvider().isPhysical()) return;\n\n    String date = null;\n    for (final Object o : element.getChildren()) {\n      Element e = (Element)o;\n      if (ELEMENT_TAG.equals(e.getName())) {\n        String signature = e.getAttributeValue(SIGNATURE_ATT);\n        if (signature == null) {\n          continue;\n        }\n        PsiElement restoredElement = FoldingPolicy.restoreBySignature(psiFile, signature);\n        if (restoredElement != null) {\n          myPsiElementsOrRangeMarkers.add(restoredElement);\n          myExpandedStates.add(Boolean.valueOf(e.getAttributeValue(EXPANDED_ATT)));\n        }\n      }\n      else if (MARKER_TAG.equals(e.getName())) {\n        if (date == null) {\n          date = getTimeStamp();\n        }\n        if (date.isEmpty()) continue;\n\n        if (!date.equals(e.getAttributeValue(DATE_ATT)) || FileDocumentManager.getInstance().isDocumentUnsaved(document)) continue;\n        StringTokenizer tokenizer = new StringTokenizer(e.getAttributeValue(SIGNATURE_ATT), \":\");\n        try {\n          int start = Integer.valueOf(tokenizer.nextToken()).intValue();\n          int end = Integer.valueOf(tokenizer.nextToken()).intValue();\n          if (start < 0 || end >= document.getTextLength() || start > end) continue;\n          RangeMarker marker = document.createRangeMarker(start, end);\n          myPsiElementsOrRangeMarkers.add(marker);\n          myExpandedStates.add(Boolean.valueOf(e.getAttributeValue(EXPANDED_ATT)));\n          String placeHolderText = e.getAttributeValue(PLACEHOLDER_ATT);\n          if (placeHolderText == null) placeHolderText = DEFAULT_PLACEHOLDER;\n          myPlaceholderTexts.put(marker, placeHolderText);\n        }\n        catch (NoSuchElementException exc) {\n          LOG.error(exc);\n        }\n      }\n      else {\n        throw new IllegalStateException(\"unknown tag: \" + e.getName());\n      }\n    }\n  }","id":15769,"modified_method":"@Override\n  public void readExternal(Element element) {\n    clear();\n\n    if (!myFile.isValid()) return;\n\n    final Document document = FileDocumentManager.getInstance().getDocument(myFile);\n    if (document == null) return;\n\n    PsiFile psiFile = PsiDocumentManager.getInstance(myProject).getPsiFile(document);\n    if (psiFile == null || !psiFile.getViewProvider().isPhysical()) return;\n\n    String date = null;\n    for (final Object o : element.getChildren()) {\n      Element e = (Element)o;\n      Boolean expanded = Boolean.valueOf(e.getAttributeValue(EXPANDED_ATT));\n      if (ELEMENT_TAG.equals(e.getName())) {\n        String signature = e.getAttributeValue(SIGNATURE_ATT);\n        if (signature == null) {\n          continue;\n        }\n        PsiElement restoredElement = FoldingPolicy.restoreBySignature(psiFile, signature);\n        if (restoredElement != null) {\n          myPsiElements.add(SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(restoredElement));\n          FoldingInfo fi = new FoldingInfo(DEFAULT_PLACEHOLDER, expanded);\n          restoredElement.putUserData(FOLDING_INFO_KEY, fi);\n        }\n      }\n      else if (MARKER_TAG.equals(e.getName())) {\n        if (date == null) {\n          date = getTimeStamp();\n        }\n        if (date.isEmpty()) continue;\n\n        if (!date.equals(e.getAttributeValue(DATE_ATT)) || FileDocumentManager.getInstance().isDocumentUnsaved(document)) continue;\n        StringTokenizer tokenizer = new StringTokenizer(e.getAttributeValue(SIGNATURE_ATT), \":\");\n        try {\n          int start = Integer.valueOf(tokenizer.nextToken()).intValue();\n          int end = Integer.valueOf(tokenizer.nextToken()).intValue();\n          if (start < 0 || end >= document.getTextLength() || start > end) continue;\n          RangeMarker marker = document.createRangeMarker(start, end);\n          myRangeMarkers.add(marker);\n          String placeHolderText = e.getAttributeValue(PLACEHOLDER_ATT);\n          if (placeHolderText == null) placeHolderText = DEFAULT_PLACEHOLDER;\n          FoldingInfo fi = new FoldingInfo(placeHolderText, expanded);\n          marker.putUserData(FOLDING_INFO_KEY, fi);\n        }\n        catch (NoSuchElementException exc) {\n          LOG.error(exc);\n        }\n      }\n      else {\n        throw new IllegalStateException(\"unknown tag: \" + e.getName());\n      }\n    }\n  }","commit_id":"357748f5be93b3d624c856453d3b47c50fd90f60","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void findNextDay(\r\n\t\t\tCalendar calendar, BitSet daysOfMonth, int dayOfMonth, BitSet daysOfWeek, int dayOfWeek, int max) {\r\n\r\n\t\tint count = 0;\r\n\t\t// the DAY_OF_WEEK values in java.util.Calendar start with 1 (Sunday),\r\n\t\t// but in the cron pattern, they start with 0, so we subtract 1 here\r\n\t\twhile ((!daysOfMonth.get(dayOfMonth) || !daysOfWeek.get(dayOfWeek-1)) && count++ < max) {\r\n\t\t\tcalendar.add(Calendar.DAY_OF_MONTH, 1);\r\n\t\t\tdayOfMonth = calendar.get(Calendar.DAY_OF_MONTH);\r\n\t\t\tdayOfWeek = calendar.get(Calendar.DAY_OF_WEEK);\r\n\t\t\treset(calendar, Calendar.HOUR_OF_DAY, Calendar.MINUTE, Calendar.SECOND);\r\n\t\t}\r\n\t\tif (count > max) {\r\n\t\t\tthrow new IllegalStateException(\"Overflow in day for expression=\" + this.expression);\r\n\t\t}\r\n\t}","id":15770,"modified_method":"private int findNextDay(Calendar calendar, BitSet daysOfMonth, int dayOfMonth, BitSet daysOfWeek,\r\n\t\t\tint dayOfWeek, int max, List<Integer> resets) {\r\n\r\n\t\tint count = 0;\r\n\t\t// the DAY_OF_WEEK values in java.util.Calendar start with 1 (Sunday),\r\n\t\t// but in the cron pattern, they start with 0, so we subtract 1 here\r\n\t\twhile ((!daysOfMonth.get(dayOfMonth) || !daysOfWeek.get(dayOfWeek - 1)) && count++ < max) {\r\n\t\t\tcalendar.add(Calendar.DAY_OF_MONTH, 1);\r\n\t\t\tdayOfMonth = calendar.get(Calendar.DAY_OF_MONTH);\r\n\t\t\tdayOfWeek = calendar.get(Calendar.DAY_OF_WEEK);\r\n\t\t\treset(calendar, resets);\r\n\t\t}\r\n\t\tif (count > max) {\r\n\t\t\tthrow new IllegalStateException(\"Overflow in day for expression=\" + this.expression);\r\n\t\t}\r\n\t\treturn dayOfMonth;\r\n\t}","commit_id":"bc207042d08a660cc595e01cecdb179376dfb2c5","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\r\n\t * Search the bits provided for the next set bit after the value provided,\r\n\t * and reset the calendar.\r\n\t * @param bits a {@link BitSet} representing the allowed values of the field\r\n\t * @param value the current value of the field\r\n\t * @param max the largest value that the field can have\r\n\t * @param calendar the calendar to increment as we move through the bits\r\n\t * @param field the field to increment in the calendar (@see\r\n\t * {@link Calendar} for the static constants defining valid fields)\r\n\t * @param lowerOrders the Calendar field ids that should be reset (i.e. the\r\n\t * ones of lower significance than the field of interest)\r\n\t * @return the value of the calendar field that is next in the sequence\r\n\t */\r\n\tprivate void findNext(BitSet bits, int value, int max, Calendar calendar, int field, int... lowerOrders) {\r\n\t\tint nextValue = bits.nextSetBit(value);\r\n\t\t//roll over if needed\r\n\t\tif (nextValue == -1) {\r\n\t\t\tcalendar.add(field, max - value);\r\n\t\t\tnextValue = bits.nextSetBit(0);\r\n\t\t}\r\n\t\tif (nextValue != value) {\r\n\t\t\tcalendar.set(field, nextValue);\r\n\t\t\treset(calendar, lowerOrders);\r\n\t\t}\r\n\t}","id":15771,"modified_method":"/**\r\n\t * Search the bits provided for the next set bit after the value provided,\r\n\t * and reset the calendar.\r\n\t * @param bits a {@link BitSet} representing the allowed values of the field\r\n\t * @param value the current value of the field\r\n\t * @param max the largest value that the field can have\r\n\t * @param calendar the calendar to increment as we move through the bits\r\n\t * @param field the field to increment in the calendar (@see\r\n\t * {@link Calendar} for the static constants defining valid fields)\r\n\t * @param lowerOrders the Calendar field ids that should be reset (i.e. the\r\n\t * ones of lower significance than the field of interest)\r\n\t * @return the value of the calendar field that is next in the sequence\r\n\t */\r\n\tprivate int findNext(BitSet bits, int value, int max, Calendar calendar, int field, List<Integer> lowerOrders) {\r\n\t\tint nextValue = bits.nextSetBit(value);\r\n\t\t// roll over if needed\r\n\t\tif (nextValue == -1) {\r\n\t\t\tcalendar.add(field, max - value);\r\n\t\t\tnextValue = bits.nextSetBit(0);\r\n\t\t}\r\n\t\tif (nextValue != value) {\r\n\t\t\tcalendar.set(field, nextValue);\r\n\t\t\treset(calendar, lowerOrders);\r\n\t\t}\r\n\t\treturn nextValue;\r\n\t}","commit_id":"bc207042d08a660cc595e01cecdb179376dfb2c5","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\r\n\t * Reset the calendar setting all the fields provided to zero.\r\n\t */\r\n\tprivate void reset(Calendar calendar, int... fields) {\r\n\t\tfor (int field : fields) {\r\n\t\t\tcalendar.set(field, 0);\r\n\t\t}\r\n\t}","id":15772,"modified_method":"/**\r\n\t * Reset the calendar setting all the fields provided to zero.\r\n\t */\r\n\tprivate void reset(Calendar calendar, List<Integer> fields) {\r\n\t\tfor (int field : fields) {\r\n\t\t\tcalendar.set(field, 0);\r\n\t\t}\r\n\t}","commit_id":"bc207042d08a660cc595e01cecdb179376dfb2c5","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\r\n\t * Get the next {@link Date} in the sequence matching the Cron pattern and\r\n\t * after the value provided. The return value will have a whole number of\r\n\t * seconds, and will be after the input value.\r\n\t * @param date a seed value\r\n\t * @return the next value matching the pattern\r\n\t */\r\n\tpublic Date next(Date date) {\r\n\t\tCalendar calendar = new GregorianCalendar();\r\n\t\tcalendar.setTime(date);\r\n\r\n\t\t// Truncate to the next whole second\r\n\t\tcalendar.add(Calendar.SECOND, 1);\r\n\t\tcalendar.set(Calendar.MILLISECOND, 0);\r\n\r\n\t\tint second = calendar.get(Calendar.SECOND);\r\n\t\tfindNext(this.seconds, second, 60, calendar, Calendar.SECOND);\r\n\r\n\t\tint minute = calendar.get(Calendar.MINUTE);\r\n\t\tfindNext(this.minutes, minute, 60, calendar, Calendar.MINUTE, Calendar.SECOND);\r\n\r\n\t\tint hour = calendar.get(Calendar.HOUR_OF_DAY);\r\n\t\tfindNext(this.hours, hour, 24, calendar, Calendar.HOUR_OF_DAY, Calendar.MINUTE, Calendar.SECOND);\r\n\r\n\t\tint dayOfWeek = calendar.get(Calendar.DAY_OF_WEEK);\r\n\t\tint dayOfMonth = calendar.get(Calendar.DAY_OF_MONTH);\r\n\t\tfindNextDay(calendar, this.daysOfMonth, dayOfMonth, daysOfWeek, dayOfWeek, 366);\r\n\r\n\t\tint month = calendar.get(Calendar.MONTH);\r\n\t\tfindNext(this.months, month, 12, calendar, Calendar.MONTH, Calendar.DAY_OF_MONTH, Calendar.HOUR_OF_DAY,\r\n\t\t\t\tCalendar.MINUTE, Calendar.SECOND);\r\n\r\n\t\treturn calendar.getTime();\r\n\t}","id":15773,"modified_method":"/**\r\n\t * Get the next {@link Date} in the sequence matching the Cron pattern and\r\n\t * after the value provided. The return value will have a whole number of\r\n\t * seconds, and will be after the input value.\r\n\t * @param date a seed value\r\n\t * @return the next value matching the pattern\r\n\t */\r\n\tpublic Date next(Date date) {\r\n\t\tCalendar calendar = new GregorianCalendar();\r\n\t\tcalendar.setTime(date);\r\n\r\n\t\t// Truncate to the next whole second\r\n\t\tcalendar.add(Calendar.SECOND, 1);\r\n\t\tcalendar.set(Calendar.MILLISECOND, 0);\r\n\r\n\t\tList<Integer> resets = new ArrayList<Integer>();\r\n\r\n\t\tint second = calendar.get(Calendar.SECOND);\r\n\t\tint updateSecond = findNext(this.seconds, second, 60, calendar, Calendar.SECOND, Collections.<Integer> emptyList());\r\n\t\tif (second == updateSecond) {\r\n\t\t\tresets.add(Calendar.SECOND);\r\n\t\t}\r\n\r\n\t\tint minute = calendar.get(Calendar.MINUTE);\r\n\t\tint updateMinute = findNext(this.minutes, minute, 60, calendar, Calendar.MINUTE, resets);\r\n\t\tif (minute == updateMinute) {\r\n\t\t\tresets.add(Calendar.MINUTE);\r\n\t\t}\r\n\r\n\t\tint hour = calendar.get(Calendar.HOUR_OF_DAY);\r\n\t\tint updateHour = findNext(this.hours, hour, 24, calendar, Calendar.HOUR_OF_DAY, resets);\r\n\t\tif (hour == updateHour) {\r\n\t\t\tresets.add(Calendar.HOUR_OF_DAY);\r\n\t\t}\r\n\r\n\t\tint dayOfWeek = calendar.get(Calendar.DAY_OF_WEEK);\r\n\t\tint dayOfMonth = calendar.get(Calendar.DAY_OF_MONTH);\r\n\t\tint updateDayOfMonth = findNextDay(calendar, this.daysOfMonth, dayOfMonth, daysOfWeek, dayOfWeek, 366, resets);\r\n\t\tif (dayOfMonth == updateDayOfMonth) {\r\n\t\t\tresets.add(Calendar.DAY_OF_MONTH);\r\n\t\t}\r\n\r\n\t\tint month = calendar.get(Calendar.MONTH);\r\n\t\tmonth = findNext(this.months, month, 12, calendar, Calendar.MONTH, resets);\r\n\r\n\t\treturn calendar.getTime();\r\n\t}","commit_id":"bc207042d08a660cc595e01cecdb179376dfb2c5","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Test\n  public void testAction() {\n    new WriteCommandAction<Void>(null) {\n      @Override\n      protected void run(@NotNull Result<Void> result) throws Throwable {\n        configureByFile(getBeforeFileName());\n        EditorScrollingFixture.setVisibleSize(myEditor, 120, 20); // some actions require visible area to be defined, like EditorPageUp\n        executeAction(getActionName());\n        checkResultByFile(getAfterFileName());\n      }\n    }.execute();\n  }","id":15774,"modified_method":"@Test\n  public void testAction() {\n    new WriteCommandAction<Void>(null) {\n      @Override\n      protected void run(@NotNull Result<Void> result) throws Throwable {\n        configureByFile(getBeforeFileName());\n        EditorTestUtil.setEditorVisibleSize(myEditor, 120, 20); // some actions require visible area to be defined, like EditorPageUp\n        executeAction(getActionName());\n        checkResultByFile(getAfterFileName());\n      }\n    }.execute();\n  }","commit_id":"cddde85a681ba2ecdc8a142481f983cf50221ddf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testAltDragStartingFromWithinLine() throws Exception {\n    init(\"<caret>line\\n\" +\n         \"long line\\n\" +\n         \"very long line\\n\" +\n         \"long line\\n\" +\n         \"line\",\n         TestFileType.TEXT);\n    EditorScrollingFixture.setVisibleSize(myEditor, 1000, 1000);\n\n    mouse().alt().pressAt(1, 6);\n    checkResultByText(\"line\\n\" +\n                      \"long l<caret>ine\\n\" +\n                      \"very long line\\n\" +\n                      \"long line\\n\" +\n                      \"line\");\n\n    mouse().alt().dragTo(4, 6);\n    checkResultByText(\"line\\n\" +\n                      \"long l<caret>ine\\n\" +\n                      \"very l<caret>ong line\\n\" +\n                      \"long l<caret>ine\\n\" +\n                      \"line<caret>\");\n\n    mouse().alt().dragTo(4, 8);\n    checkResultByText(\"line\\n\" +\n                      \"long l<selection>in<caret><\/selection>e\\n\" +\n                      \"very l<selection>on<caret><\/selection>g line\\n\" +\n                      \"long l<selection>in<caret><\/selection>e\\n\" +\n                      \"line\");\n\n    mouse().alt().dragTo(4, 10).release();\n    checkResultByText(\"line\\n\" +\n                      \"long l<selection>ine<caret><\/selection>\\n\" +\n                      \"very l<selection>ong <caret><\/selection>line\\n\" +\n                      \"long l<selection>ine<caret><\/selection>\\n\" +\n                      \"line\");\n  }","id":15775,"modified_method":"public void testAltDragStartingFromWithinLine() throws Exception {\n    init(\"<caret>line\\n\" +\n         \"long line\\n\" +\n         \"very long line\\n\" +\n         \"long line\\n\" +\n         \"line\",\n         TestFileType.TEXT);\n    EditorTestUtil.setEditorVisibleSize(myEditor, 1000, 1000);\n\n    mouse().alt().pressAt(1, 6);\n    checkResultByText(\"line\\n\" +\n                      \"long l<caret>ine\\n\" +\n                      \"very long line\\n\" +\n                      \"long line\\n\" +\n                      \"line\");\n\n    mouse().alt().dragTo(4, 6);\n    checkResultByText(\"line\\n\" +\n                      \"long l<caret>ine\\n\" +\n                      \"very l<caret>ong line\\n\" +\n                      \"long l<caret>ine\\n\" +\n                      \"line<caret>\");\n\n    mouse().alt().dragTo(4, 8);\n    checkResultByText(\"line\\n\" +\n                      \"long l<selection>in<caret><\/selection>e\\n\" +\n                      \"very l<selection>on<caret><\/selection>g line\\n\" +\n                      \"long l<selection>in<caret><\/selection>e\\n\" +\n                      \"line\");\n\n    mouse().alt().dragTo(4, 10).release();\n    checkResultByText(\"line\\n\" +\n                      \"long l<selection>ine<caret><\/selection>\\n\" +\n                      \"very l<selection>ong <caret><\/selection>line\\n\" +\n                      \"long l<selection>ine<caret><\/selection>\\n\" +\n                      \"line\");\n  }","commit_id":"cddde85a681ba2ecdc8a142481f983cf50221ddf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testMiddleButtonDragStartingFromVirtualSpace() throws Exception {\n    init(\"<caret>line\\n\" +\n         \"long line\\n\" +\n         \"very long line\\n\" +\n         \"long line\\n\" +\n         \"line\",\n         TestFileType.TEXT);\n    EditorScrollingFixture.setVisibleSize(myEditor, 1000, 1000);\n\n    mouse().middle().pressAt(1, 17);\n    checkResultByText(\"line\\n\" +\n                      \"long line<caret>\\n\" +\n                      \"very long line\\n\" +\n                      \"long line\\n\" +\n                      \"line\");\n\n    mouse().middle().dragTo(2, 16);\n    checkResultByText(\"line\\n\" +\n                      \"long line<caret>\\n\" +\n                      \"very long line<caret>\\n\" +\n                      \"long line\\n\" +\n                      \"line\");\n\n    mouse().middle().dragTo(3, 12);\n    checkResultByText(\"line\\n\" +\n                      \"long line\\n\" +\n                      \"very long li<selection><caret>ne<\/selection>\\n\" +\n                      \"long line\\n\" +\n                      \"line\");\n\n    mouse().middle().dragTo(3, 6).release();\n    checkResultByText(\"line\\n\" +\n                      \"long l<selection><caret>ine<\/selection>\\n\" +\n                      \"very l<selection><caret>ong line<\/selection>\\n\" +\n                      \"long l<selection><caret>ine<\/selection>\\n\" +\n                      \"line\");\n  }","id":15776,"modified_method":"public void testMiddleButtonDragStartingFromVirtualSpace() throws Exception {\n    init(\"<caret>line\\n\" +\n         \"long line\\n\" +\n         \"very long line\\n\" +\n         \"long line\\n\" +\n         \"line\",\n         TestFileType.TEXT);\n    EditorTestUtil.setEditorVisibleSize(myEditor, 1000, 1000);\n\n    mouse().middle().pressAt(1, 17);\n    checkResultByText(\"line\\n\" +\n                      \"long line<caret>\\n\" +\n                      \"very long line\\n\" +\n                      \"long line\\n\" +\n                      \"line\");\n\n    mouse().middle().dragTo(2, 16);\n    checkResultByText(\"line\\n\" +\n                      \"long line<caret>\\n\" +\n                      \"very long line<caret>\\n\" +\n                      \"long line\\n\" +\n                      \"line\");\n\n    mouse().middle().dragTo(3, 12);\n    checkResultByText(\"line\\n\" +\n                      \"long line\\n\" +\n                      \"very long li<selection><caret>ne<\/selection>\\n\" +\n                      \"long line\\n\" +\n                      \"line\");\n\n    mouse().middle().dragTo(3, 6).release();\n    checkResultByText(\"line\\n\" +\n                      \"long l<selection><caret>ine<\/selection>\\n\" +\n                      \"very l<selection><caret>ong line<\/selection>\\n\" +\n                      \"long l<selection><caret>ine<\/selection>\\n\" +\n                      \"line\");\n  }","commit_id":"cddde85a681ba2ecdc8a142481f983cf50221ddf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void execute(Editor editor, @NotNull Caret caret, DataContext dataContext) {\n      if (editor.isColumnMode() && editor.getCaretModel().supportsMultipleCarets()) {\n        caret.clone(false);\n      }\n      else {\n        editor.getCaretModel().moveCaretRelatively(0, 1, true, editor.isColumnMode(), true);\n      }\n    }","id":15777,"modified_method":"@Override\n    public void execute(Editor editor, @Nullable Caret caret, DataContext dataContext) {\n      if (!editor.getCaretModel().supportsMultipleCarets()) {\n        editor.getCaretModel().moveCaretRelatively(0, 1, true, editor.isColumnMode(), true);\n        return;\n      }\n      if (editor.isColumnMode()) {\n        EditorActionUtil.cloneOrRemoveCaret(editor, caret == null ? editor.getCaretModel().getPrimaryCaret() : caret, false);\n      }\n      else {\n        CaretAction caretAction = new CaretAction() {\n          @Override\n          public void perform(Caret caret) {\n            caret.moveCaretRelatively(0, 1, true, true);\n          }\n        };\n        if (caret == null) {\n          editor.getCaretModel().runForEachCaret(caretAction);\n        }\n        else {\n          caretAction.perform(caret);\n        }\n      }\n    }","commit_id":"cddde85a681ba2ecdc8a142481f983cf50221ddf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void execute(Editor editor, @NotNull Caret caret, DataContext dataContext) {\n      if (editor.isColumnMode() && editor.getCaretModel().supportsMultipleCarets()) {\n        caret.clone(true);\n      }\n      else {\n        editor.getCaretModel().moveCaretRelatively(0, -1, true, editor.isColumnMode(), true);\n      }\n    }","id":15778,"modified_method":"@Override\n    public void execute(Editor editor, @Nullable Caret caret, DataContext dataContext) {\n      if (!editor.getCaretModel().supportsMultipleCarets()) {\n        editor.getCaretModel().moveCaretRelatively(0, -1, true, editor.isColumnMode(), true);\n        return;\n      }\n      if (editor.isColumnMode()) {\n        EditorActionUtil.cloneOrRemoveCaret(editor, caret == null ? editor.getCaretModel().getPrimaryCaret() : caret, true);\n      }\n      else {\n        CaretAction caretAction = new CaretAction() {\n          @Override\n          public void perform(Caret caret) {\n            caret.moveCaretRelatively(0, -1, true, true);\n          }\n        };\n        if (caret == null) {\n          editor.getCaretModel().runForEachCaret(caretAction);\n        }\n        else {\n          caretAction.perform(caret);\n        }\n      }\n    }","commit_id":"cddde85a681ba2ecdc8a142481f983cf50221ddf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void execute(Editor editor, @NotNull Caret caret, DataContext dataContext) {\n      if (editor.isColumnMode() && editor.getCaretModel().supportsMultipleCarets()) {\n        int lines = editor.getScrollingModel().getVisibleArea().height / editor.getLineHeight();\n        Caret currentCaret = caret;\n        for (int i = 0; i < lines; i++) {\n          currentCaret = currentCaret.clone(false);\n          if (currentCaret == null) {\n            break;\n          }\n        }\n      }\n      else {\n        EditorActionUtil.moveCaretPageDown(editor, true);\n      }\n    }","id":15779,"modified_method":"@Override\n    public void execute(final Editor editor, @Nullable Caret caret, DataContext dataContext) {\n      if (!editor.getCaretModel().supportsMultipleCarets()) {\n        EditorActionUtil.moveCaretPageDown(editor, true);\n        return;\n      }\n      if (editor.isColumnMode()) {\n        int lines = editor.getScrollingModel().getVisibleArea().height / editor.getLineHeight();\n        Caret currentCaret = caret == null ? editor.getCaretModel().getPrimaryCaret() : caret;\n        for (int i = 0; i < lines; i++) {\n          if (!EditorActionUtil.cloneOrRemoveCaret(editor, currentCaret, false)) {\n            break;\n          }\n          currentCaret = editor.getCaretModel().getPrimaryCaret();\n        }\n      }\n      else {\n        if (caret == null) {\n          editor.getCaretModel().runForEachCaret(new CaretAction() {\n            @Override\n            public void perform(Caret caret) {\n              EditorActionUtil.moveCaretPageDown(editor, true);\n            }\n          });\n        }\n        else {\n          // assuming caret is equal to CaretModel.getCurrentCaret()\n          EditorActionUtil.moveCaretPageDown(editor, true);\n        }\n      }\n    }","commit_id":"cddde85a681ba2ecdc8a142481f983cf50221ddf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void execute(Editor editor, @NotNull Caret caret, DataContext dataContext) {\n      if (editor.isColumnMode() && editor.getCaretModel().supportsMultipleCarets()) {\n        int lines = editor.getScrollingModel().getVisibleArea().height / editor.getLineHeight();\n        Caret currentCaret = caret;\n        for (int i = 0; i < lines; i++) {\n          currentCaret = currentCaret.clone(true);\n          if (currentCaret == null) {\n            break;\n          }\n        }\n      }\n      else {\n        EditorActionUtil.moveCaretPageUp(editor, true);\n      }\n    }","id":15780,"modified_method":"@Override\n    public void execute(final Editor editor, @Nullable Caret caret, DataContext dataContext) {\n      if (!editor.getCaretModel().supportsMultipleCarets()) {\n        EditorActionUtil.moveCaretPageUp(editor, true);\n        return;\n      }\n      if (editor.isColumnMode()) {\n        int lines = editor.getScrollingModel().getVisibleArea().height / editor.getLineHeight();\n        Caret currentCaret = caret == null ? editor.getCaretModel().getPrimaryCaret() : caret;\n        for (int i = 0; i < lines; i++) {\n          if (!EditorActionUtil.cloneOrRemoveCaret(editor, currentCaret, true)) {\n            break;\n          }\n          currentCaret = editor.getCaretModel().getPrimaryCaret();\n        }\n      }\n      else {\n        if (caret == null) {\n          editor.getCaretModel().runForEachCaret(new CaretAction() {\n            @Override\n            public void perform(Caret caret) {\n              EditorActionUtil.moveCaretPageUp(editor, true);\n            }\n          });\n        }\n        else {\n          // assuming caret is equal to CaretModel.getCurrentCaret()\n          EditorActionUtil.moveCaretPageUp(editor, true);\n        }\n      }\n    }","commit_id":"cddde85a681ba2ecdc8a142481f983cf50221ddf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n     * Registers all menu items.\n     */\n    public static void registerMenuItems(SIPCommMenu parentMenu)\n    {\n        if(protocolProviderListener == null)\n        {\n            protocolProviderListener = new ProtocolProviderListener(parentMenu);\n            GuiActivator.bundleContext\n                .addServiceListener(protocolProviderListener);\n        }\n\n        for (ProtocolProviderFactory providerFactory : GuiActivator\n                    .getProtocolProviderFactories().values())\n        {\n            ServiceReference serRef;\n            ProtocolProviderService protocolProvider;\n\n            for (AccountID accountID : providerFactory.getRegisteredAccounts())\n            {\n                serRef = providerFactory.getProviderForAccount(accountID);\n\n                protocolProvider =\n                    (ProtocolProviderService) GuiActivator.bundleContext\n                        .getService(serRef);\n\n                addAccountInternal(protocolProvider, parentMenu);\n            }\n        }\n\n        // if we are in disabled menu mode and we have only one item\n        // change its name (like global autoanswer)\n        if( ConfigurationManager.isAutoAnswerDisableSubmenu()\n            && getAutoAnswerItemCount(parentMenu) == 1)\n        {\n            AutoAnswerMenuItem item = getAutoAnswerItem(parentMenu, 0);\n            if(item != null)\n            {\n                item.setText(GuiActivator.getResources().getI18NString(\n                                \"service.gui.AUTO_ANSWER\"));\n                item.setIcon(new ImageIcon(\n                    ImageLoader.getImage(ImageLoader.CALL_16x16_ICON)));\n            }\n        }\n    }","id":15781,"modified_method":"/**\n     * Registers all menu items.\n     */\n    public static void registerMenuItems(SIPCommMenu parentMenu)\n    {\n        if(protocolProviderListener == null)\n        {\n            protocolProviderListener = new ProtocolProviderListener(parentMenu);\n            GuiActivator.bundleContext\n                .addServiceListener(protocolProviderListener);\n        }\n\n        for (ProtocolProviderFactory providerFactory : GuiActivator\n                    .getProtocolProviderFactories().values())\n        {\n            ServiceReference serRef;\n            ProtocolProviderService protocolProvider;\n\n            for (AccountID accountID : providerFactory.getRegisteredAccounts())\n            {\n                serRef = providerFactory.getProviderForAccount(accountID);\n\n                protocolProvider =\n                    (ProtocolProviderService) GuiActivator.bundleContext\n                        .getService(serRef);\n\n                addAccountInternal(protocolProvider, parentMenu);\n            }\n        }\n\n        // if we are in disabled menu mode and we have only one item\n        // change its name (like global auto answer)\n        if( ConfigurationManager.isAutoAnswerDisableSubmenu()\n            && getAutoAnswerItemCount(parentMenu) == 1)\n        {\n            updateItem(getAutoAnswerItem(parentMenu, 0), true);\n        }\n    }","commit_id":"ecd24a6d80df09d17d715e85d3ce64168a03e9a4","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n         * Create dialog.\n         * @param providerService provider.\n         */\n        AutoAnswerOptionsDialog(ProtocolProviderService providerService)\n        {\n            super(false);\n\n            this.providerService = providerService;\n\n            this.setTitle(GuiActivator.getResources()\n                .getI18NString(\"service.gui.AUTO_ANSWER\"));\n\n            initComponents();\n\n            loadValues();\n        }","id":15782,"modified_method":"/**\n         * Create dialog.\n         * @param providerService provider.\n         * @param parentMenu the parent menu.\n         */\n        AutoAnswerOptionsDialog(ProtocolProviderService providerService,\n                                SIPCommMenu parentMenu)\n        {\n            super(false);\n\n            this.parentMenu = parentMenu;\n            this.providerService = providerService;\n\n            this.setTitle(GuiActivator.getResources()\n                .getI18NString(\"service.gui.AUTO_ANSWER\"));\n\n            initComponents();\n\n            loadValues();\n        }","commit_id":"ecd24a6d80df09d17d715e85d3ce64168a03e9a4","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Adds a menu item for the account given by <tt>protocolProvider<\/tt>.\n     * @param protocolProvider the <tt>ProtocolProviderService<\/tt>, for which\n     * to add a menu\n     */\n    private static void addAccount(ProtocolProviderService protocolProvider,\n                                  SIPCommMenu parentMenu)\n    {\n        // the initial number of autoanswer menu items\n        int initialCount = getAutoAnswerItemCount(parentMenu);\n\n        addAccountInternal(protocolProvider, parentMenu);\n\n        // current count\n        int itemsCount = getAutoAnswerItemCount(parentMenu);\n\n        // if menu is disabled for autoanswer and we have added an item\n        if(ConfigurationManager.isAutoAnswerDisableSubmenu()\n            && itemsCount != initialCount)\n        {\n            // if initial count was 1, lets change provider name to the\n            // protocol one (the first one have like global name)\n            if(initialCount == 1)\n            {\n                for(int i = 0; i < parentMenu.getItemCount(); i++)\n                {\n                    JMenuItem item = parentMenu.getItem(i);\n                    if(item instanceof AutoAnswerMenuItem)\n                    {\n                        item.setText(\n                            AutoAnswerMenuItem.getItemDisplayName(\n                                ((AutoAnswerMenuItem)item).getProtocolProvider()));\n                        item.setIcon(new ImageIcon(\n                            ((AutoAnswerMenuItem)item).getProtocolProvider()\n                                .getProtocolIcon().getIcon(\n                                    ProtocolIcon.ICON_SIZE_16x16)));\n                    }\n                }\n            }\n            else if(initialCount == 0)\n            {\n                // this is the first item set its name like global one\n                AutoAnswerMenuItem item = getAutoAnswerItem(parentMenu, 0);\n                if(item != null)\n                {\n                    item.setText(GuiActivator.getResources().getI18NString(\n                                        \"service.gui.AUTO_ANSWER\"));\n                    item.setIcon(new ImageIcon(\n                        ImageLoader.getImage(ImageLoader.CALL_16x16_ICON)));\n                }\n            }\n        }\n    }","id":15783,"modified_method":"/**\n     * Adds a menu item for the account given by <tt>protocolProvider<\/tt>.\n     * @param protocolProvider the <tt>ProtocolProviderService<\/tt>, for which\n     * to add a menu\n     */\n    private static void addAccount(ProtocolProviderService protocolProvider,\n                                  SIPCommMenu parentMenu)\n    {\n        // the initial number of autoanswer menu items\n        int initialCount = getAutoAnswerItemCount(parentMenu);\n\n        addAccountInternal(protocolProvider, parentMenu);\n\n        // current count\n        int itemsCount = getAutoAnswerItemCount(parentMenu);\n\n        // if menu is disabled for autoanswer and we have added an item\n        if(ConfigurationManager.isAutoAnswerDisableSubmenu()\n            && itemsCount != initialCount)\n        {\n            // if initial count was 1, lets change provider name to the\n            // protocol one (the first one have like global name)\n            if(initialCount == 1)\n            {\n                for(int i = 0; i < parentMenu.getItemCount(); i++)\n                {\n                    JMenuItem item = parentMenu.getItem(i);\n                    if(item instanceof AutoAnswerMenuItem)\n                    {\n                        updateItem((AutoAnswerMenuItem)item, false);\n                    }\n                }\n            }\n            else if(initialCount == 0)\n            {\n                // this is the first item set its name like global one\n                updateItem(getAutoAnswerItem(parentMenu, 0), true);\n            }\n        }\n    }","commit_id":"ecd24a6d80df09d17d715e85d3ce64168a03e9a4","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n         * Creates the menu item.\n         * @param provider the provider.\n         * @param displayName the display name of the item.\n         * @param onlineImage the icon to display\n         */\n        private AutoAnswerMenuItem(ProtocolProviderService provider,\n                                   String displayName,\n                                   Image onlineImage)\n        {\n            super(displayName, new ImageIcon(onlineImage));\n            this.providerService = provider;\n\n            this.addActionListener(this);\n        }","id":15784,"modified_method":"/**\n         * Creates the menu item.\n         * @param provider the provider.\n         * @param displayName the display name of the item.\n         * @param onlineImage the icon to display\n         * @param parentMenu the parent menu.\n         */\n        private AutoAnswerMenuItem(ProtocolProviderService provider,\n                                   String displayName,\n                                   Image onlineImage,\n                                   SIPCommMenu parentMenu)\n        {\n            super(displayName, new ImageIcon(onlineImage));\n            this.providerService = provider;\n            this.parentMenu = parentMenu;\n\n            this.addActionListener(this);\n        }","commit_id":"ecd24a6d80df09d17d715e85d3ce64168a03e9a4","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n         * Saves settings.\n         * @param e the event on button.\n         */\n        public void actionPerformed(ActionEvent e)\n        {\n            if(e.getSource().equals(okButton))\n            {\n                OperationSetBasicAutoAnswer opset = providerService\n                    .getOperationSet(OperationSetBasicAutoAnswer.class);\n                OperationSetAdvancedAutoAnswer opSetAdvanced = providerService\n                    .getOperationSet(OperationSetAdvancedAutoAnswer.class);\n\n                if(noneRadio.isSelected())\n                {\n                    opset.clear();\n                    if(opSetAdvanced != null)\n                        opSetAdvanced.clear();\n                }\n                else if(alwaysAnswerRadio.isSelected())\n                {\n                    opset.setAutoAnswerUnconditional();\n                }\n                else if(alertInfoValue.isSelected())\n                {\n                    if(opSetAdvanced != null)\n                    {\n                        opSetAdvanced.setAutoAnswerCondition(\n                            AUTO_ALERT_INFO_NAME,\n                            AUTO_ALERT_INFO_VALUE);\n                    }\n                }\n                else if(customValueRadio.isSelected())\n                {\n                    if(opSetAdvanced != null)\n                    {\n                        opSetAdvanced.setAutoAnswerCondition(\n                            headerNameField.getText(),\n                            headerValueField.getText());\n                    }\n                }\n                else if(callFwd.isSelected())\n                {\n                    if(opSetAdvanced != null)\n                        opSetAdvanced.setCallForward(\n                            callFwdNumberField.getText());\n                }\n\n                opset.setAutoAnswerWithVideo(\n                        answerWithVideoCheckBox.isSelected());\n            }\n\n            dispose();\n        }","id":15785,"modified_method":"/**\n         * Saves settings.\n         * @param e the event on button.\n         */\n        public void actionPerformed(ActionEvent e)\n        {\n            if(e.getSource().equals(okButton))\n            {\n                OperationSetBasicAutoAnswer opset = providerService\n                    .getOperationSet(OperationSetBasicAutoAnswer.class);\n                OperationSetAdvancedAutoAnswer opSetAdvanced = providerService\n                    .getOperationSet(OperationSetAdvancedAutoAnswer.class);\n\n                if(noneRadio.isSelected())\n                {\n                    opset.clear();\n                    if(opSetAdvanced != null)\n                        opSetAdvanced.clear();\n                }\n                else if(alwaysAnswerRadio.isSelected())\n                {\n                    opset.setAutoAnswerUnconditional();\n                }\n                else if(alertInfoValue.isSelected())\n                {\n                    if(opSetAdvanced != null)\n                    {\n                        opSetAdvanced.setAutoAnswerCondition(\n                            AUTO_ALERT_INFO_NAME,\n                            AUTO_ALERT_INFO_VALUE);\n                    }\n                }\n                else if(customValueRadio.isSelected())\n                {\n                    if(opSetAdvanced != null)\n                    {\n                        opSetAdvanced.setAutoAnswerCondition(\n                            headerNameField.getText(),\n                            headerValueField.getText());\n                    }\n                }\n                else if(callFwd.isSelected())\n                {\n                    if(opSetAdvanced != null)\n                        opSetAdvanced.setCallForward(\n                            callFwdNumberField.getText());\n                }\n\n                opset.setAutoAnswerWithVideo(\n                        answerWithVideoCheckBox.isSelected());\n\n                // as settings changed lets update items\n                if( ConfigurationManager.isAutoAnswerDisableSubmenu()\n                    && getAutoAnswerItemCount(parentMenu) == 1)\n                {\n                    updateItem(getAutoAnswerItem(parentMenu, 0), true);\n                }\n                else\n                {\n                    for(int i = 0; i < parentMenu.getItemCount(); i++)\n                    {\n                        JMenuItem item = parentMenu.getItem(i);\n                        if(item instanceof AutoAnswerMenuItem)\n                        {\n                            updateItem((AutoAnswerMenuItem)item, false);\n                        }\n                    }\n                }\n            }\n\n            dispose();\n        }","commit_id":"ecd24a6d80df09d17d715e85d3ce64168a03e9a4","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Adds a menu item for the account given by <tt>protocolProvider<\/tt>.\n     * @param protocolProvider the <tt>ProtocolProviderService<\/tt>, for which\n     * to add a menu\n     */\n    private static void addAccountInternal(\n        ProtocolProviderService protocolProvider,\n        SIPCommMenu parentMenu)\n    {\n        OperationSetBasicAutoAnswer opSet = protocolProvider\n            .getOperationSet(OperationSetBasicAutoAnswer.class);\n\n        if(opSet == null)\n        {\n            return;\n        }\n\n        boolean isHidden\n            = protocolProvider\n                    .getAccountID()\n                        .getAccountProperty(\n                            ProtocolProviderFactory.IS_PROTOCOL_HIDDEN)\n                != null;\n\n        if (isHidden)\n            return;\n\n        AutoAnswerMenuItem providerMenu =\n            new AutoAnswerMenuItem(protocolProvider);\n\n        int lastAutoAnswerIx = 0;\n        boolean isMenuAdded = false;\n        AccountID accountId = protocolProvider.getAccountID();\n        // If we already have other accounts.\n        for(int i = 0; i < parentMenu.getItemCount(); i++)\n        {\n            JMenuItem c = parentMenu.getItem(i);\n            if (!(c instanceof AutoAnswerMenuItem))\n                continue;\n\n            AutoAnswerMenuItem menu = (AutoAnswerMenuItem) c;\n            int menuIndex = parentMenu.getPopupMenu().getComponentIndex(menu);\n\n            lastAutoAnswerIx = menuIndex;\n\n            AccountID menuAccountID = menu.getProtocolProvider().getAccountID();\n\n            int protocolCompare = accountId.getProtocolDisplayName().compareTo(\n                menuAccountID.getProtocolDisplayName());\n\n            // If the new account protocol name is before the name of the menu\n            // we insert the new account before the given menu.\n            if (protocolCompare < 0)\n            {\n                parentMenu.insert(providerMenu, menuIndex);\n                isMenuAdded = true;\n                break;\n            }\n            else if (protocolCompare == 0)\n            {\n                // If we have the same protocol name, we check the account name.\n                if (accountId.getDisplayName()\n                        .compareTo(menuAccountID.getDisplayName()) < 0)\n                {\n                    parentMenu.insert( providerMenu, menuIndex);\n                    isMenuAdded = true;\n                    break;\n                }\n            }\n        }\n\n        if (!isMenuAdded)\n        {\n            // add it after last auto answer menu found\n            if(lastAutoAnswerIx != 0)\n                parentMenu.insert(providerMenu, lastAutoAnswerIx);\n            else\n            {\n                // as no items\n                // lets find the first separator and add it after it\n                // the place is between the separators\n                int lastMenuItemIx = 0;\n                for(int i = 0; i < parentMenu.getMenuComponentCount(); i++)\n                {\n                    if(parentMenu.getMenuComponent(i) instanceof JSeparator)\n                    {\n                        parentMenu.insert(providerMenu, lastMenuItemIx + 1);\n                        isMenuAdded = true;\n                        break;\n                    }\n                    else\n                        lastMenuItemIx++;\n                }\n\n                if(!isMenuAdded)\n                    parentMenu.add(providerMenu);\n            }\n        }\n    }","id":15786,"modified_method":"/**\n     * Adds a menu item for the account given by <tt>protocolProvider<\/tt>.\n     * @param protocolProvider the <tt>ProtocolProviderService<\/tt>, for which\n     * to add a menu\n     */\n    private static void addAccountInternal(\n        ProtocolProviderService protocolProvider,\n        SIPCommMenu parentMenu)\n    {\n        OperationSetBasicAutoAnswer opSet = protocolProvider\n            .getOperationSet(OperationSetBasicAutoAnswer.class);\n\n        if(opSet == null)\n        {\n            return;\n        }\n\n        boolean isHidden\n            = protocolProvider\n                    .getAccountID()\n                        .getAccountProperty(\n                            ProtocolProviderFactory.IS_PROTOCOL_HIDDEN)\n                != null;\n\n        if (isHidden)\n            return;\n\n        AutoAnswerMenuItem providerMenu =\n            new AutoAnswerMenuItem(protocolProvider, parentMenu);\n\n        int lastAutoAnswerIx = 0;\n        boolean isMenuAdded = false;\n        AccountID accountId = protocolProvider.getAccountID();\n        // If we already have other accounts.\n        for(int i = 0; i < parentMenu.getItemCount(); i++)\n        {\n            JMenuItem c = parentMenu.getItem(i);\n            if (!(c instanceof AutoAnswerMenuItem))\n                continue;\n\n            AutoAnswerMenuItem menu = (AutoAnswerMenuItem) c;\n            int menuIndex = parentMenu.getPopupMenu().getComponentIndex(menu);\n\n            lastAutoAnswerIx = menuIndex;\n\n            AccountID menuAccountID = menu.getProtocolProvider().getAccountID();\n\n            int protocolCompare = accountId.getProtocolDisplayName().compareTo(\n                menuAccountID.getProtocolDisplayName());\n\n            // If the new account protocol name is before the name of the menu\n            // we insert the new account before the given menu.\n            if (protocolCompare < 0)\n            {\n                parentMenu.insert(providerMenu, menuIndex);\n                isMenuAdded = true;\n                break;\n            }\n            else if (protocolCompare == 0)\n            {\n                // If we have the same protocol name, we check the account name.\n                if (accountId.getDisplayName()\n                        .compareTo(menuAccountID.getDisplayName()) < 0)\n                {\n                    parentMenu.insert(providerMenu, menuIndex);\n                    isMenuAdded = true;\n                    break;\n                }\n            }\n        }\n\n        if (!isMenuAdded)\n        {\n            // add it after last auto answer menu found\n            if(lastAutoAnswerIx != 0)\n                parentMenu.insert(providerMenu, lastAutoAnswerIx);\n            else\n            {\n                // as no items\n                // lets find the first separator and add it after it\n                // the place is between the separators\n                int lastMenuItemIx = 0;\n                for(int i = 0; i < parentMenu.getMenuComponentCount(); i++)\n                {\n                    if(parentMenu.getMenuComponent(i) instanceof JSeparator)\n                    {\n                        parentMenu.insert(providerMenu, lastMenuItemIx + 1);\n                        isMenuAdded = true;\n                        break;\n                    }\n                    else\n                        lastMenuItemIx++;\n                }\n\n                if(!isMenuAdded)\n                    parentMenu.add(providerMenu);\n            }\n        }\n    }","commit_id":"ecd24a6d80df09d17d715e85d3ce64168a03e9a4","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n         * Init the menu item.\n         * @param provider the provider.\n         */\n        AutoAnswerMenuItem(ProtocolProviderService provider)\n        {\n            this(provider,\n                 getItemDisplayName(provider),\n                 ImageUtils.getBytesInImage(\n                    provider.getProtocolIcon().getIcon(\n                        ProtocolIcon.ICON_SIZE_16x16)));\n        }","id":15787,"modified_method":"/**\n         * Init the menu item.\n         * @param provider the provider.\n         * @param parentMenu the parent menu.\n         */\n        AutoAnswerMenuItem(ProtocolProviderService provider,\n                           SIPCommMenu parentMenu)\n        {\n            this(provider,\n                getItemDisplayName(provider),\n                getIconForProvider(provider, null, parentMenu),\n                parentMenu);\n        }","commit_id":"ecd24a6d80df09d17d715e85d3ce64168a03e9a4","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Remove menu item for the account given by <tt>protocolProvider<\/tt>.\n     * @param protocolProvider the <tt>ProtocolProviderService<\/tt>, for which\n     * to remove the menu\n     */\n    public static void removeAccount(ProtocolProviderService protocolProvider,\n                                     SIPCommMenu parentMenu)\n    {\n        for(int i = 0; i < parentMenu.getItemCount(); i++)\n        {\n            JMenuItem c = parentMenu.getItem(i);\n            \n            if (!(c instanceof AutoAnswerMenuItem))\n                continue;\n\n            AutoAnswerMenuItem menu = (AutoAnswerMenuItem) c;\n\n            AccountID menuAccountID = menu.getProtocolProvider().getAccountID();\n\n            if(menuAccountID.equals(protocolProvider.getAccountID()))\n            {\n                parentMenu.remove(menu);\n                break;\n            }\n        }\n\n        // if menu is disabled for auto answer and we have left with one\n        // item set its name like a global one\n        if(ConfigurationManager.isAutoAnswerDisableSubmenu()\n            && getAutoAnswerItemCount(parentMenu) == 1)\n        {\n            AutoAnswerMenuItem item = getAutoAnswerItem(parentMenu, 0);\n            if(item != null)\n            {\n                item.setText(GuiActivator.getResources().getI18NString(\n                    \"service.gui.AUTO_ANSWER\"));\n                item.setIcon(new ImageIcon(\n                    ImageLoader.getImage(ImageLoader.CALL_16x16_ICON)));\n            }\n        }\n    }","id":15788,"modified_method":"/**\n     * Remove menu item for the account given by <tt>protocolProvider<\/tt>.\n     * @param protocolProvider the <tt>ProtocolProviderService<\/tt>, for which\n     * to remove the menu\n     */\n    public static void removeAccount(ProtocolProviderService protocolProvider,\n                                     SIPCommMenu parentMenu)\n    {\n        for(int i = 0; i < parentMenu.getItemCount(); i++)\n        {\n            JMenuItem c = parentMenu.getItem(i);\n            \n            if (!(c instanceof AutoAnswerMenuItem))\n                continue;\n\n            AutoAnswerMenuItem menu = (AutoAnswerMenuItem) c;\n\n            AccountID menuAccountID = menu.getProtocolProvider().getAccountID();\n\n            if(menuAccountID.equals(protocolProvider.getAccountID()))\n            {\n                parentMenu.remove(menu);\n                break;\n            }\n        }\n\n        // if menu is disabled for auto answer and we have left with one\n        // item set its name like a global one\n        if(ConfigurationManager.isAutoAnswerDisableSubmenu()\n            && getAutoAnswerItemCount(parentMenu) == 1)\n        {\n            updateItem(getAutoAnswerItem(parentMenu, 0), true);\n        }\n    }","commit_id":"ecd24a6d80df09d17d715e85d3ce64168a03e9a4","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n         * When action is performed on the item show a dialog.\n         * @param e\n         */\n        public void actionPerformed(ActionEvent e)\n        {\n            new AutoAnswerOptionsDialog(providerService).setVisible(true);\n        }","id":15789,"modified_method":"/**\n         * When action is performed on the item show a dialog.\n         * @param e\n         */\n        public void actionPerformed(ActionEvent e)\n        {\n            new AutoAnswerOptionsDialog(providerService, parentMenu)\n                .setVisible(true);\n        }","commit_id":"ecd24a6d80df09d17d715e85d3ce64168a03e9a4","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Creates an interceptor which modifies presence packet in order to add the\n     * the element name \"x\" and the namespace \"vcard-temp:x:update\" in order to\n     * advertise the avatar SHA-1 hash.\n     */\n    public void createAccountPhotoPresenceInterceptor()\n    {\n        // Verifies that we creates only one interceptor of this type.\n        if(this.vCardTempXUpdatePresenceExtension == null)\n        {\n            byte[] avatar = null;\n            try\n            {\n                // Retrieves the current server avatar.\n                VCard vCard = new VCard();\n                vCard.load(parentProvider.getConnection());\n                avatar = vCard.getAvatar();\n            }\n            catch(XMPPException ex)\n            {\n                logger.info(\"Can not retrieve account avatar\", ex);\n            }\n\n            // Creates the presence extension to generates the  the element\n            // name \"x\" and the namespace \"vcard-temp:x:update\" containing\n            // the avatar SHA-1 hash.\n            this.vCardTempXUpdatePresenceExtension =\n                new VCardTempXUpdatePresenceExtension(avatar);\n\n            // Intercepts all sent presence packet in order to add the\n            // photo tag.\n            parentProvider.getConnection().addPacketInterceptor(\n                    this.vCardTempXUpdatePresenceExtension,\n                    new PacketTypeFilter(Presence.class));\n        }\n    }","id":15790,"modified_method":"/**\n     * Creates an interceptor which modifies presence packet in order to add the\n     * the element name \"x\" and the namespace \"vcard-temp:x:update\" in order to\n     * advertise the avatar SHA-1 hash.\n     */\n    public void createAccountPhotoPresenceInterceptor()\n    {\n        // Verifies that we creates only one interceptor of this type.\n        if(this.vCardTempXUpdatePresenceExtension == null)\n        {\n            byte[] avatar = null;\n            try\n            {\n                // Retrieves the current server avatar.\n                VCard vCard = new VCard();\n                vCard.load(parentProvider.getConnection());\n                avatar = vCard.getAvatar();\n            }\n            catch(XMPPException ex)\n            {\n                logger.info(\"Can not retrieve account avatar for \"\n                    + parentProvider.getOurJID() + \": \" + ex.getMessage());\n            }\n\n            // Creates the presence extension to generates the  the element\n            // name \"x\" and the namespace \"vcard-temp:x:update\" containing\n            // the avatar SHA-1 hash.\n            this.vCardTempXUpdatePresenceExtension =\n                new VCardTempXUpdatePresenceExtension(avatar);\n\n            // Intercepts all sent presence packet in order to add the\n            // photo tag.\n            parentProvider.getConnection().addPacketInterceptor(\n                    this.vCardTempXUpdatePresenceExtension,\n                    new PacketTypeFilter(Presence.class));\n        }\n    }","commit_id":"ecd24a6d80df09d17d715e85d3ce64168a03e9a4","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Uploads the new avatar image to the server via the vCard mechanism\n     * (XEP-0153).\n     *\n     * @param changeEventID the int ID of the event to dispatch\n     * @param currentDetailValue the detail value we'd like to replace.\n     * @param newDetailValue the value of the detail that we'd like to replace\n     * currentDetailValue with. If ((ImageDetail) newDetailValue).getBytes() is\n     * null, then this function removes the current avatar from the server by\n     * sending a vCard with a \"photo\" tag without any content.\n     *\n     * @return \"true\" if the new avatar image has been uploaded (even if the\n     * current avatar image is removed). \"false\" if an XMPPException occurs.\n     */\n    private boolean uploadImageDetail(\n            int changeEventID,\n            ServerStoredDetails.GenericDetail currentDetailValue,\n            ServerStoredDetails.GenericDetail newDetailValue)\n    {\n        boolean isPhotoChanged = false;\n\n        try\n        {\n            byte[] newAvatar = ((ImageDetail) newDetailValue).getBytes();\n\n            VCardXEP0153 v1 = new VCardXEP0153();\n            // Retrieve the old vCard.\n            v1.load(jabberProvider.getConnection());\n            // Checks if the new avatar photo is diferent form the server one.\n            // If yes, then upload the new avatar photo.\n            if(!Arrays.equals(v1.getAvatar(), newAvatar))\n            {\n                if(newAvatar == null)\n                {\n                    v1.setAvatar(new byte[0]);\n                }\n                else\n                {\n                    v1.setAvatar(newAvatar);\n                }\n                // Saves the new vCard.\n                v1.save(jabberProvider.getConnection());\n            }\n\n            // Sets the new avatar photo advertised in all presence messages,\n            // and send one presence messge immediately.\n            ((OperationSetPersistentPresenceJabberImpl)\n             this.jabberProvider.getOperationSet(\n                 OperationSetPersistentPresence.class))\n                .updateAccountPhotoPresenceExtension(newAvatar);\n\n            // Advertises all detail change listeners, that the server stored\n            // details have changed.\n            fireServerStoredDetailsChangeEvent(\n                    jabberProvider,\n                    changeEventID,\n                    currentDetailValue,\n                    newDetailValue);\n\n            isPhotoChanged = true;\n        }\n        catch (XMPPException xmppe)\n        {\n            xmppe.printStackTrace();\n        }\n\n        return isPhotoChanged;\n    }","id":15791,"modified_method":"/**\n     * Uploads the new avatar image to the server via the vCard mechanism\n     * (XEP-0153).\n     *\n     * @param changeEventID the int ID of the event to dispatch\n     * @param currentDetailValue the detail value we'd like to replace.\n     * @param newDetailValue the value of the detail that we'd like to replace\n     * currentDetailValue with. If ((ImageDetail) newDetailValue).getBytes() is\n     * null, then this function removes the current avatar from the server by\n     * sending a vCard with a \"photo\" tag without any content.\n     *\n     * @return \"true\" if the new avatar image has been uploaded (even if the\n     * current avatar image is removed). \"false\" if an XMPPException occurs.\n     */\n    private boolean uploadImageDetail(\n            int changeEventID,\n            ServerStoredDetails.GenericDetail currentDetailValue,\n            ServerStoredDetails.GenericDetail newDetailValue)\n    {\n        boolean isPhotoChanged = false;\n\n        try\n        {\n            byte[] newAvatar = ((ImageDetail) newDetailValue).getBytes();\n\n            VCardXEP0153 v1 = new VCardXEP0153();\n            // Retrieve the old vCard.\n            v1.load(jabberProvider.getConnection());\n            // Checks if the new avatar photo is diferent form the server one.\n            // If yes, then upload the new avatar photo.\n            if(!Arrays.equals(v1.getAvatar(), newAvatar))\n            {\n                if(newAvatar == null)\n                {\n                    v1.setAvatar(new byte[0]);\n                }\n                else\n                {\n                    v1.setAvatar(newAvatar);\n                }\n                // Saves the new vCard.\n                v1.save(jabberProvider.getConnection());\n            }\n\n            // Sets the new avatar photo advertised in all presence messages,\n            // and send one presence messge immediately.\n            ((OperationSetPersistentPresenceJabberImpl)\n             this.jabberProvider.getOperationSet(\n                 OperationSetPersistentPresence.class))\n                .updateAccountPhotoPresenceExtension(newAvatar);\n\n            // Advertises all detail change listeners, that the server stored\n            // details have changed.\n            fireServerStoredDetailsChangeEvent(\n                    jabberProvider,\n                    changeEventID,\n                    currentDetailValue,\n                    newDetailValue);\n\n            isPhotoChanged = true;\n        }\n        catch (XMPPException xmppe)\n        {\n            logger.error(\"Error loading/saving vcard: \", xmppe);\n        }\n\n        return isPhotoChanged;\n    }","commit_id":"ecd24a6d80df09d17d715e85d3ce64168a03e9a4","url":"https://github.com/jitsi/jitsi"},{"original_method":"protected File doExportLayoutsAsFile(\n\t\t\tlong groupId, boolean privateLayout, long[] layoutIds,\n\t\t\tMap<String, String[]> parameterMap, Date startDate, Date endDate)\n\t\tthrows Exception {\n\n\t\tboolean exportIgnoreLastPublishDate = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.IGNORE_LAST_PUBLISH_DATE);\n\t\tboolean exportPermissions = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.PERMISSIONS);\n\t\tboolean exportLogo = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.LOGO);\n\t\tboolean exportLayoutSetSettings = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.LAYOUT_SET_SETTINGS);\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Export permissions \" + exportPermissions);\n\t\t}\n\n\t\tLayoutSet layoutSet = LayoutSetLocalServiceUtil.getLayoutSet(\n\t\t\tgroupId, privateLayout);\n\n\t\tlong companyId = layoutSet.getCompanyId();\n\t\tlong defaultUserId = UserLocalServiceUtil.getDefaultUserId(companyId);\n\n\t\tServiceContext serviceContext =\n\t\t\tServiceContextThreadLocal.getServiceContext();\n\n\t\tif (serviceContext == null) {\n\t\t\tserviceContext = new ServiceContext();\n\n\t\t\tserviceContext.setCompanyId(companyId);\n\t\t\tserviceContext.setSignedIn(false);\n\t\t\tserviceContext.setUserId(defaultUserId);\n\n\t\t\tServiceContextThreadLocal.pushServiceContext(serviceContext);\n\t\t}\n\n\t\tserviceContext.setAttribute(\"exporting\", Boolean.TRUE);\n\n\t\tlong layoutSetBranchId = MapUtil.getLong(\n\t\t\tparameterMap, \"layoutSetBranchId\");\n\n\t\tserviceContext.setAttribute(\"layoutSetBranchId\", layoutSetBranchId);\n\n\t\tif (exportIgnoreLastPublishDate) {\n\t\t\tendDate = null;\n\t\t\tstartDate = null;\n\t\t}\n\n\t\tStopWatch stopWatch = null;\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\tstopWatch = new StopWatch();\n\n\t\t\tstopWatch.start();\n\t\t}\n\n\t\tLayoutCache layoutCache = new LayoutCache();\n\n\t\tZipWriter zipWriter = ZipWriterFactoryUtil.getZipWriter();\n\n\t\tPortletDataContext portletDataContext =\n\t\t\tPortletDataContextFactoryUtil.createExportPortletDataContext(\n\t\t\t\tcompanyId, groupId, parameterMap, startDate, endDate,\n\t\t\t\tzipWriter);\n\n\t\tportletDataContext.setPortetDataContextListener(\n\t\t\tnew PortletDataContextListenerImpl(portletDataContext));\n\n\t\tDocument document = SAXReaderUtil.createDocument();\n\n\t\tElement rootElement = document.addElement(\"root\");\n\n\t\tportletDataContext.setExportDataRootElement(rootElement);\n\n\t\tElement headerElement = rootElement.addElement(\"header\");\n\n\t\theaderElement.addAttribute(\n\t\t\t\"available-locales\",\n\t\t\tStringUtil.merge(\n\t\t\t\tLanguageUtil.getAvailableLocales(\n\t\t\t\t\tportletDataContext.getScopeGroupId())));\n\t\theaderElement.addAttribute(\n\t\t\t\"build-number\", String.valueOf(ReleaseInfo.getBuildNumber()));\n\t\theaderElement.addAttribute(\"export-date\", Time.getRFC822());\n\n\t\tif (portletDataContext.hasDateRange()) {\n\t\t\theaderElement.addAttribute(\n\t\t\t\t\"start-date\",\n\t\t\t\tString.valueOf(portletDataContext.getStartDate()));\n\t\t\theaderElement.addAttribute(\n\t\t\t\t\"end-date\", String.valueOf(portletDataContext.getEndDate()));\n\t\t}\n\n\t\theaderElement.addAttribute(\n\t\t\t\"company-id\", String.valueOf(portletDataContext.getCompanyId()));\n\t\theaderElement.addAttribute(\n\t\t\t\"company-group-id\",\n\t\t\tString.valueOf(portletDataContext.getCompanyGroupId()));\n\t\theaderElement.addAttribute(\"group-id\", String.valueOf(groupId));\n\t\theaderElement.addAttribute(\n\t\t\t\"user-personal-site-group-id\",\n\t\t\tString.valueOf(portletDataContext.getUserPersonalSiteGroupId()));\n\t\theaderElement.addAttribute(\n\t\t\t\"private-layout\", String.valueOf(privateLayout));\n\n\t\tGroup group = layoutSet.getGroup();\n\n\t\tString type = \"layout-set\";\n\n\t\tif (group.isLayoutPrototype()) {\n\t\t\ttype = \"layout-prototype\";\n\n\t\t\tLayoutPrototype layoutPrototype =\n\t\t\t\tLayoutPrototypeLocalServiceUtil.getLayoutPrototype(\n\t\t\t\t\tgroup.getClassPK());\n\n\t\t\theaderElement.addAttribute(\"type-uuid\", layoutPrototype.getUuid());\n\t\t}\n\t\telse if (group.isLayoutSetPrototype()) {\n\t\t\ttype =\"layout-set-prototype\";\n\n\t\t\tLayoutSetPrototype layoutSetPrototype =\n\t\t\t\tLayoutSetPrototypeLocalServiceUtil.getLayoutSetPrototype(\n\t\t\t\t\tgroup.getClassPK());\n\n\t\t\theaderElement.addAttribute(\n\t\t\t\t\"type-uuid\", layoutSetPrototype.getUuid());\n\t\t}\n\n\t\theaderElement.addAttribute(\"type\", type);\n\n\t\tLayoutSetBranch layoutSetBranch =\n\t\t\tLayoutSetBranchLocalServiceUtil.fetchLayoutSetBranch(\n\t\t\t\tlayoutSetBranchId);\n\n\t\tif (exportLogo) {\n\t\t\tImage image = null;\n\n\t\t\tif (layoutSetBranch != null) {\n\t\t\t\timage = ImageLocalServiceUtil.getImage(\n\t\t\t\t\tlayoutSetBranch.getLogoId());\n\t\t\t}\n\t\t\telse {\n\t\t\t\timage = ImageLocalServiceUtil.getImage(layoutSet.getLogoId());\n\t\t\t}\n\n\t\t\tif ((image != null) && (image.getTextObj() != null)) {\n\t\t\t\tString logoPath = ExportImportPathUtil.getRootPath(\n\t\t\t\t\tportletDataContext);\n\n\t\t\t\tlogoPath += \"/logo\";\n\n\t\t\t\theaderElement.addAttribute(\"logo-path\", logoPath);\n\n\t\t\t\tportletDataContext.addZipEntry(logoPath, image.getTextObj());\n\t\t\t}\n\t\t}\n\n\t\tElement missingReferencesElement = rootElement.addElement(\n\t\t\t\"missing-references\");\n\n\t\tportletDataContext.setMissingReferencesElement(\n\t\t\tmissingReferencesElement);\n\n\t\tif (layoutSetBranch != null) {\n\t\t\t_themeExporter.exportTheme(portletDataContext, layoutSetBranch);\n\t\t}\n\t\telse {\n\t\t\t_themeExporter.exportTheme(portletDataContext, layoutSet);\n\t\t}\n\n\t\tif (exportLayoutSetSettings) {\n\t\t\tElement settingsElement = headerElement.addElement(\"settings\");\n\n\t\t\tif (layoutSetBranch != null) {\n\t\t\t\tsettingsElement.addCDATA(layoutSetBranch.getSettings());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsettingsElement.addCDATA(layoutSet.getSettings());\n\t\t\t}\n\t\t}\n\n\t\tMap<String, Object[]> portletIds =\n\t\t\tnew LinkedHashMap<String, Object[]>();\n\n\t\tList<Layout> layouts = LayoutLocalServiceUtil.getLayouts(\n\t\t\tgroupId, privateLayout);\n\n\t\tList<Portlet> portlets = getDataSiteLevelPortlets(companyId);\n\n\t\tlong plid = LayoutConstants.DEFAULT_PLID;\n\n\t\tif (!layouts.isEmpty()) {\n\t\t\tLayout firstLayout = layouts.get(0);\n\n\t\t\tplid = firstLayout.getPlid();\n\t\t}\n\n\t\tif (group.isStagingGroup()) {\n\t\t\tgroup = group.getLiveGroup();\n\t\t}\n\n\t\tfor (Portlet portlet : portlets) {\n\t\t\tString portletId = portlet.getRootPortletId();\n\n\t\t\tif (!group.isStagedPortlet(portletId)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tString key = PortletPermissionUtil.getPrimaryKey(0, portletId);\n\n\t\t\tif (portletIds.get(key) == null) {\n\t\t\t\tportletIds.put(\n\t\t\t\t\tkey,\n\t\t\t\t\tnew Object[] {\n\t\t\t\t\t\tportletId, plid, groupId, StringPool.BLANK,\n\t\t\t\t\t\tStringPool.BLANK\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tportletDataContext.addDeletionSystemEventStagedModelTypes(\n\t\t\tnew StagedModelType(Layout.class));\n\n\t\tElement layoutsElement = portletDataContext.getExportDataGroupElement(\n\t\t\tLayout.class);\n\n\t\tString layoutSetPrototypeUuid = layoutSet.getLayoutSetPrototypeUuid();\n\n\t\tif (!group.isStaged() && Validator.isNotNull(layoutSetPrototypeUuid)) {\n\t\t\tLayoutSetPrototype layoutSetPrototype =\n\t\t\t\tLayoutSetPrototypeLocalServiceUtil.\n\t\t\t\t\tgetLayoutSetPrototypeByUuidAndCompanyId(\n\t\t\t\t\t\tlayoutSetPrototypeUuid, companyId);\n\n\t\t\tlayoutsElement.addAttribute(\n\t\t\t\t\"layout-set-prototype-uuid\", layoutSetPrototypeUuid);\n\n\t\t\tlayoutsElement.addAttribute(\n\t\t\t\t\"layout-set-prototype-name\",\n\t\t\t\tlayoutSetPrototype.getName(LocaleUtil.getDefault()));\n\t\t}\n\n\t\tfor (Layout layout : layouts) {\n\t\t\texportLayout(\n\t\t\t\tportletDataContext, portlets, layoutIds, portletIds, layout);\n\t\t}\n\n\t\tElement portletsElement = rootElement.addElement(\"portlets\");\n\n\t\tlong previousScopeGroupId = portletDataContext.getScopeGroupId();\n\n\t\tfor (Map.Entry<String, Object[]> portletIdsEntry :\n\t\t\t\tportletIds.entrySet()) {\n\n\t\t\tObject[] portletObjects = portletIdsEntry.getValue();\n\n\t\t\tString portletId = null;\n\t\t\tplid = LayoutConstants.DEFAULT_PLID;\n\t\t\tlong scopeGroupId = 0;\n\t\t\tString scopeType = StringPool.BLANK;\n\t\t\tString scopeLayoutUuid = null;\n\n\t\t\tif (portletObjects.length == 4) {\n\t\t\t\tportletId = (String)portletIdsEntry.getValue()[0];\n\t\t\t\tplid = (Long)portletIdsEntry.getValue()[1];\n\t\t\t\tscopeGroupId = (Long)portletIdsEntry.getValue()[2];\n\t\t\t\tscopeLayoutUuid = (String)portletIdsEntry.getValue()[3];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tportletId = (String)portletIdsEntry.getValue()[0];\n\t\t\t\tplid = (Long)portletIdsEntry.getValue()[1];\n\t\t\t\tscopeGroupId = (Long)portletIdsEntry.getValue()[2];\n\t\t\t\tscopeType = (String)portletIdsEntry.getValue()[3];\n\t\t\t\tscopeLayoutUuid = (String)portletIdsEntry.getValue()[4];\n\t\t\t}\n\n\t\t\tLayout layout = LayoutLocalServiceUtil.fetchLayout(plid);\n\n\t\t\tif (layout == null) {\n\t\t\t\tlayout = new LayoutImpl();\n\n\t\t\t\tlayout.setCompanyId(companyId);\n\t\t\t\tlayout.setGroupId(groupId);\n\t\t\t}\n\n\t\t\tportletDataContext.setPlid(plid);\n\t\t\tportletDataContext.setOldPlid(plid);\n\t\t\tportletDataContext.setScopeGroupId(scopeGroupId);\n\t\t\tportletDataContext.setScopeType(scopeType);\n\t\t\tportletDataContext.setScopeLayoutUuid(scopeLayoutUuid);\n\n\t\t\tboolean[] exportPortletControls =\n\t\t\t\tExportImportHelperUtil.getExportPortletControls(\n\t\t\t\t\tcompanyId, portletId, parameterMap, type);\n\n\t\t\t_portletExporter.exportPortlet(\n\t\t\t\tportletDataContext, layoutCache, portletId, layout,\n\t\t\t\tportletsElement, exportPermissions, exportPortletControls[0],\n\t\t\t\texportPortletControls[1], exportPortletControls[2],\n\t\t\t\texportPortletControls[3]);\n\t\t}\n\n\t\tportletDataContext.setScopeGroupId(previousScopeGroupId);\n\n\t\t_portletExporter.exportAssetLinks(portletDataContext);\n\t\t_portletExporter.exportAssetTags(portletDataContext);\n\t\t_portletExporter.exportExpandoTables(portletDataContext);\n\t\t_portletExporter.exportLocks(portletDataContext);\n\n\t\t_deletionSystemEventExporter.exportDeletionSystemEvents(\n\t\t\tportletDataContext);\n\n\t\tif (exportPermissions) {\n\t\t\t_permissionExporter.exportPortletDataPermissions(\n\t\t\t\tportletDataContext);\n\t\t}\n\n\t\tExportImportHelperUtil.writeManifestSummary(\n\t\t\tdocument, portletDataContext.getManifestSummary());\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\tif (stopWatch != null) {\n\t\t\t\t_log.info(\n\t\t\t\t\t\"Exporting layouts takes \" + stopWatch.getTime() + \" ms\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_log.info(\"Exporting layouts is finished\");\n\t\t\t}\n\t\t}\n\n\t\tportletDataContext.addZipEntry(\n\t\t\t\"/manifest.xml\", document.formattedString());\n\n\t\treturn zipWriter.getFile();\n\t}","id":15792,"modified_method":"protected File doExportLayoutsAsFile(\n\t\t\tlong groupId, boolean privateLayout, long[] layoutIds,\n\t\t\tMap<String, String[]> parameterMap, Date startDate, Date endDate)\n\t\tthrows Exception {\n\n\t\tboolean exportIgnoreLastPublishDate = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.IGNORE_LAST_PUBLISH_DATE);\n\t\tboolean exportPermissions = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.PERMISSIONS);\n\t\tboolean exportLogo = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.LOGO);\n\t\tboolean exportLayoutSetSettings = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.LAYOUT_SET_SETTINGS);\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Export permissions \" + exportPermissions);\n\t\t}\n\n\t\tLayoutSet layoutSet = LayoutSetLocalServiceUtil.getLayoutSet(\n\t\t\tgroupId, privateLayout);\n\n\t\tlong companyId = layoutSet.getCompanyId();\n\t\tlong defaultUserId = UserLocalServiceUtil.getDefaultUserId(companyId);\n\n\t\tServiceContext serviceContext =\n\t\t\tServiceContextThreadLocal.getServiceContext();\n\n\t\tif (serviceContext == null) {\n\t\t\tserviceContext = new ServiceContext();\n\n\t\t\tserviceContext.setCompanyId(companyId);\n\t\t\tserviceContext.setSignedIn(false);\n\t\t\tserviceContext.setUserId(defaultUserId);\n\n\t\t\tServiceContextThreadLocal.pushServiceContext(serviceContext);\n\t\t}\n\n\t\tserviceContext.setAttribute(\"exporting\", Boolean.TRUE);\n\n\t\tlong layoutSetBranchId = MapUtil.getLong(\n\t\t\tparameterMap, \"layoutSetBranchId\");\n\n\t\tserviceContext.setAttribute(\"layoutSetBranchId\", layoutSetBranchId);\n\n\t\tif (exportIgnoreLastPublishDate) {\n\t\t\tendDate = null;\n\t\t\tstartDate = null;\n\t\t}\n\n\t\tStopWatch stopWatch = null;\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\tstopWatch = new StopWatch();\n\n\t\t\tstopWatch.start();\n\t\t}\n\n\t\tLayoutCache layoutCache = new LayoutCache();\n\n\t\tZipWriter zipWriter = ZipWriterFactoryUtil.getZipWriter();\n\n\t\tPortletDataContext portletDataContext =\n\t\t\tPortletDataContextFactoryUtil.createExportPortletDataContext(\n\t\t\t\tcompanyId, groupId, parameterMap, startDate, endDate,\n\t\t\t\tzipWriter);\n\n\t\tportletDataContext.setPortetDataContextListener(\n\t\t\tnew PortletDataContextListenerImpl(portletDataContext));\n\n\t\tDocument document = SAXReaderUtil.createDocument();\n\n\t\tElement rootElement = document.addElement(\"root\");\n\n\t\tportletDataContext.setExportDataRootElement(rootElement);\n\n\t\tElement headerElement = rootElement.addElement(\"header\");\n\n\t\theaderElement.addAttribute(\n\t\t\t\"available-locales\",\n\t\t\tStringUtil.merge(\n\t\t\t\tLanguageUtil.getAvailableLocales(\n\t\t\t\t\tportletDataContext.getScopeGroupId())));\n\t\theaderElement.addAttribute(\n\t\t\t\"build-number\", String.valueOf(ReleaseInfo.getBuildNumber()));\n\t\theaderElement.addAttribute(\"export-date\", Time.getRFC822());\n\n\t\tif (portletDataContext.hasDateRange()) {\n\t\t\theaderElement.addAttribute(\n\t\t\t\t\"start-date\",\n\t\t\t\tString.valueOf(portletDataContext.getStartDate()));\n\t\t\theaderElement.addAttribute(\n\t\t\t\t\"end-date\", String.valueOf(portletDataContext.getEndDate()));\n\t\t}\n\n\t\theaderElement.addAttribute(\n\t\t\t\"company-id\", String.valueOf(portletDataContext.getCompanyId()));\n\t\theaderElement.addAttribute(\n\t\t\t\"company-group-id\",\n\t\t\tString.valueOf(portletDataContext.getCompanyGroupId()));\n\t\theaderElement.addAttribute(\"group-id\", String.valueOf(groupId));\n\t\theaderElement.addAttribute(\n\t\t\t\"user-personal-site-group-id\",\n\t\t\tString.valueOf(portletDataContext.getUserPersonalSiteGroupId()));\n\t\theaderElement.addAttribute(\n\t\t\t\"private-layout\", String.valueOf(privateLayout));\n\n\t\tGroup group = layoutSet.getGroup();\n\n\t\tString type = \"layout-set\";\n\n\t\tif (group.isLayoutPrototype()) {\n\t\t\ttype = \"layout-prototype\";\n\n\t\t\tLayoutPrototype layoutPrototype =\n\t\t\t\tLayoutPrototypeLocalServiceUtil.getLayoutPrototype(\n\t\t\t\t\tgroup.getClassPK());\n\n\t\t\theaderElement.addAttribute(\"type-uuid\", layoutPrototype.getUuid());\n\t\t}\n\t\telse if (group.isLayoutSetPrototype()) {\n\t\t\ttype =\"layout-set-prototype\";\n\n\t\t\tLayoutSetPrototype layoutSetPrototype =\n\t\t\t\tLayoutSetPrototypeLocalServiceUtil.getLayoutSetPrototype(\n\t\t\t\t\tgroup.getClassPK());\n\n\t\t\theaderElement.addAttribute(\n\t\t\t\t\"type-uuid\", layoutSetPrototype.getUuid());\n\t\t}\n\n\t\theaderElement.addAttribute(\"type\", type);\n\n\t\tLayoutSetBranch layoutSetBranch =\n\t\t\tLayoutSetBranchLocalServiceUtil.fetchLayoutSetBranch(\n\t\t\t\tlayoutSetBranchId);\n\n\t\tif (exportLogo) {\n\t\t\tImage image = null;\n\n\t\t\tif (layoutSetBranch != null) {\n\t\t\t\timage = ImageLocalServiceUtil.getImage(\n\t\t\t\t\tlayoutSetBranch.getLogoId());\n\t\t\t}\n\t\t\telse {\n\t\t\t\timage = ImageLocalServiceUtil.getImage(layoutSet.getLogoId());\n\t\t\t}\n\n\t\t\tif ((image != null) && (image.getTextObj() != null)) {\n\t\t\t\tString logoPath = ExportImportPathUtil.getRootPath(\n\t\t\t\t\tportletDataContext);\n\n\t\t\t\tlogoPath += \"/logo\";\n\n\t\t\t\theaderElement.addAttribute(\"logo-path\", logoPath);\n\n\t\t\t\tportletDataContext.addZipEntry(logoPath, image.getTextObj());\n\t\t\t}\n\t\t}\n\n\t\tElement missingReferencesElement = rootElement.addElement(\n\t\t\t\"missing-references\");\n\n\t\tportletDataContext.setMissingReferencesElement(\n\t\t\tmissingReferencesElement);\n\n\t\tif (layoutSetBranch != null) {\n\t\t\t_themeExporter.exportTheme(portletDataContext, layoutSetBranch);\n\t\t}\n\t\telse {\n\t\t\t_themeExporter.exportTheme(portletDataContext, layoutSet);\n\t\t}\n\n\t\tif (exportLayoutSetSettings) {\n\t\t\tElement settingsElement = headerElement.addElement(\"settings\");\n\n\t\t\tif (layoutSetBranch != null) {\n\t\t\t\tsettingsElement.addCDATA(layoutSetBranch.getSettings());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsettingsElement.addCDATA(layoutSet.getSettings());\n\t\t\t}\n\t\t}\n\n\t\tMap<String, Object[]> portletIds =\n\t\t\tnew LinkedHashMap<String, Object[]>();\n\n\t\tList<Layout> layouts = LayoutLocalServiceUtil.getLayouts(\n\t\t\tgroupId, privateLayout);\n\n\t\tList<Portlet> portlets = getDataSiteLevelPortlets(companyId);\n\n\t\tlong plid = LayoutConstants.DEFAULT_PLID;\n\n\t\tif (!layouts.isEmpty()) {\n\t\t\tLayout firstLayout = layouts.get(0);\n\n\t\t\tplid = firstLayout.getPlid();\n\t\t}\n\n\t\tif (group.isStagingGroup()) {\n\t\t\tgroup = group.getLiveGroup();\n\t\t}\n\n\t\tfor (Portlet portlet : portlets) {\n\t\t\tString portletId = portlet.getRootPortletId();\n\n\t\t\tif (!group.isStagedPortlet(portletId)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tString key = PortletPermissionUtil.getPrimaryKey(0, portletId);\n\n\t\t\tif (portletIds.get(key) == null) {\n\t\t\t\tportletIds.put(\n\t\t\t\t\tkey,\n\t\t\t\t\tnew Object[] {\n\t\t\t\t\t\tportletId, plid, groupId, StringPool.BLANK,\n\t\t\t\t\t\tStringPool.BLANK\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tportletDataContext.addDeletionSystemEventStagedModelTypes(\n\t\t\tnew StagedModelType(Layout.class));\n\n\t\tElement layoutsElement = portletDataContext.getExportDataGroupElement(\n\t\t\tLayout.class);\n\n\t\tString layoutSetPrototypeUuid = layoutSet.getLayoutSetPrototypeUuid();\n\n\t\tif (!group.isStaged() && Validator.isNotNull(layoutSetPrototypeUuid)) {\n\t\t\tLayoutSetPrototype layoutSetPrototype =\n\t\t\t\tLayoutSetPrototypeLocalServiceUtil.\n\t\t\t\t\tgetLayoutSetPrototypeByUuidAndCompanyId(\n\t\t\t\t\t\tlayoutSetPrototypeUuid, companyId);\n\n\t\t\tlayoutsElement.addAttribute(\n\t\t\t\t\"layout-set-prototype-uuid\", layoutSetPrototypeUuid);\n\n\t\t\tlayoutsElement.addAttribute(\n\t\t\t\t\"layout-set-prototype-name\",\n\t\t\t\tlayoutSetPrototype.getName(LocaleUtil.getDefault()));\n\t\t}\n\n\t\tfor (Layout layout : layouts) {\n\t\t\texportLayout(\n\t\t\t\tportletDataContext, portlets, layoutIds, portletIds, layout);\n\t\t}\n\n\t\tElement portletsElement = rootElement.addElement(\"portlets\");\n\n\t\tlong previousScopeGroupId = portletDataContext.getScopeGroupId();\n\n\t\tfor (Map.Entry<String, Object[]> portletIdsEntry :\n\t\t\t\tportletIds.entrySet()) {\n\n\t\t\tObject[] portletObjects = portletIdsEntry.getValue();\n\n\t\t\tString portletId = null;\n\t\t\tplid = LayoutConstants.DEFAULT_PLID;\n\t\t\tlong scopeGroupId = 0;\n\t\t\tString scopeType = StringPool.BLANK;\n\t\t\tString scopeLayoutUuid = null;\n\n\t\t\tif (portletObjects.length == 4) {\n\t\t\t\tportletId = (String)portletIdsEntry.getValue()[0];\n\t\t\t\tplid = (Long)portletIdsEntry.getValue()[1];\n\t\t\t\tscopeGroupId = (Long)portletIdsEntry.getValue()[2];\n\t\t\t\tscopeLayoutUuid = (String)portletIdsEntry.getValue()[3];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tportletId = (String)portletIdsEntry.getValue()[0];\n\t\t\t\tplid = (Long)portletIdsEntry.getValue()[1];\n\t\t\t\tscopeGroupId = (Long)portletIdsEntry.getValue()[2];\n\t\t\t\tscopeType = (String)portletIdsEntry.getValue()[3];\n\t\t\t\tscopeLayoutUuid = (String)portletIdsEntry.getValue()[4];\n\t\t\t}\n\n\t\t\tLayout layout = LayoutLocalServiceUtil.fetchLayout(plid);\n\n\t\t\tif (layout == null) {\n\t\t\t\tlayout = new LayoutImpl();\n\n\t\t\t\tlayout.setCompanyId(companyId);\n\t\t\t\tlayout.setGroupId(groupId);\n\t\t\t}\n\n\t\t\tportletDataContext.setPlid(plid);\n\t\t\tportletDataContext.setOldPlid(plid);\n\t\t\tportletDataContext.setScopeGroupId(scopeGroupId);\n\t\t\tportletDataContext.setScopeType(scopeType);\n\t\t\tportletDataContext.setScopeLayoutUuid(scopeLayoutUuid);\n\n\t\t\tMap<String, Boolean> exportPortletControlsMap =\n\t\t\t\tExportImportHelperUtil.getExportPortletControlsMap(\n\t\t\t\t\tcompanyId, portletId, parameterMap, type);\n\n\t\t\t_portletExporter.exportPortlet(\n\t\t\t\tportletDataContext, layoutCache, portletId, layout,\n\t\t\t\tportletsElement, exportPermissions,\n\t\t\t\texportPortletControlsMap.get(\n\t\t\t\t\tPortletDataHandlerKeys.PORTLET_ARCHIVED_SETUPS),\n\t\t\t\texportPortletControlsMap.get(\n\t\t\t\t\tPortletDataHandlerKeys.PORTLET_DATA),\n\t\t\t\texportPortletControlsMap.get(\n\t\t\t\t\tPortletDataHandlerKeys.PORTLET_SETUP),\n\t\t\t\texportPortletControlsMap.get(\n\t\t\t\t\tPortletDataHandlerKeys.PORTLET_USER_PREFERENCES));\n\t\t}\n\n\t\tportletDataContext.setScopeGroupId(previousScopeGroupId);\n\n\t\t_portletExporter.exportAssetLinks(portletDataContext);\n\t\t_portletExporter.exportAssetTags(portletDataContext);\n\t\t_portletExporter.exportExpandoTables(portletDataContext);\n\t\t_portletExporter.exportLocks(portletDataContext);\n\n\t\t_deletionSystemEventExporter.exportDeletionSystemEvents(\n\t\t\tportletDataContext);\n\n\t\tif (exportPermissions) {\n\t\t\t_permissionExporter.exportPortletDataPermissions(\n\t\t\t\tportletDataContext);\n\t\t}\n\n\t\tExportImportHelperUtil.writeManifestSummary(\n\t\t\tdocument, portletDataContext.getManifestSummary());\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\tif (stopWatch != null) {\n\t\t\t\t_log.info(\n\t\t\t\t\t\"Exporting layouts takes \" + stopWatch.getTime() + \" ms\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_log.info(\"Exporting layouts is finished\");\n\t\t\t}\n\t\t}\n\n\t\tportletDataContext.addZipEntry(\n\t\t\t\"/manifest.xml\", document.formattedString());\n\n\t\treturn zipWriter.getFile();\n\t}","commit_id":"99da5ec8f133c0829bbab4c4c028f23613b90a76","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void doImportLayouts(\n\t\t\tlong userId, long groupId, boolean privateLayout,\n\t\t\tMap<String, String[]> parameterMap, File file)\n\t\tthrows Exception {\n\n\t\tboolean deleteMissingLayouts = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.DELETE_MISSING_LAYOUTS,\n\t\t\tBoolean.TRUE.booleanValue());\n\t\tboolean deletePortletData = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.DELETE_PORTLET_DATA);\n\t\tboolean importPermissions = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.PERMISSIONS);\n\t\tboolean importLogo = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.LOGO);\n\t\tboolean importLayoutSetSettings = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.LAYOUT_SET_SETTINGS);\n\n\t\tboolean layoutSetPrototypeLinkEnabled = MapUtil.getBoolean(\n\t\t\tparameterMap,\n\t\t\tPortletDataHandlerKeys.LAYOUT_SET_PROTOTYPE_LINK_ENABLED, true);\n\n\t\tGroup group = GroupLocalServiceUtil.getGroup(groupId);\n\n\t\tif (group.isLayoutSetPrototype()) {\n\t\t\tlayoutSetPrototypeLinkEnabled = false;\n\t\t}\n\n\t\tString layoutsImportMode = MapUtil.getString(\n\t\t\tparameterMap, PortletDataHandlerKeys.LAYOUTS_IMPORT_MODE,\n\t\t\tPortletDataHandlerKeys.LAYOUTS_IMPORT_MODE_MERGE_BY_LAYOUT_UUID);\n\t\tString userIdStrategy = MapUtil.getString(\n\t\t\tparameterMap, PortletDataHandlerKeys.USER_ID_STRATEGY);\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Delete portlet data \" + deletePortletData);\n\t\t\t_log.debug(\"Import permissions \" + importPermissions);\n\t\t}\n\n\t\tStopWatch stopWatch = null;\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\tstopWatch = new StopWatch();\n\n\t\t\tstopWatch.start();\n\t\t}\n\n\t\tLayoutCache layoutCache = new LayoutCache();\n\n\t\tLayoutSet layoutSet = LayoutSetLocalServiceUtil.getLayoutSet(\n\t\t\tgroupId, privateLayout);\n\n\t\tlong companyId = layoutSet.getCompanyId();\n\n\t\tUser user = UserUtil.findByPrimaryKey(userId);\n\n\t\tServiceContext serviceContext =\n\t\t\tServiceContextThreadLocal.getServiceContext();\n\n\t\tif (serviceContext == null) {\n\t\t\tserviceContext = new ServiceContext();\n\n\t\t\tserviceContext.setCompanyId(companyId);\n\t\t\tserviceContext.setSignedIn(false);\n\t\t\tserviceContext.setUserId(userId);\n\n\t\t\tServiceContextThreadLocal.pushServiceContext(serviceContext);\n\t\t}\n\n\t\tUserIdStrategy strategy = _portletImporter.getUserIdStrategy(\n\t\t\tuser, userIdStrategy);\n\n\t\tManifestSummary manifestSummary =\n\t\t\tExportImportHelperUtil.getManifestSummary(\n\t\t\t\tuserId, groupId, parameterMap, file);\n\n\t\tif (BackgroundTaskThreadLocal.hasBackgroundTask()) {\n\t\t\tPortletDataHandlerStatusMessageSenderUtil.sendStatusMessage(\n\t\t\t\t\"layout\", manifestSummary);\n\t\t}\n\n\t\tZipReader zipReader = ZipReaderFactoryUtil.getZipReader(file);\n\n\t\tPortletDataContext portletDataContext =\n\t\t\tPortletDataContextFactoryUtil.createImportPortletDataContext(\n\t\t\t\tcompanyId, groupId, parameterMap, strategy, zipReader);\n\n\t\tportletDataContext.setManifestSummary(manifestSummary);\n\t\tportletDataContext.setPortetDataContextListener(\n\t\t\tnew PortletDataContextListenerImpl(portletDataContext));\n\n\t\tportletDataContext.setPrivateLayout(privateLayout);\n\n\t\t// Zip\n\n\t\tvalidateFile(portletDataContext);\n\n\t\t// Company id\n\n\t\tlong sourceCompanyId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"company-id\"));\n\n\t\tportletDataContext.setSourceCompanyId(sourceCompanyId);\n\n\t\t// Company group id\n\n\t\tlong sourceCompanyGroupId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"company-group-id\"));\n\n\t\tportletDataContext.setSourceCompanyGroupId(sourceCompanyGroupId);\n\n\t\t// Group id\n\n\t\tlong sourceGroupId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"group-id\"));\n\n\t\tportletDataContext.setSourceGroupId(sourceGroupId);\n\n\t\t// User personal site group id\n\n\t\tlong sourceUserPersonalSiteGroupId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"user-personal-site-group-id\"));\n\n\t\tportletDataContext.setSourceUserPersonalSiteGroupId(\n\t\t\tsourceUserPersonalSiteGroupId);\n\n\t\t// Layout and layout set prototype\n\n\t\tString layoutSetPrototypeUuid = _layoutsElement.attributeValue(\n\t\t\t\"layout-set-prototype-uuid\");\n\n\t\tString larType = _headerElement.attributeValue(\"type\");\n\n\t\tif (group.isLayoutPrototype() && larType.equals(\"layout-prototype\")) {\n\t\t\tdeleteMissingLayouts = false;\n\n\t\t\tLayoutPrototype layoutPrototype =\n\t\t\t\tLayoutPrototypeLocalServiceUtil.getLayoutPrototype(\n\t\t\t\t\tgroup.getClassPK());\n\n\t\t\tString layoutPrototypeUuid = GetterUtil.getString(\n\t\t\t\t_headerElement.attributeValue(\"type-uuid\"));\n\n\t\t\tLayoutPrototype existingLayoutPrototype = null;\n\n\t\t\tif (Validator.isNotNull(layoutPrototypeUuid)) {\n\t\t\t\ttry {\n\t\t\t\t\texistingLayoutPrototype =\n\t\t\t\t\t\tLayoutPrototypeLocalServiceUtil.\n\t\t\t\t\t\t\tgetLayoutPrototypeByUuidAndCompanyId(\n\t\t\t\t\t\t\t\tlayoutPrototypeUuid, companyId);\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchLayoutPrototypeException nslpe) {\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (existingLayoutPrototype == null) {\n\t\t\t\tList<Layout> layouts =\n\t\t\t\t\tLayoutLocalServiceUtil.getLayoutsByLayoutPrototypeUuid(\n\t\t\t\t\t\tlayoutPrototype.getUuid());\n\n\t\t\t\tlayoutPrototype.setUuid(layoutPrototypeUuid);\n\n\t\t\t\tLayoutPrototypeLocalServiceUtil.updateLayoutPrototype(\n\t\t\t\t\tlayoutPrototype);\n\n\t\t\t\tfor (Layout layout : layouts) {\n\t\t\t\t\tlayout.setLayoutPrototypeUuid(layoutPrototypeUuid);\n\n\t\t\t\t\tLayoutLocalServiceUtil.updateLayout(layout);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (group.isLayoutSetPrototype() &&\n\t\t\t\t larType.equals(\"layout-set-prototype\")) {\n\n\t\t\tLayoutSetPrototype layoutSetPrototype =\n\t\t\t\tLayoutSetPrototypeLocalServiceUtil.getLayoutSetPrototype(\n\t\t\t\t\tgroup.getClassPK());\n\n\t\t\tString importedLayoutSetPrototypeUuid = GetterUtil.getString(\n\t\t\t\t_headerElement.attributeValue(\"type-uuid\"));\n\n\t\t\tLayoutSetPrototype existingLayoutSetPrototype = null;\n\n\t\t\tif (Validator.isNotNull(importedLayoutSetPrototypeUuid)) {\n\t\t\t\ttry {\n\t\t\t\t\texistingLayoutSetPrototype =\n\t\t\t\t\t\tLayoutSetPrototypeLocalServiceUtil.\n\t\t\t\t\t\t\tgetLayoutSetPrototypeByUuidAndCompanyId(\n\t\t\t\t\t\t\t\timportedLayoutSetPrototypeUuid, companyId);\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchLayoutSetPrototypeException nslspe) {\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (existingLayoutSetPrototype == null) {\n\t\t\t\tList<LayoutSet> layoutSets =\n\t\t\t\t\tLayoutSetLocalServiceUtil.\n\t\t\t\t\t\tgetLayoutSetsByLayoutSetPrototypeUuid(\n\t\t\t\t\t\t\tlayoutSetPrototype.getUuid());\n\n\t\t\t\tlayoutSetPrototype.setUuid(importedLayoutSetPrototypeUuid);\n\n\t\t\t\tLayoutSetPrototypeLocalServiceUtil.updateLayoutSetPrototype(\n\t\t\t\t\tlayoutSetPrototype);\n\n\t\t\t\tfor (LayoutSet curLayoutSet : layoutSets) {\n\t\t\t\t\tcurLayoutSet.setLayoutSetPrototypeUuid(\n\t\t\t\t\t\timportedLayoutSetPrototypeUuid);\n\n\t\t\t\t\tLayoutSetLocalServiceUtil.updateLayoutSet(curLayoutSet);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (larType.equals(\"layout-set-prototype\")) {\n\t\t\tlayoutSetPrototypeUuid = GetterUtil.getString(\n\t\t\t\t_headerElement.attributeValue(\"type-uuid\"));\n\t\t}\n\n\t\tif (Validator.isNotNull(layoutSetPrototypeUuid)) {\n\t\t\tlayoutSet.setLayoutSetPrototypeUuid(layoutSetPrototypeUuid);\n\t\t\tlayoutSet.setLayoutSetPrototypeLinkEnabled(\n\t\t\t\tlayoutSetPrototypeLinkEnabled);\n\n\t\t\tLayoutSetLocalServiceUtil.updateLayoutSet(layoutSet);\n\t\t}\n\n\t\t// Look and feel\n\n\t\tif (importLogo) {\n\t\t\tString logoPath = _headerElement.attributeValue(\"logo-path\");\n\n\t\t\tbyte[] iconBytes = portletDataContext.getZipEntryAsByteArray(\n\t\t\t\tlogoPath);\n\n\t\t\tif (ArrayUtil.isNotEmpty(iconBytes)) {\n\t\t\t\tLayoutSetLocalServiceUtil.updateLogo(\n\t\t\t\t\tgroupId, privateLayout, true, iconBytes);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tLayoutSetLocalServiceUtil.updateLogo(\n\t\t\t\t\tgroupId, privateLayout, false, (File)null);\n\t\t\t}\n\t\t}\n\n\t\t_themeImporter.importTheme(portletDataContext, layoutSet);\n\n\t\tif (importLayoutSetSettings) {\n\t\t\tString settings = GetterUtil.getString(\n\t\t\t\t_headerElement.elementText(\"settings\"));\n\n\t\t\tLayoutSetLocalServiceUtil.updateSettings(\n\t\t\t\tgroupId, privateLayout, settings);\n\t\t}\n\n\t\t// Read asset tags, expando tables, locks, and permissions to make them\n\t\t// available to the data handlers through the context\n\n\t\tElement portletsElement = _rootElement.element(\"portlets\");\n\n\t\tList<Element> portletElements = portletsElement.elements(\"portlet\");\n\n\t\tif (importPermissions) {\n\t\t\tfor (Element portletElement : portletElements) {\n\t\t\t\tString portletPath = portletElement.attributeValue(\"path\");\n\n\t\t\t\tDocument portletDocument = SAXReaderUtil.read(\n\t\t\t\t\tportletDataContext.getZipEntryAsString(portletPath));\n\n\t\t\t\t_permissionImporter.checkRoles(\n\t\t\t\t\tlayoutCache, companyId, groupId, userId,\n\t\t\t\t\tportletDocument.getRootElement());\n\t\t\t}\n\n\t\t\t_permissionImporter.readPortletDataPermissions(portletDataContext);\n\t\t}\n\n\t\t_portletImporter.readAssetTags(portletDataContext);\n\t\t_portletImporter.readExpandoTables(portletDataContext);\n\t\t_portletImporter.readLocks(portletDataContext);\n\n\t\t// Layouts\n\n\t\tList<Layout> previousLayouts = LayoutUtil.findByG_P(\n\t\t\tgroupId, privateLayout);\n\n\t\t// Remove layouts that were deleted from the layout set prototype\n\n\t\tif (Validator.isNotNull(layoutSetPrototypeUuid) &&\n\t\t\tlayoutSetPrototypeLinkEnabled) {\n\n\t\t\tLayoutSetPrototype layoutSetPrototype =\n\t\t\t\tLayoutSetPrototypeLocalServiceUtil.\n\t\t\t\t\tgetLayoutSetPrototypeByUuidAndCompanyId(\n\t\t\t\t\t\tlayoutSetPrototypeUuid, companyId);\n\n\t\t\tfor (Layout layout : previousLayouts) {\n\t\t\t\tString sourcePrototypeLayoutUuid =\n\t\t\t\t\tlayout.getSourcePrototypeLayoutUuid();\n\n\t\t\t\tif (Validator.isNull(layout.getSourcePrototypeLayoutUuid())) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tLayout sourcePrototypeLayout = LayoutUtil.fetchByUUID_G_P(\n\t\t\t\t\tsourcePrototypeLayoutUuid, layoutSetPrototype.getGroupId(),\n\t\t\t\t\ttrue);\n\n\t\t\t\tif (sourcePrototypeLayout == null) {\n\t\t\t\t\tLayoutLocalServiceUtil.deleteLayout(\n\t\t\t\t\t\tlayout, false, serviceContext);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tList<String> sourceLayoutsUuids = new ArrayList<String>();\n\t\tList<Layout> newLayouts = new ArrayList<Layout>();\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\tif (_layoutElements.size() > 0) {\n\t\t\t\t_log.debug(\"Importing layouts\");\n\t\t\t}\n\t\t}\n\n\t\tfor (Element layoutElement : _layoutElements) {\n\t\t\timportLayout(\n\t\t\t\tportletDataContext, sourceLayoutsUuids, newLayouts,\n\t\t\t\tlayoutElement);\n\t\t}\n\n\t\t// Delete portlet data\n\n\t\tMap<Long, Layout> newLayoutsMap =\n\t\t\t(Map<Long, Layout>)portletDataContext.getNewPrimaryKeysMap(\n\t\t\t\tLayout.class + \".layout\");\n\n\t\tif (deletePortletData) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\tif (portletElements.size() > 0) {\n\t\t\t\t\t_log.debug(\"Deleting portlet data\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (Element portletElement : portletElements) {\n\t\t\t\tString portletId = portletElement.attributeValue(\"portlet-id\");\n\t\t\t\tlong layoutId = GetterUtil.getLong(\n\t\t\t\t\tportletElement.attributeValue(\"layout-id\"));\n\n\t\t\t\tLayout layout = newLayoutsMap.get(layoutId);\n\n\t\t\t\tlong plid = layout.getPlid();\n\n\t\t\t\tportletDataContext.setPlid(plid);\n\n\t\t\t\t_portletImporter.deletePortletData(\n\t\t\t\t\tportletDataContext, portletId, plid);\n\t\t\t}\n\t\t}\n\n\t\t// Import portlets\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\tif (portletElements.size() > 0) {\n\t\t\t\t_log.debug(\"Importing portlets\");\n\t\t\t}\n\t\t}\n\n\t\tfor (Element portletElement : portletElements) {\n\t\t\tString portletPath = portletElement.attributeValue(\"path\");\n\t\t\tString portletId = portletElement.attributeValue(\"portlet-id\");\n\t\t\tlong layoutId = GetterUtil.getLong(\n\t\t\t\tportletElement.attributeValue(\"layout-id\"));\n\t\t\tlong oldPlid = GetterUtil.getLong(\n\t\t\t\tportletElement.attributeValue(\"old-plid\"));\n\n\t\t\tPortlet portlet = PortletLocalServiceUtil.getPortletById(\n\t\t\t\tportletDataContext.getCompanyId(), portletId);\n\n\t\t\tif (!portlet.isActive() || portlet.isUndeployedPortlet()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tLayout layout = newLayoutsMap.get(layoutId);\n\n\t\t\tlong plid = LayoutConstants.DEFAULT_PLID;\n\n\t\t\tif (layout != null) {\n\t\t\t\tplid = layout.getPlid();\n\t\t\t}\n\n\t\t\tportletDataContext.setPlid(plid);\n\t\t\tportletDataContext.setOldPlid(oldPlid);\n\n\t\t\tDocument portletDocument = SAXReaderUtil.read(\n\t\t\t\tportletDataContext.getZipEntryAsString(portletPath));\n\n\t\t\tportletElement = portletDocument.getRootElement();\n\n\t\t\t// The order of the import is important. You must always import the\n\t\t\t// portlet preferences first, then the portlet data, then the\n\t\t\t// portlet permissions. The import of the portlet data assumes that\n\t\t\t// portlet preferences already exist.\n\n\t\t\tsetPortletScope(portletDataContext, portletElement);\n\n\t\t\tlong portletPreferencesGroupId = groupId;\n\n\t\t\tElement portletDataElement = portletElement.element(\"portlet-data\");\n\n\t\t\tboolean[] importPortletControls =\n\t\t\t\tExportImportHelperUtil.getImportPortletControls(\n\t\t\t\t\tcompanyId, portletId, parameterMap, portletDataElement,\n\t\t\t\t\tmanifestSummary);\n\n\t\t\ttry {\n\t\t\t\tif (layout != null) {\n\t\t\t\t\tportletPreferencesGroupId = layout.getGroupId();\n\t\t\t\t}\n\n\t\t\t\t// Portlet preferences\n\n\t\t\t\t_portletImporter.importPortletPreferences(\n\t\t\t\t\tportletDataContext, layoutSet.getCompanyId(),\n\t\t\t\t\tportletPreferencesGroupId, layout, null, portletElement,\n\t\t\t\t\tfalse, importPortletControls[0], importPortletControls[1],\n\t\t\t\t\timportPortletControls[2], importPortletControls[3]);\n\n\t\t\t\t// Portlet data\n\n\t\t\t\tif (importPortletControls[1]) {\n\t\t\t\t\t_portletImporter.importPortletData(\n\t\t\t\t\t\tportletDataContext, portletId, plid,\n\t\t\t\t\t\tportletDataElement);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\t_portletImporter.resetPortletScope(\n\t\t\t\t\tportletDataContext, portletPreferencesGroupId);\n\t\t\t}\n\n\t\t\t// Portlet permissions\n\n\t\t\tif (importPermissions) {\n\t\t\t\t_permissionImporter.importPortletPermissions(\n\t\t\t\t\tlayoutCache, companyId, groupId, userId, layout,\n\t\t\t\t\tportletElement, portletId);\n\t\t\t}\n\n\t\t\t// Archived setups\n\n\t\t\t_portletImporter.importPortletPreferences(\n\t\t\t\tportletDataContext, layoutSet.getCompanyId(), groupId, null,\n\t\t\t\tnull, portletElement, false, importPortletControls[0],\n\t\t\t\timportPortletControls[1], importPortletControls[2],\n\t\t\t\timportPortletControls[3]);\n\t\t}\n\n\t\tif (importPermissions) {\n\t\t\tif (userId > 0) {\n\t\t\t\tIndexer indexer = IndexerRegistryUtil.nullSafeGetIndexer(\n\t\t\t\t\tUser.class);\n\n\t\t\t\tindexer.reindex(userId);\n\t\t\t}\n\t\t}\n\n\t\t// Asset links\n\n\t\t_portletImporter.readAssetLinks(portletDataContext);\n\n\t\t// Delete missing layouts\n\n\t\tif (deleteMissingLayouts) {\n\t\t\tdeleteMissingLayouts(\n\t\t\t\tsourceLayoutsUuids, previousLayouts, serviceContext);\n\t\t}\n\n\t\t// Page count\n\n\t\tlayoutSet = LayoutSetLocalServiceUtil.updatePageCount(\n\t\t\tgroupId, privateLayout);\n\n\t\t// Site\n\n\t\tGroupLocalServiceUtil.updateSite(groupId, true);\n\n\t\t// Last merge time must be the same for merged layouts and the layout\n\t\t// set\n\n\t\tlong lastMergeTime = System.currentTimeMillis();\n\n\t\tfor (Layout layout : newLayouts) {\n\t\t\tlayout = LayoutLocalServiceUtil.getLayout(layout.getPlid());\n\n\t\t\tboolean modifiedTypeSettingsProperties = false;\n\n\t\t\tUnicodeProperties typeSettingsProperties =\n\t\t\t\tlayout.getTypeSettingsProperties();\n\n\t\t\t// Journal article layout type\n\n\t\t\tString articleId = typeSettingsProperties.getProperty(\"article-id\");\n\n\t\t\tif (Validator.isNotNull(articleId)) {\n\t\t\t\tMap<String, String> articleIds =\n\t\t\t\t\t(Map<String, String>)portletDataContext.\n\t\t\t\t\t\tgetNewPrimaryKeysMap(\n\t\t\t\t\t\t\tJournalArticle.class + \".articleId\");\n\n\t\t\t\ttypeSettingsProperties.setProperty(\n\t\t\t\t\t\"article-id\",\n\t\t\t\t\tMapUtil.getString(articleIds, articleId, articleId));\n\n\t\t\t\tmodifiedTypeSettingsProperties = true;\n\t\t\t}\n\n\t\t\t// Last merge time for layout\n\n\t\t\tif (layoutsImportMode.equals(\n\t\t\t\t\tPortletDataHandlerKeys.\n\t\t\t\t\t\tLAYOUTS_IMPORT_MODE_CREATED_FROM_PROTOTYPE)) {\n\n\t\t\t\ttypeSettingsProperties.setProperty(\n\t\t\t\t\tSites.LAST_MERGE_TIME, String.valueOf(lastMergeTime));\n\n\t\t\t\tmodifiedTypeSettingsProperties = true;\n\t\t\t}\n\n\t\t\tif (modifiedTypeSettingsProperties) {\n\t\t\t\tLayoutUtil.update(layout);\n\t\t\t}\n\t\t}\n\n\t\t// Last merge time for layout set\n\n\t\tif (layoutsImportMode.equals(\n\t\t\t\tPortletDataHandlerKeys.\n\t\t\t\t\tLAYOUTS_IMPORT_MODE_CREATED_FROM_PROTOTYPE)) {\n\n\t\t\t// The layout set may be stale because LayoutUtil#update(layout)\n\t\t\t// triggers LayoutSetPrototypeLayoutListener and that may have\n\t\t\t// updated this layout set\n\n\t\t\tlayoutSet = LayoutSetLocalServiceUtil.getLayoutSet(\n\t\t\t\tlayoutSet.getLayoutSetId());\n\n\t\t\tUnicodeProperties settingsProperties =\n\t\t\t\tlayoutSet.getSettingsProperties();\n\n\t\t\tString mergeFailFriendlyURLLayouts =\n\t\t\t\tsettingsProperties.getProperty(\n\t\t\t\t\tSites.MERGE_FAIL_FRIENDLY_URL_LAYOUTS);\n\n\t\t\tif (Validator.isNull(mergeFailFriendlyURLLayouts)) {\n\t\t\t\tsettingsProperties.setProperty(\n\t\t\t\t\tSites.LAST_MERGE_TIME, String.valueOf(lastMergeTime));\n\n\t\t\t\tLayoutSetLocalServiceUtil.updateLayoutSet(layoutSet);\n\t\t\t}\n\t\t}\n\n\t\t// Deletion system events\n\n\t\t_deletionSystemEventImporter.importDeletionSystemEvents(\n\t\t\tportletDataContext);\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\"Importing layouts takes \" + stopWatch.getTime() + \" ms\");\n\t\t}\n\n\t\tzipReader.close();\n\t}","id":15793,"modified_method":"protected void doImportLayouts(\n\t\t\tlong userId, long groupId, boolean privateLayout,\n\t\t\tMap<String, String[]> parameterMap, File file)\n\t\tthrows Exception {\n\n\t\tboolean deleteMissingLayouts = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.DELETE_MISSING_LAYOUTS,\n\t\t\tBoolean.TRUE.booleanValue());\n\t\tboolean deletePortletData = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.DELETE_PORTLET_DATA);\n\t\tboolean importPermissions = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.PERMISSIONS);\n\t\tboolean importLogo = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.LOGO);\n\t\tboolean importLayoutSetSettings = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.LAYOUT_SET_SETTINGS);\n\n\t\tboolean layoutSetPrototypeLinkEnabled = MapUtil.getBoolean(\n\t\t\tparameterMap,\n\t\t\tPortletDataHandlerKeys.LAYOUT_SET_PROTOTYPE_LINK_ENABLED, true);\n\n\t\tGroup group = GroupLocalServiceUtil.getGroup(groupId);\n\n\t\tif (group.isLayoutSetPrototype()) {\n\t\t\tlayoutSetPrototypeLinkEnabled = false;\n\t\t}\n\n\t\tString layoutsImportMode = MapUtil.getString(\n\t\t\tparameterMap, PortletDataHandlerKeys.LAYOUTS_IMPORT_MODE,\n\t\t\tPortletDataHandlerKeys.LAYOUTS_IMPORT_MODE_MERGE_BY_LAYOUT_UUID);\n\t\tString userIdStrategy = MapUtil.getString(\n\t\t\tparameterMap, PortletDataHandlerKeys.USER_ID_STRATEGY);\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Delete portlet data \" + deletePortletData);\n\t\t\t_log.debug(\"Import permissions \" + importPermissions);\n\t\t}\n\n\t\tStopWatch stopWatch = null;\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\tstopWatch = new StopWatch();\n\n\t\t\tstopWatch.start();\n\t\t}\n\n\t\tLayoutCache layoutCache = new LayoutCache();\n\n\t\tLayoutSet layoutSet = LayoutSetLocalServiceUtil.getLayoutSet(\n\t\t\tgroupId, privateLayout);\n\n\t\tlong companyId = layoutSet.getCompanyId();\n\n\t\tUser user = UserUtil.findByPrimaryKey(userId);\n\n\t\tServiceContext serviceContext =\n\t\t\tServiceContextThreadLocal.getServiceContext();\n\n\t\tif (serviceContext == null) {\n\t\t\tserviceContext = new ServiceContext();\n\n\t\t\tserviceContext.setCompanyId(companyId);\n\t\t\tserviceContext.setSignedIn(false);\n\t\t\tserviceContext.setUserId(userId);\n\n\t\t\tServiceContextThreadLocal.pushServiceContext(serviceContext);\n\t\t}\n\n\t\tUserIdStrategy strategy = _portletImporter.getUserIdStrategy(\n\t\t\tuser, userIdStrategy);\n\n\t\tManifestSummary manifestSummary =\n\t\t\tExportImportHelperUtil.getManifestSummary(\n\t\t\t\tuserId, groupId, parameterMap, file);\n\n\t\tif (BackgroundTaskThreadLocal.hasBackgroundTask()) {\n\t\t\tPortletDataHandlerStatusMessageSenderUtil.sendStatusMessage(\n\t\t\t\t\"layout\", manifestSummary);\n\t\t}\n\n\t\tZipReader zipReader = ZipReaderFactoryUtil.getZipReader(file);\n\n\t\tPortletDataContext portletDataContext =\n\t\t\tPortletDataContextFactoryUtil.createImportPortletDataContext(\n\t\t\t\tcompanyId, groupId, parameterMap, strategy, zipReader);\n\n\t\tportletDataContext.setManifestSummary(manifestSummary);\n\t\tportletDataContext.setPortetDataContextListener(\n\t\t\tnew PortletDataContextListenerImpl(portletDataContext));\n\n\t\tportletDataContext.setPrivateLayout(privateLayout);\n\n\t\t// Zip\n\n\t\tvalidateFile(portletDataContext);\n\n\t\t// Company id\n\n\t\tlong sourceCompanyId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"company-id\"));\n\n\t\tportletDataContext.setSourceCompanyId(sourceCompanyId);\n\n\t\t// Company group id\n\n\t\tlong sourceCompanyGroupId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"company-group-id\"));\n\n\t\tportletDataContext.setSourceCompanyGroupId(sourceCompanyGroupId);\n\n\t\t// Group id\n\n\t\tlong sourceGroupId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"group-id\"));\n\n\t\tportletDataContext.setSourceGroupId(sourceGroupId);\n\n\t\t// User personal site group id\n\n\t\tlong sourceUserPersonalSiteGroupId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"user-personal-site-group-id\"));\n\n\t\tportletDataContext.setSourceUserPersonalSiteGroupId(\n\t\t\tsourceUserPersonalSiteGroupId);\n\n\t\t// Layout and layout set prototype\n\n\t\tString layoutSetPrototypeUuid = _layoutsElement.attributeValue(\n\t\t\t\"layout-set-prototype-uuid\");\n\n\t\tString larType = _headerElement.attributeValue(\"type\");\n\n\t\tif (group.isLayoutPrototype() && larType.equals(\"layout-prototype\")) {\n\t\t\tdeleteMissingLayouts = false;\n\n\t\t\tLayoutPrototype layoutPrototype =\n\t\t\t\tLayoutPrototypeLocalServiceUtil.getLayoutPrototype(\n\t\t\t\t\tgroup.getClassPK());\n\n\t\t\tString layoutPrototypeUuid = GetterUtil.getString(\n\t\t\t\t_headerElement.attributeValue(\"type-uuid\"));\n\n\t\t\tLayoutPrototype existingLayoutPrototype = null;\n\n\t\t\tif (Validator.isNotNull(layoutPrototypeUuid)) {\n\t\t\t\ttry {\n\t\t\t\t\texistingLayoutPrototype =\n\t\t\t\t\t\tLayoutPrototypeLocalServiceUtil.\n\t\t\t\t\t\t\tgetLayoutPrototypeByUuidAndCompanyId(\n\t\t\t\t\t\t\t\tlayoutPrototypeUuid, companyId);\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchLayoutPrototypeException nslpe) {\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (existingLayoutPrototype == null) {\n\t\t\t\tList<Layout> layouts =\n\t\t\t\t\tLayoutLocalServiceUtil.getLayoutsByLayoutPrototypeUuid(\n\t\t\t\t\t\tlayoutPrototype.getUuid());\n\n\t\t\t\tlayoutPrototype.setUuid(layoutPrototypeUuid);\n\n\t\t\t\tLayoutPrototypeLocalServiceUtil.updateLayoutPrototype(\n\t\t\t\t\tlayoutPrototype);\n\n\t\t\t\tfor (Layout layout : layouts) {\n\t\t\t\t\tlayout.setLayoutPrototypeUuid(layoutPrototypeUuid);\n\n\t\t\t\t\tLayoutLocalServiceUtil.updateLayout(layout);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (group.isLayoutSetPrototype() &&\n\t\t\t\t larType.equals(\"layout-set-prototype\")) {\n\n\t\t\tLayoutSetPrototype layoutSetPrototype =\n\t\t\t\tLayoutSetPrototypeLocalServiceUtil.getLayoutSetPrototype(\n\t\t\t\t\tgroup.getClassPK());\n\n\t\t\tString importedLayoutSetPrototypeUuid = GetterUtil.getString(\n\t\t\t\t_headerElement.attributeValue(\"type-uuid\"));\n\n\t\t\tLayoutSetPrototype existingLayoutSetPrototype = null;\n\n\t\t\tif (Validator.isNotNull(importedLayoutSetPrototypeUuid)) {\n\t\t\t\ttry {\n\t\t\t\t\texistingLayoutSetPrototype =\n\t\t\t\t\t\tLayoutSetPrototypeLocalServiceUtil.\n\t\t\t\t\t\t\tgetLayoutSetPrototypeByUuidAndCompanyId(\n\t\t\t\t\t\t\t\timportedLayoutSetPrototypeUuid, companyId);\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchLayoutSetPrototypeException nslspe) {\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (existingLayoutSetPrototype == null) {\n\t\t\t\tList<LayoutSet> layoutSets =\n\t\t\t\t\tLayoutSetLocalServiceUtil.\n\t\t\t\t\t\tgetLayoutSetsByLayoutSetPrototypeUuid(\n\t\t\t\t\t\t\tlayoutSetPrototype.getUuid());\n\n\t\t\t\tlayoutSetPrototype.setUuid(importedLayoutSetPrototypeUuid);\n\n\t\t\t\tLayoutSetPrototypeLocalServiceUtil.updateLayoutSetPrototype(\n\t\t\t\t\tlayoutSetPrototype);\n\n\t\t\t\tfor (LayoutSet curLayoutSet : layoutSets) {\n\t\t\t\t\tcurLayoutSet.setLayoutSetPrototypeUuid(\n\t\t\t\t\t\timportedLayoutSetPrototypeUuid);\n\n\t\t\t\t\tLayoutSetLocalServiceUtil.updateLayoutSet(curLayoutSet);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (larType.equals(\"layout-set-prototype\")) {\n\t\t\tlayoutSetPrototypeUuid = GetterUtil.getString(\n\t\t\t\t_headerElement.attributeValue(\"type-uuid\"));\n\t\t}\n\n\t\tif (Validator.isNotNull(layoutSetPrototypeUuid)) {\n\t\t\tlayoutSet.setLayoutSetPrototypeUuid(layoutSetPrototypeUuid);\n\t\t\tlayoutSet.setLayoutSetPrototypeLinkEnabled(\n\t\t\t\tlayoutSetPrototypeLinkEnabled);\n\n\t\t\tLayoutSetLocalServiceUtil.updateLayoutSet(layoutSet);\n\t\t}\n\n\t\t// Look and feel\n\n\t\tif (importLogo) {\n\t\t\tString logoPath = _headerElement.attributeValue(\"logo-path\");\n\n\t\t\tbyte[] iconBytes = portletDataContext.getZipEntryAsByteArray(\n\t\t\t\tlogoPath);\n\n\t\t\tif (ArrayUtil.isNotEmpty(iconBytes)) {\n\t\t\t\tLayoutSetLocalServiceUtil.updateLogo(\n\t\t\t\t\tgroupId, privateLayout, true, iconBytes);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tLayoutSetLocalServiceUtil.updateLogo(\n\t\t\t\t\tgroupId, privateLayout, false, (File)null);\n\t\t\t}\n\t\t}\n\n\t\t_themeImporter.importTheme(portletDataContext, layoutSet);\n\n\t\tif (importLayoutSetSettings) {\n\t\t\tString settings = GetterUtil.getString(\n\t\t\t\t_headerElement.elementText(\"settings\"));\n\n\t\t\tLayoutSetLocalServiceUtil.updateSettings(\n\t\t\t\tgroupId, privateLayout, settings);\n\t\t}\n\n\t\t// Read asset tags, expando tables, locks, and permissions to make them\n\t\t// available to the data handlers through the context\n\n\t\tElement portletsElement = _rootElement.element(\"portlets\");\n\n\t\tList<Element> portletElements = portletsElement.elements(\"portlet\");\n\n\t\tif (importPermissions) {\n\t\t\tfor (Element portletElement : portletElements) {\n\t\t\t\tString portletPath = portletElement.attributeValue(\"path\");\n\n\t\t\t\tDocument portletDocument = SAXReaderUtil.read(\n\t\t\t\t\tportletDataContext.getZipEntryAsString(portletPath));\n\n\t\t\t\t_permissionImporter.checkRoles(\n\t\t\t\t\tlayoutCache, companyId, groupId, userId,\n\t\t\t\t\tportletDocument.getRootElement());\n\t\t\t}\n\n\t\t\t_permissionImporter.readPortletDataPermissions(portletDataContext);\n\t\t}\n\n\t\t_portletImporter.readAssetTags(portletDataContext);\n\t\t_portletImporter.readExpandoTables(portletDataContext);\n\t\t_portletImporter.readLocks(portletDataContext);\n\n\t\t// Layouts\n\n\t\tList<Layout> previousLayouts = LayoutUtil.findByG_P(\n\t\t\tgroupId, privateLayout);\n\n\t\t// Remove layouts that were deleted from the layout set prototype\n\n\t\tif (Validator.isNotNull(layoutSetPrototypeUuid) &&\n\t\t\tlayoutSetPrototypeLinkEnabled) {\n\n\t\t\tLayoutSetPrototype layoutSetPrototype =\n\t\t\t\tLayoutSetPrototypeLocalServiceUtil.\n\t\t\t\t\tgetLayoutSetPrototypeByUuidAndCompanyId(\n\t\t\t\t\t\tlayoutSetPrototypeUuid, companyId);\n\n\t\t\tfor (Layout layout : previousLayouts) {\n\t\t\t\tString sourcePrototypeLayoutUuid =\n\t\t\t\t\tlayout.getSourcePrototypeLayoutUuid();\n\n\t\t\t\tif (Validator.isNull(layout.getSourcePrototypeLayoutUuid())) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tLayout sourcePrototypeLayout = LayoutUtil.fetchByUUID_G_P(\n\t\t\t\t\tsourcePrototypeLayoutUuid, layoutSetPrototype.getGroupId(),\n\t\t\t\t\ttrue);\n\n\t\t\t\tif (sourcePrototypeLayout == null) {\n\t\t\t\t\tLayoutLocalServiceUtil.deleteLayout(\n\t\t\t\t\t\tlayout, false, serviceContext);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tList<String> sourceLayoutsUuids = new ArrayList<String>();\n\t\tList<Layout> newLayouts = new ArrayList<Layout>();\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\tif (_layoutElements.size() > 0) {\n\t\t\t\t_log.debug(\"Importing layouts\");\n\t\t\t}\n\t\t}\n\n\t\tfor (Element layoutElement : _layoutElements) {\n\t\t\timportLayout(\n\t\t\t\tportletDataContext, sourceLayoutsUuids, newLayouts,\n\t\t\t\tlayoutElement);\n\t\t}\n\n\t\t// Delete portlet data\n\n\t\tMap<Long, Layout> newLayoutsMap =\n\t\t\t(Map<Long, Layout>)portletDataContext.getNewPrimaryKeysMap(\n\t\t\t\tLayout.class + \".layout\");\n\n\t\tif (deletePortletData) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\tif (portletElements.size() > 0) {\n\t\t\t\t\t_log.debug(\"Deleting portlet data\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (Element portletElement : portletElements) {\n\t\t\t\tString portletId = portletElement.attributeValue(\"portlet-id\");\n\t\t\t\tlong layoutId = GetterUtil.getLong(\n\t\t\t\t\tportletElement.attributeValue(\"layout-id\"));\n\n\t\t\t\tLayout layout = newLayoutsMap.get(layoutId);\n\n\t\t\t\tlong plid = layout.getPlid();\n\n\t\t\t\tportletDataContext.setPlid(plid);\n\n\t\t\t\t_portletImporter.deletePortletData(\n\t\t\t\t\tportletDataContext, portletId, plid);\n\t\t\t}\n\t\t}\n\n\t\t// Import portlets\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\tif (portletElements.size() > 0) {\n\t\t\t\t_log.debug(\"Importing portlets\");\n\t\t\t}\n\t\t}\n\n\t\tfor (Element portletElement : portletElements) {\n\t\t\tString portletPath = portletElement.attributeValue(\"path\");\n\t\t\tString portletId = portletElement.attributeValue(\"portlet-id\");\n\t\t\tlong layoutId = GetterUtil.getLong(\n\t\t\t\tportletElement.attributeValue(\"layout-id\"));\n\t\t\tlong oldPlid = GetterUtil.getLong(\n\t\t\t\tportletElement.attributeValue(\"old-plid\"));\n\n\t\t\tPortlet portlet = PortletLocalServiceUtil.getPortletById(\n\t\t\t\tportletDataContext.getCompanyId(), portletId);\n\n\t\t\tif (!portlet.isActive() || portlet.isUndeployedPortlet()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tLayout layout = newLayoutsMap.get(layoutId);\n\n\t\t\tlong plid = LayoutConstants.DEFAULT_PLID;\n\n\t\t\tif (layout != null) {\n\t\t\t\tplid = layout.getPlid();\n\t\t\t}\n\n\t\t\tportletDataContext.setPlid(plid);\n\t\t\tportletDataContext.setOldPlid(oldPlid);\n\n\t\t\tDocument portletDocument = SAXReaderUtil.read(\n\t\t\t\tportletDataContext.getZipEntryAsString(portletPath));\n\n\t\t\tportletElement = portletDocument.getRootElement();\n\n\t\t\t// The order of the import is important. You must always import the\n\t\t\t// portlet preferences first, then the portlet data, then the\n\t\t\t// portlet permissions. The import of the portlet data assumes that\n\t\t\t// portlet preferences already exist.\n\n\t\t\tsetPortletScope(portletDataContext, portletElement);\n\n\t\t\tlong portletPreferencesGroupId = groupId;\n\n\t\t\tElement portletDataElement = portletElement.element(\"portlet-data\");\n\n\t\t\tMap<String, Boolean> importPortletControlsMap =\n\t\t\t\tExportImportHelperUtil.getImportPortletControlsMap(\n\t\t\t\t\tcompanyId, portletId, parameterMap, portletDataElement,\n\t\t\t\t\tmanifestSummary);\n\n\t\t\ttry {\n\t\t\t\tif (layout != null) {\n\t\t\t\t\tportletPreferencesGroupId = layout.getGroupId();\n\t\t\t\t}\n\n\t\t\t\t// Portlet preferences\n\n\t\t\t\t_portletImporter.importPortletPreferences(\n\t\t\t\t\tportletDataContext, layoutSet.getCompanyId(),\n\t\t\t\t\tportletPreferencesGroupId, layout, null, portletElement,\n\t\t\t\t\tfalse,\n\t\t\t\t\timportPortletControlsMap.get(\n\t\t\t\t\t\tPortletDataHandlerKeys.PORTLET_ARCHIVED_SETUPS),\n\t\t\t\t\timportPortletControlsMap.get(\n\t\t\t\t\t\tPortletDataHandlerKeys.PORTLET_DATA),\n\t\t\t\t\timportPortletControlsMap.get(\n\t\t\t\t\t\tPortletDataHandlerKeys.PORTLET_SETUP),\n\t\t\t\t\timportPortletControlsMap.get(\n\t\t\t\t\t\tPortletDataHandlerKeys.PORTLET_USER_PREFERENCES));\n\n\t\t\t\t// Portlet data\n\n\t\t\t\tif (importPortletControlsMap.get(\n\t\t\t\t\t\tPortletDataHandlerKeys.PORTLET_DATA)) {\n\n\t\t\t\t\t_portletImporter.importPortletData(\n\t\t\t\t\t\tportletDataContext, portletId, plid,\n\t\t\t\t\t\tportletDataElement);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\t_portletImporter.resetPortletScope(\n\t\t\t\t\tportletDataContext, portletPreferencesGroupId);\n\t\t\t}\n\n\t\t\t// Portlet permissions\n\n\t\t\tif (importPermissions) {\n\t\t\t\t_permissionImporter.importPortletPermissions(\n\t\t\t\t\tlayoutCache, companyId, groupId, userId, layout,\n\t\t\t\t\tportletElement, portletId);\n\t\t\t}\n\n\t\t\t// Archived setups\n\n\t\t\t_portletImporter.importPortletPreferences(\n\t\t\t\tportletDataContext, layoutSet.getCompanyId(), groupId, null,\n\t\t\t\tnull, portletElement, false,\n\t\t\t\timportPortletControlsMap.get(\n\t\t\t\t\tPortletDataHandlerKeys.PORTLET_ARCHIVED_SETUPS),\n\t\t\t\timportPortletControlsMap.get(\n\t\t\t\t\tPortletDataHandlerKeys.PORTLET_DATA),\n\t\t\t\timportPortletControlsMap.get(\n\t\t\t\t\tPortletDataHandlerKeys.PORTLET_SETUP),\n\t\t\t\timportPortletControlsMap.get(\n\t\t\t\t\tPortletDataHandlerKeys.PORTLET_USER_PREFERENCES));\n\t\t}\n\n\t\tif (importPermissions) {\n\t\t\tif (userId > 0) {\n\t\t\t\tIndexer indexer = IndexerRegistryUtil.nullSafeGetIndexer(\n\t\t\t\t\tUser.class);\n\n\t\t\t\tindexer.reindex(userId);\n\t\t\t}\n\t\t}\n\n\t\t// Asset links\n\n\t\t_portletImporter.readAssetLinks(portletDataContext);\n\n\t\t// Delete missing layouts\n\n\t\tif (deleteMissingLayouts) {\n\t\t\tdeleteMissingLayouts(\n\t\t\t\tsourceLayoutsUuids, previousLayouts, serviceContext);\n\t\t}\n\n\t\t// Page count\n\n\t\tlayoutSet = LayoutSetLocalServiceUtil.updatePageCount(\n\t\t\tgroupId, privateLayout);\n\n\t\t// Site\n\n\t\tGroupLocalServiceUtil.updateSite(groupId, true);\n\n\t\t// Last merge time must be the same for merged layouts and the layout\n\t\t// set\n\n\t\tlong lastMergeTime = System.currentTimeMillis();\n\n\t\tfor (Layout layout : newLayouts) {\n\t\t\tlayout = LayoutLocalServiceUtil.getLayout(layout.getPlid());\n\n\t\t\tboolean modifiedTypeSettingsProperties = false;\n\n\t\t\tUnicodeProperties typeSettingsProperties =\n\t\t\t\tlayout.getTypeSettingsProperties();\n\n\t\t\t// Journal article layout type\n\n\t\t\tString articleId = typeSettingsProperties.getProperty(\"article-id\");\n\n\t\t\tif (Validator.isNotNull(articleId)) {\n\t\t\t\tMap<String, String> articleIds =\n\t\t\t\t\t(Map<String, String>)portletDataContext.\n\t\t\t\t\t\tgetNewPrimaryKeysMap(\n\t\t\t\t\t\t\tJournalArticle.class + \".articleId\");\n\n\t\t\t\ttypeSettingsProperties.setProperty(\n\t\t\t\t\t\"article-id\",\n\t\t\t\t\tMapUtil.getString(articleIds, articleId, articleId));\n\n\t\t\t\tmodifiedTypeSettingsProperties = true;\n\t\t\t}\n\n\t\t\t// Last merge time for layout\n\n\t\t\tif (layoutsImportMode.equals(\n\t\t\t\t\tPortletDataHandlerKeys.\n\t\t\t\t\t\tLAYOUTS_IMPORT_MODE_CREATED_FROM_PROTOTYPE)) {\n\n\t\t\t\ttypeSettingsProperties.setProperty(\n\t\t\t\t\tSites.LAST_MERGE_TIME, String.valueOf(lastMergeTime));\n\n\t\t\t\tmodifiedTypeSettingsProperties = true;\n\t\t\t}\n\n\t\t\tif (modifiedTypeSettingsProperties) {\n\t\t\t\tLayoutUtil.update(layout);\n\t\t\t}\n\t\t}\n\n\t\t// Last merge time for layout set\n\n\t\tif (layoutsImportMode.equals(\n\t\t\t\tPortletDataHandlerKeys.\n\t\t\t\t\tLAYOUTS_IMPORT_MODE_CREATED_FROM_PROTOTYPE)) {\n\n\t\t\t// The layout set may be stale because LayoutUtil#update(layout)\n\t\t\t// triggers LayoutSetPrototypeLayoutListener and that may have\n\t\t\t// updated this layout set\n\n\t\t\tlayoutSet = LayoutSetLocalServiceUtil.getLayoutSet(\n\t\t\t\tlayoutSet.getLayoutSetId());\n\n\t\t\tUnicodeProperties settingsProperties =\n\t\t\t\tlayoutSet.getSettingsProperties();\n\n\t\t\tString mergeFailFriendlyURLLayouts =\n\t\t\t\tsettingsProperties.getProperty(\n\t\t\t\t\tSites.MERGE_FAIL_FRIENDLY_URL_LAYOUTS);\n\n\t\t\tif (Validator.isNull(mergeFailFriendlyURLLayouts)) {\n\t\t\t\tsettingsProperties.setProperty(\n\t\t\t\t\tSites.LAST_MERGE_TIME, String.valueOf(lastMergeTime));\n\n\t\t\t\tLayoutSetLocalServiceUtil.updateLayoutSet(layoutSet);\n\t\t\t}\n\t\t}\n\n\t\t// Deletion system events\n\n\t\t_deletionSystemEventImporter.importDeletionSystemEvents(\n\t\t\tportletDataContext);\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\"Importing layouts takes \" + stopWatch.getTime() + \" ms\");\n\t\t}\n\n\t\tzipReader.close();\n\t}","commit_id":"99da5ec8f133c0829bbab4c4c028f23613b90a76","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected File doExportPortletInfoAsFile(\n\t\t\tlong plid, long groupId, String portletId,\n\t\t\tMap<String, String[]> parameterMap, Date startDate, Date endDate)\n\t\tthrows Exception {\n\n\t\tboolean exportPermissions = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.PERMISSIONS);\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Export permissions \" + exportPermissions);\n\t\t}\n\n\t\tStopWatch stopWatch = null;\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\tstopWatch = new StopWatch();\n\n\t\t\tstopWatch.start();\n\t\t}\n\n\t\tLayoutCache layoutCache = new LayoutCache();\n\n\t\tLayout layout = LayoutLocalServiceUtil.getLayout(plid);\n\n\t\tif (!layout.isTypeControlPanel() && !layout.isTypePanel() &&\n\t\t\t!layout.isTypePortlet()) {\n\n\t\t\tthrow new LayoutImportException(\n\t\t\t\t\"Layout type \" + layout.getType() + \" is not valid\");\n\t\t}\n\n\t\tServiceContext serviceContext =\n\t\t\tServiceContextThreadLocal.getServiceContext();\n\n\t\tif (serviceContext == null) {\n\t\t\tserviceContext = new ServiceContext();\n\n\t\t\tserviceContext.setCompanyId(layout.getCompanyId());\n\t\t\tserviceContext.setSignedIn(false);\n\n\t\t\tlong defaultUserId = UserLocalServiceUtil.getDefaultUserId(\n\t\t\t\tlayout.getCompanyId());\n\n\t\t\tserviceContext.setUserId(defaultUserId);\n\n\t\t\tServiceContextThreadLocal.pushServiceContext(serviceContext);\n\t\t}\n\n\t\tlong layoutSetBranchId = MapUtil.getLong(\n\t\t\tparameterMap, \"layoutSetBranchId\");\n\n\t\tserviceContext.setAttribute(\"layoutSetBranchId\", layoutSetBranchId);\n\n\t\tZipWriter zipWriter = ZipWriterFactoryUtil.getZipWriter();\n\n\t\tlong scopeGroupId = groupId;\n\n\t\tjavax.portlet.PortletPreferences jxPortletPreferences =\n\t\t\tPortletPreferencesFactoryUtil.getLayoutPortletSetup(\n\t\t\t\tlayout, portletId);\n\n\t\tString scopeType = GetterUtil.getString(\n\t\t\tjxPortletPreferences.getValue(\"lfrScopeType\", null));\n\t\tString scopeLayoutUuid = GetterUtil.getString(\n\t\t\tjxPortletPreferences.getValue(\"lfrScopeLayoutUuid\", null));\n\n\t\tif (Validator.isNotNull(scopeType)) {\n\t\t\tGroup scopeGroup = null;\n\n\t\t\tif (scopeType.equals(\"company\")) {\n\t\t\t\tscopeGroup = GroupLocalServiceUtil.getCompanyGroup(\n\t\t\t\t\tlayout.getCompanyId());\n\t\t\t}\n\t\t\telse if (Validator.isNotNull(scopeLayoutUuid)) {\n\t\t\t\tscopeGroup = layout.getScopeGroup();\n\t\t\t}\n\n\t\t\tif (scopeGroup != null) {\n\t\t\t\tscopeGroupId = scopeGroup.getGroupId();\n\t\t\t}\n\t\t}\n\n\t\tPortletDataContext portletDataContext =\n\t\t\tPortletDataContextFactoryUtil.createExportPortletDataContext(\n\t\t\t\tlayout.getCompanyId(), scopeGroupId, parameterMap, startDate,\n\t\t\t\tendDate, zipWriter);\n\n\t\tportletDataContext.setPortetDataContextListener(\n\t\t\tnew PortletDataContextListenerImpl(portletDataContext));\n\n\t\tportletDataContext.setPlid(plid);\n\t\tportletDataContext.setOldPlid(plid);\n\t\tportletDataContext.setScopeType(scopeType);\n\t\tportletDataContext.setScopeLayoutUuid(scopeLayoutUuid);\n\n\t\tDocument document = SAXReaderUtil.createDocument();\n\n\t\tElement rootElement = document.addElement(\"root\");\n\n\t\tElement headerElement = rootElement.addElement(\"header\");\n\n\t\theaderElement.addAttribute(\n\t\t\t\"available-locales\",\n\t\t\tStringUtil.merge(\n\t\t\t\tLanguageUtil.getAvailableLocales(\n\t\t\t\t\tPortalUtil.getSiteGroupId(\n\t\t\t\t\t\tportletDataContext.getScopeGroupId()))));\n\t\theaderElement.addAttribute(\n\t\t\t\"build-number\", String.valueOf(ReleaseInfo.getBuildNumber()));\n\t\theaderElement.addAttribute(\"export-date\", Time.getRFC822());\n\n\t\tif (portletDataContext.hasDateRange()) {\n\t\t\theaderElement.addAttribute(\n\t\t\t\t\"start-date\",\n\t\t\t\tString.valueOf(portletDataContext.getStartDate()));\n\t\t\theaderElement.addAttribute(\n\t\t\t\t\"end-date\", String.valueOf(portletDataContext.getEndDate()));\n\t\t}\n\n\t\theaderElement.addAttribute(\"type\", \"portlet\");\n\t\theaderElement.addAttribute(\n\t\t\t\"company-id\", String.valueOf(portletDataContext.getCompanyId()));\n\t\theaderElement.addAttribute(\n\t\t\t\"company-group-id\",\n\t\t\tString.valueOf(portletDataContext.getCompanyGroupId()));\n\t\theaderElement.addAttribute(\"group-id\", String.valueOf(scopeGroupId));\n\t\theaderElement.addAttribute(\n\t\t\t\"user-personal-site-group-id\",\n\t\t\tString.valueOf(portletDataContext.getUserPersonalSiteGroupId()));\n\t\theaderElement.addAttribute(\n\t\t\t\"private-layout\", String.valueOf(layout.isPrivateLayout()));\n\t\theaderElement.addAttribute(\n\t\t\t\"root-portlet-id\", PortletConstants.getRootPortletId(portletId));\n\n\t\tElement missingReferencesElement = rootElement.addElement(\n\t\t\t\"missing-references\");\n\n\t\tportletDataContext.setMissingReferencesElement(\n\t\t\tmissingReferencesElement);\n\n\t\tboolean[] exportPortletControls =\n\t\t\tExportImportHelperUtil.getExportPortletControls(\n\t\t\t\tlayout.getCompanyId(), portletId, parameterMap);\n\n\t\texportPortlet(\n\t\t\tportletDataContext, layoutCache, portletId, layout, rootElement,\n\t\t\texportPermissions, exportPortletControls[0],\n\t\t\texportPortletControls[1], exportPortletControls[2],\n\t\t\texportPortletControls[3]);\n\n\t\texportAssetLinks(portletDataContext);\n\t\texportAssetTags(portletDataContext);\n\t\texportExpandoTables(portletDataContext);\n\t\texportLocks(portletDataContext);\n\n\t\t_deletionSystemEventExporter.exportDeletionSystemEvents(\n\t\t\tportletDataContext);\n\n\t\tif (exportPermissions) {\n\t\t\t_permissionExporter.exportPortletDataPermissions(\n\t\t\t\tportletDataContext);\n\t\t}\n\n\t\tExportImportHelperUtil.writeManifestSummary(\n\t\t\tdocument, portletDataContext.getManifestSummary());\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\"Exporting portlet took \" + stopWatch.getTime() + \" ms\");\n\t\t}\n\n\t\ttry {\n\t\t\tportletDataContext.addZipEntry(\n\t\t\t\t\"/manifest.xml\", document.formattedString());\n\t\t}\n\t\tcatch (IOException ioe) {\n\t\t\tthrow new SystemException(ioe);\n\t\t}\n\n\t\treturn zipWriter.getFile();\n\t}","id":15794,"modified_method":"protected File doExportPortletInfoAsFile(\n\t\t\tlong plid, long groupId, String portletId,\n\t\t\tMap<String, String[]> parameterMap, Date startDate, Date endDate)\n\t\tthrows Exception {\n\n\t\tboolean exportPermissions = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.PERMISSIONS);\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Export permissions \" + exportPermissions);\n\t\t}\n\n\t\tStopWatch stopWatch = null;\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\tstopWatch = new StopWatch();\n\n\t\t\tstopWatch.start();\n\t\t}\n\n\t\tLayoutCache layoutCache = new LayoutCache();\n\n\t\tLayout layout = LayoutLocalServiceUtil.getLayout(plid);\n\n\t\tif (!layout.isTypeControlPanel() && !layout.isTypePanel() &&\n\t\t\t!layout.isTypePortlet()) {\n\n\t\t\tthrow new LayoutImportException(\n\t\t\t\t\"Layout type \" + layout.getType() + \" is not valid\");\n\t\t}\n\n\t\tServiceContext serviceContext =\n\t\t\tServiceContextThreadLocal.getServiceContext();\n\n\t\tif (serviceContext == null) {\n\t\t\tserviceContext = new ServiceContext();\n\n\t\t\tserviceContext.setCompanyId(layout.getCompanyId());\n\t\t\tserviceContext.setSignedIn(false);\n\n\t\t\tlong defaultUserId = UserLocalServiceUtil.getDefaultUserId(\n\t\t\t\tlayout.getCompanyId());\n\n\t\t\tserviceContext.setUserId(defaultUserId);\n\n\t\t\tServiceContextThreadLocal.pushServiceContext(serviceContext);\n\t\t}\n\n\t\tlong layoutSetBranchId = MapUtil.getLong(\n\t\t\tparameterMap, \"layoutSetBranchId\");\n\n\t\tserviceContext.setAttribute(\"layoutSetBranchId\", layoutSetBranchId);\n\n\t\tZipWriter zipWriter = ZipWriterFactoryUtil.getZipWriter();\n\n\t\tlong scopeGroupId = groupId;\n\n\t\tjavax.portlet.PortletPreferences jxPortletPreferences =\n\t\t\tPortletPreferencesFactoryUtil.getLayoutPortletSetup(\n\t\t\t\tlayout, portletId);\n\n\t\tString scopeType = GetterUtil.getString(\n\t\t\tjxPortletPreferences.getValue(\"lfrScopeType\", null));\n\t\tString scopeLayoutUuid = GetterUtil.getString(\n\t\t\tjxPortletPreferences.getValue(\"lfrScopeLayoutUuid\", null));\n\n\t\tif (Validator.isNotNull(scopeType)) {\n\t\t\tGroup scopeGroup = null;\n\n\t\t\tif (scopeType.equals(\"company\")) {\n\t\t\t\tscopeGroup = GroupLocalServiceUtil.getCompanyGroup(\n\t\t\t\t\tlayout.getCompanyId());\n\t\t\t}\n\t\t\telse if (Validator.isNotNull(scopeLayoutUuid)) {\n\t\t\t\tscopeGroup = layout.getScopeGroup();\n\t\t\t}\n\n\t\t\tif (scopeGroup != null) {\n\t\t\t\tscopeGroupId = scopeGroup.getGroupId();\n\t\t\t}\n\t\t}\n\n\t\tPortletDataContext portletDataContext =\n\t\t\tPortletDataContextFactoryUtil.createExportPortletDataContext(\n\t\t\t\tlayout.getCompanyId(), scopeGroupId, parameterMap, startDate,\n\t\t\t\tendDate, zipWriter);\n\n\t\tportletDataContext.setPortetDataContextListener(\n\t\t\tnew PortletDataContextListenerImpl(portletDataContext));\n\n\t\tportletDataContext.setPlid(plid);\n\t\tportletDataContext.setOldPlid(plid);\n\t\tportletDataContext.setScopeType(scopeType);\n\t\tportletDataContext.setScopeLayoutUuid(scopeLayoutUuid);\n\n\t\tDocument document = SAXReaderUtil.createDocument();\n\n\t\tElement rootElement = document.addElement(\"root\");\n\n\t\tElement headerElement = rootElement.addElement(\"header\");\n\n\t\theaderElement.addAttribute(\n\t\t\t\"available-locales\",\n\t\t\tStringUtil.merge(\n\t\t\t\tLanguageUtil.getAvailableLocales(\n\t\t\t\t\tPortalUtil.getSiteGroupId(\n\t\t\t\t\t\tportletDataContext.getScopeGroupId()))));\n\t\theaderElement.addAttribute(\n\t\t\t\"build-number\", String.valueOf(ReleaseInfo.getBuildNumber()));\n\t\theaderElement.addAttribute(\"export-date\", Time.getRFC822());\n\n\t\tif (portletDataContext.hasDateRange()) {\n\t\t\theaderElement.addAttribute(\n\t\t\t\t\"start-date\",\n\t\t\t\tString.valueOf(portletDataContext.getStartDate()));\n\t\t\theaderElement.addAttribute(\n\t\t\t\t\"end-date\", String.valueOf(portletDataContext.getEndDate()));\n\t\t}\n\n\t\theaderElement.addAttribute(\"type\", \"portlet\");\n\t\theaderElement.addAttribute(\n\t\t\t\"company-id\", String.valueOf(portletDataContext.getCompanyId()));\n\t\theaderElement.addAttribute(\n\t\t\t\"company-group-id\",\n\t\t\tString.valueOf(portletDataContext.getCompanyGroupId()));\n\t\theaderElement.addAttribute(\"group-id\", String.valueOf(scopeGroupId));\n\t\theaderElement.addAttribute(\n\t\t\t\"user-personal-site-group-id\",\n\t\t\tString.valueOf(portletDataContext.getUserPersonalSiteGroupId()));\n\t\theaderElement.addAttribute(\n\t\t\t\"private-layout\", String.valueOf(layout.isPrivateLayout()));\n\t\theaderElement.addAttribute(\n\t\t\t\"root-portlet-id\", PortletConstants.getRootPortletId(portletId));\n\n\t\tElement missingReferencesElement = rootElement.addElement(\n\t\t\t\"missing-references\");\n\n\t\tportletDataContext.setMissingReferencesElement(\n\t\t\tmissingReferencesElement);\n\n\t\tMap<String, Boolean> exportPortletControlsMap =\n\t\t\tExportImportHelperUtil.getExportPortletControlsMap(\n\t\t\t\tlayout.getCompanyId(), portletId, parameterMap);\n\n\t\texportPortlet(\n\t\t\tportletDataContext, layoutCache, portletId, layout, rootElement,\n\t\t\texportPermissions,\n\t\t\texportPortletControlsMap.get(\n\t\t\t\tPortletDataHandlerKeys.PORTLET_ARCHIVED_SETUPS),\n\t\t\texportPortletControlsMap.get(PortletDataHandlerKeys.PORTLET_DATA),\n\t\t\texportPortletControlsMap.get(PortletDataHandlerKeys.PORTLET_SETUP),\n\t\t\texportPortletControlsMap.get(\n\t\t\t\tPortletDataHandlerKeys.PORTLET_USER_PREFERENCES));\n\n\t\texportAssetLinks(portletDataContext);\n\t\texportAssetTags(portletDataContext);\n\t\texportExpandoTables(portletDataContext);\n\t\texportLocks(portletDataContext);\n\n\t\t_deletionSystemEventExporter.exportDeletionSystemEvents(\n\t\t\tportletDataContext);\n\n\t\tif (exportPermissions) {\n\t\t\t_permissionExporter.exportPortletDataPermissions(\n\t\t\t\tportletDataContext);\n\t\t}\n\n\t\tExportImportHelperUtil.writeManifestSummary(\n\t\t\tdocument, portletDataContext.getManifestSummary());\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\"Exporting portlet took \" + stopWatch.getTime() + \" ms\");\n\t\t}\n\n\t\ttry {\n\t\t\tportletDataContext.addZipEntry(\n\t\t\t\t\"/manifest.xml\", document.formattedString());\n\t\t}\n\t\tcatch (IOException ioe) {\n\t\t\tthrow new SystemException(ioe);\n\t\t}\n\n\t\treturn zipWriter.getFile();\n\t}","commit_id":"99da5ec8f133c0829bbab4c4c028f23613b90a76","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void doImportPortletInfo(\n\t\t\tlong userId, long plid, long groupId, String portletId,\n\t\t\tMap<String, String[]> parameterMap, File file)\n\t\tthrows Exception {\n\n\t\tboolean deletePortletData = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.DELETE_PORTLET_DATA);\n\t\tboolean importPermissions = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.PERMISSIONS);\n\t\tString userIdStrategyString = MapUtil.getString(\n\t\t\tparameterMap, PortletDataHandlerKeys.USER_ID_STRATEGY);\n\n\t\tStopWatch stopWatch = null;\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\tstopWatch = new StopWatch();\n\n\t\t\tstopWatch.start();\n\t\t}\n\n\t\tUser user = UserUtil.findByPrimaryKey(userId);\n\n\t\tServiceContext serviceContext =\n\t\t\tServiceContextThreadLocal.getServiceContext();\n\n\t\tif (serviceContext == null) {\n\t\t\tserviceContext = new ServiceContext();\n\n\t\t\tserviceContext.setCompanyId(user.getCompanyId());\n\t\t\tserviceContext.setSignedIn(false);\n\t\t\tserviceContext.setUserId(userId);\n\n\t\t\tServiceContextThreadLocal.pushServiceContext(serviceContext);\n\t\t}\n\n\t\tLayout layout = LayoutLocalServiceUtil.getLayout(plid);\n\n\t\tUserIdStrategy userIdStrategy = getUserIdStrategy(\n\t\t\tuser, userIdStrategyString);\n\n\t\tZipReader zipReader = ZipReaderFactoryUtil.getZipReader(file);\n\n\t\tPortletDataContext portletDataContext =\n\t\t\tPortletDataContextFactoryUtil.createImportPortletDataContext(\n\t\t\t\tlayout.getCompanyId(), groupId, parameterMap, userIdStrategy,\n\t\t\t\tzipReader);\n\n\t\tportletDataContext.setPortetDataContextListener(\n\t\t\tnew PortletDataContextListenerImpl(portletDataContext));\n\n\t\tportletDataContext.setPlid(plid);\n\t\tportletDataContext.setPrivateLayout(layout.isPrivateLayout());\n\n\t\t// Manifest\n\n\t\tvalidateFile(portletDataContext, portletId);\n\n\t\tManifestSummary manifestSummary =\n\t\t\tExportImportHelperUtil.getManifestSummary(\n\t\t\t\tuserId, groupId, parameterMap, file);\n\n\t\tif (BackgroundTaskThreadLocal.hasBackgroundTask()) {\n\t\t\tPortletDataHandlerStatusMessageSenderUtil.sendStatusMessage(\n\t\t\t\t\"portlet\", portletId, manifestSummary);\n\t\t}\n\n\t\tportletDataContext.setManifestSummary(manifestSummary);\n\n\t\t// Company id\n\n\t\tlong sourceCompanyId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"company-id\"));\n\n\t\tportletDataContext.setSourceCompanyId(sourceCompanyId);\n\n\t\t// Company group id\n\n\t\tlong sourceCompanyGroupId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"company-group-id\"));\n\n\t\tportletDataContext.setSourceCompanyGroupId(sourceCompanyGroupId);\n\n\t\t// Group id\n\n\t\tlong sourceGroupId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"group-id\"));\n\n\t\tportletDataContext.setSourceGroupId(sourceGroupId);\n\n\t\t// User personal site group id\n\n\t\tlong sourceUserPersonalSiteGroupId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"user-personal-site-group-id\"));\n\n\t\tportletDataContext.setSourceUserPersonalSiteGroupId(\n\t\t\tsourceUserPersonalSiteGroupId);\n\n\t\t// Read asset tags, expando tables, locks and permissions to make them\n\t\t// available to the data handlers through the context\n\n\t\tElement portletElement = null;\n\n\t\ttry {\n\t\t\tportletElement = _rootElement.element(\"portlet\");\n\n\t\t\tDocument portletDocument = SAXReaderUtil.read(\n\t\t\t\tportletDataContext.getZipEntryAsString(\n\t\t\t\t\tportletElement.attributeValue(\"path\")));\n\n\t\t\tportletElement = portletDocument.getRootElement();\n\t\t}\n\t\tcatch (DocumentException de) {\n\t\t\tthrow new SystemException(de);\n\t\t}\n\n\t\tLayoutCache layoutCache = new LayoutCache();\n\n\t\tif (importPermissions) {\n\t\t\t_permissionImporter.checkRoles(\n\t\t\t\tlayoutCache, layout.getCompanyId(), groupId, userId,\n\t\t\t\tportletElement);\n\n\t\t\t_permissionImporter.readPortletDataPermissions(portletDataContext);\n\t\t}\n\n\t\treadAssetTags(portletDataContext);\n\t\treadExpandoTables(portletDataContext);\n\t\treadLocks(portletDataContext);\n\n\t\t// Delete portlet data\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Deleting portlet data\");\n\t\t}\n\n\t\tif (deletePortletData) {\n\t\t\tdeletePortletData(portletDataContext, portletId, plid);\n\t\t}\n\n\t\tElement portletDataElement = portletElement.element(\"portlet-data\");\n\n\t\tboolean[] importPortletControls =\n\t\t\tExportImportHelperUtil.getImportPortletControls(\n\t\t\t\tlayout.getCompanyId(), portletId, parameterMap,\n\t\t\t\tportletDataElement, manifestSummary);\n\n\t\ttry {\n\n\t\t\t// Portlet preferences\n\n\t\t\timportPortletPreferences(\n\t\t\t\tportletDataContext, layout.getCompanyId(), groupId, layout,\n\t\t\t\tportletId, portletElement, true, importPortletControls[0],\n\t\t\t\timportPortletControls[1], importPortletControls[2],\n\t\t\t\timportPortletControls[3]);\n\n\t\t\t// Portlet data\n\n\t\t\tif (importPortletControls[1]) {\n\t\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t\t_log.debug(\"Importing portlet data\");\n\t\t\t\t}\n\n\t\t\t\timportPortletData(\n\t\t\t\t\tportletDataContext, portletId, plid, portletDataElement);\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tresetPortletScope(portletDataContext, groupId);\n\t\t}\n\n\t\t// Portlet permissions\n\n\t\tif (importPermissions) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\"Importing portlet permissions\");\n\t\t\t}\n\n\t\t\t_permissionImporter.importPortletPermissions(\n\t\t\t\tlayoutCache, layout.getCompanyId(), groupId, userId, layout,\n\t\t\t\tportletElement, portletId);\n\n\t\t\tif (userId > 0) {\n\t\t\t\tIndexer indexer = IndexerRegistryUtil.nullSafeGetIndexer(\n\t\t\t\t\tUser.class);\n\n\t\t\t\tindexer.reindex(userId);\n\t\t\t}\n\t\t}\n\n\t\t// Asset links\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Importing asset links\");\n\t\t}\n\n\t\treadAssetLinks(portletDataContext);\n\n\t\t// Deletion system events\n\n\t\t_deletionSystemEventImporter.importDeletionSystemEvents(\n\t\t\tportletDataContext);\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\"Importing portlet takes \" + stopWatch.getTime() + \" ms\");\n\t\t}\n\n\t\tzipReader.close();\n\t}","id":15795,"modified_method":"protected void doImportPortletInfo(\n\t\t\tlong userId, long plid, long groupId, String portletId,\n\t\t\tMap<String, String[]> parameterMap, File file)\n\t\tthrows Exception {\n\n\t\tboolean deletePortletData = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.DELETE_PORTLET_DATA);\n\t\tboolean importPermissions = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.PERMISSIONS);\n\t\tString userIdStrategyString = MapUtil.getString(\n\t\t\tparameterMap, PortletDataHandlerKeys.USER_ID_STRATEGY);\n\n\t\tStopWatch stopWatch = null;\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\tstopWatch = new StopWatch();\n\n\t\t\tstopWatch.start();\n\t\t}\n\n\t\tUser user = UserUtil.findByPrimaryKey(userId);\n\n\t\tServiceContext serviceContext =\n\t\t\tServiceContextThreadLocal.getServiceContext();\n\n\t\tif (serviceContext == null) {\n\t\t\tserviceContext = new ServiceContext();\n\n\t\t\tserviceContext.setCompanyId(user.getCompanyId());\n\t\t\tserviceContext.setSignedIn(false);\n\t\t\tserviceContext.setUserId(userId);\n\n\t\t\tServiceContextThreadLocal.pushServiceContext(serviceContext);\n\t\t}\n\n\t\tLayout layout = LayoutLocalServiceUtil.getLayout(plid);\n\n\t\tUserIdStrategy userIdStrategy = getUserIdStrategy(\n\t\t\tuser, userIdStrategyString);\n\n\t\tZipReader zipReader = ZipReaderFactoryUtil.getZipReader(file);\n\n\t\tPortletDataContext portletDataContext =\n\t\t\tPortletDataContextFactoryUtil.createImportPortletDataContext(\n\t\t\t\tlayout.getCompanyId(), groupId, parameterMap, userIdStrategy,\n\t\t\t\tzipReader);\n\n\t\tportletDataContext.setPortetDataContextListener(\n\t\t\tnew PortletDataContextListenerImpl(portletDataContext));\n\n\t\tportletDataContext.setPlid(plid);\n\t\tportletDataContext.setPrivateLayout(layout.isPrivateLayout());\n\n\t\t// Manifest\n\n\t\tvalidateFile(portletDataContext, portletId);\n\n\t\tManifestSummary manifestSummary =\n\t\t\tExportImportHelperUtil.getManifestSummary(\n\t\t\t\tuserId, groupId, parameterMap, file);\n\n\t\tif (BackgroundTaskThreadLocal.hasBackgroundTask()) {\n\t\t\tPortletDataHandlerStatusMessageSenderUtil.sendStatusMessage(\n\t\t\t\t\"portlet\", portletId, manifestSummary);\n\t\t}\n\n\t\tportletDataContext.setManifestSummary(manifestSummary);\n\n\t\t// Company id\n\n\t\tlong sourceCompanyId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"company-id\"));\n\n\t\tportletDataContext.setSourceCompanyId(sourceCompanyId);\n\n\t\t// Company group id\n\n\t\tlong sourceCompanyGroupId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"company-group-id\"));\n\n\t\tportletDataContext.setSourceCompanyGroupId(sourceCompanyGroupId);\n\n\t\t// Group id\n\n\t\tlong sourceGroupId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"group-id\"));\n\n\t\tportletDataContext.setSourceGroupId(sourceGroupId);\n\n\t\t// User personal site group id\n\n\t\tlong sourceUserPersonalSiteGroupId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"user-personal-site-group-id\"));\n\n\t\tportletDataContext.setSourceUserPersonalSiteGroupId(\n\t\t\tsourceUserPersonalSiteGroupId);\n\n\t\t// Read asset tags, expando tables, locks and permissions to make them\n\t\t// available to the data handlers through the context\n\n\t\tElement portletElement = null;\n\n\t\ttry {\n\t\t\tportletElement = _rootElement.element(\"portlet\");\n\n\t\t\tDocument portletDocument = SAXReaderUtil.read(\n\t\t\t\tportletDataContext.getZipEntryAsString(\n\t\t\t\t\tportletElement.attributeValue(\"path\")));\n\n\t\t\tportletElement = portletDocument.getRootElement();\n\t\t}\n\t\tcatch (DocumentException de) {\n\t\t\tthrow new SystemException(de);\n\t\t}\n\n\t\tLayoutCache layoutCache = new LayoutCache();\n\n\t\tif (importPermissions) {\n\t\t\t_permissionImporter.checkRoles(\n\t\t\t\tlayoutCache, layout.getCompanyId(), groupId, userId,\n\t\t\t\tportletElement);\n\n\t\t\t_permissionImporter.readPortletDataPermissions(portletDataContext);\n\t\t}\n\n\t\treadAssetTags(portletDataContext);\n\t\treadExpandoTables(portletDataContext);\n\t\treadLocks(portletDataContext);\n\n\t\t// Delete portlet data\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Deleting portlet data\");\n\t\t}\n\n\t\tif (deletePortletData) {\n\t\t\tdeletePortletData(portletDataContext, portletId, plid);\n\t\t}\n\n\t\tElement portletDataElement = portletElement.element(\"portlet-data\");\n\n\t\tMap<String, Boolean> importPortletControlsMap =\n\t\t\tExportImportHelperUtil.getImportPortletControlsMap(\n\t\t\t\tlayout.getCompanyId(), portletId, parameterMap,\n\t\t\t\tportletDataElement, manifestSummary);\n\n\t\ttry {\n\n\t\t\t// Portlet preferences\n\n\t\t\timportPortletPreferences(\n\t\t\t\tportletDataContext, layout.getCompanyId(), groupId, layout,\n\t\t\t\tportletId, portletElement, true,\n\t\t\t\timportPortletControlsMap.get(\n\t\t\t\t\tPortletDataHandlerKeys.PORTLET_ARCHIVED_SETUPS),\n\t\t\t\timportPortletControlsMap.get(\n\t\t\t\t\tPortletDataHandlerKeys.PORTLET_DATA),\n\t\t\t\timportPortletControlsMap.get(\n\t\t\t\t\tPortletDataHandlerKeys.PORTLET_SETUP),\n\t\t\t\timportPortletControlsMap.get(\n\t\t\t\t\tPortletDataHandlerKeys.PORTLET_USER_PREFERENCES));\n\n\t\t\t// Portlet data\n\n\t\t\tif (importPortletControlsMap.get(\n\t\t\t\t\tPortletDataHandlerKeys.PORTLET_DATA)) {\n\n\t\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t\t_log.debug(\"Importing portlet data\");\n\t\t\t\t}\n\n\t\t\t\timportPortletData(\n\t\t\t\t\tportletDataContext, portletId, plid, portletDataElement);\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tresetPortletScope(portletDataContext, groupId);\n\t\t}\n\n\t\t// Portlet permissions\n\n\t\tif (importPermissions) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\"Importing portlet permissions\");\n\t\t\t}\n\n\t\t\t_permissionImporter.importPortletPermissions(\n\t\t\t\tlayoutCache, layout.getCompanyId(), groupId, userId, layout,\n\t\t\t\tportletElement, portletId);\n\n\t\t\tif (userId > 0) {\n\t\t\t\tIndexer indexer = IndexerRegistryUtil.nullSafeGetIndexer(\n\t\t\t\t\tUser.class);\n\n\t\t\t\tindexer.reindex(userId);\n\t\t\t}\n\t\t}\n\n\t\t// Asset links\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Importing asset links\");\n\t\t}\n\n\t\treadAssetLinks(portletDataContext);\n\n\t\t// Deletion system events\n\n\t\t_deletionSystemEventImporter.importDeletionSystemEvents(\n\t\t\tportletDataContext);\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\"Importing portlet takes \" + stopWatch.getTime() + \" ms\");\n\t\t}\n\n\t\tzipReader.close();\n\t}","commit_id":"99da5ec8f133c0829bbab4c4c028f23613b90a76","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static String getElementEnd() {\n        return (\"<\/\" + ELEMENT_NAME + \">\");\n    }","id":15796,"modified_method":"public static String getElementEnd() {\n        return getElementEnd(ELEMENT_NAME);\n    }","commit_id":"64b8ff5f9f9ab3031ca10dd9651849921e49eb5f","url":"https://github.com/wildfly/wildfly"},{"original_method":"public static String getElementStart(String defaultNamespace, String namespaceLocation, boolean includeMockNamespace) {\n        StringBuilder sb = new StringBuilder();\n        sb.append('<');\n        sb.append(ELEMENT_NAME);\n        sb.append(\" xmlns=\\\"\");\n        sb.append(defaultNamespace);\n        sb.append('\\\"');\n        if (includeMockNamespace) {\n            sb.append(\" xmlns:mock=\\\"\");\n            sb.append(MockAnyElement.NAMESPACE);\n            sb.append('\\\"');\n        }\n        sb.append(\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\"\");\n        sb.append(\" xsi:schemaLocation=\\\"urn:jboss:domain:1.0 jboss_7_0.xsd\");\n        if (includeMockNamespace) {\n            sb.append(' ');\n            sb.append(MockAnyElement.NAMESPACE);\n            sb.append(\" jboss-mock-extension.xsd\");\n        }\n        sb.append(\"\\\">\");\n        return sb.toString();\n    }","id":15797,"modified_method":"public static String getElementStart(String defaultNamespace, String namespaceLocation, boolean includeMockNamespace) {\n        return getElementStart(ELEMENT_NAME, defaultNamespace, namespaceLocation, includeMockNamespace);\n    }","commit_id":"64b8ff5f9f9ab3031ca10dd9651849921e49eb5f","url":"https://github.com/wildfly/wildfly"},{"original_method":"static void parseProfiles(final XMLExtendedStreamReader reader, final List<? super AbstractDomainModelUpdate<?>> list) throws XMLStreamException {\n        requireNoAttributes(reader);\n\n        final Set<String> names = new HashSet<String>();\n\n        while (reader.nextTag() != END_ELEMENT) {\n            // Attributes\n            final String name = readStringAttributeElement(reader, Attribute.NAME.getLocalName());\n            if (! names.add(name)) {\n                throw new XMLStreamException(\"Duplicate profile declaration\", reader.getLocation());\n            }\n            final Set<String> includes = new LinkedHashSet<String>();\n\n            // Content\n            // Sequence\n            OUT: while (reader.nextTag() != END_ELEMENT) {\n                switch (Namespace.forUri(reader.getNamespaceURI())) {\n                    case DOMAIN_1_0: {\n                        if (Element.forName(reader.getLocalName()) != Element.INCLUDE) {\n                            throw unexpectedElement(reader);\n                        }\n                        final String includedName = readStringAttributeElement(reader, Attribute.NAME.getLocalName());\n                        if (! names.contains(includedName)) {\n                            throw new XMLStreamException(\"No profile found for inclusion\", reader.getLocation());\n                        }\n                        if (! includes.add(includedName)) {\n                            throw new XMLStreamException(\"Duplicate profile include\", reader.getLocation());\n                        }\n                        break;\n                    }\n                    default: {\n                        break OUT;\n                    }\n                }\n            }\n            final Set<String> configuredSubsystemTypes = new HashSet<String>();\n            while (reader.nextTag() != END_ELEMENT) {\n                switch (Namespace.forUri(reader.getNamespaceURI())) {\n                    case UNKNOWN: {\n                        if (Element.forName(reader.getLocalName()) != Element.SUBSYSTEM) {\n                            throw unexpectedElement(reader);\n                        }\n                        if (configuredSubsystemTypes.add(reader.getNamespaceURI())) {\n                            throw new XMLStreamException(\"Duplicate subsystem declaration\", reader.getLocation());\n                        }\n                        // parse content\n                        final ParseResult<ExtensionContext.SubsystemConfiguration<?>> result = new ParseResult<ExtensionContext.SubsystemConfiguration<?>>();\n                        reader.handleAny(result);\n                        list.add(new DomainSubsystemAdd(name, result.getResult().getSubsystemAdd()));\n                        for (AbstractSubsystemUpdate<?, ?> update : result.getResult().getUpdates()) {\n                            // I don't think this is really an unchecked cast (even though ? is bounded by Object, the class\n                            // specifies an additional bound for E so it should be considered safe), but IDEA thinks it is...\n                            //noinspection unchecked\n                            list.add(DomainSubsystemUpdate.create(name, update));\n                        }\n                        break;\n                    }\n                    default: {\n                        throw unexpectedElement(reader);\n                    }\n                }\n            }\n        }\n    }","id":15798,"modified_method":"static void parseProfiles(final XMLExtendedStreamReader reader, final List<? super AbstractDomainModelUpdate<?>> list) throws XMLStreamException {\n        requireNoAttributes(reader);\n\n        final Set<String> names = new HashSet<String>();\n\n        while (reader.nextTag() != END_ELEMENT) {\n            // Attributes\n            requireSingleAttribute(reader, Attribute.NAME.getLocalName());\n            final String name = reader.getAttributeValue(0);\n            if (! names.add(name)) {\n                throw new XMLStreamException(\"Duplicate profile declaration \" + name, reader.getLocation());\n            }\n\n            list.add(new DomainProfileAdd(name));\n            final Set<String> includes = new LinkedHashSet<String>();\n\n            // Content\n            // Sequence\n            final Set<String> configuredSubsystemTypes = new HashSet<String>();\n            while (reader.nextTag() != END_ELEMENT) {\n                switch (Namespace.forUri(reader.getNamespaceURI())) {\n                    case UNKNOWN: {\n                        if (Element.forName(reader.getLocalName()) != Element.SUBSYSTEM) {\n                            throw unexpectedElement(reader);\n                        }\n                        if (!configuredSubsystemTypes.add(reader.getNamespaceURI())) {\n                            throw new XMLStreamException(\"Duplicate subsystem declaration\", reader.getLocation());\n                        }\n                        // parse content\n                        final ParseResult<ExtensionContext.SubsystemConfiguration<?>> result = new ParseResult<ExtensionContext.SubsystemConfiguration<?>>();\n                        reader.handleAny(result);\n                        list.add(new DomainSubsystemAdd(name, result.getResult().getSubsystemAdd()));\n                        for (AbstractSubsystemUpdate<?, ?> update : result.getResult().getUpdates()) {\n                            // I don't think this is really an unchecked cast (even though ? is bounded by Object, the class\n                            // specifies an additional bound for E so it should be considered safe), but IDEA thinks it is...\n                            //noinspection unchecked\n                            list.add(DomainSubsystemUpdate.create(name, update));\n                        }\n                        break;\n                    }\n                    case DOMAIN_1_0: {\n                        // include should come first\n                        if (configuredSubsystemTypes.size() > 0) {\n                            throw unexpectedElement(reader);\n                        }\n                        if (Element.forName(reader.getLocalName()) != Element.INCLUDE) {\n                            throw unexpectedElement(reader);\n                        }\n                        final String includedName = readStringAttributeElement(reader, Attribute.PROFILE.getLocalName());\n                        if (! names.contains(includedName)) {\n                            throw new XMLStreamException(\"No profile found for inclusion\", reader.getLocation());\n                        }\n                        if (! includes.add(includedName)) {\n                            throw new XMLStreamException(\"Duplicate profile include\", reader.getLocation());\n                        }\n                        list.add(new DomainProfileIncludeAdd(name, includedName));\n                        break;\n                    }\n                    default: {\n                        throw unexpectedElement(reader);\n                    }\n                }\n            }\n\n            if (configuredSubsystemTypes.size() == 0) {\n                throw new XMLStreamException(\"Profile has no subsystem configurations\", reader.getLocation());\n            }\n        }\n    }","commit_id":"64b8ff5f9f9ab3031ca10dd9651849921e49eb5f","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Creates a new ProfileElement based on an existing element. The key thing\n     * this constructor does is use the given <code>source<\/code> element's\n     * {@link RefResolver} to resolve any included profiles. It then creates\n     * its own RefResolver from only those included profiles. The effect of this\n     * is to eliminate any extraneous ProfileElement references that may be\n     * associated with <code>source<\/code>'s object graph.\n     *\n     * @param source\n     */\n    public ProfileElement(ProfileElement source) {\n\n        this.name = source.name;\n        synchronized (source.subsystems) {\n            this.subsystems.putAll(source.subsystems);\n        }\n        synchronized (source.includedProfiles) {\n            this.includedProfiles.putAll(source.includedProfiles);\n        }\n\n\n        final NavigableMap<String, ProfileElement> resolvedProfiles = new TreeMap<String, ProfileElement>();\n        for (Map.Entry<String, ProfileIncludeElement> entry : this.includedProfiles.entrySet()) {\n            ProfileElement prof = source.includedProfileResolver.resolveRef(entry.getKey());\n            if (prof == null) {\n                throw new IllegalStateException(\"Profile referenced by '\" + Element.INCLUDE.getLocalName() +\n                        \"' refers to non-existent profile '\" + entry.getValue().getProfile() + \"'\");\n            }\n            resolvedProfiles.put(entry.getKey(), new ProfileElement(prof));\n        }\n        this.includedProfileResolver = new SimpleRefResolver<String, ProfileElement>(resolvedProfiles);\n    }","id":15799,"modified_method":"/**\n     * Creates a new ProfileElement based on an existing element. The key thing\n     * this constructor does is use the given <code>source<\/code> element's\n     * {@link RefResolver} to resolve any included profiles. It then creates\n     * its own RefResolver from only those included profiles. The effect of this\n     * is to eliminate any extraneous ProfileElement references that may be\n     * associated with <code>source<\/code>'s object graph.\n     *\n     * @param source\n     */\n    public ProfileElement(ProfileElement source) {\n\n        this.name = source.name;\n        synchronized (source.subsystems) {\n            this.subsystems.putAll(source.subsystems);\n        }\n        synchronized (source.includedProfiles) {\n            this.includedProfiles.addAll(source.includedProfiles);\n        }\n    }","commit_id":"64b8ff5f9f9ab3031ca10dd9651849921e49eb5f","url":"https://github.com/wildfly/wildfly"},{"original_method":"public Set<ProfileIncludeElement> getIncludedProfiles() {\n        synchronized (includedProfiles) {\n            return new HashSet<ProfileIncludeElement>(includedProfiles.values());\n        }\n    }","id":15800,"modified_method":"public Set<String> getIncludedProfiles() {\n        synchronized (includedProfiles) {\n            return new HashSet<String>(includedProfiles);\n        }\n    }","commit_id":"64b8ff5f9f9ab3031ca10dd9651849921e49eb5f","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Construct a new instance.\n     *\n     * @param includedProfileResolver {@link org.jboss.as.model.RefResolver} to use to resolve references\n     *           to included profiles. Should not be used in the constructor\n     *           itself as referenced profiles may not have been created yet.\n     */\n    public ProfileElement(final String name, final RefResolver<String, ProfileElement> includedProfileResolver) {\n        if (name != null) throw new IllegalArgumentException(\"name is null\");\n        this.name = name;\n        this.includedProfileResolver = includedProfileResolver;\n    }","id":15801,"modified_method":"/**\n     * Construct a new instance.\n     *\n     * @param name the name of the profile. Cannot be {@code null}\n     */\n    public ProfileElement(final String name) {\n        if (name == null) throw new IllegalArgumentException(\"name is null\");\n        this.name = name;\n    }","commit_id":"64b8ff5f9f9ab3031ca10dd9651849921e49eb5f","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void writeContent(XMLExtendedStreamWriter streamWriter) throws XMLStreamException {\n\n        streamWriter.writeAttribute(Attribute.NAME.getLocalName(), name);\n\n        synchronized (includedProfiles) {\n            if (!includedProfiles.isEmpty()) {\n                for (ProfileIncludeElement included : includedProfiles.values()) {\n                    streamWriter.writeStartElement(Element.INCLUDE.getLocalName());\n                    included.writeContent(streamWriter);\n                }\n            }\n        }\n\n        synchronized (subsystems) {\n            if (!subsystems.isEmpty()) {\n\n                String defaultNamespace = streamWriter.getNamespaceContext().getNamespaceURI(XMLConstants.DEFAULT_NS_PREFIX);\n\n                for (AbstractSubsystemElement<? extends AbstractSubsystemElement<?>> subsystem : subsystems.values()) {\n                    try {\n                        QName qname = subsystem.getElementName();\n                        if (streamWriter.getNamespaceContext().getPrefix(qname.getNamespaceURI()) == null) {\n                            // Unknown namespace; it becomes default\n                            streamWriter.setDefaultNamespace(qname.getNamespaceURI());\n                            streamWriter.writeStartElement(qname.getLocalPart());\n                            streamWriter.writeNamespace(null, qname.getNamespaceURI());\n                        }\n                        else {\n                            streamWriter.writeStartElement(qname.getNamespaceURI(), qname.getLocalPart());\n                        }\n                        subsystem.writeContent(streamWriter);\n                    }\n                    finally {\n                        streamWriter.setDefaultNamespace(defaultNamespace);\n                    }\n                }\n            }\n        }\n\n        streamWriter.writeEndElement();\n    }","id":15802,"modified_method":"@Override\n    public void writeContent(XMLExtendedStreamWriter streamWriter) throws XMLStreamException {\n\n        streamWriter.writeAttribute(Attribute.NAME.getLocalName(), name);\n\n        synchronized (includedProfiles) {\n            if (!includedProfiles.isEmpty()) {\n                for (String included : includedProfiles) {\n                    streamWriter.writeEmptyElement(Element.INCLUDE.getLocalName());\n                    streamWriter.writeAttribute(Attribute.PROFILE.getLocalName(), included);\n                }\n            }\n        }\n\n        synchronized (subsystems) {\n            if (!subsystems.isEmpty()) {\n\n                String defaultNamespace = streamWriter.getNamespaceContext().getNamespaceURI(XMLConstants.DEFAULT_NS_PREFIX);\n\n                for (AbstractSubsystemElement<? extends AbstractSubsystemElement<?>> subsystem : subsystems.values()) {\n                    try {\n                        QName qname = subsystem.getElementName();\n                        if (streamWriter.getNamespaceContext().getPrefix(qname.getNamespaceURI()) == null) {\n                            // Unknown namespace; it becomes default\n                            streamWriter.setDefaultNamespace(qname.getNamespaceURI());\n                            streamWriter.writeStartElement(qname.getLocalPart());\n                            streamWriter.writeNamespace(null, qname.getNamespaceURI());\n                        }\n                        else {\n                            streamWriter.writeStartElement(qname.getNamespaceURI(), qname.getLocalPart());\n                        }\n                        subsystem.writeContent(streamWriter);\n                    }\n                    finally {\n                        streamWriter.setDefaultNamespace(defaultNamespace);\n                    }\n                }\n            }\n        }\n\n        streamWriter.writeEndElement();\n    }","commit_id":"64b8ff5f9f9ab3031ca10dd9651849921e49eb5f","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void testSerializationDeserialization() throws Exception {\n\n        String testContent = \"<profile name=\\\"test\\\"><include profile=\\\"foo\\\"/>\" + MockAnyElement.getFullXmlContent() + \"<\/profile>\";\n        String fullcontent = MockRootElement.getXmlContent(getTargetNamespace(), getTargetNamespaceLocation(), true, testContent);\n        MockRootElement root = MockRootElementParser.parseRootElement(getXMLMapper(), new StringReader(fullcontent));\n        ProfileElement testee = (ProfileElement) root.getChild(getTargetNamespace(), Element.PROFILE.getLocalName());\n\n        byte[] bytes = serialize(testee);\n        ProfileElement testee1 = deserialize(bytes, ProfileElement.class);\n\n        assertEquals(testee.getName(), testee1.getName());\n        Set<AbstractSubsystemElement<? extends AbstractSubsystemElement<?>>> subsystems = testee1.getSubsystems();\n        assertEquals(2, subsystems.size());\n        boolean gotMock = false;\n        boolean gotAnotherMock = false;\n        for (AbstractSubsystemElement<? extends AbstractSubsystemElement<?>> subsystem : subsystems) {\n            if (MockAnyElement.MOCK_ELEMENT_QNAME.equals(subsystem.getElementName())) {\n                gotMock = true;\n            }\n            else if (MockAnyElement.ANOTHER_MOCK_ELEMENT_QNAME.equals(subsystem.getElementName())) {\n                gotAnotherMock = true;\n            }\n            else {\n                fail(\"Unknown subsystem QName \" + subsystem.getElementName());\n            }\n        }\n        assertTrue(gotMock);\n        assertTrue(gotAnotherMock);\n    }","id":15803,"modified_method":"@Override\n    public void testSerializationDeserialization() throws Exception {\n\n        String testContent = \"<profile name=\\\"foo\\\">\" + MockSubsystemElement.getSingleSubsystemXmlContent() + \"<\/profile>\";\n        testContent += \"<profile name=\\\"test\\\"><include profile=\\\"foo\\\"/>\" + MockSubsystemElement.getAnotherSubsystemXmlContent() + \"<\/profile>\";\n        testContent = ModelParsingSupport.wrap(Element.PROFILES.getLocalName(), testContent);\n        String fullcontent = ModelParsingSupport.getXmlContent(Element.DOMAIN.getLocalName(), getTargetNamespace(), getTargetNamespaceLocation(), testContent);\n        DomainModel root = ModelParsingSupport.parseDomainModel(getXMLMapper(), fullcontent);\n        ProfileElement testee = root.getProfile(\"test\");\n        assertNotNull(testee);\n\n        byte[] bytes = serialize(testee);\n        ProfileElement testee1 = deserialize(bytes, ProfileElement.class);\n\n        assertEquals(testee.getName(), testee1.getName());\n        Set<AbstractSubsystemElement<? extends AbstractSubsystemElement<?>>> subsystems = testee1.getSubsystems();\n        assertEquals(1, subsystems.size());\n        boolean gotAnotherMock = false;\n        for (AbstractSubsystemElement<? extends AbstractSubsystemElement<?>> subsystem : subsystems) {\n            if (MockSubsystemElement.ANOTHER_MOCK_ELEMENT_QNAME.equals(subsystem.getElementName())) {\n                gotAnotherMock = true;\n            }\n            else {\n                fail(\"Unknown subsystem QName \" + subsystem.getElementName());\n            }\n        }\n        assertTrue(gotAnotherMock);\n    }","commit_id":"64b8ff5f9f9ab3031ca10dd9651849921e49eb5f","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void testNoSubsystemParse() throws Exception {\n        String testContent = \"<profile name=\\\"test\\\"/>\";\n        String fullcontent = MockRootElement.getXmlContent(getTargetNamespace(), getTargetNamespaceLocation(), true, testContent);\n\n        try {\n            MockRootElementParser.parseRootElement(getXMLMapper(), new StringReader(fullcontent));\n            fail(\"Missing children did not cause parsing failure\");\n        }\n        catch (XMLStreamException good) {\n            // TODO validate the location stuff in the exception message\n        }\n\n        testContent = \"<profile name=\\\"test\\\"><include profile=\\\"foo\\\"/><\/profile>\";\n        fullcontent = MockRootElement.getXmlContent(getTargetNamespace(), getTargetNamespaceLocation(), true, testContent);\n\n        try {\n            MockRootElementParser.parseRootElement(getXMLMapper(), new StringReader(fullcontent));\n            fail(\"Missing children did not cause parsing failure\");\n        }\n        catch (XMLStreamException good) {\n            // TODO validate the location stuff in the exception message\n        }\n    }","id":15804,"modified_method":"public void testNoSubsystemParse() throws Exception {\n        String testContent = \"<profile name=\\\"test\\\"/>\";\n        testContent = ModelParsingSupport.wrap(Element.PROFILES.getLocalName(), testContent);\n        String fullcontent = ModelParsingSupport.getXmlContent(Element.DOMAIN.getLocalName(), getTargetNamespace(), getTargetNamespaceLocation(), testContent);\n\n        try {\n            ModelParsingSupport.parseDomainModel(getXMLMapper(), fullcontent);\n            fail(\"Missing children did not cause parsing failure\");\n        }\n        catch (XMLStreamException good) {\n            // TODO validate the location stuff in the exception message\n        }\n\n        testContent = \"<profile name=\\\"test\\\"><include profile=\\\"foo\\\"/><\/profile>\";\n        testContent = ModelParsingSupport.wrap(Element.PROFILES.getLocalName(), testContent);\n        fullcontent = ModelParsingSupport.getXmlContent(Element.DOMAIN.getLocalName(), getTargetNamespace(), getTargetNamespaceLocation(), testContent);\n\n        try {\n            ModelParsingSupport.parseDomainModel(getXMLMapper(), fullcontent);\n            fail(\"Missing children did not cause parsing failure\");\n        }\n        catch (XMLStreamException good) {\n            // TODO validate the location stuff in the exception message\n        }\n    }","commit_id":"64b8ff5f9f9ab3031ca10dd9651849921e49eb5f","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void testSimpleParse() throws Exception {\n        String testContent = \"<profile name=\\\"test\\\">\" + MockAnyElement.getFullXmlContent() + \"<\/profile>\";\n        String fullcontent = MockRootElement.getXmlContent(getTargetNamespace(), getTargetNamespaceLocation(), true, testContent);\n        MockRootElement root = MockRootElementParser.parseRootElement(getXMLMapper(), new StringReader(fullcontent));\n        ProfileElement testee = (ProfileElement) root.getChild(getTargetNamespace(), Element.PROFILE.getLocalName());\n        assertEquals(\"test\", testee.getName());\n        Set<AbstractSubsystemElement<? extends AbstractSubsystemElement<?>>> subsystems = testee.getSubsystems();\n        assertEquals(2, subsystems.size());\n        boolean gotMock = false;\n        boolean gotAnotherMock = false;\n        for (AbstractSubsystemElement<? extends AbstractSubsystemElement<?>> subsystem : subsystems) {\n            if (MockAnyElement.MOCK_ELEMENT_QNAME.equals(subsystem.getElementName())) {\n                gotMock = true;\n            }\n            else if (MockAnyElement.ANOTHER_MOCK_ELEMENT_QNAME.equals(subsystem.getElementName())) {\n                gotAnotherMock = true;\n            }\n            else {\n                fail(\"Unknown subsystem QName \" + subsystem.getElementName());\n            }\n        }\n        assertTrue(gotMock);\n        assertTrue(gotAnotherMock);\n    }","id":15805,"modified_method":"public void testSimpleParse() throws Exception {\n        System.out.println(\"testSimpleParse\");\n        String testContent = \"<profile name=\\\"test\\\">\" + MockSubsystemElement.getFullXmlContent() + \"<\/profile>\";\n        testContent = ModelParsingSupport.wrap(Element.PROFILES.getLocalName(), testContent);\n        String fullcontent = ModelParsingSupport.getXmlContent(Element.DOMAIN.getLocalName(), getTargetNamespace(), getTargetNamespaceLocation(), testContent);\n        DomainModel root = ModelParsingSupport.parseDomainModel(getXMLMapper(), fullcontent);\n        ProfileElement testee = root.getProfile(\"test\");\n        assertNotNull(testee);\n        assertEquals(\"test\", testee.getName());\n        Set<AbstractSubsystemElement<? extends AbstractSubsystemElement<?>>> subsystems = testee.getSubsystems();\n        assertEquals(2, subsystems.size());\n        boolean gotMock = false;\n        boolean gotAnotherMock = false;\n        for (AbstractSubsystemElement<? extends AbstractSubsystemElement<?>> subsystem : subsystems) {\n            if (MockSubsystemElement.MOCK_ELEMENT_QNAME.equals(subsystem.getElementName())) {\n                gotMock = true;\n            }\n            else if (MockSubsystemElement.ANOTHER_MOCK_ELEMENT_QNAME.equals(subsystem.getElementName())) {\n                gotAnotherMock = true;\n            }\n            else {\n                fail(\"Unknown subsystem QName \" + subsystem.getElementName());\n            }\n        }\n        assertTrue(gotMock);\n        assertTrue(gotAnotherMock);\n    }","commit_id":"64b8ff5f9f9ab3031ca10dd9651849921e49eb5f","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void testBadChildElement() throws Exception {\n        String testContent = \"<profile name=\\\"test\\\"><bogus/><\/profile>\";\n        String fullcontent = MockRootElement.getXmlContent(getTargetNamespace(), getTargetNamespaceLocation(), true, testContent);\n\n        try {\n            MockRootElementParser.parseRootElement(getXMLMapper(), new StringReader(fullcontent));\n            fail(\"Extraneous child element did not cause parsing failure\");\n        }\n        catch (XMLStreamException good) {\n            // TODO validate the location stuff in the exception message\n        }\n\n        testContent = \"<profile name=\\\"test\\\">\" + MockAnyElement.getSimpleXmlContent() + \"<bogus/><\/profile>\";\n        fullcontent = MockRootElement.getXmlContent(getTargetNamespace(), getTargetNamespaceLocation(), true, testContent);\n\n        try {\n            MockRootElementParser.parseRootElement(getXMLMapper(), new StringReader(fullcontent));\n            fail(\"Extraneous child element did not cause parsing failure\");\n        }\n        catch (XMLStreamException good) {\n            // TODO validate the location stuff in the exception message\n        }\n    }","id":15806,"modified_method":"public void testBadChildElement() throws Exception {\n        String testContent = \"<profile name=\\\"test\\\"><bogus/><\/profile>\";\n        testContent = ModelParsingSupport.wrap(Element.PROFILES.getLocalName(), testContent);\n        String fullcontent = ModelParsingSupport.getXmlContent(Element.DOMAIN.getLocalName(), getTargetNamespace(), getTargetNamespaceLocation(), testContent);\n\n        try {\n            ModelParsingSupport.parseDomainModel(getXMLMapper(), fullcontent);\n            fail(\"Extraneous child element did not cause parsing failure\");\n        }\n        catch (XMLStreamException good) {\n            // TODO validate the location stuff in the exception message\n        }\n\n        testContent = \"<profile name=\\\"test\\\">\" + MockSubsystemElement.getSingleSubsystemXmlContent() + \"<bogus/><\/profile>\";\n        testContent = ModelParsingSupport.wrap(Element.PROFILES.getLocalName(), testContent);\n        fullcontent = ModelParsingSupport.getXmlContent(Element.DOMAIN.getLocalName(), getTargetNamespace(), getTargetNamespaceLocation(), testContent);\n\n        try {\n            ModelParsingSupport.parseDomainModel(getXMLMapper(), fullcontent);\n            fail(\"Extraneous child element did not cause parsing failure\");\n        }\n        catch (XMLStreamException good) {\n            // TODO validate the location stuff in the exception message\n        }\n    }","commit_id":"64b8ff5f9f9ab3031ca10dd9651849921e49eb5f","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void testParseWithInclude() throws Exception {\n        String testContent = \"<profile name=\\\"test\\\"><include profile=\\\"foo\\\"/>\" + MockAnyElement.getFullXmlContent() + \"<\/profile>\";\n        String fullcontent = MockRootElement.getXmlContent(getTargetNamespace(), getTargetNamespaceLocation(), true, testContent);\n        MockRootElement root = MockRootElementParser.parseRootElement(getXMLMapper(), new StringReader(fullcontent));\n        ProfileElement testee = (ProfileElement) root.getChild(getTargetNamespace(), Element.PROFILE.getLocalName());\n        assertEquals(\"test\", testee.getName());\n        Set<ProfileIncludeElement> includes = testee.getIncludedProfiles();\n        assertEquals(1, includes.size());\n        ProfileIncludeElement include = includes.iterator().next();\n        assertEquals(\"foo\", include.getProfile());\n        Set<AbstractSubsystemElement<? extends AbstractSubsystemElement<?>>> subsystems = testee.getSubsystems();\n        assertEquals(2, subsystems.size());\n        boolean gotMock = false;\n        boolean gotAnotherMock = false;\n        for (AbstractSubsystemElement<? extends AbstractSubsystemElement<?>> subsystem : subsystems) {\n            if (MockAnyElement.MOCK_ELEMENT_QNAME.equals(subsystem.getElementName())) {\n                gotMock = true;\n            }\n            else if (MockAnyElement.ANOTHER_MOCK_ELEMENT_QNAME.equals(subsystem.getElementName())) {\n                gotAnotherMock = true;\n            }\n            else {\n                fail(\"Unknown subsystem QName \" + subsystem.getElementName());\n            }\n        }\n        assertTrue(gotMock);\n        assertTrue(gotAnotherMock);\n    }","id":15807,"modified_method":"public void testParseWithInclude() throws Exception {\n        String testContent = \"<profile name=\\\"foo\\\">\" + MockSubsystemElement.getAnotherSubsystemXmlContent() + \"<\/profile>\";\n        testContent += \"<profile name=\\\"test\\\"><include profile=\\\"foo\\\"/>\" + MockSubsystemElement.getSingleSubsystemXmlContent() + \"<\/profile>\";\n        testContent = ModelParsingSupport.wrap(Element.PROFILES.getLocalName(), testContent);\n        String fullcontent = ModelParsingSupport.getXmlContent(Element.DOMAIN.getLocalName(), getTargetNamespace(), getTargetNamespaceLocation(), testContent);\n        DomainModel root = ModelParsingSupport.parseDomainModel(getXMLMapper(), fullcontent);\n        ProfileElement testee = root.getProfile(\"test\");\n        assertNotNull(testee);\n        assertEquals(\"test\", testee.getName());\n        Set<String> includes = testee.getIncludedProfiles();\n        assertEquals(1, includes.size());\n        String include = includes.iterator().next();\n        assertEquals(\"foo\", include);\n        Set<AbstractSubsystemElement<? extends AbstractSubsystemElement<?>>> subsystems = testee.getSubsystems();\n        assertEquals(1, subsystems.size());\n        boolean gotMock = false;\n        for (AbstractSubsystemElement<? extends AbstractSubsystemElement<?>> subsystem : subsystems) {\n            if (MockSubsystemElement.MOCK_ELEMENT_QNAME.equals(subsystem.getElementName())) {\n                gotMock = true;\n            }\n            else {\n                fail(\"Unknown subsystem QName \" + subsystem.getElementName());\n            }\n        }\n        assertTrue(gotMock);\n    }","commit_id":"64b8ff5f9f9ab3031ca10dd9651849921e49eb5f","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void testNoNameParse() throws Exception {\n        String testContent = \"<profile>\" + MockAnyElement.getSimpleXmlContent() + \"<\/profile>\";\n        String fullcontent = MockRootElement.getXmlContent(getTargetNamespace(), getTargetNamespaceLocation(), true, testContent);\n\n        try {\n            MockRootElementParser.parseRootElement(getXMLMapper(), new StringReader(fullcontent));\n            fail(\"Missing 'name' attribute did not cause parsing failure\");\n        }\n        catch (XMLStreamException good) {\n            // TODO validate the location stuff in the exception message\n        }\n    }","id":15808,"modified_method":"public void testNoNameParse() throws Exception {\n        String testContent = \"<profile>\" + MockSubsystemElement.getSingleSubsystemXmlContent() + \"<\/profile>\";\n        testContent = ModelParsingSupport.wrap(Element.PROFILES.getLocalName(), testContent);\n        String fullcontent = ModelParsingSupport.getXmlContent(Element.DOMAIN.getLocalName(), getTargetNamespace(), getTargetNamespaceLocation(), testContent);\n\n        try {\n            ModelParsingSupport.parseDomainModel(getXMLMapper(), fullcontent);\n            fail(\"Missing 'name' attribute did not cause parsing failure\");\n        }\n        catch (XMLStreamException good) {\n            // TODO validate the location stuff in the exception message\n        }\n    }","commit_id":"64b8ff5f9f9ab3031ca10dd9651849921e49eb5f","url":"https://github.com/wildfly/wildfly"},{"original_method":"protected XMLMapper createXMLMapper() throws Exception{\n\n        XMLMapper mapper = XMLMapper.Factory.create();\n        MockRootElementParser.registerXMLElementReaders(mapper, getTargetNamespace());\n        mapper.registerRootElement(new QName(getTargetNamespace(), Element.PROFILE.getLocalName()),\n                new TestXMLElementReader<ProfileElement>(callback));\n        MockAnyElementParser.registerXMLElementReaders(mapper);\n        return mapper;\n    }","id":15809,"modified_method":"@Override\n    protected XMLMapper createXMLMapper() throws Exception{\n\n        XMLMapper mapper = XMLMapper.Factory.create();\n        MockRootElementParser.registerXMLElementReaders(mapper, getTargetNamespace());\n        mapper.registerRootElement(new QName(getTargetNamespace(), Element.DOMAIN.getLocalName()),\n                ModelXmlParsers.DOMAIN_XML_READER);\n        MockSubystemElementParser.registerXMLElementReaders(mapper);\n        return mapper;\n    }","commit_id":"64b8ff5f9f9ab3031ca10dd9651849921e49eb5f","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void testBadAttributeParse() throws Exception {\n        String testContent = \"<profile bogus=\\\"bogus\\\">\" + MockAnyElement.getSimpleXmlContent() + \"<\/profile>\";\n        String fullcontent = MockRootElement.getXmlContent(getTargetNamespace(), getTargetNamespaceLocation(), true, testContent);\n\n        try {\n            MockRootElementParser.parseRootElement(getXMLMapper(), new StringReader(fullcontent));\n            fail(\"Extraneous 'bogus' attribute did not cause parsing failure\");\n        }\n        catch (XMLStreamException good) {\n            // TODO validate the location stuff in the exception message\n        }\n\n        testContent = \"<profile name=\\\"test\\\" bogus=\\\"bogus\\\">\" + MockAnyElement.getSimpleXmlContent() + \"<\/profile>\";\n        fullcontent = MockRootElement.getXmlContent(getTargetNamespace(), getTargetNamespaceLocation(), true, testContent);\n\n        try {\n            MockRootElementParser.parseRootElement(getXMLMapper(), new StringReader(fullcontent));\n            fail(\"Extraneous 'bogus' attribute did not cause parsing failure\");\n        }\n        catch (XMLStreamException good) {\n            // TODO validate the location stuff in the exception message\n        }\n    }","id":15810,"modified_method":"public void testBadAttributeParse() throws Exception {\n        String testContent = \"<profile bogus=\\\"bogus\\\">\" + MockSubsystemElement.getSingleSubsystemXmlContent() + \"<\/profile>\";\n        testContent = ModelParsingSupport.wrap(Element.PROFILES.getLocalName(), testContent);\n        String fullcontent = ModelParsingSupport.getXmlContent(Element.DOMAIN.getLocalName(), getTargetNamespace(), getTargetNamespaceLocation(), testContent);\n\n        try {\n            ModelParsingSupport.parseDomainModel(getXMLMapper(), fullcontent);\n            fail(\"Extraneous 'bogus' attribute did not cause parsing failure\");\n        }\n        catch (XMLStreamException good) {\n            // TODO validate the location stuff in the exception message\n        }\n\n        testContent = \"<profile name=\\\"test\\\" bogus=\\\"bogus\\\">\" + MockSubsystemElement.getSingleSubsystemXmlContent() + \"<\/profile>\";\n        testContent = ModelParsingSupport.wrap(Element.PROFILES.getLocalName(), testContent);\n        fullcontent = ModelParsingSupport.getXmlContent(Element.DOMAIN.getLocalName(), getTargetNamespace(), getTargetNamespaceLocation(), testContent);\n\n        try {\n            ModelParsingSupport.parseDomainModel(getXMLMapper(), fullcontent);\n            fail(\"Extraneous 'bogus' attribute did not cause parsing failure\");\n        }\n        catch (XMLStreamException good) {\n            // TODO validate the location stuff in the exception message\n        }\n    }","commit_id":"64b8ff5f9f9ab3031ca10dd9651849921e49eb5f","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    protected XMLMapper createXMLMapper() throws Exception {\n\n        XMLMapper mapper = XMLMapper.Factory.create();\n        MockRootElementParser.registerXMLElementReaders(mapper, getTargetNamespace());\n        mapper.registerRootElement(new QName(getTargetNamespace(), Element.SYSTEM_PROPERTIES.getLocalName()),\n                new TestXMLElementReader<PropertiesElement>(callback));\n        MockAnyElementParser.registerXMLElementReaders(mapper);\n        return mapper;\n    }","id":15811,"modified_method":"@Override\n    protected XMLMapper createXMLMapper() throws Exception {\n\n        XMLMapper mapper = XMLMapper.Factory.create();\n        MockRootElementParser.registerXMLElementReaders(mapper, getTargetNamespace());\n        mapper.registerRootElement(new QName(getTargetNamespace(), Element.SYSTEM_PROPERTIES.getLocalName()),\n                new TestXMLElementReader<PropertiesElement>(callback));\n        return mapper;\n    }","commit_id":"64b8ff5f9f9ab3031ca10dd9651849921e49eb5f","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void _initialize(\n    boolean reverseAllSets/* for testing order independence*/,\n    VirtualFile forDir/* in LAZY_MODE only*/\n    ) {\n\n    final ProgressIndicator progress = ProgressManager.getInstance().getProgressIndicator();\n    if (progress != null) {\n      progress.pushState();\n      progress.setText(ProjectBundle.message(\"project.index.scanning.files.progress\"));\n    }\n\n    if (forDir == null) {\n      myDirToInfoMap.clear();\n      myPackageNameToDirsMap.clear();\n    }\n\n    if (forDir != null) {\n      // clear map for all ancestors to not interfer with previous results\n      VirtualFile dir = forDir;\n      do {\n        myDirToInfoMap.remove(dir);\n        dir = dir.getParent();\n      }\n      while (dir != null);\n    }\n\n    ModuleManager moduleManager = ModuleManager.getInstance(myProject);\n    Module[] modules = moduleManager.getModules();\n    if (reverseAllSets) {\n      modules = ArrayUtil.reverseArray(modules);\n    }\n\n    // exclude roots should be merged to prevent including excluded dirs of an inner module into the outer\n    // exclude root should exclude from its content root and all outer content roots\n\n    if (progress != null) {\n      progress.setText2(ProjectBundle.message(\"project.index.building.exclude.roots.progress\"));\n    }\n    Map<VirtualFile, Set<VirtualFile>> excludeRootsMap = new THashMap<VirtualFile, Set<VirtualFile>>();\n    for (Module module : modules) {\n      ModuleRootManager rootManager = ModuleRootManager.getInstance(module);\n      ContentEntry[] contentEntries = rootManager.getContentEntries();\n      for (ContentEntry contentEntry : contentEntries) {\n        VirtualFile contentRoot = contentEntry.getFile();\n        if (contentRoot == null) continue;\n\n        VirtualFile[] excludeRoots = contentEntry.getExcludeFolderFiles();\n        for (VirtualFile excludeRoot : excludeRoots) {\n          // Output paths should be excluded (if marked as such) regardless if they're under corresponding module's content root\n          if (!VfsUtil.isAncestor(contentRoot, excludeRoot, false)) {\n            if (rootManager.getCompilerOutputPath() == excludeRoot || rootManager.getCompilerOutputPathForTests() == excludeRoot) {\n              putForFileAndAllAncestors(excludeRootsMap, excludeRoot, excludeRoot);\n            }\n          }\n\n          putForFileAndAllAncestors(excludeRootsMap, contentRoot, excludeRoot);\n        }\n      }\n    }\n\n    final FileTypeManager fileTypeManager = FileTypeManager.getInstance();\n\n    // fill module content's\n    for (Module module : modules) {\n      ModuleRootManager rootManager = ModuleRootManager.getInstance(module);\n\n      if (progress != null) {\n        progress.setText2(ProjectBundle.message(\"project.index.processing.module.content.progress\", module.getName()));\n      }\n      VirtualFile[] contentRoots = rootManager.getContentRoots();\n      if (reverseAllSets) {\n        contentRoots = ArrayUtil.reverseArray(contentRoots);\n      }\n\n      for (final VirtualFile contentRoot : contentRoots) {\n        Set<VirtualFile> excludeRootsSet = excludeRootsMap.get(contentRoot);\n        fillMapWithModuleContent(contentRoot, module, contentRoot, excludeRootsSet, forDir, fileTypeManager);\n      }\n    }\n\n    // fill module sources\n    for (Module module : modules) {\n      ModuleRootManager rootManager = ModuleRootManager.getInstance(module);\n\n      if (progress != null) {\n        progress.setText2(ProjectBundle.message(\"project.index.processing.module.sources.progress\", module.getName()));\n      }\n\n      ContentEntry[] contentEntries = rootManager.getContentEntries();\n      if (reverseAllSets) {\n        contentEntries = ArrayUtil.reverseArray(contentEntries);\n      }\n      for (ContentEntry contentEntry : contentEntries) {\n        SourceFolder[] sourceFolders = contentEntry.getSourceFolders();\n        if (reverseAllSets) {\n          sourceFolders = ArrayUtil.reverseArray(sourceFolders);\n        }\n        for (SourceFolder sourceFolder : sourceFolders) {\n          VirtualFile dir = sourceFolder.getFile();\n          if (dir != null) {\n            fillMapWithModuleSource(dir, module, sourceFolder.getPackagePrefix(), dir, sourceFolder.isTestSource(), forDir);\n          }\n        }\n      }\n    }\n\n    // fill library sources\n    for (Module module : modules) {\n      ModuleRootManager rootManager = ModuleRootManager.getInstance(module);\n\n      if (progress != null) {\n        progress.setText2(ProjectBundle.message(\"project.index.processing.library.sources.progress\", module.getName()));\n      }\n      OrderEntry[] orderEntries = rootManager.getOrderEntries();\n      for (OrderEntry orderEntry : orderEntries) {\n        boolean isLibrary = orderEntry instanceof LibraryOrderEntry || orderEntry instanceof JdkOrderEntry;\n        if (isLibrary) {\n          VirtualFile[] sourceRoots = orderEntry.getFiles(OrderRootType.SOURCES);\n          for (final VirtualFile sourceRoot : sourceRoots) {\n            fillMapWithLibrarySources(sourceRoot, \"\", sourceRoot, forDir, fileTypeManager);\n          }\n        }\n      }\n    }\n\n    // fill library classes\n    for (Module module : modules) {\n      ModuleRootManager rootManager = ModuleRootManager.getInstance(module);\n\n      if (progress != null) {\n        progress.setText2(ProjectBundle.message(\"project.index.processing.library.classes.progress\", module.getName()));\n      }\n      OrderEntry[] orderEntries = rootManager.getOrderEntries();\n      for (OrderEntry orderEntry : orderEntries) {\n        boolean isLibrary = orderEntry instanceof LibraryOrderEntry || orderEntry instanceof JdkOrderEntry;\n        if (isLibrary) {\n          VirtualFile[] classRoots = orderEntry.getFiles(OrderRootType.CLASSES);\n          for (final VirtualFile classRoot : classRoots) {\n            fillMapWithLibraryClasses(classRoot, \"\", classRoot, forDir, fileTypeManager);\n          }\n        }\n      }\n    }\n\n    if (progress != null) {\n      progress.setText2(\"\");\n    }\n    // fill order entries\n    for (Module module : modules) {\n      ModuleRootManager rootManager = ModuleRootManager.getInstance(module);\n\n      OrderEntry[] orderEntries = rootManager.getOrderEntries();\n      for (OrderEntry orderEntry : orderEntries) {\n        List<OrderEntry> oneEntryList = Arrays.asList(new OrderEntry[]{orderEntry});\n\n\n        if (orderEntry instanceof ModuleOrderEntry) {\n          // [dsl] this is probably incorrect. However I do not see any other way (yet)\n          // to make exporting work.\n          Module entryModule = null;\n\n          VirtualFile[] importedClassRoots = orderEntry.getFiles(OrderRootType.COMPILATION_CLASSES);\n          for (VirtualFile importedClassRoot : importedClassRoots) {\n            fillMapWithOrderEntries(importedClassRoot, oneEntryList, entryModule, null, null, forDir, null, null, fileTypeManager);\n          }\n\n          VirtualFile[] sourceRoots = orderEntry.getFiles(OrderRootType.SOURCES);\n          for (VirtualFile sourceRoot : sourceRoots) {\n            fillMapWithOrderEntries(sourceRoot, oneEntryList, entryModule, null, null, forDir, null, null, fileTypeManager);\n          }\n        }\n        else if (orderEntry instanceof ModuleSourceOrderEntry) {\n          Module entryModule = orderEntry.getOwnerModule();\n\n          VirtualFile[] sourceRoots = orderEntry.getFiles(OrderRootType.SOURCES);\n          for (VirtualFile sourceRoot : sourceRoots) {\n            fillMapWithOrderEntries(sourceRoot, oneEntryList, entryModule, null, null, forDir, null, null, fileTypeManager);\n          }\n        }\n        else if (orderEntry instanceof LibraryOrderEntry || orderEntry instanceof JdkOrderEntry) {\n          VirtualFile[] classRoots = orderEntry.getFiles(OrderRootType.CLASSES);\n          for (VirtualFile classRoot : classRoots) {\n            fillMapWithOrderEntries(classRoot, oneEntryList, null, classRoot, null, forDir, null, null, fileTypeManager);\n          }\n\n          VirtualFile[] sourceRoots = orderEntry.getFiles(OrderRootType.SOURCES);\n          for (VirtualFile sourceRoot : sourceRoots) {\n            fillMapWithOrderEntries(sourceRoot, oneEntryList, null, null, sourceRoot, forDir, null, null, fileTypeManager);\n          }\n        }\n      }\n    }\n\n    if (progress != null) {\n      progress.popState();\n    }\n  }","id":15812,"modified_method":"private void _initialize(\n    boolean reverseAllSets/* for testing order independence*/,\n    VirtualFile forDir/* in LAZY_MODE only*/\n    ) {\n\n    final ProgressIndicator progress = ProgressManager.getInstance().getProgressIndicator();\n    if (progress != null) {\n      progress.pushState();\n      progress.setText(ProjectBundle.message(\"project.index.scanning.files.progress\"));\n    }\n\n    if (forDir == null) {\n      myDirToInfoMap.clear();\n      myPackageNameToDirsMap.clear();\n    }\n\n    if (forDir != null) {\n      // clear map for all ancestors to not interfer with previous results\n      VirtualFile dir = forDir;\n      do {\n        myDirToInfoMap.remove(dir);\n        dir = dir.getParent();\n      }\n      while (dir != null);\n    }\n\n    ModuleManager moduleManager = ModuleManager.getInstance(myProject);\n    Module[] modules = moduleManager.getModules();\n    if (reverseAllSets) {\n      modules = ArrayUtil.reverseArray(modules);\n    }\n\n    // exclude roots should be merged to prevent including excluded dirs of an inner module into the outer\n    // exclude root should exclude from its content root and all outer content roots\n\n    if (progress != null) {\n      progress.setText2(ProjectBundle.message(\"project.index.building.exclude.roots.progress\"));\n    }\n    Map<VirtualFile, Set<VirtualFile>> excludeRootsMap = new THashMap<VirtualFile, Set<VirtualFile>>();\n    for (Module module : modules) {\n      ModuleRootManager rootManager = ModuleRootManager.getInstance(module);\n      ContentEntry[] contentEntries = rootManager.getContentEntries();\n      for (ContentEntry contentEntry : contentEntries) {\n        VirtualFile contentRoot = contentEntry.getFile();\n        if (contentRoot == null) continue;\n\n        VirtualFile[] excludeRoots = contentEntry.getExcludeFolderFiles();\n        for (VirtualFile excludeRoot : excludeRoots) {\n          // Output paths should be excluded (if marked as such) regardless if they're under corresponding module's content root\n          if (!VfsUtil.isAncestor(contentRoot, excludeRoot, false)) {\n            if (rootManager.getCompilerOutputPath() == excludeRoot || rootManager.getCompilerOutputPathForTests() == excludeRoot) {\n              putForFileAndAllAncestors(excludeRootsMap, excludeRoot, excludeRoot);\n            }\n          }\n\n          putForFileAndAllAncestors(excludeRootsMap, contentRoot, excludeRoot);\n        }\n      }\n    }\n\n    final FileTypeManager fileTypeManager = FileTypeManager.getInstance();\n\n    // fill module content's\n    for (Module module : modules) {\n      ModuleRootManager rootManager = ModuleRootManager.getInstance(module);\n\n      if (progress != null) {\n        progress.setText2(ProjectBundle.message(\"project.index.processing.module.content.progress\", module.getName()));\n      }\n      VirtualFile[] contentRoots = rootManager.getContentRoots();\n      if (reverseAllSets) {\n        contentRoots = ArrayUtil.reverseArray(contentRoots);\n      }\n\n      for (final VirtualFile contentRoot : contentRoots) {\n        Set<VirtualFile> excludeRootsSet = excludeRootsMap.get(contentRoot);\n        fillMapWithModuleContent(contentRoot, module, contentRoot, excludeRootsSet, forDir, fileTypeManager);\n      }\n    }\n\n    // fill module sources\n    for (Module module : modules) {\n      ModuleRootManager rootManager = ModuleRootManager.getInstance(module);\n\n      if (progress != null) {\n        progress.setText2(ProjectBundle.message(\"project.index.processing.module.sources.progress\", module.getName()));\n      }\n\n      ContentEntry[] contentEntries = rootManager.getContentEntries();\n      if (reverseAllSets) {\n        contentEntries = ArrayUtil.reverseArray(contentEntries);\n      }\n      for (ContentEntry contentEntry : contentEntries) {\n        SourceFolder[] sourceFolders = contentEntry.getSourceFolders();\n        if (reverseAllSets) {\n          sourceFolders = ArrayUtil.reverseArray(sourceFolders);\n        }\n        for (SourceFolder sourceFolder : sourceFolders) {\n          VirtualFile dir = sourceFolder.getFile();\n          if (dir != null) {\n            fillMapWithModuleSource(dir, module, sourceFolder.getPackagePrefix(), dir, sourceFolder.isTestSource(), forDir);\n          }\n        }\n      }\n    }\n\n    // fill library sources\n    for (Module module : modules) {\n      ModuleRootManager rootManager = ModuleRootManager.getInstance(module);\n\n      if (progress != null) {\n        progress.setText2(ProjectBundle.message(\"project.index.processing.library.sources.progress\", module.getName()));\n      }\n      OrderEntry[] orderEntries = rootManager.getOrderEntries();\n      for (OrderEntry orderEntry : orderEntries) {\n        boolean isLibrary = orderEntry instanceof LibraryOrderEntry || orderEntry instanceof JdkOrderEntry;\n        if (isLibrary) {\n          VirtualFile[] sourceRoots = orderEntry.getFiles(OrderRootType.SOURCES);\n          for (final VirtualFile sourceRoot : sourceRoots) {\n            fillMapWithLibrarySources(sourceRoot, \"\", sourceRoot, forDir, fileTypeManager);\n          }\n        }\n      }\n    }\n\n    // fill library classes\n    for (Module module : modules) {\n      ModuleRootManager rootManager = ModuleRootManager.getInstance(module);\n\n      if (progress != null) {\n        progress.setText2(ProjectBundle.message(\"project.index.processing.library.classes.progress\", module.getName()));\n      }\n      OrderEntry[] orderEntries = rootManager.getOrderEntries();\n      for (OrderEntry orderEntry : orderEntries) {\n        boolean isLibrary = orderEntry instanceof LibraryOrderEntry || orderEntry instanceof JdkOrderEntry;\n        if (isLibrary) {\n          VirtualFile[] classRoots = orderEntry.getFiles(OrderRootType.CLASSES);\n          for (final VirtualFile classRoot : classRoots) {\n            fillMapWithLibraryClasses(classRoot, \"\", classRoot, forDir, fileTypeManager);\n          }\n        }\n      }\n    }\n\n    if (progress != null) {\n      progress.setText2(\"\");\n    }\n    // fill order entries\n    for (Module module : modules) {\n      ModuleRootManager rootManager = ModuleRootManager.getInstance(module);\n\n      OrderEntry[] orderEntries = rootManager.getOrderEntries();\n      final Map<VirtualFile, List<OrderEntry>> depEntries = new HashMap<VirtualFile, List<OrderEntry>>();\n      final Map<VirtualFile, List<OrderEntry>> libClassRootEntries = new HashMap<VirtualFile, List<OrderEntry>>();\n      final Map<VirtualFile, List<OrderEntry>> libSourceRootEntries = new HashMap<VirtualFile, List<OrderEntry>>();\n      for (OrderEntry orderEntry : orderEntries) {\n        if (orderEntry instanceof ModuleOrderEntry) {\n          VirtualFile[] importedClassRoots = orderEntry.getFiles(OrderRootType.COMPILATION_CLASSES);\n          for (VirtualFile importedClassRoot : importedClassRoots) {\n            addEntryToMap(importedClassRoot, orderEntry, depEntries);\n          }\n          VirtualFile[] sourceRoots = orderEntry.getFiles(OrderRootType.SOURCES);\n          for (VirtualFile sourceRoot : sourceRoots) {\n            addEntryToMap(sourceRoot, orderEntry, depEntries);\n          }\n        } else if (orderEntry instanceof ModuleSourceOrderEntry) {\n          List<OrderEntry> oneEntryList = Arrays.asList(new OrderEntry[]{orderEntry});\n          Module entryModule = orderEntry.getOwnerModule();\n\n          VirtualFile[] sourceRoots = orderEntry.getFiles(OrderRootType.SOURCES);\n          for (VirtualFile sourceRoot : sourceRoots) {\n            fillMapWithOrderEntries(sourceRoot, oneEntryList, entryModule, null, null, forDir, null, null, fileTypeManager);\n          }\n        } else if (orderEntry instanceof LibraryOrderEntry || orderEntry instanceof JdkOrderEntry) {\n          VirtualFile[] classRoots = orderEntry.getFiles(OrderRootType.CLASSES);\n          for (VirtualFile classRoot : classRoots) {\n            addEntryToMap(classRoot, orderEntry, libClassRootEntries);\n          }\n          VirtualFile[] sourceRoots = orderEntry.getFiles(OrderRootType.SOURCES);\n          for (VirtualFile sourceRoot : sourceRoots) {\n            addEntryToMap(sourceRoot, orderEntry, libSourceRootEntries);\n          }\n        }\n      }\n\n      for (Map.Entry<VirtualFile, List<OrderEntry>> mapEntry : depEntries.entrySet()) {\n        final VirtualFile vRoot = mapEntry.getKey();\n        final List<OrderEntry> entries = mapEntry.getValue();\n        fillMapWithOrderEntries(vRoot, entries, null, null, null, forDir, null, null, fileTypeManager);\n      }\n\n      for (Map.Entry<VirtualFile, List<OrderEntry>> mapEntry : libClassRootEntries.entrySet()) {\n        final VirtualFile vRoot = mapEntry.getKey();\n        final List<OrderEntry> entries = mapEntry.getValue();\n        fillMapWithOrderEntries(vRoot, entries, null, vRoot, null, forDir, null, null, fileTypeManager);\n      }\n\n      for (Map.Entry<VirtualFile, List<OrderEntry>> mapEntry : libSourceRootEntries.entrySet()) {\n        final VirtualFile vRoot = mapEntry.getKey();\n        final List<OrderEntry> entries = mapEntry.getValue();\n        fillMapWithOrderEntries(vRoot, entries, null, null, vRoot, forDir, null, null, fileTypeManager);\n      }\n    }\n\n    if (progress != null) {\n      progress.popState();\n    }\n  }","commit_id":"5244a7fcdaf82d71c7166dde7b256e7a087a3955","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean isInTrash(long classPK)\n\t\tthrows PortalException, SystemException {\n\n\t\tBookmarksFolder folder = getBookmarksFolder(classPK);\n\n\t\tif (folder.isInTrash() || folder.isInTrashContainer()) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}","id":15813,"modified_method":"public boolean isInTrash(long classPK)\n\t\tthrows PortalException, SystemException {\n\n\t\tBookmarksFolder folder = getBookmarksFolder(classPK);\n\n\t\treturn folder.isInTrash();\n\t}","commit_id":"758d72aee461b00cb7a6d6f70497a0932cb541be","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public String getViewContentURL(\n\t\t\tString className, long classPK, ThemeDisplay themeDisplay)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (!themeDisplay.isSignedIn() ||\n\t\t\t!isTrashEnabled(themeDisplay.getScopeGroupId())) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\tTrashHandler trashHandler = TrashHandlerRegistryUtil.getTrashHandler(\n\t\t\tclassName);\n\n\t\tif (trashHandler.isInTrashContainer(classPK)) {\n\t\t\tContainerModel containerModel = trashHandler.getTrashContainer(\n\t\t\t\tclassPK);\n\n\t\t\tclassPK = containerModel.getContainerModelId();\n\n\t\t\tclassName = containerModel.getModelClassName();\n\n\t\t\ttrashHandler = TrashHandlerRegistryUtil.getTrashHandler(className);\n\t\t}\n\n\t\tTrashRenderer trashRenderer = trashHandler.getTrashRenderer(classPK);\n\n\t\tString urlViewContent = null;\n\n\t\tif (trashRenderer != null) {\n\t\t\tTrashEntry trashEntry = TrashEntryLocalServiceUtil.getEntry(\n\t\t\t\tclassName, classPK);\n\n\t\t\tString namespace = PortalUtil.getPortletNamespace(\n\t\t\t\tPortletKeys.TRASH);\n\n\t\t\turlViewContent = PortalUtil.getControlPanelFullURL(\n\t\t\t\tthemeDisplay.getScopeGroupId(), PortletKeys.TRASH, null);\n\n\t\t\turlViewContent = HttpUtil.addParameter(\n\t\t\t\turlViewContent, namespace + \"struts_action\",\n\t\t\t\t\"/trash/view_content\");\n\t\t\turlViewContent = HttpUtil.addParameter(\n\t\t\t\turlViewContent, namespace + \"redirect\",\n\t\t\t\tthemeDisplay.getURLCurrent());\n\n\t\t\tif (trashEntry.getRootEntry() != null) {\n\t\t\t\turlViewContent = HttpUtil.addParameter(\n\t\t\t\t\turlViewContent, namespace + \"className\", className);\n\t\t\t\turlViewContent = HttpUtil.addParameter(\n\t\t\t\t\turlViewContent, namespace + \"classPK\",\n\t\t\t\t\tString.valueOf(classPK));\n\t\t\t}\n\t\t\telse {\n\t\t\t\turlViewContent = HttpUtil.addParameter(\n\t\t\t\t\turlViewContent, namespace + \"trashEntryId\",\n\t\t\t\t\tString.valueOf(trashEntry.getEntryId()));\n\t\t\t}\n\n\t\t\turlViewContent = HttpUtil.addParameter(\n\t\t\t\turlViewContent, namespace + \"type\", trashRenderer.getType());\n\t\t\turlViewContent = HttpUtil.addParameter(\n\t\t\t\turlViewContent, namespace + \"showActions\",\n\t\t\t\tBoolean.FALSE.toString());\n\t\t\turlViewContent = HttpUtil.addParameter(\n\t\t\t\turlViewContent, namespace + \"showAssetMetadata\",\n\t\t\t\tBoolean.TRUE.toString());\n\t\t\turlViewContent = HttpUtil.addParameter(\n\t\t\t\turlViewContent, namespace + \"showEditURL\",\n\t\t\t\tBoolean.FALSE.toString());\n\t\t}\n\n\t\treturn urlViewContent;\n\t}","id":15814,"modified_method":"public String getViewContentURL(\n\t\t\tString className, long classPK, ThemeDisplay themeDisplay)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (!themeDisplay.isSignedIn() ||\n\t\t\t!isTrashEnabled(themeDisplay.getScopeGroupId()) ||\n\t\t\t!PortletPermissionUtil.hasControlPanelAccessPermission(\n\t\t\t\tthemeDisplay.getPermissionChecker(),\n\t\t\t\tthemeDisplay.getScopeGroupId(), PortletKeys.TRASH)) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\tTrashHandler trashHandler = TrashHandlerRegistryUtil.getTrashHandler(\n\t\t\tclassName);\n\n\t\tif (trashHandler.isInTrashContainer(classPK)) {\n\t\t\tContainerModel containerModel = trashHandler.getTrashContainer(\n\t\t\t\tclassPK);\n\n\t\t\tclassPK = containerModel.getContainerModelId();\n\n\t\t\tclassName = containerModel.getModelClassName();\n\n\t\t\ttrashHandler = TrashHandlerRegistryUtil.getTrashHandler(className);\n\t\t}\n\n\t\tTrashRenderer trashRenderer = trashHandler.getTrashRenderer(classPK);\n\n\t\tif (trashRenderer == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tTrashEntry trashEntry = TrashEntryLocalServiceUtil.getEntry(\n\t\t\tclassName, classPK);\n\n\t\tString namespace = PortalUtil.getPortletNamespace(PortletKeys.TRASH);\n\n\t\tMap<String, String[]> params = new HashMap<String, String[]>();\n\n\t\tparams.put(\n\t\t\tnamespace + \"struts_action\", new String[]{\"/trash/view_content\"});\n\t\tparams.put(\n\t\t\tnamespace + \"redirect\", new String[]{themeDisplay.getURLCurrent()});\n\n\t\tif (trashEntry.getRootEntry() != null) {\n\t\t\tparams.put(namespace + \"className\", new String[]{className});\n\t\t\tparams.put(\n\t\t\t\tnamespace + \"classPK\", new String[]{String.valueOf(classPK)});\n\t\t}\n\t\telse {\n\t\t\tparams.put(\n\t\t\t\tnamespace + \"trashEntryId\",\n\t\t\t\tnew String[]{String.valueOf(trashEntry.getEntryId())});\n\t\t}\n\n\t\tparams.put(namespace + \"type\", new String[]{trashRenderer.getType()});\n\t\tparams.put(\n\t\t\tnamespace + \"showActions\", new String[]{Boolean.FALSE.toString()});\n\t\tparams.put(\n\t\t\tnamespace + \"showAssetMetadata\",\n\t\t\tnew String[]{Boolean.TRUE.toString()});\n\t\tparams.put(\n\t\t\tnamespace + \"showEditURL\", new String[]{Boolean.FALSE.toString()});\n\n\t\treturn PortalUtil.getControlPanelFullURL(\n\t\t\tthemeDisplay.getScopeGroupId(), PortletKeys.TRASH, params);\n\t}","commit_id":"758d72aee461b00cb7a6d6f70497a0932cb541be","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public ContextMenuAdapter createListAdapter(final MapActivity ma) {\n\t\tContextMenuAdapter adapter = new ContextMenuAdapter(ma);\n\t\tadapter.item(R.string.layers_category_show).setCategory(true).reg();\n\t\tadapter.item(R.string.configure_map).icons(R.drawable.ic_back_drawer_dark, R.drawable.ic_back_drawer_white)\n\t\t\t\t.listen(new OnContextMenuClick() {\n\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\tma.getMapActions().prepareStartOptionsMenu();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).reg();\n\t\tcreateLayersItems(adapter, ma);\n\t\tcreateRenderingAttributeItems(adapter, ma);\n\t\treturn adapter;\n\t}","id":15815,"modified_method":"public ContextMenuAdapter createListAdapter(final MapActivity ma) {\n\t\tContextMenuAdapter adapter = new ContextMenuAdapter(ma);\n\t\tadapter.item(R.string.configure_map).icons(R.drawable.ic_back_drawer_dark, R.drawable.ic_back_drawer_white)\n\t\t\t\t.listen(new OnContextMenuClick() {\n\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\tma.getMapActions().prepareStartOptionsMenu();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).reg();\n\t\tcreateLayersItems(adapter, ma);\n\t\tcreateRenderingAttributeItems(adapter, ma);\n\t\treturn adapter;\n\t}","commit_id":"eb7d572234adf030d9b5eea3993e895c1a401bab","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public void reg() {\n\t\t\tif (pos >= items.size() || pos < 0) {\n\t\t\t\tpos = items.size();\n\t\t\t}\n\t\t\titems.insert(pos, id);\n\t\t\titemNames.add(pos, name);\n\t\t\tselectedList.insert(pos, selected);\n\t\t\ticonList.insert(pos, icon);\n\t\t\ticonListLight.insert(pos, lightIcon);\n\t\t\tlisteners.add(pos, listener);\n\t\t\tisCategory.insert(pos, cat ? 1 : 0);\n\t\t}","id":15816,"modified_method":"public void reg() {\n\t\t\tif (pos >= items.size() || pos < 0) {\n\t\t\t\tpos = items.size();\n\t\t\t}\n\t\t\titems.insert(pos, id);\n\t\t\titemNames.add(pos, name);\n\t\t\tselectedList.insert(pos, selected);\n\t\t\tlayoutIds.insert(pos, layout);\n\t\t\ticonList.insert(pos, icon);\n\t\t\ticonListLight.insert(pos, lightIcon);\n\t\t\tlisteners.add(pos, listener);\n\t\t\tisCategory.insert(pos, cat ? 1 : 0);\n\t\t}","commit_id":"eb7d572234adf030d9b5eea3993e895c1a401bab","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public void removeItem(int pos) {\n\t\titems.removeAt(pos);\n\t\titemNames.remove(pos);\n\t\tselectedList.removeAt(pos);\n\t\ticonList.removeAt(pos);\n\t\ticonListLight.removeAt(pos);\n\t\tlisteners.remove(pos);\n\t\tisCategory.removeAt(pos);\n\t}","id":15817,"modified_method":"public void removeItem(int pos) {\n\t\titems.removeAt(pos);\n\t\titemNames.remove(pos);\n\t\tselectedList.removeAt(pos);\n\t\ticonList.removeAt(pos);\n\t\ticonListLight.removeAt(pos);\n\t\tlisteners.remove(pos);\n\t\tisCategory.removeAt(pos);\n\t\tlayoutIds.removeAt(pos);\n\t}","commit_id":"eb7d572234adf030d9b5eea3993e895c1a401bab","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public ListAdapter createListAdapter(final Activity activity, final int layoutId, final boolean holoLight) {\n\t\tfinal int padding = (int) (12 * activity.getResources().getDisplayMetrics().density + 0.5f);\n\t\tListAdapter listadapter = new ArrayAdapter<String>(activity, layoutId, R.id.title,\n\t\t\t\tgetItemNames()) {\n\t\t\t@Override\n\t\t\tpublic View getView(final int position, View convertView, ViewGroup parent) {\n\t\t\t\t// User super class to create the View\n\t\t\t\tView v = convertView;\n\t\t\t\tif (v == null) {\n\t\t\t\t\tv = activity.getLayoutInflater().inflate(layoutId, null);\n\t\t\t\t}\n\t\t\t\tTextView tv = (TextView) v.findViewById(R.id.title);\n\t\t\t\ttv.setText(getItemName(position));\n\n\t\t\t\t// Put the image on the TextView\n\t\t\t\tif (getImageId(position, holoLight) != 0) {\n\t\t\t\t\ttv.setCompoundDrawablesWithIntrinsicBounds(getImageId(position, holoLight), 0, 0, 0);\n\t\t\t\t} else {\n\t\t\t\t\ttv.setCompoundDrawablesWithIntrinsicBounds(R.drawable.ic_action_transparent, 0, 0, 0);\n\t\t\t\t}\n\t\t\t\ttv.setCompoundDrawablePadding(padding);\n\t\t\t\t\n\t\t\t\tif(isCategory(position)) {\n\t\t\t\t\ttv.setTypeface(Typeface.DEFAULT_BOLD);\n\t\t\t\t} else {\n\t\t\t\t\ttv.setTypeface(null);\n\t\t\t\t}\n\n\t\t\t\tfinal CheckBox ch = ((CheckBox) v.findViewById(R.id.check_item));\n\t\t\t\tif(selectedList.get(position) != -1) {\n\t\t\t\t\tch.setOnCheckedChangeListener(null);\n\t\t\t\t\tch.setVisibility(View.VISIBLE);\n\t\t\t\t\tch.setSelected(selectedList.get(position) > 0);\n\t\t\t\t\tch.setOnCheckedChangeListener(new OnCheckedChangeListener() {\n\t\t\t\t\t\t\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n\t\t\t\t\t\t\tOnContextMenuClick ca = getClickAdapter(position);\n\t\t\t\t\t\t\tif(ca != null) {\n\t\t\t\t\t\t\t\tca.onContextMenuClick((int) getItemId(position), position, isChecked);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tch.setVisibility(View.VISIBLE);\n\t\t\t\t} else {\n\t\t\t\t\tch.setVisibility(View.GONE);\n\t\t\t\t}\n\t\t\t\treturn v;\n\t\t\t}\n\t\t};\n\t\treturn listadapter;\n\t}","id":15818,"modified_method":"public ListAdapter createListAdapter(final Activity activity, final boolean holoLight) {\n\t\tfinal int padding = (int) (12 * activity.getResources().getDisplayMetrics().density + 0.5f);\n\t\tfinal int layoutId = defaultLayoutId;\n\t\tListAdapter listadapter = new ArrayAdapter<String>(activity, layoutId, R.id.title,\n\t\t\t\tgetItemNames()) {\n\t\t\t@Override\n\t\t\tpublic View getView(final int position, View convertView, ViewGroup parent) {\n\t\t\t\t// User super class to create the View\n\t\t\t\tView v = convertView;\n\t\t\t\tInteger lid = getLayoutId(position);\n\t\t\t\tif (v == null || (v.getTag() != lid)) {\n\t\t\t\t\tv = activity.getLayoutInflater().inflate(lid, null);\n\t\t\t\t\tv.setTag(lid);\n\t\t\t\t}\n\t\t\t\tTextView tv = (TextView) v.findViewById(R.id.title);\n\t\t\t\ttv.setText(getItemName(position));\n\n\t\t\t\t// Put the image on the TextView\n\t\t\t\tif (getImageId(position, holoLight) != 0) {\n\t\t\t\t\ttv.setCompoundDrawablesWithIntrinsicBounds(getImageId(position, holoLight), 0, 0, 0);\n\t\t\t\t} else {\n\t\t\t\t\ttv.setCompoundDrawablesWithIntrinsicBounds(R.drawable.ic_action_transparent, 0, 0, 0);\n\t\t\t\t}\n\t\t\t\ttv.setCompoundDrawablePadding(padding);\n\t\t\t\t\n\t\t\t\tif(isCategory(position)) {\n\t\t\t\t\ttv.setTypeface(Typeface.DEFAULT_BOLD);\n\t\t\t\t} else {\n\t\t\t\t\ttv.setTypeface(null);\n\t\t\t\t}\n\n\t\t\t\tfinal CheckBox ch = ((CheckBox) v.findViewById(R.id.check_item));\n\t\t\t\tif(selectedList.get(position) != -1) {\n\t\t\t\t\tch.setOnCheckedChangeListener(null);\n\t\t\t\t\tch.setVisibility(View.VISIBLE);\n\t\t\t\t\tch.setSelected(selectedList.get(position) > 0);\n\t\t\t\t\tch.setOnCheckedChangeListener(new OnCheckedChangeListener() {\n\t\t\t\t\t\t\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n\t\t\t\t\t\t\tOnContextMenuClick ca = getClickAdapter(position);\n\t\t\t\t\t\t\tif(ca != null) {\n\t\t\t\t\t\t\t\tca.onContextMenuClick((int) getItemId(position), position, isChecked);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tch.setVisibility(View.VISIBLE);\n\t\t\t\t} else {\n\t\t\t\t\tch.setVisibility(View.GONE);\n\t\t\t\t}\n\t\t\t\treturn v;\n\t\t\t}\n\t\t};\n\t\treturn listadapter;\n\t}","commit_id":"eb7d572234adf030d9b5eea3993e895c1a401bab","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public void contextMenuPoint(final double latitude, final double longitude, final ContextMenuAdapter iadapter, Object selectedObj) {\n\t\tfinal ContextMenuAdapter adapter = iadapter == null ? new ContextMenuAdapter(mapActivity) : iadapter;\n\n\t\tif(!mapActivity.getRoutingHelper().isFollowingMode() && !mapActivity.getRoutingHelper().isRoutePlanningMode()) {\n\t\t\tadapter.item(R.string.context_menu_item_directions_to).icons(\n\t\t\t\t\tR.drawable.ic_action_gdirections_dark, R.drawable.ic_action_gdirections_light).reg();\n\t\t\tadapter.item(R.string.context_menu_item_directions_from).icons(\n\t\t\t\t\tR.drawable.ic_action_gdirections_dark, R.drawable.ic_action_gdirections_light).reg();\n\t\t}\n\t\tfinal TargetPointsHelper targets = getMyApplication().getTargetPointsHelper();\n\t\tif(targets.getPointToNavigate() != null) {\n\t\t\tadapter.item(R.string.context_menu_item_destination_point).icons(R.drawable.ic_action_flag_dark,\n\t\t\t\t\tR.drawable.ic_action_flag_light).reg();\n\t\t\tadapter.item(R.string.context_menu_item_intermediate_point).icons(R.drawable.ic_action_flage_dark,\n\t\t\t\t\tR.drawable.ic_action_flage_light).reg();\n\t\t// For button-less search UI\n\t\t} else {\n\t\t\tadapter.item(R.string.context_menu_item_destination_point).icons(R.drawable.ic_action_flag_dark,\n\t\t\t\t\tR.drawable.ic_action_flag_light).reg();\n\t\t}\n\t\tadapter.item(R.string.context_menu_item_search).icons(R.drawable.ic_action_search_dark, \n\t\t\t\tR.drawable.ic_action_search_light).reg();\n\t\tadapter.item(R.string.context_menu_item_share_location).icons(\n\t\t\t\tR.drawable.ic_action_gshare_dark, R.drawable.ic_action_gshare_light).reg();\n\t\tadapter.item(R.string.context_menu_item_add_favorite).icons(\n\t\t\t\tR.drawable.ic_action_fav_dark, R.drawable.ic_action_fav_light ).reg();\n\t\t\n\t\t\n\n\t\tOsmandPlugin.registerMapContextMenu(mapActivity, latitude, longitude, adapter, selectedObj);\n\t\tgetMyApplication().getAppCustomization().prepareLocationMenu(mapActivity, adapter);\n\t\t\n\t\tfinal Builder builder = new AlertDialog.Builder(mapActivity);\n\t\tListAdapter listAdapter ;\n\t\tif(Build.VERSION.SDK_INT < Build.VERSION_CODES.HONEYCOMB){\n\t\t\tlistAdapter =\n\t\t\t\tadapter.createListAdapter(mapActivity, R.layout.list_menu_item, getMyApplication().getSettings().isLightContentMenu());\n\t\t} else {\n\t\t\tlistAdapter =\n\t\t\t\tadapter.createListAdapter(mapActivity, R.layout.list_menu_item_native, getMyApplication().getSettings().isLightContentMenu());\n\t\t}\n\t\tbuilder.setAdapter(listAdapter, new DialogInterface.OnClickListener() {\n\n\t\t\t@Override\n\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\tint standardId = adapter.getItemId(which);\n\t\t\t\tOnContextMenuClick click = adapter.getClickAdapter(which);\n\t\t\t\tif (click != null) {\n\t\t\t\t\tclick.onContextMenuClick(standardId, which, false);\n\t\t\t\t} else if (standardId == R.string.context_menu_item_search) {\n\t\t\t\t\tIntent intent = new Intent(mapActivity, mapActivity.getMyApplication().getAppCustomization().getSearchActivity());\n\t\t\t\t\tintent.putExtra(SearchActivity.SEARCH_LAT, latitude);\n\t\t\t\t\tintent.putExtra(SearchActivity.SEARCH_LON, longitude);\n\t\t\t\t\tintent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\n\t\t\t\t\tmapActivity.startActivity(intent);\n\t\t\t\t} else if (standardId == R.string.context_menu_item_directions_to) {\n\t\t\t\t\tString name = mapActivity.getMapLayers().getContextMenuLayer().getSelectedObjectName();\n\t\t\t\t\ttargets.navigateToPoint(new LatLon(latitude, longitude), true, -1, name);\n\t\t\t\t\tenterRoutePlanningMode(null, null, false);\n\t\t\t\t} else if (standardId == R.string.context_menu_item_directions_from) {\n\t\t\t\t\tString name = mapActivity.getMapLayers().getContextMenuLayer().getSelectedObjectName();\n\t\t\t\t\tenterRoutePlanningMode(new LatLon(latitude, longitude), name, false);\n\t\t\t\t} else if (standardId == R.string.context_menu_item_intermediate_point || \n\t\t\t\t\t\tstandardId == R.string.context_menu_item_destination_point) {\n\t\t\t\t\tboolean dest = standardId == R.string.context_menu_item_destination_point;\n\t\t\t\t\tString selected = mapActivity.getMapLayers().getContextMenuLayer().getSelectedObjectName();\n\t\t\t\t\ttargets.navigateToPoint(new LatLon(latitude, longitude), true, \n\t\t\t\t\t\t\tdest ? -1 : targets.getIntermediatePoints().size(), selected);\n\t\t\t\t\tif(targets.getIntermediatePoints().size() > 0) {\n\t\t\t\t\t\tIntermediatePointsDialog.openIntermediatePointsDialog(mapActivity);\n\t\t\t\t\t}\n\t\t\t\t} else if (standardId == R.string.context_menu_item_share_location) {\n\t\t\t\t\tenhance(dialogBundle,latitude,longitude,mapActivity.getMapView().getZoom());\n\t\t\t\t\tnew ShareLocation(mapActivity).run();\n\t\t\t\t} else if (standardId == R.string.context_menu_item_add_favorite) {\n\t\t\t\t\taddFavouritePoint(latitude, longitude);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tbuilder.create().show();\n\t}","id":15819,"modified_method":"public void contextMenuPoint(final double latitude, final double longitude, final ContextMenuAdapter iadapter, Object selectedObj) {\n\t\tfinal ContextMenuAdapter adapter = iadapter == null ? new ContextMenuAdapter(mapActivity) : iadapter;\n\n\t\tif(!mapActivity.getRoutingHelper().isFollowingMode() && !mapActivity.getRoutingHelper().isRoutePlanningMode()) {\n\t\t\tadapter.item(R.string.context_menu_item_directions_to).icons(\n\t\t\t\t\tR.drawable.ic_action_gdirections_dark, R.drawable.ic_action_gdirections_light).reg();\n\t\t\tadapter.item(R.string.context_menu_item_directions_from).icons(\n\t\t\t\t\tR.drawable.ic_action_gdirections_dark, R.drawable.ic_action_gdirections_light).reg();\n\t\t}\n\t\tfinal TargetPointsHelper targets = getMyApplication().getTargetPointsHelper();\n\t\tif(targets.getPointToNavigate() != null) {\n\t\t\tadapter.item(R.string.context_menu_item_destination_point).icons(R.drawable.ic_action_flag_dark,\n\t\t\t\t\tR.drawable.ic_action_flag_light).reg();\n\t\t\tadapter.item(R.string.context_menu_item_intermediate_point).icons(R.drawable.ic_action_flage_dark,\n\t\t\t\t\tR.drawable.ic_action_flage_light).reg();\n\t\t// For button-less search UI\n\t\t} else {\n\t\t\tadapter.item(R.string.context_menu_item_destination_point).icons(R.drawable.ic_action_flag_dark,\n\t\t\t\t\tR.drawable.ic_action_flag_light).reg();\n\t\t}\n\t\tadapter.item(R.string.context_menu_item_search).icons(R.drawable.ic_action_search_dark, \n\t\t\t\tR.drawable.ic_action_search_light).reg();\n\t\tadapter.item(R.string.context_menu_item_share_location).icons(\n\t\t\t\tR.drawable.ic_action_gshare_dark, R.drawable.ic_action_gshare_light).reg();\n\t\tadapter.item(R.string.context_menu_item_add_favorite).icons(\n\t\t\t\tR.drawable.ic_action_fav_dark, R.drawable.ic_action_fav_light ).reg();\n\t\t\n\t\t\n\n\t\tOsmandPlugin.registerMapContextMenu(mapActivity, latitude, longitude, adapter, selectedObj);\n\t\tgetMyApplication().getAppCustomization().prepareLocationMenu(mapActivity, adapter);\n\t\t\n\t\tfinal Builder builder = new AlertDialog.Builder(mapActivity);\n\t\tListAdapter listAdapter =\n\t\t\t\tadapter.createListAdapter(mapActivity, getMyApplication().getSettings().isLightContentMenu());\n\t\tbuilder.setAdapter(listAdapter, new DialogInterface.OnClickListener() {\n\n\t\t\t@Override\n\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\tint standardId = adapter.getItemId(which);\n\t\t\t\tOnContextMenuClick click = adapter.getClickAdapter(which);\n\t\t\t\tif (click != null) {\n\t\t\t\t\tclick.onContextMenuClick(standardId, which, false);\n\t\t\t\t} else if (standardId == R.string.context_menu_item_search) {\n\t\t\t\t\tIntent intent = new Intent(mapActivity, mapActivity.getMyApplication().getAppCustomization().getSearchActivity());\n\t\t\t\t\tintent.putExtra(SearchActivity.SEARCH_LAT, latitude);\n\t\t\t\t\tintent.putExtra(SearchActivity.SEARCH_LON, longitude);\n\t\t\t\t\tintent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\n\t\t\t\t\tmapActivity.startActivity(intent);\n\t\t\t\t} else if (standardId == R.string.context_menu_item_directions_to) {\n\t\t\t\t\tString name = mapActivity.getMapLayers().getContextMenuLayer().getSelectedObjectName();\n\t\t\t\t\ttargets.navigateToPoint(new LatLon(latitude, longitude), true, -1, name);\n\t\t\t\t\tenterRoutePlanningMode(null, null, false);\n\t\t\t\t} else if (standardId == R.string.context_menu_item_directions_from) {\n\t\t\t\t\tString name = mapActivity.getMapLayers().getContextMenuLayer().getSelectedObjectName();\n\t\t\t\t\tenterRoutePlanningMode(new LatLon(latitude, longitude), name, false);\n\t\t\t\t} else if (standardId == R.string.context_menu_item_intermediate_point || \n\t\t\t\t\t\tstandardId == R.string.context_menu_item_destination_point) {\n\t\t\t\t\tboolean dest = standardId == R.string.context_menu_item_destination_point;\n\t\t\t\t\tString selected = mapActivity.getMapLayers().getContextMenuLayer().getSelectedObjectName();\n\t\t\t\t\ttargets.navigateToPoint(new LatLon(latitude, longitude), true, \n\t\t\t\t\t\t\tdest ? -1 : targets.getIntermediatePoints().size(), selected);\n\t\t\t\t\tif(targets.getIntermediatePoints().size() > 0) {\n\t\t\t\t\t\tIntermediatePointsDialog.openIntermediatePointsDialog(mapActivity);\n\t\t\t\t\t}\n\t\t\t\t} else if (standardId == R.string.context_menu_item_share_location) {\n\t\t\t\t\tenhance(dialogBundle,latitude,longitude,mapActivity.getMapView().getZoom());\n\t\t\t\t\tnew ShareLocation(mapActivity).run();\n\t\t\t\t} else if (standardId == R.string.context_menu_item_add_favorite) {\n\t\t\t\t\taddFavouritePoint(latitude, longitude);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tbuilder.create().show();\n\t}","commit_id":"eb7d572234adf030d9b5eea3993e895c1a401bab","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public void prepareOptionsMenu(final ContextMenuAdapter cm) {\n\t\tListAdapter listAdapter;\n\t\tif(Build.VERSION.SDK_INT < Build.VERSION_CODES.HONEYCOMB){\n\t\t\tlistAdapter =\n\t\t\t\t\tcm.createListAdapter(mapActivity, R.layout.list_menu_item, getMyApplication().getSettings().isLightContentMenu());\n\t\t} else {\n\t\t\tlistAdapter =\n\t\t\t\t\tcm.createListAdapter(mapActivity, R.layout.list_menu_item_native, getMyApplication().getSettings().isLightContentMenu());\n\t\t}\n\t\tmDrawerList.setAdapter(listAdapter);\n\n\t\tif (getMyApplication().getSettings().isLightContentMenu()){\n\t\t\tmDrawerList.setBackgroundColor(mapActivity.getResources().getColor(R.color.color_white));\n\t\t} else {\n\t\t\tmDrawerList.setBackgroundColor(mapActivity.getResources().getColor(R.color.dark_drawer_bg_color));\n\t\t}\n\t\tmDrawerList.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n\n\t\t\t@Override\n\t\t\tpublic void onItemClick(AdapterView<?> parent, View view, int which, long id) {\n\t\t\t\tOnContextMenuClick click = cm.getClickAdapter(which);\n\t\t\t\tif (click != null) {\n\t\t\t\t\tif (click.onContextMenuClick(cm.getItemId(which), which, false)){\n\t\t\t\t\t\tmDrawerLayout.closeDrawer(mDrawerList);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmDrawerLayout.closeDrawer(mDrawerList);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}","id":15820,"modified_method":"public void prepareOptionsMenu(final ContextMenuAdapter cm) {\n\t\tListAdapter listAdapter =\n\t\t\t\tcm.createListAdapter(mapActivity, getMyApplication().getSettings().isLightContentMenu());\n\t\tmDrawerList.setAdapter(listAdapter);\n\t\tmDrawerList.setBackgroundColor(cm.getBackgroundColor(mapActivity, getMyApplication().getSettings().isLightContentMenu()));\n\t\tmDrawerList.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n\n\t\t\t@Override\n\t\t\tpublic void onItemClick(AdapterView<?> parent, View view, int which, long id) {\n\t\t\t\tOnContextMenuClick click = cm.getClickAdapter(which);\n\t\t\t\tif (click != null) {\n\t\t\t\t\tif (click.onContextMenuClick(cm.getItemId(which), which, false)){\n\t\t\t\t\t\tmDrawerLayout.closeDrawer(mDrawerList);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmDrawerLayout.closeDrawer(mDrawerList);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}","commit_id":"eb7d572234adf030d9b5eea3993e895c1a401bab","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public AlertDialog selectPOIFilterLayer(final OsmandMapTileView mapView, final PoiFilter[] selected){\n\t\tfinal List<PoiFilter> userDefined = new ArrayList<PoiFilter>();\n\t\tOsmandApplication app = (OsmandApplication)getApplication();\n\t\tfinal PoiFiltersHelper poiFilters = app.getPoiFilters();\n\t\tfinal ContextMenuAdapter adapter = new ContextMenuAdapter(activity);\n\t\t\n\t\tItem is = adapter.item(getString(R.string.any_poi));\n\t\tif(RenderingIcons.containsBigIcon(\"null\")) {\n\t\t\tis.icon(RenderingIcons.getBigIconResourceId(\"null\"));\n\t\t}\n\t\tis.reg();\n\t\t// 2nd custom\n\t\tadapter.item(getString(R.string.poi_filter_custom_filter)).icon(RenderingIcons.getBigIconResourceId(\"user_defined\")).reg();\n\t\t\n\t\tfor (PoiFilter f : poiFilters.getUserDefinedPoiFilters()) {\n\t\t\tItem it = adapter.item(f.getName());\n\t\t\tif (RenderingIcons.containsBigIcon(f.getSimplifiedId())) {\n\t\t\t\tit.icon(RenderingIcons.getBigIconResourceId(f.getSimplifiedId()));\n\t\t\t} else {\n\t\t\t\tit.icon(RenderingIcons.getBigIconResourceId(\"user_defined\"));\n\t\t\t}\n\t\t\tit.reg();\n\t\t\tuserDefined.add(f);\n\t\t}\n\t\tfinal AmenityType[] categories = AmenityType.getCategories();\n\t\tfor(AmenityType t : categories){\n\t\t\tItem it = adapter.item(OsmAndFormatter.toPublicString(t, activity.getMyApplication()));\n\t\t\tif(RenderingIcons.containsBigIcon(t.toString().toLowerCase())) {\n\t\t\t\tit.icon(RenderingIcons.getBigIconResourceId(t.toString().toLowerCase()));\n\t\t\t}\n\t\t\tit.reg();\n\t\t}\n\t\tBuilder builder = new AlertDialog.Builder(activity);\n\t\tListAdapter listAdapter ;\n\t\tif(Build.VERSION.SDK_INT < Build.VERSION_CODES.HONEYCOMB){\n\t\t\tlistAdapter =\n\t\t\t\tadapter.createListAdapter(activity, R.layout.list_menu_item, app.getSettings().isLightContentMenu());\n\t\t} else {\n\t\t\tlistAdapter =\n\t\t\t\tadapter.createListAdapter(activity, R.layout.list_menu_item_native, app.getSettings().isLightContentMenu());\n\t\t}\n\t\tbuilder.setAdapter(listAdapter, new DialogInterface.OnClickListener(){\n\n\t\t\t@Override\n\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\tif(which == 1){\n\t\t\t\t\tString filterId = PoiFilter.CUSTOM_FILTER_ID; \n\t\t\t\t\tgetApplication().getSettings().setPoiFilterForMap(filterId);\n\t\t\t\t\tIntent newIntent = new Intent(activity, EditPOIFilterActivity.class);\n\t\t\t\t\tnewIntent.putExtra(EditPOIFilterActivity.AMENITY_FILTER, filterId);\n\t\t\t\t\tnewIntent.putExtra(EditPOIFilterActivity.SEARCH_LAT, mapView.getLatitude());\n\t\t\t\t\tnewIntent.putExtra(EditPOIFilterActivity.SEARCH_LON, mapView.getLongitude());\n\t\t\t\t\tactivity.startActivity(newIntent);\n\t\t\t\t} else {\n\t\t\t\t\tString filterId;\n\t\t\t\t\tif (which == 0) {\n\t\t\t\t\t\tfilterId = PoiFiltersHelper.getOsmDefinedFilterId(null);\n\t\t\t\t\t} else if (which <= userDefined.size() + 1) {\n\t\t\t\t\t\tfilterId = userDefined.get(which - 2).getFilterId();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfilterId = PoiFiltersHelper.getOsmDefinedFilterId(categories[which - userDefined.size() - 2]);\n\t\t\t\t\t}\n\t\t\t\t\tgetApplication().getSettings().setPoiFilterForMap(filterId);\n\t\t\t\t\tPoiFilter f = poiFilters.getFilterById(filterId);\n\t\t\t\t\tif (f != null) {\n\t\t\t\t\t\tf.clearNameFilter();\n\t\t\t\t\t}\n\t\t\t\t\tpoiMapLayer.setFilter(f);\n\t\t\t\t\tmapView.refreshMap();\n\t\t\t\t\tif(selected != null && selected.length > 0) {\n\t\t\t\t\t\tselected[0] = f;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t});\n\t\treturn builder.show();\n\t}","id":15821,"modified_method":"public AlertDialog selectPOIFilterLayer(final OsmandMapTileView mapView, final PoiFilter[] selected){\n\t\tfinal List<PoiFilter> userDefined = new ArrayList<PoiFilter>();\n\t\tOsmandApplication app = (OsmandApplication)getApplication();\n\t\tfinal PoiFiltersHelper poiFilters = app.getPoiFilters();\n\t\tfinal ContextMenuAdapter adapter = new ContextMenuAdapter(activity);\n\t\t\n\t\tItem is = adapter.item(getString(R.string.any_poi));\n\t\tif(RenderingIcons.containsBigIcon(\"null\")) {\n\t\t\tis.icon(RenderingIcons.getBigIconResourceId(\"null\"));\n\t\t}\n\t\tis.reg();\n\t\t// 2nd custom\n\t\tadapter.item(getString(R.string.poi_filter_custom_filter)).icon(RenderingIcons.getBigIconResourceId(\"user_defined\")).reg();\n\t\t\n\t\tfor (PoiFilter f : poiFilters.getUserDefinedPoiFilters()) {\n\t\t\tItem it = adapter.item(f.getName());\n\t\t\tif (RenderingIcons.containsBigIcon(f.getSimplifiedId())) {\n\t\t\t\tit.icon(RenderingIcons.getBigIconResourceId(f.getSimplifiedId()));\n\t\t\t} else {\n\t\t\t\tit.icon(RenderingIcons.getBigIconResourceId(\"user_defined\"));\n\t\t\t}\n\t\t\tit.reg();\n\t\t\tuserDefined.add(f);\n\t\t}\n\t\tfinal AmenityType[] categories = AmenityType.getCategories();\n\t\tfor(AmenityType t : categories){\n\t\t\tItem it = adapter.item(OsmAndFormatter.toPublicString(t, activity.getMyApplication()));\n\t\t\tif(RenderingIcons.containsBigIcon(t.toString().toLowerCase())) {\n\t\t\t\tit.icon(RenderingIcons.getBigIconResourceId(t.toString().toLowerCase()));\n\t\t\t}\n\t\t\tit.reg();\n\t\t}\n\t\tBuilder builder = new AlertDialog.Builder(activity);\n\t\tListAdapter listAdapter =adapter.createListAdapter(activity, app.getSettings().isLightContentMenu());\n\t\tbuilder.setAdapter(listAdapter, new DialogInterface.OnClickListener(){\n\n\t\t\t@Override\n\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\tif(which == 1){\n\t\t\t\t\tString filterId = PoiFilter.CUSTOM_FILTER_ID; \n\t\t\t\t\tgetApplication().getSettings().setPoiFilterForMap(filterId);\n\t\t\t\t\tIntent newIntent = new Intent(activity, EditPOIFilterActivity.class);\n\t\t\t\t\tnewIntent.putExtra(EditPOIFilterActivity.AMENITY_FILTER, filterId);\n\t\t\t\t\tnewIntent.putExtra(EditPOIFilterActivity.SEARCH_LAT, mapView.getLatitude());\n\t\t\t\t\tnewIntent.putExtra(EditPOIFilterActivity.SEARCH_LON, mapView.getLongitude());\n\t\t\t\t\tactivity.startActivity(newIntent);\n\t\t\t\t} else {\n\t\t\t\t\tString filterId;\n\t\t\t\t\tif (which == 0) {\n\t\t\t\t\t\tfilterId = PoiFiltersHelper.getOsmDefinedFilterId(null);\n\t\t\t\t\t} else if (which <= userDefined.size() + 1) {\n\t\t\t\t\t\tfilterId = userDefined.get(which - 2).getFilterId();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfilterId = PoiFiltersHelper.getOsmDefinedFilterId(categories[which - userDefined.size() - 2]);\n\t\t\t\t\t}\n\t\t\t\t\tgetApplication().getSettings().setPoiFilterForMap(filterId);\n\t\t\t\t\tPoiFilter f = poiFilters.getFilterById(filterId);\n\t\t\t\t\tif (f != null) {\n\t\t\t\t\t\tf.clearNameFilter();\n\t\t\t\t\t}\n\t\t\t\t\tpoiMapLayer.setFilter(f);\n\t\t\t\t\tmapView.refreshMap();\n\t\t\t\t\tif(selected != null && selected.length > 0) {\n\t\t\t\t\t\tselected[0] = f;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t});\n\t\treturn builder.show();\n\t}","commit_id":"eb7d572234adf030d9b5eea3993e895c1a401bab","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public void configure(final DeploymentPhaseContext context, final ComponentDescription description, final ComponentConfiguration configuration) throws DeploymentUnitProcessingException {\n            final DeploymentUnit deploymentUnit = context.getDeploymentUnit();\n            final DeploymentReflectionIndex deploymentReflectionIndex = deploymentUnit.getAttachment(REFLECTION_INDEX);\n            final Object instanceKey = BasicComponentInstance.INSTANCE_KEY;\n            final Module module = deploymentUnit.getAttachment(org.jboss.as.server.deployment.Attachments.MODULE);\n\n            // Module stuff\n            final EEModuleClassConfiguration componentClassConfiguration = configuration.getModuleClassConfiguration();\n            final EEModuleConfiguration moduleConfiguration = componentClassConfiguration.getModuleConfiguration();\n\n            final Deque<InterceptorFactory> instantiators = new ArrayDeque<InterceptorFactory>();\n            final Deque<InterceptorFactory> injectors = new ArrayDeque<InterceptorFactory>();\n            final Deque<InterceptorFactory> uninjectors = new ArrayDeque<InterceptorFactory>();\n            final Deque<InterceptorFactory> destructors = new ArrayDeque<InterceptorFactory>();\n\n            final ClassReflectionIndex<?> componentClassIndex = deploymentReflectionIndex.getClassIndex(componentClassConfiguration.getModuleClass());\n            final List<InterceptorFactory> componentUserAroundInvoke = new ArrayList<InterceptorFactory>();\n            final Map<String, List<InterceptorFactory>> userAroundInvokesByInterceptorClass = new HashMap<String, List<InterceptorFactory>>();\n\n            final Map<String, List<InterceptorFactory>> userPostConstructByInterceptorClass = new HashMap<String, List<InterceptorFactory>>();\n            final Map<String, List<InterceptorFactory>> userPreDestroyByInterceptorClass = new HashMap<String, List<InterceptorFactory>>();\n\n            // Primary instance\n            final ManagedReferenceFactory instanceFactory = configuration.getInstanceFactory();\n            if (instanceFactory != null) {\n                instantiators.addFirst(new ManagedReferenceInterceptorFactory(instanceFactory, instanceKey));\n            } else {\n                //use the default constructor if no instanceFactory has been set\n                ValueManagedReferenceFactory factory = new ValueManagedReferenceFactory(new ConstructedValue<Object>((Constructor<Object>) componentClassIndex.getConstructor(EMPTY_CLASS_ARRAY), Collections.<Value<?>>emptyList()));\n                instantiators.addFirst(new ManagedReferenceInterceptorFactory(factory, instanceKey));\n            }\n            destructors.addLast(new ManagedReferenceReleaseInterceptorFactory(instanceKey));\n\n            new ClassDescriptionTraversal(componentClassConfiguration, moduleConfiguration) {\n\n                @Override\n                public void handle(EEModuleClassConfiguration classConfiguration, EEModuleClassDescription classDescription) throws DeploymentUnitProcessingException {\n                    for (final ResourceInjectionConfiguration injectionConfiguration : classConfiguration.getInjectionConfigurations()) {\n                        final Object valueContextKey = new Object();\n                        final InjectedValue<ManagedReferenceFactory> managedReferenceFactoryValue = new InjectedValue<ManagedReferenceFactory>();\n                        configuration.getStartDependencies().add(new InjectedConfigurator(injectionConfiguration, configuration, context, managedReferenceFactoryValue));\n                        injectors.addFirst(injectionConfiguration.getTarget().createInjectionInterceptorFactory(instanceKey, valueContextKey, managedReferenceFactoryValue, deploymentUnit));\n                        uninjectors.addLast(new ManagedReferenceReleaseInterceptorFactory(valueContextKey));\n                    }\n                }\n            }.run();\n\n            // Interceptor instances\n            final List<InterceptorDescription> interceptors = new ArrayList<InterceptorDescription>();\n            //TODO: add default interceptor\n            //interceptors.addAll(description.getClassInterceptors());\n            interceptors.addAll(description.getAllInterceptors().values());\n            for (InterceptorDescription interceptorDescription : interceptors) {\n                final String interceptorClassName = interceptorDescription.getInterceptorClassName();\n                final EEModuleClassConfiguration interceptorConfiguration = moduleConfiguration.getClassConfiguration(interceptorClassName);\n\n                //we store the interceptor instance under the class key\n                final Object contextKey = interceptorConfiguration.getModuleClass();\n                if (interceptorConfiguration.getInstantiator() == null) {\n                    throw new DeploymentUnitProcessingException(\"No default constructor for interceptor class \" + interceptorClassName + \" on component \" + componentClassConfiguration.getModuleClass());\n                }\n                instantiators.addFirst(new ManagedReferenceInterceptorFactory(interceptorConfiguration.getInstantiator(), contextKey));\n                destructors.addLast(new ManagedReferenceReleaseInterceptorFactory(contextKey));\n\n                final boolean isClassLevelInterceptor = description.getClassInterceptors().contains(interceptorDescription);\n                new ClassDescriptionTraversal(interceptorConfiguration, moduleConfiguration) {\n                    @Override\n                    public void handle(EEModuleClassConfiguration interceptorClassConfiguration, EEModuleClassDescription classDescription) throws DeploymentUnitProcessingException {\n                        final ClassReflectionIndex<?> interceptorClassIndex = deploymentReflectionIndex.getClassIndex(interceptorClassConfiguration.getModuleClass());\n\n                        for (final ResourceInjectionConfiguration injectionConfiguration : interceptorClassConfiguration.getInjectionConfigurations()) {\n                            final Object valueContextKey = new Object();\n                            final InjectedValue<ManagedReferenceFactory> managedReferenceFactoryValue = new InjectedValue<ManagedReferenceFactory>();\n                            configuration.getStartDependencies().add(new InjectedConfigurator(injectionConfiguration, configuration, context, managedReferenceFactoryValue));\n                            injectors.addFirst(injectionConfiguration.getTarget().createInjectionInterceptorFactory(contextKey, valueContextKey, managedReferenceFactoryValue, deploymentUnit));\n                            uninjectors.addLast(new ManagedReferenceReleaseInterceptorFactory(valueContextKey));\n                        }\n                        // Only class level interceptors are processed for postconstruct/predestroy methods.\n                        // Method level interceptors aren't supposed to be processed for postconstruct/predestroy lifecycle\n                        // methods, as per interceptors spec\n                        if (isClassLevelInterceptor) {\n                            final MethodIdentifier postConstructMethodIdentifier = classDescription.getPostConstructMethod();\n                            if (postConstructMethodIdentifier != null) {\n                                final Method method = findRequiredMethod(deploymentReflectionIndex, interceptorClassIndex, postConstructMethodIdentifier);\n                                InterceptorFactory interceptorFactory = new ManagedReferenceLifecycleMethodInterceptorFactory(contextKey, method, true);\n                                List<InterceptorFactory> userPostConstruct = userPostConstructByInterceptorClass.get(interceptorClassName);\n                                if (userPostConstruct == null) {\n                                    userPostConstructByInterceptorClass.put(interceptorClassName, userPostConstruct = new ArrayList<InterceptorFactory>());\n                                }\n                                userPostConstruct.add(interceptorFactory);\n                            }\n                            final MethodIdentifier preDestroyMethodIdentifier = classDescription.getPreDestroyMethod();\n                            if (preDestroyMethodIdentifier != null) {\n                                final Method method = findRequiredMethod(deploymentReflectionIndex, interceptorClassIndex, preDestroyMethodIdentifier);\n                                InterceptorFactory interceptorFactory = new ManagedReferenceLifecycleMethodInterceptorFactory(contextKey, method, true);\n                                List<InterceptorFactory> userPreDestroy = userPreDestroyByInterceptorClass.get(interceptorClassName);\n                                if (userPreDestroy == null) {\n                                    userPreDestroyByInterceptorClass.put(interceptorClassName, userPreDestroy = new ArrayList<InterceptorFactory>());\n                                }\n                                userPreDestroy.add(interceptorFactory);\n                            }\n                        }\n                        final MethodIdentifier aroundInvokeMethodIdentifier = classDescription.getAroundInvokeMethod();\n                        if (aroundInvokeMethodIdentifier != null) {\n                            final Method method = findRequiredMethod(deploymentReflectionIndex, interceptorClassIndex, aroundInvokeMethodIdentifier);\n                            List<InterceptorFactory> interceptors;\n                            if ((interceptors = userAroundInvokesByInterceptorClass.get(interceptorClassName)) == null) {\n                                userAroundInvokesByInterceptorClass.put(interceptorClassName, interceptors = new ArrayList<InterceptorFactory>());\n                            }\n                            interceptors.add(new ManagedReferenceLifecycleMethodInterceptorFactory(contextKey, method, false));\n                        }\n                    }\n                }.run();\n            }\n\n            final Deque<InterceptorFactory> userPostConstruct = new ArrayDeque<InterceptorFactory>();\n            final Deque<InterceptorFactory> userPreDestroy = new ArrayDeque<InterceptorFactory>();\n\n            //now add the lifecycle interceptors in the correct order\n            //TODO: default interceptors\n            for (final InterceptorDescription interceptorClass : description.getClassInterceptors()) {\n                if (userPostConstructByInterceptorClass.containsKey(interceptorClass.getInterceptorClassName())) {\n                    userPostConstruct.addAll(userPostConstructByInterceptorClass.get(interceptorClass.getInterceptorClassName()));\n                }\n                if (userPreDestroyByInterceptorClass.containsKey(interceptorClass.getInterceptorClassName())) {\n                    userPreDestroy.addAll(userPreDestroyByInterceptorClass.get(interceptorClass.getInterceptorClassName()));\n                }\n            }\n\n\n            new ClassDescriptionTraversal(componentClassConfiguration, moduleConfiguration) {\n                @Override\n                public void handle(EEModuleClassConfiguration configuration, EEModuleClassDescription classDescription) throws DeploymentUnitProcessingException {\n                    final MethodIdentifier componentPostConstructMethodIdentifier = classDescription.getPostConstructMethod();\n                    if (componentPostConstructMethodIdentifier != null) {\n                        final Method method = findRequiredMethod(deploymentReflectionIndex, componentClassIndex, componentPostConstructMethodIdentifier);\n                        InterceptorFactory interceptorFactory = new ManagedReferenceLifecycleMethodInterceptorFactory(instanceKey, method, true);\n                        userPostConstruct.addLast(interceptorFactory);\n                    }\n                    final MethodIdentifier componentPreDestroyMethodIdentifier = classDescription.getPreDestroyMethod();\n                    if (componentPreDestroyMethodIdentifier != null) {\n                        final Method method = findRequiredMethod(deploymentReflectionIndex, componentClassIndex, componentPreDestroyMethodIdentifier);\n                        InterceptorFactory interceptorFactory = new ManagedReferenceLifecycleMethodInterceptorFactory(instanceKey, method, true);\n                        userPreDestroy.addLast(interceptorFactory);\n                    }\n                    final MethodIdentifier componentAroundInvokeMethodIdentifier = classDescription.getAroundInvokeMethod();\n                    if (componentAroundInvokeMethodIdentifier != null) {\n                        final Method method = findRequiredMethod(deploymentReflectionIndex, componentClassIndex, componentAroundInvokeMethodIdentifier);\n                        componentUserAroundInvoke.add(new ManagedReferenceLifecycleMethodInterceptorFactory(instanceKey, method, false));\n                    }\n                }\n            }.run();\n\n            final InterceptorFactory tcclInterceptor = new ImmediateInterceptorFactory(new TCCLInterceptor(module.getClassLoader()));\n\n            // Apply post-construct\n            final Deque<InterceptorFactory> postConstructInterceptors = configuration.getPostConstructInterceptors();\n            final Iterator<InterceptorFactory> injectorIterator = injectors.descendingIterator();\n            while (injectorIterator.hasNext()) {\n                postConstructInterceptors.addFirst(injectorIterator.next());\n            }\n            final Iterator<InterceptorFactory> instantiatorIterator = instantiators.descendingIterator();\n            while (instantiatorIterator.hasNext()) {\n                postConstructInterceptors.addFirst(instantiatorIterator.next());\n            }\n            postConstructInterceptors.addAll(userPostConstruct);\n            postConstructInterceptors.add(Interceptors.getTerminalInterceptorFactory());\n            postConstructInterceptors.addFirst(tcclInterceptor);\n\n            // Apply pre-destroy\n            final Deque<InterceptorFactory> preDestroyInterceptors = configuration.getPreDestroyInterceptors();\n            final Iterator<InterceptorFactory> uninjectorsIterator = uninjectors.descendingIterator();\n            while (uninjectorsIterator.hasNext()) {\n                preDestroyInterceptors.addFirst(uninjectorsIterator.next());\n            }\n            final Iterator<InterceptorFactory> destructorIterator = destructors.descendingIterator();\n            while (destructorIterator.hasNext()) {\n                preDestroyInterceptors.addFirst(destructorIterator.next());\n            }\n            preDestroyInterceptors.addAll(userPreDestroy);\n            preDestroyInterceptors.add(Interceptors.getTerminalInterceptorFactory());\n            preDestroyInterceptors.addFirst(tcclInterceptor);\n\n            // @AroundInvoke interceptors\n            final List<InterceptorDescription> classInterceptors = description.getClassInterceptors();\n\n            Class clazz = componentClassConfiguration.getModuleClass();\n            while (clazz != null) {\n                final ClassReflectionIndex classIndex = deploymentReflectionIndex.getClassIndex(clazz);\n                for (final Method method : (Collection<Method>) classIndex.getMethods()) {\n                    MethodIdentifier identifier = MethodIdentifier.getIdentifier(method.getReturnType(), method.getName(), method.getParameterTypes());\n                    Deque<InterceptorFactory> interceptorDeque = configuration.getComponentInterceptorDeque(method);\n                    if (!description.isExcludeClassInterceptors(identifier)) {\n                        for (InterceptorDescription interceptorDescription : classInterceptors) {\n                            String interceptorClassName = interceptorDescription.getInterceptorClassName();\n                            List<InterceptorFactory> aroundInvokes = userAroundInvokesByInterceptorClass.get(interceptorClassName);\n                            if (aroundInvokes != null) {\n                                interceptorDeque.addAll(aroundInvokes);\n                            }\n                        }\n                        if (componentUserAroundInvoke != null) {\n                            interceptorDeque.addAll(componentUserAroundInvoke);\n                        }\n                    }\n                    if (!description.isExcludeDefaultInterceptors() && !description.isExcludeDefaultInterceptors(identifier)) {\n                        // todo: default interceptors here\n                    }\n                }\n                clazz = clazz.getSuperclass();\n            }\n\n            //now handle method level interceptors\n            final Map<MethodIdentifier, List<InterceptorDescription>> methodInterceptors = description.getMethodInterceptors();\n            for (MethodIdentifier identifier : methodInterceptors.keySet()) {\n                final List<InterceptorDescription> descriptions = methodInterceptors.get(identifier);\n                final Method componentMethod = findRequiredMethod(deploymentReflectionIndex, componentClassIndex, identifier);\n                final Deque<InterceptorFactory> interceptorDeque = configuration.getComponentInterceptorDeque(componentMethod);\n                // TODO - ordering...?\n                for (InterceptorDescription interceptorDescription : descriptions) {\n                    String interceptorClassName = interceptorDescription.getInterceptorClassName();\n                    List<InterceptorFactory> aroundInvokes = userAroundInvokesByInterceptorClass.get(interceptorClassName);\n                    if (aroundInvokes != null) {\n                        interceptorDeque.addAll(aroundInvokes);\n                    }\n                }\n            }\n\n            //now add the interceptor that initializes and the interceptor that actually invokes to the end of the interceptor chain\n            // and also add the tccl interceptor\n            for (Method method : configuration.getDefinedComponentMethods()) {\n                configuration.getComponentInterceptorDeque(method).addFirst(Interceptors.getInitialInterceptorFactory());\n                configuration.getComponentInterceptorDeque(method).addLast(new ManagedReferenceMethodInterceptorFactory(instanceKey, method));\n                // add to the beginning\n                configuration.getComponentInterceptorDeque(method).addFirst(tcclInterceptor);\n            }\n\n            //views\n            for (ViewDescription view : description.getViews()) {\n                Class<?> viewClass;\n                try {\n                    viewClass = module.getClassLoader().loadClass(view.getViewClassName());\n                } catch (ClassNotFoundException e) {\n                    throw new DeploymentUnitProcessingException(\"Could not load view class \" + view.getViewClassName() + \" for component \" + configuration, e);\n                }\n                final ViewConfiguration viewConfiguration;\n                if (viewClass.isInterface()) {\n                    viewConfiguration = new ViewConfiguration(viewClass, configuration, view.getServiceName(), new ProxyFactory(viewClass.getName() + \"$$$view\" + PROXY_ID.incrementAndGet(), Object.class, viewClass.getClassLoader(), viewClass));\n                } else {\n                    viewConfiguration = new ViewConfiguration(viewClass, configuration, view.getServiceName(), new ProxyFactory(viewClass.getName() + \"$$$view\" + PROXY_ID.incrementAndGet(), viewClass, viewClass.getClassLoader()));\n                }\n                for (final ViewConfigurator configurator : view.getConfigurators()) {\n                    configurator.configure(context, configuration, view, viewConfiguration);\n                }\n                configuration.getViews().add(viewConfiguration);\n            }\n        }","id":15822,"modified_method":"public void configure(final DeploymentPhaseContext context, final ComponentDescription description, final ComponentConfiguration configuration) throws DeploymentUnitProcessingException {\n            final DeploymentUnit deploymentUnit = context.getDeploymentUnit();\n            final DeploymentReflectionIndex deploymentReflectionIndex = deploymentUnit.getAttachment(REFLECTION_INDEX);\n            final Object instanceKey = BasicComponentInstance.INSTANCE_KEY;\n            final Module module = deploymentUnit.getAttachment(org.jboss.as.server.deployment.Attachments.MODULE);\n\n            // Module stuff\n            final EEModuleClassConfiguration componentClassConfiguration = configuration.getModuleClassConfiguration();\n            final EEModuleConfiguration moduleConfiguration = componentClassConfiguration.getModuleConfiguration();\n\n            final Deque<InterceptorFactory> instantiators = new ArrayDeque<InterceptorFactory>();\n            final Deque<InterceptorFactory> injectors = new ArrayDeque<InterceptorFactory>();\n            final Deque<InterceptorFactory> uninjectors = new ArrayDeque<InterceptorFactory>();\n            final Deque<InterceptorFactory> destructors = new ArrayDeque<InterceptorFactory>();\n\n            final ClassReflectionIndex<?> componentClassIndex = deploymentReflectionIndex.getClassIndex(componentClassConfiguration.getModuleClass());\n            final List<InterceptorFactory> componentUserAroundInvoke = new ArrayList<InterceptorFactory>();\n            final Map<String, List<InterceptorFactory>> userAroundInvokesByInterceptorClass = new HashMap<String, List<InterceptorFactory>>();\n\n            final Map<String, List<InterceptorFactory>> userPostConstructByInterceptorClass = new HashMap<String, List<InterceptorFactory>>();\n            final Map<String, List<InterceptorFactory>> userPreDestroyByInterceptorClass = new HashMap<String, List<InterceptorFactory>>();\n\n            // Primary instance\n            final ManagedReferenceFactory instanceFactory = configuration.getInstanceFactory();\n            if (instanceFactory != null) {\n                instantiators.addFirst(new ManagedReferenceInterceptorFactory(instanceFactory, instanceKey));\n            } else {\n                //use the default constructor if no instanceFactory has been set\n                ValueManagedReferenceFactory factory = new ValueManagedReferenceFactory(new ConstructedValue<Object>((Constructor<Object>) componentClassIndex.getConstructor(EMPTY_CLASS_ARRAY), Collections.<Value<?>>emptyList()));\n                instantiators.addFirst(new ManagedReferenceInterceptorFactory(factory, instanceKey));\n            }\n            destructors.addLast(new ManagedReferenceReleaseInterceptorFactory(instanceKey));\n\n            new ClassDescriptionTraversal(componentClassConfiguration, moduleConfiguration) {\n\n                @Override\n                public void handle(EEModuleClassConfiguration classConfiguration, EEModuleClassDescription classDescription) throws DeploymentUnitProcessingException {\n                    for (final ResourceInjectionConfiguration injectionConfiguration : classConfiguration.getInjectionConfigurations()) {\n                        final Object valueContextKey = new Object();\n                        final InjectedValue<ManagedReferenceFactory> managedReferenceFactoryValue = new InjectedValue<ManagedReferenceFactory>();\n                        configuration.getStartDependencies().add(new InjectedConfigurator(injectionConfiguration, configuration, context, managedReferenceFactoryValue));\n                        injectors.addFirst(injectionConfiguration.getTarget().createInjectionInterceptorFactory(instanceKey, valueContextKey, managedReferenceFactoryValue, deploymentUnit));\n                        uninjectors.addLast(new ManagedReferenceReleaseInterceptorFactory(valueContextKey));\n                    }\n                }\n            }.run();\n\n            // Interceptor instances\n            final List<InterceptorDescription> interceptors = new ArrayList<InterceptorDescription>();\n            //TODO: add default interceptor\n            //interceptors.addAll(description.getClassInterceptors());\n            interceptors.addAll(description.getAllInterceptors().values());\n            for (InterceptorDescription interceptorDescription : interceptors) {\n                final String interceptorClassName = interceptorDescription.getInterceptorClassName();\n                final EEModuleClassConfiguration interceptorConfiguration = moduleConfiguration.getClassConfiguration(interceptorClassName);\n\n                //we store the interceptor instance under the class key\n                final Object contextKey = interceptorConfiguration.getModuleClass();\n                if (interceptorConfiguration.getInstantiator() == null) {\n                    throw new DeploymentUnitProcessingException(\"No default constructor for interceptor class \" + interceptorClassName + \" on component \" + componentClassConfiguration.getModuleClass());\n                }\n                instantiators.addFirst(new ManagedReferenceInterceptorFactory(interceptorConfiguration.getInstantiator(), contextKey));\n                destructors.addLast(new ManagedReferenceReleaseInterceptorFactory(contextKey));\n\n                final boolean isClassLevelInterceptor = description.getClassInterceptors().contains(interceptorDescription);\n                new ClassDescriptionTraversal(interceptorConfiguration, moduleConfiguration) {\n                    @Override\n                    public void handle(EEModuleClassConfiguration interceptorClassConfiguration, EEModuleClassDescription classDescription) throws DeploymentUnitProcessingException {\n                        final ClassReflectionIndex<?> interceptorClassIndex = deploymentReflectionIndex.getClassIndex(interceptorClassConfiguration.getModuleClass());\n\n                        for (final ResourceInjectionConfiguration injectionConfiguration : interceptorClassConfiguration.getInjectionConfigurations()) {\n                            final Object valueContextKey = new Object();\n                            final InjectedValue<ManagedReferenceFactory> managedReferenceFactoryValue = new InjectedValue<ManagedReferenceFactory>();\n                            configuration.getStartDependencies().add(new InjectedConfigurator(injectionConfiguration, configuration, context, managedReferenceFactoryValue));\n                            injectors.addFirst(injectionConfiguration.getTarget().createInjectionInterceptorFactory(contextKey, valueContextKey, managedReferenceFactoryValue, deploymentUnit));\n                            uninjectors.addLast(new ManagedReferenceReleaseInterceptorFactory(valueContextKey));\n                        }\n                        // Only class level interceptors are processed for postconstruct/predestroy methods.\n                        // Method level interceptors aren't supposed to be processed for postconstruct/predestroy lifecycle\n                        // methods, as per interceptors spec\n                        if (isClassLevelInterceptor) {\n                            final MethodIdentifier postConstructMethodIdentifier = classDescription.getPostConstructMethod();\n                            if (postConstructMethodIdentifier != null) {\n                                final Method method = ClassReflectionIndexUtil.findRequiredMethod(deploymentReflectionIndex, interceptorClassIndex, postConstructMethodIdentifier);\n                                InterceptorFactory interceptorFactory = new ManagedReferenceLifecycleMethodInterceptorFactory(contextKey, method, true);\n                                List<InterceptorFactory> userPostConstruct = userPostConstructByInterceptorClass.get(interceptorClassName);\n                                if (userPostConstruct == null) {\n                                    userPostConstructByInterceptorClass.put(interceptorClassName, userPostConstruct = new ArrayList<InterceptorFactory>());\n                                }\n                                userPostConstruct.add(interceptorFactory);\n                            }\n                            final MethodIdentifier preDestroyMethodIdentifier = classDescription.getPreDestroyMethod();\n                            if (preDestroyMethodIdentifier != null) {\n                                final Method method = ClassReflectionIndexUtil.findRequiredMethod(deploymentReflectionIndex, interceptorClassIndex, preDestroyMethodIdentifier);\n                                InterceptorFactory interceptorFactory = new ManagedReferenceLifecycleMethodInterceptorFactory(contextKey, method, true);\n                                List<InterceptorFactory> userPreDestroy = userPreDestroyByInterceptorClass.get(interceptorClassName);\n                                if (userPreDestroy == null) {\n                                    userPreDestroyByInterceptorClass.put(interceptorClassName, userPreDestroy = new ArrayList<InterceptorFactory>());\n                                }\n                                userPreDestroy.add(interceptorFactory);\n                            }\n                        }\n                        final MethodIdentifier aroundInvokeMethodIdentifier = classDescription.getAroundInvokeMethod();\n                        if (aroundInvokeMethodIdentifier != null) {\n                            final Method method = ClassReflectionIndexUtil.findRequiredMethod(deploymentReflectionIndex, interceptorClassIndex, aroundInvokeMethodIdentifier);\n                            List<InterceptorFactory> interceptors;\n                            if ((interceptors = userAroundInvokesByInterceptorClass.get(interceptorClassName)) == null) {\n                                userAroundInvokesByInterceptorClass.put(interceptorClassName, interceptors = new ArrayList<InterceptorFactory>());\n                            }\n                            interceptors.add(new ManagedReferenceLifecycleMethodInterceptorFactory(contextKey, method, false));\n                        }\n                    }\n                }.run();\n            }\n\n            final Deque<InterceptorFactory> userPostConstruct = new ArrayDeque<InterceptorFactory>();\n            final Deque<InterceptorFactory> userPreDestroy = new ArrayDeque<InterceptorFactory>();\n\n            //now add the lifecycle interceptors in the correct order\n            //TODO: default interceptors\n            for (final InterceptorDescription interceptorClass : description.getClassInterceptors()) {\n                if (userPostConstructByInterceptorClass.containsKey(interceptorClass.getInterceptorClassName())) {\n                    userPostConstruct.addAll(userPostConstructByInterceptorClass.get(interceptorClass.getInterceptorClassName()));\n                }\n                if (userPreDestroyByInterceptorClass.containsKey(interceptorClass.getInterceptorClassName())) {\n                    userPreDestroy.addAll(userPreDestroyByInterceptorClass.get(interceptorClass.getInterceptorClassName()));\n                }\n            }\n\n\n            new ClassDescriptionTraversal(componentClassConfiguration, moduleConfiguration) {\n                @Override\n                public void handle(EEModuleClassConfiguration configuration, EEModuleClassDescription classDescription) throws DeploymentUnitProcessingException {\n                    final MethodIdentifier componentPostConstructMethodIdentifier = classDescription.getPostConstructMethod();\n                    if (componentPostConstructMethodIdentifier != null) {\n                        final Method method = ClassReflectionIndexUtil.findRequiredMethod(deploymentReflectionIndex, componentClassIndex, componentPostConstructMethodIdentifier);\n                        InterceptorFactory interceptorFactory = new ManagedReferenceLifecycleMethodInterceptorFactory(instanceKey, method, true);\n                        userPostConstruct.addLast(interceptorFactory);\n                    }\n                    final MethodIdentifier componentPreDestroyMethodIdentifier = classDescription.getPreDestroyMethod();\n                    if (componentPreDestroyMethodIdentifier != null) {\n                        final Method method = ClassReflectionIndexUtil.findRequiredMethod(deploymentReflectionIndex, componentClassIndex, componentPreDestroyMethodIdentifier);\n                        InterceptorFactory interceptorFactory = new ManagedReferenceLifecycleMethodInterceptorFactory(instanceKey, method, true);\n                        userPreDestroy.addLast(interceptorFactory);\n                    }\n                    final MethodIdentifier componentAroundInvokeMethodIdentifier = classDescription.getAroundInvokeMethod();\n                    if (componentAroundInvokeMethodIdentifier != null) {\n                        final Method method = ClassReflectionIndexUtil.findRequiredMethod(deploymentReflectionIndex, componentClassIndex, componentAroundInvokeMethodIdentifier);\n                        componentUserAroundInvoke.add(new ManagedReferenceLifecycleMethodInterceptorFactory(instanceKey, method, false));\n                    }\n                }\n            }.run();\n\n            final InterceptorFactory tcclInterceptor = new ImmediateInterceptorFactory(new TCCLInterceptor(module.getClassLoader()));\n\n            // Apply post-construct\n            final Deque<InterceptorFactory> postConstructInterceptors = configuration.getPostConstructInterceptors();\n            final Iterator<InterceptorFactory> injectorIterator = injectors.descendingIterator();\n            while (injectorIterator.hasNext()) {\n                postConstructInterceptors.addFirst(injectorIterator.next());\n            }\n            final Iterator<InterceptorFactory> instantiatorIterator = instantiators.descendingIterator();\n            while (instantiatorIterator.hasNext()) {\n                postConstructInterceptors.addFirst(instantiatorIterator.next());\n            }\n            postConstructInterceptors.addAll(userPostConstruct);\n            postConstructInterceptors.add(Interceptors.getTerminalInterceptorFactory());\n            postConstructInterceptors.addFirst(tcclInterceptor);\n\n            // Apply pre-destroy\n            final Deque<InterceptorFactory> preDestroyInterceptors = configuration.getPreDestroyInterceptors();\n            final Iterator<InterceptorFactory> uninjectorsIterator = uninjectors.descendingIterator();\n            while (uninjectorsIterator.hasNext()) {\n                preDestroyInterceptors.addFirst(uninjectorsIterator.next());\n            }\n            final Iterator<InterceptorFactory> destructorIterator = destructors.descendingIterator();\n            while (destructorIterator.hasNext()) {\n                preDestroyInterceptors.addFirst(destructorIterator.next());\n            }\n            preDestroyInterceptors.addAll(userPreDestroy);\n            preDestroyInterceptors.add(Interceptors.getTerminalInterceptorFactory());\n            preDestroyInterceptors.addFirst(tcclInterceptor);\n\n            // @AroundInvoke interceptors\n            final List<InterceptorDescription> classInterceptors = description.getClassInterceptors();\n            final Map<MethodIdentifier, List<InterceptorDescription>> methodInterceptors = description.getMethodInterceptors();\n\n            Class clazz = componentClassConfiguration.getModuleClass();\n            while (clazz != null) {\n                final ClassReflectionIndex classIndex = deploymentReflectionIndex.getClassIndex(clazz);\n                for (final Method method : (Collection<Method>) classIndex.getMethods()) {\n                    MethodIdentifier identifier = MethodIdentifier.getIdentifier(method.getReturnType(), method.getName(), method.getParameterTypes());\n                    Deque<InterceptorFactory> interceptorDeque = configuration.getComponentInterceptorDeque(method);\n\n                    // first add the default interceptors (if not excluded) to the deque\n                    if (!description.isExcludeDefaultInterceptors() && !description.isExcludeDefaultInterceptors(identifier)) {\n                        // todo: default interceptors here\n                    }\n\n                    // now add class level interceptors (if not excluded) to the deque\n                    if (!description.isExcludeClassInterceptors(identifier)) {\n                        for (InterceptorDescription interceptorDescription : classInterceptors) {\n                            String interceptorClassName = interceptorDescription.getInterceptorClassName();\n                            List<InterceptorFactory> aroundInvokes = userAroundInvokesByInterceptorClass.get(interceptorClassName);\n                            if (aroundInvokes != null) {\n                                interceptorDeque.addAll(aroundInvokes);\n                            }\n                        }\n                    }\n\n                    // now add method level interceptors for to the deque so that they are triggered after the class interceptors\n                    List<InterceptorDescription> methodLevelInterceptors = methodInterceptors.get(identifier);\n                    if (methodLevelInterceptors != null) {\n                        for (InterceptorDescription methodLevelInterceptor : methodLevelInterceptors) {\n                            String interceptorClassName = methodLevelInterceptor.getInterceptorClassName();\n                            List<InterceptorFactory> aroundInvokes = userAroundInvokesByInterceptorClass.get(interceptorClassName);\n                            if (aroundInvokes != null) {\n                                interceptorDeque.addAll(aroundInvokes);\n                            }\n\n                        }\n                    }\n\n                    // finally add the component level around invoke to the deque so that it's triggered last\n                    if (componentUserAroundInvoke != null) {\n                        interceptorDeque.addAll(componentUserAroundInvoke);\n                    }\n\n                }\n                clazz = clazz.getSuperclass();\n            }\n\n//            //now handle method level interceptors\n//            final Map<MethodIdentifier, List<InterceptorDescription>> methodInterceptors = description.getMethodInterceptors();\n//            for (MethodIdentifier identifier : methodInterceptors.keySet()) {\n//                final List<InterceptorDescription> descriptions = methodInterceptors.get(identifier);\n//                final Method componentMethod = findRequiredMethod(deploymentReflectionIndex, componentClassIndex, identifier);\n//                final Deque<InterceptorFactory> interceptorDeque = configuration.getComponentInterceptorDeque(componentMethod);\n//                // TODO - ordering...?\n//                for (InterceptorDescription interceptorDescription : descriptions) {\n//                    String interceptorClassName = interceptorDescription.getInterceptorClassName();\n//                    List<InterceptorFactory> aroundInvokes = userAroundInvokesByInterceptorClass.get(interceptorClassName);\n//                    if (aroundInvokes != null) {\n//                        interceptorDeque.addAll(aroundInvokes);\n//                    }\n//                }\n//            }\n\n            //now add the interceptor that initializes and the interceptor that actually invokes to the end of the interceptor chain\n            // and also add the tccl interceptor\n            for (Method method : configuration.getDefinedComponentMethods()) {\n                configuration.getComponentInterceptorDeque(method).addFirst(Interceptors.getInitialInterceptorFactory());\n                configuration.getComponentInterceptorDeque(method).addLast(new ManagedReferenceMethodInterceptorFactory(instanceKey, method));\n                // add to the beginning\n                configuration.getComponentInterceptorDeque(method).addFirst(tcclInterceptor);\n            }\n\n            //views\n            for (ViewDescription view : description.getViews()) {\n                Class<?> viewClass;\n                try {\n                    viewClass = module.getClassLoader().loadClass(view.getViewClassName());\n                } catch (ClassNotFoundException e) {\n                    throw new DeploymentUnitProcessingException(\"Could not load view class \" + view.getViewClassName() + \" for component \" + configuration, e);\n                }\n                final ViewConfiguration viewConfiguration;\n                if (viewClass.isInterface()) {\n                    viewConfiguration = new ViewConfiguration(viewClass, configuration, view.getServiceName(), new ProxyFactory(viewClass.getName() + \"$$$view\" + PROXY_ID.incrementAndGet(), Object.class, viewClass.getClassLoader(), viewClass));\n                } else {\n                    viewConfiguration = new ViewConfiguration(viewClass, configuration, view.getServiceName(), new ProxyFactory(viewClass.getName() + \"$$$view\" + PROXY_ID.incrementAndGet(), viewClass, viewClass.getClassLoader()));\n                }\n                for (final ViewConfigurator configurator : view.getConfigurators()) {\n                    configurator.configure(context, configuration, view, viewConfiguration);\n                }\n                configuration.getViews().add(viewConfiguration);\n            }\n        }","commit_id":"feb3a3a98162e329dca939f84dd96a174cc50b71","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void processExcludeClass(final EEModuleDescription eeModuleDescription, final AnnotationInstance annotation) throws DeploymentUnitProcessingException {\n        final AnnotationTarget target = annotation.target();\n        if (target instanceof MethodInfo) {\n            final MethodInfo methodInfo = MethodInfo.class.cast(target);\n            final ComponentDescription componentDescription = eeModuleDescription.getComponentByClassName(methodInfo.declaringClass().name().toString());\n            if (componentDescription == null) {\n                return; // We ignore non-components\n            }\n            componentDescription.excludeClassInterceptors(methodIdentifierFromMethodInfo(methodInfo));\n        } else {\n            throw new DeploymentUnitProcessingException(\"@ExcludeDefaultInterceptors annotation is only allowed on methods\");\n        }\n    }","id":15823,"modified_method":"private void processExcludeClass(final EEModuleDescription eeModuleDescription, final AnnotationInstance annotation, final CompositeIndex index) throws DeploymentUnitProcessingException {\n        final AnnotationTarget target = annotation.target();\n        if (target instanceof MethodInfo) {\n            final MethodInfo methodInfo = MethodInfo.class.cast(target);\n            final Collection<ComponentDescription> components = this.getApplicableComponents(index, methodInfo.declaringClass(), eeModuleDescription);\n            for (ComponentDescription component : components) {\n                component.excludeClassInterceptors(methodIdentifierFromMethodInfo(methodInfo));\n            }\n        } else {\n            throw new DeploymentUnitProcessingException(\"@ExcludeDefaultInterceptors annotation is only allowed on methods\");\n        }\n    }","commit_id":"feb3a3a98162e329dca939f84dd96a174cc50b71","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void processInterceptors(final EEModuleDescription eeModuleDescription, final AnnotationInstance annotation) throws DeploymentUnitProcessingException {\n        final AnnotationTarget target = annotation.target();\n        if (target instanceof MethodInfo) {\n            processMethodInterceptor(eeModuleDescription, MethodInfo.class.cast(target), annotation);\n        } else if (target instanceof ClassInfo) {\n            processClassInterceptor(eeModuleDescription, ClassInfo.class.cast(target), annotation);\n        } else {\n            throw new DeploymentUnitProcessingException(\"@Interceptors annotation is only allowed on methods and classes\");\n        }\n    }","id":15824,"modified_method":"private void processInterceptors(final EEModuleDescription eeModuleDescription, final AnnotationInstance annotation, final CompositeIndex index) throws DeploymentUnitProcessingException {\n        final AnnotationTarget target = annotation.target();\n        if (target instanceof MethodInfo) {\n            processMethodInterceptor(eeModuleDescription, MethodInfo.class.cast(target), annotation, index);\n        } else if (target instanceof ClassInfo) {\n            processClassInterceptor(eeModuleDescription, ClassInfo.class.cast(target), annotation, index);\n        } else {\n            throw new DeploymentUnitProcessingException(\"@Interceptors annotation is only allowed on methods and classes\");\n        }\n    }","commit_id":"feb3a3a98162e329dca939f84dd96a174cc50b71","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void processClassExcludeDefault(EEModuleDescription eeModuleDescription, final ClassInfo classInfo) {\n        final ComponentDescription componentDescription = eeModuleDescription.getComponentByClassName(classInfo.name().toString());\n        if (componentDescription == null) {\n            return; // We ignore non-components\n        }\n        componentDescription.setExcludeDefaultInterceptors(true);\n    }","id":15825,"modified_method":"private void processClassExcludeDefault(EEModuleDescription eeModuleDescription, final ClassInfo classInfo, final CompositeIndex index) {\n        final Collection<ComponentDescription> components = this.getApplicableComponents(index, classInfo, eeModuleDescription);\n        for (ComponentDescription component : components) {\n            component.setExcludeDefaultInterceptors(true);\n        }\n    }","commit_id":"feb3a3a98162e329dca939f84dd96a174cc50b71","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void processClassInterceptor(final EEModuleDescription eeModuleDescription, final ClassInfo classInfo, final AnnotationInstance annotation) {\n        final ComponentDescription componentDescription = eeModuleDescription.getComponentByClassName(classInfo.name().toString());\n        if (componentDescription == null) {\n            return; // We ignore non-components\n        }\n\n        final AnnotationValue value = annotation.value();\n        if (value != null) for (Type interceptorClass : value.asClassArray()) {\n            componentDescription.addClassInterceptor(new InterceptorDescription(interceptorClass.name().toString()));\n        }\n    }","id":15826,"modified_method":"private void processClassInterceptor(final EEModuleDescription eeModuleDescription, final ClassInfo classInfo, final AnnotationInstance annotation, final CompositeIndex index) {\n        final Collection<ComponentDescription> components = this.getApplicableComponents(index, classInfo, eeModuleDescription);\n\n        final AnnotationValue value = annotation.value();\n        if (value != null) for (Type interceptorClass : value.asClassArray()) {\n            for (ComponentDescription component : components) {\n                component.addClassInterceptor(new InterceptorDescription(interceptorClass.name().toString()));\n            }\n        }\n    }","commit_id":"feb3a3a98162e329dca939f84dd96a174cc50b71","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void deploy(DeploymentPhaseContext phaseContext) throws DeploymentUnitProcessingException {\n        final DeploymentUnit deploymentUnit = phaseContext.getDeploymentUnit();\n        final EEModuleDescription eeModuleDescription = deploymentUnit.getAttachment(Attachments.EE_MODULE_DESCRIPTION);\n        final CompositeIndex index = deploymentUnit.getAttachment(org.jboss.as.server.deployment.Attachments.COMPOSITE_ANNOTATION_INDEX);\n\n        final List<AnnotationInstance> interceptors = index.getAnnotations(INTERCEPTORS_ANNOTATION_NAME);\n        for (AnnotationInstance annotation : interceptors) {\n            processInterceptors(eeModuleDescription, annotation);\n        }\n\n        final List<AnnotationInstance> excludeDefaults = index.getAnnotations(EXCLUDE_DEFAULT_ANNOTATION_NAME);\n        for (AnnotationInstance annotation : excludeDefaults) {\n            processExcludeDefault(eeModuleDescription, annotation);\n        }\n\n        final List<AnnotationInstance> excludeClasses = index.getAnnotations(EXCLUDE_CLASS_ANNOTATION_NAME);\n        for (AnnotationInstance annotation : excludeClasses) {\n            processExcludeClass(eeModuleDescription, annotation);\n        }\n    }","id":15827,"modified_method":"public void deploy(DeploymentPhaseContext phaseContext) throws DeploymentUnitProcessingException {\n        final DeploymentUnit deploymentUnit = phaseContext.getDeploymentUnit();\n        final EEModuleDescription eeModuleDescription = deploymentUnit.getAttachment(Attachments.EE_MODULE_DESCRIPTION);\n        final CompositeIndex index = deploymentUnit.getAttachment(org.jboss.as.server.deployment.Attachments.COMPOSITE_ANNOTATION_INDEX);\n\n        final List<AnnotationInstance> interceptors = index.getAnnotations(INTERCEPTORS_ANNOTATION_NAME);\n        for (AnnotationInstance annotation : interceptors) {\n            processInterceptors(eeModuleDescription, annotation, index);\n        }\n\n        final List<AnnotationInstance> excludeDefaults = index.getAnnotations(EXCLUDE_DEFAULT_ANNOTATION_NAME);\n        for (AnnotationInstance annotation : excludeDefaults) {\n            processExcludeDefault(eeModuleDescription, annotation, index);\n        }\n\n        final List<AnnotationInstance> excludeClasses = index.getAnnotations(EXCLUDE_CLASS_ANNOTATION_NAME);\n        for (AnnotationInstance annotation : excludeClasses) {\n            processExcludeClass(eeModuleDescription, annotation, index);\n        }\n    }","commit_id":"feb3a3a98162e329dca939f84dd96a174cc50b71","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void processMethodInterceptor(final EEModuleDescription eeModuleDescription, final MethodInfo methodInfo, final AnnotationInstance annotation) {\n        final ComponentDescription componentDescription = eeModuleDescription.getComponentByClassName(methodInfo.declaringClass().name().toString());\n        if (componentDescription == null) {\n            return; // We ignore non-components\n        }\n\n        final AnnotationValue value = annotation.value();\n        if (value != null) for (Type interceptorClass : value.asClassArray()) {\n            componentDescription.addMethodInterceptor(methodIdentifierFromMethodInfo(methodInfo), new InterceptorDescription(interceptorClass.name().toString()));\n        }\n    }","id":15828,"modified_method":"private void processMethodInterceptor(final EEModuleDescription eeModuleDescription, final MethodInfo methodInfo, final AnnotationInstance annotation, final CompositeIndex index) {\n        final Collection<ComponentDescription> components = this.getApplicableComponents(index, methodInfo.declaringClass(), eeModuleDescription);\n        final AnnotationValue value = annotation.value();\n        if (value != null) for (Type interceptorClass : value.asClassArray()) {\n            for (ComponentDescription component : components) {\n                component.addMethodInterceptor(methodIdentifierFromMethodInfo(methodInfo), new InterceptorDescription(interceptorClass.name().toString()));\n            }\n        }\n    }","commit_id":"feb3a3a98162e329dca939f84dd96a174cc50b71","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void processExcludeDefault(final EEModuleDescription eeModuleDescription, final AnnotationInstance annotation) throws DeploymentUnitProcessingException {\n        final AnnotationTarget target = annotation.target();\n        if (target instanceof MethodInfo) {\n            processMethodExcludeDefault(eeModuleDescription, MethodInfo.class.cast(target));\n        } else if (target instanceof ClassInfo) {\n            processClassExcludeDefault(eeModuleDescription, ClassInfo.class.cast(target));\n        } else {\n            throw new DeploymentUnitProcessingException(\"@ExcludeDefaultInterceptors annotation is only allowed on methods and classes\");\n        }\n    }","id":15829,"modified_method":"private void processExcludeDefault(final EEModuleDescription eeModuleDescription, final AnnotationInstance annotation, final CompositeIndex index) throws DeploymentUnitProcessingException {\n        final AnnotationTarget target = annotation.target();\n        if (target instanceof MethodInfo) {\n            processMethodExcludeDefault(eeModuleDescription, MethodInfo.class.cast(target), index);\n        } else if (target instanceof ClassInfo) {\n            processClassExcludeDefault(eeModuleDescription, ClassInfo.class.cast(target), index);\n        } else {\n            throw new DeploymentUnitProcessingException(\"@ExcludeDefaultInterceptors annotation is only allowed on methods and classes\");\n        }\n    }","commit_id":"feb3a3a98162e329dca939f84dd96a174cc50b71","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void processMethodExcludeDefault(EEModuleDescription eeModuleDescription, MethodInfo methodInfo) {\n        final ComponentDescription componentDescription = eeModuleDescription.getComponentByClassName(methodInfo.declaringClass().name().toString());\n        if (componentDescription == null) {\n            return; // We ignore non-components\n        }\n        componentDescription.excludeDefaultInterceptors(methodIdentifierFromMethodInfo(methodInfo));\n    }","id":15830,"modified_method":"private void processMethodExcludeDefault(EEModuleDescription eeModuleDescription, MethodInfo methodInfo, final CompositeIndex index) {\n        final Collection<ComponentDescription> components = this.getApplicableComponents(index, methodInfo.declaringClass(), eeModuleDescription);\n        for (ComponentDescription component : components) {\n            component.excludeDefaultInterceptors(methodIdentifierFromMethodInfo(methodInfo));\n        }\n    }","commit_id":"feb3a3a98162e329dca939f84dd96a174cc50b71","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException {\n            // Create method indexes\n            DeploymentReflectionIndex reflectionIndex = context.getDeploymentUnit().getAttachment(REFLECTION_INDEX);\n            ClassReflectionIndex<?> index = reflectionIndex.getClassIndex(componentConfiguration.getComponentClass());\n            Method[] methods = configuration.getProxyFactory().getCachedMethods();\n            for (Method method : methods) {\n                final Method componentMethod = index.getMethod(method);\n                configuration.getViewInterceptorDeque(method).addLast(new ImmediateInterceptorFactory(new ComponentDispatcherInterceptor(componentMethod)));\n                configuration.getClientInterceptorDeque(method).addLast(CLIENT_DISPATCHER_INTERCEPTOR_FACTORY);\n            }\n\n            configuration.getViewPostConstructInterceptors().addLast(Interceptors.getTerminalInterceptorFactory());\n            configuration.getViewPreDestroyInterceptors().addLast(Interceptors.getTerminalInterceptorFactory());\n\n            configuration.getClientPostConstructInterceptors().addLast(Interceptors.getTerminalInterceptorFactory());\n            configuration.getClientPreDestroyInterceptors().addLast(Interceptors.getTerminalInterceptorFactory());\n\n            // Create view bindings\n            final List<BindingConfiguration> bindingConfigurations = configuration.getBindingConfigurations();\n            List<String> viewNameParts = description.getViewNameParts();\n            ///TODO: viewNameParts should be always populated\n            final ServiceName serviceName;\n            if(!viewNameParts.isEmpty()) {\n                serviceName = context.getDeploymentUnit().getServiceName().append(\"component\").append(componentConfiguration.getComponentName()).append(\"VIEW\").append(viewNameParts.toArray(new String[viewNameParts.size()]));\n            } else {\n                serviceName = context.getDeploymentUnit().getServiceName().append(\"component\").append(componentConfiguration.getComponentName()).append(\"VIEW\").append(description.getViewClassName());\n            }\n            for (String bindingName : description.getBindingNames()) {\n                bindingConfigurations.add(new BindingConfiguration(bindingName, new ViewBindingInjectionSource(serviceName)));\n            }\n        }","id":15831,"modified_method":"public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException {\n            // Create method indexes\n            DeploymentReflectionIndex reflectionIndex = context.getDeploymentUnit().getAttachment(REFLECTION_INDEX);\n            ClassReflectionIndex<?> index = reflectionIndex.getClassIndex(componentConfiguration.getComponentClass());\n            Method[] methods = configuration.getProxyFactory().getCachedMethods();\n            for (Method method : methods) {\n                final Method componentMethod = ClassReflectionIndexUtil.findRequiredMethod(reflectionIndex, index, method);\n                configuration.getViewInterceptorDeque(method).addLast(new ImmediateInterceptorFactory(new ComponentDispatcherInterceptor(componentMethod)));\n                configuration.getClientInterceptorDeque(method).addLast(CLIENT_DISPATCHER_INTERCEPTOR_FACTORY);\n            }\n\n            configuration.getViewPostConstructInterceptors().addLast(Interceptors.getTerminalInterceptorFactory());\n            configuration.getViewPreDestroyInterceptors().addLast(Interceptors.getTerminalInterceptorFactory());\n\n            configuration.getClientPostConstructInterceptors().addLast(Interceptors.getTerminalInterceptorFactory());\n            configuration.getClientPreDestroyInterceptors().addLast(Interceptors.getTerminalInterceptorFactory());\n\n            // Create view bindings\n            final List<BindingConfiguration> bindingConfigurations = configuration.getBindingConfigurations();\n            List<String> viewNameParts = description.getViewNameParts();\n            ///TODO: viewNameParts should be always populated\n            final ServiceName serviceName;\n            if (!viewNameParts.isEmpty()) {\n                serviceName = context.getDeploymentUnit().getServiceName().append(\"component\").append(componentConfiguration.getComponentName()).append(\"VIEW\").append(viewNameParts.toArray(new String[viewNameParts.size()]));\n            } else {\n                serviceName = context.getDeploymentUnit().getServiceName().append(\"component\").append(componentConfiguration.getComponentName()).append(\"VIEW\").append(description.getViewClassName());\n            }\n            for (String bindingName : description.getBindingNames()) {\n                bindingConfigurations.add(new BindingConfiguration(bindingName, new ViewBindingInjectionSource(serviceName)));\n            }\n        }","commit_id":"feb3a3a98162e329dca939f84dd96a174cc50b71","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void write(final DataOutput out)\n  throws IOException {\n    out.writeByte(GET_VERSION);\n    Bytes.writeByteArray(out, this.row);\n    out.writeLong(this.lockId);\n    out.writeInt(this.maxVersions);\n    if(this.filter == null) {\n      out.writeBoolean(false);\n    } else {\n      out.writeBoolean(true);\n      HbaseObjectWritable.writeObject(out, this.filter, Filter.class, null);\n    }\n    tr.write(out);\n    out.writeInt(familyMap.size());\n    for(Map.Entry<byte [], NavigableSet<byte []>> entry : \n      familyMap.entrySet()) {\n      Bytes.writeByteArray(out, entry.getKey());\n      NavigableSet<byte []> columnSet = entry.getValue();\n      if(columnSet == null) {\n        out.writeBoolean(false);\n      } else {\n        out.writeBoolean(true);\n        out.writeInt(columnSet.size());\n        for(byte [] qualifier : columnSet) {\n          Bytes.writeByteArray(out, qualifier);\n        }\n      }\n    }\n  }","id":15832,"modified_method":"public void write(final DataOutput out)\n  throws IOException {\n    out.writeByte(GET_VERSION);\n    Bytes.writeByteArray(out, this.row);\n    out.writeLong(this.lockId);\n    out.writeInt(this.maxVersions);\n    if(this.filter == null) {\n      out.writeBoolean(false);\n    } else {\n      out.writeBoolean(true);\n      Bytes.writeByteArray(out, Bytes.toBytes(filter.getClass().getName()));\n      filter.write(out);\n    }\n    tr.write(out);\n    out.writeInt(familyMap.size());\n    for(Map.Entry<byte [], NavigableSet<byte []>> entry : \n      familyMap.entrySet()) {\n      Bytes.writeByteArray(out, entry.getKey());\n      NavigableSet<byte []> columnSet = entry.getValue();\n      if(columnSet == null) {\n        out.writeBoolean(false);\n      } else {\n        out.writeBoolean(true);\n        out.writeInt(columnSet.size());\n        for(byte [] qualifier : columnSet) {\n          Bytes.writeByteArray(out, qualifier);\n        }\n      }\n    }\n  }","commit_id":"24e48ff4c800f310a2ba01b07f09fb1330d0ac84","url":"https://github.com/apache/hbase"},{"original_method":"public void readFields(final DataInput in)\n  throws IOException {\n    int version = in.readByte();\n    if (version > GET_VERSION) {\n      throw new IOException(\"unsupported version\");\n    }\n    this.row = Bytes.readByteArray(in);\n    this.lockId = in.readLong();\n    this.maxVersions = in.readInt();\n    boolean hasFilter = in.readBoolean();\n    if (hasFilter) {\n      this.filter = (Filter)HbaseObjectWritable.readObject(in, null);\n    }\n    this.tr = new TimeRange();\n    tr.readFields(in);\n    int numFamilies = in.readInt();\n    this.familyMap = \n      new TreeMap<byte [],NavigableSet<byte []>>(Bytes.BYTES_COMPARATOR);\n    for(int i=0; i<numFamilies; i++) {\n      byte [] family = Bytes.readByteArray(in);\n      boolean hasColumns = in.readBoolean();\n      NavigableSet<byte []> set = null;\n      if(hasColumns) {\n        int numColumns = in.readInt();\n        set = new TreeSet<byte []>(Bytes.BYTES_COMPARATOR);\n        for(int j=0; j<numColumns; j++) {\n          byte [] qualifier = Bytes.readByteArray(in);\n          set.add(qualifier);\n        }\n      }\n      this.familyMap.put(family, set);\n    }\n  }","id":15833,"modified_method":"public void readFields(final DataInput in)\n  throws IOException {\n    int version = in.readByte();\n    if (version > GET_VERSION) {\n      throw new IOException(\"unsupported version\");\n    }\n    this.row = Bytes.readByteArray(in);\n    this.lockId = in.readLong();\n    this.maxVersions = in.readInt();\n    boolean hasFilter = in.readBoolean();\n    if (hasFilter) {\n      this.filter = (Filter)createForName(Bytes.toString(Bytes.readByteArray(in)));\n      this.filter.readFields(in);\n    }\n    this.tr = new TimeRange();\n    tr.readFields(in);\n    int numFamilies = in.readInt();\n    this.familyMap = \n      new TreeMap<byte [],NavigableSet<byte []>>(Bytes.BYTES_COMPARATOR);\n    for(int i=0; i<numFamilies; i++) {\n      byte [] family = Bytes.readByteArray(in);\n      boolean hasColumns = in.readBoolean();\n      NavigableSet<byte []> set = null;\n      if(hasColumns) {\n        int numColumns = in.readInt();\n        set = new TreeSet<byte []>(Bytes.BYTES_COMPARATOR);\n        for(int j=0; j<numColumns; j++) {\n          byte [] qualifier = Bytes.readByteArray(in);\n          set.add(qualifier);\n        }\n      }\n      this.familyMap.put(family, set);\n    }\n  }","commit_id":"24e48ff4c800f310a2ba01b07f09fb1330d0ac84","url":"https://github.com/apache/hbase"},{"original_method":"public void write(final DataOutput out)\n  throws IOException {\n    Bytes.writeByteArray(out, this.startRow);\n    Bytes.writeByteArray(out, this.stopRow);\n    out.writeInt(this.maxVersions);\n    if(this.filter == null) {\n      out.writeBoolean(false);\n    } else {\n      out.writeBoolean(true);\n      HbaseObjectWritable.writeObject(out, this.filter, \n          Filter.class, null);\n    }\n    if (this.oldFilter == null) {\n      out.writeBoolean(false);\n    } else {\n      out.writeBoolean(true);\n      HbaseObjectWritable.writeObject(out, this.oldFilter,\n          RowFilterInterface.class, null);\n    }\n    tr.write(out);\n    out.writeInt(familyMap.size());\n    for(Map.Entry<byte [], NavigableSet<byte []>> entry : familyMap.entrySet()) {\n      Bytes.writeByteArray(out, entry.getKey());\n      NavigableSet<byte []> columnSet = entry.getValue();\n      if(columnSet != null){\n        out.writeInt(columnSet.size());\n        for(byte [] qualifier : columnSet) {\n          Bytes.writeByteArray(out, qualifier);\n        }\n      } else {\n        out.writeInt(0);\n      }\n    }\n  }","id":15834,"modified_method":"public void write(final DataOutput out)\n  throws IOException {\n    Bytes.writeByteArray(out, this.startRow);\n    Bytes.writeByteArray(out, this.stopRow);\n    out.writeInt(this.maxVersions);\n    if(this.filter == null) {\n      out.writeBoolean(false);\n    } else {\n      out.writeBoolean(true);\n      Bytes.writeByteArray(out, Bytes.toBytes(filter.getClass().getName()));\n      filter.write(out);\n    }\n    if (this.oldFilter == null) {\n      out.writeBoolean(false);\n    } else {\n      out.writeBoolean(true);\n      Bytes.writeByteArray(out, Bytes.toBytes(oldFilter.getClass().getName()));\n      oldFilter.write(out);\n    }\n    tr.write(out);\n    out.writeInt(familyMap.size());\n    for(Map.Entry<byte [], NavigableSet<byte []>> entry : familyMap.entrySet()) {\n      Bytes.writeByteArray(out, entry.getKey());\n      NavigableSet<byte []> columnSet = entry.getValue();\n      if(columnSet != null){\n        out.writeInt(columnSet.size());\n        for(byte [] qualifier : columnSet) {\n          Bytes.writeByteArray(out, qualifier);\n        }\n      } else {\n        out.writeInt(0);\n      }\n    }\n  }","commit_id":"c493cd3bcc47fa3c0b04eeb21366e05863bb21f5","url":"https://github.com/apache/hbase"},{"original_method":"public void readFields(final DataInput in)\n  throws IOException {\n    this.startRow = Bytes.readByteArray(in);\n    this.stopRow = Bytes.readByteArray(in);\n    this.maxVersions = in.readInt();\n    boolean hasFilter = in.readBoolean();\n    if(hasFilter) {\n      this.filter = (Filter)HbaseObjectWritable.readObject(in,\n        new Configuration());\n    }\n    boolean hasOldFilter = in.readBoolean();\n    if (hasOldFilter) {\n      this.oldFilter = (RowFilterInterface)HbaseObjectWritable.readObject(in,\n          new Configuration());\n    }\n    this.tr = new TimeRange();\n    tr.readFields(in);\n    int numFamilies = in.readInt();\n    this.familyMap = \n      new TreeMap<byte [], NavigableSet<byte []>>(Bytes.BYTES_COMPARATOR);\n    for(int i=0; i<numFamilies; i++) {\n      byte [] family = Bytes.readByteArray(in);\n      int numColumns = in.readInt();\n      TreeSet<byte []> set = new TreeSet<byte []>(Bytes.BYTES_COMPARATOR);\n      for(int j=0; j<numColumns; j++) {\n        byte [] qualifier = Bytes.readByteArray(in);\n        set.add(qualifier);\n      }\n      this.familyMap.put(family, set);\n    }\n  }","id":15835,"modified_method":"public void readFields(final DataInput in)\n  throws IOException {\n    this.startRow = Bytes.readByteArray(in);\n    this.stopRow = Bytes.readByteArray(in);\n    this.maxVersions = in.readInt();\n    if(in.readBoolean()) {\n      this.filter = (Filter)createForName(Bytes.toString(Bytes.readByteArray(in)));\n      this.filter.readFields(in);\n    }\n    if (in.readBoolean()) {\n      this.oldFilter =\n        (RowFilterInterface)createForName(Bytes.toString(Bytes.readByteArray(in)));\n      this.oldFilter.readFields(in);\n    }\n    this.tr = new TimeRange();\n    tr.readFields(in);\n    int numFamilies = in.readInt();\n    this.familyMap = \n      new TreeMap<byte [], NavigableSet<byte []>>(Bytes.BYTES_COMPARATOR);\n    for(int i=0; i<numFamilies; i++) {\n      byte [] family = Bytes.readByteArray(in);\n      int numColumns = in.readInt();\n      TreeSet<byte []> set = new TreeSet<byte []>(Bytes.BYTES_COMPARATOR);\n      for(int j=0; j<numColumns; j++) {\n        byte [] qualifier = Bytes.readByteArray(in);\n        set.add(qualifier);\n      }\n      this.familyMap.put(family, set);\n    }\n  }","commit_id":"c493cd3bcc47fa3c0b04eeb21366e05863bb21f5","url":"https://github.com/apache/hbase"},{"original_method":"public void testScan() throws Exception{\n    byte[] startRow = \"startRow\".getBytes();\n    byte[] stopRow  = \"stopRow\".getBytes();\n    byte[] fam = \"fam\".getBytes();\n    byte[] qf1 = \"qf1\".getBytes();\n    \n    long ts = System.currentTimeMillis();\n    int maxVersions = 2;\n    \n    Scan scan = new Scan(startRow, stopRow);\n    scan.addColumn(fam, qf1);\n    scan.setTimeRange(ts, ts+1);\n    scan.setMaxVersions(maxVersions);\n    \n    byte[] sb = Writables.getBytes(scan);\n    Scan desScan = (Scan)Writables.getWritable(sb, new Scan());\n\n    assertTrue(Bytes.equals(scan.getStartRow(), desScan.getStartRow()));\n    assertTrue(Bytes.equals(scan.getStopRow(), desScan.getStopRow()));\n    Set<byte[]> set = null;\n    Set<byte[]> desSet = null;\n    \n    for(Map.Entry<byte[], NavigableSet<byte[]>> entry :\n        scan.getFamilyMap().entrySet()){\n      assertTrue(desScan.getFamilyMap().containsKey(entry.getKey()));\n      set = entry.getValue();\n      desSet = desScan.getFamilyMap().get(entry.getKey());\n      for(byte[] column : set){\n        assertTrue(desSet.contains(column));\n      }\n    }\n    \n    assertEquals(scan.getMaxVersions(), desScan.getMaxVersions());\n    TimeRange tr = scan.getTimeRange();\n    TimeRange desTr = desScan.getTimeRange();\n    assertEquals(tr.getMax(), desTr.getMax());\n    assertEquals(tr.getMin(), desTr.getMin());\n  }","id":15836,"modified_method":"public void testScan() throws Exception{\n    byte[] startRow = \"startRow\".getBytes();\n    byte[] stopRow  = \"stopRow\".getBytes();\n    byte[] fam = \"fam\".getBytes();\n    byte[] qf1 = \"qf1\".getBytes();\n    \n    long ts = System.currentTimeMillis();\n    int maxVersions = 2;\n    \n    Scan scan = new Scan(startRow, stopRow);\n    scan.addColumn(fam, qf1);\n    scan.setTimeRange(ts, ts+1);\n    scan.setMaxVersions(maxVersions);\n    \n    byte[] sb = Writables.getBytes(scan);\n    Scan desScan = (Scan)Writables.getWritable(sb, new Scan());\n\n    assertTrue(Bytes.equals(scan.getStartRow(), desScan.getStartRow()));\n    assertTrue(Bytes.equals(scan.getStopRow(), desScan.getStopRow()));\n    Set<byte[]> set = null;\n    Set<byte[]> desSet = null;\n    \n    for(Map.Entry<byte[], NavigableSet<byte[]>> entry :\n        scan.getFamilyMap().entrySet()){\n      assertTrue(desScan.getFamilyMap().containsKey(entry.getKey()));\n      set = entry.getValue();\n      desSet = desScan.getFamilyMap().get(entry.getKey());\n      for(byte[] column : set){\n        assertTrue(desSet.contains(column));\n      }\n      \n      // Test filters are serialized properly.\n      scan = new Scan(startRow);\n      byte [] prefix = Bytes.toBytes(getName());\n      scan.setFilter(new PrefixFilter(prefix));\n      sb = Writables.getBytes(scan);\n      desScan = (Scan)Writables.getWritable(sb, new Scan());\n      Filter f = desScan.getFilter();\n      assertTrue(f instanceof PrefixFilter);\n    }\n    \n    assertEquals(scan.getMaxVersions(), desScan.getMaxVersions());\n    TimeRange tr = scan.getTimeRange();\n    TimeRange desTr = desScan.getTimeRange();\n    assertEquals(tr.getMax(), desTr.getMax());\n    assertEquals(tr.getMin(), desTr.getMin());\n  }","commit_id":"c493cd3bcc47fa3c0b04eeb21366e05863bb21f5","url":"https://github.com/apache/hbase"},{"original_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        jScrollPane1 = new javax.swing.JScrollPane();\n        jPanel1 = new javax.swing.JPanel();\n        jSplitPane1 = new javax.swing.JSplitPane();\n        mimePanel = new javax.swing.JPanel();\n        jLabel1 = new javax.swing.JLabel();\n        jScrollPane2 = new javax.swing.JScrollPane();\n        mimeTable = new javax.swing.JTable();\n        userTypeTextField = new javax.swing.JTextField();\n        addTypeButton = new javax.swing.JButton();\n        removeTypeButton = new javax.swing.JButton();\n        mimeErrLabel = new javax.swing.JLabel();\n        mimeRemoveErrLabel = new javax.swing.JLabel();\n        extensionPanel = new javax.swing.JPanel();\n        userExtTextField = new javax.swing.JTextField();\n        addExtButton = new javax.swing.JButton();\n        jScrollPane3 = new javax.swing.JScrollPane();\n        extTable = new javax.swing.JTable();\n        removeExtButton = new javax.swing.JButton();\n        extHeaderLabel = new javax.swing.JLabel();\n        extErrorLabel = new javax.swing.JLabel();\n        extRemoveErrLabel = new javax.swing.JLabel();\n        saveMsgLabel = new javax.swing.JLabel();\n\n        jPanel1.setPreferredSize(new java.awt.Dimension(687, 450));\n\n        jSplitPane1.setDividerLocation(430);\n\n        jLabel1.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.jLabel1.text\")); // NOI18N\n\n        mimeTable.setModel(mimeTableModel);\n        jScrollPane2.setViewportView(mimeTable);\n\n        userTypeTextField.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.userTypeTextField.text\")); // NOI18N\n        userTypeTextField.addFocusListener(new java.awt.event.FocusAdapter() {\n            public void focusGained(java.awt.event.FocusEvent evt) {\n                userTypeTextFieldFocusGained(evt);\n            }\n        });\n\n        addTypeButton.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.addTypeButton.text\")); // NOI18N\n        addTypeButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                addTypeButtonActionPerformed(evt);\n            }\n        });\n\n        removeTypeButton.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.removeTypeButton.text\")); // NOI18N\n        removeTypeButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                removeTypeButtonActionPerformed(evt);\n            }\n        });\n\n        mimeErrLabel.setForeground(new java.awt.Color(255, 0, 0));\n        mimeErrLabel.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.mimeErrLabel.text\")); // NOI18N\n\n        mimeRemoveErrLabel.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.mimeRemoveErrLabel.text\")); // NOI18N\n\n        javax.swing.GroupLayout mimePanelLayout = new javax.swing.GroupLayout(mimePanel);\n        mimePanel.setLayout(mimePanelLayout);\n        mimePanelLayout.setHorizontalGroup(\n            mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(mimePanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)\n                    .addGroup(mimePanelLayout.createSequentialGroup()\n                        .addGroup(mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(jLabel1)\n                            .addGroup(mimePanelLayout.createSequentialGroup()\n                                .addComponent(userTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(addTypeButton))\n                            .addComponent(removeTypeButton))\n                        .addGap(0, 196, Short.MAX_VALUE))\n                    .addComponent(mimeErrLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                    .addComponent(mimeRemoveErrLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n                .addContainerGap())\n        );\n        mimePanelLayout.setVerticalGroup(\n            mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(mimePanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jLabel1)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(userTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(addTypeButton))\n                .addGap(3, 3, 3)\n                .addComponent(mimeErrLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(removeTypeButton)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(mimeRemoveErrLabel)\n                .addContainerGap(83, Short.MAX_VALUE))\n        );\n\n        jSplitPane1.setLeftComponent(mimePanel);\n\n        userExtTextField.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.userExtTextField.text\")); // NOI18N\n        userExtTextField.addFocusListener(new java.awt.event.FocusAdapter() {\n            public void focusGained(java.awt.event.FocusEvent evt) {\n                userExtTextFieldFocusGained(evt);\n            }\n        });\n\n        addExtButton.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.addExtButton.text\")); // NOI18N\n        addExtButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                addExtButtonActionPerformed(evt);\n            }\n        });\n\n        extTable.setModel(extTableModel);\n        jScrollPane3.setViewportView(extTable);\n\n        removeExtButton.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.removeExtButton.text\")); // NOI18N\n        removeExtButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                removeExtButtonActionPerformed(evt);\n            }\n        });\n\n        extHeaderLabel.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.extHeaderLabel.text\")); // NOI18N\n\n        extErrorLabel.setForeground(new java.awt.Color(255, 0, 0));\n        extErrorLabel.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.extErrorLabel.text\")); // NOI18N\n\n        extRemoveErrLabel.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.extRemoveErrLabel.text\")); // NOI18N\n\n        javax.swing.GroupLayout extensionPanelLayout = new javax.swing.GroupLayout(extensionPanel);\n        extensionPanel.setLayout(extensionPanelLayout);\n        extensionPanelLayout.setHorizontalGroup(\n            extensionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(extensionPanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(extensionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)\n                    .addComponent(extHeaderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                    .addGroup(extensionPanelLayout.createSequentialGroup()\n                        .addGroup(extensionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)\n                            .addComponent(removeExtButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                            .addGroup(extensionPanelLayout.createSequentialGroup()\n                                .addComponent(userExtTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(addExtButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))\n                        .addGap(0, 46, Short.MAX_VALUE))\n                    .addComponent(extErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                    .addComponent(extRemoveErrLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n                .addContainerGap())\n        );\n        extensionPanelLayout.setVerticalGroup(\n            extensionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, extensionPanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(extHeaderLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(extensionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(userExtTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(addExtButton))\n                .addGap(2, 2, 2)\n                .addComponent(extErrorLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(removeExtButton)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(extRemoveErrLabel)\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n\n        jSplitPane1.setRightComponent(extensionPanel);\n\n        saveMsgLabel.setForeground(new java.awt.Color(0, 0, 255));\n        saveMsgLabel.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.saveMsgLabel.text\")); // NOI18N\n\n        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);\n        jPanel1.setLayout(jPanel1Layout);\n        jPanel1Layout.setHorizontalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(jSplitPane1)\n                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()\n                        .addGap(0, 0, Short.MAX_VALUE)\n                        .addComponent(saveMsgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))\n                .addContainerGap())\n        );\n        jPanel1Layout.setVerticalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(saveMsgLabel)\n                .addContainerGap())\n        );\n\n        jScrollPane1.setViewportView(jPanel1);\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(jScrollPane1)\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(0, 8, Short.MAX_VALUE))\n        );\n    }","id":15837,"modified_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        jScrollPane1 = new javax.swing.JScrollPane();\n        jPanel1 = new javax.swing.JPanel();\n        jSplitPane1 = new javax.swing.JSplitPane();\n        mimePanel = new javax.swing.JPanel();\n        jLabel1 = new javax.swing.JLabel();\n        jScrollPane2 = new javax.swing.JScrollPane();\n        mimeTable = new javax.swing.JTable();\n        userTypeTextField = new javax.swing.JTextField();\n        addTypeButton = new javax.swing.JButton();\n        removeTypeButton = new javax.swing.JButton();\n        mimeErrLabel = new javax.swing.JLabel();\n        mimeRemoveErrLabel = new javax.swing.JLabel();\n        extensionPanel = new javax.swing.JPanel();\n        userExtTextField = new javax.swing.JTextField();\n        addExtButton = new javax.swing.JButton();\n        jScrollPane3 = new javax.swing.JScrollPane();\n        extTable = new javax.swing.JTable();\n        removeExtButton = new javax.swing.JButton();\n        extHeaderLabel = new javax.swing.JLabel();\n        extErrorLabel = new javax.swing.JLabel();\n        extRemoveErrLabel = new javax.swing.JLabel();\n        saveMsgLabel = new javax.swing.JLabel();\n\n        jPanel1.setPreferredSize(new java.awt.Dimension(687, 450));\n\n        jSplitPane1.setDividerLocation(430);\n\n        jLabel1.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.jLabel1.text\")); // NOI18N\n\n        mimeTable.setModel(mimeTableModel);\n        jScrollPane2.setViewportView(mimeTable);\n\n        userTypeTextField.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.userTypeTextField.text\")); // NOI18N\n        userTypeTextField.addFocusListener(new java.awt.event.FocusAdapter() {\n            public void focusGained(java.awt.event.FocusEvent evt) {\n                userTypeTextFieldFocusGained(evt);\n            }\n        });\n\n        addTypeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/add16.png\"))); // NOI18N\n        addTypeButton.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.addTypeButton.text\")); // NOI18N\n        addTypeButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                addTypeButtonActionPerformed(evt);\n            }\n        });\n\n        removeTypeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/delete16.png\"))); // NOI18N\n        removeTypeButton.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.removeTypeButton.text\")); // NOI18N\n        removeTypeButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                removeTypeButtonActionPerformed(evt);\n            }\n        });\n\n        mimeErrLabel.setForeground(new java.awt.Color(255, 0, 0));\n        mimeErrLabel.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.mimeErrLabel.text\")); // NOI18N\n\n        mimeRemoveErrLabel.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.mimeRemoveErrLabel.text\")); // NOI18N\n\n        javax.swing.GroupLayout mimePanelLayout = new javax.swing.GroupLayout(mimePanel);\n        mimePanel.setLayout(mimePanelLayout);\n        mimePanelLayout.setHorizontalGroup(\n            mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(mimePanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)\n                    .addComponent(mimeErrLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                    .addComponent(mimeRemoveErrLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                    .addGroup(mimePanelLayout.createSequentialGroup()\n                        .addGroup(mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(jLabel1)\n                            .addGroup(mimePanelLayout.createSequentialGroup()\n                                .addComponent(userTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(addTypeButton)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(removeTypeButton)))\n                        .addGap(0, 0, Short.MAX_VALUE)))\n                .addContainerGap())\n        );\n        mimePanelLayout.setVerticalGroup(\n            mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(mimePanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jLabel1)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(userTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(addTypeButton)\n                    .addComponent(removeTypeButton))\n                .addGap(2, 2, 2)\n                .addComponent(mimeErrLabel)\n                .addGap(37, 37, 37)\n                .addComponent(mimeRemoveErrLabel)\n                .addContainerGap(80, Short.MAX_VALUE))\n        );\n\n        jSplitPane1.setLeftComponent(mimePanel);\n\n        userExtTextField.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.userExtTextField.text\")); // NOI18N\n        userExtTextField.addFocusListener(new java.awt.event.FocusAdapter() {\n            public void focusGained(java.awt.event.FocusEvent evt) {\n                userExtTextFieldFocusGained(evt);\n            }\n        });\n\n        addExtButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/add16.png\"))); // NOI18N\n        addExtButton.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.addExtButton.text\")); // NOI18N\n        addExtButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                addExtButtonActionPerformed(evt);\n            }\n        });\n\n        extTable.setModel(extTableModel);\n        jScrollPane3.setViewportView(extTable);\n\n        removeExtButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/delete16.png\"))); // NOI18N\n        removeExtButton.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.removeExtButton.text\")); // NOI18N\n        removeExtButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                removeExtButtonActionPerformed(evt);\n            }\n        });\n\n        extHeaderLabel.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.extHeaderLabel.text\")); // NOI18N\n\n        extErrorLabel.setForeground(new java.awt.Color(255, 0, 0));\n        extErrorLabel.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.extErrorLabel.text\")); // NOI18N\n\n        extRemoveErrLabel.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.extRemoveErrLabel.text\")); // NOI18N\n\n        javax.swing.GroupLayout extensionPanelLayout = new javax.swing.GroupLayout(extensionPanel);\n        extensionPanel.setLayout(extensionPanelLayout);\n        extensionPanelLayout.setHorizontalGroup(\n            extensionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(extensionPanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(extensionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)\n                    .addComponent(extHeaderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                    .addComponent(extErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                    .addComponent(extRemoveErrLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                    .addGroup(extensionPanelLayout.createSequentialGroup()\n                        .addComponent(userExtTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(addExtButton)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(removeExtButton)))\n                .addContainerGap())\n        );\n        extensionPanelLayout.setVerticalGroup(\n            extensionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, extensionPanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(extHeaderLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(extensionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(userExtTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(addExtButton)\n                    .addComponent(removeExtButton))\n                .addGap(1, 1, 1)\n                .addComponent(extErrorLabel)\n                .addGap(37, 37, 37)\n                .addComponent(extRemoveErrLabel)\n                .addContainerGap(46, Short.MAX_VALUE))\n        );\n\n        jSplitPane1.setRightComponent(extensionPanel);\n\n        saveMsgLabel.setForeground(new java.awt.Color(0, 0, 255));\n        saveMsgLabel.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.saveMsgLabel.text\")); // NOI18N\n\n        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);\n        jPanel1.setLayout(jPanel1Layout);\n        jPanel1Layout.setHorizontalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(jSplitPane1)\n                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()\n                        .addGap(0, 0, Short.MAX_VALUE)\n                        .addComponent(saveMsgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))\n        );\n        jPanel1Layout.setVerticalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(saveMsgLabel)\n                .addContainerGap())\n        );\n\n        jScrollPane1.setViewportView(jPanel1);\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE)\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(0, 8, Short.MAX_VALUE))\n        );\n    }","commit_id":"bed9161e05cb2500d388776ffd81a3472fc5c892","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"@Override\n        public String getColumnName(int column) {\n            String colName = null;\n\n            switch (column) {\n                case 0:\n                    colName = NbBundle.getMessage(this.getClass(), \"FileExtMismatchConfigPanel.mimeTableModel.colName\");\n                    break;\n                default:\n                    ;\n\n            }\n            return colName;\n        }","id":15838,"modified_method":"@Override\n        public String getColumnName(int column) {\n            String colName = null;\n            return colName;\n        }","commit_id":"bed9161e05cb2500d388776ffd81a3472fc5c892","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"@Override\n        public String getColumnName(int column) {\n            String colName = null;\n\n            switch (column) {\n                case 0:\n                    colName = NbBundle.getMessage(this.getClass(), \"FileExtMismatchConfigPanel.extTableModel.colName\");\n                    break;\n                default:\n                    ;\n\n            }\n            return colName;\n        }","id":15839,"modified_method":"@Override\n        public String getColumnName(int column) {\n            String colName = null;\n            return colName;\n        }","commit_id":"bed9161e05cb2500d388776ffd81a3472fc5c892","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        rightClickMenu = new javax.swing.JPopupMenu();\n        cutMenuItem = new javax.swing.JMenuItem();\n        copyMenuItem = new javax.swing.JMenuItem();\n        pasteMenuItem = new javax.swing.JMenuItem();\n        selectAllMenuItem = new javax.swing.JMenuItem();\n        listEditorPanel = new javax.swing.JPanel();\n        jScrollPane1 = new javax.swing.JScrollPane();\n        keywordTable = new javax.swing.JTable();\n        addKeywordPanel = new javax.swing.JPanel();\n        addWordButton = new javax.swing.JButton();\n        addWordField = new javax.swing.JTextField();\n        chRegex = new javax.swing.JCheckBox();\n        deleteWordButton = new javax.swing.JButton();\n        ingestMessagesCheckbox = new javax.swing.JCheckBox();\n        keywordsLabel = new javax.swing.JLabel();\n        keywordOptionsLabel = new javax.swing.JLabel();\n        listOptionsLabel = new javax.swing.JLabel();\n        keywordOptionsSeparator = new javax.swing.JSeparator();\n        listOptionsSeparator = new javax.swing.JSeparator();\n        deleteListButton = new javax.swing.JButton();\n        saveListButton = new javax.swing.JButton();\n        exportButton = new javax.swing.JButton();\n\n        cutMenuItem.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.cutMenuItem.text\")); // NOI18N\n        rightClickMenu.add(cutMenuItem);\n\n        copyMenuItem.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.copyMenuItem.text\")); // NOI18N\n        rightClickMenu.add(copyMenuItem);\n\n        pasteMenuItem.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.pasteMenuItem.text\")); // NOI18N\n        rightClickMenu.add(pasteMenuItem);\n\n        selectAllMenuItem.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.selectAllMenuItem.text\")); // NOI18N\n        rightClickMenu.add(selectAllMenuItem);\n\n        jScrollPane1.setPreferredSize(new java.awt.Dimension(340, 300));\n\n        keywordTable.setModel(tableModel);\n        keywordTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);\n        keywordTable.setShowHorizontalLines(false);\n        keywordTable.setShowVerticalLines(false);\n        keywordTable.getTableHeader().setReorderingAllowed(false);\n        jScrollPane1.setViewportView(keywordTable);\n\n        addWordButton.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.addWordButton.text\")); // NOI18N\n        addWordButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                addWordButtonActionPerformed(evt);\n            }\n        });\n\n        addWordField.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.addWordField.text\")); // NOI18N\n        addWordField.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                addWordFieldActionPerformed(evt);\n            }\n        });\n\n        chRegex.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.chRegex.text\")); // NOI18N\n\n        deleteWordButton.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.deleteWordButton.text\")); // NOI18N\n        deleteWordButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                deleteWordButtonActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout addKeywordPanelLayout = new javax.swing.GroupLayout(addKeywordPanel);\n        addKeywordPanel.setLayout(addKeywordPanelLayout);\n        addKeywordPanelLayout.setHorizontalGroup(\n            addKeywordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(addKeywordPanelLayout.createSequentialGroup()\n                .addGroup(addKeywordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addGroup(addKeywordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                        .addGroup(addKeywordPanelLayout.createSequentialGroup()\n                            .addComponent(addWordField, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)\n                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                            .addComponent(addWordButton))\n                        .addComponent(deleteWordButton))\n                    .addComponent(chRegex, javax.swing.GroupLayout.Alignment.LEADING))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n        addKeywordPanelLayout.setVerticalGroup(\n            addKeywordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(addKeywordPanelLayout.createSequentialGroup()\n                .addGap(0, 0, 0)\n                .addGroup(addKeywordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(addWordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(addWordButton))\n                .addGap(7, 7, 7)\n                .addComponent(chRegex)\n                .addGap(7, 7, 7)\n                .addComponent(deleteWordButton)\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n\n        ingestMessagesCheckbox.setSelected(true);\n        ingestMessagesCheckbox.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.ingestMessagesCheckbox.text\")); // NOI18N\n        ingestMessagesCheckbox.setToolTipText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.ingestMessagesCheckbox.toolTipText\")); // NOI18N\n        ingestMessagesCheckbox.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                ingestMessagesCheckboxActionPerformed(evt);\n            }\n        });\n\n        keywordsLabel.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.keywordsLabel.text\")); // NOI18N\n\n        keywordOptionsLabel.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.keywordOptionsLabel.text\")); // NOI18N\n\n        listOptionsLabel.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.listOptionsLabel.text\")); // NOI18N\n\n        deleteListButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/keywordsearch/delete16.png\"))); // NOI18N NON-NLS\n        deleteListButton.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.deleteListButton.text\")); // NOI18N\n\n        saveListButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/keywordsearch/save16.png\"))); // NOI18N NON-NLS\n        saveListButton.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.saveListButton.text\")); // NOI18N\n\n        exportButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/keywordsearch/export16.png\"))); // NOI18N NON-NLS\n        exportButton.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.exportButton.text\")); // NOI18N\n        exportButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                exportButtonActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout listEditorPanelLayout = new javax.swing.GroupLayout(listEditorPanel);\n        listEditorPanel.setLayout(listEditorPanelLayout);\n        listEditorPanelLayout.setHorizontalGroup(\n            listEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(listEditorPanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(listEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(listEditorPanelLayout.createSequentialGroup()\n                        .addGap(10, 10, 10)\n                        .addComponent(addKeywordPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n                    .addGroup(listEditorPanelLayout.createSequentialGroup()\n                        .addGroup(listEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(listEditorPanelLayout.createSequentialGroup()\n                                .addComponent(listOptionsLabel)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(listOptionsSeparator))\n                            .addGroup(listEditorPanelLayout.createSequentialGroup()\n                                .addComponent(keywordOptionsLabel)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(keywordOptionsSeparator))\n                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                            .addGroup(listEditorPanelLayout.createSequentialGroup()\n                                .addGroup(listEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                    .addComponent(keywordsLabel)\n                                    .addGroup(listEditorPanelLayout.createSequentialGroup()\n                                        .addGap(10, 10, 10)\n                                        .addGroup(listEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                            .addComponent(ingestMessagesCheckbox)\n                                            .addGroup(listEditorPanelLayout.createSequentialGroup()\n                                                .addComponent(exportButton)\n                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                                .addComponent(saveListButton)\n                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                                .addComponent(deleteListButton)))))\n                                .addGap(0, 0, Short.MAX_VALUE)))\n                        .addContainerGap())))\n        );\n        listEditorPanelLayout.setVerticalGroup(\n            listEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listEditorPanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(keywordsLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(10, 10, 10)\n                .addGroup(listEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(listEditorPanelLayout.createSequentialGroup()\n                        .addGroup(listEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                            .addComponent(keywordOptionsSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)\n                            .addComponent(keywordOptionsLabel))\n                        .addGap(7, 7, 7)\n                        .addComponent(addKeywordPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addGap(0, 0, 0)\n                        .addComponent(listOptionsLabel))\n                    .addGroup(listEditorPanelLayout.createSequentialGroup()\n                        .addGap(123, 123, 123)\n                        .addComponent(listOptionsSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(ingestMessagesCheckbox)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(listEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(exportButton)\n                    .addComponent(saveListButton)\n                    .addComponent(deleteListButton))\n                .addContainerGap())\n        );\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(listEditorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addComponent(listEditorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n    }","id":15840,"modified_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        rightClickMenu = new javax.swing.JPopupMenu();\n        cutMenuItem = new javax.swing.JMenuItem();\n        copyMenuItem = new javax.swing.JMenuItem();\n        pasteMenuItem = new javax.swing.JMenuItem();\n        selectAllMenuItem = new javax.swing.JMenuItem();\n        listEditorPanel = new javax.swing.JPanel();\n        jScrollPane1 = new javax.swing.JScrollPane();\n        keywordTable = new javax.swing.JTable();\n        addKeywordPanel = new javax.swing.JPanel();\n        addWordButton = new javax.swing.JButton();\n        addWordField = new javax.swing.JTextField();\n        chRegex = new javax.swing.JCheckBox();\n        deleteWordButton = new javax.swing.JButton();\n        ingestMessagesCheckbox = new javax.swing.JCheckBox();\n        keywordsLabel = new javax.swing.JLabel();\n        keywordOptionsLabel = new javax.swing.JLabel();\n        listOptionsLabel = new javax.swing.JLabel();\n        keywordOptionsSeparator = new javax.swing.JSeparator();\n        listOptionsSeparator = new javax.swing.JSeparator();\n        deleteListButton = new javax.swing.JButton();\n        saveListButton = new javax.swing.JButton();\n        exportButton = new javax.swing.JButton();\n\n        cutMenuItem.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.cutMenuItem.text\")); // NOI18N\n        rightClickMenu.add(cutMenuItem);\n\n        copyMenuItem.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.copyMenuItem.text\")); // NOI18N\n        rightClickMenu.add(copyMenuItem);\n\n        pasteMenuItem.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.pasteMenuItem.text\")); // NOI18N\n        rightClickMenu.add(pasteMenuItem);\n\n        selectAllMenuItem.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.selectAllMenuItem.text\")); // NOI18N\n        rightClickMenu.add(selectAllMenuItem);\n\n        jScrollPane1.setPreferredSize(new java.awt.Dimension(340, 300));\n\n        keywordTable.setModel(tableModel);\n        keywordTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);\n        keywordTable.setShowHorizontalLines(false);\n        keywordTable.setShowVerticalLines(false);\n        keywordTable.getTableHeader().setReorderingAllowed(false);\n        jScrollPane1.setViewportView(keywordTable);\n\n        addWordButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/keywordsearch/new16.png\"))); // NOI18N\n        addWordButton.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.addWordButton.text\")); // NOI18N\n        addWordButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                addWordButtonActionPerformed(evt);\n            }\n        });\n\n        addWordField.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.addWordField.text\")); // NOI18N\n        addWordField.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                addWordFieldActionPerformed(evt);\n            }\n        });\n\n        chRegex.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.chRegex.text\")); // NOI18N\n\n        deleteWordButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/keywordsearch/delete16.png\"))); // NOI18N\n        deleteWordButton.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.deleteWordButton.text\")); // NOI18N\n        deleteWordButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                deleteWordButtonActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout addKeywordPanelLayout = new javax.swing.GroupLayout(addKeywordPanel);\n        addKeywordPanel.setLayout(addKeywordPanelLayout);\n        addKeywordPanelLayout.setHorizontalGroup(\n            addKeywordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(addKeywordPanelLayout.createSequentialGroup()\n                .addGroup(addKeywordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addGroup(addKeywordPanelLayout.createSequentialGroup()\n                        .addComponent(addWordField, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(addWordButton))\n                    .addComponent(chRegex, javax.swing.GroupLayout.Alignment.LEADING))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(deleteWordButton)\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n        addKeywordPanelLayout.setVerticalGroup(\n            addKeywordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(addKeywordPanelLayout.createSequentialGroup()\n                .addGap(0, 0, 0)\n                .addGroup(addKeywordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(addWordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(addWordButton)\n                    .addComponent(deleteWordButton))\n                .addGap(6, 6, 6)\n                .addComponent(chRegex)\n                .addContainerGap(43, Short.MAX_VALUE))\n        );\n\n        ingestMessagesCheckbox.setSelected(true);\n        ingestMessagesCheckbox.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.ingestMessagesCheckbox.text\")); // NOI18N\n        ingestMessagesCheckbox.setToolTipText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.ingestMessagesCheckbox.toolTipText\")); // NOI18N\n        ingestMessagesCheckbox.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                ingestMessagesCheckboxActionPerformed(evt);\n            }\n        });\n\n        keywordsLabel.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.keywordsLabel.text\")); // NOI18N\n\n        keywordOptionsLabel.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.keywordOptionsLabel.text\")); // NOI18N\n\n        listOptionsLabel.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.listOptionsLabel.text\")); // NOI18N\n\n        deleteListButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/keywordsearch/delete16.png\"))); // NOI18N\n        deleteListButton.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.deleteListButton.text\")); // NOI18N\n\n        saveListButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/keywordsearch/save16.png\"))); // NOI18N\n        saveListButton.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.saveListButton.text\")); // NOI18N\n\n        exportButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/keywordsearch/export16.png\"))); // NOI18N\n        exportButton.setText(org.openide.util.NbBundle.getMessage(GlobalEditListPanel.class, \"KeywordSearchEditListPanel.exportButton.text\")); // NOI18N\n        exportButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                exportButtonActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout listEditorPanelLayout = new javax.swing.GroupLayout(listEditorPanel);\n        listEditorPanel.setLayout(listEditorPanelLayout);\n        listEditorPanelLayout.setHorizontalGroup(\n            listEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(listEditorPanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(listEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(listEditorPanelLayout.createSequentialGroup()\n                        .addGap(10, 10, 10)\n                        .addComponent(addKeywordPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n                    .addGroup(listEditorPanelLayout.createSequentialGroup()\n                        .addGroup(listEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(listEditorPanelLayout.createSequentialGroup()\n                                .addComponent(listOptionsLabel)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(listOptionsSeparator))\n                            .addGroup(listEditorPanelLayout.createSequentialGroup()\n                                .addComponent(keywordOptionsLabel)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(keywordOptionsSeparator))\n                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                            .addGroup(listEditorPanelLayout.createSequentialGroup()\n                                .addGroup(listEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                    .addComponent(keywordsLabel)\n                                    .addGroup(listEditorPanelLayout.createSequentialGroup()\n                                        .addGap(10, 10, 10)\n                                        .addGroup(listEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                            .addComponent(ingestMessagesCheckbox)\n                                            .addGroup(listEditorPanelLayout.createSequentialGroup()\n                                                .addComponent(exportButton)\n                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                                .addComponent(saveListButton)\n                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                                .addComponent(deleteListButton)))))\n                                .addGap(0, 0, Short.MAX_VALUE)))\n                        .addContainerGap())))\n        );\n        listEditorPanelLayout.setVerticalGroup(\n            listEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listEditorPanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(keywordsLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(10, 10, 10)\n                .addGroup(listEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(listEditorPanelLayout.createSequentialGroup()\n                        .addGroup(listEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                            .addComponent(keywordOptionsSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)\n                            .addComponent(keywordOptionsLabel))\n                        .addGap(7, 7, 7)\n                        .addComponent(addKeywordPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addGap(0, 0, 0)\n                        .addComponent(listOptionsLabel))\n                    .addGroup(listEditorPanelLayout.createSequentialGroup()\n                        .addGap(123, 123, 123)\n                        .addComponent(listOptionsSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(ingestMessagesCheckbox)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(listEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(exportButton)\n                    .addComponent(saveListButton)\n                    .addComponent(deleteListButton))\n                .addContainerGap())\n        );\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(listEditorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addComponent(listEditorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n    }","commit_id":"bed9161e05cb2500d388776ffd81a3472fc5c892","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/** \n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        buttonGroup1 = new javax.swing.ButtonGroup();\n        rawSingle = new javax.swing.JRadioButton();\n        rawSplit = new javax.swing.JRadioButton();\n        imgTypeLabel = new javax.swing.JLabel();\n        encase = new javax.swing.JRadioButton();\n        imgPathLabel = new javax.swing.JLabel();\n        multipleSelectLabel = new javax.swing.JLabel();\n        imgPathTextField = new javax.swing.JTextField();\n        imgPathBrowserButton = new javax.swing.JButton();\n        this.imgPathBrowserButton.setDefaultCapable(true);\n        this.imgPathBrowserButton.requestFocus();\n        imgInfoLabel = new javax.swing.JLabel();\n        jLabel1 = new javax.swing.JLabel();\n        timeZoneComboBox = new javax.swing.JComboBox();\n        timeZoneLabel = new javax.swing.JLabel();\n        jLabel2 = new javax.swing.JLabel();\n        noFatOrphansCheckbox = new javax.swing.JCheckBox();\n        noProcessUnallocSpace = new javax.swing.JCheckBox();\n        optionsLabel1 = new javax.swing.JLabel();\n\n        setMinimumSize(new java.awt.Dimension(559, 328));\n        setPreferredSize(new java.awt.Dimension(588, 308));\n\n        org.openide.awt.Mnemonics.setLocalizedText(rawSingle, org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.rawSingle.text\")); // NOI18N\n        rawSingle.setRequestFocusEnabled(false);\n        rawSingle.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                rawSingleActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(rawSplit, org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.rawSplit.text\")); // NOI18N\n        rawSplit.setRequestFocusEnabled(false);\n        rawSplit.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                rawSplitActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(imgTypeLabel, org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.imgTypeLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(encase, org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.encase.text\")); // NOI18N\n        encase.setRequestFocusEnabled(false);\n        encase.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                encaseActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(imgPathLabel, org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.imgPathLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(multipleSelectLabel, org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.multipleSelectLabel.text\")); // NOI18N\n\n        imgPathTextField.setText(org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.imgPathTextField.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(imgPathBrowserButton, org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.imgPathBrowserButton.text\")); // NOI18N\n        imgPathBrowserButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                imgPathBrowserButtonActionPerformed(evt);\n            }\n        });\n\n        imgInfoLabel.setFont(new java.awt.Font(\"Tahoma\", 1, 14));\n        org.openide.awt.Mnemonics.setLocalizedText(imgInfoLabel, org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.imgInfoLabel.text\")); // NOI18N\n\n        jLabel1.setForeground(new java.awt.Color(255, 0, 51));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.jLabel1.text\")); // NOI18N\n\n        timeZoneComboBox.setMaximumRowCount(30);\n\n        org.openide.awt.Mnemonics.setLocalizedText(timeZoneLabel, org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.timeZoneLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.jLabel2.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(noFatOrphansCheckbox, org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.noFatOrphansCheckbox.text\")); // NOI18N\n        noFatOrphansCheckbox.setToolTipText(org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.noFatOrphansCheckbox.toolTipText\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(noProcessUnallocSpace, org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.noProcessUnallocSpace.text\")); // NOI18N\n        noProcessUnallocSpace.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                noProcessUnallocSpaceActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(optionsLabel1, org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.optionsLabel1.text\")); // NOI18N\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(imgTypeLabel)\n                    .addGroup(layout.createSequentialGroup()\n                        .addGap(10, 10, 10)\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(rawSplit)\n                            .addComponent(rawSingle)\n                            .addComponent(encase)))\n                    .addComponent(multipleSelectLabel)\n                    .addComponent(imgInfoLabel)\n                    .addComponent(jLabel1)\n                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(optionsLabel1)\n                    .addGroup(layout.createSequentialGroup()\n                        .addGap(10, 10, 10)\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(noFatOrphansCheckbox)\n                            .addComponent(noProcessUnallocSpace)))\n                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)\n                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()\n                            .addComponent(timeZoneLabel)\n                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                            .addComponent(timeZoneComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))\n                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()\n                            .addComponent(imgPathLabel)\n                            .addGap(18, 18, 18)\n                            .addComponent(imgPathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)\n                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                            .addComponent(imgPathBrowserButton))))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(imgInfoLabel)\n                .addGap(19, 19, 19)\n                .addComponent(imgTypeLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(rawSingle)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(rawSplit)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(encase)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(imgPathLabel)\n                    .addComponent(imgPathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(imgPathBrowserButton))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(multipleSelectLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(timeZoneLabel)\n                    .addComponent(timeZoneComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                .addComponent(optionsLabel1)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(noProcessUnallocSpace)\n                .addGap(3, 3, 3)\n                .addComponent(noFatOrphansCheckbox)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(jLabel1)\n                .addContainerGap())\n        );\n    }","id":15841,"modified_method":"/** \n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        buttonGroup1 = new javax.swing.ButtonGroup();\n        rawSingle = new javax.swing.JRadioButton();\n        rawSplit = new javax.swing.JRadioButton();\n        imgTypeLabel = new javax.swing.JLabel();\n        encase = new javax.swing.JRadioButton();\n        imgPathLabel = new javax.swing.JLabel();\n        multipleSelectLabel = new javax.swing.JLabel();\n        imgPathTextField = new javax.swing.JTextField();\n        imgPathBrowserButton = new javax.swing.JButton();\n        this.imgPathBrowserButton.setDefaultCapable(true);\n        this.imgPathBrowserButton.requestFocus();\n        imgInfoLabel = new javax.swing.JLabel();\n        jLabel1 = new javax.swing.JLabel();\n        timeZoneComboBox = new javax.swing.JComboBox();\n        timeZoneLabel = new javax.swing.JLabel();\n        jLabel2 = new javax.swing.JLabel();\n        noFatOrphansCheckbox = new javax.swing.JCheckBox();\n        optionsLabel1 = new javax.swing.JLabel();\n\n        setMinimumSize(new java.awt.Dimension(559, 328));\n        setPreferredSize(new java.awt.Dimension(588, 308));\n\n        org.openide.awt.Mnemonics.setLocalizedText(rawSingle, org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.rawSingle.text\")); // NOI18N\n        rawSingle.setRequestFocusEnabled(false);\n        rawSingle.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                rawSingleActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(rawSplit, org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.rawSplit.text\")); // NOI18N\n        rawSplit.setRequestFocusEnabled(false);\n        rawSplit.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                rawSplitActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(imgTypeLabel, org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.imgTypeLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(encase, org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.encase.text\")); // NOI18N\n        encase.setRequestFocusEnabled(false);\n        encase.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                encaseActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(imgPathLabel, org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.imgPathLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(multipleSelectLabel, org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.multipleSelectLabel.text\")); // NOI18N\n\n        imgPathTextField.setText(org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.imgPathTextField.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(imgPathBrowserButton, org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.imgPathBrowserButton.text\")); // NOI18N\n        imgPathBrowserButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                imgPathBrowserButtonActionPerformed(evt);\n            }\n        });\n\n        imgInfoLabel.setFont(new java.awt.Font(\"Tahoma\", 1, 14));\n        org.openide.awt.Mnemonics.setLocalizedText(imgInfoLabel, org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.imgInfoLabel.text\")); // NOI18N\n\n        jLabel1.setForeground(new java.awt.Color(255, 0, 51));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.jLabel1.text\")); // NOI18N\n\n        timeZoneComboBox.setMaximumRowCount(30);\n\n        org.openide.awt.Mnemonics.setLocalizedText(timeZoneLabel, org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.timeZoneLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.jLabel2.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(noFatOrphansCheckbox, org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.noFatOrphansCheckbox.text\")); // NOI18N\n        noFatOrphansCheckbox.setToolTipText(org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.noFatOrphansCheckbox.toolTipText\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(optionsLabel1, org.openide.util.NbBundle.getMessage(AddImageVisualPanel1.class, \"AddImageVisualPanel1.optionsLabel1.text\")); // NOI18N\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(imgTypeLabel)\n                    .addGroup(layout.createSequentialGroup()\n                        .addGap(10, 10, 10)\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(rawSplit)\n                            .addComponent(rawSingle)\n                            .addComponent(encase)))\n                    .addComponent(multipleSelectLabel)\n                    .addComponent(imgInfoLabel)\n                    .addComponent(jLabel1)\n                    .addGroup(layout.createSequentialGroup()\n                        .addGap(10, 10, 10)\n                        .addComponent(noFatOrphansCheckbox))\n                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)\n                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()\n                            .addComponent(timeZoneLabel)\n                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                            .addComponent(timeZoneComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))\n                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()\n                            .addComponent(imgPathLabel)\n                            .addGap(18, 18, 18)\n                            .addComponent(imgPathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)\n                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                            .addComponent(imgPathBrowserButton)))\n                    .addComponent(optionsLabel1)\n                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addContainerGap(39, Short.MAX_VALUE))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(imgInfoLabel)\n                .addGap(19, 19, 19)\n                .addComponent(imgTypeLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(rawSingle)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(rawSplit)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(encase)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(imgPathLabel)\n                    .addComponent(imgPathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(imgPathBrowserButton))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(multipleSelectLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(timeZoneLabel)\n                    .addComponent(timeZoneComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)\n                .addComponent(optionsLabel1)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(noFatOrphansCheckbox)\n                .addGap(13, 13, 13)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addComponent(jLabel1)\n                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addContainerGap())\n        );\n    }","commit_id":"6c9b212fcc17cf8661af580f410e86dd53d9530e","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Provides the wizard panel with the opportunity to update the settings\n     * with its current customized state. Rather than updating its settings\n     * with every change in the GUI, it should collect them, and then only save\n     * them when requested to by this method. This method can be called multiple\n     * times on one instance of WizardDescriptor.Panel.\n     *\n     * @param settings  the setting to be stored to\n     */\n    @Override\n    public void storeSettings(WizardDescriptor settings) {\n        settings.putProperty(AddImageAction.IMGPATHS_PROP, getComponent().getImagePaths());\n        settings.putProperty(AddImageAction.TIMEZONE_PROP, getComponent().getSelectedTimezone()); // store the timezone\n        settings.putProperty(AddImageAction.NOFATORPHANS_PROP, Boolean.valueOf(getComponent().getNoFatOrphans())); \n        settings.putProperty(AddImageAction.NOUNALLOC_PROP, Boolean.valueOf(getComponent().getNoUnallocSpaceProcess())); \n        //settings.putProperty(AddImageAction.LOOKUPFILES_PROP, getComponent().getLookupFilesCheckboxChecked());\n        //settings.putProperty(AddImageAction.SOLR_PROP, getComponent().getIndexImageCheckboxChecked());\n        \n        // Store the path to the first image selected into the properties file\n        if(getComponent().getImagePaths().length > 0){\n            String firstImage = getComponent().getImagePaths()[0];\n            String firstImagePath = firstImage.substring(0, firstImage.lastIndexOf(File.separator)+1);\n            AutopsyPropFile.getInstance().setProperty(PROP_LASTIMAGE, firstImagePath);\n        }\n    }","id":15842,"modified_method":"/**\n     * Provides the wizard panel with the opportunity to update the settings\n     * with its current customized state. Rather than updating its settings\n     * with every change in the GUI, it should collect them, and then only save\n     * them when requested to by this method. This method can be called multiple\n     * times on one instance of WizardDescriptor.Panel.\n     *\n     * @param settings  the setting to be stored to\n     */\n    @Override\n    public void storeSettings(WizardDescriptor settings) {\n        settings.putProperty(AddImageAction.IMGPATHS_PROP, getComponent().getImagePaths());\n        settings.putProperty(AddImageAction.TIMEZONE_PROP, getComponent().getSelectedTimezone()); // store the timezone\n        settings.putProperty(AddImageAction.NOFATORPHANS_PROP, Boolean.valueOf(getComponent().getNoFatOrphans())); \n        //settings.putProperty(AddImageAction.LOOKUPFILES_PROP, getComponent().getLookupFilesCheckboxChecked());\n        //settings.putProperty(AddImageAction.SOLR_PROP, getComponent().getIndexImageCheckboxChecked());\n        \n        // Store the path to the first image selected into the properties file\n        if(getComponent().getImagePaths().length > 0){\n            String firstImage = getComponent().getImagePaths()[0];\n            String firstImagePath = firstImage.substring(0, firstImage.lastIndexOf(File.separator)+1);\n            AutopsyPropFile.getInstance().setProperty(PROP_LASTIMAGE, firstImagePath);\n        }\n    }","commit_id":"6c9b212fcc17cf8661af580f410e86dd53d9530e","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n         * Starts the addImage process, but does not commit the results. \n         * \n         * @return\n         * @throws Exception \n         */\n        @Override\n        protected Integer doInBackground() {\n            this.setProgress(0);\n            \n\n            // Add a cleanup task to interupt the backgroud process if the\n            // wizard exits while the background process is running.\n            AddImageAction.CleanupTask cancelledWhileRunning = action.new CleanupTask() {\n\n                @Override\n                void cleanup() throws Exception {\n                    logger.log(Level.INFO, \"Add image process interrupted.\");\n                    addImageTask.interrupt(); //it might take time to truly interrupt\n                }\n            };\n\n\n            try {\n                //lock DB for writes in EWT thread\n                //wait until lock acquired in EWT\n                EventQueue.invokeAndWait(new Runnable() {\n\n                    @Override\n                    public void run() {\n                        SleuthkitCase.dbWriteLock();\n                    }\n                });\n            } catch (InterruptedException ex) {\n                logger.log(Level.WARNING, \"Errors occurred while running add image, could not acquire lock. \", ex);\n                return 0;\n\n            } catch (InvocationTargetException ex) {\n                logger.log(Level.WARNING, \"Errors occurred while running add image, could not acquire lock. \", ex);\n                return 0;\n            }\n\n\n            process = currentCase.makeAddImageProcess(timeZone, !noUnallocSpace, noFatOrphans);\n            cancelledWhileRunning.enable();\n            try {\n                process.run(imgPaths);\n            } catch (TskCoreException ex) {\n                logger.log(Level.WARNING, \"Errors occurred while running add image. \", ex);\n                //critical core/system error and process needs to be interrupted\n                hasCritError = true;\n                errorString = ex.getMessage();\n            } catch (TskDataException ex) {\n                logger.log(Level.WARNING, \"Errors occurred while running add image. \", ex);\n                errorString = ex.getMessage();\n            } finally {\n                // process is over, doesn't need to be dealt with if cancel happens\n                cancelledWhileRunning.disable();\n            }\n            this.setProgress(100);\n            return 0;\n        }","id":15843,"modified_method":"/**\n         * Starts the addImage process, but does not commit the results. \n         * \n         * @return\n         * @throws Exception \n         */\n        @Override\n        protected Integer doInBackground() {\n            this.setProgress(0);\n            \n\n            // Add a cleanup task to interupt the backgroud process if the\n            // wizard exits while the background process is running.\n            AddImageAction.CleanupTask cancelledWhileRunning = action.new CleanupTask() {\n\n                @Override\n                void cleanup() throws Exception {\n                    logger.log(Level.INFO, \"Add image process interrupted.\");\n                    addImageTask.interrupt(); //it might take time to truly interrupt\n                }\n            };\n\n\n            try {\n                //lock DB for writes in EWT thread\n                //wait until lock acquired in EWT\n                EventQueue.invokeAndWait(new Runnable() {\n\n                    @Override\n                    public void run() {\n                        SleuthkitCase.dbWriteLock();\n                    }\n                });\n            } catch (InterruptedException ex) {\n                logger.log(Level.WARNING, \"Errors occurred while running add image, could not acquire lock. \", ex);\n                return 0;\n\n            } catch (InvocationTargetException ex) {\n                logger.log(Level.WARNING, \"Errors occurred while running add image, could not acquire lock. \", ex);\n                return 0;\n            }\n\n\n            process = currentCase.makeAddImageProcess(timeZone, true, noFatOrphans);\n            cancelledWhileRunning.enable();\n            try {\n                process.run(imgPaths);\n            } catch (TskCoreException ex) {\n                logger.log(Level.WARNING, \"Errors occurred while running add image. \", ex);\n                //critical core/system error and process needs to be interrupted\n                hasCritError = true;\n                errorString = ex.getMessage();\n            } catch (TskDataException ex) {\n                logger.log(Level.WARNING, \"Errors occurred while running add image. \", ex);\n                errorString = ex.getMessage();\n            } finally {\n                // process is over, doesn't need to be dealt with if cancel happens\n                cancelledWhileRunning.disable();\n            }\n            this.setProgress(100);\n            return 0;\n        }","commit_id":"6c9b212fcc17cf8661af580f410e86dd53d9530e","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Load the image locations from the WizardDescriptor settings object, and\n     * the\n     *\n     * @param settings  the setting to be read from\n     */\n    @Override\n    public void readSettings(WizardDescriptor settings) {\n        cleanupImage = null;\n        imgAdded = false;\n        imgPaths = (String[]) settings.getProperty(AddImageAction.IMGPATHS_PROP);\n        timeZone = settings.getProperty(AddImageAction.TIMEZONE_PROP).toString();\n        noFatOrphans = ((Boolean) settings.getProperty(AddImageAction.NOFATORPHANS_PROP)).booleanValue();\n        noUnallocSpace = ((Boolean) settings.getProperty(AddImageAction.NOUNALLOC_PROP)).booleanValue();\n\n        component.changeProgressBarTextAndColor(\"\", 0, Color.black);\n\n        startAddImage();\n    }","id":15844,"modified_method":"/**\n     * Load the image locations from the WizardDescriptor settings object, and\n     * the\n     *\n     * @param settings  the setting to be read from\n     */\n    @Override\n    public void readSettings(WizardDescriptor settings) {\n        cleanupImage = null;\n        imgAdded = false;\n        imgPaths = (String[]) settings.getProperty(AddImageAction.IMGPATHS_PROP);\n        timeZone = settings.getProperty(AddImageAction.TIMEZONE_PROP).toString();\n        noFatOrphans = ((Boolean) settings.getProperty(AddImageAction.NOFATORPHANS_PROP)).booleanValue();\n\n        component.changeProgressBarTextAndColor(\"\", 0, Color.black);\n\n        startAddImage();\n    }","commit_id":"6c9b212fcc17cf8661af580f410e86dd53d9530e","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        reportScrollPane = new javax.swing.JScrollPane();\n        reportSummaryPanel = new javax.swing.JPanel();\n        closeButton = new javax.swing.JButton();\n        exportButton = new javax.swing.JButton();\n        statusLabel = new javax.swing.JLabel();\n        LABEL_LOC = new javax.swing.JLabel();\n        ButtonOpenFolder = new javax.swing.JButton();\n\n        reportScrollPane.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(ReportPanel.class, \"ReportPanel.reportScrollPane.border.title\"))); // NOI18N\n\n        javax.swing.GroupLayout reportSummaryPanelLayout = new javax.swing.GroupLayout(reportSummaryPanel);\n        reportSummaryPanel.setLayout(reportSummaryPanelLayout);\n        reportSummaryPanelLayout.setHorizontalGroup(\n            reportSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGap(0, 675, Short.MAX_VALUE)\n        );\n        reportSummaryPanelLayout.setVerticalGroup(\n            reportSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGap(0, 214, Short.MAX_VALUE)\n        );\n\n        reportScrollPane.setViewportView(reportSummaryPanel);\n\n        org.openide.awt.Mnemonics.setLocalizedText(closeButton, org.openide.util.NbBundle.getMessage(ReportPanel.class, \"ReportPanel.closeButton.text_1\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(exportButton, org.openide.util.NbBundle.getMessage(ReportPanel.class, \"ReportPanel.exportButton.text\")); // NOI18N\n        exportButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                exportButtonActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(statusLabel, org.openide.util.NbBundle.getMessage(ReportPanel.class, \"ReportPanel.statusLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(LABEL_LOC, org.openide.util.NbBundle.getMessage(ReportPanel.class, \"ReportPanel.LABEL_LOC.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(ButtonOpenFolder, org.openide.util.NbBundle.getMessage(ReportPanel.class, \"ReportPanel.ButtonOpenFolder.text_1\")); // NOI18N\n        ButtonOpenFolder.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                ButtonOpenFolderActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(reportScrollPane)\n                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                        .addComponent(LABEL_LOC)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                        .addComponent(exportButton)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(ButtonOpenFolder)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(closeButton))\n                    .addComponent(statusLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n                .addContainerGap())\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(reportScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)\n                .addGap(18, 18, 18)\n                .addComponent(statusLabel)\n                .addGap(11, 11, 11)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(LABEL_LOC)\n                    .addComponent(closeButton)\n                    .addComponent(exportButton)\n                    .addComponent(ButtonOpenFolder))\n                .addGap(8, 8, 8))\n        );\n    }","id":15845,"modified_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        reportScrollPane = new javax.swing.JScrollPane();\n        reportSummaryPanel = new javax.swing.JPanel();\n        closeButton = new javax.swing.JButton();\n        exportButton = new javax.swing.JButton();\n        statusLabel = new javax.swing.JLabel();\n        LABEL_LOC = new javax.swing.JLabel();\n        ButtonOpenFolder = new javax.swing.JButton();\n\n        reportScrollPane.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(ReportPanel.class, \"ReportPanel.reportScrollPane.border.title\"))); // NOI18N\n\n        javax.swing.GroupLayout reportSummaryPanelLayout = new javax.swing.GroupLayout(reportSummaryPanel);\n        reportSummaryPanel.setLayout(reportSummaryPanelLayout);\n        reportSummaryPanelLayout.setHorizontalGroup(\n            reportSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGap(0, 675, Short.MAX_VALUE)\n        );\n        reportSummaryPanelLayout.setVerticalGroup(\n            reportSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGap(0, 214, Short.MAX_VALUE)\n        );\n\n        reportScrollPane.setViewportView(reportSummaryPanel);\n\n        org.openide.awt.Mnemonics.setLocalizedText(closeButton, org.openide.util.NbBundle.getMessage(ReportPanel.class, \"ReportPanel.closeButton.text_1\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(exportButton, org.openide.util.NbBundle.getMessage(ReportPanel.class, \"ReportPanel.exportButton.text\")); // NOI18N\n        exportButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                exportButtonActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(statusLabel, org.openide.util.NbBundle.getMessage(ReportPanel.class, \"ReportPanel.statusLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(LABEL_LOC, org.openide.util.NbBundle.getMessage(ReportPanel.class, \"ReportPanel.LABEL_LOC.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(ButtonOpenFolder, org.openide.util.NbBundle.getMessage(ReportPanel.class, \"ReportPanel.ButtonOpenFolder.text_1\")); // NOI18N\n        ButtonOpenFolder.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                ButtonOpenFolderActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(reportScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)\n                    .addComponent(statusLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(LABEL_LOC)\n                        .addGap(0, 0, Short.MAX_VALUE))\n                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                        .addGap(0, 0, Short.MAX_VALUE)\n                        .addComponent(exportButton)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(ButtonOpenFolder)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(closeButton)))\n                .addContainerGap())\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(reportScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(18, 18, 18)\n                .addComponent(statusLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(LABEL_LOC)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(closeButton)\n                    .addComponent(exportButton)\n                    .addComponent(ButtonOpenFolder))\n                .addGap(8, 8, 8))\n        );\n    }","commit_id":"3762621e688c2b99bd01b34e0b50f868992fabcd","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Write DOAP vendor.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#vendor\">http://usefulinc.com/ns/doap#vendor<\/a>\n     * @since 1.1\n     */\n    private void writeVendor( XMLWriter writer, MavenProject project )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getVendor() ) || project.getOrganization() == null )\n        {\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Vendor.\", 2 );\n        if ( StringUtils.isNotEmpty( doapOptions.getPlatform() ) )\n        {\n            DoapUtil.writeRdfResourceElement( writer, \"vendor\", doapOptions.getPlatform() );\n        }\n        else if ( StringUtils.isNotEmpty( project.getOrganization().getName() ) )\n        {\n            DoapUtil.writeRdfResourceElement( writer, \"vendor\", project.getOrganization().getName() );\n        }\n    }","id":15846,"modified_method":"/**\n     * Write DOAP vendor.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#vendor\">http://usefulinc.com/ns/doap#vendor<\/a>\n     * @since 1.1\n     */\n    private void writeVendor( XMLWriter writer, MavenProject project )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getVendor() ) || project.getOrganization() == null\n            || StringUtils.isEmpty( project.getOrganization().getName() ) )\n        {\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Vendor.\", 2 );\n        if ( StringUtils.isNotEmpty( doapOptions.getVendor() ) )\n        {\n            DoapUtil.writeRdfResourceElement( writer, \"vendor\", doapOptions.getVendor().trim() );\n        }\n        else if ( project.getOrganization() != null && StringUtils.isNotEmpty( project.getOrganization().getName() ) )\n        {\n            DoapUtil.writeRdfResourceElement( writer, \"vendor\", project.getOrganization().getName().trim() );\n        }\n    }","commit_id":"2e44f1d600190c6b2653197444c7c4e922c7897e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write all DOAP repositories.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#Repository\">http://usefulinc.com/ns/doap#Repository<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#CVSRepository\">http://usefulinc.com/ns/doap#CVSRepository<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#SVNRepository\">http://usefulinc.com/ns/doap#SVNRepository<\/a>\n     */\n    private void writeSourceRepositories( XMLWriter writer, MavenProject project )\n    {\n        Scm scm = project.getScm();\n        if ( scm == null )\n        {\n            return;\n        }\n\n        String anonymousConnection = scm.getConnection();\n        if ( StringUtils.isNotEmpty( anonymousConnection ) )\n        {\n            XmlWriterUtil.writeLineBreak( writer );\n            XmlWriterUtil.writeCommentText( writer, \"Anonymous Source Repository\", 2 );\n            writeSourceRepository( writer, project, anonymousConnection );\n        }\n\n        String developerConnection = scm.getDeveloperConnection();\n        if ( StringUtils.isNotEmpty( developerConnection ) )\n        {\n            XmlWriterUtil.writeLineBreak( writer );\n            XmlWriterUtil.writeCommentText( writer, \"Developer Source Repository\", 2 );\n            writeSourceRepository( writer, project, developerConnection );\n        }\n    }","id":15847,"modified_method":"/**\n     * Write all DOAP repositories.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#Repository\">http://usefulinc.com/ns/doap#Repository<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#CVSRepository\">http://usefulinc.com/ns/doap#CVSRepository<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#SVNRepository\">http://usefulinc.com/ns/doap#SVNRepository<\/a>\n     */\n    private void writeSourceRepositories( XMLWriter writer, MavenProject project )\n    {\n        Scm scm = project.getScm();\n        if ( scm == null )\n        {\n            addPomMessage( \"scm\" );\n            return;\n        }\n\n        String anonymousConnection = scm.getConnection();\n        if ( StringUtils.isNotEmpty( anonymousConnection ) )\n        {\n            XmlWriterUtil.writeLineBreak( writer );\n            XmlWriterUtil.writeCommentText( writer, \"Anonymous Source Repository\", 2 );\n            writeSourceRepository( writer, project, anonymousConnection );\n        }\n\n        String developerConnection = scm.getDeveloperConnection();\n        if ( StringUtils.isNotEmpty( developerConnection ) )\n        {\n            XmlWriterUtil.writeLineBreak( writer );\n            XmlWriterUtil.writeCommentText( writer, \"Developer Source Repository\", 2 );\n            writeSourceRepository( writer, project, developerConnection );\n        }\n    }","commit_id":"2e44f1d600190c6b2653197444c7c4e922c7897e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write the ASF implements.\n     *\n     * @param writer not null\n     * @see <a href=\"http://svn.apache.org/repos/asf/infrastructure/site-tools/trunk/projects/asfext\">\n     *      http://svn.apache.org/repos/asf/infrastructure/site-tools/trunk/projects/asfext<\/a>\n     * @see <a href=\"http://projects.apache.org/docs/standards.html\">http://projects.apache.org/docs/standards.html<\/a>\n     */\n    private void writeASFImplements( XMLWriter writer )\n    {\n        if ( asfExtOptions.getStandards() == null || asfExtOptions.getStandards().isEmpty() )\n        {\n            return;\n        }\n\n        for ( Standard standard : asfExtOptions.getStandards() )\n        {\n            writer.startElement( \"asfext:implements\" );\n            writer.startElement( \"asfext:Standard\" );\n\n            if ( StringUtils.isEmpty( standard.getTitle() ) )\n            {\n                getLog().warn( \"No title specified! According http://projects.apache.org/docs/standards.html, \"\n                                   + \"asfext:title is required\" );\n            }\n            else\n            {\n                writer.startElement( \"asfext:title\" );\n                writer.writeText( standard.getTitle() );\n                writer.endElement(); // asfext:title\n            }\n\n            if ( StringUtils.isEmpty( standard.getBody() ) )\n            {\n                getLog().warn( \"No body specified! According http://projects.apache.org/docs/standards.html, \"\n                                   + \"asfext:body is required\" );\n            }\n            else\n            {\n                writer.startElement( \"asfext:body\" );\n                writer.writeText( standard.getBody() );\n                writer.endElement(); // asfext:body\n            }\n\n            if ( StringUtils.isEmpty( standard.getId() ) )\n            {\n                getLog().warn( \"No id specified! According http://projects.apache.org/docs/standards.html, \"\n                                   + \"asfext:id is required\" );\n            }\n            else\n            {\n                writer.startElement( \"asfext:id\" );\n                writer.writeText( standard.getId() );\n                writer.endElement(); // asfext:id\n            }\n\n            if ( StringUtils.isNotEmpty( standard.getUrl() ) )\n            {\n                writer.startElement( \"asfext:url\" );\n                writer.writeText( standard.getUrl() );\n                writer.endElement(); // asfext:url\n            }\n\n            writer.endElement(); // asfext:Standard\n            writer.endElement(); // asfext:implements\n        }\n    }","id":15848,"modified_method":"/**\n     * Write the ASF implements.\n     *\n     * @param writer not null\n     * @see <a href=\"http://svn.apache.org/repos/asf/infrastructure/site-tools/trunk/projects/asfext\">\n     *      http://svn.apache.org/repos/asf/infrastructure/site-tools/trunk/projects/asfext<\/a>\n     * @see <a href=\"http://projects.apache.org/docs/standards.html\">http://projects.apache.org/docs/standards.html<\/a>\n     */\n    private void writeASFImplements( XMLWriter writer )\n    {\n        if ( asfExtOptions.getStandards() == null || asfExtOptions.getStandards().isEmpty() )\n        {\n            return;\n        }\n\n        for ( Standard standard : asfExtOptions.getStandards() )\n        {\n            writer.startElement( \"asfext:implements\" );\n            writer.startElement( \"asfext:Standard\" );\n\n            if ( StringUtils.isEmpty( standard.getTitle() ) )\n            {\n                errorMessages.add( \"A <asfExtOptions><standards><title/><\/standards><\/asfExtOptions> parameter is required by ASF.\" );\n            }\n            else\n            {\n                writer.startElement( \"asfext:title\" );\n                writer.writeText( standard.getTitle() );\n                writer.endElement(); // asfext:title\n            }\n\n            if ( StringUtils.isEmpty( standard.getBody() ) )\n            {\n                errorMessages.add( \"A <asfExtOptions><standards><body/><\/standards><\/asfExtOptions> parameter is required by ASF.\" );\n            }\n            else\n            {\n                writer.startElement( \"asfext:body\" );\n                writer.writeText( standard.getBody() );\n                writer.endElement(); // asfext:body\n            }\n\n            if ( StringUtils.isEmpty( standard.getId() ) )\n            {\n                errorMessages.add( \"A <asfExtOptions><standards><id/><\/standards><\/asfExtOptions> parameter is required by ASF.\" );\n            }\n            else\n            {\n                writer.startElement( \"asfext:id\" );\n                writer.writeText( standard.getId() );\n                writer.endElement(); // asfext:id\n            }\n\n            if ( StringUtils.isNotEmpty( standard.getUrl() ) )\n            {\n                try\n                {\n                    new URL( standard.getUrl() );\n\n                    writer.startElement( \"asfext:url\" );\n                    writer.writeText( standard.getUrl() );\n                    writer.endElement(); // asfext:url\n                }\n                catch ( MalformedURLException e )\n                {\n                    errorMessages.add( \"The <asfExtOptions><standards><url>\" + standard.getUrl()\n                        + \"<url><\/standards><\/asfExtOptions> parameter is not a valid URL.\" );\n                }\n            }\n\n            writer.endElement(); // asfext:Standard\n            writer.endElement(); // asfext:implements\n        }\n    }","commit_id":"2e44f1d600190c6b2653197444c7c4e922c7897e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP wiki.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#wiki\">http://usefulinc.com/ns/doap#wiki<\/a>\n     */\n    private void writeWiki( XMLWriter writer, MavenProject project )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getWiki() ) )\n        {\n            return;\n        }\n\n        try\n        {\n            new URL( doapOptions.getWiki() );\n\n        }\n        catch ( MalformedURLException e )\n        {\n            getLog().error( \"The <doapOptions><wiki/><\/doapOptions> parameter \" + doapOptions.getWiki()\n                                + \" is not a valid URL. Ignored <wiki/> tag.\" );\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"URL of Wiki for collaborative discussion of project.\", 2 );\n        DoapUtil.writeRdfResourceElement( writer, \"wiki\", doapOptions.getWiki() );\n    }","id":15849,"modified_method":"/**\n     * Write DOAP wiki.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#wiki\">http://usefulinc.com/ns/doap#wiki<\/a>\n     */\n    private void writeWiki( XMLWriter writer, MavenProject project )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getWiki() ) )\n        {\n            return;\n        }\n\n        String wiki = doapOptions.getWiki().trim();\n        try\n        {\n            new URL( wiki );\n\n        }\n        catch ( MalformedURLException e )\n        {\n            errorMessages.add( \"The <doapOptions><wiki>\" + wiki + \"<\/wiki><\/doapOptions> parameter is not a valid URL.\" );\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"URL of Wiki for collaborative discussion of project.\", 2 );\n        DoapUtil.writeRdfResourceElement( writer, \"wiki\", wiki );\n    }","commit_id":"2e44f1d600190c6b2653197444c7c4e922c7897e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/** {@inheritDoc} */\n    public void execute()\n        throws MojoExecutionException\n    {\n        // single artifact\n        if ( artifact != null )\n        {\n            MavenProject givenProject = getMavenProject( artifact );\n            if ( givenProject != null )\n            {\n                File outFile = new File( outputDirectory, artifact.getDoapFileName() );\n                writeDoapFile( givenProject, outFile );\n                return;\n            }\n        }\n\n        // current project\n        File outFile = new File( doapFile );\n        if ( !doapFile.contains( File.separator ) )\n        {\n            outFile = new File( outputDirectory, doapFile );\n        }\n        writeDoapFile( project, outFile );\n    }","id":15850,"modified_method":"/** {@inheritDoc} */\n    public void execute()\n        throws MojoExecutionException\n    {\n        if ( skip )\n        {\n            getLog().info( \"Skipping DOAP generation\" );\n            return;\n        }\n\n        // single artifact\n        if ( artifact != null )\n        {\n            MavenProject givenProject = getMavenProject( artifact );\n            if ( givenProject != null )\n            {\n                File outFile = new File( outputDirectory, artifact.getDoapFileName() );\n                writeDoapFile( givenProject, outFile );\n                return;\n            }\n        }\n\n        // current project\n        File outFile = new File( doapFile );\n        if ( !doapFile.contains( File.separator ) )\n        {\n            outFile = new File( outputDirectory, doapFile );\n        }\n        writeDoapFile( project, outFile );\n    }","commit_id":"2e44f1d600190c6b2653197444c7c4e922c7897e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * @param artifact not null\n     * @return the maven project for the given doap artifact\n     * @since 1.1\n     */\n    private MavenProject getMavenProject( DoapArtifact artifact )\n    {\n        if ( artifact == null )\n        {\n            return null;\n        }\n\n        if ( StringUtils.isEmpty( artifact.getGroupId() ) || StringUtils.isEmpty( artifact.getArtifactId() )\n            || StringUtils.isEmpty( artifact.getVersion() ) )\n        {\n            getLog().warn( \"Missing groupId or artifactId or version in <artifact/> parameter, ignored it\" );\n            return null;\n        }\n\n        getLog().info( \"Using artifact \" + artifact.getGroupId() + \":\" + artifact.getArtifactId() + \":\"\n                           + artifact.getVersion() );\n\n        try\n        {\n            Artifact art =\n                factory.createProjectArtifact( artifact.getGroupId(), artifact.getArtifactId(), artifact.getVersion(),\n                                               Artifact.SCOPE_COMPILE );\n\n            if ( art.getFile() == null )\n            {\n                MavenProject proj = mavenProjectBuilder.buildFromRepository( art, remoteRepositories, localRepository );\n                art = proj.getArtifact();\n\n                resolver.resolve( art, remoteRepositories, localRepository );\n\n                return proj;\n            }\n        }\n        catch ( ArtifactResolutionException e )\n        {\n            getLog().error( \"ArtifactResolutionException: \" + e.getMessage() );\n            getLog().warn( \"Ignored <artifact/> parameter.\" );\n        }\n        catch ( ArtifactNotFoundException e )\n        {\n            getLog().error( \"ArtifactNotFoundException: \" + e.getMessage() );\n            getLog().warn( \"Ignored <artifact/> parameter.\" );\n        }\n        catch ( ProjectBuildingException e )\n        {\n            getLog().error( \"ProjectBuildingException: \" + e.getMessage() );\n            getLog().warn( \"Ignored <artifact/> parameter.\" );\n        }\n\n        return null;\n    }","id":15851,"modified_method":"/**\n     * @param artifact not null\n     * @return the maven project for the given doap artifact\n     * @since 1.1\n     */\n    private MavenProject getMavenProject( DoapArtifact artifact )\n    {\n        if ( artifact == null )\n        {\n            return null;\n        }\n\n        if ( StringUtils.isEmpty( artifact.getGroupId() ) || StringUtils.isEmpty( artifact.getArtifactId() )\n            || StringUtils.isEmpty( artifact.getVersion() ) )\n        {\n            getLog().warn( \"Missing groupId or artifactId or version in <artifact/> parameter, ignored it.\" );\n            return null;\n        }\n\n        getLog().info( \"Using artifact \" + artifact.getGroupId() + \":\" + artifact.getArtifactId() + \":\"\n                           + artifact.getVersion() );\n\n        try\n        {\n            Artifact art =\n                factory.createProjectArtifact( artifact.getGroupId(), artifact.getArtifactId(), artifact.getVersion(),\n                                               Artifact.SCOPE_COMPILE );\n\n            if ( art.getFile() == null )\n            {\n                MavenProject proj = mavenProjectBuilder.buildFromRepository( art, remoteRepositories, localRepository );\n                art = proj.getArtifact();\n\n                resolver.resolve( art, remoteRepositories, localRepository );\n\n                return proj;\n            }\n        }\n        catch ( ArtifactResolutionException e )\n        {\n            getLog().error( \"ArtifactResolutionException: \" + e.getMessage() + \"\\nIgnored <artifact/> parameter.\" );\n        }\n        catch ( ArtifactNotFoundException e )\n        {\n            getLog().error( \"ArtifactNotFoundException: \" + e.getMessage() + \"\\nIgnored <artifact/> parameter.\" );\n        }\n        catch ( ProjectBuildingException e )\n        {\n            getLog().error( \"ProjectBuildingException: \" + e.getMessage() + \"\\nIgnored <artifact/> parameter.\" );\n        }\n\n        return null;\n    }","commit_id":"2e44f1d600190c6b2653197444c7c4e922c7897e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP bug-database.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#bug-database\">http://usefulinc.com/ns/doap#bug-database<\/a>\n     */\n    private void writeBugDatabase( XMLWriter writer, MavenProject project )\n    {\n        if ( project.getIssueManagement() == null || StringUtils.isEmpty( project.getIssueManagement().getUrl() ) )\n        {\n            return;\n        }\n\n        try\n        {\n            new URL( project.getIssueManagement().getUrl() );\n\n        }\n        catch ( MalformedURLException e )\n        {\n            getLog().error( \"The project issueManagement url \" + project.getIssueManagement().getUrl()\n                                + \" is not a valid URL. Ignored <bug-database/> tag.\" );\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Bug database.\", 2 );\n        DoapUtil.writeRdfResourceElement( writer, \"bug-database\", project.getIssueManagement().getUrl() );\n    }","id":15852,"modified_method":"/**\n     * Write DOAP bug-database.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#bug-database\">http://usefulinc.com/ns/doap#bug-database<\/a>\n     */\n    private void writeBugDatabase( XMLWriter writer, MavenProject project )\n    {\n        if ( project.getIssueManagement() == null || StringUtils.isEmpty( project.getIssueManagement().getUrl() ) )\n        {\n            addPomMessage( \"issueManagement\" );\n            return;\n        }\n\n        String issueManagementUrl = project.getIssueManagement().getUrl().trim();\n        try\n        {\n            new URL( issueManagementUrl );\n        }\n        catch ( MalformedURLException e )\n        {\n            errorMessages.add( \"The POM issueManagement url \" + issueManagementUrl + \" is not a valid URL.\" );\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Bug database.\", 2 );\n        DoapUtil.writeRdfResourceElement( writer, \"bug-database\", issueManagementUrl );\n    }","commit_id":"2e44f1d600190c6b2653197444c7c4e922c7897e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP category.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#category\">http://usefulinc.com/ns/doap#category<\/a>\n     */\n    private void writeCategory( XMLWriter writer, MavenProject project )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getCategory() ) && StringUtils.isEmpty( category ) )\n        {\n            return;\n        }\n\n        // TODO: how to lookup category, map it, or just declare it.\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"A category of project.\", 2 );\n\n        if ( StringUtils.isNotEmpty( category ) ) // backward compatible\n        {\n            if ( asfExtOptions.isIncluded() && !ASFExtOptions.isCategorySupportedByASF( category ) )\n            {\n                getLog().warn( \"The given category '\" + category + \"' is not supported by ASF. \"\n                                   + \"Refer you to http://projects.apache.org/categories.html\" );\n            }\n\n            if ( asfExtOptions.isIncluded() )\n            {\n                DoapUtil.writeRdfResourceElement( writer, \"category\", \"http://projects.apache.org/category/\" + category );\n            }\n            else\n            {\n                DoapUtil.writeRdfResourceElement( writer, \"category\", category );\n            }\n        }\n\n        if ( StringUtils.isNotEmpty( doapOptions.getCategory() ) )\n        {\n            String[] categories = StringUtils.split( doapOptions.getCategory(), \",\" );\n            for ( String category : categories )\n            {\n                if ( asfExtOptions.isIncluded() && !ASFExtOptions.isCategorySupportedByASF( category ) )\n                {\n                    getLog().warn( \"The given category '\" + category + \"' is not supported by ASF. \"\n                                       + \"Refer you to http://projects.apache.org/categories.html\" );\n                }\n\n                if ( asfExtOptions.isIncluded() )\n                {\n                    DoapUtil.writeRdfResourceElement( writer, \"category\", \"http://projects.apache.org/category/\"\n                        + category.trim() );\n                }\n                else\n                {\n                    DoapUtil.writeRdfResourceElement( writer, \"category\", category.trim() );\n                }\n            }\n        }\n    }","id":15853,"modified_method":"/**\n     * Write DOAP category.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#category\">http://usefulinc.com/ns/doap#category<\/a>\n     */\n    private void writeCategory( XMLWriter writer, MavenProject project )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getCategory() ) && StringUtils.isEmpty( category ) )\n        {\n            addDoapMessage( \"category\" );\n            return;\n        }\n\n        // TODO: how to lookup category, map it, or just declare it.\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"A category of project.\", 2 );\n\n        if ( StringUtils.isNotEmpty( category ) ) // backward compatible\n        {\n            getLog().warn( \"The <category/> parameter is deprecated, please use <doapOptions><category/><\/doapOptions> parameter instead of.\" );\n            category = category.trim();\n\n            if ( asfExtOptions.isIncluded() )\n            {\n                if ( ASFExtOptions.getCategorySupportedByASF( category ) == null )\n                {\n                    warnMessages.add( \"The programming category '\" + category + \"' is not supported by ASF. \"\n                        + \"Should be one of \" + Arrays.toString( ASFExtOptions.CATEGORIES ) );\n                }\n                else\n                {\n                    category = ASFExtOptions.getCategorySupportedByASF( category );\n                }\n            }\n\n            if ( asfExtOptions.isIncluded() )\n            {\n                DoapUtil.writeRdfResourceElement( writer, \"category\", \"http://projects.apache.org/category/\" + category );\n            }\n            else\n            {\n                DoapUtil.writeRdfResourceElement( writer, \"category\", category );\n            }\n        }\n\n        if ( StringUtils.isNotEmpty( doapOptions.getCategory() ) )\n        {\n            String[] categories = StringUtils.split( doapOptions.getCategory(), \",\" );\n            for ( String category : categories )\n            {\n                category = category.trim();\n\n                if ( asfExtOptions.isIncluded() )\n                {\n                    if ( ASFExtOptions.getCategorySupportedByASF( category ) == null )\n                    {\n                        warnMessages.add( \"The programming category '\" + category + \"' is not supported by ASF. \"\n                            + \"Should be one of \" + Arrays.toString( ASFExtOptions.CATEGORIES ) );\n                    }\n                    else\n                    {\n                        category = ASFExtOptions.getCategorySupportedByASF( category );\n                    }\n                }\n\n                if ( asfExtOptions.isIncluded() )\n                {\n                    DoapUtil.writeRdfResourceElement( writer, \"category\", \"http://projects.apache.org/category/\"\n                        + category );\n                }\n                else\n                {\n                    DoapUtil.writeRdfResourceElement( writer, \"category\", category );\n                }\n            }\n        }\n    }","commit_id":"2e44f1d600190c6b2653197444c7c4e922c7897e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP licenses.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#license\">http://usefulinc.com/ns/doap#license<\/a>\n     */\n    private void writeLicenses( XMLWriter writer, MavenProject project )\n    {\n        if ( project.getLicenses() == null || project.getLicenses().isEmpty() )\n        {\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"The URI of the license the software is distributed under.\", 2 );\n        // TODO: how to map to usefulinc site, or if this is necessary, the OSI page might\n        // be more appropriate.\n        @SuppressWarnings( \"unchecked\" )\n        List<License> licenses = project.getLicenses();\n        for ( License license : licenses )\n        {\n            if ( StringUtils.isNotEmpty( license.getUrl() ) )\n            {\n                DoapUtil.writeRdfResourceElement( writer, \"license\", license.getUrl() );\n            }\n            else\n            {\n                getLog().warn( \"No URL was specified for license \" + license.getName() );\n            }\n        }\n    }","id":15854,"modified_method":"/**\n     * Write DOAP licenses.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#license\">http://usefulinc.com/ns/doap#license<\/a>\n     */\n    private void writeLicenses( XMLWriter writer, MavenProject project )\n    {\n        if ( project.getLicenses() == null || project.getLicenses().isEmpty() )\n        {\n            addPomMessage( \"licenses\" );\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"The URI of the license the software is distributed under.\", 2 );\n        // TODO: how to map to usefulinc site, or if this is necessary, the OSI page might\n        // be more appropriate.\n        @SuppressWarnings( \"unchecked\" )\n        List<License> licenses = project.getLicenses();\n        for ( License license : licenses )\n        {\n            if ( StringUtils.isEmpty( license.getUrl() ) )\n            {\n                addPomMessage( \"licenses><license><url/><license><licenses\" );\n                continue;\n            }\n\n            String licenseUrl = license.getUrl().trim();\n            try\n            {\n                new URL( licenseUrl );\n\n                DoapUtil.writeRdfResourceElement( writer, \"license\", licenseUrl );\n            }\n            catch ( MalformedURLException e )\n            {\n                errorMessages.add( \"The POM license URL \" + licenseUrl + \" is not a valid URL.\" );\n            }\n        }\n    }","commit_id":"2e44f1d600190c6b2653197444c7c4e922c7897e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP programming-language.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#programming-language\">\n     *      http://usefulinc.com/ns/doap#programming-language<\/a>\n     */\n    private void writeProgrammingLanguage( XMLWriter writer, MavenProject project )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getProgrammingLanguage() ) && StringUtils.isEmpty( language ) )\n        {\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Programming language.\", 2 );\n\n        if ( StringUtils.isNotEmpty( language ) ) // backward compatible\n        {\n            if ( asfExtOptions.isIncluded() && !ASFExtOptions.isProgrammingLanguageSupportedByASF( language ) )\n            {\n                getLog().warn( \"The programming language '\" + language + \"' is not supported by ASF. \"\n                                   + \"Refer you to http://projects.apache.org/languages.html\" );\n            }\n\n            DoapUtil.writeElement( writer, \"programming-language\", language );\n        }\n\n        if ( StringUtils.isNotEmpty( doapOptions.getProgrammingLanguage() ) )\n        {\n            String[] languages = StringUtils.split( doapOptions.getProgrammingLanguage(), \",\" );\n            for ( String language : languages )\n            {\n                if ( asfExtOptions.isIncluded() && !ASFExtOptions.isProgrammingLanguageSupportedByASF( language.trim() ) )\n                {\n                    getLog().warn( \"The programming language '\" + language.trim() + \"' is not supported by ASF. \"\n                                       + \"Refer you to http://projects.apache.org/languages.html\" );\n                }\n\n                DoapUtil.writeElement( writer, \"programming-language\", language.trim() );\n            }\n        }\n    }","id":15855,"modified_method":"/**\n     * Write DOAP programming-language.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#programming-language\">\n     *      http://usefulinc.com/ns/doap#programming-language<\/a>\n     */\n    private void writeProgrammingLanguage( XMLWriter writer, MavenProject project )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getProgrammingLanguage() ) && StringUtils.isEmpty( language ) )\n        {\n            addDoapMessage( \"programmingLanguage\" );\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Programming language.\", 2 );\n\n        if ( StringUtils.isNotEmpty( language ) ) // backward compatible\n        {\n            getLog().warn( \"The <language/> parameter is deprecated, please use <doapOptions><programmingLanguage/><\/doapOptions> parameter instead of.\" );\n            language = language.trim();\n\n            if ( asfExtOptions.isIncluded() )\n            {\n                if ( ASFExtOptions.getProgrammingLanguageSupportedByASF( language ) == null )\n                {\n                    errorMessages.add( \"The programming language '\" + language + \"' is not supported by ASF. \"\n                        + \"Should be one of \" + Arrays.toString( ASFExtOptions.PROGRAMMING_LANGUAGES ) );\n                }\n                else\n                {\n                    language = ASFExtOptions.getProgrammingLanguageSupportedByASF( language );\n                }\n            }\n\n            DoapUtil.writeElement( writer, \"programming-language\", language.trim() );\n        }\n\n        if ( StringUtils.isNotEmpty( doapOptions.getProgrammingLanguage() ) )\n        {\n            String[] languages = StringUtils.split( doapOptions.getProgrammingLanguage(), \",\" );\n            for ( String language : languages )\n            {\n                language = language.trim();\n\n                if ( asfExtOptions.isIncluded() )\n                {\n                    if ( ASFExtOptions.getProgrammingLanguageSupportedByASF( language ) == null )\n                    {\n                        errorMessages.add( \"The programming language '\" + language + \"' is not supported by ASF. \"\n                            + \"Should be one of \" + Arrays.toString( ASFExtOptions.PROGRAMMING_LANGUAGES ) );\n                    }\n                    else\n                    {\n                        language = ASFExtOptions.getProgrammingLanguageSupportedByASF( language );\n                    }\n                }\n\n                DoapUtil.writeElement( writer, \"programming-language\", language );\n            }\n        }\n    }","commit_id":"2e44f1d600190c6b2653197444c7c4e922c7897e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP plateform.\n     *\n     * @param writer not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#plateform\">http://usefulinc.com/ns/doap#plateform<\/a>\n     * @since 1.1\n     */\n    private void writePlateform( XMLWriter writer )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getPlatform() ) )\n        {\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Plateform.\", 2 );\n        DoapUtil.writeRdfResourceElement( writer, \"plateform\", doapOptions.getPlatform() );\n    }","id":15856,"modified_method":"/**\n     * Write DOAP plateform.\n     *\n     * @param writer not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#plateform\">http://usefulinc.com/ns/doap#plateform<\/a>\n     * @since 1.1\n     */\n    private void writePlateform( XMLWriter writer )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getPlatform() ) )\n        {\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Plateform.\", 2 );\n        DoapUtil.writeRdfResourceElement( writer, \"plateform\", doapOptions.getPlatform().trim() );\n    }","commit_id":"2e44f1d600190c6b2653197444c7c4e922c7897e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write all DOAP releases.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @throws MojoExecutionException if any\n     * @see <a href=\"http://usefulinc.com/ns/doap#release\">http://usefulinc.com/ns/doap#release<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#Version\">http://usefulinc.com/ns/doap#Version<\/a>\n     */\n    private void writeReleases( XMLWriter writer, MavenProject project )\n        throws MojoExecutionException\n    {\n        Artifact artifact =\n            artifactFactory.createArtifact( project.getGroupId(), project.getArtifactId(), project.getVersion(), null,\n                                            project.getPackaging() );\n        RepositoryMetadata metadata = new ArtifactRepositoryMetadata( artifact );\n\n        for ( ArtifactRepository repo : remoteRepositories )\n        {\n            if ( repo.isBlacklisted() )\n            {\n                continue;\n            }\n            if ( repo.getSnapshots().isEnabled() )\n            {\n                continue;\n            }\n            if ( repo.getReleases().isEnabled() )\n            {\n                try\n                {\n                    repositoryMetadataManager.resolveAlways( metadata, localRepository, repo );\n                    break;\n                }\n                catch ( RepositoryMetadataResolutionException e )\n                {\n                    throw new MojoExecutionException( metadata\n                        + \" could not be retrieved from repositories due to an error: \" + e.getMessage(), e );\n                }\n            }\n        }\n\n        if ( metadata.getMetadata().getVersioning() == null )\n        {\n            getLog().info( \"No versioning was found. Ignored <release/> tag.\" );\n            return;\n        }\n\n        List<String> versions = metadata.getMetadata().getVersioning().getVersions();\n\n        // Recent releases in first\n        Collections.reverse( versions );\n        boolean addComment = false;\n        int i = 0;\n        for ( String version : versions )\n        {\n            if ( !addComment )\n            {\n                XmlWriterUtil.writeLineBreak( writer );\n                XmlWriterUtil.writeCommentText( writer, \"Project releases.\", 2 );\n                addComment = true;\n            }\n\n            writer.startElement( \"release\" );\n            writer.startElement( \"Version\" );\n\n            writer.startElement( \"name\" );\n            if ( version.equals( metadata.getMetadata().getVersioning().getRelease() ) )\n            {\n                writer.writeText( \"Latest stable release\" );\n            }\n            else\n            {\n                writer.writeText( project.getName() + \" - \" + version );\n            }\n            writer.endElement(); // name\n\n            writer.startElement( \"revision\" );\n            writer.writeText( version );\n            writer.endElement(); // revision\n\n            // list all file release from all remote repos\n            for ( ArtifactRepository repo : remoteRepositories )\n            {\n                Artifact artifactRelease =\n                    artifactFactory.createArtifact( project.getGroupId(), project.getArtifactId(), version, null,\n                                                    project.getPackaging() );\n\n                if ( artifactRelease == null )\n                {\n                    continue;\n                }\n\n                String fileRelease = repo.getUrl() + \"/\" + repo.pathOf( artifactRelease );\n                // try to ping the url\n                try\n                {\n                    URL urlRelease = new URL( fileRelease );\n                    urlRelease.openStream();\n                }\n                catch ( MalformedURLException e )\n                {\n                    getLog().debug( e.getMessage(), e );\n                    continue;\n                }\n                catch ( IOException e )\n                {\n                    // Not found, ignored\n                    getLog().debug( e.getMessage(), e );\n                    continue;\n                }\n\n                writer.startElement( \"file-release\" );\n                writer.writeText( fileRelease );\n                writer.endElement(); // file-release\n\n                Date releaseDate = null;\n                try\n                {\n                    releaseDate =\n                        REPOSITORY_DATE_FORMAT.parse( metadata.getMetadata().getVersioning().getLastUpdated() );\n                }\n                catch ( ParseException e )\n                {\n                    getLog().error( \"Unable to parse date '\" + metadata.getMetadata().getVersioning().getLastUpdated()\n                                        + \"'\" );\n                    continue;\n                }\n\n                // See MDOAP-11\n                if ( i == 0 )\n                {\n                    writer.startElement( \"created\" );\n                    writer.writeText( DOAP_DATE_FORMAT.format( releaseDate ) );\n                    writer.endElement(); // created\n                }\n            }\n\n            writer.endElement(); // Version\n            writer.endElement(); // release\n\n            i++;\n        }\n    }","id":15857,"modified_method":"/**\n     * Write all DOAP releases.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @throws MojoExecutionException if any\n     * @see <a href=\"http://usefulinc.com/ns/doap#release\">http://usefulinc.com/ns/doap#release<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#Version\">http://usefulinc.com/ns/doap#Version<\/a>\n     */\n    private void writeReleases( XMLWriter writer, MavenProject project )\n        throws MojoExecutionException\n    {\n        Artifact artifact =\n            artifactFactory.createArtifact( project.getGroupId(), project.getArtifactId(), project.getVersion(), null,\n                                            project.getPackaging() );\n        RepositoryMetadata metadata = new ArtifactRepositoryMetadata( artifact );\n\n        for ( ArtifactRepository repo : remoteRepositories )\n        {\n            if ( repo.isBlacklisted() )\n            {\n                continue;\n            }\n            if ( repo.getSnapshots().isEnabled() )\n            {\n                continue;\n            }\n            if ( repo.getReleases().isEnabled() )\n            {\n                try\n                {\n                    repositoryMetadataManager.resolveAlways( metadata, localRepository, repo );\n                    break;\n                }\n                catch ( RepositoryMetadataResolutionException e )\n                {\n                    throw new MojoExecutionException( metadata\n                        + \" could not be retrieved from repositories due to an error: \" + e.getMessage(), e );\n                }\n            }\n        }\n\n        if ( metadata.getMetadata().getVersioning() == null )\n        {\n            warnMessages.add( \"No versioning was found. Ignored <release/> tag.\" );\n            return;\n        }\n\n        List<String> versions = metadata.getMetadata().getVersioning().getVersions();\n\n        // Recent releases in first\n        Collections.reverse( versions );\n        boolean addComment = false;\n        int i = 0;\n        for ( String version : versions )\n        {\n            if ( !addComment )\n            {\n                XmlWriterUtil.writeLineBreak( writer );\n                XmlWriterUtil.writeCommentText( writer, \"Project releases.\", 2 );\n                addComment = true;\n            }\n\n            writer.startElement( \"release\" );\n            writer.startElement( \"Version\" );\n\n            writer.startElement( \"name\" );\n            if ( version.equals( metadata.getMetadata().getVersioning().getRelease() ) )\n            {\n                writer.writeText( \"Latest stable release\" );\n            }\n            else\n            {\n                writer.writeText( project.getName() + \" - \" + version );\n            }\n            writer.endElement(); // name\n\n            writer.startElement( \"revision\" );\n            writer.writeText( version );\n            writer.endElement(); // revision\n\n            // list all file release from all remote repos\n            for ( ArtifactRepository repo : remoteRepositories )\n            {\n                Artifact artifactRelease =\n                    artifactFactory.createArtifact( project.getGroupId(), project.getArtifactId(), version, null,\n                                                    project.getPackaging() );\n\n                if ( artifactRelease == null )\n                {\n                    continue;\n                }\n\n                String fileRelease = repo.getUrl() + \"/\" + repo.pathOf( artifactRelease );\n                writer.startElement( \"file-release\" );\n                writer.writeText( fileRelease );\n                writer.endElement(); // file-release\n\n                Date releaseDate = null;\n                try\n                {\n                    releaseDate =\n                        REPOSITORY_DATE_FORMAT.parse( metadata.getMetadata().getVersioning().getLastUpdated() );\n                }\n                catch ( ParseException e )\n                {\n                    getLog().error( \"Unable to parse date '\" + metadata.getMetadata().getVersioning().getLastUpdated()\n                                        + \"'\" );\n                    continue;\n                }\n\n                // See MDOAP-11\n                if ( i == 0 )\n                {\n                    writer.startElement( \"created\" );\n                    writer.writeText( DOAP_DATE_FORMAT.format( releaseDate ) );\n                    writer.endElement(); // created\n                }\n            }\n\n            writer.endElement(); // Version\n            writer.endElement(); // release\n\n            i++;\n        }\n    }","commit_id":"2e44f1d600190c6b2653197444c7c4e922c7897e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP description.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#description\">http://usefulinc.com/ns/doap#description<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#shortdesc\">http://usefulinc.com/ns/doap#shortdesc<\/a>\n     */\n    private void writeDescription( XMLWriter writer, MavenProject project )\n    {\n        if ( StringUtils.isEmpty( project.getDescription() ) )\n        {\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Plain text description of a project, of 2-4 sentences in length.\", 2 );\n        DoapUtil.writeElement( writer, \"description\", project.getDescription(), lang );\n        if ( StringUtils.isNotEmpty( doapOptions.getShortdesc() ) )\n        {\n            DoapUtil.writeElement( writer, \"shortdesc\", doapOptions.getShortdesc(), lang );\n        }\n        else\n        {\n            DoapUtil.writeElement( writer, \"shortdesc\", project.getDescription(), lang );\n        }\n    }","id":15858,"modified_method":"/**\n     * Write DOAP description.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#description\">http://usefulinc.com/ns/doap#description<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#shortdesc\">http://usefulinc.com/ns/doap#shortdesc<\/a>\n     */\n    private void writeDescription( XMLWriter writer, MavenProject project )\n    {\n        String description = interpolate( doapOptions.getDescription(), project, settings );\n        if ( StringUtils.isEmpty( description ) )\n        {\n            addDoapMessage( \"description\" );\n        }\n        else\n        {\n            description = description.trim();\n\n            XmlWriterUtil.writeLineBreak( writer );\n            XmlWriterUtil.writeCommentText( writer, \"Plain text description of a project, of 2-4 sentences in length.\",\n                                            2 );\n            DoapUtil.writeElement( writer, \"description\", description, lang );\n        }\n\n        if ( StringUtils.isEmpty( doapOptions.getShortdesc() ) )\n        {\n            addDoapMessage( \"shortdesc\" );\n            return;\n        }\n\n        DoapUtil.writeElement( writer, \"shortdesc\", doapOptions.getShortdesc().trim(), lang );\n    }","commit_id":"2e44f1d600190c6b2653197444c7c4e922c7897e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP blog.\n     *\n     * @param writer not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#blog\">http://usefulinc.com/ns/doap#blog<\/a>\n     * @since 1.1\n     */\n    private void writeBlog( XMLWriter writer )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getBlog() ) )\n        {\n            return;\n        }\n\n        try\n        {\n            new URL( doapOptions.getBlog() );\n\n        }\n        catch ( MalformedURLException e )\n        {\n            getLog().error( \"The <doapOptions><blog/><\/doapOptions> parameter \" + doapOptions.getBlog()\n                                + \" is not a valid URL. Ignored <blog/> tag.\" );\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Blog page.\", 2 );\n        DoapUtil.writeRdfResourceElement( writer, \"blog\", doapOptions.getBlog() );\n    }","id":15859,"modified_method":"/**\n     * Write DOAP blog.\n     *\n     * @param writer not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#blog\">http://usefulinc.com/ns/doap#blog<\/a>\n     * @since 1.1\n     */\n    private void writeBlog( XMLWriter writer )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getBlog() ) )\n        {\n            return;\n        }\n\n        String blog = doapOptions.getBlog().trim();\n        try\n        {\n            new URL( blog );\n\n        }\n        catch ( MalformedURLException e )\n        {\n            errorMessages.add( \"The <doapOptions><blog>\" + blog + \"<\/blog><\/doapOptions> parameter is not a valid URL.\" );\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Blog page.\", 2 );\n        DoapUtil.writeRdfResourceElement( writer, \"blog\", blog );\n    }","commit_id":"2e44f1d600190c6b2653197444c7c4e922c7897e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP homepage and old-homepage.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#homepage\">http://usefulinc.com/ns/doap#homepage<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#old-homepage\">http://usefulinc.com/ns/doap#old-homepage<\/a>\n     */\n    private void writeHomepage( XMLWriter writer, MavenProject project )\n    {\n        if ( StringUtils.isNotEmpty( project.getUrl() ) )\n        {\n            try\n            {\n                new URL( project.getUrl() );\n\n                XmlWriterUtil.writeLineBreak( writer );\n                XmlWriterUtil.writeCommentText( writer,\n                                                \"URL of a project's homepage, associated with exactly one project.\", 2 );\n                DoapUtil.writeRdfResourceElement( writer, \"homepage\", project.getUrl() );\n            }\n            catch ( MalformedURLException e )\n            {\n                getLog().error( \"The project url \" + project.getUrl() + \" is not a valid URL. Ignored <homepage/> tag.\" );\n            }\n        }\n\n        if ( StringUtils.isNotEmpty( doapOptions.getOldHomepage() ) )\n        {\n            try\n            {\n                new URL( project.getUrl() );\n\n                XmlWriterUtil.writeLineBreak( writer );\n                XmlWriterUtil.writeCommentText( writer,\n                                                \"URL of a project's past homepage, associated with exactly one project.\",\n                                                2 );\n                DoapUtil.writeRdfResourceElement( writer, \"old-homepage\", doapOptions.getOldHomepage() );\n            }\n            catch ( MalformedURLException e )\n            {\n                getLog().error( \"The <doapOptions><oldHomepage/><\/doapOptions> parameter \"\n                                    + doapOptions.getOldHomepage()\n                                    + \" is not a valid URL. Ignored <old-homepage/> tag.\" );\n            }\n        }\n    }","id":15860,"modified_method":"/**\n     * Write DOAP homepage and old-homepage.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#homepage\">http://usefulinc.com/ns/doap#homepage<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#old-homepage\">http://usefulinc.com/ns/doap#old-homepage<\/a>\n     */\n    private void writeHomepage( XMLWriter writer, MavenProject project )\n    {\n        String homepage = interpolate( doapOptions.getHomepage(), project, settings );\n        if ( StringUtils.isEmpty( homepage ) )\n        {\n            addDoapMessage( \"homepage\" );\n        }\n        else\n        {\n            homepage = homepage.trim();\n\n            try\n            {\n                new URL( homepage );\n\n                XmlWriterUtil.writeLineBreak( writer );\n                XmlWriterUtil.writeCommentText( writer,\n                                                \"URL of a project's homepage, associated with exactly one project.\", 2 );\n                DoapUtil.writeRdfResourceElement( writer, \"homepage\", homepage );\n            }\n            catch ( MalformedURLException e )\n            {\n                errorMessages.add( \"The <doapOptions><homepage>\" + homepage\n                    + \"<\/homepage><\/doapOptions> parameter is not a valid URL.\" );\n            }\n        }\n\n        if ( StringUtils.isNotEmpty( doapOptions.getOldHomepage() ) )\n        {\n            String oldHomepage = interpolate( doapOptions.getOldHomepage(), project, settings );\n            if ( StringUtils.isEmpty( oldHomepage ) )\n            {\n                return;\n            }\n\n            oldHomepage = oldHomepage.trim();\n            try\n            {\n                new URL( oldHomepage );\n\n                XmlWriterUtil.writeLineBreak( writer );\n                XmlWriterUtil.writeCommentText( writer,\n                                                \"URL of a project's past homepage, associated with exactly one project.\",\n                                                2 );\n                DoapUtil.writeRdfResourceElement( writer, \"old-homepage\", oldHomepage );\n            }\n            catch ( MalformedURLException e )\n            {\n                errorMessages.add( \"The <doapOptions><oldHomepage>\" + oldHomepage\n                    + \"<\/oldHomepage><\/doapOptions> parameter is not a valid URL.\" );\n            }\n        }\n    }","commit_id":"2e44f1d600190c6b2653197444c7c4e922c7897e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP name.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#name\">http://usefulinc.com/ns/doap#name<\/a>\n     */\n    private void writeName( XMLWriter writer, MavenProject project )\n    {\n        if ( StringUtils.isEmpty( project.getName() ) )\n        {\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"A name of something.\", 2 );\n\n        if ( asfExtOptions.isIncluded()\n            && !project.getName().toLowerCase( Locale.ENGLISH ).trim().startsWith( \"apache\" ) )\n        {\n            DoapUtil.writeElement( writer, \"name\", \"Apache \" + project.getName() );\n        }\n        else\n        {\n            DoapUtil.writeElement( writer, \"name\", project.getName() );\n        }\n    }","id":15861,"modified_method":"/**\n     * Write DOAP name.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#name\">http://usefulinc.com/ns/doap#name<\/a>\n     */\n    private void writeName( XMLWriter writer, MavenProject project )\n    {\n        String name = interpolate( doapOptions.getName(), project, settings );\n        if ( StringUtils.isEmpty( name ) )\n        {\n            addDoapMessage( \"name\" );\n            return;\n        }\n\n        name = name.trim();\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"A name of something.\", 2 );\n\n        if ( asfExtOptions.isIncluded() && !name.toLowerCase( Locale.ENGLISH ).startsWith( \"apache\" ) )\n        {\n            DoapUtil.writeElement( writer, \"name\", \"Apache \" + name );\n        }\n        else\n        {\n            DoapUtil.writeElement( writer, \"name\", name );\n        }\n    }","commit_id":"2e44f1d600190c6b2653197444c7c4e922c7897e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP service-endpoint.\n     *\n     * @param writer not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#service-endpoint\">http://usefulinc.com/ns/doap#service-endpoint<\/a>\n     * @since 1.1\n     */\n    private void writeServiceEndpoint( XMLWriter writer )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getServiceEndpoint() ) )\n        {\n            return;\n        }\n\n        try\n        {\n            new URL( doapOptions.getServiceEndpoint() );\n\n        }\n        catch ( MalformedURLException e )\n        {\n            getLog().error( \"The <doapOptions><serviceEndpoint/><\/doapOptions> parameter \"\n                                + doapOptions.getServiceEndpoint()\n                                + \" is not a valid URL. Ignored <service-endpoint/> tag.\" );\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Service endpoint.\", 2 );\n        DoapUtil.writeRdfResourceElement( writer, \"service-endpoint\", doapOptions.getServiceEndpoint() );\n    }","id":15862,"modified_method":"/**\n     * Write DOAP service-endpoint.\n     *\n     * @param writer not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#service-endpoint\">http://usefulinc.com/ns/doap#service-endpoint<\/a>\n     * @since 1.1\n     */\n    private void writeServiceEndpoint( XMLWriter writer )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getServiceEndpoint() ) )\n        {\n            return;\n        }\n\n        String serviceEndpoint = doapOptions.getServiceEndpoint().trim();\n        try\n        {\n            new URL( serviceEndpoint );\n\n        }\n        catch ( MalformedURLException e )\n        {\n            errorMessages.add( \"The <doapOptions><serviceEndpoint>\" + serviceEndpoint\n                + \"<\/serviceEndpoint><\/doapOptions> parameter is not a valid URL.\" );\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Service endpoint.\", 2 );\n        DoapUtil.writeRdfResourceElement( writer, \"service-endpoint\", serviceEndpoint );\n    }","commit_id":"2e44f1d600190c6b2653197444c7c4e922c7897e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP language.\n     *\n     * @param writer not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#language\">http://usefulinc.com/ns/doap#language<\/a>\n     * @since 1.1\n     */\n    private void writeLanguage( XMLWriter writer )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getLanguage() ) )\n        {\n            return;\n        }\n\n        if ( Arrays.binarySearch( Locale.getISOLanguages(), doapOptions.getLanguage() ) < 0 )\n        {\n            getLog().error( \"The <doapOptions><language/><\/doapOptions> parameter \" + doapOptions.getLanguage()\n                                + \" is not a valid ISO language. Ignored <language/> tag.\" );\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Language.\", 2 );\n        DoapUtil.writeRdfResourceElement( writer, \"language\", doapOptions.getLanguage() );\n    }","id":15863,"modified_method":"/**\n     * Write DOAP language.\n     *\n     * @param writer not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#language\">http://usefulinc.com/ns/doap#language<\/a>\n     * @since 1.1\n     */\n    private void writeLanguage( XMLWriter writer )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getLanguage() ) )\n        {\n            return;\n        }\n\n        String language = doapOptions.getLanguage().trim();\n        if ( Arrays.binarySearch( Locale.getISOLanguages(), language ) < 0 )\n        {\n            errorMessages.add( \"The <doapOptions><language>\" + language\n                + \"<\/language><\/doapOptions> parameter is not a valid ISO language.\" );\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Language.\", 2 );\n        DoapUtil.writeRdfResourceElement( writer, \"language\", language );\n    }","commit_id":"2e44f1d600190c6b2653197444c7c4e922c7897e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP created.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#created\">http://usefulinc.com/ns/doap#created<\/a>\n     */\n    private void writeCreated( XMLWriter writer, MavenProject project )\n    {\n        if ( StringUtils.isEmpty( project.getInceptionYear() ) )\n        {\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Date when something was created, in YYYY-MM-DD form. e.g. 2004-04-05\",\n                                        2 );\n        DoapUtil.writeElement( writer, \"created\", project.getInceptionYear() + \"-01-01\" );\n    }","id":15864,"modified_method":"/**\n     * Write DOAP created.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#created\">http://usefulinc.com/ns/doap#created<\/a>\n     */\n    private void writeCreated( XMLWriter writer, MavenProject project )\n    {\n        String created = interpolate( doapOptions.getCreated(), project, settings );\n        if ( StringUtils.isEmpty( created ) )\n        {\n            addDoapMessage( \"created\" );\n            return;\n        }\n\n        created = created.trim();\n        try\n        {\n            DOAP_DATE_FORMAT.parse( created );\n        }\n        catch ( ParseException e )\n        {\n            errorMessages.add( \"The <doapOptions><created>\" + created\n                + \"<\/created><\/doapOptions> parameter should be in YYYY-MM-DD.\" );\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Date when something was created, in YYYY-MM-DD form. e.g. 2004-04-05\",\n                                        2 );\n        DoapUtil.writeElement( writer, \"created\", created );\n    }","commit_id":"2e44f1d600190c6b2653197444c7c4e922c7897e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write a doap file for the given project.\n     *\n     * @param project not null\n     * @param outputFile not null\n     * @since 1.1\n     */\n    private void writeDoapFile( MavenProject project, File outputFile )\n        throws MojoExecutionException\n    {\n        // ----------------------------------------------------------------------------\n        // Includes ASF extensions\n        // ----------------------------------------------------------------------------\n\n        if ( !asfExtOptions.isIncluded() && ASFExtOptions.isASFProject( project ) )\n        {\n            getLog().info( \"This project is an ASF project, ASF Extensions to DOAP will be added.\" );\n            asfExtOptions.setIncluded( true );\n        }\n\n        // ----------------------------------------------------------------------------\n        // setup pretty print xml writer\n        // ----------------------------------------------------------------------------\n\n        Writer w;\n        try\n        {\n            if ( !outputFile.getParentFile().exists() )\n            {\n                FileUtils.mkdir( outputFile.getParentFile().getAbsolutePath() );\n            }\n\n            w = WriterFactory.newXmlWriter( outputFile );\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error creating DOAP file \" + outputFile.getAbsolutePath(), e );\n        }\n\n        if ( asfExtOptions.isIncluded() )\n        {\n            getLog().info( \"Generating an ASF DOAP file \" + outputFile.getAbsolutePath() );\n        }\n        else\n        {\n            getLog().info( \"Generating a pure DOAP file \" + outputFile.getAbsolutePath() );\n        }\n\n        XMLWriter writer = new PrettyPrintXMLWriter( w, project.getModel().getModelEncoding(), null );\n\n        // ----------------------------------------------------------------------------\n        // Convert POM to DOAP\n        // ----------------------------------------------------------------------------\n\n        DoapUtil.writeHeader( writer );\n\n        // Heading\n        writer.startElement( \"rdf:RDF\" );\n        writer.addAttribute( \"xml:lang\", lang );\n        writer.addAttribute( \"xmlns\", \"http://usefulinc.com/ns/doap#\" );\n        writer.addAttribute( \"xmlns:rdf\", \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" );\n        writer.addAttribute( \"xmlns:foaf\", \"http://xmlns.com/foaf/0.1/\" );\n        if ( asfExtOptions.isIncluded() )\n        {\n            writer.addAttribute( \"xmlns:asfext\", ASFExtOptions.ASFEXT_NAMESPACE );\n        }\n\n        // Project\n        writer.startElement( \"Project\" );\n        if ( StringUtils.isNotEmpty( about ) )\n        {\n            if ( artifact != null )\n            {\n                about = project.getUrl();\n            }\n\n            try\n            {\n                new URL( about );\n\n                writer.addAttribute( \"rdf:about\", about );\n            }\n            catch ( MalformedURLException e )\n            {\n                getLog().error( \"The <about/> parameter \" + about + \" is not a valid URL. Ignored <about/> tag.\" );\n            }\n        }\n        else\n        {\n            getLog().warn( \"rdf:about should be required\" );\n        }\n\n        // name\n        writeName( writer, project );\n\n        // description\n        writeDescription( writer, project );\n\n        // implements\n        writeImplements( writer );\n\n        // Audience\n        writeAudience( writer );\n\n        // Vendor\n        writeVendor( writer, project );\n\n        // created\n        writeCreated( writer, project );\n\n        // homepage and old-homepage\n        writeHomepage( writer, project );\n\n        // Blog\n        writeBlog( writer );\n\n        // licenses\n        writeLicenses( writer, project );\n\n        // programming-language\n        writeProgrammingLanguage( writer, project );\n\n        // category\n        writeCategory( writer, project );\n\n        // os\n        writeOS( writer, project );\n\n        // Plateform\n        writePlateform( writer );\n\n        // Language\n        writeLanguage( writer );\n\n        // SCM\n        writeSourceRepositories( writer, project );\n\n        // bug-database\n        writeBugDatabase( writer, project );\n\n        // mailing list\n        writeMailingList( writer, project );\n\n        // download-page and download-mirror\n        writeDownloadPage( writer, project );\n\n        // screenshots\n        writeScreenshots( writer, project );\n\n        // service-endpoint\n        writeServiceEndpoint( writer );\n\n        // wiki\n        writeWiki( writer, project );\n\n        // Releases\n        writeReleases( writer, project );\n\n        // Developers\n        @SuppressWarnings( \"unchecked\" )\n        List<Contributor> developers = project.getDevelopers();\n        writeContributors( writer, developers );\n\n        // Contributors\n        @SuppressWarnings( \"unchecked\" )\n        List<Contributor> contributors = project.getContributors();\n        writeContributors( writer, contributors );\n\n        // ASFext\n        if ( asfExtOptions.isIncluded() )\n        {\n            writeASFext( writer, project );\n        }\n\n        writer.endElement(); // Project\n\n        writeOrganizations( writer );\n\n        writer.endElement(); // rdf:RDF\n\n        try\n        {\n            w.close();\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error when closing the writer.\", e );\n        }\n\n        if ( validate )\n        {\n            List<String> errors = DoapUtil.validate( outputFile );\n            if ( !errors.isEmpty() )\n            {\n                for ( String error : errors )\n                {\n                    getLog().error( error );\n                }\n\n                throw new MojoExecutionException( \"Error parsing the generated doap file, see above.\" );\n            }\n        }\n    }","id":15865,"modified_method":"/**\n     * Write a doap file for the given project.\n     *\n     * @param project not null\n     * @param outputFile not null\n     * @since 1.1\n     */\n    private void writeDoapFile( MavenProject project, File outputFile )\n        throws MojoExecutionException\n    {\n        // ----------------------------------------------------------------------------\n        // Includes ASF extensions\n        // ----------------------------------------------------------------------------\n\n        if ( !asfExtOptions.isIncluded() && ASFExtOptions.isASFProject( project ) )\n        {\n            getLog().info( \"This project is an ASF project, ASF Extensions to DOAP will be added.\" );\n            asfExtOptions.setIncluded( true );\n        }\n\n        // ----------------------------------------------------------------------------\n        // setup pretty print xml writer\n        // ----------------------------------------------------------------------------\n\n        Writer w;\n        try\n        {\n            if ( !outputFile.getParentFile().exists() )\n            {\n                FileUtils.mkdir( outputFile.getParentFile().getAbsolutePath() );\n            }\n\n            w = WriterFactory.newXmlWriter( outputFile );\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error creating DOAP file \" + outputFile.getAbsolutePath(), e );\n        }\n\n        if ( asfExtOptions.isIncluded() )\n        {\n            getLog().info( \"Generating an ASF DOAP file \" + outputFile.getAbsolutePath() );\n        }\n        else\n        {\n            getLog().info( \"Generating a pure DOAP file \" + outputFile.getAbsolutePath() );\n        }\n\n        XMLWriter writer = new PrettyPrintXMLWriter( w, project.getModel().getModelEncoding(), null );\n\n        // ----------------------------------------------------------------------------\n        // Convert POM to DOAP\n        // ----------------------------------------------------------------------------\n\n        DoapUtil.writeHeader( writer );\n\n        // Heading\n        writer.startElement( \"rdf:RDF\" );\n        writer.addAttribute( \"xml:lang\", lang );\n        writer.addAttribute( \"xmlns\", \"http://usefulinc.com/ns/doap#\" );\n        writer.addAttribute( \"xmlns:rdf\", \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" );\n        writer.addAttribute( \"xmlns:foaf\", \"http://xmlns.com/foaf/0.1/\" );\n        if ( asfExtOptions.isIncluded() )\n        {\n            writer.addAttribute( \"xmlns:asfext\", ASFExtOptions.ASFEXT_NAMESPACE );\n        }\n\n        // Project\n        writer.startElement( \"Project\" );\n        if ( StringUtils.isNotEmpty( about ) )\n        {\n            if ( artifact != null )\n            {\n                about = project.getUrl();\n            }\n\n            try\n            {\n                new URL( about );\n\n                writer.addAttribute( \"rdf:about\", about );\n            }\n            catch ( MalformedURLException e )\n            {\n                errorMessages.add( \"The <about/> parameter \" + about + \" is not a valid URL.\" );\n            }\n        }\n        else\n        {\n            warnMessages.add( \"rdf:about should be required\" );\n        }\n\n        // name\n        writeName( writer, project );\n\n        // description\n        writeDescription( writer, project );\n\n        // implements\n        writeImplements( writer );\n\n        // Audience\n        writeAudience( writer );\n\n        // Vendor\n        writeVendor( writer, project );\n\n        // created\n        writeCreated( writer, project );\n\n        // homepage and old-homepage\n        writeHomepage( writer, project );\n\n        // Blog\n        writeBlog( writer );\n\n        // licenses\n        writeLicenses( writer, project );\n\n        // programming-language\n        writeProgrammingLanguage( writer, project );\n\n        // category\n        writeCategory( writer, project );\n\n        // os\n        writeOS( writer, project );\n\n        // Plateform\n        writePlateform( writer );\n\n        // Language\n        writeLanguage( writer );\n\n        // SCM\n        writeSourceRepositories( writer, project );\n\n        // bug-database\n        writeBugDatabase( writer, project );\n\n        // mailing list\n        writeMailingList( writer, project );\n\n        // download-page and download-mirror\n        writeDownloadPage( writer, project );\n\n        // screenshots\n        writeScreenshots( writer, project );\n\n        // service-endpoint\n        writeServiceEndpoint( writer );\n\n        // wiki\n        writeWiki( writer, project );\n\n        // Releases\n        writeReleases( writer, project );\n\n        // Developers\n        @SuppressWarnings( \"unchecked\" )\n        List<Contributor> developers = project.getDevelopers();\n        if ( developers == null || developers.isEmpty() )\n        {\n            addPomMessage( \"developers\" );\n        }\n        else\n        {\n            writeContributors( writer, developers );\n        }\n\n        // Contributors\n        @SuppressWarnings( \"unchecked\" )\n        List<Contributor> contributors = project.getContributors();\n        writeContributors( writer, contributors );\n\n        // ASFext\n        writeASFext( writer, project );\n\n        writer.endElement(); // Project\n\n        writeOrganizations( writer );\n\n        writer.endElement(); // rdf:RDF\n\n        try\n        {\n            w.close();\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error when closing the writer.\", e );\n        }\n\n        if ( !warnMessages.isEmpty() )\n        {\n            for ( String warn : warnMessages )\n            {\n                getLog().warn( warn );\n            }\n        }\n\n        if ( !errorMessages.isEmpty() )\n        {\n            for ( String error : errorMessages )\n            {\n                getLog().error( error );\n            }\n\n            // TODO need to do more tests\n            // if ( ASFExtOptions.isASFProject( project ) )\n            // {\n            // throw new MojoExecutionException( \"The generated DOAP doesn't respect ASF rule, see above.\" );\n            // }\n        }\n\n        if ( validate )\n        {\n            List<String> errors = DoapUtil.validate( outputFile );\n            if ( !errors.isEmpty() )\n            {\n                for ( String error : errors )\n                {\n                    getLog().error( error );\n                }\n\n                throw new MojoExecutionException( \"Error parsing the generated doap file, see above.\" );\n            }\n        }\n    }","commit_id":"2e44f1d600190c6b2653197444c7c4e922c7897e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP mailing-list.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#mailing-list\">http://usefulinc.com/ns/doap#mailing-list<\/a>\n     * @see DoapOptions#getMailingList()\n     * @see MavenProject#getMailingLists()\n     */\n    private void writeMailingList( XMLWriter writer, MavenProject project )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getMailingList() ) || project.getMailingLists() == null\n            || project.getMailingLists().isEmpty() )\n        {\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Mailing lists.\", 2 );\n        if ( StringUtils.isNotEmpty( doapOptions.getMailingList() ) )\n        {\n            DoapUtil.writeRdfResourceElement( writer, \"mailing-list\", doapOptions.getMailingList() );\n        }\n        else\n        {\n            @SuppressWarnings( \"unchecked\" )\n            List<MailingList> mailingLists = project.getMailingLists();\n            for ( MailingList mailingList : mailingLists )\n            {\n                if ( StringUtils.isNotEmpty( mailingList.getArchive() ) )\n                {\n                    DoapUtil.writeRdfResourceElement( writer, \"mailing-list\", mailingList.getArchive() );\n                }\n                else\n                {\n                    getLog().warn( \"No archive was specified for mailing list \" + mailingList.getName() );\n\n                    if ( mailingList.getOtherArchives() != null )\n                    {\n                        for ( String otherArchive : mailingList.getOtherArchives() )\n                        {\n                            if ( StringUtils.isNotEmpty( otherArchive ) )\n                            {\n                                DoapUtil.writeRdfResourceElement( writer, \"mailing-list\", otherArchive );\n                            }\n                            else\n                            {\n                                getLog().warn( \"No other archive was specified for mailing list \"\n                                                   + mailingList.getName() );\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }","id":15866,"modified_method":"/**\n     * Write DOAP mailing-list.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#mailing-list\">http://usefulinc.com/ns/doap#mailing-list<\/a>\n     * @see DoapOptions#getMailingList()\n     */\n    private void writeMailingList( XMLWriter writer, MavenProject project )\n    {\n        String ml = interpolate( doapOptions.getMailingList(), project, settings );\n        if ( StringUtils.isEmpty( ml ) )\n        {\n            addDoapMessage( \"mailingList\" );\n            return;\n        }\n\n        ml = ml.trim();\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Mailing lists.\", 2 );\n        DoapUtil.writeRdfResourceElement( writer, \"mailing-list\", ml );\n    }","commit_id":"2e44f1d600190c6b2653197444c7c4e922c7897e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP screenshots.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#screenshots\">http://usefulinc.com/ns/doap#screenshots<\/a>\n     */\n    private void writeScreenshots( XMLWriter writer, MavenProject project )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getScreenshots() ) )\n        {\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Web page with screenshots of project.\", 2 );\n        DoapUtil.writeRdfResourceElement( writer, \"screenshots\", doapOptions.getScreenshots() );\n    }","id":15867,"modified_method":"/**\n     * Write DOAP screenshots.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#screenshots\">http://usefulinc.com/ns/doap#screenshots<\/a>\n     */\n    private void writeScreenshots( XMLWriter writer, MavenProject project )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getScreenshots() ) )\n        {\n            return;\n        }\n\n        String screenshots = doapOptions.getScreenshots().trim();\n        try\n        {\n            new URL( screenshots );\n\n        }\n        catch ( MalformedURLException e )\n        {\n            errorMessages.add( \"The <doapOptions><screenshots>\" + screenshots\n                + \"<\/screenshots><\/doapOptions> parameter is not a valid URL.\" );\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Web page with screenshots of project.\", 2 );\n        DoapUtil.writeRdfResourceElement( writer, \"screenshots\", screenshots );\n    }","commit_id":"2e44f1d600190c6b2653197444c7c4e922c7897e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write the ASF extensions\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://svn.apache.org/repos/asf/infrastructure/site-tools/trunk/projects/asfext\">\n     *      http://svn.apache.org/repos/asf/infrastructure/site-tools/trunk/projects/asfext<\/a>\n     * @see <a href=\"http://projects.apache.org/docs/pmc.html\">http://projects.apache.org/docs/pmc.html<\/a>\n     */\n    private void writeASFext( XMLWriter writer, MavenProject project )\n    {\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"ASF extension\", 2 );\n\n        // asfext:pmc\n        if ( StringUtils.isNotEmpty( asfExtOptions.getPmc() ) )\n        {\n            DoapUtil.writeRdfResourceElement( writer, \"asfext:pmc\", asfExtOptions.getPmc() );\n        }\n        else\n        {\n            if ( StringUtils.isEmpty( project.getUrl() ) )\n            {\n                getLog().warn( \"No project url discovered! According http://projects.apache.org/docs/pmc.html, \"\n                                   + \"asfext:pmc is required\" );\n            }\n            else\n            {\n                DoapUtil.writeRdfResourceElement( writer, \"asfext:pmc\", project.getUrl() );\n            }\n        }\n\n        // asfext:name\n        if ( StringUtils.isNotEmpty( asfExtOptions.getName() ) )\n        {\n            DoapUtil.writeElement( writer, \"asfext:name\", asfExtOptions.getName() );\n        }\n        else\n        {\n            if ( StringUtils.isEmpty( project.getName() ) )\n            {\n                getLog().warn( \"No project name discovered! According http://projects.apache.org/docs/pmc.html, \"\n                                   + \"asfext:name is required\" );\n            }\n            else\n            {\n                // Respect ASF rule\n                if ( !project.getName().trim().startsWith( \"Apache\" ) )\n                {\n                    DoapUtil.writeElement( writer, \"asfext:name\", \"Apache \" + project.getName().trim() );\n                }\n                else\n                {\n                    DoapUtil.writeElement( writer, \"asfext:name\", project.getName().trim() );\n                }\n            }\n        }\n\n        // asfext:charter\n        if ( StringUtils.isEmpty( asfExtOptions.getCharter() ) )\n        {\n            getLog().warn( \"No charter specified! According http://projects.apache.org/docs/pmc.html, \"\n                               + \"asfext:charter is required\" );\n        }\n        else\n        {\n            DoapUtil.writeRdfResourceElement( writer, \"asfext:charter\", asfExtOptions.getCharter() );\n        }\n\n        // asfext:chair\n        @SuppressWarnings( \"unchecked\" )\n        List<Developer> developers = project.getDevelopers();\n\n        if ( StringUtils.isNotEmpty( asfExtOptions.getChair() ) )\n        {\n            writer.startElement( \"asfext:chair\" );\n            writer.startElement( \"foaf:Person\" );\n            writer.startElement( \"foaf:name\" );\n            writer.writeText( asfExtOptions.getChair() );\n            writer.endElement(); // foaf:name\n            writer.endElement(); // foaf:Person\n            writer.endElement(); // asfext:chair\n        }\n        else\n        {\n            Developer chair = ASFExtOptions.findChair( developers );\n            if ( chair != null )\n            {\n                writeContributor( writer, chair, \"asfext:chair\" );\n            }\n            else\n            {\n                getLog().warn( \"No chair man discovered! According http://projects.apache.org/docs/pmc.html, \"\n                                   + \"asfext:chair is required\" );\n            }\n        }\n\n        // asfext:member\n        if ( developers != null && developers.size() > 0 )\n        {\n            List<Developer> pmcMembers = ASFExtOptions.findPMCMembers( developers );\n            for ( Developer pmcMember : pmcMembers )\n            {\n                writeContributor( writer, pmcMember, \"asfext:member\" );\n            }\n        }\n\n        writeASFImplements( writer );\n    }","id":15868,"modified_method":"/**\n     * Write the ASF extensions\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://svn.apache.org/repos/asf/infrastructure/site-tools/trunk/projects/asfext\">\n     *      http://svn.apache.org/repos/asf/infrastructure/site-tools/trunk/projects/asfext<\/a>\n     * @see <a href=\"http://projects.apache.org/docs/pmc.html\">http://projects.apache.org/docs/pmc.html<\/a>\n     */\n    private void writeASFext( XMLWriter writer, MavenProject project )\n    {\n        if ( !ASFExtOptions.isASFProject( project ) )\n        {\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"ASF extension\", 2 );\n\n        // asfext:pmc\n        String pmc = interpolate( asfExtOptions.getPmc(), project, settings );\n        if ( StringUtils.isNotEmpty( pmc ) )\n        {\n            DoapUtil.writeRdfResourceElement( writer, \"asfext:pmc\", pmc.trim() );\n        }\n        else\n        {\n            errorMessages.add( \"A <asfExtOptions><pmc/><\/asfExtOptions> parameter is required by ASF.\" );\n        }\n\n        // asfext:name\n        String name = interpolate( asfExtOptions.getName(), project, settings );\n        if ( StringUtils.isNotEmpty( name ) )\n        {\n            if ( !name.toLowerCase( Locale.ENGLISH ).trim().startsWith( \"apache\" ) )\n            {\n                name = \"Apache \" + name.trim();\n            }\n            DoapUtil.writeElement( writer, \"asfext:name\", name.trim() );\n        }\n        else\n        {\n            errorMessages.add( \"A <asfExtOptions><name/><\/asfExtOptions> parameter is required by ASF.\" );\n        }\n\n        // asfext:charter\n        if ( StringUtils.isEmpty( asfExtOptions.getCharter() ) )\n        {\n            errorMessages.add( \"A <asfExtOptions><charter/><\/asfExtOptions> parameter is required by ASF.\" );\n        }\n        else\n        {\n            DoapUtil.writeRdfResourceElement( writer, \"asfext:charter\", asfExtOptions.getCharter() );\n        }\n\n        // asfext:chair\n        @SuppressWarnings( \"unchecked\" )\n        List<Developer> developers = project.getDevelopers();\n\n        if ( StringUtils.isNotEmpty( asfExtOptions.getChair() ) )\n        {\n            writer.startElement( \"asfext:chair\" );\n            writer.startElement( \"foaf:Person\" );\n            writer.startElement( \"foaf:name\" );\n            writer.writeText( asfExtOptions.getChair() );\n            writer.endElement(); // foaf:name\n            writer.endElement(); // foaf:Person\n            writer.endElement(); // asfext:chair\n        }\n        else\n        {\n            Developer chair = ASFExtOptions.findChair( developers );\n            if ( chair != null )\n            {\n                writeContributor( writer, chair, \"asfext:chair\" );\n            }\n            else\n            {\n                errorMessages.add( \"A <asfExtOptions><chair/><\/asfExtOptions> parameter is required by ASF.\" );\n            }\n        }\n\n        // asfext:member\n        if ( developers != null && developers.size() > 0 )\n        {\n            List<Developer> pmcMembers = ASFExtOptions.findPMCMembers( developers );\n            for ( Developer pmcMember : pmcMembers )\n            {\n                writeContributor( writer, pmcMember, \"asfext:member\" );\n            }\n        }\n\n        writeASFImplements( writer );\n    }","commit_id":"2e44f1d600190c6b2653197444c7c4e922c7897e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Writer a single developer or contributor\n     *\n     * @param writer not null\n     * @param developerOrContributor not null, instance of <code>{@link Developer}/{@link Contributor}<\/code>\n     * @param doapType not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#maintainer\">http://usefulinc.com/ns/doap#maintainer<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#developer\">http://usefulinc.com/ns/doap#developer<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#documenter\">http://usefulinc.com/ns/doap#documenter<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#translator\">http://usefulinc.com/ns/doap#translator<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#tester\">http://usefulinc.com/ns/doap#tester<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#helper\">http://usefulinc.com/ns/doap#helper<\/a>\n     * @see <a href=\"http://xmlns.com/foaf/0.1/Person\">http://xmlns.com/foaf/0.1/Person<\/a>\n     * @see <a href=\"http://xmlns.com/foaf/0.1/name\">http://xmlns.com/foaf/0.1/name<\/a>\n     * @see <a href=\"http://xmlns.com/foaf/0.1/mbox\">http://xmlns.com/foaf/0.1/mbox<\/a>\n     * @see <a href=\"http://xmlns.com/foaf/0.1/Organization\">http://xmlns.com/foaf/0.1/Organization<\/a>\n     * @see <a href=\"http://xmlns.com/foaf/0.1/homepage\">http://xmlns.com/foaf/0.1/homepage<\/a>\n     */\n    private void writeContributor( XMLWriter writer, Contributor developerOrContributor, String doapType )\n    {\n        if ( developerOrContributor == null )\n        {\n            return;\n        }\n\n        if ( StringUtils.isEmpty( doapType ) )\n        {\n            throw new IllegalArgumentException( \"doapType is required.\" );\n        }\n\n        String name = developerOrContributor.getName();\n        String email = developerOrContributor.getEmail();\n        String organization = developerOrContributor.getOrganization();\n        String organizationUrl = developerOrContributor.getOrganizationUrl();\n        String homepage = developerOrContributor.getUrl();\n        String nodeId = null;\n\n        // Name is required to write doap\n        if ( StringUtils.isEmpty( name ) )\n        {\n            return;\n        }\n\n        if ( !StringUtils.isEmpty( organization ) || !StringUtils.isEmpty( organizationUrl ) )\n        {\n            DoapUtil.Organization doapOrganization = DoapUtil.addOrganization( organization, organizationUrl );\n            nodeId = DoapUtil.getNodeId();\n            doapOrganization.addMember( nodeId );\n        }\n\n        writer.startElement( doapType );\n        writer.startElement( \"foaf:Person\" );\n        if ( StringUtils.isNotEmpty( nodeId ) )\n        {\n            writer.addAttribute( \"rdf:nodeID\", nodeId );\n        }\n        writer.startElement( \"foaf:name\" );\n        writer.writeText( name );\n        writer.endElement(); // foaf:name\n        if ( StringUtils.isNotEmpty( email ) )\n        {\n            DoapUtil.writeRdfResourceElement( writer, \"foaf:mbox\", \"mailto:\" + email );\n        }\n        if ( StringUtils.isNotEmpty( organization ) || StringUtils.isNotEmpty( organizationUrl ) )\n        {\n            DoapUtil.addOrganization( organization, organizationUrl );\n        }\n        if ( StringUtils.isNotEmpty( homepage ) )\n        {\n            DoapUtil.writeRdfResourceElement( writer, \"foaf:homepage\", homepage );\n        }\n        writer.endElement(); // foaf:Person\n        writer.endElement(); // doapType\n    }","id":15869,"modified_method":"/**\n     * Writer a single developer or contributor\n     *\n     * @param writer not null\n     * @param developerOrContributor not null, instance of <code>{@link Developer}/{@link Contributor}<\/code>\n     * @param doapType not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#maintainer\">http://usefulinc.com/ns/doap#maintainer<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#developer\">http://usefulinc.com/ns/doap#developer<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#documenter\">http://usefulinc.com/ns/doap#documenter<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#translator\">http://usefulinc.com/ns/doap#translator<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#tester\">http://usefulinc.com/ns/doap#tester<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#helper\">http://usefulinc.com/ns/doap#helper<\/a>\n     * @see <a href=\"http://xmlns.com/foaf/0.1/Person\">http://xmlns.com/foaf/0.1/Person<\/a>\n     * @see <a href=\"http://xmlns.com/foaf/0.1/name\">http://xmlns.com/foaf/0.1/name<\/a>\n     * @see <a href=\"http://xmlns.com/foaf/0.1/mbox\">http://xmlns.com/foaf/0.1/mbox<\/a>\n     * @see <a href=\"http://xmlns.com/foaf/0.1/Organization\">http://xmlns.com/foaf/0.1/Organization<\/a>\n     * @see <a href=\"http://xmlns.com/foaf/0.1/homepage\">http://xmlns.com/foaf/0.1/homepage<\/a>\n     */\n    private void writeContributor( XMLWriter writer, Contributor developerOrContributor, String doapType )\n    {\n        if ( developerOrContributor == null )\n        {\n            return;\n        }\n\n        if ( StringUtils.isEmpty( doapType ) )\n        {\n            throw new IllegalArgumentException( \"doapType is required.\" );\n        }\n\n        String name = developerOrContributor.getName();\n        String email = developerOrContributor.getEmail();\n        String organization = developerOrContributor.getOrganization();\n        String organizationUrl = developerOrContributor.getOrganizationUrl();\n        String homepage = developerOrContributor.getUrl();\n        String nodeId = null;\n\n        // Name is required to write doap\n        if ( StringUtils.isEmpty( name ) )\n        {\n            errorMessages.add( \"A <project><developers|contributors><developer|contributor><name/>\"\n                + \"<\/developer|contributor><\/developers|contributors><\/project> parameter is missing.\" );\n            return;\n        }\n\n        if ( !StringUtils.isEmpty( organization ) || !StringUtils.isEmpty( organizationUrl ) )\n        {\n            DoapUtil.Organization doapOrganization = DoapUtil.addOrganization( organization, organizationUrl );\n            nodeId = DoapUtil.getNodeId();\n            doapOrganization.addMember( nodeId );\n        }\n\n        writer.startElement( doapType );\n        writer.startElement( \"foaf:Person\" );\n        if ( StringUtils.isNotEmpty( nodeId ) )\n        {\n            writer.addAttribute( \"rdf:nodeID\", nodeId );\n        }\n        writer.startElement( \"foaf:name\" );\n        writer.writeText( name );\n        writer.endElement(); // foaf:name\n        if ( StringUtils.isNotEmpty( email ) )\n        {\n            DoapUtil.writeRdfResourceElement( writer, \"foaf:mbox\", \"mailto:\" + email );\n        }\n        if ( StringUtils.isNotEmpty( organization ) && StringUtils.isNotEmpty( organizationUrl ) )\n        {\n            try\n            {\n                new URL( organizationUrl );\n\n                DoapUtil.addOrganization( organization, organizationUrl );\n            }\n            catch ( MalformedURLException e )\n            {\n                errorMessages.add( \"A <project><developers|contributors><developer|contributor><organizationUrl>\"\n                    + organizationUrl\n                    + \"<\/organizationUrl><\/developer|contributor><\/developers|contributors><\/project> parameter is not a valid URL.\" );\n            }\n        }\n        if ( StringUtils.isNotEmpty( homepage ) )\n        {\n            try\n            {\n                new URL( homepage );\n\n                DoapUtil.writeRdfResourceElement( writer, \"foaf:homepage\", homepage );\n            }\n            catch ( MalformedURLException e )\n            {\n                errorMessages.add( \"A <project><developers|contributors><developer|contributor><url>\"\n                    + homepage\n                    + \"<\/url><\/developer|contributor><\/developers|contributors><\/project> parameter is not a valid URL.\" );\n            }\n        }\n        writer.endElement(); // foaf:Person\n        writer.endElement(); // doapType\n    }","commit_id":"2e44f1d600190c6b2653197444c7c4e922c7897e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write a Foaf Organization, for instance:\n     *\n     * <pre>\n     *   &lt;<foaf:Organization&gt;\n     *     &lt;foaf:name&gt;YoyoDyne&lt;/foaf:name&gt;\n     *     &lt;foaf:homepage rdf:resource=\"http://yoyodyne.example.org\"/&gt;\n     *     &lt;foaf:member rdf:nodeID=\"benny_profane\"&gt;\n     *   &lt;/foaf:Organization&gt;\n     * <\/pre>\n     *\n     * @param writer not null\n     * @param developersOrContributors list of <code>{@link Developer}/{@link Contributor}<\/code>\n     * @param doapType not null\n     * @see #writeContributor(XMLWriter, Object, String)\n     */\n    private void writeOrganizations( XMLWriter writer )\n    {\n        Set<Entry<String, DoapUtil.Organization>> organizations = DoapUtil.getOrganizations();\n\n        for ( Entry<String, DoapUtil.Organization> organizationEntry : organizations )\n        {\n            DoapUtil.Organization organization = organizationEntry.getValue();\n\n            writer.startElement( \"foaf:Organization\" );\n            if ( !StringUtils.isEmpty( organization.getName() ) )\n            {\n                DoapUtil.writeElement( writer, \"foaf:name\", organization.getName() );\n            }\n            if ( !StringUtils.isEmpty( organization.getUrl() ) )\n            {\n                DoapUtil.writeRdfResourceElement( writer, \"foaf:homepage\", organization.getUrl() );\n            }\n            List<String> members = organization.getMembers();\n            for ( String member : members )\n            {\n                DoapUtil.writeRdfNodeIdElement( writer, \"foaf:member\", member );\n            }\n            writer.endElement(); // foaf:Organization\n        }\n    }","id":15870,"modified_method":"/**\n     * Write a Foaf Organization, for instance:\n     *\n     * <pre>\n     *   &lt;<foaf:Organization&gt;\n     *     &lt;foaf:name&gt;YoyoDyne&lt;/foaf:name&gt;\n     *     &lt;foaf:homepage rdf:resource=\"http://yoyodyne.example.org\"/&gt;\n     *     &lt;foaf:member rdf:nodeID=\"benny_profane\"&gt;\n     *   &lt;/foaf:Organization&gt;\n     * <\/pre>\n     *\n     * @param writer not null\n     * @param developersOrContributors list of <code>{@link Developer}/{@link Contributor}<\/code>\n     * @param doapType not null\n     * @see #writeContributor(XMLWriter, Object, String)\n     */\n    private void writeOrganizations( XMLWriter writer )\n    {\n        Set<Entry<String, DoapUtil.Organization>> organizations = DoapUtil.getOrganizations();\n\n        for ( Entry<String, DoapUtil.Organization> organizationEntry : organizations )\n        {\n            DoapUtil.Organization organization = organizationEntry.getValue();\n\n            writer.startElement( \"foaf:Organization\" );\n            if ( !StringUtils.isEmpty( organization.getName() ) )\n            {\n                DoapUtil.writeElement( writer, \"foaf:name\", organization.getName() );\n            }\n            if ( !StringUtils.isEmpty( organization.getUrl() ) )\n            {\n                try\n                {\n                    new URL( organization.getUrl() );\n\n                    DoapUtil.writeRdfResourceElement( writer, \"foaf:homepage\", organization.getUrl() );\n                }\n                catch ( MalformedURLException e )\n                {\n                    errorMessages.add( \"The organization URL \" + organization.getUrl() + \" is not a valid URL.\" );\n                }\n            }\n            List<String> members = organization.getMembers();\n            for ( String member : members )\n            {\n                DoapUtil.writeRdfNodeIdElement( writer, \"foaf:member\", member );\n            }\n            writer.endElement(); // foaf:Organization\n        }\n    }","commit_id":"2e44f1d600190c6b2653197444c7c4e922c7897e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP download-page and download-mirror.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#download-page\">http://usefulinc.com/ns/doap#download-page<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#download-mirror\">http://usefulinc.com/ns/doap#download-mirror<\/a>\n     */\n    private void writeDownloadPage( XMLWriter writer, MavenProject project )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getDownloadPage() ) )\n        {\n            if ( StringUtils.isNotEmpty( project.getUrl() ) )\n            {\n                doapOptions.setDownloadPage( composeUrl( project.getUrl(), \"/download.html\" ) );\n            }\n        }\n\n        if ( StringUtils.isNotEmpty( doapOptions.getDownloadPage() ) )\n        {\n            XmlWriterUtil.writeLineBreak( writer );\n            XmlWriterUtil.writeCommentText( writer, \"Download page.\", 2 );\n            DoapUtil.writeRdfResourceElement( writer, \"download-page\", doapOptions.getDownloadPage() );\n        }\n\n        if ( StringUtils.isNotEmpty( doapOptions.getDownloadMirror() ) )\n        {\n            XmlWriterUtil.writeLineBreak( writer );\n            XmlWriterUtil.writeCommentText( writer, \"Mirror of software download web page.\", 2 );\n            String[] downloadMirrors = StringUtils.split( doapOptions.getDownloadMirror(), \",\" );\n            for ( String downloadMirror : downloadMirrors )\n            {\n                DoapUtil.writeRdfResourceElement( writer, \"download-mirror\", downloadMirror.trim() );\n            }\n        }\n    }","id":15871,"modified_method":"/**\n     * Write DOAP download-page and download-mirror.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#download-page\">http://usefulinc.com/ns/doap#download-page<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#download-mirror\">http://usefulinc.com/ns/doap#download-mirror<\/a>\n     */\n    private void writeDownloadPage( XMLWriter writer, MavenProject project )\n    {\n        String downloadPage = interpolate( doapOptions.getDownloadPage(), project, settings );\n        if ( StringUtils.isEmpty( downloadPage ) )\n        {\n            addDoapMessage( \"downloadPage\" );\n            return;\n        }\n\n        downloadPage = downloadPage.trim();\n        try\n        {\n            new URL( downloadPage );\n\n            XmlWriterUtil.writeLineBreak( writer );\n            XmlWriterUtil.writeCommentText( writer, \"Download page.\", 2 );\n            DoapUtil.writeRdfResourceElement( writer, \"download-page\", downloadPage );\n        }\n        catch ( MalformedURLException e )\n        {\n            errorMessages.add( \"The <doapOptions><downloadPage>\" + downloadPage\n                + \"<\/downloadPage><\/doapOptions> parameter is not a valid URL.\" );\n        }\n\n        if ( StringUtils.isNotEmpty( doapOptions.getDownloadMirror() ) )\n        {\n            XmlWriterUtil.writeLineBreak( writer );\n            XmlWriterUtil.writeCommentText( writer, \"Mirror of software download web page.\", 2 );\n            String[] downloadMirrors = StringUtils.split( doapOptions.getDownloadMirror(), \",\" );\n            for ( String downloadMirror : downloadMirrors )\n            {\n                downloadMirror = downloadMirror.trim();\n\n                try\n                {\n                    new URL( downloadMirror );\n\n                    DoapUtil.writeRdfResourceElement( writer, \"download-mirror\", downloadMirror );\n                }\n                catch ( MalformedURLException e )\n                {\n                    errorMessages.add( \"The <doapOptions><downloadMirror>\" + downloadMirror\n                        + \"<\/downloadMirror><\/doapOptions> parameter is not a valid URL.\" );\n                }\n            }\n        }\n    }","commit_id":"2e44f1d600190c6b2653197444c7c4e922c7897e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Verify the generation of a DOAP file with ASF extension.\n     *\n     * @throws Exception if any\n     */\n    public void testGeneratedDoapForASF()\n        throws Exception\n    {\n        File pluginXmlFile =\n            new File( getBasedir(),\n                      \"src/test/resources/unit/asf-doap-configuration/asf-doap-configuration-plugin-config.xml\" );\n        DoapMojo mojo = (DoapMojo) lookupMojo( \"generate\", pluginXmlFile );\n        assertNotNull( \"Mojo found.\", mojo );\n\n        MavenProject mavenProject = (MavenProject) getVariableValueFromObject( mojo, \"project\" );\n        assertNotNull( mavenProject );\n\n        // Set some Mojo parameters\n        setVariableValueToObject( mojo, \"remoteRepositories\", getRemoteRepositories() );\n        setVariableValueToObject( mojo, \"about\", mavenProject.getUrl() );\n\n        mojo.execute();\n\n        File doapFile = new File( getBasedir(), \"target/test/unit/asf-doap-configuration/asf-doap-configuration.rdf\" );\n        assertTrue( \"Doap File was not generated!\", doapFile.exists() );\n\n        String readed = readFile( doapFile );\n\n        // Validate\n\n        // ASF DOAP\n        assertTrue( readed.indexOf( \"<rdf:RDF xml:lang=\\\"en\\\" xmlns=\\\"http://usefulinc.com/ns/doap#\\\" \"\n            + \"xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\" \"\n            + \"xmlns:foaf=\\\"http://xmlns.com/foaf/0.1/\\\" \" + \"xmlns:asfext=\\\"http://projects.apache.org/ns/asfext#\\\">\" ) != -1 );\n        if ( StringUtils.isNotEmpty( mavenProject.getUrl() ) )\n        {\n            assertTrue( readed.indexOf( \"<Project rdf:about=\\\"\" + mavenProject.getUrl() + \"\\\">\" ) != -1 );\n            assertTrue( readed.indexOf( \"<homepage rdf:resource=\\\"\" + mavenProject.getUrl() + \"\\\"/>\" ) != -1 );\n        }\n        assertTrue( readed.indexOf( \"<name>Apache \" + mavenProject.getName() + \"<\/name>\" ) != -1 );\n        assertTrue( readed.indexOf( \"<programming-language>java<\/programming-language>\" ) != -1 );\n\n        // ASF ext\n        assertTrue( readed.indexOf( \"<asfext:pmc rdf:resource=\\\"\" + mavenProject.getUrl() + \"\\\"/>\" ) != -1 );\n        assertTrue( readed.indexOf( \"<asfext:name>Apache \" + mavenProject.getName() + \"<\/asfext:name>\" ) != -1 );\n    }","id":15872,"modified_method":"/**\n     * Verify the generation of a DOAP file with ASF extension.\n     *\n     * @throws Exception if any\n     */\n    public void testGeneratedDoapForASF()\n        throws Exception\n    {\n        File pluginXmlFile =\n            new File( getBasedir(),\n                      \"src/test/resources/unit/asf-doap-configuration/asf-doap-configuration-plugin-config.xml\" );\n        DoapMojo mojo = (DoapMojo) lookupMojo( \"generate\", pluginXmlFile );\n        assertNotNull( \"Mojo found.\", mojo );\n\n        MavenProject mavenProject = (MavenProject) getVariableValueFromObject( mojo, \"project\" );\n        assertNotNull( mavenProject );\n\n        // Set some Mojo parameters\n        setVariableValueToObject( mojo, \"remoteRepositories\", getRemoteRepositories() );\n        setVariableValueToObject( mojo, \"about\", mavenProject.getUrl() );\n\n        mojo.execute();\n\n        File doapFile = new File( getBasedir(), \"target/test/unit/asf-doap-configuration/asf-doap-configuration.rdf\" );\n        assertTrue( \"Doap File was not generated!\", doapFile.exists() );\n\n        String readed = readFile( doapFile );\n\n        // Validate\n\n        // ASF DOAP\n        assertTrue( readed.indexOf( \"<rdf:RDF xml:lang=\\\"en\\\" xmlns=\\\"http://usefulinc.com/ns/doap#\\\" \"\n            + \"xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\" \"\n            + \"xmlns:foaf=\\\"http://xmlns.com/foaf/0.1/\\\" \" + \"xmlns:asfext=\\\"http://projects.apache.org/ns/asfext#\\\">\" ) != -1 );\n        if ( StringUtils.isNotEmpty( mavenProject.getUrl() ) )\n        {\n            assertTrue( readed.indexOf( \"<Project rdf:about=\\\"\" + mavenProject.getUrl() + \"\\\">\" ) != -1 );\n            assertTrue( readed.indexOf( \"<homepage rdf:resource=\\\"\" + mavenProject.getUrl() + \"\\\"/>\" ) != -1 );\n        }\n        assertTrue( readed.indexOf( \"<name>Apache \" + mavenProject.getName() + \"<\/name>\" ) != -1 );\n        assertTrue( readed.indexOf( \"<programming-language>Java<\/programming-language>\" ) != -1 );\n\n        // ASF ext\n        assertTrue( readed.indexOf( \"<asfext:pmc rdf:resource=\\\"\" + mavenProject.getUrl() + \"\\\"/>\" ) != -1 );\n        assertTrue( readed.indexOf( \"<asfext:name>Apache \" + mavenProject.getName() + \"<\/asfext:name>\" ) != -1 );\n    }","commit_id":"2e44f1d600190c6b2653197444c7c4e922c7897e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Verify the generation of a DOAP file from an artifact.\n     *\n     * @throws Exception if any\n     */\n    public void testGeneratedDoapArtifact()\n        throws Exception\n    {\n        File pluginXmlFile =\n            new File( getBasedir(), \"src/test/resources/unit/doap-configuration/doap-configuration-plugin-config.xml\" );\n        DoapMojo mojo = (DoapMojo) lookupMojo( \"generate\", pluginXmlFile );\n        assertNotNull( \"Mojo found.\", mojo );\n\n        MavenProject mavenProject = (MavenProject) getVariableValueFromObject( mojo, \"project\" );\n        assertNotNull( mavenProject );\n\n        // Set some Mojo parameters\n        setVariableValueToObject( mojo, \"remoteRepositories\", getRemoteRepositories() );\n        setVariableValueToObject( mojo, \"about\", mavenProject.getUrl() );\n        DoapArtifact artifact = new DoapArtifact();\n        artifact.setGroupId( \"org.apache.maven\" );\n        artifact.setArtifactId( \"maven-parent\" );\n        artifact.setVersion( \"18\" );\n        setVariableValueToObject( mojo, \"artifact\", artifact );\n        setVariableValueToObject( mojo, \"outputDirectory\", \"target/test/unit/doap-configuration/\" );\n\n        mojo.execute();\n\n        File doapFile = new File( getBasedir(), \"target/test/unit/doap-configuration/doap_maven-parent.rdf\" );\n        assertTrue( \"Doap File was not generated!\", doapFile.exists() );\n\n        String readed = readFile( doapFile );\n\n        // Validate\n\n        // Pure DOAP\n        assertTrue( readed.indexOf( \"<rdf:RDF xml:lang=\\\"en\\\" xmlns=\\\"http://usefulinc.com/ns/doap#\\\" \"\n            + \"xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\" \"\n            + \"xmlns:foaf=\\\"http://xmlns.com/foaf/0.1/\\\" \" + \"xmlns:asfext=\\\"http://projects.apache.org/ns/asfext#\\\">\" ) != -1 );\n        if ( StringUtils.isNotEmpty( mavenProject.getUrl() ) )\n        {\n            assertTrue( readed.indexOf( \"<Project rdf:about=\\\"http://maven.apache.org/\\\">\" ) != -1 );\n            assertTrue( readed.indexOf( \"<homepage rdf:resource=\\\"http://maven.apache.org/\\\"/>\" ) != -1 );\n        }\n        assertTrue( readed.indexOf( \"<name>Apache Maven<\/name>\" ) != -1 );\n\n        // ASF ext\n        assertTrue( readed.indexOf( \"<asfext:pmc rdf:resource=\\\"http://maven.apache.org/\\\"/>\" ) != -1 );\n        assertTrue( readed.indexOf( \"<asfext:name>Apache Maven<\/asfext:name>\" ) != -1 );\n    }","id":15873,"modified_method":"/**\n     * Verify the generation of a DOAP file from an artifact.\n     *\n     * @throws Exception if any\n     */\n    public void testGeneratedDoapArtifact()\n        throws Exception\n    {\n        File pluginXmlFile =\n            new File( getBasedir(), \"src/test/resources/unit/doap-configuration/doap-configuration-plugin-config.xml\" );\n        DoapMojo mojo = (DoapMojo) lookupMojo( \"generate\", pluginXmlFile );\n        assertNotNull( \"Mojo found.\", mojo );\n\n        MavenProject mavenProject = (MavenProject) getVariableValueFromObject( mojo, \"project\" );\n        assertNotNull( mavenProject );\n\n        // Set some Mojo parameters\n        setVariableValueToObject( mojo, \"remoteRepositories\", getRemoteRepositories() );\n        setVariableValueToObject( mojo, \"about\", mavenProject.getUrl() );\n        DoapArtifact artifact = new DoapArtifact();\n        artifact.setGroupId( \"org.codehaus.plexus\" );\n        artifact.setArtifactId( \"plexus-utils\" );\n        artifact.setVersion( \"1.5.5\" );\n        setVariableValueToObject( mojo, \"artifact\", artifact );\n        setVariableValueToObject( mojo, \"outputDirectory\", \"target/test/unit/doap-configuration/\" );\n\n        mojo.execute();\n\n        File doapFile = new File( getBasedir(), \"target/test/unit/doap-configuration/doap_plexus-utils.rdf\" );\n        assertTrue( \"Doap File was not generated!\", doapFile.exists() );\n\n        String readed = readFile( doapFile );\n\n        // Validate\n\n        // Pure DOAP\n        assertTrue( readed.indexOf( \"<rdf:RDF xml:lang=\\\"en\\\" xmlns=\\\"http://usefulinc.com/ns/doap#\\\" \"\n            + \"xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\" \"\n            + \"xmlns:foaf=\\\"http://xmlns.com/foaf/0.1/\\\">\" ) != -1 );\n        assertTrue( readed.indexOf( \"<name>Plexus Common Utilities<\/name>\" ) != -1 );\n    }","commit_id":"2e44f1d600190c6b2653197444c7c4e922c7897e","url":"https://github.com/apache/maven-plugins"},{"original_method":"@Configuration\n    public static Option[] configure() throws Exception {\n\n        Option[] options = combine(\n                // Default karaf environment\n                Helper.getDefaultOptions(\n                    // this is how you set the default log level when using pax logging (logProfile)\n                    Helper.setLogLevel(\"WARN\")),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-10.xml\"))\n                        .add(TestProducer.class)\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle10\")\n                        .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                        .build()).noStart(),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-11.xml\"))\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle11\")\n                        .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                        .build()).noStart(),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-12.xml\"))\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle12\")\n                        .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                        .build()).noStart(),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-14.xml\"))\n                        .add(TestProxySender.class)\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle14\")\n                        .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                        .build()).noStart(),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-15.xml\"))\n                        .add(TestProxySender.class)\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle15\")\n                        .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                        .build()).noStart(),\n                        \n                bundle(newBundle()\n                       .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-18.xml\"))\n                       .add(JsseUtilTester.class)\n                       .add(\"localhost.ks\", OSGiBlueprintTestSupport.class.getResourceAsStream(\"/org/apache/camel/itest/osgi/util/jsse/localhost.ks\"))\n                       .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle18\")\n                       .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                       .build()).noStart(),\n                        \n                // install the spring, http features first\n                scanFeatures(getKarafFeatureUrl(), \"jetty\"),\n                // using the features to install the camel components\n                scanFeatures(getCamelKarafFeatureUrl(),\n                        \"camel-core\", \"camel-blueprint\", \"camel-test\", \"camel-mail\", \"camel-jaxb\", \"camel-jms\"),\n\n                workingDirectory(\"target/paxrunner/\"),\n\n\n                felix(),\n                equinox());\n                \n                // for remote debugging\n                // vmOption(\"-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5008\"));\n\n        return options;\n    }","id":15874,"modified_method":"@Configuration\n    public static Option[] configure() throws Exception {\n\n        Option[] options = combine(\n                getDefaultCamelKarafOptions(),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-10.xml\"))\n                        .add(TestProducer.class)\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle10\")\n                        .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                        .build()).noStart(),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-11.xml\"))\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle11\")\n                        .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                        .build()).noStart(),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-12.xml\"))\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle12\")\n                        .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                        .build()).noStart(),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-14.xml\"))\n                        .add(TestProxySender.class)\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle14\")\n                        .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                        .build()).noStart(),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-15.xml\"))\n                        .add(TestProxySender.class)\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle15\")\n                        .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                        .build()).noStart(),\n                        \n                bundle(newBundle()\n                       .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-18.xml\"))\n                       .add(JsseUtilTester.class)\n                       .add(\"localhost.ks\", OSGiBlueprintTestSupport.class.getResourceAsStream(\"/org/apache/camel/itest/osgi/util/jsse/localhost.ks\"))\n                       .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle18\")\n                       .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                       .build()).noStart(),\n                       \n                // using the features to install the camel components\n                scanFeatures(getCamelKarafFeatureUrl(),\n                        \"camel-blueprint\", \"camel-test\", \"camel-mail\", \"camel-jaxb\", \"camel-jms\"));\n                \n                // for remote debugging\n                // vmOption(\"-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5008\"));\n\n        return options;\n    }","commit_id":"88a3e9cc07c9ca1011c608f885be3f68cb6bfe6c","url":"https://github.com/apache/camel"},{"original_method":"@Configuration\n    public static Option[] configure() throws Exception {\n\n        Option[] options = combine(\n                // Default karaf environment\n                Helper.getDefaultOptions(\n                // this is how you set the default log level when using pax logging (logProfile)\n                     Helper.setLogLevel(\"WARN\")),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-6.xml\"))\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle6\")\n                        .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                        .build()).noStart(),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-7.xml\"))\n                        .add(TestInterceptStrategy.class)\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle7\")\n                        .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                        .build()).noStart(),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-8.xml\"))\n                        .add(\"org/apache/camel/component/properties/cheese.properties\", OSGiBlueprintTestSupport.class.getResource(\"cheese.properties\"))\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle8\")\n                        .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                        .build()).noStart(),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-9.xml\"))\n                        .add(TestRouteBuilder.class)\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle9\")\n                        .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                        .build()).noStart(),\n                        \n                // install the spring, http features first\n                scanFeatures(getKarafFeatureUrl(), \"spring\", \"jetty\"),\n\n                // using the features to install the camel components\n                scanFeatures(getCamelKarafFeatureUrl(),\n                        \"camel-core\", \"camel-blueprint\", \"camel-test\", \"camel-ftp\", \"camel-jackson\", \"camel-jms\"),\n\n                workingDirectory(\"target/paxrunner/\"),\n\n                felix(),\n                equinox());\n\n        return options;\n    }","id":15875,"modified_method":"@Configuration\n    public static Option[] configure() throws Exception {\n\n        Option[] options = combine(\n                getDefaultCamelKarafOptions(),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-6.xml\"))\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle6\")\n                        .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                        .build()).noStart(),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-7.xml\"))\n                        .add(TestInterceptStrategy.class)\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle7\")\n                        .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                        .build()).noStart(),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-8.xml\"))\n                        .add(\"org/apache/camel/component/properties/cheese.properties\", OSGiBlueprintTestSupport.class.getResource(\"cheese.properties\"))\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle8\")\n                        .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                        .build()).noStart(),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-9.xml\"))\n                        .add(TestRouteBuilder.class)\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle9\")\n                        .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                        .build()).noStart(),\n                        \n                // using the features to install the camel components\n                scanFeatures(getCamelKarafFeatureUrl(),\n                        \"camel-blueprint\", \"camel-ftp\", \"camel-jackson\", \"camel-jms\"));\n\n        return options;\n    }","commit_id":"88a3e9cc07c9ca1011c608f885be3f68cb6bfe6c","url":"https://github.com/apache/camel"},{"original_method":"@Configuration\n    public static Option[] configure() throws Exception {\n\n        Option[] options = combine(\n                // Default karaf environment\n                Helper.getDefaultOptions(\n                        // this is how you set the default log level when using pax logging (logProfile)\n                        Helper.setLogLevel(\"WARN\")),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-19.xml\"))\n                        .add(\"org/apache/camel/itest/osgi/blueprint/example.xsl\", OSGiBlueprintTestSupport.class.getResource(\"example.xsl\"))\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle19\")\n                        .build()).noStart(),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-20.xml\"))\n                        .add(\"org/apache/camel/itest/osgi/blueprint/example.vm\", OSGiBlueprintTestSupport.class.getResource(\"example.vm\"))\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle20\")\n                        .build()).noStart(),\n                        \n                // install the spring, http features first\n                scanFeatures(getKarafFeatureUrl(), \"spring\", \"jetty\"),\n\n                // using the features to install the camel components\n                scanFeatures(getCamelKarafFeatureUrl(),\n                        \"camel-core\", \"camel-test\", \"camel-blueprint\", \"camel-spring\", \"camel-velocity\"),\n\n                workingDirectory(\"target/paxrunner/\"),\n\n                felix(),\n                equinox());\n\n        return options;\n    }","id":15876,"modified_method":"@Configuration\n    public static Option[] configure() throws Exception {\n\n        Option[] options = combine(\n                getDefaultCamelKarafOptions(),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-19.xml\"))\n                        .add(\"org/apache/camel/itest/osgi/blueprint/example.xsl\", OSGiBlueprintTestSupport.class.getResource(\"example.xsl\"))\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle19\")\n                        .build()).noStart(),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-20.xml\"))\n                        .add(\"org/apache/camel/itest/osgi/blueprint/example.vm\", OSGiBlueprintTestSupport.class.getResource(\"example.vm\"))\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle20\")\n                        .build()).noStart(),\n                \n                // using the features to install the camel components\n                scanFeatures(getCamelKarafFeatureUrl(),\n                        \"camel-blueprint\", \"camel-velocity\"));\n\n        return options;\n    }","commit_id":"88a3e9cc07c9ca1011c608f885be3f68cb6bfe6c","url":"https://github.com/apache/camel"},{"original_method":"@Configuration\n    public static Option[] configure() throws Exception {\n\n        \n        Option[] options = combine(\n             // Default karaf environment\n            Helper.getDefaultOptions(\n                  // this is how you set the default log level when using pax logging (logProfile)\n                Helper.setLogLevel(\"WARN\")),\n\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-1.xml\"))\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle1\")\n                        .build()).noStart(),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-2.xml\"))\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle2\")\n                        .build()).noStart(),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-3.xml\"))\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle3\")\n                        .build()).noStart(),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-4.xml\"))\n                        .add(TestRouteBuilder.class)\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle4\")\n                        .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                        .build()).noStart(),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-5.xml\"))\n                        .add(TestRouteBuilder.class)\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle5\")\n                        .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                        .build()).noStart(),\n                        \n                // install the spring, http features first\n                scanFeatures(getKarafFeatureUrl(), \"spring\", \"spring-dm\", \"jetty\"),\n\n                 // using the features to install the camel components\n                scanFeatures(getCamelKarafFeatureUrl(),\n                        \"camel-core\", \"camel-blueprint\", \"camel-test\", \"camel-ftp\", \"camel-jackson\", \"camel-jms\"),\n\n                workingDirectory(\"target/paxrunner/\"),\n\n\n\n                felix(),\n                equinox());\n\n        return options;\n    }","id":15877,"modified_method":"@Configuration\n    public static Option[] configure() throws Exception {\n\n        \n        Option[] options = combine(\n                getDefaultCamelKarafOptions(),\n\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-1.xml\"))\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle1\")\n                        .build()).noStart(),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-2.xml\"))\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle2\")\n                        .build()).noStart(),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-3.xml\"))\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle3\")\n                        .build()).noStart(),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-4.xml\"))\n                        .add(TestRouteBuilder.class)\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle4\")\n                        .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                        .build()).noStart(),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-5.xml\"))\n                        .add(TestRouteBuilder.class)\n                        .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintTestBundle5\")\n                        .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                        .build()).noStart(),\n                \n                 // using the features to install the camel components\n                scanFeatures(getCamelKarafFeatureUrl(),\n                        \"camel-blueprint\", \"camel-test\", \"camel-ftp\", \"camel-jackson\", \"camel-jms\"));\n\n        return options;\n    }","commit_id":"88a3e9cc07c9ca1011c608f885be3f68cb6bfe6c","url":"https://github.com/apache/camel"},{"original_method":"@Configuration\n    public static Option[] configure() throws Exception {\n\n        Option[] options = combine(\n            // Default karaf environment\n            Helper.getDefaultOptions(\n                // this is how you set the default log level when using pax logging (logProfile)\n                Helper.setLogLevel(\"WARN\")),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-13.xml\"))\n                        .set(Constants.BUNDLE_SYMBOLICNAME, OSGiBlueprintHelloWorldTest.class.getName())\n                        .build()).noStart(),\n                        \n                // install the http features first\n                scanFeatures(getKarafFeatureUrl(), \"jetty\"),\n\n                // using the features to install the camel components\n                scanFeatures(getCamelKarafFeatureUrl(),\n                        \"camel-core\", \"camel-blueprint\", \"camel-test\"),\n\n                workingDirectory(\"target/paxrunner/\"),\n\n                felix(), equinox());\n\n        return options;\n    }","id":15878,"modified_method":"@Configuration\n    public static Option[] configure() throws Exception {\n\n        Option[] options = combine(\n                getDefaultCamelKarafOptions(),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", OSGiBlueprintTestSupport.class.getResource(\"blueprint-13.xml\"))\n                        .set(Constants.BUNDLE_SYMBOLICNAME, OSGiBlueprintHelloWorldTest.class.getName())\n                        .build()).noStart(),\n                \n                // using the features to install the camel components\n                scanFeatures(getCamelKarafFeatureUrl(),\n                        \"camel-blueprint\"));\n\n        return options;\n    }","commit_id":"88a3e9cc07c9ca1011c608f885be3f68cb6bfe6c","url":"https://github.com/apache/camel"},{"original_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n            // Default karaf environment\n            Helper.getDefaultOptions(\n            // this is how you set the default log level when using pax logging (logProfile)\n                Helper.setLogLevel(\"WARN\")),\n            Helper.loadKarafStandardFeatures(\"spring\", \"jetty\", \"http\", \"war\"),\n            // set the system property for pax web\n            org.ops4j.pax.exam.CoreOptions.systemProperty(\"org.osgi.service.http.port\").value(\"9080\"),\n            \n            // using the features to install the camel components             \n            scanFeatures(getCamelKarafFeatureUrl(),                         \n                          \"camel-core\", \"camel-spring\", \"camel-test\", \"camel-http\", \"camel-servlet\"),\n\n            workingDirectory(\"target/paxrunner/\"),\n\n            felix(),\n            equinox());\n        \n        return options;\n    }","id":15879,"modified_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n            getDefaultCamelKarafOptions(),\n            // install the war features first\n            scanFeatures(getKarafFeatureUrl(),  \"war\"),\n            // set the system property for pax web\n            org.ops4j.pax.exam.CoreOptions.systemProperty(\"org.osgi.service.http.port\").value(\"9080\"),\n\n            // using the features to install the camel components\n            scanFeatures(getCamelKarafFeatureUrl(),\n                \"camel-blueprint\", \"camel-http\", \"camel-servlet\")\n\n        );\n        return options;\n    }","commit_id":"0c98352c2c6b361091f81127e1af0d18e8445496","url":"https://github.com/apache/camel"},{"original_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n            // Default karaf environment\n            Helper.getDefaultOptions(\n            // this is how you set the default log level when using pax logging (logProfile)\n                Helper.setLogLevel(\"WARN\")),\n            Helper.loadKarafStandardFeatures(\"spring\", \"http\", \"war\"),  \n            // set the system property for pax web\n            org.ops4j.pax.exam.CoreOptions.systemProperty(\"org.osgi.service.http.port\").value(\"9080\"),\n  \n            // using the features to install the camel components             \n            scanFeatures(getCamelKarafFeatureUrl(),                         \n                \"camel-core\", \"camel-blueprint\", \"camel-spring\", \"camel-test\", \"camel-http\", \"camel-servlet\"),\n \n            workingDirectory(\"target/paxrunner/\"),\n            //PaxRunnerOptions.vmOption(\"-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005\"),\n\n            felix(),\n            equinox()\n        );\n        \n        return options;\n    }","id":15880,"modified_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n            getDefaultCamelKarafOptions(),\n            // install the war features first\n            scanFeatures(getKarafFeatureUrl(),  \"war\"),\n            // set the system property for pax web\n            org.ops4j.pax.exam.CoreOptions.systemProperty(\"org.osgi.service.http.port\").value(\"9080\"),\n  \n            // using the features to install the camel components             \n            scanFeatures(getCamelKarafFeatureUrl(),                         \n                \"camel-blueprint\", \"camel-http\", \"camel-servlet\")\n\n        );\n        \n        return options;\n    }","commit_id":"0c98352c2c6b361091f81127e1af0d18e8445496","url":"https://github.com/apache/camel"},{"original_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n            // Default karaf environment\n            Helper.getDefaultOptions(\n            // this is how you set the default log level when using pax logging (logProfile)\n                Helper.setLogLevel(\"WARN\")),\n                \n            // install the spring, http features first\n            scanFeatures(getKarafFeatureUrl(), \"spring\", \"spring-dm\", \"jetty\"),\n            \n            // using the features to install the camel components\n            scanFeatures(getCamelKarafFeatureUrl(),                         \n                          \"camel-core\", \"camel-spring\", \"camel-test\", \"camel-ftp\"),\n\n            workingDirectory(\"target/paxrunner/\"),\n\n            felix(), equinox());\n        \n        return options;\n    }","id":15881,"modified_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n            getDefaultCamelKarafOptions(),\n            // using the features to install the camel components\n            scanFeatures(getCamelKarafFeatureUrl(), \"camel-ftp\")\n\n            );\n        \n        return options;\n    }","commit_id":"1df08ac24a5c8466b074554566294c02a21fdd77","url":"https://github.com/apache/camel"},{"original_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n            // Default karaf environment\n            Helper.getDefaultOptions(\n            // this is how you set the default log level when using pax logging (logProfile)\n                Helper.setLogLevel(\"WARN\")),\n            // install the spring, http features first\n            scanFeatures(getKarafFeatureUrl(), \"spring\", \"spring-dm\", \"jetty\"),\n                \n            // using the features to install the camel components\n            scanFeatures(getCamelKarafFeatureUrl(),\n                          \"camel-core\", \"camel-spring\", \"camel-test\", \"camel-quartz\"),\n\n            workingDirectory(\"target/paxrunner/\"),\n\n            // TODO: test hang on shutdown on equionox\n            felix());\n\n        return options;\n    }","id":15882,"modified_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n            getDefaultCamelKarafOptions(),\n            // using the features to install the other camel components\n            scanFeatures(getCamelKarafFeatureUrl(), \"camel-quartz\"));\n\n\n        return options;\n    }","commit_id":"1df08ac24a5c8466b074554566294c02a21fdd77","url":"https://github.com/apache/camel"},{"original_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n                // Default karaf environment\n                Helper.getDefaultOptions(\n                        // this is how you set the default log level when using pax logging (logProfile)\n                        Helper.setLogLevel(\"WARN\")),\n\n                // install the spring.\n                scanFeatures(getKarafFeatureUrl(), \"spring\"),\n                // using the features to install the camel components\n                scanFeatures(getCamelKarafFeatureUrl(),\n                        \"camel-core\", \"camel-spring\", \"camel-test\", \"camel-jclouds\"),\n                workingDirectory(\"target/paxrunner/\"),\n                //vmOption(\"-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005\"),\n                felix(), equinox());\n\n        return options;\n    }","id":15883,"modified_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n                getDefaultCamelKarafOptions(),\n                // using the features to install the camel components\n                scanFeatures(getCamelKarafFeatureUrl(), \"camel-jclouds\"));\n\n        return options;\n    }","commit_id":"226c94fba0b3a4eca7917f4f09b33e39ebfe84b1","url":"https://github.com/apache/camel"},{"original_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n        // Default karaf environment\n                Helper.getDefaultOptions(\n                    // this is how you set the default log level when using pax\n                    // logging (logProfile)\n                    Helper.setLogLevel(\"WARN\")),\n                    \n                    // install the spring, http features first\n                    scanFeatures(getKarafFeatureUrl(), \"spring\", \"spring-dm\", \"jetty\"),\n\n                    // using the features to install AMQ\n                    scanFeatures(\"mvn:org.apache.activemq/activemq-karaf/5.5.0/xml/features\",\n                            \"activemq\"),\n\n                    // using the features to install the camel components\n                    scanFeatures(getCamelKarafFeatureUrl(),\n                            \"camel-core\", \"camel-spring\", \"camel-test\", \"camel-jms\", \"camel-cache\"),\n\n                workingDirectory(\"target/paxrunner/\"),\n\n                felix());\n\n        return options;\n    }","id":15884,"modified_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n                // Default karaf environment\n                getDefaultCamelKarafOptions(),\n                // using the features to install the camel components\n                scanFeatures(getCamelKarafFeatureUrl(), \"jetty\", \"camel-jms\", \"camel-cache\"),\n\n                // using the features to install AMQ\n                scanFeatures(\"mvn:org.apache.activemq/activemq-karaf/5.5.0/xml/features\",\n                        \"activemq\"),\n\n                felix());\n\n        return options;\n    }","commit_id":"226c94fba0b3a4eca7917f4f09b33e39ebfe84b1","url":"https://github.com/apache/camel"},{"original_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n            // Default karaf environment\n            Helper.getDefaultOptions(\n            // this is how you set the default log level when using pax logging (logProfile)\n                Helper.setLogLevel(\"WARN\")),\n                \n            mavenBundle().groupId(\"org.apache.mina\").artifactId(\"mina-core\").version(\"2.0.0\"),\n            mavenBundle().groupId(\"org.apache.ftpserver\").artifactId(\"ftpserver-core\").version(\"1.0.5\"),\n            mavenBundle().groupId(\"org.apache.ftpserver\").artifactId(\"ftplet-api\").version(\"1.0.5\"),\n\n            // install the spring, http features first\n            scanFeatures(getKarafFeatureUrl(), \"spring\", \"spring-dm\", \"jetty\"),\n            \n            // using the features to install the camel components\n            scanFeatures(getCamelKarafFeatureUrl(),                         \n                          \"camel-core\", \"camel-spring\", \"camel-test\", \"camel-ftp\"),\n\n            // TODO: our app need to import the FTP server stuff\n\n            workingDirectory(\"target/paxrunner/\"),\n\n            /*felix(),*/ equinox());\n        \n        return options;\n    }","id":15885,"modified_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n\n            getDefaultCamelKarafOptions(),\n            // using the features to install the camel components\n            scanFeatures(getCamelKarafFeatureUrl(), \"jetty\", \"camel-ftp\"),\n\n            // ftp server bundles\n            mavenBundle().groupId(\"org.apache.mina\").artifactId(\"mina-core\").version(\"2.0.0\"),\n            mavenBundle().groupId(\"org.apache.ftpserver\").artifactId(\"ftpserver-core\").version(\"1.0.5\"),\n            mavenBundle().groupId(\"org.apache.ftpserver\").artifactId(\"ftplet-api\").version(\"1.0.5\"),\n\n            /*felix(),*/ equinox());\n        \n        return options;\n    }","commit_id":"226c94fba0b3a4eca7917f4f09b33e39ebfe84b1","url":"https://github.com/apache/camel"},{"original_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n                // Default karaf environment\n                Helper.getDefaultOptions(\n                        // this is how you set the default log level when using pax logging (logProfile)\n                        Helper.setLogLevel(\"WARN\")),\n                new Customizer() {\n                    @Override\n                    public InputStream customizeTestProbe(InputStream testProbe) {\n                        return modifyBundle(testProbe)\n                                .add(SendEmail.class)\n                                .add(\"core-default.xml\", HdfsRouteTest.class.getResource(\"core-default.xml\"))\n                                        //.add(\"hdfs-default.xml\", HdfsRouteTest.class.getResource(\"hdfs-default.xml\"))\n                                .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelHdfsTestBundle\")\n                                .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                                .build();\n                    }\n                },\n\n                // install the spring.\n                scanFeatures(getKarafFeatureUrl(), \"spring\"),\n                // using the features to install the camel components\n                scanFeatures(getCamelKarafFeatureUrl(),\n                        \"camel-core\", \"camel-spring\", \"camel-test\", \"camel-hdfs\"),\n                workingDirectory(\"target/paxrunner/\"),\n                //vmOption(\"-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005\"),\n                felix(), equinox());\n\n        return options;\n    }","id":15886,"modified_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n\n                getDefaultCamelKarafOptions(),\n                // using the features to install the camel components\n                scanFeatures(getCamelKarafFeatureUrl(), \"camel-hdfs\"),\n\n                new Customizer() {\n                    @Override\n                    public InputStream customizeTestProbe(InputStream testProbe) {\n                        return modifyBundle(testProbe)\n                                .add(SendEmail.class)\n                                .add(\"core-default.xml\", HdfsRouteTest.class.getResource(\"core-default.xml\"))\n                                        //.add(\"hdfs-default.xml\", HdfsRouteTest.class.getResource(\"hdfs-default.xml\"))\n                                .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelHdfsTestBundle\")\n                                .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                                .build();\n                    }\n                });\n\n        return options;\n    }","commit_id":"226c94fba0b3a4eca7917f4f09b33e39ebfe84b1","url":"https://github.com/apache/camel"},{"original_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n            // Default karaf environment\n            Helper.getDefaultOptions(\n            // this is how you set the default log level when using pax logging (logProfile)\n                Helper.setLogLevel(\"WARN\")),\n                \n            // install the spring.\n            scanFeatures(getKarafFeatureUrl(), \"spring\"),\n            // using the features to install the camel components             \n            scanFeatures(getCamelKarafFeatureUrl(),                         \n                          \"camel-core\", \"camel-spring\", \"camel-test\", \"camel-jpa\"),\n            \n            mavenBundle().groupId(\"org.apache.derby\").artifactId(\"derby\").version(\"10.4.2.0\"),\n            workingDirectory(\"target/paxrunner/\"),\n\n            felix(), equinox());\n        \n        return options;\n    }","id":15887,"modified_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n\n            getDefaultCamelKarafOptions(),\n            // using the features to install the camel components\n            scanFeatures(getCamelKarafFeatureUrl(), \"camel-jpa\"),\n\n            // use derby as the database\n            mavenBundle().groupId(\"org.apache.derby\").artifactId(\"derby\").version(\"10.4.2.0\"));\n\n        return options;\n    }","commit_id":"226c94fba0b3a4eca7917f4f09b33e39ebfe84b1","url":"https://github.com/apache/camel"},{"original_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n                // Default karaf environment\n                Helper.getDefaultOptions(\n                        // this is how you set the default log level when using pax logging (logProfile)\n                        Helper.setLogLevel(\"WARN\")),\n                new Customizer() {\n                    @Override\n                    public InputStream customizeTestProbe(InputStream testProbe) {\n                        return modifyBundle(testProbe)\n                                .add(SomeObject.class)\n                                .add(\"META-INF/persistence.xml\", KratiBlueprintRouteTest.class.getResource(\"/META-INF/persistence.xml\"))\n                                .add(\"OSGI-INF/blueprint/test.xml\", KratiBlueprintRouteTest.class.getResource(\"blueprintCamelContext.xml\"))\n                                .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintKratiTestBundle\")\n                                .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                                .build();\n                    }\n                },\n                // install the spring.\n                scanFeatures(getKarafFeatureUrl(), \"spring\"),\n                // using the features to install the camel components\n                scanFeatures(getCamelKarafFeatureUrl(),\n                         \"camel-core\", \"camel-blueprint\", \"camel-test\", \"camel-krati\"),\n\n                workingDirectory(\"target/paxrunner/\"),\n                //vmOption(\"-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005\"),\n                felix(), equinox());\n\n        return options;\n    }","id":15888,"modified_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n\n                getDefaultCamelKarafOptions(),\n                // using the features to install the camel components\n                scanFeatures(getCamelKarafFeatureUrl(), \"camel-blueprint\", \"camel-krati\"),\n\n                new Customizer() {\n                    @Override\n                    public InputStream customizeTestProbe(InputStream testProbe) {\n                        return modifyBundle(testProbe)\n                                .add(SomeObject.class)\n                                .add(\"META-INF/persistence.xml\", KratiBlueprintRouteTest.class.getResource(\"/META-INF/persistence.xml\"))\n                                .add(\"OSGI-INF/blueprint/test.xml\", KratiBlueprintRouteTest.class.getResource(\"blueprintCamelContext.xml\"))\n                                .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintKratiTestBundle\")\n                                .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                                .build();\n                    }\n                });\n\n        return options;\n    }","commit_id":"226c94fba0b3a4eca7917f4f09b33e39ebfe84b1","url":"https://github.com/apache/camel"},{"original_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n                // Default karaf environment\n                Helper.getDefaultOptions(\n                        // this is how you set the default log level when using pax logging (logProfile)\n                        Helper.setLogLevel(\"WARN\")),\n\n                // install the spring.\n                scanFeatures(getKarafFeatureUrl(), \"spring\"),\n                // using the features to install the camel components\n                scanFeatures(getCamelKarafFeatureUrl(),\n                        \"camel-core\", \"camel-spring\", \"camel-test\", \"camel-krati\"),\n\n                workingDirectory(\"target/paxrunner/\"),\n                //vmOption(\"-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005\"),\n                felix(), equinox());\n\n        return options;\n    }","id":15889,"modified_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n                getDefaultCamelKarafOptions(),\n                // using the features to install the camel components\n                scanFeatures(getCamelKarafFeatureUrl(), \"camel-krati\"));\n\n        return options;\n    }","commit_id":"226c94fba0b3a4eca7917f4f09b33e39ebfe84b1","url":"https://github.com/apache/camel"},{"original_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n            // Default karaf environment\n            Helper.getDefaultOptions(\n            // this is how you set the default log level when using pax logging (logProfile)\n                Helper.setLogLevel(\"WARN\")),\n            // install the spring, http features first\n            scanFeatures(getKarafFeatureUrl(), \"spring\", \"spring-dm\", \"jetty\"),\n                \n            // using the features to install the camel components             \n            scanFeatures(getCamelKarafFeatureUrl(),                         \n                          \"camel-core\", \"camel-spring\", \"camel-test\"),\n            \n            // using the java mail API bundle\n            mavenBundle().groupId(\"org.apache.servicemix.specs\").artifactId(\"org.apache.servicemix.specs.javamail-api-1.4\").version(\"1.3.0\"),\n                          \n            mavenBundle().groupId(\"org.apache.camel\").artifactId(\"camel-mail\").versionAsInProject(),\n            \n            // Added the mock_java_mail bundle for testing\n            // just using the mock_java_mail version for testing\n            mavenBundle().groupId(\"org.apache.camel.tests\").artifactId(\"org.apache.camel.tests.mock-javamail_1.7\").version(\"2.4.0\"),\n            \n            workingDirectory(\"target/paxrunner/\"),\n\n            // does not work in felix\n            equinox());\n        \n        return options;\n    }","id":15890,"modified_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n\n            getDefaultCamelKarafOptions(),\n            // using the features to install the camel components\n            scanFeatures(getCamelKarafFeatureUrl(), \"jetty\"),\n\n            // using the java mail API bundle\n            mavenBundle().groupId(\"org.apache.servicemix.specs\").artifactId(\"org.apache.servicemix.specs.javamail-api-1.4\").version(\"1.3.0\"),\n                          \n            mavenBundle().groupId(\"org.apache.camel\").artifactId(\"camel-mail\").versionAsInProject(),\n            \n            // Added the mock_java_mail bundle for testing\n            // just using the mock_java_mail version for testing\n            mavenBundle().groupId(\"org.apache.camel.tests\").artifactId(\"org.apache.camel.tests.mock-javamail_1.7\").version(\"2.8.3\"),\n            \n            workingDirectory(\"target/paxrunner/\"),\n\n            // does not work in felix\n            equinox());\n        \n        return options;\n    }","commit_id":"226c94fba0b3a4eca7917f4f09b33e39ebfe84b1","url":"https://github.com/apache/camel"},{"original_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n            // Default karaf environment\n            Helper.getDefaultOptions(\n            // this is how you set the default log level when using pax logging (logProfile)\n                Helper.setLogLevel(\"WARN\")),\n                \n            // install the spring, http features first\n            scanFeatures(getKarafFeatureUrl(), \"spring\", \"spring-dm\", \"jetty\"),\n                \n            mavenBundle().groupId(\"org.apache.derby\").artifactId(\"derby\").version(\"10.4.2.0\"),\n\n            // using the features to install the camel components\n            scanFeatures(getCamelKarafFeatureUrl(),\n                          \"camel-core\", \"camel-test\", \"camel-mybatis\"),\n\n            workingDirectory(\"target/paxrunner/\"),\n\n            felix(), equinox());\n\n        return options;\n    }","id":15891,"modified_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n\n            getDefaultCamelKarafOptions(),\n            // using the features to install the camel components\n            scanFeatures(getCamelKarafFeatureUrl(), \"jetty\", \"camel-mybatis\"),\n\n            // use derby as the database\n            mavenBundle().groupId(\"org.apache.derby\").artifactId(\"derby\").version(\"10.4.2.0\"));\n\n        return options;\n    }","commit_id":"226c94fba0b3a4eca7917f4f09b33e39ebfe84b1","url":"https://github.com/apache/camel"},{"original_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n                // Default karaf environment\n                Helper.getDefaultOptions(\n                        // this is how you set the default log level when using pax logging (logProfile)\n                        Helper.setLogLevel(\"WARN\")),\n\n                // install the spring.\n                scanFeatures(getKarafFeatureUrl(), \"spring\"),\n                // using the features to install the camel components\n                scanFeatures(getCamelKarafFeatureUrl(),\n                        \"camel-core\", \"camel-spring\", \"camel-test\", \"camel-sql\"),\n\n                mavenBundle().groupId(\"org.apache.derby\").artifactId(\"derby\").version(\"10.4.2.0\"),\n                workingDirectory(\"target/paxrunner/\"),\n\n                felix(), equinox());\n\n        return options;\n    }","id":15892,"modified_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n                getDefaultCamelKarafOptions(),\n                // using the features to install the camel components\n                scanFeatures(getCamelKarafFeatureUrl(), \"camel-sql\"),\n\n                // and use derby as the database\n                mavenBundle().groupId(\"org.apache.derby\").artifactId(\"derby\").version(\"10.4.2.0\"));\n\n        return options;\n    }","commit_id":"226c94fba0b3a4eca7917f4f09b33e39ebfe84b1","url":"https://github.com/apache/camel"},{"original_method":"/**\n     * @param arr Byte array.\n     * @return Portable object.\n     * @throws GridPortableException\n     */\n    @Nullable public GridPortableObject unmarshal(byte[] arr) throws GridPortableException {\n        assert arr != null;\n        assert arr.length > 0;\n\n        if (arr.length == 1 && arr[0] == NULL)\n            return null;\n\n        GridPortableReaderImpl reader = new GridPortableReaderImpl(ctx, arr);\n\n        return (GridPortableObject)reader.unmarshal(0);\n    }","id":15893,"modified_method":"/**\n     * @param arr Byte array.\n     * @return Portable object.\n     * @throws GridPortableException\n     */\n    @Nullable public GridPortableObject unmarshal(byte[] arr) throws GridPortableException {\n        assert arr != null;\n        assert arr.length > 0;\n\n        if (arr.length == 1 && arr[0] == NULL)\n            return null;\n\n        GridPortableReaderImpl reader = new GridPortableReaderImpl(ctx, arr);\n\n        return (GridPortableObject)reader.unmarshal();\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public <F> F field(String fieldName) throws GridPortableException {\n        return (F)reader.unmarshalField(fieldName);\n    }","id":15894,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public <F> F field(String fieldName) throws GridPortableException {\n        return (F)reader.unmarshal(fieldName);\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public long[] readLongArray(String fieldName) throws GridPortableException {\n        int fieldOff = fieldOffset(fieldName);\n\n        if (fieldOff >= 0) {\n            byte flag = readByte(fieldOff++);\n\n            if (flag != LONG_ARR)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return readLongArray(fieldOff);\n        }\n        else\n            return null;\n    }","id":15895,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public long[] readLongArray(String fieldName) throws GridPortableException {\n        off = fieldOffset(fieldName);\n\n        if (off >= 0) {\n            byte flag = doReadByte(false);\n\n            if (flag != LONG_ARR)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return doReadLongArray(false);\n        }\n        else\n            return null;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @param fieldName Field name.\n     * @return Field value.\n     * @throws GridPortableException In case of error.\n     */\n    @Nullable Object unmarshalField(String fieldName) throws GridPortableException {\n        int fieldOff = fieldOffset(fieldName);\n\n        return fieldOff >= 0 ? unmarshal(fieldOff) : null;\n    }","id":15896,"modified_method":"/**\n     * @param fieldName Field name.\n     * @return Unmarshalled value.\n     * @throws GridPortableException In case of error.\n     */\n    @Nullable Object unmarshal(String fieldName) throws GridPortableException {\n        off = fieldOffset(fieldName);\n\n        return off >= 0 ? unmarshal() : null;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public float[] readFloatArray() throws GridPortableException {\n        float[] arr = readFloatArray(rawDataOff);\n\n        rawDataOff += 4 + (arr.length << 2);\n\n        return arr;\n    }","id":15897,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public float[] readFloatArray() throws GridPortableException {\n        return doReadFloatArray(true);\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override public double readDouble() throws GridPortableException {\n        double val = readDouble(rawDataOff);\n\n        rawDataOff += 8;\n\n        return val;\n    }","id":15898,"modified_method":"/** {@inheritDoc} */\n    @Override public double readDouble() throws GridPortableException {\n        return doReadDouble(true);\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public Object[] readObjectArray() throws GridPortableException {\n        int len = readInt();\n\n        if (len >= 0) {\n            Object[] arr = new Object[len];\n\n            for (int i = 0; i < len; i++)\n                arr[i] = readObject();\n\n            return arr;\n        }\n        else\n            return null;\n    }","id":15899,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public Object[] readObjectArray() throws GridPortableException {\n        return doReadObjectArray(true);\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public <T> Collection<T> readCollection(String fieldName) throws GridPortableException {\n        return null; // TODO: implement.\n    }","id":15900,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public <T> Collection<T> readCollection(String fieldName) throws GridPortableException {\n        off = fieldOffset(fieldName);\n\n        if (off >= 0) {\n            byte flag = doReadByte(false);\n\n            if (flag != COL)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return (Collection<T>)doReadCollection(false);\n        }\n        else\n            return null;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @param off Offset.\n     * @return Value.\n     */\n    private byte[] readByteArray(int off) {\n        int len = readInt(off);\n\n        if (len >= 0) {\n            byte[] arr = new byte[len];\n\n            UNSAFE.copyMemory(this.arr, BYTE_ARR_OFF + off + 4, arr, BYTE_ARR_OFF, len);\n\n            return arr;\n        }\n        else\n            return null;\n    }","id":15901,"modified_method":"/**\n     * @param raw Raw flag.\n     * @return Value.\n     */\n    private byte[] doReadByteArray(boolean raw) {\n        int len = doReadInt(raw);\n\n        if (len >= 0) {\n            byte[] arr = new byte[len];\n\n            UNSAFE.copyMemory(this.arr, BYTE_ARR_OFF + (raw ? rawOff : off), arr, BYTE_ARR_OFF, len);\n\n            if (raw)\n                rawOff += len;\n            else\n                off += len;\n\n            return arr;\n        }\n        else\n            return null;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @param off Offset.\n     * @return Value.\n     */\n    private int[] readIntArray(int off) {\n        int len = readInt(off);\n\n        if (len >= 0) {\n            int[] arr = new int[len];\n\n            UNSAFE.copyMemory(this.arr, BYTE_ARR_OFF + off + 4, arr, INT_ARR_OFF, len << 2);\n\n            return arr;\n        }\n        else\n            return null;\n    }","id":15902,"modified_method":"/**\n     * @param raw Raw flag.\n     * @return Value.\n     */\n    private int[] doReadIntArray(boolean raw) {\n        int len = doReadInt(raw);\n\n        if (len >= 0) {\n            int[] arr = new int[len];\n\n            int bytes = len << 2;\n\n            UNSAFE.copyMemory(this.arr, BYTE_ARR_OFF + (raw ? rawOff : off), arr, INT_ARR_OFF, bytes);\n\n            if (raw)\n                rawOff += bytes;\n            else\n                off += bytes;\n\n            return arr;\n        }\n        else\n            return null;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override public short readShort(String fieldName) throws GridPortableException {\n        int fieldOff = fieldOffset(fieldName);\n\n        byte flag = readByte(fieldOff++);\n\n        if (flag != SHORT)\n            throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n        return fieldOff >= 0 ? readShort(fieldOff) : 0;\n    }","id":15903,"modified_method":"/** {@inheritDoc} */\n    @Override public short readShort(String fieldName) throws GridPortableException {\n        off = fieldOffset(fieldName);\n\n        if (off >= 0) {\n            byte flag = doReadByte(false);\n\n            if (flag != SHORT)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return doReadShort(false);\n        }\n        else\n            return 0;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public boolean[] readBooleanArray(String fieldName) throws GridPortableException {\n        int fieldOff = fieldOffset(fieldName);\n\n        if (fieldOff >= 0) {\n            byte flag = readByte(fieldOff++);\n\n            if (flag != BOOLEAN_ARR)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return readBooleanArray(fieldOff);\n        }\n        else\n            return null;\n    }","id":15904,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public boolean[] readBooleanArray(String fieldName) throws GridPortableException {\n        off = fieldOffset(fieldName);\n\n        if (off >= 0) {\n            byte flag = doReadByte(false);\n\n            if (flag != BOOLEAN_ARR)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return doReadBooleanArray(false);\n        }\n        else\n            return null;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override public char readChar(String fieldName) throws GridPortableException {\n        int fieldOff = fieldOffset(fieldName);\n\n        byte flag = readByte(fieldOff++);\n\n        if (flag != CHAR)\n            throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n        return fieldOff >= 0 ? readChar(fieldOff) : 0;\n    }","id":15905,"modified_method":"/** {@inheritDoc} */\n    @Override public char readChar(String fieldName) throws GridPortableException {\n        off = fieldOffset(fieldName);\n\n        if (off >= 0) {\n            byte flag = doReadByte(false);\n\n            if (flag != CHAR)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return doReadChar(false);\n        }\n        else\n            return 0;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @param off Offset.\n     * @return Object.\n     * @throws GridPortableException In case of error.\n     */\n    @Nullable Object unmarshal(int off) throws GridPortableException {\n        byte flag = readByte(off++);\n\n        switch (flag) {\n            case NULL:\n                return null;\n\n            case HANDLE:\n                // TODO: Handle.\n\n                return null;\n\n            case OBJ:\n                boolean userType = readBoolean(off);\n                int typeId = readInt(off + 1);\n                int hashCode = readInt(off + 5);\n\n                rawDataOff = readInt(off + 13);\n\n                return new GridPortableObjectImpl(ctx, this, userType, typeId, hashCode);\n\n            case BYTE:\n                return readByte(off);\n\n            case SHORT:\n                return readShort(off);\n\n            case INT:\n                return readInt(off);\n\n            case LONG:\n                return readLong(off);\n\n            case FLOAT:\n                return readFloat(off);\n\n            case DOUBLE:\n                return readDouble(off);\n\n            case CHAR:\n                return readChar(off);\n\n            case BOOLEAN:\n                return readBoolean(off);\n\n            case STRING:\n                return readString(off);\n\n            case UUID:\n                return readUuid(off);\n\n            case BYTE_ARR:\n                return readByteArray(off);\n\n            case SHORT_ARR:\n                return readShortArray(off);\n\n            case INT_ARR:\n                return readIntArray(off);\n\n            case LONG_ARR:\n                return readLongArray(off);\n\n            case FLOAT_ARR:\n                return readFloatArray(off);\n\n            case DOUBLE_ARR:\n                return readDoubleArray(off);\n\n            case CHAR_ARR:\n                return readCharArray(off);\n\n            case BOOLEAN_ARR:\n                return readBooleanArray(off);\n\n\n            // TODO: Others\n//            case STRING_ARR:\n//                return readStringArray(off);\n//\n//            case UUID:\n//                return readByte(off);\n\n            default:\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n        }\n    }","id":15906,"modified_method":"/**\n     * @return Unmarshalled value.\n     * @throws GridPortableException In case of error.\n     */\n    @Nullable Object unmarshal() throws GridPortableException {\n        byte flag = doReadByte(false);\n\n        switch (flag) {\n            case NULL:\n                return null;\n\n            case HANDLE:\n                // TODO: Handle.\n\n                return null;\n\n            case OBJ:\n                boolean userType = doReadBoolean(false);\n                int typeId = doReadInt(false);\n                int hashCode = doReadInt(false);\n\n                // Skip length.\n                off += 4;\n\n                rawOff = doReadInt(false);\n\n                return new GridPortableObjectImpl(ctx, this, userType, typeId, hashCode);\n\n            case BYTE:\n                return doReadByte(false);\n\n            case SHORT:\n                return doReadShort(false);\n\n            case INT:\n                return doReadInt(false);\n\n            case LONG:\n                return doReadLong(false);\n\n            case FLOAT:\n                return doReadFloat(false);\n\n            case DOUBLE:\n                return doReadDouble(false);\n\n            case CHAR:\n                return doReadChar(false);\n\n            case BOOLEAN:\n                return doReadBoolean(false);\n\n            case STRING:\n                return doReadString(false);\n\n            case UUID:\n                return doReadUuid(false);\n\n            case BYTE_ARR:\n                return doReadByteArray(false);\n\n            case SHORT_ARR:\n                return doReadShortArray(false);\n\n            case INT_ARR:\n                return doReadIntArray(false);\n\n            case LONG_ARR:\n                return doReadLongArray(false);\n\n            case FLOAT_ARR:\n                return doReadFloatArray(false);\n\n            case DOUBLE_ARR:\n                return doReadDoubleArray(false);\n\n            case CHAR_ARR:\n                return doReadCharArray(false);\n\n            case BOOLEAN_ARR:\n                return doReadBooleanArray(false);\n\n            case STRING_ARR:\n                return doReadStringArray(false);\n\n            case UUID_ARR:\n                return doReadUuidArray(false);\n\n            case OBJ_ARR:\n                int len = doReadInt(false);\n\n                if (len >= 0) {\n                    Object[] arr = new Object[len];\n\n                    for (int i = 0; i < len; i++)\n                        arr[i] = unmarshal();\n\n                    return arr;\n                }\n                else\n                    return null;\n\n            case COL:\n                int colSize = doReadInt(false);\n\n                if (colSize >= 0) {\n                    Collection<Object> col = new ArrayList<>(colSize);\n\n                    for (int i = 0; i < colSize; i++)\n                        col.add(unmarshal());\n\n                    return col;\n                }\n                else\n                    return null;\n\n            case MAP:\n                int mapSize = doReadInt(false);\n\n                if (mapSize >= 0) {\n                    Map<Object, Object> map = new HashMap<>(mapSize);\n\n                    for (int i = 0; i < mapSize; i++)\n                        map.put(unmarshal(), unmarshal());\n\n                    return map;\n                }\n                else\n                    return null;\n\n            default:\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n        }\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public String readString() throws GridPortableException {\n        byte[] arr = readByteArray();\n\n        return arr != null ? new String(arr, UTF_8) : null;\n    }","id":15907,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public String readString() throws GridPortableException {\n        return doReadString(true);\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public String[] readStringArray(String fieldName) throws GridPortableException {\n        int fieldOff = fieldOffset(fieldName);\n\n        if (fieldOff >= 0) {\n            byte flag = readByte(fieldOff++);\n\n            if (flag != STRING_ARR)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            int len = readInt(fieldOff);\n\n            if (len >= 0) {\n                String[] strs = new String[len];\n\n                fieldOff += 4;\n\n                for (int i = 0; i < len; i++) {\n                    byte[] arr = readByteArray(fieldOff);\n\n                    fieldOff += 4;\n\n                    if (arr != null)\n                        fieldOff += arr.length;\n\n                    strs[i] = arr != null ? new String(arr, UTF_8) : null;\n                }\n\n                return strs;\n            }\n            else\n                return null;\n        }\n        else\n            return null;\n    }","id":15908,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public String[] readStringArray(String fieldName) throws GridPortableException {\n        off = fieldOffset(fieldName);\n\n        if (off >= 0) {\n            byte flag = doReadByte(false);\n\n            if (flag != STRING_ARR)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return doReadStringArray(false);\n        }\n        else\n            return null;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @param off Offset.\n     * @return Value.\n     */\n    private char[] readCharArray(int off) {\n        int len = readInt(off);\n\n        if (len >= 0) {\n            char[] arr = new char[len];\n\n            UNSAFE.copyMemory(this.arr, BYTE_ARR_OFF + off + 4, arr, CHAR_ARR_OFF, len << 1);\n\n            return arr;\n        }\n        else\n            return null;\n    }","id":15909,"modified_method":"/**\n     * @param raw Raw flag.\n     * @return Value.\n     */\n    private char[] doReadCharArray(boolean raw) {\n        int len = doReadInt(raw);\n\n        if (len >= 0) {\n            char[] arr = new char[len];\n\n            int bytes = len << 1;\n\n            UNSAFE.copyMemory(this.arr, BYTE_ARR_OFF + (raw ? rawOff : off), arr, CHAR_ARR_OFF, bytes);\n\n            if (raw)\n                rawOff += bytes;\n            else\n                off += bytes;\n\n            return arr;\n        }\n        else\n            return null;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public <T> Collection<T> readCollection() throws GridPortableException {\n        int size = readInt();\n\n        if (size >= 0) {\n            Collection<T> col = new ArrayList<>(size);\n\n            for (int i = 0; i < size; i++)\n                col.add((T)readObject());\n\n            return col;\n        }\n        else\n            return null;\n    }","id":15910,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public <T> Collection<T> readCollection() throws GridPortableException {\n        return (Collection<T>)doReadCollection(true);\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @param off Offset.\n     * @return Value.\n     */\n    private long[] readLongArray(int off) {\n        int len = readInt(off);\n\n        if (len >= 0) {\n            long[] arr = new long[len];\n\n            UNSAFE.copyMemory(this.arr, BYTE_ARR_OFF + off + 4, arr, LONG_ARR_OFF, len << 3);\n\n            return arr;\n        }\n        else\n            return null;\n    }","id":15911,"modified_method":"/**\n     * @param raw Raw flag.\n     * @return Value.\n     */\n    private long[] doReadLongArray(boolean raw) {\n        int len = doReadInt(raw);\n\n        if (len >= 0) {\n            long[] arr = new long[len];\n\n            int bytes = len << 3;\n\n            UNSAFE.copyMemory(this.arr, BYTE_ARR_OFF + (raw ? rawOff : off), arr, LONG_ARR_OFF, bytes);\n\n            if (raw)\n                rawOff += bytes;\n            else\n                off += bytes;\n\n            return arr;\n        }\n        else\n            return null;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public int[] readIntArray(String fieldName) throws GridPortableException {\n        int fieldOff = fieldOffset(fieldName);\n\n        if (fieldOff >= 0) {\n            byte flag = readByte(fieldOff++);\n\n            if (flag != INT_ARR)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return readIntArray(fieldOff);\n        }\n        else\n            return null;\n    }","id":15912,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public int[] readIntArray(String fieldName) throws GridPortableException {\n        off = fieldOffset(fieldName);\n\n        if (off >= 0) {\n            byte flag = doReadByte(false);\n\n            if (flag != INT_ARR)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return doReadIntArray(false);\n        }\n        else\n            return null;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public UUID readUuid() throws GridPortableException {\n        return readBoolean() ? new UUID(readLong(), readLong()) : null;\n    }","id":15913,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public UUID readUuid() throws GridPortableException {\n        return doReadUuid(true);\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public UUID[] readUuidArray() throws GridPortableException {\n        int len = readInt();\n\n        if (len >= 0) {\n            UUID[] arr = new UUID[len];\n\n            for (int i = 0; i < len; i++)\n                arr[i] = readUuid();\n\n            return arr;\n        }\n        else\n            return null;\n    }","id":15914,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public UUID[] readUuidArray() throws GridPortableException {\n        return doReadUuidArray(true);\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public int[] readIntArray() throws GridPortableException {\n        int[] arr = readIntArray(rawDataOff);\n\n        rawDataOff += 4 + (arr.length << 2);\n\n        return arr;\n    }","id":15915,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public int[] readIntArray() throws GridPortableException {\n        return doReadIntArray(true);\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @param off Offset.\n     * @return Value.\n     */\n    private boolean[] readBooleanArray(int off) {\n        int len = readInt(off);\n\n        if (len >= 0) {\n            boolean[] arr = new boolean[len];\n\n            UNSAFE.copyMemory(this.arr, BYTE_ARR_OFF + off + 4, arr, BOOLEAN_ARR_OFF, len);\n\n            return arr;\n        }\n        else\n            return null;\n    }","id":15916,"modified_method":"/**\n     * @param raw Raw flag.\n     * @return Value.\n     */\n    private boolean[] doReadBooleanArray(boolean raw) {\n        int len = doReadInt(raw);\n\n        if (len >= 0) {\n            boolean[] arr = new boolean[len];\n\n            int bytes = len << 1;\n\n            UNSAFE.copyMemory(this.arr, BYTE_ARR_OFF + (raw ? rawOff : off), arr, BOOLEAN_ARR_OFF, bytes);\n\n            if (raw)\n                rawOff += bytes;\n            else\n                off += bytes;\n\n            return arr;\n        }\n        else\n            return null;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @param off Offset.\n     * @return Value.\n     */\n    private double[] readDoubleArray(int off) {\n        int len = readInt(off);\n\n        if (len >= 0) {\n            double[] arr = new double[len];\n\n            UNSAFE.copyMemory(this.arr, BYTE_ARR_OFF + off + 4, arr, DOUBLE_ARR_OFF, len << 3);\n\n            return arr;\n        }\n        else\n            return null;\n    }","id":15917,"modified_method":"/**\n     * @param raw Raw flag.\n     * @return Value.\n     */\n    private double[] doReadDoubleArray(boolean raw) {\n        int len = doReadInt(raw);\n\n        if (len >= 0) {\n            double[] arr = new double[len];\n\n            int bytes = len << 3;\n\n            UNSAFE.copyMemory(this.arr, BYTE_ARR_OFF + (raw ? rawOff : off), arr, DOUBLE_ARR_OFF, bytes);\n\n            if (raw)\n                rawOff += bytes;\n            else\n                off += bytes;\n\n            return arr;\n        }\n        else\n            return null;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override public boolean readBoolean(String fieldName) throws GridPortableException {\n        int fieldOff = fieldOffset(fieldName);\n\n        byte flag = readByte(fieldOff++);\n\n        if (flag != BOOLEAN)\n            throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n        return fieldOff >= 0 && readBoolean(fieldOff);\n    }","id":15918,"modified_method":"/** {@inheritDoc} */\n    @Override public boolean readBoolean(String fieldName) throws GridPortableException {\n        off = fieldOffset(fieldName);\n\n        if (off >= 0) {\n            byte flag = doReadByte(false);\n\n            if (flag != BOOLEAN)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return doReadBoolean(false);\n        }\n        else\n            return false;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public String[] readStringArray() throws GridPortableException {\n        int len = readInt();\n\n        if (len >= 0) {\n            String[] arr = new String[len];\n\n            for (int i = 0; i < len; i++)\n                arr[i] = readString();\n\n            return arr;\n        }\n        else\n            return null;\n    }","id":15919,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public String[] readStringArray() throws GridPortableException {\n        return doReadStringArray(true);\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public long[] readLongArray() throws GridPortableException {\n        long[] arr = readLongArray(rawDataOff);\n\n        rawDataOff += 4 + (arr.length << 3);\n\n        return arr;\n    }","id":15920,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public long[] readLongArray() throws GridPortableException {\n        return doReadLongArray(true);\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override public long readLong(String fieldName) throws GridPortableException {\n        int fieldOff = fieldOffset(fieldName);\n\n        byte flag = readByte(fieldOff++);\n\n        if (flag != LONG)\n            throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n        return fieldOff >= 0 ? readLong(fieldOff) : 0;\n    }","id":15921,"modified_method":"/** {@inheritDoc} */\n    @Override public long readLong(String fieldName) throws GridPortableException {\n        off = fieldOffset(fieldName);\n\n        if (off >= 0) {\n            byte flag = doReadByte(false);\n\n            if (flag != LONG)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return doReadLong(false);\n        }\n        else\n            return 0;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override public double readDouble(String fieldName) throws GridPortableException {\n        int fieldOff = fieldOffset(fieldName);\n\n        byte flag = readByte(fieldOff++);\n\n        if (flag != DOUBLE)\n            throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n        return fieldOff >= 0 ? readDouble(fieldOff) : 0;\n    }","id":15922,"modified_method":"/** {@inheritDoc} */\n    @Override public double readDouble(String fieldName) throws GridPortableException {\n        off = fieldOffset(fieldName);\n\n        if (off >= 0) {\n            byte flag = doReadByte(false);\n\n            if (flag != DOUBLE)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return doReadDouble(false);\n        }\n        else\n            return 0;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public short[] readShortArray(String fieldName) throws GridPortableException {\n        int fieldOff = fieldOffset(fieldName);\n\n        if (fieldOff >= 0) {\n            byte flag = readByte(fieldOff++);\n\n            if (flag != SHORT_ARR)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return readShortArray(fieldOff);\n        }\n        else\n            return null;\n    }","id":15923,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public short[] readShortArray(String fieldName) throws GridPortableException {\n        off = fieldOffset(fieldName);\n\n        if (off >= 0) {\n            byte flag = doReadByte(false);\n\n            if (flag != SHORT_ARR)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return doReadShortArray(false);\n        }\n        else\n            return null;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public boolean[] readBooleanArray() throws GridPortableException {\n        boolean[] arr = readBooleanArray(rawDataOff);\n\n        rawDataOff += 4 + arr.length;\n\n        return arr;\n    }","id":15924,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public boolean[] readBooleanArray() throws GridPortableException {\n        return doReadBooleanArray(true);\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override public long readLong() throws GridPortableException {\n        long val = readLong(rawDataOff);\n\n        rawDataOff += 8;\n\n        return val;\n    }","id":15925,"modified_method":"/** {@inheritDoc} */\n    @Override public long readLong() throws GridPortableException {\n        return doReadLong(true);\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public byte[] readByteArray(String fieldName) throws GridPortableException {\n        int fieldOff = fieldOffset(fieldName);\n\n        if (fieldOff >= 0) {\n            byte flag = readByte(fieldOff++);\n\n            if (flag != BYTE_ARR)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return readByteArray(fieldOff);\n        }\n        else\n            return null;\n    }","id":15926,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public byte[] readByteArray(String fieldName) throws GridPortableException {\n        off = fieldOffset(fieldName);\n\n        if (off >= 0) {\n            byte flag = doReadByte(false);\n\n            if (flag != BYTE_ARR)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return doReadByteArray(false);\n        }\n        else\n            return null;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @param name Field name.\n     * @return Field offset.\n     */\n    private int fieldOffset(String name) {\n        assert name != null;\n\n        if (fieldsOffs == null) {\n            fieldsOffs = new HashMap<>();\n\n            int off = start + 18;\n\n            while (true) {\n                if (off >= arr.length)\n                    break;\n\n                int id0 = PRIM.readInt(arr, off);\n\n                off += 4;\n\n                int len = PRIM.readInt(arr, off);\n\n                off += 4;\n\n                fieldsOffs.put(id0, off);\n\n                off += len;\n            }\n        }\n\n        Integer fieldOff = fieldsOffs.get(name.hashCode()); // TODO: get id from mapper\n\n        return fieldOff != null ? fieldOff : -1;\n    }","id":15927,"modified_method":"/**\n     * @param name Field name.\n     * @return Field offset.\n     */\n    private int fieldOffset(String name) {\n        assert name != null;\n\n        if (fieldsOffs == null) {\n            fieldsOffs = new HashMap<>();\n\n            int off = start + HDR_LEN;\n\n            while (true) {\n                if (off >= arr.length)\n                    break;\n\n                int id0 = PRIM.readInt(arr, off);\n\n                off += 4;\n\n                int len = PRIM.readInt(arr, off);\n\n                off += 4;\n\n                fieldsOffs.put(id0, off);\n\n                off += len;\n            }\n        }\n\n        Integer fieldOff = fieldsOffs.get(name.hashCode()); // TODO: get id from mapper\n\n        return fieldOff != null ? fieldOff : -1;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override public boolean readBoolean() throws GridPortableException {\n        boolean val = readBoolean(rawDataOff);\n\n        rawDataOff += 1;\n\n        return val;\n    }","id":15928,"modified_method":"/** {@inheritDoc} */\n    @Override public boolean readBoolean() throws GridPortableException {\n        return doReadBoolean(true);\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override public byte readByte(String fieldName) throws GridPortableException {\n        int fieldOff = fieldOffset(fieldName);\n\n        byte flag = readByte(fieldOff++);\n\n        if (flag != BYTE)\n            throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n        return fieldOff >= 0 ? readByte(fieldOff) : 0;\n    }","id":15929,"modified_method":"/** {@inheritDoc} */\n    @Override public byte readByte(String fieldName) throws GridPortableException {\n        off = fieldOffset(fieldName);\n\n        if (off >= 0) {\n            byte flag = doReadByte(false);\n\n            if (flag != BYTE)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return doReadByte(false);\n        }\n        else\n            return 0;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override public float readFloat(String fieldName) throws GridPortableException {\n        int fieldOff = fieldOffset(fieldName);\n\n        byte flag = readByte(fieldOff++);\n\n        if (flag != FLOAT)\n            throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n        return fieldOff >= 0 ? readFloat(fieldOff) : 0;\n    }","id":15930,"modified_method":"/** {@inheritDoc} */\n    @Override public float readFloat(String fieldName) throws GridPortableException {\n        off = fieldOffset(fieldName);\n\n        if (off >= 0) {\n            byte flag = doReadByte(false);\n\n            if (flag != FLOAT)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return doReadFloat(false);\n        }\n        else\n            return 0;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public String readString(String fieldName) throws GridPortableException {\n        int fieldOff = fieldOffset(fieldName);\n\n        byte flag = readByte(fieldOff++);\n\n        if (flag != STRING)\n            throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n        return fieldOff >= 0 ? readString(fieldOff) : null;\n    }","id":15931,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public String readString(String fieldName) throws GridPortableException {\n        off = fieldOffset(fieldName);\n\n        if (off >= 0) {\n            byte flag = doReadByte(false);\n\n            if (flag != STRING)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return doReadString(false);\n        }\n        else\n            return null;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @param arr Array.\n     */\n    private GridPortableReaderImpl(GridPortableContext ctx, byte[] arr, int start, int rawDataOff) {\n        this.ctx = ctx;\n        this.arr = arr;\n        this.start = start;\n        this.rawDataOff = rawDataOff;\n    }","id":15932,"modified_method":"/**\n     * @param arr Array.\n     */\n    private GridPortableReaderImpl(GridPortableContext ctx, byte[] arr, int start, int rawOff) {\n        this.ctx = ctx;\n        this.arr = arr;\n        this.start = start;\n        this.rawOff = rawOff;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override public char readChar() throws GridPortableException {\n        char val = readChar(rawDataOff);\n\n        rawDataOff += 2;\n\n        return val;\n    }","id":15933,"modified_method":"/** {@inheritDoc} */\n    @Override public char readChar() throws GridPortableException {\n        return doReadChar(true);\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public <K, V> Map<K, V> readMap() throws GridPortableException {\n        int size = readInt();\n\n        if (size >= 0) {\n            Map<K, V> map = new HashMap<>(size);\n\n            for (int i = 0; i < size; i++)\n                map.put((K)readObject(), (V)readObject());\n\n            return map;\n        }\n        else\n            return null;\n    }","id":15934,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public <K, V> Map<K, V> readMap() throws GridPortableException {\n        return (Map<K, V>)doReadMap(true);\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public Object readObject() throws GridPortableException {\n        int start = rawDataOff;\n\n        byte flag = readByte();\n\n        switch (flag) {\n            case NULL:\n                return null;\n\n            case HANDLE:\n                return null; // TODO: Handle.\n\n            case OBJ:\n                boolean userType = readBoolean();\n                int typeId = readInt();\n\n                GridPortableClassDescriptor desc = ctx.descriptorForTypeId(userType, typeId);\n\n                if (desc == null)\n                    throw new GridPortableInvalidClassException(\"Unknown type ID: \" + typeId);\n\n                // Skip hash code and length.\n                rawDataOff += 8;\n\n                int rawDataOff0 = start + readInt();\n\n                return desc.read(new GridPortableReaderImpl(ctx, arr, start, rawDataOff0));\n\n            default:\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n        }\n    }","id":15935,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public Object readObject() throws GridPortableException {\n        return doReadObject(true);\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override public int readInt() throws GridPortableException {\n        int val = readInt(rawDataOff);\n\n        rawDataOff += 4;\n\n        return val;\n    }","id":15936,"modified_method":"/** {@inheritDoc} */\n    @Override public int readInt() throws GridPortableException {\n        return doReadInt(true);\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public Object readObject(String fieldName) throws GridPortableException {\n        int fieldOff = fieldOffset(fieldName);\n\n        if (fieldOff < 0)\n            return null;\n\n        int off = fieldOff;\n\n        byte flag = readByte(off++);\n\n        switch (flag) {\n            case NULL:\n                return null;\n\n            case HANDLE:\n                return null; // TODO: Handle.\n\n            case OBJ:\n                boolean userType = readBoolean(off++);\n                int typeId = readInt(off);\n\n                off += 4;\n\n                GridPortableClassDescriptor desc = ctx.descriptorForTypeId(userType, typeId);\n\n                if (desc == null)\n                    throw new GridPortableInvalidClassException(\"Unknown type ID: \" + typeId);\n\n                // Skip hash code and length.\n                off += 8;\n\n                int rawDataOff = fieldOff + readInt(off);\n\n                return desc.read(new GridPortableReaderImpl(ctx, arr, fieldOff, rawDataOff));\n\n            default:\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n        }\n    }","id":15937,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public Object readObject(String fieldName) throws GridPortableException {\n        off = fieldOffset(fieldName);\n\n        return off >= 0 ? doReadObject(false) : null;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public short[] readShortArray() throws GridPortableException {\n        short[] arr = readShortArray(rawDataOff);\n\n        rawDataOff += 4 + (arr.length << 1);\n\n        return arr;\n    }","id":15938,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public short[] readShortArray() throws GridPortableException {\n        return doReadShortArray(true);\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override public float readFloat() throws GridPortableException {\n        float val = readFloat(rawDataOff);\n\n        rawDataOff += 4;\n\n        return val;\n    }","id":15939,"modified_method":"/** {@inheritDoc} */\n    @Override public float readFloat() throws GridPortableException {\n        return doReadFloat(true);\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @param off Offset.\n     * @return Value.\n     */\n    private short[] readShortArray(int off) {\n        int len = readInt(off);\n\n        if (len >= 0) {\n            short[] arr = new short[len];\n\n            UNSAFE.copyMemory(this.arr, BYTE_ARR_OFF + off + 4, arr, SHORT_ARR_OFF, len << 1);\n\n            return arr;\n        }\n        else\n            return null;\n    }","id":15940,"modified_method":"/**\n     * @param raw Raw flag.\n     * @return Value.\n     */\n    private short[] doReadShortArray(boolean raw) {\n        int len = doReadInt(raw);\n\n        if (len >= 0) {\n            short[] arr = new short[len];\n\n            int bytes = len << 1;\n\n            UNSAFE.copyMemory(this.arr, BYTE_ARR_OFF + (raw ? rawOff : off), arr, SHORT_ARR_OFF, bytes);\n\n            if (raw)\n                rawOff += bytes;\n            else\n                off += bytes;\n\n            return arr;\n        }\n        else\n            return null;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public byte[] readByteArray() throws GridPortableException {\n        byte[] arr = readByteArray(rawDataOff);\n\n        rawDataOff += 4 + arr.length;\n\n        return arr;\n    }","id":15941,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public byte[] readByteArray() throws GridPortableException {\n        return doReadByteArray(true);\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public char[] readCharArray(String fieldName) throws GridPortableException {\n        int fieldOff = fieldOffset(fieldName);\n\n        if (fieldOff >= 0) {\n            byte flag = readByte(fieldOff++);\n\n            if (flag != CHAR_ARR)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return readCharArray(fieldOff);\n        }\n        else\n            return null;\n    }","id":15942,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public char[] readCharArray(String fieldName) throws GridPortableException {\n        off = fieldOffset(fieldName);\n\n        if (off >= 0) {\n            byte flag = doReadByte(false);\n\n            if (flag != CHAR_ARR)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return doReadCharArray(false);\n        }\n        else\n            return null;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public <K, V> Map<K, V> readMap(String fieldName) throws GridPortableException {\n        return null; // TODO: implement.\n    }","id":15943,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public <K, V> Map<K, V> readMap(String fieldName) throws GridPortableException {\n        off = fieldOffset(fieldName);\n\n        if (off >= 0) {\n            byte flag = doReadByte(false);\n\n            if (flag != BOOLEAN_ARR)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return (Map<K, V>)doReadMap(false);\n        }\n        else\n            return null;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public UUID[] readUuidArray(String fieldName) throws GridPortableException {\n        int fieldOff = fieldOffset(fieldName);\n\n        byte flag = readByte(fieldOff++);\n\n        if (flag != UUID_ARR)\n            throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n        if (fieldOff >= 0) {\n            int len = readInt(fieldOff);\n\n            if (len >= 0) {\n                UUID[] uuids = new UUID[len];\n\n                fieldOff += 4;\n\n                for (int i = 0; i < len; i++) {\n                    UUID uuid = readUuid(fieldOff);\n\n                    fieldOff += (uuid != null ? 17 : 1);\n\n                    uuids[i] = uuid;\n                }\n\n                return uuids;\n            }\n            else\n                return null;\n        }\n        else\n            return null;\n    }","id":15944,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public UUID[] readUuidArray(String fieldName) throws GridPortableException {\n        off = fieldOffset(fieldName);\n\n        if (off >= 0) {\n            byte flag = doReadByte(false);\n\n            if (flag != UUID_ARR)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return doReadUuidArray(false);\n        }\n        else\n            return null;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override public short readShort() throws GridPortableException {\n        short val = readShort(rawDataOff);\n\n        rawDataOff += 2;\n\n        return val;\n    }","id":15945,"modified_method":"/** {@inheritDoc} */\n    @Override public short readShort() throws GridPortableException {\n        return doReadShort(true);\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public double[] readDoubleArray() throws GridPortableException {\n        double[] arr = readDoubleArray(rawDataOff);\n\n        rawDataOff += 4 + (arr.length << 3);\n\n        return arr;\n    }","id":15946,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public double[] readDoubleArray() throws GridPortableException {\n        return doReadDoubleArray(true);\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public UUID readUuid(String fieldName) throws GridPortableException {\n        int fieldOff = fieldOffset(fieldName);\n\n        byte flag = readByte(fieldOff++);\n\n        if (flag != UUID)\n            throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n        return fieldOff >= 0 ? readUuid(fieldOff) : null;\n    }","id":15947,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public UUID readUuid(String fieldName) throws GridPortableException {\n        off = fieldOffset(fieldName);\n\n        if (off >= 0) {\n            byte flag = doReadByte(false);\n\n            if (flag != UUID)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return doReadUuid(false);\n        }\n        else\n            return null;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public float[] readFloatArray(String fieldName) throws GridPortableException {\n        int fieldOff = fieldOffset(fieldName);\n\n        if (fieldOff >= 0) {\n            byte flag = readByte(fieldOff++);\n\n            if (flag != FLOAT_ARR)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return readFloatArray(fieldOff);\n        }\n        else\n            return null;\n    }","id":15948,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public float[] readFloatArray(String fieldName) throws GridPortableException {\n        off = fieldOffset(fieldName);\n\n        if (off >= 0) {\n            byte flag = doReadByte(false);\n\n            if (flag != FLOAT_ARR)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return doReadFloatArray(false);\n        }\n        else\n            return null;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @param off Offset.\n     * @return Value.\n     */\n    private float[] readFloatArray(int off) {\n        int len = readInt(off);\n\n        if (len >= 0) {\n            float[] arr = new float[len];\n\n            UNSAFE.copyMemory(this.arr, BYTE_ARR_OFF + off + 4, arr, FLOAT_ARR_OFF, len << 2);\n\n            return arr;\n        }\n        else\n            return null;\n    }","id":15949,"modified_method":"/**\n     * @param raw Raw flag.\n     * @return Value.\n     */\n    private float[] doReadFloatArray(boolean raw) {\n        int len = doReadInt(raw);\n\n        if (len >= 0) {\n            float[] arr = new float[len];\n\n            int bytes = len << 2;\n\n            UNSAFE.copyMemory(this.arr, BYTE_ARR_OFF + (raw ? rawOff : off), arr, FLOAT_ARR_OFF, bytes);\n\n            if (raw)\n                rawOff += bytes;\n            else\n                off += bytes;\n\n            return arr;\n        }\n        else\n            return null;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override public int readInt(String fieldName) throws GridPortableException {\n        int fieldOff = fieldOffset(fieldName);\n\n        byte flag = readByte(fieldOff++);\n\n        if (flag != INT)\n            throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n        return fieldOff >= 0 ? readInt(fieldOff) : 0;\n    }","id":15950,"modified_method":"/** {@inheritDoc} */\n    @Override public int readInt(String fieldName) throws GridPortableException {\n        off = fieldOffset(fieldName);\n\n        if (off >= 0) {\n            byte flag = doReadByte(false);\n\n            if (flag != INT)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return doReadInt(false);\n        }\n        else\n            return 0;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override public byte readByte() throws GridPortableException {\n        byte val = readByte(rawDataOff);\n\n        rawDataOff++;\n\n        return val;\n    }","id":15951,"modified_method":"/** {@inheritDoc} */\n    @Override public byte readByte() throws GridPortableException {\n        return doReadByte(true);\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public Object[] readObjectArray(String fieldName) throws GridPortableException {\n        return null; // TODO: implement.\n    }","id":15952,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public Object[] readObjectArray(String fieldName) throws GridPortableException {\n        off = fieldOffset(fieldName);\n\n        if (off >= 0) {\n            byte flag = doReadByte(false);\n\n            if (flag != OBJ_ARR)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return doReadObjectArray(false);\n        }\n        else\n            return null;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public double[] readDoubleArray(String fieldName) throws GridPortableException {\n        int fieldOff = fieldOffset(fieldName);\n\n        if (fieldOff >= 0) {\n            byte flag = readByte(fieldOff++);\n\n            if (flag != DOUBLE_ARR)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return readDoubleArray(fieldOff);\n        }\n        else\n            return null;\n    }","id":15953,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public double[] readDoubleArray(String fieldName) throws GridPortableException {\n        off = fieldOffset(fieldName);\n\n        if (off >= 0) {\n            byte flag = doReadByte(false);\n\n            if (flag != DOUBLE_ARR)\n                throw new GridPortableException(\"Invalid flag value: \" + flag);\n\n            return doReadDoubleArray(false);\n        }\n        else\n            return null;\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override public char[] readCharArray() throws GridPortableException {\n        char[] arr = readCharArray(rawDataOff);\n\n        rawDataOff += 4 + (arr.length << 1);\n\n        return arr;\n    }","id":15954,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public char[] readCharArray() throws GridPortableException {\n        return doReadCharArray(true);\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @param off Offset.\n     * @return Value.\n     */\n    private boolean readBoolean(int off) {\n        return PRIM.readBoolean(arr, off);\n    }","id":15955,"modified_method":"/**\n     * @param raw Raw flag.\n     * @return Value.\n     */\n    private boolean doReadBoolean(boolean raw) {\n        return PRIM.readBoolean(arr, raw ? rawOff++ : off++);\n    }","commit_id":"128a8abc984cad908879691db2ae43a389589dc7","url":"https://github.com/apache/ignite"},{"original_method":"/** @return True if accepted, false if we should try another node. */\n\tprivate boolean waitAccepted(PeerNode next, InsertTag thisTag) {\n\t\t\n\t\tMessage msg = null;\n\t\t\n        // Wait for ack or reject... will come before even a locally generated DataReply\n    \tMessageFilter mf = makeAcceptedRejectedFilter(next, ACCEPTED_TIMEOUT);\n        \n        /*\n         * Because messages may be re-ordered, it is\n         * entirely possible that we get a non-local RejectedOverload,\n         * followed by an Accepted. So we must loop here.\n         */\n        \n        while ((msg==null) || (msg.getSpec() != DMT.FNPAccepted)) {\n        \t\n\t\t\ttry {\n\t\t\t\tmsg = node.usm.waitFor(mf, this);\n\t\t\t} catch (DisconnectedException e) {\n\t\t\t\tLogger.normal(this, \"Disconnected from \" + next\n\t\t\t\t\t\t+ \" while waiting for Accepted\");\n\t\t\t\tnext.noLongerRoutingTo(thisTag, false);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tboolean failed;\n\t\t\tsynchronized(backgroundTransfers) {\n\t\t\t\tfailed = receiveFailed;\n\t\t\t}\n\t\t\tif(failed) {\n\t\t\t\tthisTag.removeRoutingTo(next);\n\t\t\t\treturn false; // don't need to set status as killed by CHKInsertHandler\n\t\t\t}\n\t\t\t\n\t\t\tif (msg == null) {\n\t\t\t\t// Terminal overload\n\t\t\t\t// Try to propagate back to source\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Timeout\");\n\t\t\t\tnext.localRejectedOverload(\"Timeout3\");\n\t\t\t\t// Try another node.\n\t\t\t\tforwardRejectedOverload();\n    \t\t\thandleAcceptedRejectedTimeout(next, thisTag);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tif (msg.getSpec() == DMT.FNPRejectedOverload) {\n\t\t\t\t// Non-fatal - probably still have time left\n\t\t\t\tif (msg.getBoolean(DMT.IS_LOCAL)) {\n\t\t\t\t\tnext.localRejectedOverload(\"ForwardRejectedOverload5\");\n\t\t\t\t\tif(logMINOR) Logger.minor(this,\n\t\t\t\t\t\t\t\t\t\"Local RejectedOverload, moving on to next peer\");\n\t\t\t\t\t// Give up on this one, try another\n\t\t\t\t\tnext.noLongerRoutingTo(thisTag, false);\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tforwardRejectedOverload();\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tif (msg.getSpec() == DMT.FNPRejectedLoop) {\n\t\t\t\tnext.successNotOverload();\n\t\t\t\t// Loop - we don't want to send the data to this one\n\t\t\t\tnext.noLongerRoutingTo(thisTag, false);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tif (msg.getSpec() != DMT.FNPAccepted) {\n\t\t\t\tLogger.error(this,\n\t\t\t\t\t\t\"Unexpected message waiting for Accepted: \"\n\t\t\t\t\t\t\t\t+ msg);\n\t\t\t\tnext.noLongerRoutingTo(thisTag, false);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// Otherwise is an FNPAccepted\n\t\t}\n        \n        if((msg == null) || (msg.getSpec() != DMT.FNPAccepted)) return false;\n        return true;\n        \n\t}","id":15956,"modified_method":"/** @return True if accepted, false if we should try another node. */\n\tprivate boolean waitAccepted(PeerNode next, InsertTag thisTag) {\n\t\t\n\t\tMessage msg = null;\n\t\t\n        // Wait for ack or reject... will come before even a locally generated DataReply\n    \tMessageFilter mf = makeAcceptedRejectedFilter(next, ACCEPTED_TIMEOUT);\n        \n        /*\n         * Because messages may be re-ordered, it is\n         * entirely possible that we get a non-local RejectedOverload,\n         * followed by an Accepted. So we must loop here.\n         */\n        \n        while ((msg==null) || (msg.getSpec() != DMT.FNPAccepted)) {\n        \t\n\t\t\ttry {\n\t\t\t\tmsg = node.usm.waitFor(mf, this);\n\t\t\t} catch (DisconnectedException e) {\n\t\t\t\tLogger.normal(this, \"Disconnected from \" + next\n\t\t\t\t\t\t+ \" while waiting for Accepted\");\n\t\t\t\tnext.noLongerRoutingTo(thisTag, false);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif(failIfReceiveFailed(thisTag, next)) return false;\n\t\t\t\n\t\t\tif (msg == null) {\n\t\t\t\t// Terminal overload\n\t\t\t\t// Try to propagate back to source\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Timeout\");\n\t\t\t\tnext.localRejectedOverload(\"Timeout3\");\n\t\t\t\t// Try another node.\n\t\t\t\tforwardRejectedOverload();\n    \t\t\thandleAcceptedRejectedTimeout(next, thisTag);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tif (msg.getSpec() == DMT.FNPRejectedOverload) {\n\t\t\t\t// Non-fatal - probably still have time left\n\t\t\t\tif (msg.getBoolean(DMT.IS_LOCAL)) {\n\t\t\t\t\tnext.localRejectedOverload(\"ForwardRejectedOverload5\");\n\t\t\t\t\tif(logMINOR) Logger.minor(this,\n\t\t\t\t\t\t\t\t\t\"Local RejectedOverload, moving on to next peer\");\n\t\t\t\t\t// Give up on this one, try another\n\t\t\t\t\tnext.noLongerRoutingTo(thisTag, false);\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tforwardRejectedOverload();\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tif (msg.getSpec() == DMT.FNPRejectedLoop) {\n\t\t\t\tnext.successNotOverload();\n\t\t\t\t// Loop - we don't want to send the data to this one\n\t\t\t\tnext.noLongerRoutingTo(thisTag, false);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tif (msg.getSpec() != DMT.FNPAccepted) {\n\t\t\t\tLogger.error(this,\n\t\t\t\t\t\t\"Unexpected message waiting for Accepted: \"\n\t\t\t\t\t\t\t\t+ msg);\n\t\t\t\tnext.noLongerRoutingTo(thisTag, false);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// Otherwise is an FNPAccepted\n\t\t}\n        \n        if((msg == null) || (msg.getSpec() != DMT.FNPAccepted)) return false;\n        return true;\n        \n\t}","commit_id":"83d571bfcda45c9f895d8d37c02ed8713c8d9610","url":"https://github.com/freenet/fred"},{"original_method":"private void realRun() {\n        \n        PeerNode next = null;\n        // While in no-cache mode, we don't decrement HTL on a RejectedLoop or similar, but we only allow a limited number of such failures before RNFing.\n        int highHTLFailureCount = 0;\n        boolean starting = true;\n        while(true) {\n        \tsynchronized(backgroundTransfers) {\n        \t\tif(receiveFailed) {\n        \t\t\treturn; // don't need to set status as killed by CHKInsertHandler\n        \t\t}\n        \t}\n            \n            /*\n             * If we haven't routed to any node yet, decrement according to the source.\n             * If we have, decrement according to the node which just failed.\n             * Because:\n             * 1) If we always decrement according to source then we can be at max or min HTL\n             * for a long time while we visit *every* peer node. This is BAD!\n             * 2) The node which just failed can be seen as the requestor for our purposes.\n             */\n            // Decrement at this point so we can DNF immediately on reaching HTL 0.\n            boolean canWriteStorePrev = node.canWriteDatastoreInsert(htl);\n            if((!starting) && (!canWriteStorePrev)) {\n            \t// We always decrement on starting a sender.\n            \t// However, after that, if our HTL is above the no-cache threshold,\n            \t// we do not want to decrement the HTL for trivial rejections (e.g. RejectedLoop),\n            \t// because we would end up caching data too close to the originator.\n            \t// So allow 5 failures and then RNF.\n            \tif(highHTLFailureCount++ >= MAX_HIGH_HTL_FAILURES) {\n            \t\tif(logMINOR) Logger.minor(this, \"Too many failures at non-cacheable HTL\");\n                    finish(ROUTE_NOT_FOUND, null);\n                    return;\n            \t}\n            \tif(logMINOR) Logger.minor(this, \"Allowing failure \"+highHTLFailureCount+\" htl is still \"+htl);\n            } else {\n                htl = node.decrementHTL(sentRequest ? next : source, htl);\n                if(logMINOR) Logger.minor(this, \"Decremented HTL to \"+htl);\n            }\n            starting = false;\n            synchronized (this) {\n            \tif(htl == 0) {\n            \t\t// Send an InsertReply back\n            \t\tif(!sentRequest)\n            \t\t\torigTag.setNotRoutedOnwards();\n            \t\tfinish(SUCCESS, null);\n            \t\treturn;\n            \t}\n            }\n            \n            if( node.canWriteDatastoreInsert(htl) && (!canWriteStorePrev) && forkOnCacheable) {\n            \t// FORK! We are now cacheable, and it is quite possible that we have already gone over the ideal sink nodes,\n            \t// in which case if we don't fork we will miss them, and greatly reduce the insert's reachability.\n            \t// So we fork: Create a new UID so we can go over the previous hops again if they happen to be good places to store the data.\n            \t\n            \t// Existing transfers will keep their existing UIDs, since they copied the UID in the constructor.\n            \t\n            \tuid = node.clientCore.makeUID();\n\t\t\t\tforkedRequestTag = new InsertTag(false, InsertTag.START.REMOTE, source, realTimeFlag, uid, node);\n\t\t\t\tforkedRequestTag.reassignToSelf();\n\t\t\t\tforkedRequestTag.startedSender();\n\t\t\t\tforkedRequestTag.unlockHandler();\n            \tLogger.normal(this, \"FORKING CHK INSERT \"+origUID+\" to \"+uid);\n            \tnodesRoutedTo.clear();\n            \tnode.lockUID(uid, false, true, false, false, realTimeFlag, forkedRequestTag);\n            }\n            \n            // Route it\n            // Can backtrack, so only route to nodes closer than we are to target.\n            next = node.peers.closerPeer(forkedRequestTag == null ? source : null, nodesRoutedTo, target, true, node.isAdvancedModeEnabled(), -1, null,\n\t\t\t        null, htl, ignoreLowBackoff ? Node.LOW_BACKOFF : 0, source == null);\n\t\t\t\n            if(next == null) {\n                // Backtrack\n        \t\tif(!sentRequest)\n        \t\t\torigTag.setNotRoutedOnwards();\n                finish(ROUTE_NOT_FOUND, null);\n                return;\n            }\n\t\t\t\n            if(logMINOR) Logger.minor(this, \"Routing insert to \"+next);\n            nodesRoutedTo.add(next);\n            \n            Message req;\n            \n            req = DMT.createFNPInsertRequest(uid, htl, myKey);\n            if(forkOnCacheable != Node.FORK_ON_CACHEABLE_DEFAULT) {\n            \treq.addSubMessage(DMT.createFNPSubInsertForkControl(forkOnCacheable));\n            }\n            if(ignoreLowBackoff != Node.IGNORE_LOW_BACKOFF_DEFAULT) {\n            \treq.addSubMessage(DMT.createFNPSubInsertIgnoreLowBackoff(ignoreLowBackoff));\n            }\n            if(preferInsert != Node.PREFER_INSERT_DEFAULT) {\n            \treq.addSubMessage(DMT.createFNPSubInsertPreferInsert(preferInsert));\n            }\n        \treq.addSubMessage(DMT.createFNPRealTimeFlag(realTimeFlag));\n            \n            InsertTag thisTag = forkedRequestTag;\n            if(forkedRequestTag == null) thisTag = origTag;\n            \n            thisTag.addRoutedTo(next, false);\n            \n            // Send to next node\n            \n            try {\n\t\t\t\t/*\n\t\t\t\t When using sendSync(), this send can often timeout (it is the first request we are sending to this node).\n\t\t\t\t -If sendSync blocks here (message queue is full, node down, etc.) it can take up to 10 minutes,\n\t\t\t\t  if this occurs at even two nodes in any given insert (at any point in the path), the entire insert chain\n\t\t\t\t  will fatally timeout.\n\t\t\t\t -We cannot be informed if sendSync() does timeout. A message will be logged, but this thread will simply continue\n\t\t\t\t   to the waitFor() and spend another timeout period there.\n\t\t\t\t -The timeout on the waitFor() is 10 seconds (ACCEPTED_TIMEOUT).\n\t\t\t\t -The interesting case is when this next node is temporarily busy, in which case we might skip a busy node if they\n\t\t\t\t   don't respond in ten seconds (ACCEPTED_TIMEOUT). Or, if the length of the send queue to them is greater than\n\t\t\t\t   ACCEPTED_TIMEOUT, using sendAsync() will skip them before they get the request. This would be a need for retuning\n\t\t\t\t   ACCEPTED_TIMEOUT.\n\t\t\t\t */\n\t\t\t\tnext.sendAsync(req, null, this);\n\t\t\t} catch (NotConnectedException e1) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Not connected to \"+next);\n\t\t\t\tthisTag.removeRoutingTo(next);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsynchronized (this) {\n\t\t\t\tsentRequest = true;\t\t\t\t\n\t\t\t}\n\n\t\t\tboolean failed;\n\t\t\tsynchronized(backgroundTransfers) {\n\t\t\t\tfailed = receiveFailed;\n\t\t\t}\n\t\t\tif(failed) {\n\t\t\t\tthisTag.removeRoutingTo(next);\n\t\t\t\treturn; // don't need to set status as killed by CHKInsertHandler\n\t\t\t}\n\t\t\t\n            Message msg = null;\n            \n            if(!waitAccepted(next, thisTag)) {\n\t\t\t\tthisTag.removeRoutingTo(next);\n    \t\t\tsynchronized(backgroundTransfers) {\n    \t\t\t\tfailed = receiveFailed;\n    \t\t\t}\n    \t\t\tif(failed) {\n    \t\t\t\treturn; // don't need to set status as killed by CHKInsertHandler\n    \t\t\t}\n\t\t\t\tcontinue; // Try another node\n            }\n            \t\n            if(logMINOR) Logger.minor(this, \"Got Accepted on \"+this);\n            \n            // Send them the data.\n            // Which might be the new data resulting from a collision...\n\n            Message dataInsert;\n            dataInsert = DMT.createFNPDataInsert(uid, headers);\n            /** What are we waiting for now??:\n             * - FNPRouteNotFound - couldn't exhaust HTL, but send us the \n             *   data anyway please\n             * - FNPInsertReply - used up all HTL, yay\n             * - FNPRejectOverload - propagating an overload error :(\n             * - FNPRejectTimeout - we took too long to send the DataInsert\n             * - FNPDataInsertRejected - the insert was invalid\n             */\n            \n            MessageFilter mfInsertReply = MessageFilter.create().setSource(next).setField(DMT.UID, uid).setTimeout(searchTimeout).setType(DMT.FNPInsertReply);\n            MessageFilter mfRejectedOverload = MessageFilter.create().setSource(next).setField(DMT.UID, uid).setTimeout(searchTimeout).setType(DMT.FNPRejectedOverload);\n            MessageFilter mfRouteNotFound = MessageFilter.create().setSource(next).setField(DMT.UID, uid).setTimeout(searchTimeout).setType(DMT.FNPRouteNotFound);\n            MessageFilter mfDataInsertRejected = MessageFilter.create().setSource(next).setField(DMT.UID, uid).setTimeout(searchTimeout).setType(DMT.FNPDataInsertRejected);\n            MessageFilter mfTimeout = MessageFilter.create().setSource(next).setField(DMT.UID, uid).setTimeout(searchTimeout).setType(DMT.FNPRejectedTimeout);\n            \n            MessageFilter mf = mfInsertReply.or(mfRouteNotFound.or(mfDataInsertRejected.or(mfTimeout.or(mfRejectedOverload))));\n\n            if(logMINOR) Logger.minor(this, \"Sending DataInsert\");\n\t\t\tsynchronized(backgroundTransfers) {\n\t\t\t\tfailed = receiveFailed;\n\t\t\t}\n\t\t\tif(failed) {\n\t\t\t\tthisTag.removeRoutingTo(next);\n\t\t\t\treturn; // don't need to set status as killed by CHKInsertHandler\n\t\t\t}\n            try {\n\t\t\t\tnext.sendSync(dataInsert, this);\n\t\t\t} catch (NotConnectedException e1) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Not connected sending DataInsert: \"+next+\" for \"+uid);\n\t\t\t\tthisTag.removeRoutingTo(next);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif(logMINOR) Logger.minor(this, \"Sending data\");\n\t\t\tstartBackgroundTransfer(next, prb);\n\t\t\t\n            while (true) {\n\n    \t\t\tsynchronized(backgroundTransfers) {\n    \t\t\t\tfailed = receiveFailed;\n    \t\t\t}\n    \t\t\tif(failed) {\n    \t\t\t\tthisTag.removeRoutingTo(next);\n    \t\t\t\treturn; // don't need to set status as killed by CHKInsertHandler\n    \t\t\t}\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\tmsg = node.usm.waitFor(mf, this);\n\t\t\t\t} catch (DisconnectedException e) {\n\t\t\t\t\tLogger.normal(this, \"Disconnected from \" + next\n\t\t\t\t\t\t\t+ \" while waiting for InsertReply on \" + this);\n    \t\t\t\tthisTag.removeRoutingTo(next);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n    \t\t\tsynchronized(backgroundTransfers) {\n    \t\t\t\tfailed = receiveFailed;\n    \t\t\t}\n    \t\t\tif(failed) {\n    \t\t\t\tthisTag.removeRoutingTo(next);\n    \t\t\t\treturn; // don't need to set status as killed by CHKInsertHandler\n    \t\t\t}\n\t\t\t\t\n\t\t\t\tif (msg == null) {\n\t\t\t\t\t\n\t\t\t\t\tLogger.error(this, \"Timeout on insert \"+this+\" to \"+next);\n\t\t\t\t\t\n\t\t\t\t\t// First timeout.\n\t\t\t\t\t// Could be caused by the next node, or could be caused downstream.\n\t\t\t\t\tnext.localRejectedOverload(\"AfterInsertAcceptedTimeout2\");\n\t\t\t\t\tforwardRejectedOverload();\n\n\t\t\t\t\tsynchronized(this) {\n\t\t\t\t\t\tstatus = TIMED_OUT;\n\t\t\t\t\t\tnotifyAll();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Wait for second timeout.\n\t\t\t\t\t\n\t\t            while (true) {\n\n\t\t    \t\t\tsynchronized(backgroundTransfers) {\n\t\t    \t\t\t\tfailed = receiveFailed;\n\t\t    \t\t\t}\n\t\t    \t\t\tif(failed) {\n\t\t    \t\t\t\tthisTag.removeRoutingTo(next);\n\t\t    \t\t\t\treturn; // don't need to set status as killed by CHKInsertHandler\n\t\t    \t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tmsg = node.usm.waitFor(mf, this);\n\t\t\t\t\t\t} catch (DisconnectedException e) {\n\t\t\t\t\t\t\tLogger.normal(this, \"Disconnected from \" + next\n\t\t\t\t\t\t\t\t\t+ \" while waiting for InsertReply on \" + this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t    \t\t\tsynchronized(backgroundTransfers) {\n\t\t    \t\t\t\tfailed = receiveFailed;\n\t\t    \t\t\t}\n\t\t    \t\t\tif(failed) {\n\t\t    \t\t\t\tthisTag.removeRoutingTo(next);\n\t\t    \t\t\t\treturn; // don't need to set status as killed by CHKInsertHandler\n\t\t    \t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(msg == null) {\n\t\t\t\t\t\t\t// Second timeout.\n\t\t\t\t\t\t\t// Definitely caused by the next node, fatal.\n\t\t\t\t\t\t\tLogger.error(this, \"Got second (local) timeout on \"+this+\" from \"+next);\n\t\t\t\t\t\t\tnext.fatalTimeout();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (msg.getSpec() == DMT.FNPRejectedTimeout) {\n\t\t\t\t\t\t\t// Next node timed out awaiting our DataInsert.\n\t\t\t\t\t\t\t// But we already sent it, so something is wrong. :(\n\t\t\t\t\t\t\thandleRejectedTimeout(msg, next);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (msg.getSpec() == DMT.FNPRejectedOverload) {\n\t\t\t\t\t\t\tif(handleRejectedOverload(msg, next, thisTag)) return; // Don't try another node.\n\t\t\t\t\t\t\telse continue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (msg.getSpec() == DMT.FNPRouteNotFound) {\n\t\t\t\t\t\t\treturn; // Don't try another node.\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (msg.getSpec() == DMT.FNPDataInsertRejected) {\n\t\t\t\t\t\t\thandleDataInsertRejected(msg, next, thisTag);\n\t\t\t\t\t\t\treturn; // Don't try another node.\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (msg.getSpec() != DMT.FNPInsertReply) {\n\t\t\t\t\t\t\tLogger.error(this, \"Unknown reply: \" + msg);\n\t\t\t\t\t\t\tfinish(INTERNAL_ERROR, next);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Our task is complete, one node (quite deep), has accepted the insert.\n\t\t\t\t\t\t\t// The request will not be routed to any other nodes, this is where the data *should* be.\n\t\t\t\t\t\t\tfinish(SUCCESS, next);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t            }\n\t\t\t\t}\n\n\t\t\t\tif (msg.getSpec() == DMT.FNPRejectedTimeout) {\n\t\t\t\t\t// Next node timed out awaiting our DataInsert.\n\t\t\t\t\t// But we already sent it, so something is wrong. :(\n\t\t\t\t\thandleRejectedTimeout(msg, next);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (msg.getSpec() == DMT.FNPRejectedOverload) {\n\t\t\t\t\tif(handleRejectedOverload(msg, next, thisTag)) break;\n\t\t\t\t\telse continue;\n\t\t\t\t}\n\n\t\t\t\tif (msg.getSpec() == DMT.FNPRouteNotFound) {\n\t\t\t\t\t//RNF means that the HTL was not exhausted, but that the data will still be stored.\n\t\t\t\t\thandleRNF(msg, next, thisTag);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t//Can occur after reception of the entire chk block\n\t\t\t\tif (msg.getSpec() == DMT.FNPDataInsertRejected) {\n\t\t\t\t\thandleDataInsertRejected(msg, next, thisTag);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (msg.getSpec() != DMT.FNPInsertReply) {\n\t\t\t\t\tLogger.error(this, \"Unknown reply: \" + msg);\n\t\t\t\t\tfinish(INTERNAL_ERROR, next);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\t// Our task is complete, one node (quite deep), has accepted the insert.\n\t\t\t\t\t// The request will not be routed to any other nodes, this is where the data *should* be.\n\t\t\t\t\tfinish(SUCCESS, next);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (logMINOR) Logger.debug(this, \"Trying alternate node for insert\");\n\t\t}\n\t}","id":15957,"modified_method":"private void realRun() {\n        \n        PeerNode next = null;\n        // While in no-cache mode, we don't decrement HTL on a RejectedLoop or similar, but we only allow a limited number of such failures before RNFing.\n        int highHTLFailureCount = 0;\n        boolean starting = true;\n        while(true) {\n        \tif(hasReceiveFailed()) return; // don't need to set status as killed by CHKInsertHandler\n            \n            /*\n             * If we haven't routed to any node yet, decrement according to the source.\n             * If we have, decrement according to the node which just failed.\n             * Because:\n             * 1) If we always decrement according to source then we can be at max or min HTL\n             * for a long time while we visit *every* peer node. This is BAD!\n             * 2) The node which just failed can be seen as the requestor for our purposes.\n             */\n            // Decrement at this point so we can DNF immediately on reaching HTL 0.\n            boolean canWriteStorePrev = node.canWriteDatastoreInsert(htl);\n            if((!starting) && (!canWriteStorePrev)) {\n            \t// We always decrement on starting a sender.\n            \t// However, after that, if our HTL is above the no-cache threshold,\n            \t// we do not want to decrement the HTL for trivial rejections (e.g. RejectedLoop),\n            \t// because we would end up caching data too close to the originator.\n            \t// So allow 5 failures and then RNF.\n            \tif(highHTLFailureCount++ >= MAX_HIGH_HTL_FAILURES) {\n            \t\tif(logMINOR) Logger.minor(this, \"Too many failures at non-cacheable HTL\");\n                    finish(ROUTE_NOT_FOUND, null);\n                    return;\n            \t}\n            \tif(logMINOR) Logger.minor(this, \"Allowing failure \"+highHTLFailureCount+\" htl is still \"+htl);\n            } else {\n                htl = node.decrementHTL(sentRequest ? next : source, htl);\n                if(logMINOR) Logger.minor(this, \"Decremented HTL to \"+htl);\n            }\n            starting = false;\n            synchronized (this) {\n            \tif(htl == 0) {\n            \t\t// Send an InsertReply back\n            \t\tif(!sentRequest)\n            \t\t\torigTag.setNotRoutedOnwards();\n            \t\tfinish(SUCCESS, null);\n            \t\treturn;\n            \t}\n            }\n            \n            if( node.canWriteDatastoreInsert(htl) && (!canWriteStorePrev) && forkOnCacheable) {\n            \t// FORK! We are now cacheable, and it is quite possible that we have already gone over the ideal sink nodes,\n            \t// in which case if we don't fork we will miss them, and greatly reduce the insert's reachability.\n            \t// So we fork: Create a new UID so we can go over the previous hops again if they happen to be good places to store the data.\n            \t\n            \t// Existing transfers will keep their existing UIDs, since they copied the UID in the constructor.\n            \t\n            \tuid = node.clientCore.makeUID();\n\t\t\t\tforkedRequestTag = new InsertTag(false, InsertTag.START.REMOTE, source, realTimeFlag, uid, node);\n\t\t\t\tforkedRequestTag.reassignToSelf();\n\t\t\t\tforkedRequestTag.startedSender();\n\t\t\t\tforkedRequestTag.unlockHandler();\n            \tLogger.normal(this, \"FORKING CHK INSERT \"+origUID+\" to \"+uid);\n            \tnodesRoutedTo.clear();\n            \tnode.lockUID(uid, false, true, false, false, realTimeFlag, forkedRequestTag);\n            }\n            \n            // Route it\n            // Can backtrack, so only route to nodes closer than we are to target.\n            next = node.peers.closerPeer(forkedRequestTag == null ? source : null, nodesRoutedTo, target, true, node.isAdvancedModeEnabled(), -1, null,\n\t\t\t        null, htl, ignoreLowBackoff ? Node.LOW_BACKOFF : 0, source == null);\n\t\t\t\n            if(next == null) {\n                // Backtrack\n        \t\tif(!sentRequest)\n        \t\t\torigTag.setNotRoutedOnwards();\n                finish(ROUTE_NOT_FOUND, null);\n                return;\n            }\n\t\t\t\n            if(logMINOR) Logger.minor(this, \"Routing insert to \"+next);\n            nodesRoutedTo.add(next);\n            \n            Message req;\n            \n            req = DMT.createFNPInsertRequest(uid, htl, myKey);\n            if(forkOnCacheable != Node.FORK_ON_CACHEABLE_DEFAULT) {\n            \treq.addSubMessage(DMT.createFNPSubInsertForkControl(forkOnCacheable));\n            }\n            if(ignoreLowBackoff != Node.IGNORE_LOW_BACKOFF_DEFAULT) {\n            \treq.addSubMessage(DMT.createFNPSubInsertIgnoreLowBackoff(ignoreLowBackoff));\n            }\n            if(preferInsert != Node.PREFER_INSERT_DEFAULT) {\n            \treq.addSubMessage(DMT.createFNPSubInsertPreferInsert(preferInsert));\n            }\n        \treq.addSubMessage(DMT.createFNPRealTimeFlag(realTimeFlag));\n            \n            InsertTag thisTag = forkedRequestTag;\n            if(forkedRequestTag == null) thisTag = origTag;\n            \n            thisTag.addRoutedTo(next, false);\n            \n            // Send to next node\n            \n            try {\n\t\t\t\t/*\n\t\t\t\t When using sendSync(), this send can often timeout (it is the first request we are sending to this node).\n\t\t\t\t -If sendSync blocks here (message queue is full, node down, etc.) it can take up to 10 minutes,\n\t\t\t\t  if this occurs at even two nodes in any given insert (at any point in the path), the entire insert chain\n\t\t\t\t  will fatally timeout.\n\t\t\t\t -We cannot be informed if sendSync() does timeout. A message will be logged, but this thread will simply continue\n\t\t\t\t   to the waitFor() and spend another timeout period there.\n\t\t\t\t -The timeout on the waitFor() is 10 seconds (ACCEPTED_TIMEOUT).\n\t\t\t\t -The interesting case is when this next node is temporarily busy, in which case we might skip a busy node if they\n\t\t\t\t   don't respond in ten seconds (ACCEPTED_TIMEOUT). Or, if the length of the send queue to them is greater than\n\t\t\t\t   ACCEPTED_TIMEOUT, using sendAsync() will skip them before they get the request. This would be a need for retuning\n\t\t\t\t   ACCEPTED_TIMEOUT.\n\t\t\t\t */\n\t\t\t\tnext.sendAsync(req, null, this);\n\t\t\t} catch (NotConnectedException e1) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Not connected to \"+next);\n\t\t\t\tthisTag.removeRoutingTo(next);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsynchronized (this) {\n\t\t\t\tsentRequest = true;\t\t\t\t\n\t\t\t}\n\n\t\t\tif(failIfReceiveFailed(thisTag, next)) return;\n\t\t\t\n            Message msg = null;\n            \n            if(!waitAccepted(next, thisTag)) {\n\t\t\t\tthisTag.removeRoutingTo(next);\n\t\t\t\tif(failIfReceiveFailed(thisTag, next)) return;\n\t\t\t\tcontinue; // Try another node\n            }\n            \t\n            if(logMINOR) Logger.minor(this, \"Got Accepted on \"+this);\n            \n            // Send them the data.\n            // Which might be the new data resulting from a collision...\n\n            Message dataInsert;\n            dataInsert = DMT.createFNPDataInsert(uid, headers);\n            /** What are we waiting for now??:\n             * - FNPRouteNotFound - couldn't exhaust HTL, but send us the \n             *   data anyway please\n             * - FNPInsertReply - used up all HTL, yay\n             * - FNPRejectOverload - propagating an overload error :(\n             * - FNPRejectTimeout - we took too long to send the DataInsert\n             * - FNPDataInsertRejected - the insert was invalid\n             */\n            \n            MessageFilter mfInsertReply = MessageFilter.create().setSource(next).setField(DMT.UID, uid).setTimeout(searchTimeout).setType(DMT.FNPInsertReply);\n            MessageFilter mfRejectedOverload = MessageFilter.create().setSource(next).setField(DMT.UID, uid).setTimeout(searchTimeout).setType(DMT.FNPRejectedOverload);\n            MessageFilter mfRouteNotFound = MessageFilter.create().setSource(next).setField(DMT.UID, uid).setTimeout(searchTimeout).setType(DMT.FNPRouteNotFound);\n            MessageFilter mfDataInsertRejected = MessageFilter.create().setSource(next).setField(DMT.UID, uid).setTimeout(searchTimeout).setType(DMT.FNPDataInsertRejected);\n            MessageFilter mfTimeout = MessageFilter.create().setSource(next).setField(DMT.UID, uid).setTimeout(searchTimeout).setType(DMT.FNPRejectedTimeout);\n            \n            MessageFilter mf = mfInsertReply.or(mfRouteNotFound.or(mfDataInsertRejected.or(mfTimeout.or(mfRejectedOverload))));\n\n            if(logMINOR) Logger.minor(this, \"Sending DataInsert\");\n\t\t\tif(failIfReceiveFailed(thisTag, next)) return;\n            try {\n\t\t\t\tnext.sendSync(dataInsert, this);\n\t\t\t} catch (NotConnectedException e1) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Not connected sending DataInsert: \"+next+\" for \"+uid);\n\t\t\t\tthisTag.removeRoutingTo(next);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif(logMINOR) Logger.minor(this, \"Sending data\");\n\t\t\tstartBackgroundTransfer(next, prb);\n\t\t\t\n            while (true) {\n\n    \t\t\tif(failIfReceiveFailed(thisTag, next)) return;\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\tmsg = node.usm.waitFor(mf, this);\n\t\t\t\t} catch (DisconnectedException e) {\n\t\t\t\t\tLogger.normal(this, \"Disconnected from \" + next\n\t\t\t\t\t\t\t+ \" while waiting for InsertReply on \" + this);\n    \t\t\t\tthisTag.removeRoutingTo(next);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(failIfReceiveFailed(thisTag, next)) return;\n\t\t\t\t\n\t\t\t\tif (msg == null) {\n\t\t\t\t\t\n\t\t\t\t\tLogger.error(this, \"Timeout on insert \"+this+\" to \"+next);\n\t\t\t\t\t\n\t\t\t\t\t// First timeout.\n\t\t\t\t\t// Could be caused by the next node, or could be caused downstream.\n\t\t\t\t\tnext.localRejectedOverload(\"AfterInsertAcceptedTimeout2\");\n\t\t\t\t\tforwardRejectedOverload();\n\n\t\t\t\t\tsynchronized(this) {\n\t\t\t\t\t\tstatus = TIMED_OUT;\n\t\t\t\t\t\tnotifyAll();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Wait for second timeout.\n\t\t\t\t\t\n\t\t            while (true) {\n\n\t\t    \t\t\tif(failIfReceiveFailed(thisTag, next)) return;\n\t\t\t\t\t\t\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tmsg = node.usm.waitFor(mf, this);\n\t\t\t\t\t\t} catch (DisconnectedException e) {\n\t\t\t\t\t\t\tLogger.normal(this, \"Disconnected from \" + next\n\t\t\t\t\t\t\t\t\t+ \" while waiting for InsertReply on \" + this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(failIfReceiveFailed(thisTag, next)) return;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(msg == null) {\n\t\t\t\t\t\t\t// Second timeout.\n\t\t\t\t\t\t\t// Definitely caused by the next node, fatal.\n\t\t\t\t\t\t\tLogger.error(this, \"Got second (local) timeout on \"+this+\" from \"+next);\n\t\t\t\t\t\t\tnext.fatalTimeout();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (msg.getSpec() == DMT.FNPRejectedTimeout) {\n\t\t\t\t\t\t\t// Next node timed out awaiting our DataInsert.\n\t\t\t\t\t\t\t// But we already sent it, so something is wrong. :(\n\t\t\t\t\t\t\thandleRejectedTimeout(msg, next);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (msg.getSpec() == DMT.FNPRejectedOverload) {\n\t\t\t\t\t\t\tif(handleRejectedOverload(msg, next, thisTag)) return; // Don't try another node.\n\t\t\t\t\t\t\telse continue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (msg.getSpec() == DMT.FNPRouteNotFound) {\n\t\t\t\t\t\t\treturn; // Don't try another node.\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (msg.getSpec() == DMT.FNPDataInsertRejected) {\n\t\t\t\t\t\t\thandleDataInsertRejected(msg, next, thisTag);\n\t\t\t\t\t\t\treturn; // Don't try another node.\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (msg.getSpec() != DMT.FNPInsertReply) {\n\t\t\t\t\t\t\tLogger.error(this, \"Unknown reply: \" + msg);\n\t\t\t\t\t\t\tfinish(INTERNAL_ERROR, next);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Our task is complete, one node (quite deep), has accepted the insert.\n\t\t\t\t\t\t\t// The request will not be routed to any other nodes, this is where the data *should* be.\n\t\t\t\t\t\t\tfinish(SUCCESS, next);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t            }\n\t\t\t\t}\n\n\t\t\t\tif (msg.getSpec() == DMT.FNPRejectedTimeout) {\n\t\t\t\t\t// Next node timed out awaiting our DataInsert.\n\t\t\t\t\t// But we already sent it, so something is wrong. :(\n\t\t\t\t\thandleRejectedTimeout(msg, next);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (msg.getSpec() == DMT.FNPRejectedOverload) {\n\t\t\t\t\tif(handleRejectedOverload(msg, next, thisTag)) break;\n\t\t\t\t\telse continue;\n\t\t\t\t}\n\n\t\t\t\tif (msg.getSpec() == DMT.FNPRouteNotFound) {\n\t\t\t\t\t//RNF means that the HTL was not exhausted, but that the data will still be stored.\n\t\t\t\t\thandleRNF(msg, next, thisTag);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t//Can occur after reception of the entire chk block\n\t\t\t\tif (msg.getSpec() == DMT.FNPDataInsertRejected) {\n\t\t\t\t\thandleDataInsertRejected(msg, next, thisTag);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (msg.getSpec() != DMT.FNPInsertReply) {\n\t\t\t\t\tLogger.error(this, \"Unknown reply: \" + msg);\n\t\t\t\t\tfinish(INTERNAL_ERROR, next);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\t// Our task is complete, one node (quite deep), has accepted the insert.\n\t\t\t\t\t// The request will not be routed to any other nodes, this is where the data *should* be.\n\t\t\t\t\tfinish(SUCCESS, next);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (logMINOR) Logger.debug(this, \"Trying alternate node for insert\");\n\t\t}\n\t}","commit_id":"83d571bfcda45c9f895d8d37c02ed8713c8d9610","url":"https://github.com/freenet/fred"},{"original_method":"/**\n   * Get an XML representation of the given rule matches.\n   * @param text\n   *          the original text that was checked, used to get the context of the\n   *          matches\n   * @param contextSize\n   *          the desired context size in characters\n   * @param xmlMode\n   *          how to print the XML\n   * @param lang\n   *          the language of the text (might be null)\n   * @param motherTongue\n   *          the mother tongue of the user (might be null)\n   */\n  public static String ruleMatchesToXML(final List<RuleMatch> ruleMatches,\n      final String text, final int contextSize, final XmlPrintMode xmlMode,\n      final Language lang, final Language motherTongue) {\n    //\n    // IMPORTANT: people rely on this format, don't change it!\n    //\n    final StringBuilder xml = new StringBuilder();\n\n    if (xmlMode == XmlPrintMode.NORMAL_XML || xmlMode == XmlPrintMode.START_XML) {\n      xml.append(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\");\n      xml.append(\"<matches software=\\\"LanguageTool\\\" version=\\\"\" + JLanguageTool.VERSION + \"\\\"\" +\n              \" buildDate=\\\"\" + JLanguageTool.BUILD_DATE + \"\\\">\\n\");\n    }\n    \n    if (lang != null || motherTongue != null) {\n      String languageXml;\n      languageXml = \"<language \";\n      if (lang != null) {\n        languageXml += \"shortname=\\\"\" + lang.getShortNameWithVariant() + \"\\\" name=\\\"\" + lang.getName() + \"\\\"\";\n      }\n      if(null != motherTongue && (lang == null || !motherTongue.getShortName().equals(lang.getShortNameWithVariant()))) {\n        languageXml += \" mothertongueshortname=\\\"\" + motherTongue.getShortName() + \"\\\" mothertonguename=\\\"\" + motherTongue.getName() + \"\\\"\";\n      }\n      languageXml += \"/>\\n\";\n      xml.append(languageXml);\n    }\n\n    final ContextTools contextTools = new ContextTools();\n    contextTools.setEscapeHtml(false);\n    contextTools.setContextSize(contextSize);\n    final String START_MARKER = \"__languagetool_start_marker\";\n    contextTools.setErrorMarkerStart(START_MARKER);\n    contextTools.setErrorMarkerEnd(\"\");\n\n    for (final RuleMatch match : ruleMatches) {\n      String subId = \"\";\n      if (match.getRule() instanceof PatternRule) {\n        final PatternRule pRule = (PatternRule) match.getRule();\n        if (pRule.getSubId() != null) {\n          subId = \" subId=\\\"\" + escapeXMLForAPIOutput(pRule.getSubId()) + \"\\\" \";\n        }\n      }\n      xml.append(\"<error\" + \" fromy=\\\"\" + match.getLine() + \"\\\"\" + \" fromx=\\\"\"\n          + (match.getColumn() - 1) + \"\\\"\" + \" toy=\\\"\" + match.getEndLine() + \"\\\"\"\n          + \" tox=\\\"\" + (match.getEndColumn() - 1) + \"\\\"\" + \" ruleId=\\\"\"\n          + match.getRule().getId() + \"\\\"\");\n      final String msg = match.getMessage().replaceAll(\"<\/?suggestion>\", \"'\");\n      xml.append(subId);\n      xml.append(\" msg=\\\"\" + escapeXMLForAPIOutput(msg) + \"\\\"\");\n      String context = contextTools.getContext(match.getFromPos(), match.getToPos(), text);\n      xml.append(\" replacements=\\\"\"\n          + escapeXMLForAPIOutput(listToString(\n              match.getSuggestedReplacements(), \"#\")) + \"\\\"\");\n      // get position of error in context and remove artificial marker again:\n      final int contextOffset = context.indexOf(START_MARKER);\n      context = context.replaceFirst(START_MARKER, \"\");\n      context = context.replaceAll(\"[\\n\\r]\", \" \");\n      xml.append(\" context=\\\"\" + StringTools.escapeXML(context) + \"\\\"\");\n      xml.append(\" contextoffset=\\\"\" + contextOffset + \"\\\"\");\n      xml.append(\" offset=\\\"\" + match.getFromPos() + \"\\\"\");\n      xml.append(\" errorlength=\\\"\" + (match.getToPos() - match.getFromPos()) + \"\\\"\");\n      if (match.getRule().getUrl() != null) {\n          xml.append(\" url=\\\"\"\n              + escapeXMLForAPIOutput(match.getRule().getUrl().toString())\n              + \"\\\"\");\n      }\n      final Category category = match.getRule().getCategory();\n      if (category != null) {\n        xml.append(\" category=\\\"\" + escapeXMLForAPIOutput(category.getName()) + \"\\\"\");\n      }\n      final String type = match.getRule().getLocQualityIssueType();\n      if (type != null) {\n        xml.append(\" locqualityissuetype=\\\"\" + escapeXMLForAPIOutput(type) + \"\\\"\");\n      }\n      xml.append(\"/>\\n\");\n    }\n    if (xmlMode == XmlPrintMode.END_XML || xmlMode == XmlPrintMode.NORMAL_XML) {\n      xml.append(\"<\/matches>\\n\");\n    }\n    return xml.toString();\n  }","id":15958,"modified_method":"/**\n   * Get an XML representation of the given rule matches.\n   * @param text\n   *          the original text that was checked, used to get the context of the\n   *          matches\n   * @param contextSize\n   *          the desired context size in characters\n   * @param xmlMode\n   *          how to print the XML\n   * @param lang\n   *          the language of the text (might be null)\n   * @param motherTongue\n   *          the mother tongue of the user (might be null)\n   */\n  public static String ruleMatchesToXML(final List<RuleMatch> ruleMatches,\n      final String text, final int contextSize, final XmlPrintMode xmlMode,\n      final Language lang, final Language motherTongue) {\n    //\n    // IMPORTANT: people rely on this format, don't change it!\n    //\n    final StringBuilder xml = new StringBuilder();\n\n    if (xmlMode == XmlPrintMode.NORMAL_XML || xmlMode == XmlPrintMode.START_XML) {\n      xml.append(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\");\n      xml.append(\"<matches software=\\\"LanguageTool\\\" version=\\\"\" + JLanguageTool.VERSION + \"\\\"\" + \" buildDate=\\\"\")\n         .append(JLanguageTool.BUILD_DATE).append(\"\\\">\\n\");\n    }\n    \n    if (lang != null || motherTongue != null) {\n      String languageXml;\n      languageXml = \"<language \";\n      if (lang != null) {\n        languageXml += \"shortname=\\\"\" + lang.getShortNameWithVariant() + \"\\\" name=\\\"\" + lang.getName() + \"\\\"\";\n      }\n      if(null != motherTongue && (lang == null || !motherTongue.getShortName().equals(lang.getShortNameWithVariant()))) {\n        languageXml += \" mothertongueshortname=\\\"\" + motherTongue.getShortName() + \"\\\" mothertonguename=\\\"\" + motherTongue.getName() + \"\\\"\";\n      }\n      languageXml += \"/>\\n\";\n      xml.append(languageXml);\n    }\n\n    final ContextTools contextTools = new ContextTools();\n    contextTools.setEscapeHtml(false);\n    contextTools.setContextSize(contextSize);\n    final String START_MARKER = \"__languagetool_start_marker\";\n    contextTools.setErrorMarkerStart(START_MARKER);\n    contextTools.setErrorMarkerEnd(\"\");\n\n    for (final RuleMatch match : ruleMatches) {\n      String subId = \"\";\n      if (match.getRule() instanceof PatternRule) {\n        final PatternRule pRule = (PatternRule) match.getRule();\n        if (pRule.getSubId() != null) {\n          subId = \" subId=\\\"\" + escapeXMLForAPIOutput(pRule.getSubId()) + \"\\\" \";\n        }\n      }\n      xml.append(\"<error fromy=\\\"\").append(match.getLine()).append(\"\\\"\")\n         .append(\" fromx=\\\"\").append(match.getColumn() - 1).append(\"\\\"\")\n         .append(\" toy=\\\"\").append(match.getEndLine()).append(\"\\\"\")\n         .append(\" tox=\\\"\").append(match.getEndColumn() - 1).append(\"\\\"\")\n         .append(\" ruleId=\\\"\").append(match.getRule().getId()).append(\"\\\"\");\n      final String msg = match.getMessage().replaceAll(\"<\/?suggestion>\", \"'\");\n      xml.append(subId);\n      xml.append(\" msg=\\\"\").append(escapeXMLForAPIOutput(msg)).append(\"\\\"\");\n      String context = contextTools.getContext(match.getFromPos(), match.getToPos(), text);\n      xml.append(\" replacements=\\\"\").append(escapeXMLForAPIOutput(listToString(\n              match.getSuggestedReplacements(), \"#\"))).append(\"\\\"\");\n      // get position of error in context and remove artificial marker again:\n      final int contextOffset = context.indexOf(START_MARKER);\n      context = context.replaceFirst(START_MARKER, \"\");\n      context = context.replaceAll(\"[\\n\\r]\", \" \");\n      xml.append(\" context=\\\"\").append(StringTools.escapeXML(context)).append(\"\\\"\")\n         .append(\" contextoffset=\\\"\").append(contextOffset).append(\"\\\"\")\n         .append(\" offset=\\\"\").append(match.getFromPos()).append(\"\\\"\")\n         .append(\" errorlength=\\\"\").append(match.getToPos() - match.getFromPos()).append(\"\\\"\");\n      if (match.getRule().getUrl() != null) {\n          xml.append(\" url=\\\"\").append(escapeXMLForAPIOutput(match.getRule().getUrl().toString())).append(\"\\\"\");\n      }\n      final Category category = match.getRule().getCategory();\n      if (category != null) {\n        xml.append(\" category=\\\"\").append(escapeXMLForAPIOutput(category.getName())).append(\"\\\"\");\n      }\n      final String type = match.getRule().getLocQualityIssueType();\n      if (type != null) {\n        xml.append(\" locqualityissuetype=\\\"\").append(escapeXMLForAPIOutput(type)).append(\"\\\"\");\n      }\n      xml.append(\"/>\\n\");\n    }\n    if (xmlMode == XmlPrintMode.END_XML || xmlMode == XmlPrintMode.NORMAL_XML) {\n      xml.append(\"<\/matches>\\n\");\n    }\n    return xml.toString();\n  }","commit_id":"33c4a4830cdfbf0afb549ddee97da580d21396dd","url":"https://github.com/languagetool-org/languagetool"},{"original_method":"/**\n     * Pop-up the \"Add Image\" wizard panel.\n     * \n     * @param e\n     */\n    @Override\n    public void actionPerformed(ActionEvent e) {\n        Log.noteAction(AddImageAction.class);\n\n        iterator = new AddImageWizardIterator(this);\n        wizardDescriptor = new WizardDescriptor(iterator);\n        wizardDescriptor.setTitle(\"Add Image\");\n        wizardDescriptor.putProperty(NAME, e);\n\n\n        if (dialog != null) {\n            dialog.setVisible(false); // hide the old one\n        }\n        dialog = DialogDisplayer.getDefault().createDialog(wizardDescriptor);\n        dialog.setVisible(true);\n        dialog.toFront();\n\n        boolean cancelled = wizardDescriptor.getValue() != WizardDescriptor.FINISH_OPTION;\n        // @@@ Why don't we commit and revert in the same general area????\n        if (!cancelled) {\n            // commit anything\n            try {\n                commitImage(wizardDescriptor);\n            } catch (Exception ex) {\n                // Log error/display warning\n                Logger logger = Logger.getLogger(AddImageAction.class.getName());\n                logger.log(Level.SEVERE, \"Error adding image to case.\", ex);\n            }\n        }\n        \n        // Do any cleanup that needs to happen (potentially: stopping the\n        //add-image process, reverting an image)\n        runCleanupTasks();\n    }","id":15959,"modified_method":"/**\n     * Pop-up the \"Add Image\" wizard panel.\n     * \n     * @param e\n     */\n    @Override\n    public void actionPerformed(ActionEvent e) {\n        Log.noteAction(AddImageAction.class);\n\n        iterator = new AddImageWizardIterator(this);\n        wizardDescriptor = new WizardDescriptor(iterator);\n        wizardDescriptor.setTitle(\"Add Image\");\n        wizardDescriptor.putProperty(NAME, e);\n        wizardDescriptor.putProperty(SOLR_PROP, false);\n\n\n        if (dialog != null) {\n            dialog.setVisible(false); // hide the old one\n        }\n        dialog = DialogDisplayer.getDefault().createDialog(wizardDescriptor);\n        dialog.setVisible(true);\n        dialog.toFront();\n\n        boolean cancelled = wizardDescriptor.getValue() != WizardDescriptor.FINISH_OPTION;\n        // @@@ Why don't we commit and revert in the same general area????\n        if (!cancelled) {\n            // commit anything\n            try {\n                commitImage(wizardDescriptor);\n            } catch (Exception ex) {\n                // Log error/display warning\n                Logger logger = Logger.getLogger(AddImageAction.class.getName());\n                logger.log(Level.SEVERE, \"Error adding image to case.\", ex);\n            }\n        }\n        \n        // Do any cleanup that needs to happen (potentially: stopping the\n        //add-image process, reverting an image)\n        runCleanupTasks();\n    }","commit_id":"f749d6f8bacadd04010fa8a218cb888b752789ef","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Commit the finished AddImageProcess, and cancel the CleanupTask that\n     * would have reverted it.\n     * @param settings property set to get AddImageProcess and CleanupTask from\n     * @throws Exception if commit or adding the image to the case failed\n     */\n    private void commitImage(WizardDescriptor settings) throws Exception {\n        \n        String[] imgPaths = (String[]) settings.getProperty(AddImageAction.IMGPATHS_PROP);\n        String timezone = settings.getProperty(AddImageAction.TIMEZONE_PROP).toString();\n        \n        AddImageProcess process = (AddImageProcess) settings.getProperty(PROCESS_PROP);\n        \n        try {\n            long imageId = process.commit();\n            Case.getCurrentCase().addImage(imgPaths, imageId, timezone);\n        } finally {\n            // Can't bail and revert image add after commit, so disable image cleanup\n            // task\n            CleanupTask cleanupImage = (CleanupTask) settings.getProperty(IMAGECLEANUPTASK_PROP);\n            cleanupImage.disable();\n        }\n    }","id":15960,"modified_method":"/**\n     * Commit the finished AddImageProcess, and cancel the CleanupTask that\n     * would have reverted it.\n     * @param settings property set to get AddImageProcess and CleanupTask from\n     * @throws Exception if commit or adding the image to the case failed\n     */\n    private void commitImage(WizardDescriptor settings) throws Exception {\n        \n        String[] imgPaths = (String[]) settings.getProperty(AddImageAction.IMGPATHS_PROP);\n        String timezone = settings.getProperty(AddImageAction.TIMEZONE_PROP).toString();\n        boolean indexImage = (Boolean) settings.getProperty(AddImageAction.SOLR_PROP);\n        \n        AddImageProcess process = (AddImageProcess) settings.getProperty(PROCESS_PROP);\n        \n        try {\n            long imageId = process.commit();\n            Image newImage = Case.getCurrentCase().addImage(imgPaths, imageId, timezone);\n            \n            if (indexImage) {\n                // Must use a Lookup here to prevent a circular dependency\n                // between Case and KeywordSearch...\n                Lookup.getDefault().lookup(IndexImageTask.class).runTask(newImage);\n            }\n        } finally {\n            // Can't bail and revert image add after commit, so disable image cleanup\n            // task\n            CleanupTask cleanupImage = (CleanupTask) settings.getProperty(IMAGECLEANUPTASK_PROP);\n            cleanupImage.disable();\n        }\n    }","commit_id":"f749d6f8bacadd04010fa8a218cb888b752789ef","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/** This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        addImgButton = new javax.swing.JButton();\n        crDbLabel = new javax.swing.JLabel();\n        jLabel1 = new javax.swing.JLabel();\n\n        org.openide.awt.Mnemonics.setLocalizedText(addImgButton, org.openide.util.NbBundle.getMessage(AddImageVisualPanel3.class, \"AddImageVisualPanel3.addImgButton.text\")); // NOI18N\n        addImgButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                addImgButtonActionPerformed(evt);\n            }\n        });\n\n        crDbLabel.setFont(new java.awt.Font(\"Tahoma\", 1, 14)); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(crDbLabel, org.openide.util.NbBundle.getMessage(AddImageVisualPanel3.class, \"AddImageVisualPanel3.crDbLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(AddImageVisualPanel3.class, \"AddImageVisualPanel3.jLabel1.text\")); // NOI18N\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(addImgButton)\n                    .addComponent(crDbLabel)\n                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(crDbLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(jLabel1)\n                .addGap(18, 18, 18)\n                .addComponent(addImgButton)\n                .addContainerGap(54, Short.MAX_VALUE))\n        );\n    }","id":15961,"modified_method":"/** This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        addImgButton = new javax.swing.JButton();\n        crDbLabel = new javax.swing.JLabel();\n        jLabel1 = new javax.swing.JLabel();\n        indexImgButton = new javax.swing.JButton();\n        jLabel2 = new javax.swing.JLabel();\n\n        org.openide.awt.Mnemonics.setLocalizedText(addImgButton, org.openide.util.NbBundle.getMessage(AddImageVisualPanel3.class, \"AddImageVisualPanel3.addImgButton.text\")); // NOI18N\n        addImgButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                addImgButtonActionPerformed(evt);\n            }\n        });\n\n        crDbLabel.setFont(new java.awt.Font(\"Tahoma\", 1, 14)); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(crDbLabel, org.openide.util.NbBundle.getMessage(AddImageVisualPanel3.class, \"AddImageVisualPanel3.crDbLabel.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(AddImageVisualPanel3.class, \"AddImageVisualPanel3.jLabel1.text\")); // NOI18N\n\n        org.openide.awt.Mnemonics.setLocalizedText(indexImgButton, org.openide.util.NbBundle.getMessage(AddImageVisualPanel3.class, \"AddImageVisualPanel3.indexImgButton.text\")); // NOI18N\n        indexImgButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                indexImgButtonActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(AddImageVisualPanel3.class, \"AddImageVisualPanel3.jLabel2.text\")); // NOI18N\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(layout.createSequentialGroup()\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(crDbLabel)\n                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE))\n                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(jLabel2)\n                        .addContainerGap(418, Short.MAX_VALUE))\n                    .addGroup(layout.createSequentialGroup()\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(indexImgButton)\n                            .addGroup(layout.createSequentialGroup()\n                                .addComponent(addImgButton)\n                                .addGap(64, 64, 64)))\n                        .addContainerGap(368, Short.MAX_VALUE))))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(crDbLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(jLabel1)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(jLabel2)\n                .addGap(18, 18, 18)\n                .addComponent(addImgButton)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(indexImgButton)\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n    }","commit_id":"f749d6f8bacadd04010fa8a218cb888b752789ef","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Adds the image to the current case after it has been added to the DB\n     *\n     * @param imgPaths  the paths of the image that being added\n     * @param imgId  the ID of the image that being added\n     * @param timeZone  the timeZone of the image where it's added\n     */\n    void addImage(String[] imgPaths, long imgId, String timeZone) throws Exception {\n        Log.get(this.getClass()).log(Level.INFO, \"Adding image to Case.  imgPaths: {0}  ID: {1} TimeZone: {2}\", new Object[]{Arrays.toString(imgPaths), imgId, timeZone});\n\n        try {\n            xmlcm.addImage(imgPaths, imgId, timeZone); // add the image to the document handler in the XML class and to the config file\n            xmlcm.writeFile(); // write any changes to the config file\n            Image newImage = db.getImageById(imgId);\n            pcs.firePropertyChange(CASE_ADD_IMAGE, null, newImage); // the new value is the instance of the image\n        } catch (Exception ex) {\n            // throw an error here\n            throw ex;\n        }\n    }","id":15962,"modified_method":"/**\n     * Adds the image to the current case after it has been added to the DB\n     *\n     * @param imgPaths  the paths of the image that being added\n     * @param imgId  the ID of the image that being added\n     * @param timeZone  the timeZone of the image where it's added\n     */\n    Image addImage(String[] imgPaths, long imgId, String timeZone) throws Exception {\n        Log.get(this.getClass()).log(Level.INFO, \"Adding image to Case.  imgPaths: {0}  ID: {1} TimeZone: {2}\", new Object[]{Arrays.toString(imgPaths), imgId, timeZone});\n\n        try {\n            xmlcm.addImage(imgPaths, imgId, timeZone); // add the image to the document handler in the XML class and to the config file\n            xmlcm.writeFile(); // write any changes to the config file\n            Image newImage = db.getImageById(imgId);\n            pcs.firePropertyChange(CASE_ADD_IMAGE, null, newImage); // the new value is the instance of the image\n            return newImage;\n        } catch (Exception ex) {\n            // throw an error here\n            throw ex;\n        }\n    }","commit_id":"f749d6f8bacadd04010fa8a218cb888b752789ef","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Write a textual representation of the Cassandra ring.\n     * \n     * @param outs the stream to write to\n     */\n    public void printRing(PrintStream outs)\n    {\n        Map<Token, String> tokenToEndpoint = probe.getTokenToEndpointMap();\n        List<Token> sortedTokens = new ArrayList<Token>(tokenToEndpoint.keySet());\n        Collections.sort(sortedTokens);\n\n        Set<String> liveNodes = probe.getLiveNodes();\n        Set<String> deadNodes = probe.getUnreachableNodes();\n        Set<String> joiningNodes = probe.getJoiningNodes();\n        Set<String> leavingNodes = probe.getLeavingNodes();\n        Map<String, String> loadMap = probe.getLoadMap();\n\n        outs.print(String.format(\"%-16s\", \"Address\"));\n        outs.print(String.format(\"%-7s\", \"Status\"));\n        outs.print(String.format(\"%-8s\", \"State\"));\n        outs.print(String.format(\"%-16s\", \"Load\"));\n        outs.print(String.format(\"%-44s\", \"Token\"));\n        outs.println();\n        \n        // show pre-wrap token twice so you can always read a node's range as\n        // (previous line token, current line token]\n        if (sortedTokens.size() > 1)\n            outs.println(String.format(\"%-14s%-11s%-14s%-43s\", \"\", \"\", \"\", sortedTokens.get(sortedTokens.size() - 1)));\n\n        for (Token token : sortedTokens) {\n            String primaryEndpoint = tokenToEndpoint.get(token);\n            outs.print(String.format(\"%-16s\", primaryEndpoint));\n\n            String status =\n                    liveNodes.contains(primaryEndpoint) ? \"Up\" :\n                    deadNodes.contains(primaryEndpoint) ? \"Down\" :\n                    \"?\";\n            outs.print(String.format(\"%-7s\", status));\n\n            String state =\n                    joiningNodes.contains(primaryEndpoint) ? \"Joining\" :\n                    leavingNodes.contains(primaryEndpoint) ? \"Leaving\" :\n                    \"Normal\";\n            outs.print(String.format(\"%-8s\", state));\n\n            outs.print(String.format(\"%-16s\", loadMap.containsKey(primaryEndpoint) ? loadMap.get(primaryEndpoint) : \"?\"));\n\n            outs.print(String.format(\"%-44s\", token));\n\n            outs.println();\n        }\n    }","id":15963,"modified_method":"/**\n     * Write a textual representation of the Cassandra ring.\n     * \n     * @param outs the stream to write to\n     */\n    public void printRing(PrintStream outs)\n    {\n        Map<Token, String> tokenToEndpoint = probe.getTokenToEndpointMap();\n        List<Token> sortedTokens = new ArrayList<Token>(tokenToEndpoint.keySet());\n        Collections.sort(sortedTokens);\n\n        Set<String> liveNodes = probe.getLiveNodes();\n        Set<String> deadNodes = probe.getUnreachableNodes();\n        Set<String> joiningNodes = probe.getJoiningNodes();\n        Set<String> leavingNodes = probe.getLeavingNodes();\n        Map<String, String> loadMap = probe.getLoadMap();\n\n        outs.printf(\"%-16s%-7s%-8s%-16s%-44s\\n\", \"Address\", \"Status\", \"State\", \"Load\", \"Token\");\n        // show pre-wrap token twice so you can always read a node's range as\n        // (previous line token, current line token]\n        if (sortedTokens.size() > 1)\n            outs.printf(\"%-14s%-11s%-14s%-43s\\n\", \"\", \"\", \"\", sortedTokens.get(sortedTokens.size() - 1));\n\n        for (Token token : sortedTokens)\n        {\n            String primaryEndpoint = tokenToEndpoint.get(token);\n            String status = liveNodes.contains(primaryEndpoint)\n                            ? \"Up\"\n                            : deadNodes.contains(primaryEndpoint) ? \"Down\" : \"?\";\n            String state = joiningNodes.contains(primaryEndpoint)\n                           ? \"Joining\"\n                           : leavingNodes.contains(primaryEndpoint) ? \"Leaving\" : \"Normal\";\n            String load = loadMap.containsKey(primaryEndpoint) ? loadMap.get(primaryEndpoint) : \"?\";\n            outs.printf(\"%-16s%-7s%-8s%-16s%-44s\\n\", primaryEndpoint, status, state, load, token);\n        }\n    }","commit_id":"446103ff74d3598843ea22b1ff0b221635dc9b36","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n     * Write node information.\n     * \n     * @param outs the stream to write to\n     */\n    public void printInfo(PrintStream outs)\n    {\n        outs.println(probe.getToken());\n        outs.println(String.format(\"%-17s: %s\", \"Load\", probe.getLoadString()));\n        outs.println(String.format(\"%-17s: %s\", \"Generation No\", probe.getCurrentGenerationNumber()));\n        \n        // Uptime\n        long secondsUp = probe.getUptime() / 1000;\n        outs.println(String.format(\"%-17s: %d\", \"Uptime (seconds)\", secondsUp));\n\n        // Memory usage\n        MemoryUsage heapUsage = probe.getHeapMemoryUsage();\n        double memUsed = (double)heapUsage.getUsed() / (1024 * 1024);\n        double memMax = (double)heapUsage.getMax() / (1024 * 1024);\n        outs.println(String.format(\"%-17s: %.2f / %.2f\", \"Heap Memory (MB)\", memUsed, memMax));\n    }","id":15964,"modified_method":"/**\n     * Write node information.\n     * \n     * @param outs the stream to write to\n     */\n    public void printInfo(PrintStream outs)\n    {\n        outs.println(probe.getToken());\n        outs.printf(\"%-17s: %s\\n\", \"Load\", probe.getLoadString());\n        outs.printf(\"%-17s: %s\\n\", \"Generation No\", probe.getCurrentGenerationNumber());\n        \n        // Uptime\n        long secondsUp = probe.getUptime() / 1000;\n        outs.printf(\"%-17s: %d\\n\", \"Uptime (seconds)\", secondsUp);\n\n        // Memory usage\n        MemoryUsage heapUsage = probe.getHeapMemoryUsage();\n        double memUsed = (double)heapUsage.getUsed() / (1024 * 1024);\n        double memMax = (double)heapUsage.getMax() / (1024 * 1024);\n        outs.printf(\"%-17s: %.2f / %.2f\\n\", \"Heap Memory (MB)\", memUsed, memMax);\n    }","commit_id":"446103ff74d3598843ea22b1ff0b221635dc9b36","url":"https://github.com/apache/cassandra"},{"original_method":"public void printNetworkStats(final InetAddress addr, PrintStream outs)\n    {\n        outs.println(String.format(\"Mode: %s\", probe.getOperationMode()));\n        Set<InetAddress> hosts = addr == null ? probe.getStreamDestinations() : new HashSet<InetAddress>(){{add(addr);}};\n        if (hosts.size() == 0)\n            outs.println(\"Not sending any streams.\");\n        for (InetAddress host : hosts)\n        {\n            try\n            {\n                List<String> files = probe.getFilesDestinedFor(host);\n                if (files.size() > 0)\n                {\n                    outs.println(String.format(\"Streaming to: %s\", host));\n                    for (String file : files)\n                        outs.println(String.format(\"   %s\", file));\n                }\n                else\n                {\n                    outs.println(String.format(\" Nothing streaming to %s\", host));\n                }\n            }\n            catch (IOException ex)\n            {\n                outs.println(String.format(\"   Error retrieving file data for %s\", host));\n            }\n        }\n\n        hosts = addr == null ? probe.getStreamSources() : new HashSet<InetAddress>(){{add(addr); }};\n        if (hosts.size() == 0)\n            outs.println(\"Not receiving any streams.\");\n        for (InetAddress host : hosts)\n        {\n            try\n            {\n                List<String> files = probe.getIncomingFiles(host);\n                if (files.size() > 0)\n                {\n                    outs.println(String.format(\"Streaming from: %s\", host));\n                    for (String file : files)\n                        outs.println(String.format(\"   %s\", file));\n                }\n                else\n                {\n                    outs.println(String.format(\" Nothing streaming from %s\", host));\n                }\n            }\n            catch (IOException ex)\n            {\n                outs.println(String.format(\"   Error retrieving file data for %s\", host));\n            }\n        }\n\n        MessagingServiceMBean ms = probe.getMsProxy();\n        outs.print(String.format(\"%-25s\", \"Pool Name\"));\n        outs.print(String.format(\"%10s\", \"Active\"));\n        outs.print(String.format(\"%10s\", \"Pending\"));\n        outs.print(String.format(\"%15s\", \"Completed\"));\n        outs.println();\n\n        int pending;\n        long completed;\n\n        pending = 0;\n        for (int n : ms.getCommandPendingTasks().values())\n            pending += n;\n        completed = 0;\n        for (long n : ms.getCommandCompletedTasks().values())\n            completed += n;\n        outs.printf(\"%-25s%10s%10s%15s\\n\", \"Commands\", \"n/a\", pending, completed);\n\n        pending = 0;\n        for (int n : ms.getResponsePendingTasks().values())\n            pending += n;\n        completed = 0;\n        for (long n : ms.getResponseCompletedTasks().values())\n            completed += n;\n        outs.printf(\"%-25s%10s%10s%15s\\n\", \"Responses\", \"n/a\", pending, completed);\n    }","id":15965,"modified_method":"public void printNetworkStats(final InetAddress addr, PrintStream outs)\n    {\n        outs.printf(\"Mode: %s\\n\", probe.getOperationMode());\n        Set<InetAddress> hosts = addr == null ? probe.getStreamDestinations() : new HashSet<InetAddress>(){{add(addr);}};\n        if (hosts.size() == 0)\n            outs.println(\"Not sending any streams.\");\n        for (InetAddress host : hosts)\n        {\n            try\n            {\n                List<String> files = probe.getFilesDestinedFor(host);\n                if (files.size() > 0)\n                {\n                    outs.printf(\"Streaming to: %s\\n\", host);\n                    for (String file : files)\n                        outs.printf(\"   %s\\n\", file);\n                }\n                else\n                {\n                    outs.printf(\" Nothing streaming to %s\\n\", host);\n                }\n            }\n            catch (IOException ex)\n            {\n                outs.printf(\"   Error retrieving file data for %s\\n\", host);\n            }\n        }\n\n        hosts = addr == null ? probe.getStreamSources() : new HashSet<InetAddress>(){{add(addr); }};\n        if (hosts.size() == 0)\n            outs.println(\"Not receiving any streams.\");\n        for (InetAddress host : hosts)\n        {\n            try\n            {\n                List<String> files = probe.getIncomingFiles(host);\n                if (files.size() > 0)\n                {\n                    outs.printf(\"Streaming from: %s\\n\", host);\n                    for (String file : files)\n                        outs.printf(\"   %s\\n\", file);\n                }\n                else\n                {\n                    outs.printf(\" Nothing streaming from %s\\n\", host);\n                }\n            }\n            catch (IOException ex)\n            {\n                outs.printf(\"   Error retrieving file data for %s\\n\", host);\n            }\n        }\n\n        MessagingServiceMBean ms = probe.getMsProxy();\n        outs.printf(\"%-25s\", \"Pool Name\");\n        outs.printf(\"%10s\", \"Active\");\n        outs.printf(\"%10s\", \"Pending\");\n        outs.printf(\"%15s\\n\", \"Completed\");\n\n        int pending;\n        long completed;\n\n        pending = 0;\n        for (int n : ms.getCommandPendingTasks().values())\n            pending += n;\n        completed = 0;\n        for (long n : ms.getCommandCompletedTasks().values())\n            completed += n;\n        outs.printf(\"%-25s%10s%10s%15s\\n\", \"Commands\", \"n/a\", pending, completed);\n\n        pending = 0;\n        for (int n : ms.getResponsePendingTasks().values())\n            pending += n;\n        completed = 0;\n        for (long n : ms.getResponseCompletedTasks().values())\n            completed += n;\n        outs.printf(\"%-25s%10s%10s%15s\\n\", \"Responses\", \"n/a\", pending, completed);\n    }","commit_id":"446103ff74d3598843ea22b1ff0b221635dc9b36","url":"https://github.com/apache/cassandra"},{"original_method":"public void printThreadPoolStats(PrintStream outs)\n    {\n        outs.print(String.format(\"%-25s\", \"Pool Name\"));\n        outs.print(String.format(\"%10s\", \"Active\"));\n        outs.print(String.format(\"%10s\", \"Pending\"));\n        outs.print(String.format(\"%15s\", \"Completed\"));\n        outs.println();\n        \n        Iterator<Map.Entry<String, IExecutorMBean>> threads = probe.getThreadPoolMBeanProxies();\n        \n        for (; threads.hasNext();)\n        {\n            Map.Entry<String, IExecutorMBean> thread = threads.next();\n            String poolName = thread.getKey();\n            IExecutorMBean threadPoolProxy = thread.getValue();\n            outs.print(String.format(\"%-25s\", poolName));\n            outs.print(String.format(\"%10d\", threadPoolProxy.getActiveCount()));\n            outs.print(String.format(\"%10d\", threadPoolProxy.getPendingTasks()));\n            outs.print(String.format(\"%15d\", threadPoolProxy.getCompletedTasks()));\n            outs.println();\n        }\n    }","id":15966,"modified_method":"public void printThreadPoolStats(PrintStream outs)\n    {\n        outs.printf(\"%-25s%10s%10s%15s\\n\", \"Pool Name\", \"Active\", \"Pending\", \"Completed\");\n\n        Iterator<Map.Entry<String, IExecutorMBean>> threads = probe.getThreadPoolMBeanProxies();\n        while (threads.hasNext())\n        {\n            Entry<String, IExecutorMBean> thread = threads.next();\n            String poolName = thread.getKey();\n            IExecutorMBean threadPoolProxy = thread.getValue();\n            outs.printf(\"%-25s%10s%10s%15s\\n\",\n                        poolName, threadPoolProxy.getActiveCount(), threadPoolProxy.getPendingTasks(), threadPoolProxy.getCompletedTasks());\n        }\n    }","commit_id":"446103ff74d3598843ea22b1ff0b221635dc9b36","url":"https://github.com/apache/cassandra"},{"original_method":"@Override\n    public void render(ProjectBinary binary, TextReportBuilder builder) {\n        StyledTextOutput textOutput = builder.getOutput();\n        textOutput.println(StringUtils.capitalize(binary.getDisplayName()));\n        if (binary instanceof NativeBinary) {\n            NativeBinary nativeBinary = (NativeBinary) binary;\n            textOutput.formatln(\"    platform: %s\", nativeBinary.getTargetPlatform().getName());\n            textOutput.formatln(\"    build type: %s\", nativeBinary.getBuildType().getName());\n            textOutput.formatln(\"    flavor: %s\", nativeBinary.getFlavor().getName());\n        }\n        textOutput.formatln(\"    build task: %s\", binary.getBuildTask().getPath());\n    }","id":15967,"modified_method":"@Override\n    public void render(ProjectBinary binary, TextReportBuilder builder) {\n        StyledTextOutput textOutput = builder.getOutput();\n\n        textOutput.append(StringUtils.capitalize(binary.getDisplayName()));\n        if (!binary.isBuildable()) {\n            textOutput.append(\" (not buildable)\");\n        }\n        textOutput.println();\n\n        if (binary instanceof ProjectNativeBinary) {\n            ProjectNativeBinary nativeBinary = (ProjectNativeBinary) binary;\n            textOutput.formatln(\"    platform: %s\", nativeBinary.getTargetPlatform().getName());\n            textOutput.formatln(\"    build type: %s\", nativeBinary.getBuildType().getName());\n            textOutput.formatln(\"    flavor: %s\", nativeBinary.getFlavor().getName());\n            textOutput.formatln(\"    tool chain: %s\", nativeBinary.getToolChain().getDisplayName());\n            if (binary instanceof ProjectNativeExecutableBinary) {\n                ProjectNativeExecutableBinary executableBinary = (ProjectNativeExecutableBinary) binary;\n                textOutput.formatln(\"    executable file: %s\", fileResolver.resolveAsRelativePath(executableBinary.getExecutableFile()));\n            }\n            if (binary instanceof ProjectSharedLibraryBinary) {\n                ProjectSharedLibraryBinary libraryBinary = (ProjectSharedLibraryBinary) binary;\n                textOutput.formatln(\"    shared library file: %s\", fileResolver.resolveAsRelativePath(libraryBinary.getSharedLibraryFile()));\n            }\n            if (binary instanceof ProjectStaticLibraryBinary) {\n                ProjectStaticLibraryBinary libraryBinary = (ProjectStaticLibraryBinary) binary;\n                textOutput.formatln(\"    static library file: %s\", fileResolver.resolveAsRelativePath(libraryBinary.getStaticLibraryFile()));\n            }\n        }\n        if (binary instanceof ProjectJvmLibraryBinary) {\n            ProjectJvmLibraryBinary libraryBinary = (ProjectJvmLibraryBinary) binary;\n            textOutput.formatln(\"    tool chain: %s\", libraryBinary.getToolChain().toString());\n            if (binary instanceof ProjectJarBinary) {\n                ProjectJarBinary jarBinary = (ProjectJarBinary) binary;\n                textOutput.formatln(\"    Jar file: %s\", fileResolver.resolveAsRelativePath(jarBinary.getJarFile()));\n            }\n        }\n        textOutput.formatln(\"    build task: %s\", binary.getBuildTask().getPath());\n    }","commit_id":"925c71348de17decedc78a765370fca62ff55d74","url":"https://github.com/gradle/gradle"},{"original_method":"public ComponentRenderer(FileResolver fileResolver) {\n        sourceSetRenderer = new SourceSetRenderer(fileResolver);\n    }","id":15968,"modified_method":"public ComponentRenderer(FileResolver fileResolver) {\n        sourceSetRenderer = new SourceSetRenderer(fileResolver);\n        renderer = new BinaryRenderer(fileResolver);\n    }","commit_id":"925c71348de17decedc78a765370fca62ff55d74","url":"https://github.com/gradle/gradle"},{"original_method":"public ComponentReportRenderer(FileResolver fileResolver) {\n        componentRenderer = new ComponentRenderer(fileResolver);\n        sourceSetRenderer = new SourceSetRenderer(fileResolver);\n        binaryRenderer = new BinaryRenderer();\n    }","id":15969,"modified_method":"public ComponentReportRenderer(FileResolver fileResolver) {\n        componentRenderer = new ComponentRenderer(fileResolver);\n        sourceSetRenderer = new SourceSetRenderer(fileResolver);\n        binaryRenderer = new BinaryRenderer(fileResolver);\n    }","commit_id":"925c71348de17decedc78a765370fca62ff55d74","url":"https://github.com/gradle/gradle"},{"original_method":"@Override\n    public void render(ProjectBinary binary, TextReportBuilder builder) {\n        StyledTextOutput textOutput = builder.getOutput();\n\n        textOutput.append(StringUtils.capitalize(binary.getDisplayName()));\n        if (!binary.isBuildable()) {\n            textOutput.append(\" (not buildable)\");\n        }\n        textOutput.println();\n\n        if (binary instanceof ProjectNativeBinary) {\n            ProjectNativeBinary nativeBinary = (ProjectNativeBinary) binary;\n            textOutput.formatln(\"    platform: %s\", nativeBinary.getTargetPlatform().getName());\n            textOutput.formatln(\"    build type: %s\", nativeBinary.getBuildType().getName());\n            textOutput.formatln(\"    flavor: %s\", nativeBinary.getFlavor().getName());\n            textOutput.formatln(\"    tool chain: %s\", nativeBinary.getToolChain().getDisplayName());\n            if (binary instanceof ProjectNativeExecutableBinary) {\n                ProjectNativeExecutableBinary executableBinary = (ProjectNativeExecutableBinary) binary;\n                textOutput.formatln(\"    executable file: %s\", fileResolver.resolveAsRelativePath(executableBinary.getExecutableFile()));\n            }\n            if (binary instanceof ProjectSharedLibraryBinary) {\n                ProjectSharedLibraryBinary libraryBinary = (ProjectSharedLibraryBinary) binary;\n                textOutput.formatln(\"    shared library file: %s\", fileResolver.resolveAsRelativePath(libraryBinary.getSharedLibraryFile()));\n            }\n            if (binary instanceof ProjectStaticLibraryBinary) {\n                ProjectStaticLibraryBinary libraryBinary = (ProjectStaticLibraryBinary) binary;\n                textOutput.formatln(\"    static library file: %s\", fileResolver.resolveAsRelativePath(libraryBinary.getStaticLibraryFile()));\n            }\n        }\n        if (binary instanceof ProjectJvmLibraryBinary) {\n            ProjectJvmLibraryBinary libraryBinary = (ProjectJvmLibraryBinary) binary;\n            textOutput.formatln(\"    tool chain: %s\", libraryBinary.getToolChain().toString());\n            if (binary instanceof ProjectJarBinary) {\n                ProjectJarBinary jarBinary = (ProjectJarBinary) binary;\n                textOutput.formatln(\"    Jar file: %s\", fileResolver.resolveAsRelativePath(jarBinary.getJarFile()));\n            }\n        }\n        textOutput.formatln(\"    build task: %s\", binary.getBuildTask().getPath());\n    }","id":15970,"modified_method":"@Override\n    public void render(ProjectBinary binary, TextReportBuilder builder) {\n        StyledTextOutput textOutput = builder.getOutput();\n\n        textOutput.append(StringUtils.capitalize(binary.getDisplayName()));\n        if (!binary.isBuildable()) {\n            textOutput.append(\" (not buildable)\");\n        }\n        textOutput.println();\n\n        textOutput.formatln(\"    build using task: %s\", binary.getBuildTask().getPath());\n\n        if (binary instanceof ProjectNativeBinary) {\n            ProjectNativeBinary nativeBinary = (ProjectNativeBinary) binary;\n            textOutput.formatln(\"    platform: %s\", nativeBinary.getTargetPlatform().getName());\n            textOutput.formatln(\"    build type: %s\", nativeBinary.getBuildType().getName());\n            textOutput.formatln(\"    flavor: %s\", nativeBinary.getFlavor().getName());\n            textOutput.formatln(\"    tool chain: %s\", nativeBinary.getToolChain().getDisplayName());\n            if (binary instanceof ProjectNativeExecutableBinary) {\n                ProjectNativeExecutableBinary executableBinary = (ProjectNativeExecutableBinary) binary;\n                textOutput.formatln(\"    executable file: %s\", fileResolver.resolveAsRelativePath(executableBinary.getExecutableFile()));\n            }\n            if (binary instanceof ProjectNativeTestSuiteBinary) {\n                ProjectNativeTestSuiteBinary executableBinary = (ProjectNativeTestSuiteBinary) binary;\n                textOutput.formatln(\"    executable file: %s\", fileResolver.resolveAsRelativePath(executableBinary.getExecutableFile()));\n            }\n            if (binary instanceof ProjectSharedLibraryBinary) {\n                ProjectSharedLibraryBinary libraryBinary = (ProjectSharedLibraryBinary) binary;\n                textOutput.formatln(\"    shared library file: %s\", fileResolver.resolveAsRelativePath(libraryBinary.getSharedLibraryFile()));\n            }\n            if (binary instanceof ProjectStaticLibraryBinary) {\n                ProjectStaticLibraryBinary libraryBinary = (ProjectStaticLibraryBinary) binary;\n                textOutput.formatln(\"    static library file: %s\", fileResolver.resolveAsRelativePath(libraryBinary.getStaticLibraryFile()));\n            }\n        }\n\n        if (binary instanceof ProjectJvmLibraryBinary) {\n            ProjectJvmLibraryBinary libraryBinary = (ProjectJvmLibraryBinary) binary;\n            textOutput.formatln(\"    tool chain: %s\", libraryBinary.getToolChain().toString());\n            if (binary instanceof ProjectJarBinary) {\n                ProjectJarBinary jarBinary = (ProjectJarBinary) binary;\n                textOutput.formatln(\"    Jar file: %s\", fileResolver.resolveAsRelativePath(jarBinary.getJarFile()));\n            }\n            if (binary instanceof ProjectClassDirectoryBinary) {\n                ProjectClassDirectoryBinary classDirectoryBinary = (ProjectClassDirectoryBinary) binary;\n                textOutput.formatln(\"    classes dir: %s\", fileResolver.resolveAsRelativePath(classDirectoryBinary.getClassesDir()));\n                textOutput.formatln(\"    resources dir: %s\", fileResolver.resolveAsRelativePath(classDirectoryBinary.getResourcesDir()));\n            }\n        }\n    }","commit_id":"abb0f1b1e3aa2e491ec0dd01d19678929e1ee5de","url":"https://github.com/gradle/gradle"},{"original_method":"public static boolean contains(\n\t\t\tPermissionChecker permissionChecker, long groupId, long folderId,\n\t\t\tString actionId)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (folderId == DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {\n\n\t\t\t// Prevent the propagation of checks for actions that are not\n\t\t\t// supported at the application resource level. See LPS-24245.\n\n\t\t\tif (actionId.equals(ActionKeys.ACCESS) ||\n\t\t\t\tactionId.equals(ActionKeys.ADD_SUBFOLDER) ||\n\t\t\t\tactionId.equals(ActionKeys.DELETE)) {\n\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn DLPermission.contains(permissionChecker, groupId, actionId);\n\t\t}\n\t\telse {\n\t\t\tFolder folder = DLAppLocalServiceUtil.getFolder(folderId);\n\n\t\t\treturn folder.containsPermission(permissionChecker, actionId);\n\t\t}\n\t}","id":15971,"modified_method":"public static boolean contains(\n\t\t\tPermissionChecker permissionChecker, long groupId, long folderId,\n\t\t\tString actionId)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (folderId == DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {\n\n\t\t\t// Prevent the propagation of checks for actions that are not\n\t\t\t// supported at the application resource level. See LPS-24245.\n\n\t\t\tif (Validator.equals(actionId, ActionKeys.ACCESS) ||\n\t\t\t\tValidator.equals(actionId, ActionKeys.ADD_SUBFOLDER) ||\n\t\t\t\tValidator.equals(actionId, ActionKeys.DELETE)) {\n\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn DLPermission.contains(permissionChecker, groupId, actionId);\n\t\t}\n\t\telse {\n\t\t\tFolder folder = DLAppLocalServiceUtil.getFolder(folderId);\n\n\t\t\treturn folder.containsPermission(permissionChecker, actionId);\n\t\t}\n\t}","commit_id":"ad6410efaf1dd716dc0283826fb885b27f72ae22","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static boolean contains(\n\t\t\tPermissionChecker permissionChecker, DLFolder dlFolder,\n\t\t\tString actionId)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (actionId.equals(ActionKeys.ADD_FOLDER)) {\n\t\t\tactionId = ActionKeys.ADD_SUBFOLDER;\n\t\t}\n\n\t\tBoolean hasPermission = StagingPermissionUtil.hasPermission(\n\t\t\tpermissionChecker, dlFolder.getGroupId(), DLFolder.class.getName(),\n\t\t\tdlFolder.getFolderId(), PortletKeys.DOCUMENT_LIBRARY, actionId);\n\n\t\tif (hasPermission != null) {\n\t\t\treturn hasPermission.booleanValue();\n\t\t}\n\n\t\tlong folderId = dlFolder.getFolderId();\n\n\t\tif (actionId.equals(ActionKeys.VIEW)) {\n\t\t\twhile (folderId != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {\n\t\t\t\ttry {\n\t\t\t\t\tdlFolder = DLFolderLocalServiceUtil.getFolder(folderId);\n\n\t\t\t\t\tfolderId = dlFolder.getParentFolderId();\n\n\t\t\t\t\tif (!permissionChecker.hasOwnerPermission(\n\t\t\t\t\t\t\tdlFolder.getCompanyId(), DLFolder.class.getName(),\n\t\t\t\t\t\t\tdlFolder.getFolderId(), dlFolder.getUserId(),\n\t\t\t\t\t\t\tactionId) &&\n\t\t\t\t\t\t!permissionChecker.hasPermission(\n\t\t\t\t\t\t\tdlFolder.getGroupId(), DLFolder.class.getName(),\n\t\t\t\t\t\t\tdlFolder.getFolderId(), actionId)) {\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!PropsValues.PERMISSIONS_VIEW_DYNAMIC_INHERITANCE) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchFolderException nsfe) {\n\t\t\t\t\tif (dlFolder.isInTrash()) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow nsfe;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\twhile (folderId != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {\n\t\t\t\tdlFolder = DLFolderLocalServiceUtil.getFolder(folderId);\n\n\t\t\t\tfolderId = dlFolder.getParentFolderId();\n\n\t\t\t\tif (permissionChecker.hasOwnerPermission(\n\t\t\t\t\t\tdlFolder.getCompanyId(), DLFolder.class.getName(),\n\t\t\t\t\t\tdlFolder.getFolderId(), dlFolder.getUserId(),\n\t\t\t\t\t\tactionId)) {\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tif (permissionChecker.hasPermission(\n\t\t\t\t\t\tdlFolder.getGroupId(), DLFolder.class.getName(),\n\t\t\t\t\t\tdlFolder.getFolderId(), actionId)) {\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}","id":15972,"modified_method":"public static boolean contains(\n\t\t\tPermissionChecker permissionChecker, DLFolder dlFolder,\n\t\t\tString actionId)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (actionId.equals(ActionKeys.ADD_FOLDER)) {\n\t\t\tactionId = ActionKeys.ADD_SUBFOLDER;\n\t\t}\n\n\t\tBoolean hasPermission = StagingPermissionUtil.hasPermission(\n\t\t\tpermissionChecker, dlFolder.getGroupId(), DLFolder.class.getName(),\n\t\t\tdlFolder.getFolderId(), PortletKeys.DOCUMENT_LIBRARY, actionId);\n\n\t\tif (hasPermission != null) {\n\t\t\treturn hasPermission.booleanValue();\n\t\t}\n\n\t\tlong folderId = dlFolder.getFolderId();\n\n\t\tif (PropsValues.PERMISSIONS_VIEW_DYNAMIC_INHERITANCE) {\n\t\t\tDLFolder originalFolder = dlFolder;\n\n\t\t\ttry {\n\t\t\t\twhile (folderId !=\n\t\t\t\t\t\tDLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {\n\n\t\t\t\t\tdlFolder = DLFolderLocalServiceUtil.getFolder(folderId);\n\n\t\t\t\t\tif (!permissionChecker.hasOwnerPermission(\n\t\t\t\t\t\t\tdlFolder.getCompanyId(), DLFolder.class.getName(),\n\t\t\t\t\t\t\tfolderId, dlFolder.getUserId(), ActionKeys.VIEW) &&\n\t\t\t\t\t\t!permissionChecker.hasPermission(\n\t\t\t\t\t\t\tdlFolder.getGroupId(), DLFolder.class.getName(),\n\t\t\t\t\t\t\tfolderId, ActionKeys.VIEW)) {\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tfolderId = dlFolder.getParentFolderId();\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (NoSuchFolderException nsfe) {\n\t\t\t\tif (!dlFolder.isInTrash()) {\n\t\t\t\t\tthrow nsfe;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (Validator.equals(actionId, ActionKeys.VIEW)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tfolderId = originalFolder.getFolderId();\n\t\t}\n\n\t\tif (!PropsValues.PERMISSIONS_VIEW_DYNAMIC_INHERITANCE ||\n\t\t\t!Validator.equals(actionId, ActionKeys.VIEW)) {\n\t\t\ttry {\n\t\t\t\twhile (folderId !=\n\t\t\t\t\t\tDLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {\n\n\t\t\t\t\tdlFolder = DLFolderLocalServiceUtil.getFolder(folderId);\n\n\t\t\t\t\tif (permissionChecker.hasOwnerPermission(\n\t\t\t\t\t\t\tdlFolder.getCompanyId(), DLFolder.class.getName(),\n\t\t\t\t\t\t\tfolderId, dlFolder.getUserId(), actionId) ||\n\t\t\t\t\t\tpermissionChecker.hasPermission(\n\t\t\t\t\t\t\tdlFolder.getGroupId(), DLFolder.class.getName(),\n\t\t\t\t\t\t\tfolderId, actionId)) {\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tfolderId = dlFolder.getParentFolderId();\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (NoSuchFolderException nsfe) {\n\t\t\t\tif (!dlFolder.isInTrash()) {\n\t\t\t\t\tthrow nsfe;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}","commit_id":"ad6410efaf1dd716dc0283826fb885b27f72ae22","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static boolean contains(\n\t\t\tPermissionChecker permissionChecker, MBCategory category,\n\t\t\tString actionId)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (actionId.equals(ActionKeys.ADD_CATEGORY)) {\n\t\t\tactionId = ActionKeys.ADD_SUBCATEGORY;\n\t\t}\n\n\t\tif (MBBanLocalServiceUtil.hasBan(\n\t\t\t\tcategory.getGroupId(), permissionChecker.getUserId())) {\n\n\t\t\treturn false;\n\t\t}\n\n\t\tlong categoryId = category.getCategoryId();\n\n\t\tif (actionId.equals(ActionKeys.VIEW)) {\n\t\t\twhile (categoryId !=\n\t\t\t\t\tMBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID) {\n\n\t\t\t\ttry {\n\t\t\t\t\tcategory = MBCategoryLocalServiceUtil.getCategory(\n\t\t\t\t\t\tcategoryId);\n\n\t\t\t\t\tcategoryId = category.getParentCategoryId();\n\n\t\t\t\t\tif (!permissionChecker.hasOwnerPermission(\n\t\t\t\t\t\t\tcategory.getCompanyId(), MBCategory.class.getName(),\n\t\t\t\t\t\t\tcategory.getCategoryId(), category.getUserId(),\n\t\t\t\t\t\t\tactionId) &&\n\t\t\t\t\t\t!permissionChecker.hasPermission(\n\t\t\t\t\t\t\tcategory.getGroupId(), MBCategory.class.getName(),\n\t\t\t\t\t\t\tcategory.getCategoryId(), actionId)) {\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!PropsValues.PERMISSIONS_VIEW_DYNAMIC_INHERITANCE) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchCategoryException nsce) {\n\t\t\t\t\tif (!category.isInTrash()) {\n\t\t\t\t\t\tthrow nsce;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\twhile (categoryId !=\n\t\t\t\t\tMBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID) {\n\n\t\t\t\tcategory = MBCategoryLocalServiceUtil.getCategory(categoryId);\n\n\t\t\t\tcategoryId = category.getParentCategoryId();\n\n\t\t\t\tif (permissionChecker.hasOwnerPermission(\n\t\t\t\t\t\tcategory.getCompanyId(), MBCategory.class.getName(),\n\t\t\t\t\t\tcategory.getCategoryId(), category.getUserId(),\n\t\t\t\t\t\tactionId)) {\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tif (permissionChecker.hasPermission(\n\t\t\t\t\t\tcategory.getGroupId(), MBCategory.class.getName(),\n\t\t\t\t\t\tcategory.getCategoryId(), actionId)) {\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tif (actionId.equals(ActionKeys.VIEW)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}","id":15973,"modified_method":"public static boolean contains(\n\t\t\tPermissionChecker permissionChecker, MBCategory category,\n\t\t\tString actionId)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (actionId.equals(ActionKeys.ADD_CATEGORY)) {\n\t\t\tactionId = ActionKeys.ADD_SUBCATEGORY;\n\t\t}\n\n\t\tif (MBBanLocalServiceUtil.hasBan(\n\t\t\t\tcategory.getGroupId(), permissionChecker.getUserId())) {\n\n\t\t\treturn false;\n\t\t}\n\n\t\tlong categoryId = category.getCategoryId();\n\n\t\tif (PropsValues.PERMISSIONS_VIEW_DYNAMIC_INHERITANCE) {\n\t\t\tMBCategory originalCategory = category;\n\n\t\t\ttry {\n\t\t\t\twhile (categoryId !=\n\t\t\t\t\t\tMBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID) {\n\n\t\t\t\t\tcategory = MBCategoryLocalServiceUtil.getCategory(\n\t\t\t\t\t\tcategoryId);\n\n\t\t\t\t\tif (!permissionChecker.hasOwnerPermission(\n\t\t\t\t\t\t\tcategory.getCompanyId(), MBCategory.class.getName(),\n\t\t\t\t\t\t\tcategoryId, category.getUserId(),\n\t\t\t\t\t\t\tActionKeys.VIEW) &&\n\t\t\t\t\t\t!permissionChecker.hasPermission(\n\t\t\t\t\t\t\tcategory.getGroupId(), MBCategory.class.getName(),\n\t\t\t\t\t\t\tcategoryId, ActionKeys.VIEW)) {\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tcategoryId = category.getParentCategoryId();\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (NoSuchCategoryException nsce) {\n\t\t\t\tif (!category.isInTrash()) {\n\t\t\t\t\tthrow nsce;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (Validator.equals(actionId, ActionKeys.VIEW)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tcategoryId = originalCategory.getCategoryId();\n\t\t}\n\n\t\tif (!PropsValues.PERMISSIONS_VIEW_DYNAMIC_INHERITANCE ||\n\t\t\t!Validator.equals(actionId, ActionKeys.VIEW)) {\n\n\t\t\ttry {\n\t\t\t\twhile (categoryId !=\n\t\t\t\t\t\tMBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID) {\n\n\t\t\t\t\tcategory = MBCategoryLocalServiceUtil.getCategory(\n\t\t\t\t\t\t\tcategoryId);\n\n\t\t\t\t\tif (permissionChecker.hasOwnerPermission(\n\t\t\t\t\t\t\tcategory.getCompanyId(), MBCategory.class.getName(),\n\t\t\t\t\t\t\tcategoryId, category.getUserId(), actionId) ||\n\t\t\t\t\t\tpermissionChecker.hasPermission(\n\t\t\t\t\t\t\tcategory.getGroupId(), MBCategory.class.getName(),\n\t\t\t\t\t\t\tcategoryId, actionId)) {\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tcategoryId = category.getParentCategoryId();\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (NoSuchCategoryException nsce) {\n\t\t\t\tif (!category.isInTrash()) {\n\t\t\t\t\tthrow nsce;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}","commit_id":"ad6410efaf1dd716dc0283826fb885b27f72ae22","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static boolean contains(\n\t\t\tPermissionChecker permissionChecker, JournalFolder folder,\n\t\t\tString actionId)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (actionId.equals(ActionKeys.ADD_FOLDER)) {\n\t\t\tactionId = ActionKeys.ADD_SUBFOLDER;\n\t\t}\n\n\t\tlong folderId = folder.getFolderId();\n\n\t\tif (actionId.equals(ActionKeys.VIEW)) {\n\t\t\twhile (folderId !=\n\t\t\t\t\t\tJournalFolderConstants.DEFAULT_PARENT_FOLDER_ID) {\n\n\t\t\t\tfolder = JournalFolderLocalServiceUtil.getFolder(folderId);\n\n\t\t\t\tfolderId = folder.getParentFolderId();\n\n\t\t\t\tif (!permissionChecker.hasOwnerPermission(\n\t\t\t\t\t\tfolder.getCompanyId(), JournalFolder.class.getName(),\n\t\t\t\t\t\tfolder.getFolderId(), folder.getUserId(), actionId) &&\n\t\t\t\t\t!permissionChecker.hasPermission(\n\t\t\t\t\t\tfolder.getGroupId(), JournalFolder.class.getName(),\n\t\t\t\t\t\tfolder.getFolderId(), actionId)) {\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (!PropsValues.PERMISSIONS_VIEW_DYNAMIC_INHERITANCE) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\twhile (folderId !=\n\t\t\t\t\t\tJournalFolderConstants.DEFAULT_PARENT_FOLDER_ID) {\n\n\t\t\t\tfolder = JournalFolderLocalServiceUtil.getFolder(folderId);\n\n\t\t\t\tfolderId = folder.getParentFolderId();\n\n\t\t\t\tif (permissionChecker.hasOwnerPermission(\n\t\t\t\t\t\tfolder.getCompanyId(), JournalFolder.class.getName(),\n\t\t\t\t\t\tfolder.getFolderId(), folder.getUserId(), actionId)) {\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tif (permissionChecker.hasPermission(\n\t\t\t\t\t\tfolder.getGroupId(), JournalFolder.class.getName(),\n\t\t\t\t\t\tfolder.getFolderId(), actionId)) {\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tif (actionId.equals(ActionKeys.VIEW)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}","id":15974,"modified_method":"public static boolean contains(\n\t\t\tPermissionChecker permissionChecker, JournalFolder folder,\n\t\t\tString actionId)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (actionId.equals(ActionKeys.ADD_FOLDER)) {\n\t\t\tactionId = ActionKeys.ADD_SUBFOLDER;\n\t\t}\n\n\t\tlong folderId = folder.getFolderId();\n\n\t\tif (PropsValues.PERMISSIONS_VIEW_DYNAMIC_INHERITANCE) {\n\t\t\tlong originalFolderId = folderId;\n\n\t\t\ttry {\n\t\t\t\twhile (folderId !=\n\t\t\t\t\t\t\tJournalFolderConstants.DEFAULT_PARENT_FOLDER_ID) {\n\n\t\t\t\t\tfolder = JournalFolderLocalServiceUtil.getFolder(folderId);\n\n\t\t\t\t\tif (!permissionChecker.hasOwnerPermission(\n\t\t\t\t\t\t\tfolder.getCompanyId(),\n\t\t\t\t\t\t\tJournalFolder.class.getName(), folderId,\n\t\t\t\t\t\t\tfolder.getUserId(), ActionKeys.VIEW) &&\n\t\t\t\t\t\t!permissionChecker.hasPermission(\n\t\t\t\t\t\t\tfolder.getGroupId(), JournalFolder.class.getName(),\n\t\t\t\t\t\t\tfolderId, ActionKeys.VIEW)) {\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tfolderId = folder.getParentFolderId();\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (NoSuchFolderException nsfe) {\n\t\t\t\tif (!folder.isInTrash()) {\n\t\t\t\t\tthrow nsfe;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (actionId.equals(ActionKeys.VIEW)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tfolderId = originalFolderId;\n\t\t}\n\n\t\ttry {\n\t\t\twhile (folderId !=\n\t\t\t\t\t\tJournalFolderConstants.DEFAULT_PARENT_FOLDER_ID) {\n\n\t\t\t\tfolder = JournalFolderLocalServiceUtil.getFolder(folderId);\n\n\t\t\t\tif (permissionChecker.hasOwnerPermission(\n\t\t\t\t\t\tfolder.getCompanyId(), JournalFolder.class.getName(),\n\t\t\t\t\t\tfolderId, folder.getUserId(), actionId) ||\n\t\t\t\t\tpermissionChecker.hasPermission(\n\t\t\t\t\t\tfolder.getGroupId(), JournalFolder.class.getName(),\n\t\t\t\t\t\tfolderId, actionId)) {\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tfolderId = folder.getParentFolderId();\n\t\t\t}\n\t\t}\n\t\tcatch (NoSuchFolderException nsfe) {\n\t\t\tif (!folder.isInTrash()) {\n\t\t\t\tthrow nsfe;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}","commit_id":"54cf51566043c813722a4aa4da2571174824a476","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n     * Uploads a single file from a file input field.<p>\n     * \n     * @param fieldName the name of the form field to upload \n     * @param fileCallback the callback for the result\n     * @param errorCallback the error handling callback  \n     */\n    public void uploadFile(\n        final String fieldName,\n        final I_CmsStringCallback fileCallback,\n        I_CmsStringCallback errorCallback) {\n\n        Set<String> fieldSet = new HashSet<String>();\n        fieldSet.add(fieldName);\n        m_formWrapper.uploadFields(fieldSet, new Function<Map<String, String>, Void>() {\n\n            public Void apply(Map<String, String> input) {\n\n                fileCallback.call(input.get(fieldName));\n                return null;\n            }\n        }, errorCallback);\n\n    }","id":15975,"modified_method":"/**\n     * Uploads a single file from a file input field.<p>\n     * \n     * @param fieldName the name of the form field to upload \n     * @param fileCallback the callback for the result\n     * @param errorCallback the error handling callback  \n     */\n    public void uploadFile(\n        final String fieldName,\n        final I_CmsStringCallback fileCallback,\n        I_CmsErrorCallback errorCallback) {\n\n        Set<String> fieldSet = new HashSet<String>();\n        fieldSet.add(fieldName);\n        m_formWrapper.uploadFields(fieldSet, new Function<Map<String, String>, Void>() {\n\n            public Void apply(Map<String, String> input) {\n\n                fileCallback.call(input.get(fieldName));\n                return null;\n            }\n        }, errorCallback);\n\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Asks the server to save the values set via setNewValue in the XML content.<p>\n     * \n     * @param onSuccess the callback to be called in case of success \n     * @param onFailure the callback to be called in case of failure \n     */\n    public void saveContent(final I_CmsStringCallback onSuccess, final I_CmsJavaScriptObjectCallback onFailure) {\n\n        m_apiRoot.getRpcHelper().executeRpc(\n            CmsXmlContentFormApi.SERVICE.saveContent(\n                m_content.getSessionId(),\n                m_newValues,\n                new AsyncCallback<Map<String, String>>() {\n\n                    public void onFailure(Throwable caught) {\n\n                        JSONObject error = new JSONObject();\n                        error.put(CmsFormConstants.JS_ATTR_ERROR, new JSONString(caught.getMessage()));\n                        onFailure.call(error.getJavaScriptObject());\n                    }\n\n                    public void onSuccess(Map<String, String> result) {\n\n                        if ((result == null) || result.isEmpty()) {\n                            onSuccess.call(\"\");\n                        } else {\n                            JSONObject error = new JSONObject();\n                            JSONObject validationErrors = new JSONObject();\n                            for (Map.Entry<String, String> entry : result.entrySet()) {\n                                validationErrors.put(entry.getKey(), new JSONString(entry.getValue()));\n                            }\n                            error.put(CmsFormConstants.JS_ATTR_VALIDATION_ERRORS, validationErrors);\n                            onFailure.call(error.getJavaScriptObject());\n                        }\n                    }\n                }));\n\n    }","id":15976,"modified_method":"/**\n     * Asks the server to save the values set via setNewValue in the XML content.<p>\n     * \n     * @param onSuccess the callback to be called in case of success \n     * @param onFailure the callback to be called in case of failure \n     */\n    public void saveContent(final I_CmsStringCallback onSuccess, final I_CmsErrorCallback onFailure) {\n\n        m_apiRoot.getRpcHelper().executeRpc(\n            CmsXmlContentFormApi.SERVICE.saveContent(\n                m_content.getSessionId(),\n                m_newValues,\n                new AsyncCallback<Map<String, String>>() {\n\n                    @SuppressWarnings(\"synthetic-access\")\n                    public void onFailure(Throwable caught) {\n\n                        CmsFormException formException = (CmsFormException)caught;\n                        m_apiRoot.handleError(formException, onFailure);\n                    }\n\n                    public void onSuccess(Map<String, String> result) {\n\n                        if ((result == null) || result.isEmpty()) {\n                            onSuccess.call(\"\");\n                        } else {\n                            JSONObject validationErrors = new JSONObject();\n                            for (Map.Entry<String, String> entry : result.entrySet()) {\n                                validationErrors.put(entry.getKey(), new JSONString(entry.getValue()));\n                            }\n                            onFailure.call(\n                                CmsFormConstants.ErrorCode.errValidation.toString(),\n                                \"\",\n                                validationErrors.getJavaScriptObject());\n                        }\n                    }\n                }));\n\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Uploads multiple files.<p>\n     * \n     * @param fieldNames the array of form field names containing files to upload  \n     * @param fileCallback the callback for the results \n     * @param errorCallback the error handling callback \n     */\n    public void uploadFiles(\n        String[] fieldNames,\n        final I_CmsJavaScriptObjectCallback fileCallback,\n        I_CmsStringCallback errorCallback) {\n\n        Set<String> fieldSet = new HashSet<String>();\n        for (String field : fieldNames) {\n            fieldSet.add(field);\n        }\n\n        m_formWrapper.uploadFields(fieldSet, new Function<Map<String, String>, Void>() {\n\n            public Void apply(Map<String, String> input) {\n\n                fileCallback.call(CmsJsUtils.convertMapToJsObject(input));\n                return null;\n            }\n        }, errorCallback);\n    }","id":15977,"modified_method":"/**\n     * Uploads multiple files.<p>\n     * \n     * @param fieldNames the array of form field names containing files to upload  \n     * @param fileCallback the callback for the results \n     * @param errorCallback the error handling callback \n     */\n    public void uploadFiles(\n        String[] fieldNames,\n        final I_CmsJavaScriptObjectCallback fileCallback,\n        I_CmsErrorCallback errorCallback) {\n\n        Set<String> fieldSet = new HashSet<String>();\n        for (String field : fieldNames) {\n            fieldSet.add(field);\n        }\n\n        m_formWrapper.uploadFields(fieldSet, new Function<Map<String, String>, Void>() {\n\n            public Void apply(Map<String, String> input) {\n\n                fileCallback.call(CmsJsUtils.convertMapToJsObject(input));\n                return null;\n            }\n        }, errorCallback);\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Creates a new form session to edit the file with the given name using the given form configuration.\n     * \n     * @param configPath the site path of the form configuration \n     * @param fileName the name (not path) of the XML content to edit \n     * @return the id of the newly created form session\n     * \n     * @throws CmsException if something goes wrong \n     */\n    public String createSessionForResource(String configPath, String fileName) throws CmsException {\n\n        CmsFormSession formSession = CmsFormSessionFactory.getInstance().createSessionForFile(\n            getCmsObject(),\n            getRequest(),\n            configPath,\n            fileName);\n        return \"\" + formSession.getId();\n    }","id":15978,"modified_method":"/**\n     * Creates a new form session to edit the file with the given name using the given form configuration.\n     * \n     * @param configPath the site path of the form configuration \n     * @param fileName the name (not path) of the XML content to edit \n     * @return the id of the newly created form session\n     * \n     * @throws CmsFormException if something goes wrong \n     */\n    public String createSessionForResource(String configPath, String fileName) throws CmsFormException {\n\n        CmsFormSession formSession = CmsFormSessionFactory.getInstance().createSessionForFile(\n            getCmsObject(),\n            getRequest(),\n            configPath,\n            fileName);\n        return \"\" + formSession.getId();\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.editors.usergenerated.shared.rpc.I_CmsFormEditService#destroySession(org.opencms.util.CmsUUID)\n     */\n    public void destroySession(CmsUUID sessionId) throws CmsRpcException {\n\n        try {\n            CmsFormSession formSession = getFormSession(sessionId);\n            getRequest().getSession().removeAttribute(\"\" + sessionId);\n            if (formSession != null) {\n                formSession.onSessionDestroyed();\n            }\n\n        } catch (Exception e) {\n            error(e);\n        }\n    }","id":15979,"modified_method":"/**\n     * @see org.opencms.editors.usergenerated.shared.rpc.I_CmsFormEditService#destroySession(org.opencms.util.CmsUUID)\n     */\n    public void destroySession(CmsUUID sessionId) throws CmsFormException {\n\n        try {\n            CmsFormSession formSession = getFormSession(sessionId);\n            getRequest().getSession().removeAttribute(\"\" + sessionId);\n            if (formSession != null) {\n                formSession.onSessionDestroyed();\n            }\n\n        } catch (Exception e) {\n            error(e);\n        }\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.editors.usergenerated.shared.rpc.I_CmsFormEditService#saveContent(org.opencms.util.CmsUUID, java.util.Map)\n     */\n    public Map<String, String> saveContent(CmsUUID sessionId, Map<String, String> contentValues) throws CmsRpcException {\n\n        Map<String, String> result = null;\n        try {\n            CmsFormSession session = getFormSession(sessionId);\n            if ((session != null) && sessionId.equals(session.getId())) {\n\n                CmsXmlContentErrorHandler errorHandler = session.saveContent(contentValues);\n                if (errorHandler.hasErrors()) {\n                    result = errorHandler.getErrors(session.getMessageLocale());\n                } else {\n                    session.finish();\n                    result = Collections.emptyMap();\n                }\n            } else {\n                // invalid session \n\n            }\n        } catch (Exception e) {\n            error(e);\n        }\n        return result;\n    }","id":15980,"modified_method":"/**\n     * @see org.opencms.editors.usergenerated.shared.rpc.I_CmsFormEditService#saveContent(org.opencms.util.CmsUUID, java.util.Map)\n     */\n    public Map<String, String> saveContent(CmsUUID sessionId, Map<String, String> contentValues)\n    throws CmsFormException {\n\n        Map<String, String> result = null;\n        try {\n            CmsFormSession session = getFormSession(sessionId);\n            if ((session != null) && sessionId.equals(session.getId())) {\n\n                CmsXmlContentErrorHandler errorHandler = session.saveContent(contentValues);\n                if (errorHandler.hasErrors()) {\n                    result = errorHandler.getErrors(session.getMessageLocale());\n                } else {\n                    session.finish();\n                    result = Collections.emptyMap();\n                }\n            } else {\n                // invalid session \n\n            }\n        } catch (Exception e) {\n            error(e);\n        }\n        return result;\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.editors.usergenerated.shared.rpc.I_CmsFormEditService#getNewContent(java.lang.String)\n     */\n    public CmsFormContent getNewContent(String configPath) throws CmsRpcException {\n\n        CmsFormContent formContent = null;\n        try {\n            CmsFormSession session = CmsFormSessionFactory.getInstance().createSession(\n                getCmsObject(),\n                getRequest(),\n                configPath);\n            formContent = readContent(session, session.createXmlContent());\n\n        } catch (Exception e) {\n            error(e);\n        }\n\n        return formContent;\n    }","id":15981,"modified_method":"/**\n     * @see org.opencms.editors.usergenerated.shared.rpc.I_CmsFormEditService#getNewContent(java.lang.String)\n     */\n    public CmsFormContent getNewContent(String configPath) throws CmsFormException {\n\n        CmsFormContent formContent = null;\n        try {\n            CmsFormSession session = CmsFormSessionFactory.getInstance().createSession(\n                getCmsObject(),\n                getRequest(),\n                configPath);\n            formContent = readContent(session, session.createXmlContent());\n\n        } catch (Exception e) {\n            error(e);\n        }\n\n        return formContent;\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.editors.usergenerated.shared.rpc.I_CmsFormEditService#getExistingContent(org.opencms.util.CmsUUID)\n     */\n    public CmsFormContent getExistingContent(CmsUUID sessionId) throws CmsRpcException {\n\n        CmsFormContent formContent = null;\n        try {\n            CmsFormSession session = CmsFormSessionFactory.getInstance().getSession(getRequest(), sessionId);\n            formContent = readContent(session, session.getResource());\n        } catch (Exception e) {\n            error(e);\n        }\n\n        return formContent;\n    }","id":15982,"modified_method":"/**\n     * @see org.opencms.editors.usergenerated.shared.rpc.I_CmsFormEditService#getExistingContent(org.opencms.util.CmsUUID)\n     */\n    public CmsFormContent getExistingContent(CmsUUID sessionId) throws CmsFormException {\n\n        CmsFormContent formContent = null;\n        try {\n            CmsFormSession session = CmsFormSessionFactory.getInstance().getSession(getRequest(), sessionId);\n            formContent = readContent(session, session.getResource());\n        } catch (Exception e) {\n            error(e);\n        }\n\n        return formContent;\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Throws an error if the edit resource is already set.<p>\n     * \n     * @throws CmsIllegalStateException if the edit resource is already set \n     */\n    private void checkEditResourceNotSet() throws CmsIllegalStateException {\n\n        if (m_editResource != null) {\n            throw new CmsIllegalStateException(Messages.get().container(\n                Messages.ERR_CANT_EDIT_MULTIPLE_CONTENTS_IN_SESSION_0));\n        }\n    }","id":15983,"modified_method":"/**\n     * Throws an error if the edit resource is already set.<p>\n     * \n     * @throws CmsFormException if the edit resource is already set \n     */\n    private void checkEditResourceNotSet() throws CmsFormException {\n\n        if (m_editResource != null) {\n            String message = Messages.get().container(Messages.ERR_CANT_EDIT_MULTIPLE_CONTENTS_IN_SESSION_0).key(\n                getCmsObject().getRequestContext().getLocale());\n            throw new CmsFormException(CmsFormConstants.ErrorCode.errInvalidAction, message);\n\n        }\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Creates a new resource from upload data.<p>\n     * \n     * @param fieldName the name of the form field for the upload\n     * @param rawFileName the file name\n     * @param content the file content\n     * \n     * @return the newly created resource\n     * \n     * @throws CmsException if creating the resource fails\n     */\n    public CmsResource createUploadResource(String fieldName, String rawFileName, byte[] content) throws CmsException {\n\n        CmsResource result = null;\n        CmsFormSessionSecurityUtil.checkCreateUpload(m_cms, m_configuration, rawFileName, content.length);\n        String baseName = rawFileName;\n\n        // if the given name is a path, make sure we only get the last segment\n\n        int lastSlashPos = Math.max(baseName.lastIndexOf('/'), baseName.lastIndexOf('\\\\'));\n        if (lastSlashPos != -1) {\n            baseName = baseName.substring(1 + lastSlashPos);\n        }\n\n        // translate it so it doesn't contain illegal characters \n\n        baseName = OpenCms.getResourceManager().getFileTranslator().translateResource(baseName);\n\n        // add a macro before the file extension (if there is a file extension, otherwise just append it)\n\n        int dotPos = baseName.lastIndexOf('.');\n        if (dotPos == -1) {\n            baseName = baseName + \"_%(random)\";\n        } else {\n            baseName = baseName.substring(0, dotPos) + \"_%(random)\" + baseName.substring(dotPos);\n        }\n\n        // now prepend the upload folder's path \n\n        String uploadRootPath = m_configuration.getUploadParentFolder().get().getRootPath();\n        String sitePath = CmsStringUtil.joinPaths(m_cms.getRequestContext().removeSiteRoot(uploadRootPath), baseName);\n\n        // ... and replace the macro with random strings until we find a path that isn't already used \n\n        String realSitePath;\n        do {\n            CmsMacroResolver resolver = new CmsMacroResolver();\n            resolver.addMacro(\"random\", RandomStringUtils.random(8, \"0123456789abcdefghijklmnopqrstuvwxyz\"));\n            realSitePath = resolver.resolveMacros(sitePath);\n        } while (m_cms.existsResource(realSitePath));\n        int resTypeId = OpenCms.getResourceManager().getDefaultTypeForName(realSitePath).getTypeId();\n        result = m_cms.createResource(realSitePath, resTypeId, content, null);\n        updateUploadResource(fieldName, result);\n\n        return result;\n    }","id":15984,"modified_method":"/**\n     * Creates a new resource from upload data.<p>\n     * \n     * @param fieldName the name of the form field for the upload\n     * @param rawFileName the file name\n     * @param content the file content\n     * \n     * @return the newly created resource\n     * \n     * @throws CmsFormException if creating the resource fails\n     */\n    public CmsResource createUploadResource(String fieldName, String rawFileName, byte[] content)\n    throws CmsFormException {\n\n        CmsResource result = null;\n        CmsFormSessionSecurityUtil.checkCreateUpload(m_cms, m_configuration, rawFileName, content.length);\n        String baseName = rawFileName;\n\n        // if the given name is a path, make sure we only get the last segment\n\n        int lastSlashPos = Math.max(baseName.lastIndexOf('/'), baseName.lastIndexOf('\\\\'));\n        if (lastSlashPos != -1) {\n            baseName = baseName.substring(1 + lastSlashPos);\n        }\n\n        // translate it so it doesn't contain illegal characters \n\n        baseName = OpenCms.getResourceManager().getFileTranslator().translateResource(baseName);\n\n        // add a macro before the file extension (if there is a file extension, otherwise just append it)\n\n        int dotPos = baseName.lastIndexOf('.');\n        if (dotPos == -1) {\n            baseName = baseName + \"_%(random)\";\n        } else {\n            baseName = baseName.substring(0, dotPos) + \"_%(random)\" + baseName.substring(dotPos);\n        }\n\n        // now prepend the upload folder's path \n\n        String uploadRootPath = m_configuration.getUploadParentFolder().get().getRootPath();\n        String sitePath = CmsStringUtil.joinPaths(m_cms.getRequestContext().removeSiteRoot(uploadRootPath), baseName);\n\n        // ... and replace the macro with random strings until we find a path that isn't already used \n\n        String realSitePath;\n        do {\n            CmsMacroResolver resolver = new CmsMacroResolver();\n            resolver.addMacro(\"random\", RandomStringUtils.random(8, \"0123456789abcdefghijklmnopqrstuvwxyz\"));\n            realSitePath = resolver.resolveMacros(sitePath);\n        } while (m_cms.existsResource(realSitePath));\n        try {\n            int resTypeId = OpenCms.getResourceManager().getDefaultTypeForName(realSitePath).getTypeId();\n            result = m_cms.createResource(realSitePath, resTypeId, content, null);\n            updateUploadResource(fieldName, result);\n            return result;\n        } catch (CmsException e) {\n            LOG.error(e.getLocalizedMessage(), e);\n            throw new CmsFormException(e, CmsFormConstants.ErrorCode.errMiscUploadError, e.getLocalizedMessage());\n        }\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Validates the content values.<p>\n     * \n     * @param contentValues the content values to validate\n     * \n     * @return the validation handler\n     * \n     * @throws CmsException if reading the content file fails\n     */\n    public CmsXmlContentErrorHandler validateContent(Map<String, String> contentValues) throws CmsException {\n\n        checkNotFinished();\n        CmsFile file = m_cms.readFile(m_editResource);\n        CmsXmlContent content = addContentValues(file, contentValues);\n        return content.validate(m_cms);\n    }","id":15985,"modified_method":"/**\n     * Validates the content values.<p>\n     * \n     * @param contentValues the content values to validate\n     * \n     * @return the validation handler\n     * \n     * @throws CmsFormException if reading the content file fails\n     */\n    public CmsXmlContentErrorHandler validateContent(Map<String, String> contentValues) throws CmsFormException {\n\n        checkNotFinished();\n        try {\n            CmsFile file = m_cms.readFile(m_editResource);\n            CmsXmlContent content = addContentValues(file, contentValues);\n            return content.validate(m_cms);\n        } catch (CmsException e) {\n            LOG.error(e.getLocalizedMessage(), e);\n            throw new CmsFormException(e, CmsFormConstants.ErrorCode.errMiscContentError, e.getLocalizedMessage());\n        }\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Creates a new edit resource.<p>\n     * \n     * @return the newly created resource\n     * \n     * @throws CmsException if creating the resource fails\n     */\n    public CmsResource createXmlContent() throws CmsException {\n\n        checkNotFinished();\n        checkEditResourceNotSet();\n\n        CmsFormSessionSecurityUtil.checkCreateContent(m_cms, m_configuration);\n        I_CmsResourceType type = OpenCms.getResourceManager().getResourceType(m_configuration.getResourceType());\n        m_editResource = m_cms.createResource(getNewContentName(), type.getTypeId());\n        return m_editResource;\n    }","id":15986,"modified_method":"/**\n     * Creates a new edit resource.<p>\n     * \n     * @return the newly created resource\n     * \n     * @throws CmsFormException if creating the resource fails\n     */\n    public CmsResource createXmlContent() throws CmsFormException {\n\n        checkNotFinished();\n        checkEditResourceNotSet();\n\n        CmsFormSessionSecurityUtil.checkCreateContent(m_cms, m_configuration);\n        try {\n            I_CmsResourceType type = OpenCms.getResourceManager().getResourceType(m_configuration.getResourceType());\n            m_editResource = m_cms.createResource(getNewContentName(), type.getTypeId());\n            return m_editResource;\n        } catch (CmsException e) {\n            LOG.error(e.getLocalizedMessage(), e);\n            throw new CmsFormException(e, CmsFormConstants.ErrorCode.errMiscContentError, e.getLocalizedMessage());\n        }\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/** \n     * Constructor.<p>\n     * \n     * @param adminCms the cms context with admin privileges \n     * @param cms the cms context\n     * @param configuration the form configuration\n     * \n     * @throws CmsException if creating the session project fails\n     */\n    public CmsFormSession(CmsObject adminCms, CmsObject cms, CmsFormConfiguration configuration)\n    throws CmsException {\n\n        m_adminCms = adminCms;\n        m_configuration = configuration;\n        if (cms.getRequestContext().getCurrentUser().isGuestUser() && m_configuration.getUserForGuests().isPresent()) {\n            m_cms = OpenCms.initCmsObject(CmsFormModuleAction.getAdminCms(), new CmsContextInfo(\n                m_configuration.getUserForGuests().get().getName()));\n            m_cms.getRequestContext().setSiteRoot(cms.getRequestContext().getSiteRoot());\n        } else {\n            m_cms = OpenCms.initCmsObject(cms);\n        }\n        CmsProject project = m_adminCms.createProject(\n            generateProjectName(),\n            \"User generated content project\",\n            m_configuration.getProjectGroup().getName(),\n            m_configuration.getProjectGroup().getName());\n        project.setDeleteAfterPublishing(true);\n        project.setFlags(CmsProject.PROJECT_HIDDEN_IN_SELECTOR);\n        m_adminCms.writeProject(project);\n        m_cms.getRequestContext().setCurrentProject(project);\n    }","id":15987,"modified_method":"/** \n     * Constructor.<p>\n     * \n     * @param adminCms the cms context with admin privileges \n     * @param cms the cms context\n     * @param configuration the form configuration\n     * \n     * @throws CmsException if creating the session project fails\n     */\n    public CmsFormSession(CmsObject adminCms, CmsObject cms, CmsFormConfiguration configuration)\n    throws CmsException {\n\n        m_adminCms = OpenCms.initCmsObject(adminCms);\n        m_configuration = configuration;\n        if (cms.getRequestContext().getCurrentUser().isGuestUser() && m_configuration.getUserForGuests().isPresent()) {\n            m_cms = OpenCms.initCmsObject(CmsFormModuleAction.getAdminCms(), new CmsContextInfo(\n                m_configuration.getUserForGuests().get().getName()));\n            m_cms.getRequestContext().setSiteRoot(cms.getRequestContext().getSiteRoot());\n        } else {\n            m_cms = OpenCms.initCmsObject(cms);\n        }\n        for (CmsObject currentCms : new CmsObject[] {m_cms, m_adminCms}) {\n            currentCms.getRequestContext().setLocale(getMessageLocale());\n        }\n        CmsProject project = m_adminCms.createProject(\n            generateProjectName(),\n            \"User generated content project\",\n            m_configuration.getProjectGroup().getName(),\n            m_configuration.getProjectGroup().getName());\n        project.setDeleteAfterPublishing(true);\n        project.setFlags(CmsProject.PROJECT_HIDDEN_IN_SELECTOR);\n        m_adminCms.writeProject(project);\n        m_cms.getRequestContext().setCurrentProject(project);\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Loads the existing edit resource.<p>\n     * \n     * @param fileName the resource file name\n     * \n     * @return the edit resource\n     * \n     * @throws CmsException if reading the resource fails\n     */\n    public CmsResource loadXmlContent(String fileName) throws CmsException {\n\n        checkNotFinished();\n        checkEditResourceNotSet();\n        if (fileName.contains(\"/\")) {\n            throw new CmsPermissionViolationException(Messages.get().container(\n                Messages.ERR_INVALID_FILE_NAME_TO_LOAD_1,\n                fileName));\n        }\n        String contentSitePath = m_cms.getRequestContext().removeSiteRoot(\n            m_configuration.getContentParentFolder().getRootPath());\n        String path = CmsStringUtil.joinPaths(contentSitePath, fileName);\n        m_editResource = m_cms.readResource(path);\n        CmsLock lock = m_cms.getLock(m_editResource);\n        if (!lock.isOwnedBy(m_cms.getRequestContext().getCurrentUser())) {\n            m_cms.lockResourceTemporary(m_editResource);\n        }\n        return m_editResource;\n    }","id":15988,"modified_method":"/**\n     * Loads the existing edit resource.<p>\n     * \n     * @param fileName the resource file name\n     * \n     * @return the edit resource\n     * \n     * @throws CmsFormException if reading the resource fails\n     */\n    public CmsResource loadXmlContent(String fileName) throws CmsFormException {\n\n        checkNotFinished();\n        checkEditResourceNotSet();\n        if (fileName.contains(\"/\")) {\n            String message = Messages.get().container(Messages.ERR_INVALID_FILE_NAME_TO_LOAD_1, fileName).key(\n                getCmsObject().getRequestContext().getLocale());\n            throw new CmsFormException(CmsFormConstants.ErrorCode.errMiscContentError, message);\n        }\n        try {\n            String contentSitePath = m_cms.getRequestContext().removeSiteRoot(\n                m_configuration.getContentParentFolder().getRootPath());\n            String path = CmsStringUtil.joinPaths(contentSitePath, fileName);\n            m_editResource = m_cms.readResource(path);\n            CmsLock lock = m_cms.getLock(m_editResource);\n            if (!lock.isOwnedBy(m_cms.getRequestContext().getCurrentUser())) {\n                m_cms.lockResourceTemporary(m_editResource);\n            }\n            return m_editResource;\n        } catch (CmsException e) {\n            throw new CmsFormException(CmsFormConstants.ErrorCode.errMiscContentError, e.getLocalizedMessage());\n        }\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Checks that the session is not finished, and throws an exception otherwise.<p>\n     * \n     * @throws CmsIllegalStateException if the session is finished \n     */\n    private void checkNotFinished() throws CmsIllegalStateException {\n\n        if (m_finished) {\n            throw new CmsIllegalStateException(Messages.get().container(Messages.ERR_FORM_SESSION_ALREADY_FINISHED_0\n\n            ));\n        }\n    }","id":15989,"modified_method":"/**\n     * Checks that the session is not finished, and throws an exception otherwise.<p>\n     * \n     * @throws CmsFormException if the session is finished \n     */\n    private void checkNotFinished() throws CmsFormException {\n\n        if (m_finished) {\n            String message = Messages.get().container(Messages.ERR_FORM_SESSION_ALREADY_FINISHED_0).key(\n                getCmsObject().getRequestContext().getLocale());\n            throw new CmsFormException(CmsFormConstants.ErrorCode.errInvalidAction, message);\n        }\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Saves the content values to the sessions edit resource.<p>\n     * \n     * @param contentValues the content values by XPath\n     * \n     * @return the validation handler\n     * \n     * @throws CmsException if writing the content fails\n     */\n    public CmsXmlContentErrorHandler saveContent(Map<String, String> contentValues) throws CmsException {\n\n        checkNotFinished();\n        CmsFile file = m_cms.readFile(m_editResource);\n        CmsXmlContent content = addContentValues(file, contentValues);\n        CmsXmlContentErrorHandler errorHandler = content.validate(m_cms);\n        if (!errorHandler.hasErrors()) {\n            file.setContents(content.marshal());\n            // the file content might have been modified during the write operation\n            file = m_cms.writeFile(file);\n        }\n\n        return errorHandler;\n\n    }","id":15990,"modified_method":"/**\n     * Saves the content values to the sessions edit resource.<p>\n     * \n     * @param contentValues the content values by XPath\n     * \n     * @return the validation handler\n     * \n     * @throws CmsFormException if writing the content fails\n     */\n    public CmsXmlContentErrorHandler saveContent(Map<String, String> contentValues) throws CmsFormException {\n\n        checkNotFinished();\n        try {\n            CmsFile file = m_cms.readFile(m_editResource);\n            CmsXmlContent content = addContentValues(file, contentValues);\n            CmsXmlContentErrorHandler errorHandler = content.validate(m_cms);\n            if (!errorHandler.hasErrors()) {\n                file.setContents(content.marshal());\n                // the file content might have been modified during the write operation\n                file = m_cms.writeFile(file);\n            }\n\n            return errorHandler;\n        } catch (CmsException e) {\n            LOG.error(e.getLocalizedMessage(), e);\n            throw new CmsFormException(e, CmsFormConstants.ErrorCode.errMiscContentError, e.getLocalizedMessage());\n        }\n\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Creates a new editing session.<p>\n     * \n     * @param cms the cms context\n     * @param request the request\n     * @param sitePath the configuration site path\n     * \n     * @return the form session\n     * \n     * @throws CmsException if creating the session fails\n     */\n    public CmsFormSession createSession(CmsObject cms, HttpServletRequest request, String sitePath) throws CmsException {\n\n        CmsFormConfigurationReader reader = new CmsFormConfigurationReader(cms);\n        CmsFile configFile = cms.readFile(sitePath);\n        CmsFormConfiguration config;\n        config = reader.readConfiguration(configFile);\n        return createSession(cms, request, config);\n    }","id":15991,"modified_method":"/**\n     * Creates a new editing session.<p>\n     * \n     * @param cms the cms context\n     * @param request the request\n     * @param sitePath the configuration site path\n     * \n     * @return the form session\n     * \n     * @throws CmsFormException if creating the session fails\n     */\n    public CmsFormSession createSession(CmsObject cms, HttpServletRequest request, String sitePath)\n    throws CmsFormException {\n\n        CmsFormConfigurationReader reader = new CmsFormConfigurationReader(cms);\n        CmsFormConfiguration config = null;\n        try {\n            CmsFile configFile = cms.readFile(sitePath);\n            config = reader.readConfiguration(configFile);\n        } catch (Exception e) {\n            LOG.error(e.getLocalizedMessage(), e);\n            throw new CmsFormException(e, CmsFormConstants.ErrorCode.errConfiguration, e.getLocalizedMessage());\n        }\n        return createSession(cms, request, config);\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Creates a new editing session.<p>\n     * \n     * @param cms the cms context\n     * @param request the request\n     * @param config the configuration\n     * \n     * @return the form session\n     * \n     * @throws CmsException if creating the session fails\n     */\n    public CmsFormSession createSession(CmsObject cms, HttpServletRequest request, CmsFormConfiguration config)\n    throws CmsException {\n\n        CmsFormSession session = createSession(cms, config);\n        HttpSession httpSession = request.getSession(true);\n        httpSession.setAttribute(\"\" + session.getId(), session);\n        return session;\n    }","id":15992,"modified_method":"/**\n     * Creates a new editing session.<p>\n     * \n     * @param cms the cms context\n     * @param request the request\n     * @param config the configuration\n     * \n     * @return the form session\n     * \n     * @throws CmsFormException if creating the session fails\n     */\n    public CmsFormSession createSession(CmsObject cms, HttpServletRequest request, CmsFormConfiguration config)\n    throws CmsFormException {\n\n        CmsFormSession session = createSession(cms, config);\n        HttpSession httpSession = request.getSession(true);\n        httpSession.setAttribute(\"\" + session.getId(), session);\n        return session;\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"public CmsFormSession createSessionForFile(\n        CmsObject cms,\n        HttpServletRequest request,\n        String configPath,\n        String fileName) throws CmsException {\n\n        CmsFormSession session = createSession(cms, request, configPath);\n        session.loadXmlContent(fileName);\n        return session;\n    }","id":15993,"modified_method":"/**\n     * Creates a new session for a given file.<p>\n     * \n     * @param cms the CMS context to use \n     * @param request the current request \n     * @param configPath the path of the form configuration \n     * @param fileName the file name (*not* path) of the XML content for which the session should be initialized\n     *   \n     * @return the newly created session \n     * @throws CmsFormException if something goes wrong \n     */\n    public CmsFormSession createSessionForFile(\n        CmsObject cms,\n        HttpServletRequest request,\n        String configPath,\n        String fileName) throws CmsFormException {\n\n        CmsFormSession session = createSession(cms, request, configPath);\n        session.loadXmlContent(fileName);\n        return session;\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Creates a new editing session.<p>\n     * \n     * @param cms the cms context\n     * @param config the configuration\n     * \n     * @return the form session\n     * \n     * @throws CmsException if creating the session fails\n     */\n    private CmsFormSession createSession(CmsObject cms, CmsFormConfiguration config) throws CmsException {\n\n        if (getQueue(config).waitForSlot()) {\n            return new CmsFormSession(CmsFormModuleAction.getAdminCms(), cms, config);\n        } else {\n            throw new CmsSecurityException(Messages.get().container(Messages.ERR_WAIT_QUEUE_EXCEEDED_0));\n        }\n    }","id":15994,"modified_method":"/**\n     * Creates a new editing session.<p>\n     * \n     * @param cms the cms context\n     * @param config the configuration\n     * \n     * @return the form session\n     * \n     * @throws CmsFormException if the session creation fails \n     */\n    private CmsFormSession createSession(CmsObject cms, CmsFormConfiguration config) throws CmsFormException {\n\n        if (getQueue(config).waitForSlot()) {\n            try {\n                return new CmsFormSession(CmsFormModuleAction.getAdminCms(), cms, config);\n            } catch (CmsException e) {\n                LOG.error(e.getLocalizedMessage(), e);\n                throw new CmsFormException(e);\n            }\n        } else {\n            String message = Messages.get().container(Messages.ERR_WAIT_QUEUE_EXCEEDED_0).key(\n                cms.getRequestContext().getLocale());\n            throw new CmsFormException(CmsFormConstants.ErrorCode.errMaxQueueLengthExceeded, message);\n        }\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Checks whether an  uploaded file can be created in the VFS, and throws an exception otherwise.\n     * \n     * @param cms the current CMS context \n     * @param config the form configuration \n     * @param name the file name of the uploaded file \n     * @param size the size of the uploaded file \n     * \n     * @throws CmsPermissionViolationException if creating the upload in the VFS would violate the limits set in the configuration\n     * @throws CmsException for all other errors \n     */\n    public static void checkCreateUpload(CmsObject cms, CmsFormConfiguration config, String name, long size)\n    throws CmsPermissionViolationException, CmsException {\n\n        if (!config.getUploadParentFolder().isPresent()) {\n            throw new CmsPermissionViolationException(Messages.get().container(Messages.ERR_NO_UPLOADS_ALLOWED_0));\n        }\n\n        if (config.getMaxUploadSize().isPresent()) {\n            if (config.getMaxUploadSize().get().longValue() < size) {\n                throw new CmsPermissionViolationException(Messages.get().container(Messages.ERR_UPLOAD_TOO_BIG_1, name));\n            }\n        }\n\n        if (config.getValidExtensions().isPresent()) {\n            List<String> validExtensions = config.getValidExtensions().get();\n            boolean foundExtension = false;\n            for (String extension : validExtensions) {\n                if (name.toLowerCase().endsWith(extension.toLowerCase())) {\n                    foundExtension = true;\n                    break;\n                }\n            }\n            if (!foundExtension) {\n                throw new CmsPermissionViolationException(Messages.get().container(\n                    Messages.ERR_UPLOAD_FILE_EXTENSION_NOT_ALLOWED_1,\n                    name));\n            }\n        }\n    }","id":15995,"modified_method":"/**\n     * Checks whether an  uploaded file can be created in the VFS, and throws an exception otherwise.\n     * \n     * @param cms the current CMS context \n     * @param config the form configuration \n     * @param name the file name of the uploaded file \n     * @param size the size of the uploaded file\n     * \n     *  @throws CmsFormException if something goes wrong \n     * \n     */\n    public static void checkCreateUpload(CmsObject cms, CmsFormConfiguration config, String name, long size)\n    throws CmsFormException {\n\n        if (!config.getUploadParentFolder().isPresent()) {\n            String message = Messages.get().container(Messages.ERR_NO_UPLOADS_ALLOWED_0).key(\n                cms.getRequestContext().getLocale());\n            throw new CmsFormException(CmsFormConstants.ErrorCode.errNoUploadAllowed, message);\n        }\n\n        if (config.getMaxUploadSize().isPresent()) {\n            if (config.getMaxUploadSize().get().longValue() < size) {\n                String message = Messages.get().container(Messages.ERR_UPLOAD_TOO_BIG_1, name).key(\n                    cms.getRequestContext().getLocale());\n                throw new CmsFormException(CmsFormConstants.ErrorCode.errMaxUploadSizeExceeded, message);\n            }\n        }\n\n        if (config.getValidExtensions().isPresent()) {\n            List<String> validExtensions = config.getValidExtensions().get();\n            boolean foundExtension = false;\n            for (String extension : validExtensions) {\n                if (name.toLowerCase().endsWith(extension.toLowerCase())) {\n                    foundExtension = true;\n                    break;\n                }\n            }\n            if (!foundExtension) {\n                String message = Messages.get().container(Messages.ERR_UPLOAD_FILE_EXTENSION_NOT_ALLOWED_1, name).key(\n                    cms.getRequestContext().getLocale());\n                throw new CmsFormException(CmsFormConstants.ErrorCode.errInvalidExtension, message);\n            }\n        }\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Checks whether a new XML content may be created and throws an exception if this is not the case.<p>\n     * \n     * @param cms the current CMS context \n     * @param config the form configuration \n     * \n     * @throws CmsPermissionViolationException if creating a content would violate the limits set in the configuration\n     * @throws CmsException for all other errors  \n     */\n    public static void checkCreateContent(CmsObject cms, CmsFormConfiguration config)\n    throws CmsPermissionViolationException, CmsException {\n\n        if (config.getMaxContentNumber().isPresent()) {\n            int maxContents = config.getMaxContentNumber().get().intValue();\n            String sitePath = cms.getSitePath(config.getContentParentFolder());\n            if (cms.getFilesInFolder(sitePath).size() >= maxContents) {\n                throw new CmsSecurityException(Messages.get().container(\n                    Messages.ERR_TOO_MANY_CONTENTS_1,\n                    config.getContentParentFolder()));\n            }\n        }\n    }","id":15996,"modified_method":"/**\n     * Checks whether a new XML content may be created and throws an exception if this is not the case.<p>\n     * \n     * @param cms the current CMS context \n     * @param config the form configuration\n     * \n     *  @throws CmsFormException if something goes wrong \n     */\n    public static void checkCreateContent(CmsObject cms, CmsFormConfiguration config) throws CmsFormException {\n\n        if (config.getMaxContentNumber().isPresent()) {\n            int maxContents = config.getMaxContentNumber().get().intValue();\n            String sitePath = cms.getSitePath(config.getContentParentFolder());\n            try {\n                if (cms.getFilesInFolder(sitePath).size() >= maxContents) {\n\n                    String message = Messages.get().getBundle(cms.getRequestContext().getLocale()).key(\n                        Messages.ERR_TOO_MANY_CONTENTS_1,\n                        config.getContentParentFolder());\n                    throw new CmsFormException(CmsFormConstants.ErrorCode.errMaxContentsExceeded, message);\n                }\n            } catch (CmsException e) {\n                LOG.error(e.getLocalizedMessage(), e);\n                throw new CmsFormException(e);\n            }\n        }\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Uploads files from the given file input fields.<p<\n     * \n     * @param fields the set of names of fields containing the files to upload \n     * @param filenameCallback the callback to call with the resulting map from field names to file paths  \n     * @param errorCallback the callback to call with an error message \n     */\n    public void uploadFields(\n        final Set<String> fields,\n        final Function<Map<String, String>, Void> filenameCallback,\n        final I_CmsStringCallback errorCallback) {\n\n        disableAllFileFieldsExcept(fields);\n        final String id = CmsJsUtils.generateRandomId();\n        updateFormAction(id);\n        // Using an array here because we can only store the handler registration after it has been created , but  \n        final HandlerRegistration[] registration = {null};\n        registration[0] = addSubmitCompleteHandler(new SubmitCompleteHandler() {\n\n            @SuppressWarnings(\"synthetic-access\")\n            public void onSubmitComplete(SubmitCompleteEvent event) {\n\n                enableAllFileFields();\n                registration[0].removeHandler();\n                CmsUUID sessionId = m_formSession.internalGetSessionId();\n                RequestBuilder requestBuilder = CmsXmlContentFormApi.SERVICE.uploadFiles(\n                    sessionId,\n                    fields,\n                    id,\n                    new AsyncCallback<Map<String, String>>() {\n\n                        public void onFailure(Throwable caught) {\n\n                            errorCallback.call(caught.getMessage());\n\n                        }\n\n                        public void onSuccess(Map<String, String> fileNames) {\n\n                            filenameCallback.apply(fileNames);\n\n                        }\n                    });\n                m_formSession.getContentFormApi().getRpcHelper().executeRpc(requestBuilder);\n                m_formSession.getContentFormApi().getRequestCounter().decrement();\n            }\n        });\n        m_formSession.getContentFormApi().getRequestCounter().increment();\n        submit();\n    }","id":15997,"modified_method":"/**\n     * Uploads files from the given file input fields.<p<\n     * \n     * @param fields the set of names of fields containing the files to upload \n     * @param filenameCallback the callback to call with the resulting map from field names to file paths  \n     * @param errorCallback the callback to call with an error message \n     */\n    public void uploadFields(\n        final Set<String> fields,\n        final Function<Map<String, String>, Void> filenameCallback,\n        final I_CmsErrorCallback errorCallback) {\n\n        disableAllFileFieldsExcept(fields);\n        final String id = CmsJsUtils.generateRandomId();\n        updateFormAction(id);\n        // Using an array here because we can only store the handler registration after it has been created , but  \n        final HandlerRegistration[] registration = {null};\n        registration[0] = addSubmitCompleteHandler(new SubmitCompleteHandler() {\n\n            @SuppressWarnings(\"synthetic-access\")\n            public void onSubmitComplete(SubmitCompleteEvent event) {\n\n                enableAllFileFields();\n                registration[0].removeHandler();\n                CmsUUID sessionId = m_formSession.internalGetSessionId();\n                RequestBuilder requestBuilder = CmsXmlContentFormApi.SERVICE.uploadFiles(\n                    sessionId,\n                    fields,\n                    id,\n                    new AsyncCallback<Map<String, String>>() {\n\n                        public void onFailure(Throwable caught) {\n\n                            m_formSession.getContentFormApi().handleError(caught, errorCallback);\n\n                        }\n\n                        public void onSuccess(Map<String, String> fileNames) {\n\n                            filenameCallback.apply(fileNames);\n\n                        }\n                    });\n                m_formSession.getContentFormApi().getRpcHelper().executeRpc(requestBuilder);\n                m_formSession.getContentFormApi().getRequestCounter().decrement();\n            }\n        });\n        m_formSession.getContentFormApi().getRequestCounter().increment();\n        submit();\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Default constructor for gwt-exporter.<p>\n     */\n    public CmsXmlContentFormApi() {\n\n        // do nothing \n\n    }","id":15998,"modified_method":"/**\n     * Default constructor for gwt-exporter.<p>\n     */\n    public CmsXmlContentFormApi() {\n\n        GWT.setUncaughtExceptionHandler(new UncaughtExceptionHandler() {\n\n            public void onUncaughtException(final Throwable e) {\n\n                handleError(e, new I_CmsErrorCallback() {\n\n                    public void call(String errorType, String message, JavaScriptObject additionalData) {\n\n                        CmsDebugLog.consoleLog(\"uncaught error: \" + message);\n                        throw new RuntimeException(e);\n                    }\n                });\n\n            }\n        });\n\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Creates a new session for a newly created XML content.<p>\n     * \n     * @param formConfigPath the form configuration path \n     * @param formElement the form element \n     * @param onSuccess the function to call in case of success \n     * @param onError the function to call in case an error occurs \n     */\n    public void initFormForNewContent(\n        final String formConfigPath,\n        final Element formElement,\n        final I_CmsClientFormSessionCallback onSuccess,\n        final I_CmsStringCallback onError) {\n\n        getRpcHelper().executeRpc(SERVICE.getNewContent(formConfigPath, new AsyncCallback<CmsFormContent>() {\n\n            public void onFailure(Throwable caught) {\n\n                onError.call(\"RPC call failed: \" + caught);\n            }\n\n            public void onSuccess(CmsFormContent result) {\n\n                CmsClientFormSession session = new CmsClientFormSession(CmsXmlContentFormApi.this, result);\n                session.initFormElement(formElement);\n                onSuccess.call(session);\n            }\n        }));\n    }","id":15999,"modified_method":"/**\n     * Creates a new session for a newly created XML content.<p>\n     * \n     * @param formConfigPath the form configuration path \n     * @param formElement the form element \n     * @param onSuccess the function to call in case of success \n     * @param onError the function to call in case an error occurs \n     */\n    public void initFormForNewContent(\n        final String formConfigPath,\n        final Element formElement,\n        final I_CmsClientFormSessionCallback onSuccess,\n        final I_CmsErrorCallback onError) {\n\n        getRpcHelper().executeRpc(SERVICE.getNewContent(formConfigPath, new AsyncCallback<CmsFormContent>() {\n\n            public void onFailure(Throwable caught) {\n\n                handleError(caught, onError);\n            }\n\n            public void onSuccess(CmsFormContent result) {\n\n                CmsClientFormSession session = new CmsClientFormSession(CmsXmlContentFormApi.this, result);\n                session.initFormElement(formElement);\n                onSuccess.call(session);\n            }\n        }));\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"}]